[
  {
    "sha": "7d58ce5badb089b561824e75fa4539d29ba8587b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZDU4Y2U1YmFkYjA4OWI1NjE4MjRlNzVmYTQ1MzlkMjliYTg1ODdi",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-03-31T15:20:22Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-03-31T16:31:36Z"
      },
      "message": "Consensus: There's only one type of consensus flags",
      "tree": {
        "sha": "0742899da92d89b449e4c61f2c9e5081fb7013de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0742899da92d89b449e4c61f2c9e5081fb7013de"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d58ce5badb089b561824e75fa4539d29ba8587b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d58ce5badb089b561824e75fa4539d29ba8587b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7d58ce5badb089b561824e75fa4539d29ba8587b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d58ce5badb089b561824e75fa4539d29ba8587b/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "28ad4d9fc2be102786a8c6c32ebecb466b2a03dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28ad4d9fc2be102786a8c6c32ebecb466b2a03dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/28ad4d9fc2be102786a8c6c32ebecb466b2a03dd"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 12,
      "deletions": 16
    },
    "files": [
      {
        "sha": "0ade4d66de6d79d660b2386e8286a7e98683d4f6",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d58ce5badb089b561824e75fa4539d29ba8587b/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d58ce5badb089b561824e75fa4539d29ba8587b/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=7d58ce5badb089b561824e75fa4539d29ba8587b",
        "patch": "@@ -13,13 +13,4 @@ static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n static const int COINBASE_MATURITY = 100;\n \n-/** Flags for nSequence and nLockTime locks */\n-enum {\n-    /* Interpret sequence numbers as relative lock-time constraints. */\n-    LOCKTIME_VERIFY_SEQUENCE = (1 << 0),\n-\n-    /* Use GetMedianTimePast() instead of nTime for end point timestamp. */\n-    LOCKTIME_MEDIAN_TIME_PAST = (1 << 1),\n-};\n-\n #endif // BITCOIN_CONSENSUS_CONSENSUS_H"
      },
      {
        "sha": "71b5b8d27d01663afd2fad563cafad57a5f599d0",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d58ce5badb089b561824e75fa4539d29ba8587b/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d58ce5badb089b561824e75fa4539d29ba8587b/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=7d58ce5badb089b561824e75fa4539d29ba8587b",
        "patch": "@@ -2287,10 +2287,9 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     }\n \n     // Start enforcing BIP68 (sequence locks) and BIP112 (CHECKSEQUENCEVERIFY) using versionbits logic.\n-    int nLockTimeFlags = 0;\n     if (VersionBitsState(pindex->pprev, chainparams.GetConsensus(), Consensus::DEPLOYMENT_CSV, versionbitscache) == THRESHOLD_ACTIVE) {\n         flags |= SCRIPT_VERIFY_CHECKSEQUENCEVERIFY;\n-        nLockTimeFlags |= LOCKTIME_VERIFY_SEQUENCE;\n+        flags |= LOCKTIME_VERIFY_SEQUENCE;\n     }\n \n     int64_t nTime2 = GetTimeMicros(); nTimeForks += nTime2 - nTime1;\n@@ -2332,7 +2331,7 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n                 prevheights[j] = view.AccessCoins(tx.vin[j].prevout.hash)->nHeight;\n             }\n \n-            if (!SequenceLocks(tx, nLockTimeFlags, &prevheights, *pindex)) {\n+            if (!SequenceLocks(tx, flags, &prevheights, *pindex)) {\n                 return state.DoS(100, error(\"%s: contains a non-BIP68-final transaction\", __func__),\n                                  REJECT_INVALID, \"bad-txns-nonfinal\");\n             }\n@@ -3302,12 +3301,12 @@ bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIn\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n \n     // Start enforcing BIP113 (Median Time Past) using versionbits logic.\n-    int nLockTimeFlags = 0;\n+    int flags = 0;\n     if (VersionBitsState(pindexPrev, consensusParams, Consensus::DEPLOYMENT_CSV, versionbitscache) == THRESHOLD_ACTIVE) {\n-        nLockTimeFlags |= LOCKTIME_MEDIAN_TIME_PAST;\n+        flags |= LOCKTIME_MEDIAN_TIME_PAST;\n     }\n \n-    int64_t nLockTimeCutoff = (nLockTimeFlags & LOCKTIME_MEDIAN_TIME_PAST)\n+    int64_t nLockTimeCutoff = (flags & LOCKTIME_MEDIAN_TIME_PAST)\n                               ? pindexPrev->GetMedianTimePast()\n                               : block.GetBlockTime();\n "
      },
      {
        "sha": "a051b2ffdccd104d06249ca4565a747a6e8f38dd",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d58ce5badb089b561824e75fa4539d29ba8587b/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d58ce5badb089b561824e75fa4539d29ba8587b/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=7d58ce5badb089b561824e75fa4539d29ba8587b",
        "patch": "@@ -27,7 +27,7 @@ enum\n     SIGHASH_ANYONECANPAY = 0x80,\n };\n \n-/** Script verification flags */\n+/** Consensus verification flags */\n enum\n {\n     SCRIPT_VERIFY_NONE      = 0,\n@@ -86,6 +86,12 @@ enum\n     //\n     // See BIP112 for details\n     SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = (1U << 10),\n+\n+    /* BIP68: Interpret sequence numbers as relative lock-time constraints. */\n+    LOCKTIME_VERIFY_SEQUENCE = (1U << 11),\n+\n+    /* BIP113: Use GetMedianTimePast() instead of nTime for end point timestamp. */\n+    LOCKTIME_MEDIAN_TIME_PAST = (1U << 12),\n };\n \n bool CheckSignatureEncoding(const std::vector<unsigned char> &vchSig, unsigned int flags, ScriptError* serror);"
      }
    ]
  },
  {
    "sha": "22a80055021cdfa6f6bd1496ce15308285424c29",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMmE4MDA1NTAyMWNkZmE2ZjZiZDE0OTZjZTE1MzA4Mjg1NDI0YzI5",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-03-31T16:31:18Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-03-31T16:32:17Z"
      },
      "message": "Example: Next standard flag\n\nWe don't need separate flag arguments [trust me, Consensus::VerifyBlock() will be ugly enough already\nwithout 6 different types of flags as parameters already] for different validation levels.\nUniform naming patterns for the constants should be more than enough for this.\n\nFortunately, we redundantly prefixed all the consensus flags with \"SCRIPT_\", and \"LOCKTIME_\" respected the proposed naming pattern (just one in the an infinite space of bike-shedding possibilities to freely explore without universal optimization function).\nThat means stablishing the naming pattern VALIDATIONLEVEL_* is free in disruption terms.\nI hope the pattern VALIDATIONLEVEL_<FEW_DESCRIPTIVE_WORDS_FOR_FEATURE>_* will be uncontroversial as well.\nThen I conclude with the suggestion, replace the asterisk with the bip number, why not?",
      "tree": {
        "sha": "118523e3b792305d52bbc57b2542e57f9a7c6262",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/118523e3b792305d52bbc57b2542e57f9a7c6262"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22a80055021cdfa6f6bd1496ce15308285424c29",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22a80055021cdfa6f6bd1496ce15308285424c29",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/22a80055021cdfa6f6bd1496ce15308285424c29",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22a80055021cdfa6f6bd1496ce15308285424c29/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7d58ce5badb089b561824e75fa4539d29ba8587b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d58ce5badb089b561824e75fa4539d29ba8587b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7d58ce5badb089b561824e75fa4539d29ba8587b"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 15,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e3580d01f258cf914b9f5bcc6f75f4bfe1a99a6f",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22a80055021cdfa6f6bd1496ce15308285424c29/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22a80055021cdfa6f6bd1496ce15308285424c29/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=22a80055021cdfa6f6bd1496ce15308285424c29",
        "patch": "@@ -14,6 +14,21 @@\n \n class CCoinsViewCache;\n \n+/**\n+ * Standard verification flags.\n+ * The bits cannot conflict with \"Consensus verification flags\" (see SCRIPT_VERIFY_NONE).\n+ */\n+enum\n+{\n+    /**\n+     * BIPNEXT: Use this for the next standard feature candidate\n+     * to become consensus later. This applies in VALIDATIONLEVEL or\n+     * below. Existing validation levels: SCRIPT, LOCKTIME.\n+     * Candidates: COINBASETX, TX, HEADER, BLOCK.\n+     */\n+    VALIDATIONLEVEL_FEATURE_NEXT = (1U << 31),\n+};\n+\n /** Default for -blockmaxsize and -blockminsize, which control the range of sizes the mining code will create **/\n static const unsigned int DEFAULT_BLOCK_MAX_SIZE = 750000;\n static const unsigned int DEFAULT_BLOCK_MIN_SIZE = 0;"
      }
    ]
  }
]