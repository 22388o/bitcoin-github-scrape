[
  {
    "sha": "0e3a78a8ab7ab5da71bd5e2f428ec3a2c9ad0901",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTNhNzhhOGFiN2FiNWRhNzFiZDVlMmY0MjhlYzNhMmM5YWQwOTAx",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-11-09T15:27:41Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-11-09T15:27:41Z"
      },
      "message": "fuzz: Check for addrv1 compatibility before using addrv1 serializer/deserializer on CSubNet",
      "tree": {
        "sha": "454a70e387dccfb6c68ea6269d3408bb1b285382",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/454a70e387dccfb6c68ea6269d3408bb1b285382"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e3a78a8ab7ab5da71bd5e2f428ec3a2c9ad0901",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e3a78a8ab7ab5da71bd5e2f428ec3a2c9ad0901",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0e3a78a8ab7ab5da71bd5e2f428ec3a2c9ad0901",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e3a78a8ab7ab5da71bd5e2f428ec3a2c9ad0901/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7e373294a5ae819099c39d9d03d1f5a311d63cfc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e373294a5ae819099c39d9d03d1f5a311d63cfc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7e373294a5ae819099c39d9d03d1f5a311d63cfc"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 21,
      "deletions": 10
    },
    "files": [
      {
        "sha": "10b9fbe2afb313c18335c23b8a9c447078d12606",
        "filename": "src/test/fuzz/deserialize.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 10,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e3a78a8ab7ab5da71bd5e2f428ec3a2c9ad0901/src/test/fuzz/deserialize.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e3a78a8ab7ab5da71bd5e2f428ec3a2c9ad0901/src/test/fuzz/deserialize.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/deserialize.cpp?ref=0e3a78a8ab7ab5da71bd5e2f428ec3a2c9ad0901",
        "patch": "@@ -15,6 +15,7 @@\n #include <net.h>\n #include <netbase.h>\n #include <node/utxo_snapshot.h>\n+#include <optional.h>\n #include <primitives/block.h>\n #include <protocol.h>\n #include <psbt.h>\n@@ -61,15 +62,19 @@ T Deserialize(CDataStream ds)\n }\n \n template <typename T>\n-void DeserializeFromFuzzingInput(const std::vector<uint8_t>& buffer, T& obj)\n+void DeserializeFromFuzzingInput(const std::vector<uint8_t>& buffer, T& obj, const Optional<int> protocol_version = nullopt)\n {\n     CDataStream ds(buffer, SER_NETWORK, INIT_PROTO_VERSION);\n-    try {\n-        int version;\n-        ds >> version;\n-        ds.SetVersion(version);\n-    } catch (const std::ios_base::failure&) {\n-        throw invalid_fuzzing_input_exception();\n+    if (protocol_version) {\n+        ds.SetVersion(*protocol_version);\n+    } else {\n+        try {\n+            int version;\n+            ds >> version;\n+            ds.SetVersion(version);\n+        } catch (const std::ios_base::failure&) {\n+            throw invalid_fuzzing_input_exception();\n+        }\n     }\n     try {\n         ds >> obj;\n@@ -125,9 +130,15 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         CScript script;\n         DeserializeFromFuzzingInput(buffer, script);\n #elif SUB_NET_DESERIALIZE\n-        CSubNet sub_net;\n-        DeserializeFromFuzzingInput(buffer, sub_net);\n-        AssertEqualAfterSerializeDeserialize(sub_net);\n+        CSubNet sub_net_1;\n+        DeserializeFromFuzzingInput(buffer, sub_net_1, INIT_PROTO_VERSION);\n+        AssertEqualAfterSerializeDeserialize(sub_net_1, INIT_PROTO_VERSION);\n+        CSubNet sub_net_2;\n+        DeserializeFromFuzzingInput(buffer, sub_net_2, INIT_PROTO_VERSION | ADDRV2_FORMAT);\n+        AssertEqualAfterSerializeDeserialize(sub_net_2, INIT_PROTO_VERSION | ADDRV2_FORMAT);\n+        CSubNet sub_net_3;\n+        DeserializeFromFuzzingInput(buffer, sub_net_3);\n+        AssertEqualAfterSerializeDeserialize(sub_net_3, INIT_PROTO_VERSION | ADDRV2_FORMAT);\n #elif TX_IN_DESERIALIZE\n         CTxIn tx_in;\n         DeserializeFromFuzzingInput(buffer, tx_in);"
      }
    ]
  },
  {
    "sha": "79b8f8d5749fc676d9eeca0296172b7cdbbf2238",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OWI4ZjhkNTc0OWZjNjc2ZDllZWNhMDI5NjE3MmI3Y2RiYmYyMjM4",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-11-09T15:29:15Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-11-09T15:29:15Z"
      },
      "message": "fuzz: Assert roundtrip equality for both addrv1 and addrv2 versions of CService",
      "tree": {
        "sha": "914c1aa3cbaf7215f08e742034cb8982147c8f73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/914c1aa3cbaf7215f08e742034cb8982147c8f73"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79b8f8d5749fc676d9eeca0296172b7cdbbf2238",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79b8f8d5749fc676d9eeca0296172b7cdbbf2238",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/79b8f8d5749fc676d9eeca0296172b7cdbbf2238",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79b8f8d5749fc676d9eeca0296172b7cdbbf2238/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e3a78a8ab7ab5da71bd5e2f428ec3a2c9ad0901",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e3a78a8ab7ab5da71bd5e2f428ec3a2c9ad0901",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e3a78a8ab7ab5da71bd5e2f428ec3a2c9ad0901"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8ca5366c8a326ab6089cb7a4d939de3fa5d39dfd",
        "filename": "src/test/fuzz/deserialize.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79b8f8d5749fc676d9eeca0296172b7cdbbf2238/src/test/fuzz/deserialize.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79b8f8d5749fc676d9eeca0296172b7cdbbf2238/src/test/fuzz/deserialize.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/deserialize.cpp?ref=79b8f8d5749fc676d9eeca0296172b7cdbbf2238",
        "patch": "@@ -206,6 +206,13 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n             AssertEqualAfterSerializeDeserialize(s);\n         }\n         AssertEqualAfterSerializeDeserialize(s, INIT_PROTO_VERSION | ADDRV2_FORMAT);\n+        CService s1;\n+        DeserializeFromFuzzingInput(buffer, s1, INIT_PROTO_VERSION);\n+        AssertEqualAfterSerializeDeserialize(s1, INIT_PROTO_VERSION);\n+        assert(s1.IsAddrV1Compatible());\n+        CService s2;\n+        DeserializeFromFuzzingInput(buffer, s2, INIT_PROTO_VERSION | ADDRV2_FORMAT);\n+        AssertEqualAfterSerializeDeserialize(s2, INIT_PROTO_VERSION | ADDRV2_FORMAT);\n #elif MESSAGEHEADER_DESERIALIZE\n         CMessageHeader mh;\n         DeserializeFromFuzzingInput(buffer, mh);"
      }
    ]
  }
]