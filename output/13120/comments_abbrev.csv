practicalswift,2018-04-30T05:51:16Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/13120#issuecomment-385317795,385317795,
jimpo,2018-05-01T22:53:22Z,utACK fae0e4f,https://github.com/bitcoin/bitcoin/pull/13120#issuecomment-385813887,385813887,
meshcollider,2018-05-02T09:11:33Z,utACK https://github.com/bitcoin/bitcoin/pull/13120/commits/fae0e4f3309eff88e9b3d50518b1f86413d399ce,https://github.com/bitcoin/bitcoin/pull/13120#issuecomment-385914144,385914144,
MarcoFalke,2018-05-02T18:33:23Z,Note that the test changes can be reviewed with leading white space ignored: `git diff fae0e4f~ fae0e4f --ignore-all-space ./test/`,https://github.com/bitcoin/bitcoin/pull/13120#issuecomment-386077077,386077077,
jnewbery,2018-05-08T19:03:50Z,ACK 340720c5d3bef6b61e6561aa505732ec51e4b565,https://github.com/bitcoin/bitcoin/pull/13120#issuecomment-387508518,387508518,
sdaftuar,2018-05-09T15:34:09Z,"I think this is a good idea, but I struggle with one issue.  I think it's reasonably likely that I'm being overly pedantic, but here goes anyway:\n\nI believe our code should be robust and internally consistent.  The existing code is very robust -- if we somehow end up on a branch where BIP 141 is not active, then we'll stop allowing new segwit transactions to our mempool.  After #11739, this is",https://github.com/bitcoin/bitcoin/pull/13120#issuecomment-387780367,387780367,
MarcoFalke,2018-05-09T16:41:47Z,"I think we are slightly more internally consistent with this change, considering that the wallet already treats segwit as always active and feeds the mempool with segwit transactions (that are potentially rejected, based on the versionbits-state of the node's tip).\n\nNote that our miner would not include segwit transactions until the segwit commitment is allowed in the coinbase. So I think we a",https://github.com/bitcoin/bitcoin/pull/13120#issuecomment-387801134,387801134,
sdaftuar,2018-05-09T16:52:36Z,"Agreed, I had overlooked the mining logic that remains in place, which would prevent including segwit transactions if somehow BIP 141 were not active on the chain.  So indeed I believe that this change would not result in internally inconsistent behavior, merely suboptimal behavior, which I think is totally fine in such a case.\n\nI do think that it would be somewhat better to also move forward ",https://github.com/bitcoin/bitcoin/pull/13120#issuecomment-387804210,387804210,
MarcoFalke,2018-05-13T15:19:15Z,Squashed and rebased. (Only merge conflict was in the functional tests),https://github.com/bitcoin/bitcoin/pull/13120#issuecomment-388634521,388634521,
jnewbery,2018-05-16T21:23:19Z,re-utACK fa2a73a41e5d196c7c82ed1fd451e989a31aef37,https://github.com/bitcoin/bitcoin/pull/13120#issuecomment-389670289,389670289,
MarcoFalke,2018-05-29T20:52:14Z,Rebased to accommodate for moved file in `test/lint` (no code changes),https://github.com/bitcoin/bitcoin/pull/13120#issuecomment-392940348,392940348,
laanwj,2018-06-12T15:20:29Z,utACK fa7a6cf1b36284db70e941bd2915fd6edbb0f9d6,https://github.com/bitcoin/bitcoin/pull/13120#issuecomment-396628792,396628792,
jnewbery,2018-05-02T21:25:34Z,"I think this whole block can be removed (`self.log.info(""Verify default node can't accept any witness format txs before fork"")` downwards). The previuos `self.fail_accept()` calls are testing transactions that are invalid both before and after the fork due to missing signatures.",https://github.com/bitcoin/bitcoin/pull/13120#discussion_r185643579,185643579,test/functional/feature_segwit.py
jnewbery,2018-05-02T21:28:34Z,"Update comment above this function (`V0 segwit outputs should be standard after activation, but not before.`)",https://github.com/bitcoin/bitcoin/pull/13120#discussion_r185644275,185644275,test/functional/p2p_segwit.py
jnewbery,2018-05-02T21:32:00Z,Just remove this entire block (everything from `We'll add an unnecessary witness to this transaction that would cause` down). `bad-witness-nonstandard` is tested further down.,https://github.com/bitcoin/bitcoin/pull/13120#discussion_r185645086,185645086,test/functional/p2p_segwit.py
MarcoFalke,2018-05-04T17:22:04Z,"This pull request changes the (rejection-/acceptance-) policy about segwit transactions that are otherwise valid, not about segwit transactions that are otherwise invalid. Personally I don't see the advantage in removing those tests and I'd suggest to move the suggested changes into a separate pull request, since it seems unrelated to the changes in this pull request.",https://github.com/bitcoin/bitcoin/pull/13120#discussion_r186150966,186150966,test/functional/feature_segwit.py
MarcoFalke,2018-05-04T17:34:40Z,Please note that `bad-witness-nonstandard` is a general reject reason and as far as I can see none of the tests below check for unnecessary witness. So I guess it is fine to keep this as is.,https://github.com/bitcoin/bitcoin/pull/13120#discussion_r186154120,186154120,test/functional/p2p_segwit.py
MarcoFalke,2018-05-04T17:49:32Z,Thanks! Fixed up the comment in a new commit.,https://github.com/bitcoin/bitcoin/pull/13120#discussion_r186165297,186165297,test/functional/p2p_segwit.py
jnewbery,2018-05-07T13:41:09Z,"I disagree. The entire `test_unnecessary_witness_before_segwit_activation()` subtest should be removed, since this PR updates the logic so there's no difference in behaviour before and after activation. Leaving this test as it is is misleading, since it implies that there's some difference in logic before and after activation.",https://github.com/bitcoin/bitcoin/pull/13120#discussion_r186425558,186425558,test/functional/p2p_segwit.py
jnewbery,2018-05-07T13:42:43Z,"For the same reason as above, I think that including these tests is misleading for anyone reading the tests, since it implies that behaviour is different before and after segwit activation.",https://github.com/bitcoin/bitcoin/pull/13120#discussion_r186425990,186425990,test/functional/feature_segwit.py
MarcoFalke,2018-05-08T17:58:08Z,Thanks! Reworded the comment in the last commit,https://github.com/bitcoin/bitcoin/pull/13120#discussion_r186815095,186815095,test/functional/feature_segwit.py
MarcoFalke,2018-05-08T18:01:14Z,"Please note that the policy difference only has effect on transactions (and not blocks). This test is testing that blocks can not include unnecessary witness. It is also testing that unnecessary witness that is added to transactions ""in-flight"" (e.g. by malicious peers) does not add them to the rejection cache and that they'd be accepted just fine when sent without the witness.",https://github.com/bitcoin/bitcoin/pull/13120#discussion_r186816034,186816034,test/functional/p2p_segwit.py
MarcoFalke,2018-05-08T18:02:21Z,I have amended the misleading comment in my last commit.,https://github.com/bitcoin/bitcoin/pull/13120#discussion_r186816367,186816367,test/functional/p2p_segwit.py
jnewbery,2018-05-08T18:17:07Z,I still think these subtests should be moved to after segwit activation,https://github.com/bitcoin/bitcoin/pull/13120#discussion_r186820630,186820630,test/functional/feature_segwit.py
jnewbery,2018-05-08T18:19:27Z,"This subtest should be in `test_non_standard_witness()`, not in `test_unnecessary_witness_before_segwit_activation()`",https://github.com/bitcoin/bitcoin/pull/13120#discussion_r186821324,186821324,test/functional/p2p_segwit.py
MarcoFalke,2018-05-08T18:44:35Z,I have moved it to a separate test case so that the symbols don't collide,https://github.com/bitcoin/bitcoin/pull/13120#discussion_r186828799,186828799,test/functional/p2p_segwit.py
