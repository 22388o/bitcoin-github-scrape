[
  {
    "sha": "dfdaee931021618fa2d280907aad7393640f39f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZmRhZWU5MzEwMjE2MThmYTJkMjgwOTA3YWFkNzM5MzY0MGYzOWY1",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-05-05T19:30:38Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-05-06T23:58:06Z"
      },
      "message": "Add extra asserts to addrman",
      "tree": {
        "sha": "f1beeced48f6c05bbe5ab8a52d8abb409d5e898b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f1beeced48f6c05bbe5ab8a52d8abb409d5e898b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dfdaee931021618fa2d280907aad7393640f39f5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfdaee931021618fa2d280907aad7393640f39f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dfdaee931021618fa2d280907aad7393640f39f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfdaee931021618fa2d280907aad7393640f39f5/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "397737b9133118d71d2c8ba6a95afea0ba7d4350",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/397737b9133118d71d2c8ba6a95afea0ba7d4350",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/397737b9133118d71d2c8ba6a95afea0ba7d4350"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 19,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c1a0df6a44d4140e9eebdc1cec3dcadd370c4c9d",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdaee931021618fa2d280907aad7393640f39f5/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdaee931021618fa2d280907aad7393640f39f5/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=dfdaee931021618fa2d280907aad7393640f39f5",
        "patch": "@@ -107,9 +107,15 @@ void CAddrMan::SwapRandom(int nRndPos1, int nRndPos2)\n     if (nRndPos1 == nRndPos2)\n         return;\n \n+    assert(nRndPos1 >= 0 && nRndPos2 >= 0);\n+    assert(nRndPos1 < vRandom.size() && nRndPos2 < vRandom.size());\n+\n     int nId1 = vRandom[nRndPos1];\n     int nId2 = vRandom[nRndPos2];\n \n+    assert(mapInfo.count(nId1) == 1);\n+    assert(mapInfo.count(nId2) == 1);\n+\n     mapInfo[nId1].nRandomPos = nRndPos2;\n     mapInfo[nId2].nRandomPos = nRndPos1;\n \n@@ -130,6 +136,7 @@ int CAddrMan::SelectTried(int nKBucket)\n         int nTemp = vTried[nPos];\n         vTried[nPos] = vTried[i];\n         vTried[i] = nTemp;\n+        assert(nOldest == -1 || mapInfo.count(nTemp) == 1);\n         if (nOldest == -1 || mapInfo[nTemp].nLastSuccess < mapInfo[nOldest].nLastSuccess)\n            nOldest = nTemp;\n     }\n@@ -139,11 +146,13 @@ int CAddrMan::SelectTried(int nKBucket)\n \n int CAddrMan::ShrinkNew(int nUBucket)\n {\n+    assert(nUBucket >= 0 && nUBucket < vvNew.size());\n     std::set<int> &vNew = vvNew[nUBucket];\n \n     // first look for deletable items\n     for (std::set<int>::iterator it = vNew.begin(); it != vNew.end(); it++)\n     {\n+        assert(mapInfo.count(*it));\n         CAddrInfo &info = mapInfo[*it];\n         if (info.IsTerrible())\n         {\n@@ -168,11 +177,13 @@ int CAddrMan::ShrinkNew(int nUBucket)\n     {\n         if (nI == n[0] || nI == n[1] || nI == n[2] || nI == n[3])\n         {\n+            assert(nOldest == -1 || mapInfo.count(*it) == 1);\n             if (nOldest == -1 || mapInfo[*it].nTime < mapInfo[nOldest].nTime)\n                 nOldest = *it;\n         }\n         nI++;\n     }\n+    assert(mapInfo.count(nOldest) == 1);\n     CAddrInfo &info = mapInfo[nOldest];\n     if (--info.nRefCount == 0) \n     {\n@@ -189,6 +200,8 @@ int CAddrMan::ShrinkNew(int nUBucket)\n \n void CAddrMan::MakeTried(CAddrInfo& info, int nId, int nOrigin)\n {\n+    assert(vvNew[nOrigin].count(nId) == 1);\n+\n     // remove the entry from all new buckets\n     for (std::vector<std::set<int> >::iterator it = vvNew.begin(); it != vvNew.end(); it++)\n     {\n@@ -197,6 +210,8 @@ void CAddrMan::MakeTried(CAddrInfo& info, int nId, int nOrigin)\n     }\n     nNew--;\n \n+    assert(info.nRefCount == 0);\n+\n     // what tried bucket to move the entry to\n     int nKBucket = info.GetTriedBucket(nKey);\n     std::vector<int> &vTried = vvTried[nKBucket];\n@@ -214,6 +229,7 @@ void CAddrMan::MakeTried(CAddrInfo& info, int nId, int nOrigin)\n     int nPos = SelectTried(nKBucket);\n \n     // find which new bucket it belongs to\n+    assert(mapInfo.count(vTried[nPos]) == 1);\n     int nUBucket = mapInfo[vTried[nPos]].GetNewBucket(nKey);\n     std::set<int> &vNew = vvNew[nUBucket];\n \n@@ -385,6 +401,7 @@ CAddress CAddrMan::Select_(int nUnkBias)\n             std::vector<int> &vTried = vvTried[nKBucket];\n             if (vTried.size() == 0) continue;\n             int nPos = GetRandInt(vTried.size());\n+            assert(mapInfo.count(vTried[nPos]) == 1);\n             CAddrInfo &info = mapInfo[vTried[nPos]];\n             if (GetRandInt(1<<30) < fChanceFactor*info.GetChance()*(1<<30))\n                 return info;\n@@ -402,6 +419,7 @@ CAddress CAddrMan::Select_(int nUnkBias)\n             std::set<int>::iterator it = vNew.begin();\n             while (nPos--)\n                 it++;\n+            assert(mapInfo.count(*it) == 1);\n             CAddrInfo &info = mapInfo[*it];\n             if (GetRandInt(1<<30) < fChanceFactor*info.GetChance()*(1<<30))\n                 return info;\n@@ -481,6 +499,7 @@ void CAddrMan::GetAddr_(std::vector<CAddress> &vAddr)\n     {\n         int nRndPos = GetRandInt(vRandom.size() - n) + n;\n         SwapRandom(n, nRndPos);\n+        assert(mapInfo.count(vRandom[n]) == 1);\n         vAddr.push_back(mapInfo[vRandom[n]]);\n     }\n }"
      }
    ]
  },
  {
    "sha": "05ff9680baed281e00e2a0cab43d1d9ef17ec891",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNWZmOTY4MGJhZWQyODFlMDBlMmEwY2FiNDNkMWQ5ZWYxN2VjODkx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-05-05T19:22:55Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-05-06T23:58:22Z"
      },
      "message": "Fix addrman crashes\n\nA function returned the element to remove from a bucket, instead of its\nposition in that bucket. This function was only called when a tried\nbucket overflowed, which only happens after many outgoing connections\nhave been made.\n\nCloses: #1065, #1156",
      "tree": {
        "sha": "17a1f0e1c7dff72fa4748c1b6fd44067ee69f115",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/17a1f0e1c7dff72fa4748c1b6fd44067ee69f115"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/05ff9680baed281e00e2a0cab43d1d9ef17ec891",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05ff9680baed281e00e2a0cab43d1d9ef17ec891",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/05ff9680baed281e00e2a0cab43d1d9ef17ec891",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05ff9680baed281e00e2a0cab43d1d9ef17ec891/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dfdaee931021618fa2d280907aad7393640f39f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfdaee931021618fa2d280907aad7393640f39f5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dfdaee931021618fa2d280907aad7393640f39f5"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "10d005aae919ee9b2b703a990c87fddc02f9f007",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05ff9680baed281e00e2a0cab43d1d9ef17ec891/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05ff9680baed281e00e2a0cab43d1d9ef17ec891/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=05ff9680baed281e00e2a0cab43d1d9ef17ec891",
        "patch": "@@ -130,18 +130,21 @@ int CAddrMan::SelectTried(int nKBucket)\n     // random shuffle the first few elements (using the entire list)\n     // find the least recently tried among them\n     int64 nOldest = -1;\n+    int nOldestPos = -1;\n     for (unsigned int i = 0; i < ADDRMAN_TRIED_ENTRIES_INSPECT_ON_EVICT && i < vTried.size(); i++)\n     {\n         int nPos = GetRandInt(vTried.size() - i) + i;\n         int nTemp = vTried[nPos];\n         vTried[nPos] = vTried[i];\n         vTried[i] = nTemp;\n         assert(nOldest == -1 || mapInfo.count(nTemp) == 1);\n-        if (nOldest == -1 || mapInfo[nTemp].nLastSuccess < mapInfo[nOldest].nLastSuccess)\n+        if (nOldest == -1 || mapInfo[nTemp].nLastSuccess < mapInfo[nOldest].nLastSuccess) {\n            nOldest = nTemp;\n+           nOldestPos = nPos;\n+        }\n     }\n \n-    return nOldest;\n+    return nOldestPos;\n }\n \n int CAddrMan::ShrinkNew(int nUBucket)"
      }
    ]
  },
  {
    "sha": "5e27f737fa9575f7e060e455956a3851ae28ded3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTI3ZjczN2ZhOTU3NWY3ZTA2MGU0NTU5NTZhMzg1MWFlMjhkZWQz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-05-05T19:27:52Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-05-06T23:59:42Z"
      },
      "message": "Bugfix: store source address in addrman",
      "tree": {
        "sha": "cf9657fb7e5b5dcf336d96b2d85a38e0421470f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf9657fb7e5b5dcf336d96b2d85a38e0421470f1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e27f737fa9575f7e060e455956a3851ae28ded3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e27f737fa9575f7e060e455956a3851ae28ded3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e27f737fa9575f7e060e455956a3851ae28ded3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e27f737fa9575f7e060e455956a3851ae28ded3/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "05ff9680baed281e00e2a0cab43d1d9ef17ec891",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05ff9680baed281e00e2a0cab43d1d9ef17ec891",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/05ff9680baed281e00e2a0cab43d1d9ef17ec891"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3768614cfe5ef55741a72a33371b2100dd3fbb0d",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e27f737fa9575f7e060e455956a3851ae28ded3/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e27f737fa9575f7e060e455956a3851ae28ded3/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=5e27f737fa9575f7e060e455956a3851ae28ded3",
        "patch": "@@ -62,7 +62,7 @@ class CAddrInfo : public CAddress\n         nRandomPos = -1;\n     }\n \n-    CAddrInfo(const CAddress &addrIn, const CNetAddr &addrSource) : CAddress(addrIn)\n+    CAddrInfo(const CAddress &addrIn, const CNetAddr &addrSource) : CAddress(addrIn), source(addrSource)\n     {\n         Init();\n     }"
      }
    ]
  },
  {
    "sha": "8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZmYxODczMDk2ZDI5YTEwNWVhOThkNmNkMDNjNGY4ZjdiOWNlYTBm",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-05-07T00:11:05Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-05-08T16:58:39Z"
      },
      "message": "Bump versions for 0.6.2",
      "tree": {
        "sha": "621c382e3480b84c328bdd814f5ffe2865b7208c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/621c382e3480b84c328bdd814f5ffe2865b7208c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e27f737fa9575f7e060e455956a3851ae28ded3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e27f737fa9575f7e060e455956a3851ae28ded3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e27f737fa9575f7e060e455956a3851ae28ded3"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "e161911a93fac6ee8d3c29cdedae8a4ff42437b8",
        "filename": "bitcoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f",
        "patch": "@@ -1,6 +1,6 @@\n TEMPLATE = app\n TARGET =\n-VERSION = 0.6.1\n+VERSION = 0.6.2\n INCLUDEPATH += src src/json src/qt\n DEFINES += QT_GUI BOOST_THREAD_USE_LIB\n CONFIG += no_include_pwd"
      },
      {
        "sha": "70ed4d5aee82cdb012df3b7cd94912c3df74e259",
        "filename": "doc/README",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f/doc/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f/doc/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README?ref=8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f",
        "patch": "@@ -1,4 +1,4 @@\n-Bitcoin 0.6.1 BETA\n+Bitcoin 0.6.2 BETA\n \n Copyright (c) 2009-2012 Bitcoin Developers\n Distributed under the MIT/X11 software license, see the accompanying"
      },
      {
        "sha": "451aedbfd5d1a2cfbbb7a71275c2c82912072fb7",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f",
        "patch": "@@ -1,4 +1,4 @@\n-Bitcoin 0.6.1 BETA\r\n+Bitcoin 0.6.2 BETA\r\n \r\n Copyright (c) 2009-2012 Bitcoin Developers\r\n Distributed under the MIT/X11 software license, see the accompanying\r"
      },
      {
        "sha": "fb122efc1f22ea5cfa4c7427876ed5c33bbdb0fa",
        "filename": "share/setup.nsi",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f/share/setup.nsi",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f/share/setup.nsi",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi?ref=8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f",
        "patch": "@@ -5,7 +5,7 @@ SetCompressor /SOLID lzma\n \r\n # General Symbol Definitions\r\n !define REGKEY \"SOFTWARE\\$(^Name)\"\r\n-!define VERSION 0.6.1\r\n+!define VERSION 0.6.2\r\n !define COMPANY \"Bitcoin project\"\r\n !define URL http://www.bitcoin.org/\r\n \r\n@@ -45,13 +45,13 @@ Var StartMenuGroup\n !insertmacro MUI_LANGUAGE English\r\n \r\n # Installer attributes\r\n-OutFile bitcoin-0.6.1-win32-setup.exe\r\n+OutFile bitcoin-0.6.2-win32-setup.exe\r\n InstallDir $PROGRAMFILES\\Bitcoin\r\n CRCCheck on\r\n XPStyle on\r\n BrandingText \" \"\r\n ShowInstDetails show\r\n-VIProductVersion 0.6.1.3\r\n+VIProductVersion 0.6.2.0\r\n VIAddVersionKey ProductName Bitcoin\r\n VIAddVersionKey ProductVersion \"${VERSION}\"\r\n VIAddVersionKey CompanyName \"${COMPANY}\"\r"
      },
      {
        "sha": "fec63cb7cc840591fe06ba959e65e018e10a0e65",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f",
        "patch": "@@ -12,8 +12,8 @@\n \n static const int CLIENT_VERSION_MAJOR       =  0;\n static const int CLIENT_VERSION_MINOR       =  6;\n-static const int CLIENT_VERSION_REVISION    =  1;\n-static const int CLIENT_VERSION_BUILD       = 3;\n+static const int CLIENT_VERSION_REVISION    =  2;\n+static const int CLIENT_VERSION_BUILD       = 0;\n \n static const int CLIENT_VERSION =\n                            1000000 * CLIENT_VERSION_MAJOR"
      }
    ]
  },
  {
    "sha": "8f9123a157d0ef479f62eb3e05da2ba6613c5dfc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZjkxMjNhMTU3ZDBlZjQ3OWY2MmViM2UwNWRhMmJhNjYxM2M1ZGZj",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-05-09T22:24:34Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-05-09T22:58:38Z"
      },
      "message": "Fix 100% cpu usage on osx bug",
      "tree": {
        "sha": "02498391205de5a076084c1da80bd9a23744971a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02498391205de5a076084c1da80bd9a23744971a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f9123a157d0ef479f62eb3e05da2ba6613c5dfc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f9123a157d0ef479f62eb3e05da2ba6613c5dfc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8f9123a157d0ef479f62eb3e05da2ba6613c5dfc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f9123a157d0ef479f62eb3e05da2ba6613c5dfc/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c3a0efe0a76715e87f9813e3a37e46d652e35b2a",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f9123a157d0ef479f62eb3e05da2ba6613c5dfc/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f9123a157d0ef479f62eb3e05da2ba6613c5dfc/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=8f9123a157d0ef479f62eb3e05da2ba6613c5dfc",
        "patch": "@@ -274,8 +274,9 @@ typedef CMutexLock<CWaitableCriticalSection> CWaitableCriticalBlock;\n typedef boost::interprocess::interprocess_condition CConditionVariable;\n \n /** Wait for a given condition inside a WAITABLE_CRITICAL_BLOCK */\n+/** Sleep(1) is to workaround a 100% cpu-usage bug on OSX **/\n #define WAIT(name,condition) \\\n-   do { while(!(condition)) { (name).wait(waitablecriticalblock.GetLock()); } } while(0)\n+    do { while(!(condition)) { (name).wait(waitablecriticalblock.GetLock()); Sleep(1);} } while(0)\n \n /** Notify waiting threads that a condition may hold now */\n #define NOTIFY(name) \\"
      }
    ]
  },
  {
    "sha": "91b13a0dff056b444d8fd0c2a5baae75e9d6208b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MWIxM2EwZGZmMDU2YjQ0NGQ4ZmQwYzJhNWJhYWU3NWU5ZDYyMDhi",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-05-10T20:14:15Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-05-10T20:14:15Z"
      },
      "message": "Revert \"Fix 100% cpu usage on osx bug\"\n\nThis reverts commit 8f9123a157d0ef479f62eb3e05da2ba6613c5dfc.",
      "tree": {
        "sha": "621c382e3480b84c328bdd814f5ffe2865b7208c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/621c382e3480b84c328bdd814f5ffe2865b7208c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91b13a0dff056b444d8fd0c2a5baae75e9d6208b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91b13a0dff056b444d8fd0c2a5baae75e9d6208b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/91b13a0dff056b444d8fd0c2a5baae75e9d6208b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91b13a0dff056b444d8fd0c2a5baae75e9d6208b/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8f9123a157d0ef479f62eb3e05da2ba6613c5dfc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f9123a157d0ef479f62eb3e05da2ba6613c5dfc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f9123a157d0ef479f62eb3e05da2ba6613c5dfc"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5f8d0375da5dde3261867e3ec9863cefaec87c44",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/91b13a0dff056b444d8fd0c2a5baae75e9d6208b/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/91b13a0dff056b444d8fd0c2a5baae75e9d6208b/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=91b13a0dff056b444d8fd0c2a5baae75e9d6208b",
        "patch": "@@ -274,9 +274,8 @@ typedef CMutexLock<CWaitableCriticalSection> CWaitableCriticalBlock;\n typedef boost::interprocess::interprocess_condition CConditionVariable;\n \n /** Wait for a given condition inside a WAITABLE_CRITICAL_BLOCK */\n-/** Sleep(1) is to workaround a 100% cpu-usage bug on OSX **/\n #define WAIT(name,condition) \\\n-    do { while(!(condition)) { (name).wait(waitablecriticalblock.GetLock()); Sleep(1);} } while(0)\n+   do { while(!(condition)) { (name).wait(waitablecriticalblock.GetLock()); } } while(0)\n \n /** Notify waiting threads that a condition may hold now */\n #define NOTIFY(name) \\"
      }
    ]
  },
  {
    "sha": "ca0816152d91c929b51b2f644fcb9a69797a49fa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYTA4MTYxNTJkOTFjOTI5YjUxYjJmNjQ0ZmNiOWE2OTc5N2E0OWZh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-05-10T16:44:07Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-05-10T20:34:43Z"
      },
      "message": "Use semaphores instead of condition variables",
      "tree": {
        "sha": "9bb267417cc681563c5c4df6f101f82d85ab5ece",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9bb267417cc681563c5c4df6f101f82d85ab5ece"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca0816152d91c929b51b2f644fcb9a69797a49fa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca0816152d91c929b51b2f644fcb9a69797a49fa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ca0816152d91c929b51b2f644fcb9a69797a49fa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca0816152d91c929b51b2f644fcb9a69797a49fa/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ff1873096d29a105ea98d6cd03c4f8f7b9cea0f"
      }
    ],
    "stats": {
      "total": 88,
      "additions": 44,
      "deletions": 44
    },
    "files": [
      {
        "sha": "88a3b436c7fd84328defcbcdf4066be573c85739",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 29,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca0816152d91c929b51b2f644fcb9a69797a49fa/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca0816152d91c929b51b2f644fcb9a69797a49fa/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ca0816152d91c929b51b2f644fcb9a69797a49fa",
        "patch": "@@ -35,7 +35,7 @@ void ThreadOpenAddedConnections2(void* parg);\n void ThreadMapPort2(void* parg);\n #endif\n void ThreadDNSAddressSeed2(void* parg);\n-bool OpenNetworkConnection(const CAddress& addrConnect);\n+bool OpenNetworkConnection(const CAddress& addrConnect, bool fUseGrant = true);\n \n \n \n@@ -64,10 +64,7 @@ map<CInv, int64> mapAlreadyAskedFor;\n set<CNetAddr> setservAddNodeAddresses;\n CCriticalSection cs_setservAddNodeAddresses;\n \n-static CWaitableCriticalSection csOutbound;\n-static int nOutbound = 0;\n-static CConditionVariable condOutbound;\n-\n+static CSemaphore *semOutbound = NULL;\n \n unsigned short GetListenPort()\n {\n@@ -368,10 +365,6 @@ CNode* ConnectNode(CAddress addrConnect, int64 nTimeout)\n             LOCK(cs_vNodes);\n             vNodes.push_back(pnode);\n         }\n-        {\n-            WAITABLE_LOCK(csOutbound);\n-            nOutbound++;\n-        }\n \n         pnode->nTimeConnected = GetTime();\n         return pnode;\n@@ -517,14 +510,9 @@ void ThreadSocketHandler2(void* parg)\n                     // remove from vNodes\n                     vNodes.erase(remove(vNodes.begin(), vNodes.end(), pnode), vNodes.end());\n \n-                    if (!pnode->fInbound)\n-                        {\n-                            WAITABLE_LOCK(csOutbound);\n-                            nOutbound--;\n-\n-                            // Connection slot(s) were removed, notify connection creator(s)\n-                            NOTIFY(condOutbound);\n-                        }\n+                    if (pnode->fHasGrant)\n+                        semOutbound->post();\n+                    pnode->fHasGrant = false;\n \n                     // close socket and cleanup\n                     pnode->CloseSocketDisconnect();\n@@ -1201,7 +1189,7 @@ void ThreadOpenConnections2(void* parg)\n             {\n                 CAddress addr(CService(strAddr, GetDefaultPort(), fAllowDNS));\n                 if (addr.IsValid())\n-                    OpenNetworkConnection(addr);\n+                    OpenNetworkConnection(addr, false);\n                 for (int i = 0; i < 10 && i < nLoop; i++)\n                 {\n                     Sleep(500);\n@@ -1222,13 +1210,9 @@ void ThreadOpenConnections2(void* parg)\n         if (fShutdown)\n             return;\n \n-        // Limit outbound connections\n-        int nMaxOutbound = min(MAX_OUTBOUND_CONNECTIONS, (int)GetArg(\"-maxconnections\", 125));\n+\n         vnThreadsRunning[THREAD_OPENCONNECTIONS]--;\n-        {\n-            WAITABLE_LOCK(csOutbound);\n-            WAIT(condOutbound, fShutdown || nOutbound < nMaxOutbound);\n-        }\n+        semOutbound->wait();\n         vnThreadsRunning[THREAD_OPENCONNECTIONS]++;\n         if (fShutdown)\n             return;\n@@ -1261,11 +1245,15 @@ void ThreadOpenConnections2(void* parg)\n \n         // Only connect to one address per a.b.?.? range.\n         // Do this here so we don't have to critsect vNodes inside mapAddresses critsect.\n+        int nOutbound = 0;\n         set<vector<unsigned char> > setConnected;\n         {\n             LOCK(cs_vNodes);\n-            BOOST_FOREACH(CNode* pnode, vNodes)\n+            BOOST_FOREACH(CNode* pnode, vNodes) {\n                 setConnected.insert(pnode->addr.GetGroup());\n+                if (!pnode->fInbound)\n+                    nOutbound++;\n+            }\n         }\n \n         int64 nANow = GetAdjustedTime();\n@@ -1296,6 +1284,8 @@ void ThreadOpenConnections2(void* parg)\n \n         if (addrConnect.IsValid())\n             OpenNetworkConnection(addrConnect);\n+        else\n+            semOutbound->post();\n     }\n }\n \n@@ -1358,6 +1348,7 @@ void ThreadOpenAddedConnections2(void* parg)\n         }\n         BOOST_FOREACH(vector<CService>& vserv, vservConnectAddresses)\n         {\n+            semOutbound->wait();\n             OpenNetworkConnection(CAddress(*(vserv.begin())));\n             Sleep(500);\n             if (fShutdown)\n@@ -1373,7 +1364,14 @@ void ThreadOpenAddedConnections2(void* parg)\n     }\n }\n \n-bool OpenNetworkConnection(const CAddress& addrConnect)\n+bool static ReleaseGrant(bool fUseGrant) {\n+    if (fUseGrant)\n+        semOutbound->post();\n+    return false;\n+}\n+\n+// only call this function when semOutbound has been waited for\n+bool OpenNetworkConnection(const CAddress& addrConnect, bool fUseGrant)\n {\n     //\n     // Initiate outbound network connection\n@@ -1382,15 +1380,21 @@ bool OpenNetworkConnection(const CAddress& addrConnect)\n         return false;\n     if ((CNetAddr)addrConnect == (CNetAddr)addrLocalHost || !addrConnect.IsIPv4() ||\n         FindNode((CNetAddr)addrConnect) || CNode::IsBanned(addrConnect))\n-        return false;\n+        return ReleaseGrant(fUseGrant);\n \n     vnThreadsRunning[THREAD_OPENCONNECTIONS]--;\n     CNode* pnode = ConnectNode(addrConnect);\n     vnThreadsRunning[THREAD_OPENCONNECTIONS]++;\n     if (fShutdown)\n         return false;\n     if (!pnode)\n-        return false;\n+        return ReleaseGrant(fUseGrant);\n+    if (pnode->fHasGrant) {\n+        // node already has connection grant, release the one that was passed to us\n+        ReleaseGrant(fUseGrant);\n+    } else {\n+        pnode->fHasGrant = fUseGrant;\n+    }\n     pnode->fNetworkNode = true;\n \n     return true;\n@@ -1567,6 +1571,12 @@ bool BindListenPort(string& strError)\n \n void StartNode(void* parg)\n {\n+    if (semOutbound == NULL) {\n+        // initialize semaphore\n+        int nMaxOutbound = min(MAX_OUTBOUND_CONNECTIONS, (int)GetArg(\"-maxconnections\", 125));\n+        semOutbound = new CSemaphore(nMaxOutbound);\n+    }\n+\n #ifdef USE_UPNP\n #if USE_UPNP\n     fUseUPnP = GetBoolArg(\"-upnp\", true);\n@@ -1693,7 +1703,8 @@ bool StopNode()\n     fShutdown = true;\n     nTransactionsUpdated++;\n     int64 nStart = GetTime();\n-    NOTIFY_ALL(condOutbound);\n+    for (int i=0; i<MAX_OUTBOUND_CONNECTIONS; i++)\n+         semOutbound->post();\n     do\n     {\n         int nThreadsRunning = 0;"
      },
      {
        "sha": "4cc82b237e5f9e678e5a29a120d322b167f817ff",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca0816152d91c929b51b2f644fcb9a69797a49fa/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca0816152d91c929b51b2f644fcb9a69797a49fa/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=ca0816152d91c929b51b2f644fcb9a69797a49fa",
        "patch": "@@ -127,6 +127,7 @@ class CNode\n     bool fNetworkNode;\n     bool fSuccessfullyConnected;\n     bool fDisconnect;\n+    bool fHasGrant; // whether to call semOutbound.post() at disconnect\n protected:\n     int nRefCount;\n \n@@ -171,6 +172,7 @@ class CNode\n         nVersion = 0;\n         strSubVer = \"\";\n         fClient = false; // set by version message\n+        fHasGrant = false;\n         fInbound = fInboundIn;\n         fNetworkNode = false;\n         fSuccessfullyConnected = false;"
      },
      {
        "sha": "f90b95b9d57e76d4ab8db141b7f488f2dd0a9419",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 15,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca0816152d91c929b51b2f644fcb9a69797a49fa/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca0816152d91c929b51b2f644fcb9a69797a49fa/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=ca0816152d91c929b51b2f644fcb9a69797a49fa",
        "patch": "@@ -23,7 +23,7 @@ typedef int pid_t; /* define for windows compatiblity */\n #include <boost/filesystem/path.hpp>\n #include <boost/interprocess/sync/interprocess_recursive_mutex.hpp>\n #include <boost/interprocess/sync/scoped_lock.hpp>\n-#include <boost/interprocess/sync/interprocess_condition.hpp>\n+#include <boost/interprocess/sync/interprocess_semaphore.hpp>\n #include <boost/interprocess/sync/lock_options.hpp>\n #include <boost/date_time/gregorian/gregorian_types.hpp>\n #include <boost/date_time/posix_time/posix_time_types.hpp>\n@@ -270,24 +270,10 @@ class CMutexLock\n };\n \n typedef CMutexLock<CCriticalSection> CCriticalBlock;\n-typedef CMutexLock<CWaitableCriticalSection> CWaitableCriticalBlock;\n-typedef boost::interprocess::interprocess_condition CConditionVariable;\n-\n-/** Wait for a given condition inside a WAITABLE_CRITICAL_BLOCK */\n-#define WAIT(name,condition) \\\n-   do { while(!(condition)) { (name).wait(waitablecriticalblock.GetLock()); } } while(0)\n-\n-/** Notify waiting threads that a condition may hold now */\n-#define NOTIFY(name) \\\n-   do { (name).notify_one(); } while(0)\n-\n-#define NOTIFY_ALL(name) \\\n-   do { (name).notify_all(); } while(0)\n \n #define LOCK(cs) CCriticalBlock criticalblock(cs, #cs, __FILE__, __LINE__)\n #define LOCK2(cs1,cs2) CCriticalBlock criticalblock1(cs1, #cs1, __FILE__, __LINE__),criticalblock2(cs2, #cs2, __FILE__, __LINE__)\n #define TRY_LOCK(cs,name) CCriticalBlock name(cs, #cs, __FILE__, __LINE__, true)\n-#define WAITABLE_LOCK(cs) CWaitableCriticalBlock waitablecriticalblock(cs, #cs, __FILE__, __LINE__)\n \n #define ENTER_CRITICAL_SECTION(cs) \\\n     { \\\n@@ -301,6 +287,7 @@ typedef boost::interprocess::interprocess_condition CConditionVariable;\n         LeaveCritical(); \\\n     }\n \n+typedef boost::interprocess::interprocess_semaphore CSemaphore;\n \n inline std::string i64tostr(int64 n)\n {"
      }
    ]
  },
  {
    "sha": "f0f1b3775e5e0c7939c1131f831ce0334348ac72",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMGYxYjM3NzVlNWUwYzc5MzljMTEzMWY4MzFjZTAzMzQzNDhhYzcy",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-05-10T18:45:35Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-05-10T20:34:49Z"
      },
      "message": "Use polling instead of boost's broken semaphore on OSX",
      "tree": {
        "sha": "7b2fd009f09ea2a685556362bf1f7bed47f8f326",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b2fd009f09ea2a685556362bf1f7bed47f8f326"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f0f1b3775e5e0c7939c1131f831ce0334348ac72",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0f1b3775e5e0c7939c1131f831ce0334348ac72",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f0f1b3775e5e0c7939c1131f831ce0334348ac72",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0f1b3775e5e0c7939c1131f831ce0334348ac72/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ca0816152d91c929b51b2f644fcb9a69797a49fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca0816152d91c929b51b2f644fcb9a69797a49fa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ca0816152d91c929b51b2f644fcb9a69797a49fa"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 40,
      "deletions": 0
    },
    "files": [
      {
        "sha": "15ccf82f9aaa7f1bfddc64e7b8fdd1bf70f78626",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f0f1b3775e5e0c7939c1131f831ce0334348ac72/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f0f1b3775e5e0c7939c1131f831ce0334348ac72/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=f0f1b3775e5e0c7939c1131f831ce0334348ac72",
        "patch": "@@ -287,7 +287,47 @@ typedef CMutexLock<CCriticalSection> CCriticalBlock;\n         LeaveCritical(); \\\n     }\n \n+#ifdef MAC_OSX\n+// boost::interprocess::interprocess_semaphore seems to spinlock on OSX; prefer polling instead\n+class CSemaphore\n+{\n+private:\n+    CCriticalSection cs;\n+    int val;\n+\n+public:\n+    CSemaphore(int init) : val(init) {}\n+\n+    void wait() {\n+        do {\n+            {\n+                LOCK(cs);\n+                if (val>0) {\n+                    val--;\n+                    return;\n+                }\n+            }\n+            Sleep(100);\n+        } while(1);\n+    }\n+\n+    bool try_wait() {\n+        LOCK(cs);\n+        if (val>0) {\n+            val--;\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void post() {\n+        LOCK(cs);\n+        val++;\n+    }\n+};\n+#else\n typedef boost::interprocess::interprocess_semaphore CSemaphore;\n+#endif\n \n inline std::string i64tostr(int64 n)\n {"
      }
    ]
  },
  {
    "sha": "aaff04791d35087ba66a2a0e814620b30fbf9b96",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYWZmMDQ3OTFkMzUwODdiYTY2YTJhMGU4MTQ2MjBiMzBmYmY5Yjk2",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-05-10T20:39:49Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-05-10T20:39:49Z"
      },
      "message": "Merge branch 'semaphores-v0.6.2' of https://github.com/sipa/bitcoin into 0.6.2",
      "tree": {
        "sha": "7b2fd009f09ea2a685556362bf1f7bed47f8f326",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b2fd009f09ea2a685556362bf1f7bed47f8f326"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aaff04791d35087ba66a2a0e814620b30fbf9b96",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaff04791d35087ba66a2a0e814620b30fbf9b96",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aaff04791d35087ba66a2a0e814620b30fbf9b96",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaff04791d35087ba66a2a0e814620b30fbf9b96/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "91b13a0dff056b444d8fd0c2a5baae75e9d6208b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91b13a0dff056b444d8fd0c2a5baae75e9d6208b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/91b13a0dff056b444d8fd0c2a5baae75e9d6208b"
      },
      {
        "sha": "f0f1b3775e5e0c7939c1131f831ce0334348ac72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0f1b3775e5e0c7939c1131f831ce0334348ac72",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f0f1b3775e5e0c7939c1131f831ce0334348ac72"
      }
    ],
    "stats": {
      "total": 128,
      "additions": 84,
      "deletions": 44
    },
    "files": [
      {
        "sha": "88a3b436c7fd84328defcbcdf4066be573c85739",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 29,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aaff04791d35087ba66a2a0e814620b30fbf9b96/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aaff04791d35087ba66a2a0e814620b30fbf9b96/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=aaff04791d35087ba66a2a0e814620b30fbf9b96",
        "patch": "@@ -35,7 +35,7 @@ void ThreadOpenAddedConnections2(void* parg);\n void ThreadMapPort2(void* parg);\n #endif\n void ThreadDNSAddressSeed2(void* parg);\n-bool OpenNetworkConnection(const CAddress& addrConnect);\n+bool OpenNetworkConnection(const CAddress& addrConnect, bool fUseGrant = true);\n \n \n \n@@ -64,10 +64,7 @@ map<CInv, int64> mapAlreadyAskedFor;\n set<CNetAddr> setservAddNodeAddresses;\n CCriticalSection cs_setservAddNodeAddresses;\n \n-static CWaitableCriticalSection csOutbound;\n-static int nOutbound = 0;\n-static CConditionVariable condOutbound;\n-\n+static CSemaphore *semOutbound = NULL;\n \n unsigned short GetListenPort()\n {\n@@ -368,10 +365,6 @@ CNode* ConnectNode(CAddress addrConnect, int64 nTimeout)\n             LOCK(cs_vNodes);\n             vNodes.push_back(pnode);\n         }\n-        {\n-            WAITABLE_LOCK(csOutbound);\n-            nOutbound++;\n-        }\n \n         pnode->nTimeConnected = GetTime();\n         return pnode;\n@@ -517,14 +510,9 @@ void ThreadSocketHandler2(void* parg)\n                     // remove from vNodes\n                     vNodes.erase(remove(vNodes.begin(), vNodes.end(), pnode), vNodes.end());\n \n-                    if (!pnode->fInbound)\n-                        {\n-                            WAITABLE_LOCK(csOutbound);\n-                            nOutbound--;\n-\n-                            // Connection slot(s) were removed, notify connection creator(s)\n-                            NOTIFY(condOutbound);\n-                        }\n+                    if (pnode->fHasGrant)\n+                        semOutbound->post();\n+                    pnode->fHasGrant = false;\n \n                     // close socket and cleanup\n                     pnode->CloseSocketDisconnect();\n@@ -1201,7 +1189,7 @@ void ThreadOpenConnections2(void* parg)\n             {\n                 CAddress addr(CService(strAddr, GetDefaultPort(), fAllowDNS));\n                 if (addr.IsValid())\n-                    OpenNetworkConnection(addr);\n+                    OpenNetworkConnection(addr, false);\n                 for (int i = 0; i < 10 && i < nLoop; i++)\n                 {\n                     Sleep(500);\n@@ -1222,13 +1210,9 @@ void ThreadOpenConnections2(void* parg)\n         if (fShutdown)\n             return;\n \n-        // Limit outbound connections\n-        int nMaxOutbound = min(MAX_OUTBOUND_CONNECTIONS, (int)GetArg(\"-maxconnections\", 125));\n+\n         vnThreadsRunning[THREAD_OPENCONNECTIONS]--;\n-        {\n-            WAITABLE_LOCK(csOutbound);\n-            WAIT(condOutbound, fShutdown || nOutbound < nMaxOutbound);\n-        }\n+        semOutbound->wait();\n         vnThreadsRunning[THREAD_OPENCONNECTIONS]++;\n         if (fShutdown)\n             return;\n@@ -1261,11 +1245,15 @@ void ThreadOpenConnections2(void* parg)\n \n         // Only connect to one address per a.b.?.? range.\n         // Do this here so we don't have to critsect vNodes inside mapAddresses critsect.\n+        int nOutbound = 0;\n         set<vector<unsigned char> > setConnected;\n         {\n             LOCK(cs_vNodes);\n-            BOOST_FOREACH(CNode* pnode, vNodes)\n+            BOOST_FOREACH(CNode* pnode, vNodes) {\n                 setConnected.insert(pnode->addr.GetGroup());\n+                if (!pnode->fInbound)\n+                    nOutbound++;\n+            }\n         }\n \n         int64 nANow = GetAdjustedTime();\n@@ -1296,6 +1284,8 @@ void ThreadOpenConnections2(void* parg)\n \n         if (addrConnect.IsValid())\n             OpenNetworkConnection(addrConnect);\n+        else\n+            semOutbound->post();\n     }\n }\n \n@@ -1358,6 +1348,7 @@ void ThreadOpenAddedConnections2(void* parg)\n         }\n         BOOST_FOREACH(vector<CService>& vserv, vservConnectAddresses)\n         {\n+            semOutbound->wait();\n             OpenNetworkConnection(CAddress(*(vserv.begin())));\n             Sleep(500);\n             if (fShutdown)\n@@ -1373,7 +1364,14 @@ void ThreadOpenAddedConnections2(void* parg)\n     }\n }\n \n-bool OpenNetworkConnection(const CAddress& addrConnect)\n+bool static ReleaseGrant(bool fUseGrant) {\n+    if (fUseGrant)\n+        semOutbound->post();\n+    return false;\n+}\n+\n+// only call this function when semOutbound has been waited for\n+bool OpenNetworkConnection(const CAddress& addrConnect, bool fUseGrant)\n {\n     //\n     // Initiate outbound network connection\n@@ -1382,15 +1380,21 @@ bool OpenNetworkConnection(const CAddress& addrConnect)\n         return false;\n     if ((CNetAddr)addrConnect == (CNetAddr)addrLocalHost || !addrConnect.IsIPv4() ||\n         FindNode((CNetAddr)addrConnect) || CNode::IsBanned(addrConnect))\n-        return false;\n+        return ReleaseGrant(fUseGrant);\n \n     vnThreadsRunning[THREAD_OPENCONNECTIONS]--;\n     CNode* pnode = ConnectNode(addrConnect);\n     vnThreadsRunning[THREAD_OPENCONNECTIONS]++;\n     if (fShutdown)\n         return false;\n     if (!pnode)\n-        return false;\n+        return ReleaseGrant(fUseGrant);\n+    if (pnode->fHasGrant) {\n+        // node already has connection grant, release the one that was passed to us\n+        ReleaseGrant(fUseGrant);\n+    } else {\n+        pnode->fHasGrant = fUseGrant;\n+    }\n     pnode->fNetworkNode = true;\n \n     return true;\n@@ -1567,6 +1571,12 @@ bool BindListenPort(string& strError)\n \n void StartNode(void* parg)\n {\n+    if (semOutbound == NULL) {\n+        // initialize semaphore\n+        int nMaxOutbound = min(MAX_OUTBOUND_CONNECTIONS, (int)GetArg(\"-maxconnections\", 125));\n+        semOutbound = new CSemaphore(nMaxOutbound);\n+    }\n+\n #ifdef USE_UPNP\n #if USE_UPNP\n     fUseUPnP = GetBoolArg(\"-upnp\", true);\n@@ -1693,7 +1703,8 @@ bool StopNode()\n     fShutdown = true;\n     nTransactionsUpdated++;\n     int64 nStart = GetTime();\n-    NOTIFY_ALL(condOutbound);\n+    for (int i=0; i<MAX_OUTBOUND_CONNECTIONS; i++)\n+         semOutbound->post();\n     do\n     {\n         int nThreadsRunning = 0;"
      },
      {
        "sha": "4cc82b237e5f9e678e5a29a120d322b167f817ff",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aaff04791d35087ba66a2a0e814620b30fbf9b96/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aaff04791d35087ba66a2a0e814620b30fbf9b96/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=aaff04791d35087ba66a2a0e814620b30fbf9b96",
        "patch": "@@ -127,6 +127,7 @@ class CNode\n     bool fNetworkNode;\n     bool fSuccessfullyConnected;\n     bool fDisconnect;\n+    bool fHasGrant; // whether to call semOutbound.post() at disconnect\n protected:\n     int nRefCount;\n \n@@ -171,6 +172,7 @@ class CNode\n         nVersion = 0;\n         strSubVer = \"\";\n         fClient = false; // set by version message\n+        fHasGrant = false;\n         fInbound = fInboundIn;\n         fNetworkNode = false;\n         fSuccessfullyConnected = false;"
      },
      {
        "sha": "15ccf82f9aaa7f1bfddc64e7b8fdd1bf70f78626",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 42,
        "deletions": 15,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aaff04791d35087ba66a2a0e814620b30fbf9b96/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aaff04791d35087ba66a2a0e814620b30fbf9b96/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=aaff04791d35087ba66a2a0e814620b30fbf9b96",
        "patch": "@@ -23,7 +23,7 @@ typedef int pid_t; /* define for windows compatiblity */\n #include <boost/filesystem/path.hpp>\n #include <boost/interprocess/sync/interprocess_recursive_mutex.hpp>\n #include <boost/interprocess/sync/scoped_lock.hpp>\n-#include <boost/interprocess/sync/interprocess_condition.hpp>\n+#include <boost/interprocess/sync/interprocess_semaphore.hpp>\n #include <boost/interprocess/sync/lock_options.hpp>\n #include <boost/date_time/gregorian/gregorian_types.hpp>\n #include <boost/date_time/posix_time/posix_time_types.hpp>\n@@ -270,24 +270,10 @@ class CMutexLock\n };\n \n typedef CMutexLock<CCriticalSection> CCriticalBlock;\n-typedef CMutexLock<CWaitableCriticalSection> CWaitableCriticalBlock;\n-typedef boost::interprocess::interprocess_condition CConditionVariable;\n-\n-/** Wait for a given condition inside a WAITABLE_CRITICAL_BLOCK */\n-#define WAIT(name,condition) \\\n-   do { while(!(condition)) { (name).wait(waitablecriticalblock.GetLock()); } } while(0)\n-\n-/** Notify waiting threads that a condition may hold now */\n-#define NOTIFY(name) \\\n-   do { (name).notify_one(); } while(0)\n-\n-#define NOTIFY_ALL(name) \\\n-   do { (name).notify_all(); } while(0)\n \n #define LOCK(cs) CCriticalBlock criticalblock(cs, #cs, __FILE__, __LINE__)\n #define LOCK2(cs1,cs2) CCriticalBlock criticalblock1(cs1, #cs1, __FILE__, __LINE__),criticalblock2(cs2, #cs2, __FILE__, __LINE__)\n #define TRY_LOCK(cs,name) CCriticalBlock name(cs, #cs, __FILE__, __LINE__, true)\n-#define WAITABLE_LOCK(cs) CWaitableCriticalBlock waitablecriticalblock(cs, #cs, __FILE__, __LINE__)\n \n #define ENTER_CRITICAL_SECTION(cs) \\\n     { \\\n@@ -301,6 +287,47 @@ typedef boost::interprocess::interprocess_condition CConditionVariable;\n         LeaveCritical(); \\\n     }\n \n+#ifdef MAC_OSX\n+// boost::interprocess::interprocess_semaphore seems to spinlock on OSX; prefer polling instead\n+class CSemaphore\n+{\n+private:\n+    CCriticalSection cs;\n+    int val;\n+\n+public:\n+    CSemaphore(int init) : val(init) {}\n+\n+    void wait() {\n+        do {\n+            {\n+                LOCK(cs);\n+                if (val>0) {\n+                    val--;\n+                    return;\n+                }\n+            }\n+            Sleep(100);\n+        } while(1);\n+    }\n+\n+    bool try_wait() {\n+        LOCK(cs);\n+        if (val>0) {\n+            val--;\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    void post() {\n+        LOCK(cs);\n+        val++;\n+    }\n+};\n+#else\n+typedef boost::interprocess::interprocess_semaphore CSemaphore;\n+#endif\n \n inline std::string i64tostr(int64 n)\n {"
      }
    ]
  },
  {
    "sha": "40fd689eb1f72f78752d80e91425811d39a4d466",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MGZkNjg5ZWIxZjcyZjc4NzUyZDgwZTkxNDI1ODExZDM5YTRkNDY2",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-05-11T14:09:45Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-05-11T14:09:45Z"
      },
      "message": "Bump version to 0.6.2.2 for osx-special build",
      "tree": {
        "sha": "cce2b7db13d68fc99f98a54637c8bf1c0768fd43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cce2b7db13d68fc99f98a54637c8bf1c0768fd43"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40fd689eb1f72f78752d80e91425811d39a4d466",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40fd689eb1f72f78752d80e91425811d39a4d466",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/40fd689eb1f72f78752d80e91425811d39a4d466",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40fd689eb1f72f78752d80e91425811d39a4d466/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aaff04791d35087ba66a2a0e814620b30fbf9b96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaff04791d35087ba66a2a0e814620b30fbf9b96",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aaff04791d35087ba66a2a0e814620b30fbf9b96"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "82bbfabc2bb069830cbe75c010a7bd9cf5853ef8",
        "filename": "bitcoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40fd689eb1f72f78752d80e91425811d39a4d466/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40fd689eb1f72f78752d80e91425811d39a4d466/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=40fd689eb1f72f78752d80e91425811d39a4d466",
        "patch": "@@ -1,6 +1,6 @@\n TEMPLATE = app\n TARGET =\n-VERSION = 0.6.2\n+VERSION = 0.6.2.2\n INCLUDEPATH += src src/json src/qt\n DEFINES += QT_GUI BOOST_THREAD_USE_LIB\n CONFIG += no_include_pwd"
      },
      {
        "sha": "7cf82c395adc4aa762d71f16c3cfe30abe847ffb",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40fd689eb1f72f78752d80e91425811d39a4d466/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40fd689eb1f72f78752d80e91425811d39a4d466/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=40fd689eb1f72f78752d80e91425811d39a4d466",
        "patch": "@@ -13,7 +13,7 @@\n static const int CLIENT_VERSION_MAJOR       =  0;\n static const int CLIENT_VERSION_MINOR       =  6;\n static const int CLIENT_VERSION_REVISION    =  2;\n-static const int CLIENT_VERSION_BUILD       = 0;\n+static const int CLIENT_VERSION_BUILD       = 2;\n \n static const int CLIENT_VERSION =\n                            1000000 * CLIENT_VERSION_MAJOR"
      }
    ]
  }
]