[
  {
    "sha": "d8e03c0340a65601a92ca3a69cfd3049cbaf49f1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOGUwM2MwMzQwYTY1NjAxYTkyY2EzYTY5Y2ZkMzA0OWNiYWY0OWYx",
    "commit": {
      "author": {
        "name": "Jack Grigg",
        "email": "jack@z.cash",
        "date": "2017-03-25T07:13:18Z"
      },
      "committer": {
        "name": "Jack Grigg",
        "email": "jack@z.cash",
        "date": "2017-05-16T06:21:54Z"
      },
      "message": "torcontrol: Improve comments",
      "tree": {
        "sha": "9afb18265a31fc264af0aef589fe4bc45f2a1441",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9afb18265a31fc264af0aef589fe4bc45f2a1441"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d8e03c0340a65601a92ca3a69cfd3049cbaf49f1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJZGpqEAAoJEGZdvNKE99r/lRsP/1If1PY8FNWdi3fIi3vcFnUO\nE27VLf4N+BOhhnolZddQyTy0kqYksSnyMr7sEg5j7V/0wkxIXYZCANMoTPs3eSCj\nJcfE4ceE0I9hZkWiYVdIjS0wT/E3At9bp7qVI6nWrrSV7HHxmJndtv2zCGvczx+Z\nEJNR9TfAP2eWPPf66vLpxo3yZpy6H4pC/66s3A3ScKIUOc+o8D/OhOzRlLuJ+XSF\nucmAmGEJKBlJr+i/hjmtZZTGl3DZ70yD3oHr474wXhckgVJ1eJmKvhg7qhXRT7Wu\nvg8VyKBTXcjtaSSUzv2OYDLzccsLSgVmKLKxl9S9GG9tiAbVY8B9R7TrjL1vNa0Z\nRX5IQq4ho4DWcrdoYv4tDBL0rH7VuD8fYljmfZzWUUa6FNLHuxerQ1ujuUMG6jcL\ny1qLkhQo4Dbbyx8tF8UY8qEM1e0GCm3fK9nHtfruusXG3QZfnEQu/xxX3a2s7D9D\n/IpqHXfNTIBv2IzNuqxSp+e9PFCxnY0+U7hL4rDdAlBBFCOcbA4CtDYkhQ5LWWS2\nh66043BYiQmu0AU8hXdKsMx314VGiZGp14qkNHFKU81HplnVlF2jyOmPclmC+g5U\nMzbXb+sFXceqzJKsjV19hRx2/8SfqDqYCoAwo7omWQjXTTiP56Ey96zSgbUbGOvh\n6/b/oin775xE/Sh3mhpd\n=Odfi\n-----END PGP SIGNATURE-----",
        "payload": "tree 9afb18265a31fc264af0aef589fe4bc45f2a1441\nparent b6ee855b411ee9bc39f935d0da3298a773a2ed37\nauthor Jack Grigg <jack@z.cash> 1490425998 +1300\ncommitter Jack Grigg <jack@z.cash> 1494915714 +1200\n\ntorcontrol: Improve comments\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8e03c0340a65601a92ca3a69cfd3049cbaf49f1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d8e03c0340a65601a92ca3a69cfd3049cbaf49f1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8e03c0340a65601a92ca3a69cfd3049cbaf49f1/comments",
    "author": {
      "login": "str4d",
      "id": 4993799,
      "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/str4d",
      "html_url": "https://github.com/str4d",
      "followers_url": "https://api.github.com/users/str4d/followers",
      "following_url": "https://api.github.com/users/str4d/following{/other_user}",
      "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
      "organizations_url": "https://api.github.com/users/str4d/orgs",
      "repos_url": "https://api.github.com/users/str4d/repos",
      "events_url": "https://api.github.com/users/str4d/events{/privacy}",
      "received_events_url": "https://api.github.com/users/str4d/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "str4d",
      "id": 4993799,
      "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/str4d",
      "html_url": "https://github.com/str4d",
      "followers_url": "https://api.github.com/users/str4d/followers",
      "following_url": "https://api.github.com/users/str4d/following{/other_user}",
      "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
      "organizations_url": "https://api.github.com/users/str4d/orgs",
      "repos_url": "https://api.github.com/users/str4d/repos",
      "events_url": "https://api.github.com/users/str4d/events{/privacy}",
      "received_events_url": "https://api.github.com/users/str4d/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b6ee855b411ee9bc39f935d0da3298a773a2ed37",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6ee855b411ee9bc39f935d0da3298a773a2ed37",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6ee855b411ee9bc39f935d0da3298a773a2ed37"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2e15c9e732cba5685e78505c5b8a3525921cc39f",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8e03c0340a65601a92ca3a69cfd3049cbaf49f1/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8e03c0340a65601a92ca3a69cfd3049cbaf49f1/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=d8e03c0340a65601a92ca3a69cfd3049cbaf49f1",
        "patch": "@@ -250,6 +250,8 @@ bool TorControlConnection::Command(const std::string &cmd, const ReplyHandlerCB&\n \n /* Split reply line in the form 'AUTH METHODS=...' into a type\n  * 'AUTH' and arguments 'METHODS=...'.\n+ * Grammar is implicitly defined in https://spec.torproject.org/control-spec by\n+ * the server reply formats for PROTOCOLINFO (S3.21) and AUTHCHALLENGE (S3.24).\n  */\n static std::pair<std::string,std::string> SplitTorReplyLine(const std::string &s)\n {\n@@ -265,6 +267,9 @@ static std::pair<std::string,std::string> SplitTorReplyLine(const std::string &s\n }\n \n /** Parse reply arguments in the form 'METHODS=COOKIE,SAFECOOKIE COOKIEFILE=\".../control_auth_cookie\"'.\n+ * Grammar is implicitly defined in https://spec.torproject.org/control-spec by\n+ * the server reply formats for PROTOCOLINFO (S3.21), AUTHCHALLENGE (S3.24),\n+ * and ADD_ONION (S3.27). See also sections 2.1 and 2.3.\n  */\n static std::map<std::string,std::string> ParseTorReplyMapping(const std::string &s)\n {\n@@ -280,7 +285,7 @@ static std::map<std::string,std::string> ParseTorReplyMapping(const std::string\n             return std::map<std::string,std::string>();\n         ++ptr; // skip '='\n         if (ptr < s.size() && s[ptr] == '\"') { // Quoted string\n-            ++ptr; // skip '='\n+            ++ptr; // skip opening '\"'\n             bool escape_next = false;\n             while (ptr < s.size() && (!escape_next && s[ptr] != '\"')) {\n                 escape_next = (s[ptr] == '\\\\');"
      }
    ]
  },
  {
    "sha": "29f3c200780bcb669f31932ce484aee2e5a51a02",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOWYzYzIwMDc4MGJjYjY2OWYzMTkzMmNlNDg0YWVlMmU1YTUxYTAy",
    "commit": {
      "author": {
        "name": "Jack Grigg",
        "email": "jack@z.cash",
        "date": "2017-03-25T07:17:37Z"
      },
      "committer": {
        "name": "Jack Grigg",
        "email": "jack@z.cash",
        "date": "2017-05-16T06:22:07Z"
      },
      "message": "torcontrol: Add unit tests for Tor reply parsers",
      "tree": {
        "sha": "3d201cbde2c909baeaefeb208798dd4852b8817a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d201cbde2c909baeaefeb208798dd4852b8817a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29f3c200780bcb669f31932ce484aee2e5a51a02",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJZGpqXAAoJEGZdvNKE99r/ZC4P/03Sz4hsC+vzzviyR3UJZnJI\nykac3HlJrZ+mbaev9Qa3JzXW6AtqFKLAQ+w/C0V6e9jzwnT0/WD3Zob0cSatb0sc\nKsYH+KUmPoQQwG4/wE72oa80CDzYgJ/mGZyZT11bRRxhjsYRRmN4Tvu51LWLGyXB\nkKatLDRmxZDIlNKtws125nmGcTi+56OrlgaB38L2QJ5N8K7dNX/HUxKUMAP73/wH\nTNGmF49lXp/Dpf5pDnsgx1RRu9wio1EVtOwfVduuHJO+ykfBMZrks20UmjgvBlCR\niY2qrUz4/2TRu2K3W2X/T4VB6DxetmhTnLijhU7RovzdhDsxZ+4SlNGVXofw7ADv\n2Ai4S9yQ37rWpNttu78kU/KCIZIyTSsKncMi13ig4lrvram3jaQvjWtVht3/XH3v\nHXNra+0M+f4xzH3/5llbFB/fj/OzuttA6CDKim7+1uBQa6Ai/dGGIeJc54wBNUYd\nKEPgTEydBm3432nIvE/pFt+mr8NPyejtMDzbShH+2HsqoF+q+gKj9jhFX1DpVqfA\nBiFlQAF+xdqwqofIV4yuhJTN3gO4mPUTHgW/axE+OAWfNmvbRksT9e0IrsYEkgHU\nn8SpUrT4rDDkGOBsxHju9Y0oh3L6SfYnfEqyy0TJEXbbc0vFzAc7Ju3UHzZpAXpQ\nWhkpLvYIGQmkywq1Y4LK\n=dmjg\n-----END PGP SIGNATURE-----",
        "payload": "tree 3d201cbde2c909baeaefeb208798dd4852b8817a\nparent d8e03c0340a65601a92ca3a69cfd3049cbaf49f1\nauthor Jack Grigg <jack@z.cash> 1490426257 +1300\ncommitter Jack Grigg <jack@z.cash> 1494915727 +1200\n\ntorcontrol: Add unit tests for Tor reply parsers\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29f3c200780bcb669f31932ce484aee2e5a51a02",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/29f3c200780bcb669f31932ce484aee2e5a51a02",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29f3c200780bcb669f31932ce484aee2e5a51a02/comments",
    "author": {
      "login": "str4d",
      "id": 4993799,
      "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/str4d",
      "html_url": "https://github.com/str4d",
      "followers_url": "https://api.github.com/users/str4d/followers",
      "following_url": "https://api.github.com/users/str4d/following{/other_user}",
      "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
      "organizations_url": "https://api.github.com/users/str4d/orgs",
      "repos_url": "https://api.github.com/users/str4d/repos",
      "events_url": "https://api.github.com/users/str4d/events{/privacy}",
      "received_events_url": "https://api.github.com/users/str4d/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "str4d",
      "id": 4993799,
      "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/str4d",
      "html_url": "https://github.com/str4d",
      "followers_url": "https://api.github.com/users/str4d/followers",
      "following_url": "https://api.github.com/users/str4d/following{/other_user}",
      "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
      "organizations_url": "https://api.github.com/users/str4d/orgs",
      "repos_url": "https://api.github.com/users/str4d/repos",
      "events_url": "https://api.github.com/users/str4d/events{/privacy}",
      "received_events_url": "https://api.github.com/users/str4d/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d8e03c0340a65601a92ca3a69cfd3049cbaf49f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8e03c0340a65601a92ca3a69cfd3049cbaf49f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d8e03c0340a65601a92ca3a69cfd3049cbaf49f1"
      }
    ],
    "stats": {
      "total": 169,
      "additions": 169,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ee1c11ff1f621b68d4c046c27ee8300c98fd936e",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29f3c200780bcb669f31932ce484aee2e5a51a02/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29f3c200780bcb669f31932ce484aee2e5a51a02/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=29f3c200780bcb669f31932ce484aee2e5a51a02",
        "patch": "@@ -78,6 +78,7 @@ BITCOIN_TESTS =\\\n   test/testutil.cpp \\\n   test/testutil.h \\\n   test/timedata_tests.cpp \\\n+  test/torcontrol_tests.cpp \\\n   test/transaction_tests.cpp \\\n   test/txvalidationcache_tests.cpp \\\n   test/versionbits_tests.cpp \\"
      },
      {
        "sha": "68516599d96a086f4212ec866ff4e5b238f03eae",
        "filename": "src/test/torcontrol_tests.cpp",
        "status": "added",
        "additions": 168,
        "deletions": 0,
        "changes": 168,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29f3c200780bcb669f31932ce484aee2e5a51a02/src/test/torcontrol_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29f3c200780bcb669f31932ce484aee2e5a51a02/src/test/torcontrol_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/torcontrol_tests.cpp?ref=29f3c200780bcb669f31932ce484aee2e5a51a02",
        "patch": "@@ -0,0 +1,168 @@\n+// Copyright (c) 2017 The Zcash developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include \"test/test_bitcoin.h\"\n+#include \"torcontrol.cpp\"\n+\n+#include <boost/test/unit_test.hpp>\n+\n+\n+BOOST_FIXTURE_TEST_SUITE(torcontrol_tests, BasicTestingSetup)\n+\n+void CheckSplitTorReplyLine(std::string input, std::string command, std::string args)\n+{\n+    BOOST_TEST_MESSAGE(std::string(\"CheckSplitTorReplyLine(\") + input + \")\");\n+    auto ret = SplitTorReplyLine(input);\n+    BOOST_CHECK_EQUAL(ret.first, command);\n+    BOOST_CHECK_EQUAL(ret.second, args);\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_SplitTorReplyLine)\n+{\n+    // Data we should receive during normal usage\n+    CheckSplitTorReplyLine(\n+        \"PROTOCOLINFO PIVERSION\",\n+        \"PROTOCOLINFO\", \"PIVERSION\");\n+    CheckSplitTorReplyLine(\n+        \"AUTH METHODS=COOKIE,SAFECOOKIE COOKIEFILE=\\\"/home/x/.tor/control_auth_cookie\\\"\",\n+        \"AUTH\", \"METHODS=COOKIE,SAFECOOKIE COOKIEFILE=\\\"/home/x/.tor/control_auth_cookie\\\"\");\n+    CheckSplitTorReplyLine(\n+        \"AUTH METHODS=NULL\",\n+        \"AUTH\", \"METHODS=NULL\");\n+    CheckSplitTorReplyLine(\n+        \"AUTH METHODS=HASHEDPASSWORD\",\n+        \"AUTH\", \"METHODS=HASHEDPASSWORD\");\n+    CheckSplitTorReplyLine(\n+        \"VERSION Tor=\\\"0.2.9.8 (git-a0df013ea241b026)\\\"\",\n+        \"VERSION\", \"Tor=\\\"0.2.9.8 (git-a0df013ea241b026)\\\"\");\n+    CheckSplitTorReplyLine(\n+        \"AUTHCHALLENGE SERVERHASH=aaaa SERVERNONCE=bbbb\",\n+        \"AUTHCHALLENGE\", \"SERVERHASH=aaaa SERVERNONCE=bbbb\");\n+\n+    // Other valid inputs\n+    CheckSplitTorReplyLine(\"COMMAND\", \"COMMAND\", \"\");\n+    CheckSplitTorReplyLine(\"COMMAND SOME  ARGS\", \"COMMAND\", \"SOME  ARGS\");\n+\n+    // These inputs are valid because PROTOCOLINFO accepts an OtherLine that is\n+    // just an OptArguments, which enables multiple spaces to be present\n+    // between the command and arguments.\n+    CheckSplitTorReplyLine(\"COMMAND  ARGS\", \"COMMAND\", \" ARGS\");\n+    CheckSplitTorReplyLine(\"COMMAND   EVEN+more  ARGS\", \"COMMAND\", \"  EVEN+more  ARGS\");\n+}\n+\n+void CheckParseTorReplyMapping(std::string input, std::map<std::string,std::string> expected)\n+{\n+    BOOST_TEST_MESSAGE(std::string(\"CheckParseTorReplyMapping(\") + input + \")\");\n+    auto ret = ParseTorReplyMapping(input);\n+    BOOST_CHECK_EQUAL(ret.size(), expected.size());\n+    auto r_it = ret.begin();\n+    auto e_it = expected.begin();\n+    while (r_it != ret.end() && e_it != expected.end()) {\n+        BOOST_CHECK_EQUAL(r_it->first, e_it->first);\n+        BOOST_CHECK_EQUAL(r_it->second, e_it->second);\n+        r_it++;\n+        e_it++;\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_ParseTorReplyMapping)\n+{\n+    // Data we should receive during normal usage\n+    CheckParseTorReplyMapping(\n+        \"METHODS=COOKIE,SAFECOOKIE COOKIEFILE=\\\"/home/x/.tor/control_auth_cookie\\\"\", {\n+            {\"METHODS\", \"COOKIE,SAFECOOKIE\"},\n+            {\"COOKIEFILE\", \"/home/x/.tor/control_auth_cookie\"},\n+        });\n+    CheckParseTorReplyMapping(\n+        \"METHODS=NULL\", {\n+            {\"METHODS\", \"NULL\"},\n+        });\n+    CheckParseTorReplyMapping(\n+        \"METHODS=HASHEDPASSWORD\", {\n+            {\"METHODS\", \"HASHEDPASSWORD\"},\n+        });\n+    CheckParseTorReplyMapping(\n+        \"Tor=\\\"0.2.9.8 (git-a0df013ea241b026)\\\"\", {\n+            {\"Tor\", \"0.2.9.8 (git-a0df013ea241b026)\"},\n+        });\n+    CheckParseTorReplyMapping(\n+        \"SERVERHASH=aaaa SERVERNONCE=bbbb\", {\n+            {\"SERVERHASH\", \"aaaa\"},\n+            {\"SERVERNONCE\", \"bbbb\"},\n+        });\n+    CheckParseTorReplyMapping(\n+        \"ServiceID=exampleonion1234\", {\n+            {\"ServiceID\", \"exampleonion1234\"},\n+        });\n+    CheckParseTorReplyMapping(\n+        \"PrivateKey=RSA1024:BLOB\", {\n+            {\"PrivateKey\", \"RSA1024:BLOB\"},\n+        });\n+    CheckParseTorReplyMapping(\n+        \"ClientAuth=bob:BLOB\", {\n+            {\"ClientAuth\", \"bob:BLOB\"},\n+        });\n+\n+    // Other valid inputs\n+    CheckParseTorReplyMapping(\n+        \"Foo=Bar=Baz Spam=Eggs\", {\n+            {\"Foo\", \"Bar=Baz\"},\n+            {\"Spam\", \"Eggs\"},\n+        });\n+    CheckParseTorReplyMapping(\n+        \"Foo=\\\"Bar=Baz\\\"\", {\n+            {\"Foo\", \"Bar=Baz\"},\n+        });\n+    CheckParseTorReplyMapping(\n+        \"Foo=\\\"Bar Baz\\\"\", {\n+            {\"Foo\", \"Bar Baz\"},\n+        });\n+\n+    // Escapes (which are left escaped by the parser)\n+    CheckParseTorReplyMapping(\n+        \"Foo=\\\"Bar\\\\ Baz\\\"\", {\n+            {\"Foo\", \"Bar\\\\ Baz\"},\n+        });\n+    CheckParseTorReplyMapping(\n+        \"Foo=\\\"Bar\\\\Baz\\\"\", {\n+            {\"Foo\", \"Bar\\\\Baz\"},\n+        });\n+    CheckParseTorReplyMapping(\n+        \"Foo=\\\"Bar\\\\@Baz\\\"\", {\n+            {\"Foo\", \"Bar\\\\@Baz\"},\n+        });\n+    CheckParseTorReplyMapping(\n+        \"Foo=\\\"Bar\\\\\\\"Baz\\\" Spam=\\\"\\\\\\\"Eggs\\\\\\\"\\\"\", {\n+            {\"Foo\", \"Bar\\\\\\\"Baz\"},\n+            {\"Spam\", \"\\\\\\\"Eggs\\\\\\\"\"},\n+        });\n+    CheckParseTorReplyMapping(\n+        \"Foo=\\\"Bar\\\\\\\\Baz\\\"\", {\n+            {\"Foo\", \"Bar\\\\\\\\Baz\"},\n+        });\n+\n+    // A more complex valid grammar. PROTOCOLINFO accepts a VersionLine that\n+    // takes a key=value pair followed by an OptArguments, making this valid.\n+    // Because an OptArguments contains no semantic data, there is no point in\n+    // parsing it.\n+    CheckParseTorReplyMapping(\n+        \"SOME=args,here MORE optional=arguments  here\", {\n+            {\"SOME\", \"args,here\"},\n+        });\n+\n+    // Inputs that are effectively invalid under the target grammar.\n+    // PROTOCOLINFO accepts an OtherLine that is just an OptArguments, which\n+    // would make these inputs valid. However,\n+    // - This parser is never used in that situation, because the\n+    //   SplitTorReplyLine parser enables OtherLine to be skipped.\n+    // - Even if these were valid, an OptArguments contains no semantic data,\n+    //   so there is no point in parsing it.\n+    CheckParseTorReplyMapping(\"ARGS\", {});\n+    CheckParseTorReplyMapping(\"MORE ARGS\", {});\n+    CheckParseTorReplyMapping(\"MORE  ARGS\", {});\n+    CheckParseTorReplyMapping(\"EVEN more=ARGS\", {});\n+    CheckParseTorReplyMapping(\"EVEN+more ARGS\", {});\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "d63677bbb23a05feca7935c70673439705b06dca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjM2NzdiYmIyM2EwNWZlY2E3OTM1YzcwNjczNDM5NzA1YjA2ZGNh",
    "commit": {
      "author": {
        "name": "Jack Grigg",
        "email": "jack@z.cash",
        "date": "2017-03-25T11:35:13Z"
      },
      "committer": {
        "name": "Jack Grigg",
        "email": "jack@z.cash",
        "date": "2017-05-16T06:22:16Z"
      },
      "message": "torcontrol: Fix ParseTorReplyMapping\n\n- Ignore remaining input if it is an OptArguments\n- Correctly handle escapes",
      "tree": {
        "sha": "e08db216b94711b65a494f178dc792c7bc69c3ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e08db216b94711b65a494f178dc792c7bc69c3ed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d63677bbb23a05feca7935c70673439705b06dca",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJZGpqaAAoJEGZdvNKE99r/M60P/jfdgQ2TK8Z1x/0sFHcrb0rk\neApf4ZG6vsBIfWTkJ7sUBtccmc3i30XZu5dR11Bn/x5SVR2XbwYI9TRcTh8RR2RJ\nkMdfs2I4uvIAWPk9IihRijhTlgK7FW0JZouK0gtkzAkIh/ZfowFtX9CqkXJMpQDb\nscJofwQahvCaIA6p+ftzeLhsFQ3Y44INY0JQ8AZfrChAQBWEeelwdY7PmeRMjdOB\nFZ+1vLO6udh35xayRBHiQKKLPlugLy0chFokNASljwQ+QiLRZiVkGrGD7pWZP1s/\nRo120RtHXOSGFwhSZZkeMhiGn/K7fWtSsiAJ0dmYWdqiSVtgDvRFGLl8crlSCp78\nCsyWSqTj8M1+AT9WnALId4pIzzgGd6Hb+j9/be1GMq94svcc1yzD7rkhjzcl4xnv\n6ITR1V7t89e2ETSAFCtP/6SjBE0Yov0WB9/IgZysqYHngiEgFFugwbDMPpagw3Tv\njbg3ar9IdTloZe5/1Af4jhSZRmdMKqS7BpFT+DjcZVdsc18UejJfs4yTUBSzDFs9\nPPKIO0r1PBB1W0NmRgsKz0iH6WkTqascxO4AibtrZL1/4y7EjvBYqE5vEn0Np67P\nqYRomgWhNVuSOPJl5rsPrKWLbA8rDZ2kQ7Odgui7fFNXyio+ivuZpyRGTpFFzzli\nKAtArOkmvJYE7F0lSKsh\n=mVPC\n-----END PGP SIGNATURE-----",
        "payload": "tree e08db216b94711b65a494f178dc792c7bc69c3ed\nparent 29f3c200780bcb669f31932ce484aee2e5a51a02\nauthor Jack Grigg <jack@z.cash> 1490441713 +1300\ncommitter Jack Grigg <jack@z.cash> 1494915736 +1200\n\ntorcontrol: Fix ParseTorReplyMapping\n\n- Ignore remaining input if it is an OptArguments\n- Correctly handle escapes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d63677bbb23a05feca7935c70673439705b06dca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d63677bbb23a05feca7935c70673439705b06dca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d63677bbb23a05feca7935c70673439705b06dca/comments",
    "author": {
      "login": "str4d",
      "id": 4993799,
      "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/str4d",
      "html_url": "https://github.com/str4d",
      "followers_url": "https://api.github.com/users/str4d/followers",
      "following_url": "https://api.github.com/users/str4d/following{/other_user}",
      "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
      "organizations_url": "https://api.github.com/users/str4d/orgs",
      "repos_url": "https://api.github.com/users/str4d/repos",
      "events_url": "https://api.github.com/users/str4d/events{/privacy}",
      "received_events_url": "https://api.github.com/users/str4d/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "str4d",
      "id": 4993799,
      "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/str4d",
      "html_url": "https://github.com/str4d",
      "followers_url": "https://api.github.com/users/str4d/followers",
      "following_url": "https://api.github.com/users/str4d/following{/other_user}",
      "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
      "organizations_url": "https://api.github.com/users/str4d/orgs",
      "repos_url": "https://api.github.com/users/str4d/repos",
      "events_url": "https://api.github.com/users/str4d/events{/privacy}",
      "received_events_url": "https://api.github.com/users/str4d/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29f3c200780bcb669f31932ce484aee2e5a51a02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29f3c200780bcb669f31932ce484aee2e5a51a02",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29f3c200780bcb669f31932ce484aee2e5a51a02"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0d787d16e641d3a18d681f33c24d55f9ec0d26c7",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d63677bbb23a05feca7935c70673439705b06dca/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d63677bbb23a05feca7935c70673439705b06dca/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=d63677bbb23a05feca7935c70673439705b06dca",
        "patch": "@@ -277,17 +277,19 @@ static std::map<std::string,std::string> ParseTorReplyMapping(const std::string\n     size_t ptr=0;\n     while (ptr < s.size()) {\n         std::string key, value;\n-        while (ptr < s.size() && s[ptr] != '=') {\n+        while (ptr < s.size() && s[ptr] != '=' && s[ptr] != ' ') {\n             key.push_back(s[ptr]);\n             ++ptr;\n         }\n         if (ptr == s.size()) // unexpected end of line\n             return std::map<std::string,std::string>();\n+        if (s[ptr] == ' ') // The remaining string is an OptArguments\n+            break;\n         ++ptr; // skip '='\n         if (ptr < s.size() && s[ptr] == '\"') { // Quoted string\n             ++ptr; // skip opening '\"'\n             bool escape_next = false;\n-            while (ptr < s.size() && (!escape_next && s[ptr] != '\"')) {\n+            while (ptr < s.size() && (escape_next || s[ptr] != '\"')) {\n                 escape_next = (s[ptr] == '\\\\');\n                 value.push_back(s[ptr]);\n                 ++ptr;"
      }
    ]
  },
  {
    "sha": "0b6f40d4cabb3bebf551a49a69ce36d4b0375b6a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjZmNDBkNGNhYmIzYmViZjU1MWE0OWE2OWNlMzZkNGIwMzc1YjZh",
    "commit": {
      "author": {
        "name": "Jack Grigg",
        "email": "jack@z.cash",
        "date": "2017-03-26T00:53:13Z"
      },
      "committer": {
        "name": "Jack Grigg",
        "email": "jack@z.cash",
        "date": "2017-05-16T06:22:19Z"
      },
      "message": "torcontrol: Check for reading errors in ReadBinaryFile\n\nThis ensures that ReadBinaryFile never returns exactly TOR_COOKIE_SIZE bytes if\nthe file was larger than that.",
      "tree": {
        "sha": "e4c256b680262f336ca1787f781d39a60b19f1fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4c256b680262f336ca1787f781d39a60b19f1fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b6f40d4cabb3bebf551a49a69ce36d4b0375b6a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJZGpqdAAoJEGZdvNKE99r/H/AP/Agz+2/1Lw8iiB7RyGRLJ8f3\n+Ock5NZfu81khr1QIHrGxcebXuDqsy1mzLTtdFbe+wKLzUT4lSPsFgORAT8hWtbc\nGT+RFTfTmuJy3WzobYmQkTMMdIofkuO6HjqivsRJn+WTQHj19R4kyVsKxiAnbdeZ\njJY9z+kx/wAPp0wcQPXj2NsZPmFtgoeafyP79Wq86XMeceA/QWgzOSW+AWiFm1DU\naTq2w+YKHcB7oeuEkie8fHK/P5244xIk+gK3Ju/8sMCgVTJB3PSelkB8B+0mZ4Xv\nqYn6XVO/tTpmuTmrxErSG/YVNYV4T7/SPB0LTcpeBWHDtTlWiGhNC02q2+T9zPkD\n3iCp2sKXTbmDVQcOGlsiIVQ4B3T44KdNUxF3qgt1uSdgx7rw6pYPtwKArx03etFK\n5X3CYPI28frEsEdCwWa+OxqnfktHRn4S5feO3xBNRjQxzSsTEU4pUEWfj/aJ9gHt\nuEluzyIaSO0f0A6b6FBm1LE0/I7WgyFEPMD3r0CHvkI7OhXCHexK7eeM6CVyWBZ7\nbsCC35MuMjZ2rRPQfGXahoIinhYBjExvR8z7BAMFbeBQip88sNLXhozCQ1GliuxA\nBR86PTEnDk/RPLoORy6Cp/6u+Uie1dY+ukLvxUKnJ0Cc4lPMW49J56K5KyzL/0If\nDB8FrXSIXZKctKb9aUhb\n=zCFA\n-----END PGP SIGNATURE-----",
        "payload": "tree e4c256b680262f336ca1787f781d39a60b19f1fe\nparent d63677bbb23a05feca7935c70673439705b06dca\nauthor Jack Grigg <jack@z.cash> 1490489593 +1300\ncommitter Jack Grigg <jack@z.cash> 1494915739 +1200\n\ntorcontrol: Check for reading errors in ReadBinaryFile\n\nThis ensures that ReadBinaryFile never returns exactly TOR_COOKIE_SIZE bytes if\nthe file was larger than that.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b6f40d4cabb3bebf551a49a69ce36d4b0375b6a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b6f40d4cabb3bebf551a49a69ce36d4b0375b6a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b6f40d4cabb3bebf551a49a69ce36d4b0375b6a/comments",
    "author": {
      "login": "str4d",
      "id": 4993799,
      "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/str4d",
      "html_url": "https://github.com/str4d",
      "followers_url": "https://api.github.com/users/str4d/followers",
      "following_url": "https://api.github.com/users/str4d/following{/other_user}",
      "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
      "organizations_url": "https://api.github.com/users/str4d/orgs",
      "repos_url": "https://api.github.com/users/str4d/repos",
      "events_url": "https://api.github.com/users/str4d/events{/privacy}",
      "received_events_url": "https://api.github.com/users/str4d/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "str4d",
      "id": 4993799,
      "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/str4d",
      "html_url": "https://github.com/str4d",
      "followers_url": "https://api.github.com/users/str4d/followers",
      "following_url": "https://api.github.com/users/str4d/following{/other_user}",
      "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
      "organizations_url": "https://api.github.com/users/str4d/orgs",
      "repos_url": "https://api.github.com/users/str4d/repos",
      "events_url": "https://api.github.com/users/str4d/events{/privacy}",
      "received_events_url": "https://api.github.com/users/str4d/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d63677bbb23a05feca7935c70673439705b06dca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d63677bbb23a05feca7935c70673439705b06dca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d63677bbb23a05feca7935c70673439705b06dca"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bc48665f788f99371574d87b03ef835ad4f703c8",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b6f40d4cabb3bebf551a49a69ce36d4b0375b6a/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b6f40d4cabb3bebf551a49a69ce36d4b0375b6a/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=0b6f40d4cabb3bebf551a49a69ce36d4b0375b6a",
        "patch": "@@ -330,6 +330,10 @@ static std::pair<bool,std::string> ReadBinaryFile(const fs::path &filename, size\n     char buffer[128];\n     size_t n;\n     while ((n=fread(buffer, 1, sizeof(buffer), f)) > 0) {\n+        // Check for reading errors so we don't return any data if we couldn't\n+        // read the entire file (or up to maxsize)\n+        if (ferror(f))\n+            return std::make_pair(false,\"\");\n         retval.append(buffer, buffer+n);\n         if (retval.size() > maxsize)\n             break;"
      }
    ]
  },
  {
    "sha": "0182a11737e02b2ce0ab162ecfade904feb5f640",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTgyYTExNzM3ZTAyYjJjZTBhYjE2MmVjZmFkZTkwNGZlYjVmNjQw",
    "commit": {
      "author": {
        "name": "Jack Grigg",
        "email": "jack@z.cash",
        "date": "2017-03-26T01:35:13Z"
      },
      "committer": {
        "name": "Jack Grigg",
        "email": "jack@z.cash",
        "date": "2017-05-16T06:22:22Z"
      },
      "message": "torcontrol: Log invalid parameters in Tor reply strings where meaningful",
      "tree": {
        "sha": "1dda3584c006a0961f5d42c096264029b7e3baf0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1dda3584c006a0961f5d42c096264029b7e3baf0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0182a11737e02b2ce0ab162ecfade904feb5f640",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJZGpqgAAoJEGZdvNKE99r/dwAP/RMgINb3pdH1LmpLlkbgifMT\nuTq940/qRrM+VGkxOKxgSHweLb+DM8izCxxUiR1wmAEDRK6tz5HEMDSN8TILaR0H\nIqkxDwdKWpBHjlca5b7rRof9+LhI9X3yyNgXGr+Qf5YZqtxsppekjy0cFMvdgXL9\nuUH0UXI/aumE7dFbbybmBt69GlW8ye0W/AWam6YXIbh2Ypk+c1D8X3hgJA8kup4M\nbnHDNcC78JIsguDkAr2V0YNsJogBmuYNe33ktqa5I3DnlFlewD61SgW+bhcu3lAc\nSb+qTJWgCj9Ky9O0x9uPbgpHQ2tv22mEKS+lUpBfeg08DTdamtPIvBdocC4tL1Js\nIzctV6Pxh9dmJyOl13Jqh5PUTPmPnbwEW7V70DIpkQpLYcSlY48cHziRaP9XDNml\n5tvxgGHU48nrgGjnx16W1bLYtHcP7BhdTIsf3+GzwlKndNtiANqVHwKVH/mYtvzN\n+XKj5lUwbYDVQnRD+Ul5ivDB2Sb9CaVe6mA4yl6+IMIONKA/mWSvFqlzHCN8nNcG\nGgAmZZb0HEX2KPUNgiY1L/LGxdPV8OmiPV/8AyLQB6DxGAD0L3vcWf3p6itginJC\nzsFkx/my178H95XyCHZ7vbw0lZS/gJm47DOdeQTYIyPc5IiOGWonAl47z94eJinb\nNsgzwlo1Gedg/SY+RYlM\n=QtM3\n-----END PGP SIGNATURE-----",
        "payload": "tree 1dda3584c006a0961f5d42c096264029b7e3baf0\nparent 0b6f40d4cabb3bebf551a49a69ce36d4b0375b6a\nauthor Jack Grigg <jack@z.cash> 1490492113 +1300\ncommitter Jack Grigg <jack@z.cash> 1494915742 +1200\n\ntorcontrol: Log invalid parameters in Tor reply strings where meaningful\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0182a11737e02b2ce0ab162ecfade904feb5f640",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0182a11737e02b2ce0ab162ecfade904feb5f640",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0182a11737e02b2ce0ab162ecfade904feb5f640/comments",
    "author": {
      "login": "str4d",
      "id": 4993799,
      "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/str4d",
      "html_url": "https://github.com/str4d",
      "followers_url": "https://api.github.com/users/str4d/followers",
      "following_url": "https://api.github.com/users/str4d/following{/other_user}",
      "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
      "organizations_url": "https://api.github.com/users/str4d/orgs",
      "repos_url": "https://api.github.com/users/str4d/repos",
      "events_url": "https://api.github.com/users/str4d/events{/privacy}",
      "received_events_url": "https://api.github.com/users/str4d/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "str4d",
      "id": 4993799,
      "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/str4d",
      "html_url": "https://github.com/str4d",
      "followers_url": "https://api.github.com/users/str4d/followers",
      "following_url": "https://api.github.com/users/str4d/following{/other_user}",
      "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
      "organizations_url": "https://api.github.com/users/str4d/orgs",
      "repos_url": "https://api.github.com/users/str4d/repos",
      "events_url": "https://api.github.com/users/str4d/events{/privacy}",
      "received_events_url": "https://api.github.com/users/str4d/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b6f40d4cabb3bebf551a49a69ce36d4b0375b6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b6f40d4cabb3bebf551a49a69ce36d4b0375b6a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b6f40d4cabb3bebf551a49a69ce36d4b0375b6a"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "879a63bfea6e9ba235a851e65a708562947461f9",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0182a11737e02b2ce0ab162ecfade904feb5f640/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0182a11737e02b2ce0ab162ecfade904feb5f640/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=0182a11737e02b2ce0ab162ecfade904feb5f640",
        "patch": "@@ -267,6 +267,7 @@ static std::pair<std::string,std::string> SplitTorReplyLine(const std::string &s\n }\n \n /** Parse reply arguments in the form 'METHODS=COOKIE,SAFECOOKIE COOKIEFILE=\".../control_auth_cookie\"'.\n+ * Returns a map of keys to values, or an empty map if there was an error.\n  * Grammar is implicitly defined in https://spec.torproject.org/control-spec by\n  * the server reply formats for PROTOCOLINFO (S3.21), AUTHCHALLENGE (S3.24),\n  * and ADD_ONION (S3.27). See also sections 2.1 and 2.3.\n@@ -450,6 +451,13 @@ void TorController::add_onion_cb(TorControlConnection& _conn, const TorControlRe\n             if ((i = m.find(\"PrivateKey\")) != m.end())\n                 private_key = i->second;\n         }\n+        if (service_id.empty()) {\n+            LogPrintf(\"tor: Error parsing ADD_ONION parameters:\\n\");\n+            for (const std::string &s : reply.lines) {\n+                LogPrintf(\"    %s\\n\", SanitizeString(s));\n+            }\n+            return;\n+        }\n         service = LookupNumeric(std::string(service_id+\".onion\").c_str(), GetListenPort());\n         LogPrintf(\"tor: Got service ID %s, advertising service %s\\n\", service_id, service.ToString());\n         if (WriteBinaryFile(GetPrivateKeyFile(), private_key)) {\n@@ -527,6 +535,10 @@ void TorController::authchallenge_cb(TorControlConnection& _conn, const TorContr\n         std::pair<std::string,std::string> l = SplitTorReplyLine(reply.lines[0]);\n         if (l.first == \"AUTHCHALLENGE\") {\n             std::map<std::string,std::string> m = ParseTorReplyMapping(l.second);\n+            if (m.empty()) {\n+                LogPrintf(\"tor: Error parsing AUTHCHALLENGE parameters: %s\\n\", SanitizeString(l.second));\n+                return;\n+            }\n             std::vector<uint8_t> serverHash = ParseHex(m[\"SERVERHASH\"]);\n             std::vector<uint8_t> serverNonce = ParseHex(m[\"SERVERNONCE\"]);\n             LogPrint(BCLog::TOR, \"tor: AUTHCHALLENGE ServerHash %s ServerNonce %s\\n\", HexStr(serverHash), HexStr(serverNonce));"
      }
    ]
  },
  {
    "sha": "49a199bb51fc00659f8134e5b16f5d36364b0554",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OWExOTliYjUxZmMwMDY1OWY4MTM0ZTViMTZmNWQzNjM2NGIwNTU0",
    "commit": {
      "author": {
        "name": "Jack Grigg",
        "email": "jack@z.cash",
        "date": "2017-04-11T06:30:42Z"
      },
      "committer": {
        "name": "Jack Grigg",
        "email": "jack@z.cash",
        "date": "2017-05-16T06:22:25Z"
      },
      "message": "torcontrol: Handle escapes in Tor QuotedStrings\n\nhttps://trac.torproject.org/projects/tor/ticket/14999 is tracking an encoding\nbug with the Tor control protocol, where many of the QuotedString instances that\nTor outputs are in fact CStrings, but it is not documented which ones are which.\n\nhttps://spec.torproject.org/control-spec section 2.1.1 provides a future-proofed\nrule for handing QuotedStrings, which this commit implements.\n\nThis commit merges all six commits from https://github.com/zcash/zcash/pull/2251",
      "tree": {
        "sha": "1491e7ede9ccad52f0b7f62f52868e8510966768",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1491e7ede9ccad52f0b7f62f52868e8510966768"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49a199bb51fc00659f8134e5b16f5d36364b0554",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJZGpqjAAoJEGZdvNKE99r/4ZwP/RxIy+BvvyvKa1D1KlRzGrEf\njv1mx9R+i0zOYp6jE/HU8Arb7TirJ+fC+5B2EKNQTOp3r7bXpdvBh9GpIGBj6f8h\n8hhS/uSa5axKYxgUVqbsYLlZfzWsB8Yjg708mEXbC6LPNzw0vJr9jBKb3A6rc1f+\nR4ElLXtvy7cfyMZz2jFUzxXnYz0uRYNSVXwDINByQJeTe4wK89UFSL6ITOIPA8v/\nnd1zSxCyicYbTRhYxYKtoxLAtYCVtSuCCCRLnugZwlS20eRLL/eWbX3BIfLHthxF\nm06xpglggmdx+O/AzdqpqIddDnRs5GqpyjQjyaiWJgab7qDUoz3mUJkD7ZhubzFa\nH3mkbFmSTjtZHaV4fY9kHiGT4+5trnAVnFs4hIdcZrQGLLKUeGFJ4H5mN8gz5Rh4\nIUtQghaEnzMCNhClHxog9GgB6vAoNabkbUYQSd+l2ASFkyQraXz+tpcdTicNoOIe\nLGGQnCQ1nY44S6Jpkj9PJbbBfqy0AOJJ6mBYr4TVkSTwJKAndvuY/OKxTdZh6/XI\nFk3s6omlavTBJP8x/49N6P7IxPzB5ZqqD08Qud0XoetjaOQU8nxlTN0QdNoUcQGu\nF1CMGR0MTJuKCNNA0FNE8S7MS/PjbwUGLL7Fb/7T7aTksVi8iT2JRKTcUiOwGALO\nNsBK1H0Tmbmlf4z+2U2t\n=c6XL\n-----END PGP SIGNATURE-----",
        "payload": "tree 1491e7ede9ccad52f0b7f62f52868e8510966768\nparent 0182a11737e02b2ce0ab162ecfade904feb5f640\nauthor Jack Grigg <jack@z.cash> 1491892242 +1200\ncommitter Jack Grigg <jack@z.cash> 1494915745 +1200\n\ntorcontrol: Handle escapes in Tor QuotedStrings\n\nhttps://trac.torproject.org/projects/tor/ticket/14999 is tracking an encoding\nbug with the Tor control protocol, where many of the QuotedString instances that\nTor outputs are in fact CStrings, but it is not documented which ones are which.\n\nhttps://spec.torproject.org/control-spec section 2.1.1 provides a future-proofed\nrule for handing QuotedStrings, which this commit implements.\n\nThis commit merges all six commits from https://github.com/zcash/zcash/pull/2251\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49a199bb51fc00659f8134e5b16f5d36364b0554",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/49a199bb51fc00659f8134e5b16f5d36364b0554",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49a199bb51fc00659f8134e5b16f5d36364b0554/comments",
    "author": {
      "login": "str4d",
      "id": 4993799,
      "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/str4d",
      "html_url": "https://github.com/str4d",
      "followers_url": "https://api.github.com/users/str4d/followers",
      "following_url": "https://api.github.com/users/str4d/following{/other_user}",
      "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
      "organizations_url": "https://api.github.com/users/str4d/orgs",
      "repos_url": "https://api.github.com/users/str4d/repos",
      "events_url": "https://api.github.com/users/str4d/events{/privacy}",
      "received_events_url": "https://api.github.com/users/str4d/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "str4d",
      "id": 4993799,
      "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/str4d",
      "html_url": "https://github.com/str4d",
      "followers_url": "https://api.github.com/users/str4d/followers",
      "following_url": "https://api.github.com/users/str4d/following{/other_user}",
      "gists_url": "https://api.github.com/users/str4d/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/str4d/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
      "organizations_url": "https://api.github.com/users/str4d/orgs",
      "repos_url": "https://api.github.com/users/str4d/repos",
      "events_url": "https://api.github.com/users/str4d/events{/privacy}",
      "received_events_url": "https://api.github.com/users/str4d/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0182a11737e02b2ce0ab162ecfade904feb5f640",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0182a11737e02b2ce0ab162ecfade904feb5f640",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0182a11737e02b2ce0ab162ecfade904feb5f640"
      }
    ],
    "stats": {
      "total": 98,
      "additions": 87,
      "deletions": 11
    },
    "files": [
      {
        "sha": "b7affaacde585dae3c395359ecc30364ea88a40f",
        "filename": "src/test/torcontrol_tests.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 7,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49a199bb51fc00659f8134e5b16f5d36364b0554/src/test/torcontrol_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49a199bb51fc00659f8134e5b16f5d36364b0554/src/test/torcontrol_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/torcontrol_tests.cpp?ref=49a199bb51fc00659f8134e5b16f5d36364b0554",
        "patch": "@@ -119,29 +119,60 @@ BOOST_AUTO_TEST_CASE(util_ParseTorReplyMapping)\n             {\"Foo\", \"Bar Baz\"},\n         });\n \n-    // Escapes (which are left escaped by the parser)\n+    // Escapes\n     CheckParseTorReplyMapping(\n         \"Foo=\\\"Bar\\\\ Baz\\\"\", {\n-            {\"Foo\", \"Bar\\\\ Baz\"},\n+            {\"Foo\", \"Bar Baz\"},\n         });\n     CheckParseTorReplyMapping(\n         \"Foo=\\\"Bar\\\\Baz\\\"\", {\n-            {\"Foo\", \"Bar\\\\Baz\"},\n+            {\"Foo\", \"BarBaz\"},\n         });\n     CheckParseTorReplyMapping(\n         \"Foo=\\\"Bar\\\\@Baz\\\"\", {\n-            {\"Foo\", \"Bar\\\\@Baz\"},\n+            {\"Foo\", \"Bar@Baz\"},\n         });\n     CheckParseTorReplyMapping(\n         \"Foo=\\\"Bar\\\\\\\"Baz\\\" Spam=\\\"\\\\\\\"Eggs\\\\\\\"\\\"\", {\n-            {\"Foo\", \"Bar\\\\\\\"Baz\"},\n-            {\"Spam\", \"\\\\\\\"Eggs\\\\\\\"\"},\n+            {\"Foo\", \"Bar\\\"Baz\"},\n+            {\"Spam\", \"\\\"Eggs\\\"\"},\n         });\n     CheckParseTorReplyMapping(\n         \"Foo=\\\"Bar\\\\\\\\Baz\\\"\", {\n-            {\"Foo\", \"Bar\\\\\\\\Baz\"},\n+            {\"Foo\", \"Bar\\\\Baz\"},\n         });\n \n+    // C escapes\n+    CheckParseTorReplyMapping(\n+        \"Foo=\\\"Bar\\\\nBaz\\\\t\\\" Spam=\\\"\\\\rEggs\\\" Octals=\\\"\\\\1a\\\\11\\\\17\\\\18\\\\81\\\\377\\\\378\\\\400\\\\2222\\\" Final=Check\", {\n+            {\"Foo\", \"Bar\\nBaz\\t\"},\n+            {\"Spam\", \"\\rEggs\"},\n+            {\"Octals\", \"\\1a\\11\\17\\1\" \"881\\377\\37\" \"8\\40\" \"0\\222\" \"2\"},\n+            {\"Final\", \"Check\"},\n+        });\n+    CheckParseTorReplyMapping(\n+        \"Valid=Mapping Escaped=\\\"Escape\\\\\\\\\\\"\", {\n+            {\"Valid\", \"Mapping\"},\n+            {\"Escaped\", \"Escape\\\\\"},\n+        });\n+    CheckParseTorReplyMapping(\n+        \"Valid=Mapping Bare=\\\"Escape\\\\\\\"\", {});\n+    CheckParseTorReplyMapping(\n+        \"OneOctal=\\\"OneEnd\\\\1\\\" TwoOctal=\\\"TwoEnd\\\\11\\\"\", {\n+            {\"OneOctal\", \"OneEnd\\1\"},\n+            {\"TwoOctal\", \"TwoEnd\\11\"},\n+        });\n+\n+    // Special handling for null case\n+    // (needed because string comparison reads the null as end-of-string)\n+    BOOST_TEST_MESSAGE(std::string(\"CheckParseTorReplyMapping(Null=\\\"\\\\0\\\")\"));\n+    auto ret = ParseTorReplyMapping(\"Null=\\\"\\\\0\\\"\");\n+    BOOST_CHECK_EQUAL(ret.size(), 1);\n+    auto r_it = ret.begin();\n+    BOOST_CHECK_EQUAL(r_it->first, \"Null\");\n+    BOOST_CHECK_EQUAL(r_it->second.size(), 1);\n+    BOOST_CHECK_EQUAL(r_it->second[0], '\\0');\n+\n     // A more complex valid grammar. PROTOCOLINFO accepts a VersionLine that\n     // takes a key=value pair followed by an OptArguments, making this valid.\n     // Because an OptArguments contains no semantic data, there is no point in"
      },
      {
        "sha": "46a926b3ef142441466beea0def7e8ac11586fcf",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 49,
        "deletions": 4,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49a199bb51fc00659f8134e5b16f5d36364b0554/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49a199bb51fc00659f8134e5b16f5d36364b0554/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=49a199bb51fc00659f8134e5b16f5d36364b0554",
        "patch": "@@ -1,4 +1,5 @@\n // Copyright (c) 2015-2016 The Bitcoin Core developers\n+// Copyright (c) 2017 The Zcash developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -291,17 +292,61 @@ static std::map<std::string,std::string> ParseTorReplyMapping(const std::string\n             ++ptr; // skip opening '\"'\n             bool escape_next = false;\n             while (ptr < s.size() && (escape_next || s[ptr] != '\"')) {\n-                escape_next = (s[ptr] == '\\\\');\n+                // Repeated backslashes must be interpreted as pairs\n+                escape_next = (s[ptr] == '\\\\' && !escape_next);\n                 value.push_back(s[ptr]);\n                 ++ptr;\n             }\n             if (ptr == s.size()) // unexpected end of line\n                 return std::map<std::string,std::string>();\n             ++ptr; // skip closing '\"'\n-            /* TODO: unescape value - according to the spec this depends on the\n-             * context, some strings use C-LogPrintf style escape codes, some\n-             * don't. So may be better handled at the call site.\n+            /**\n+             * Unescape value. Per https://spec.torproject.org/control-spec section 2.1.1:\n+             *\n+             *   For future-proofing, controller implementors MAY use the following\n+             *   rules to be compatible with buggy Tor implementations and with\n+             *   future ones that implement the spec as intended:\n+             *\n+             *     Read \\n \\t \\r and \\0 ... \\377 as C escapes.\n+             *     Treat a backslash followed by any other character as that character.\n              */\n+            std::string escaped_value;\n+            for (size_t i = 0; i < value.size(); ++i) {\n+                if (value[i] == '\\\\') {\n+                    // This will always be valid, because if the QuotedString\n+                    // ended in an odd number of backslashes, then the parser\n+                    // would already have returned above, due to a missing\n+                    // terminating double-quote.\n+                    ++i;\n+                    if (value[i] == 'n') {\n+                        escaped_value.push_back('\\n');\n+                    } else if (value[i] == 't') {\n+                        escaped_value.push_back('\\t');\n+                    } else if (value[i] == 'r') {\n+                        escaped_value.push_back('\\r');\n+                    } else if ('0' <= value[i] && value[i] <= '7') {\n+                        size_t j;\n+                        // Octal escape sequences have a limit of three octal digits,\n+                        // but terminate at the first character that is not a valid\n+                        // octal digit if encountered sooner.\n+                        for (j = 1; j < 3 && (i+j) < value.size() && '0' <= value[i+j] && value[i+j] <= '7'; ++j) {}\n+                        // Tor restricts first digit to 0-3 for three-digit octals.\n+                        // A leading digit of 4-7 would therefore be interpreted as\n+                        // a two-digit octal.\n+                        if (j == 3 && value[i] > '3') {\n+                            j--;\n+                        }\n+                        escaped_value.push_back(strtol(value.substr(i, j).c_str(), NULL, 8));\n+                        // Account for automatic incrementing at loop end\n+                        i += j - 1;\n+                    } else {\n+                        escaped_value.push_back(value[i]);\n+                    }\n+                } else {\n+                    escaped_value.push_back(value[i]);\n+                }\n+            }\n+            value = escaped_value;\n         } else { // Unquoted value. Note that values can contain '=' at will, just no spaces\n             while (ptr < s.size() && s[ptr] != ' ') {\n                 value.push_back(s[ptr]);"
      }
    ]
  }
]