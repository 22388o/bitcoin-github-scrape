[
  {
    "sha": "b602c9b3af284995d0f89b4c676f6f6c5316c9a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNjAyYzliM2FmMjg0OTk1ZDBmODliNGM2NzZmNmY2YzUzMTZjOWEy",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-30T14:33:02Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-30T14:36:26Z"
      },
      "message": "tests: Add missing locking annotations and locks",
      "tree": {
        "sha": "081406f2b745bab6f33bd37e779372964220b83e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/081406f2b745bab6f33bd37e779372964220b83e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b602c9b3af284995d0f89b4c676f6f6c5316c9a2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b602c9b3af284995d0f89b4c676f6f6c5316c9a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b602c9b3af284995d0f89b4c676f6f6c5316c9a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b602c9b3af284995d0f89b4c676f6f6c5316c9a2/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "07033a8f91975028e366920b0da3f7e2a6ef9cbd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07033a8f91975028e366920b0da3f7e2a6ef9cbd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07033a8f91975028e366920b0da3f7e2a6ef9cbd"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "9f950831c47712441d01a93b1c92e094bfccef45",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b602c9b3af284995d0f89b4c676f6f6c5316c9a2/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b602c9b3af284995d0f89b4c676f6f6c5316c9a2/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=b602c9b3af284995d0f89b4c676f6f6c5316c9a2",
        "patch": "@@ -70,7 +70,7 @@ struct COrphanTx {\n     NodeId fromPeer;\n     int64_t nTimeExpire;\n };\n-static CCriticalSection g_cs_orphans;\n+CCriticalSection g_cs_orphans;\n std::map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(g_cs_orphans);\n \n void EraseOrphansFor(NodeId peer);"
      },
      {
        "sha": "52bbe96b96e3e3062c439ad228f07f8ee80e0209",
        "filename": "src/test/denialofservice_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b602c9b3af284995d0f89b4c676f6f6c5316c9a2/src/test/denialofservice_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b602c9b3af284995d0f89b4c676f6f6c5316c9a2/src/test/denialofservice_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/denialofservice_tests.cpp?ref=b602c9b3af284995d0f89b4c676f6f6c5316c9a2",
        "patch": "@@ -31,7 +31,8 @@ struct COrphanTx {\n     NodeId fromPeer;\n     int64_t nTimeExpire;\n };\n-extern std::map<uint256, COrphanTx> mapOrphanTransactions;\n+extern CCriticalSection g_cs_orphans;\n+extern std::map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(g_cs_orphans);\n \n static CService ip(uint32_t i)\n {\n@@ -324,7 +325,7 @@ BOOST_AUTO_TEST_CASE(DoS_bantime)\n static CTransactionRef RandomOrphan()\n {\n     std::map<uint256, COrphanTx>::iterator it;\n-    LOCK(cs_main);\n+    LOCK2(cs_main, g_cs_orphans);\n     it = mapOrphanTransactions.lower_bound(InsecureRand256());\n     if (it == mapOrphanTransactions.end())\n         it = mapOrphanTransactions.begin();\n@@ -394,7 +395,7 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n         BOOST_CHECK(!AddOrphanTx(MakeTransactionRef(tx), i));\n     }\n \n-    LOCK(cs_main);\n+    LOCK2(cs_main, g_cs_orphans);\n     // Test EraseOrphansFor:\n     for (NodeId i = 0; i < 3; i++)\n     {"
      }
    ]
  }
]