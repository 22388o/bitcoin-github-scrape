[
  {
    "sha": "2a03a39020da5ae38f05c38a5bf92c023acdeb90",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYTAzYTM5MDIwZGE1YWUzOGYwNWMzOGE1YmY5MmMwMjNhY2RlYjkw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-10-11T21:09:59Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-10-21T07:22:48Z"
      },
      "message": "Add separate bitcoin-rpc client\n\nThis adds an executable `bitcoin-rpc` that only serves as a Bitcoin RPC\nclient.\nThe commit does not remove RPC functionality from the `bitcoind` yet,\nthis functionality should be deprecated but is left for a later version\nto give users some time to switch.",
      "tree": {
        "sha": "0428ba46a5f377dadddf0c570b908043f1fcbeb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0428ba46a5f377dadddf0c570b908043f1fcbeb5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a03a39020da5ae38f05c38a5bf92c023acdeb90",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a03a39020da5ae38f05c38a5bf92c023acdeb90",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2a03a39020da5ae38f05c38a5bf92c023acdeb90",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a03a39020da5ae38f05c38a5bf92c023acdeb90/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cc7562b7d2dc4eae6e3ab930a2a37cd3c00aac5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc7562b7d2dc4eae6e3ab930a2a37cd3c00aac5d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cc7562b7d2dc4eae6e3ab930a2a37cd3c00aac5d"
      }
    ],
    "stats": {
      "total": 304,
      "additions": 229,
      "deletions": 75
    },
    "files": [
      {
        "sha": "da0437835bc1e36d2608eaa46bc198dc44718009",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a03a39020da5ae38f05c38a5bf92c023acdeb90/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a03a39020da5ae38f05c38a5bf92c023acdeb90/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=2a03a39020da5ae38f05c38a5bf92c023acdeb90",
        "patch": "@@ -5,6 +5,7 @@ src/*.exe\n src/*/*.exe\n src/bitcoin\n src/bitcoind\n+src/bitcoin-cli\n src/test/test_bitcoin\n src/qt/test/test_bitcoin-qt\n "
      },
      {
        "sha": "14d1dd03a621cc1d7c98c354922bb6fa653ad823",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a03a39020da5ae38f05c38a5bf92c023acdeb90/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a03a39020da5ae38f05c38a5bf92c023acdeb90/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=2a03a39020da5ae38f05c38a5bf92c023acdeb90",
        "patch": "@@ -6,7 +6,7 @@ AM_LDFLAGS = $(PTHREAD_CFLAGS)\n \n noinst_LIBRARIES = libbitcoin.a\n \n-bin_PROGRAMS = bitcoind\n+bin_PROGRAMS = bitcoind bitcoin-cli\n \n SUBDIRS = . $(BUILD_QT) $(BUILD_TEST)\n DIST_SUBDIRS = . qt test\n@@ -55,6 +55,17 @@ endif\n AM_CPPFLAGS += $(BDB_CPPFLAGS)\n bitcoind_LDADD += $(BDB_LIBS)\n \n+# bitcoin-cli binary #\n+bitcoin_cli_LDADD = libbitcoin.a leveldb/libleveldb.a leveldb/libmemenv.a \\\n+  $(BOOST_LIBS)\n+bitcoin_cli_SOURCES = bitcoin-cli.cpp\n+#\n+\n+if TARGET_WINDOWS\n+bitcoin_cli_SOURCES += bitcoin-cli-res.rc\n+endif\n+bitcoin_cli_LDADD += $(BDB_LIBS)\n+\n leveldb/libleveldb.a: leveldb/libmemenv.a\n \n leveldb/%.a:"
      },
      {
        "sha": "337897753ec85ed0eb71f0e12adc6f8e47a9b3f8",
        "filename": "src/bitcoin-cli-res.rc",
        "status": "added",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a03a39020da5ae38f05c38a5bf92c023acdeb90/src/bitcoin-cli-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a03a39020da5ae38f05c38a5bf92c023acdeb90/src/bitcoin-cli-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli-res.rc?ref=2a03a39020da5ae38f05c38a5bf92c023acdeb90",
        "patch": "@@ -0,0 +1,36 @@\n+#include <windows.h>             // needed for VERSIONINFO\n+#include \"clientversion.h\"       // holds the needed client version information\n+\n+#define VER_PRODUCTVERSION     CLIENT_VERSION_MAJOR,CLIENT_VERSION_MINOR,CLIENT_VERSION_REVISION,CLIENT_VERSION_BUILD\n+#define VER_PRODUCTVERSION_STR STRINGIZE(CLIENT_VERSION_MAJOR) \".\" STRINGIZE(CLIENT_VERSION_MINOR) \".\" STRINGIZE(CLIENT_VERSION_REVISION) \".\" STRINGIZE(CLIENT_VERSION_BUILD)\n+#define VER_FILEVERSION        VER_PRODUCTVERSION\n+#define VER_FILEVERSION_STR    VER_PRODUCTVERSION_STR\n+#define COPYRIGHT_STR          \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" The Bitcoin developers\"\n+\n+VS_VERSION_INFO VERSIONINFO\n+FILEVERSION     VER_FILEVERSION\n+PRODUCTVERSION  VER_PRODUCTVERSION\n+FILEOS          VOS_NT_WINDOWS32\n+FILETYPE        VFT_APP\n+BEGIN\n+    BLOCK \"StringFileInfo\"\n+    BEGIN\n+        BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n+        BEGIN\n+            VALUE \"CompanyName\",        \"Bitcoin\"\n+            VALUE \"FileDescription\",    \"Bitcoin-cli (OSS RPC client for Bitcoin)\"\n+            VALUE \"FileVersion\",        VER_FILEVERSION_STR\n+            VALUE \"InternalName\",       \"bitcoin-cli\"\n+            VALUE \"LegalCopyright\",     COPYRIGHT_STR\n+            VALUE \"LegalTrademarks1\",   \"Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n+            VALUE \"OriginalFilename\",   \"bitcoin-cli.exe\"\n+            VALUE \"ProductName\",        \"Bitcoin-cli\"\n+            VALUE \"ProductVersion\",     VER_PRODUCTVERSION_STR\n+        END\n+    END\n+\n+    BLOCK \"VarFileInfo\"\n+    BEGIN\n+        VALUE \"Translation\", 0x0, 1252 // language neutral - multilingual (decimal)\n+    END\n+END"
      },
      {
        "sha": "bb30c748bbebfd3ee9f92a8a28480199be29b824",
        "filename": "src/bitcoin-cli.cpp",
        "status": "added",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a03a39020da5ae38f05c38a5bf92c023acdeb90/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a03a39020da5ae38f05c38a5bf92c023acdeb90/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=2a03a39020da5ae38f05c38a5bf92c023acdeb90",
        "patch": "@@ -0,0 +1,69 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"util.h\"\n+#include \"init.h\"\n+#include \"bitcoinrpc.h\"\n+#include \"ui_interface.h\" /* for _(...) */\n+\n+//////////////////////////////////////////////////////////////////////////////\n+//\n+// Start\n+//\n+static bool AppInitRPC(int argc, char* argv[])\n+{\n+    //\n+    // Parameters\n+    //\n+    ParseParameters(argc, argv);\n+    if (!boost::filesystem::is_directory(GetDataDir(false)))\n+    {\n+        fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", mapArgs[\"-datadir\"].c_str());\n+        return false;\n+    }\n+    ReadConfigFile(mapArgs, mapMultiArgs);\n+\n+    if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n+    {\n+        // First part of help message is specific to RPC client\n+        std::string strUsage = _(\"Bitcoin RPC client version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+            _(\"Usage:\") + \"\\n\" +\n+              \"  bitcoin-cli [options] <command> [params]  \" + _(\"Send command to Bitcoin server\") + \"\\n\" +\n+              \"  bitcoin-cli [options] help                \" + _(\"List commands\") + \"\\n\" +\n+              \"  bitcoin-cli [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n+\n+        strUsage += \"\\n\" + HelpMessage(HMM_BITCOIN_CLI);\n+\n+        fprintf(stdout, \"%s\", strUsage.c_str());\n+        return false;\n+    }\n+    return true;\n+}\n+\n+int main(int argc, char* argv[])\n+{\n+    try\n+    {\n+        if(!AppInitRPC(argc, argv))\n+            return 1;\n+    }\n+    catch (std::exception& e) {\n+        PrintExceptionContinue(&e, \"AppInitRPC()\");\n+    } catch (...) {\n+        PrintExceptionContinue(NULL, \"AppInitRPC()\");\n+    }\n+\n+    try\n+    {\n+        if(!CommandLineRPC(argc, argv))\n+            return 1;\n+    }\n+    catch (std::exception& e) {\n+        PrintExceptionContinue(&e, \"CommandLineRPC()\");\n+    } catch (...) {\n+        PrintExceptionContinue(NULL, \"CommandLineRPC()\");\n+    }\n+    return 0;\n+}"
      },
      {
        "sha": "fbacbd2e24c4fa62021b858d1d96165d18a624bb",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a03a39020da5ae38f05c38a5bf92c023acdeb90/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a03a39020da5ae38f05c38a5bf92c023acdeb90/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=2a03a39020da5ae38f05c38a5bf92c023acdeb90",
        "patch": "@@ -57,12 +57,13 @@ bool AppInit(int argc, char* argv[])\n             // First part of help message is specific to bitcoind / RPC client\n             std::string strUsage = _(\"Bitcoin version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +\n                 _(\"Usage:\") + \"\\n\" +\n-                  \"  bitcoind [options]                     \" + \"\\n\" +\n-                  \"  bitcoind [options] <command> [params]  \" + _(\"Send command to -server or bitcoind\") + \"\\n\" +\n+                  \"  bitcoind [options]                     \" + _(\"Start Bitcoin server\") + \"\\n\" +\n+                _(\"Usage (deprecated, use bitcoin-cli):\") + \"\\n\" +\n+                  \"  bitcoind [options] <command> [params]  \" + _(\"Send command to Bitcoin server\") + \"\\n\" +\n                   \"  bitcoind [options] help                \" + _(\"List commands\") + \"\\n\" +\n                   \"  bitcoind [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n \n-            strUsage += \"\\n\" + HelpMessage();\n+            strUsage += \"\\n\" + HelpMessage(HMM_BITCOIND);\n \n             fprintf(stdout, \"%s\", strUsage.c_str());\n             return false;"
      },
      {
        "sha": "6493679d2ec2f409a242771516f3a19c177d397a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 96,
        "deletions": 69,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a03a39020da5ae38f05c38a5bf92c023acdeb90/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a03a39020da5ae38f05c38a5bf92c023acdeb90/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=2a03a39020da5ae38f05c38a5bf92c023acdeb90",
        "patch": "@@ -171,94 +171,121 @@ bool static Bind(const CService &addr, unsigned int flags) {\n     return true;\n }\n \n-// Core-specific options shared between UI and daemon\n-std::string HelpMessage()\n+// Core-specific options shared between UI, daemon and RPC client\n+std::string HelpMessage(HelpMessageMode hmm)\n {\n     string strUsage = _(\"Options:\") + \"\\n\";\n     strUsage += \"  -?                     \" + _(\"This help message\") + \"\\n\";\n     strUsage += \"  -conf=<file>           \" + _(\"Specify configuration file (default: bitcoin.conf)\") + \"\\n\";\n-    strUsage += \"  -pid=<file>            \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\";\n-    strUsage += \"  -gen                   \" + _(\"Generate coins (default: 0)\") + \"\\n\";\n     strUsage += \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\";\n-    strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\";\n-    strUsage += \"  -dbcache=<n>           \" + _(\"Set database cache size in megabytes (default: 25)\") + \"\\n\";\n-    strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n-    strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through socks proxy\") + \"\\n\";\n-    strUsage += \"  -socks=<n>             \" + _(\"Select the version of socks proxy to use (4-5, default: 5)\") + \"\\n\";\n-    strUsage += \"  -onion=<ip:port>       \" + _(\"Use proxy to reach tor hidden services (default: same as -proxy)\") + \"\\n\";\n-    strUsage += \"  -dns                   \" + _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \"\\n\";\n-    strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n-    strUsage += \"  -maxconnections=<n>    \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\";\n-    strUsage += \"  -addnode=<ip>          \" + _(\"Add a node to connect to and attempt to keep the connection open\") + \"\\n\";\n-    strUsage += \"  -connect=<ip>          \" + _(\"Connect only to the specified node(s)\") + \"\\n\";\n-    strUsage += \"  -seednode=<ip>         \" + _(\"Connect to a node to retrieve peer addresses, and disconnect\") + \"\\n\";\n-    strUsage += \"  -externalip=<ip>       \" + _(\"Specify your own public address\") + \"\\n\";\n-    strUsage += \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\") + \"\\n\";\n-    strUsage += \"  -discover              \" + _(\"Discover own IP address (default: 1 when listening and no -externalip)\") + \"\\n\";\n-    strUsage += \"  -checkpoints           \" + _(\"Only accept block chain matching built-in checkpoints (default: 1)\") + \"\\n\";\n-    strUsage += \"  -listen                \" + _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\") + \"\\n\";\n-    strUsage += \"  -bind=<addr>           \" + _(\"Bind to given address and always listen on it. Use [host]:port notation for IPv6\") + \"\\n\";\n-    strUsage += \"  -dnsseed               \" + _(\"Find peers using DNS lookup (default: 1 unless -connect)\") + \"\\n\";\n-    strUsage += \"  -banscore=<n>          \" + _(\"Threshold for disconnecting misbehaving peers (default: 100)\") + \"\\n\";\n-    strUsage += \"  -bantime=<n>           \" + _(\"Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\") + \"\\n\";\n-    strUsage += \"  -maxreceivebuffer=<n>  \" + _(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)\") + \"\\n\";\n-    strUsage += \"  -maxsendbuffer=<n>     \" + _(\"Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)\") + \"\\n\";\n+    strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n+\n+    if(hmm == HMM_BITCOIND || hmm == HMM_BITCOIN_QT)\n+    {\n+        strUsage += \"  -pid=<file>            \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\";\n+        strUsage += \"  -gen                   \" + _(\"Generate coins (default: 0)\") + \"\\n\";\n+        strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\";\n+        strUsage += \"  -dbcache=<n>           \" + _(\"Set database cache size in megabytes (default: 25)\") + \"\\n\";\n+        strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n+        strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through socks proxy\") + \"\\n\";\n+        strUsage += \"  -socks=<n>             \" + _(\"Select the version of socks proxy to use (4-5, default: 5)\") + \"\\n\";\n+        strUsage += \"  -onion=<ip:port>         \" + _(\"Use proxy to reach tor hidden services (default: same as -proxy)\") + \"\\n\";\n+        strUsage += \"  -dns                   \" + _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \"\\n\";\n+        strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n+        strUsage += \"  -maxconnections=<n>    \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\";\n+        strUsage += \"  -addnode=<ip>          \" + _(\"Add a node to connect to and attempt to keep the connection open\") + \"\\n\";\n+        strUsage += \"  -connect=<ip>          \" + _(\"Connect only to the specified node(s)\") + \"\\n\";\n+        strUsage += \"  -seednode=<ip>         \" + _(\"Connect to a node to retrieve peer addresses, and disconnect\") + \"\\n\";\n+        strUsage += \"  -externalip=<ip>       \" + _(\"Specify your own public address\") + \"\\n\";\n+        strUsage += \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\") + \"\\n\";\n+        strUsage += \"  -discover              \" + _(\"Discover own IP address (default: 1 when listening and no -externalip)\") + \"\\n\";\n+        strUsage += \"  -checkpoints           \" + _(\"Only accept block chain matching built-in checkpoints (default: 1)\") + \"\\n\";\n+        strUsage += \"  -listen                \" + _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\") + \"\\n\";\n+        strUsage += \"  -bind=<addr>           \" + _(\"Bind to given address and always listen on it. Use [host]:port notation for IPv6\") + \"\\n\";\n+        strUsage += \"  -dnsseed               \" + _(\"Find peers using DNS lookup (default: 1 unless -connect)\") + \"\\n\";\n+        strUsage += \"  -banscore=<n>          \" + _(\"Threshold for disconnecting misbehaving peers (default: 100)\") + \"\\n\";\n+        strUsage += \"  -bantime=<n>           \" + _(\"Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\") + \"\\n\";\n+        strUsage += \"  -maxreceivebuffer=<n>  \" + _(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)\") + \"\\n\";\n+        strUsage += \"  -maxsendbuffer=<n>     \" + _(\"Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)\") + \"\\n\";\n #ifdef USE_UPNP\n #if USE_UPNP\n-    strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 1 when listening)\") + \"\\n\";\n+        strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 1 when listening)\") + \"\\n\";\n #else\n-    strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 0)\") + \"\\n\";\n+        strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 0)\") + \"\\n\";\n+#endif\n #endif\n+        strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per KB to add to transactions you send\") + \"\\n\";\n+        strUsage += \"  -debug                 \" + _(\"Output extra debugging information. Implies all other -debug* options\") + \"\\n\";\n+        strUsage += \"  -debugnet              \" + _(\"Output extra network debugging information\") + \"\\n\";\n+        strUsage += \"  -logtimestamps         \" + _(\"Prepend debug output with timestamp\") + \"\\n\";\n+        strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n+        strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n+        strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n+                                                \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n+#ifdef WIN32\n+        strUsage += \"  -printtodebugger       \" + _(\"Send trace/debug info to debugger\") + \"\\n\";\n #endif\n-    strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per KB to add to transactions you send\") + \"\\n\";\n-    if (fHaveGUI)\n+    }\n+\n+    if (hmm == HMM_BITCOIN_QT)\n+    {\n         strUsage += \"  -server                \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\";\n+    }\n+\n+    if (hmm == HMM_BITCOIND)\n+    {\n #if !defined(WIN32)\n-    if (fHaveGUI)\n         strUsage += \"  -daemon                \" + _(\"Run in the background as a daemon and accept commands\") + \"\\n\";\n #endif\n-    strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n-    strUsage += \"  -debug                 \" + _(\"Output extra debugging information. Implies all other -debug* options\") + \"\\n\";\n-    strUsage += \"  -debugnet              \" + _(\"Output extra network debugging information\") + \"\\n\";\n-    strUsage += \"  -logtimestamps         \" + _(\"Prepend debug output with timestamp\") + \"\\n\";\n-    strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n-    strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n-    strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n-                                                \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n-#ifdef WIN32\n-    strUsage += \"  -printtodebugger       \" + _(\"Send trace/debug info to debugger\") + \"\\n\";\n-#endif\n+    }\n+\n+    if (hmm == HMM_BITCOIND || hmm == HMM_BITCOIN_CLI)\n+    {\n+        strUsage += \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\";\n+    }\n+\n     strUsage += \"  -rpcuser=<user>        \" + _(\"Username for JSON-RPC connections\") + \"\\n\";\n     strUsage += \"  -rpcpassword=<pw>      \" + _(\"Password for JSON-RPC connections\") + \"\\n\";\n-    strUsage += \"  -rpcport=<port>        \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n-    strUsage += \"  -rpcallowip=<ip>       \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\";\n-    if (!fHaveGUI)\n-        strUsage += \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\";\n-    strUsage += \"  -rpcthreads=<n>        \" + _(\"Set the number of threads to service RPC calls (default: 4)\") + \"\\n\";\n-    strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n-    strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n-    strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\") + \"\\n\";\n-    strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\";\n-    strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n-    strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n-    strUsage += \"  -salvagewallet         \" + _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \"\\n\";\n-    strUsage += \"  -checkblocks=<n>       \" + _(\"How many blocks to check at startup (default: 288, 0 = all)\") + \"\\n\";\n-    strUsage += \"  -checklevel=<n>        \" + _(\"How thorough the block verification is (0-4, default: 3)\") + \"\\n\";\n-    strUsage += \"  -txindex               \" + _(\"Maintain a full transaction index (default: 0)\") + \"\\n\";\n-    strUsage += \"  -loadblock=<file>      \" + _(\"Imports blocks from external blk000??.dat file\") + \"\\n\";\n-    strUsage += \"  -reindex               \" + _(\"Rebuild block chain index from current blk000??.dat files\") + \"\\n\";\n-    strUsage += \"  -par=<n>               \" + _(\"Set the number of script verification threads (up to 16, 0 = auto, <0 = leave that many cores free, default: 0)\") + \"\\n\";\n-\n-    strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n-    strUsage += \"  -blockminsize=<n>      \"   + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n-    strUsage += \"  -blockmaxsize=<n>      \"   + _(\"Set maximum block size in bytes (default: 250000)\") + \"\\n\";\n-    strUsage += \"  -blockprioritysize=<n> \"   + _(\"Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)\") + \"\\n\";\n+    if (hmm == HMM_BITCOIND || hmm == HMM_BITCOIN_QT)\n+    {\n+        strUsage += \"  -rpcport=<port>        \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n+    } else {\n+        strUsage += \"  -rpcport=<port>        \" + _(\"Connect to JSON-RPC on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n+    }\n+\n+    if(hmm == HMM_BITCOIND || hmm == HMM_BITCOIN_QT)\n+    {\n+        strUsage += \"  -rpcallowip=<ip>       \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\";\n+        strUsage += \"  -rpcthreads=<n>        \" + _(\"Set the number of threads to service RPC calls (default: 4)\") + \"\\n\";\n+        strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n+        strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n+        strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\") + \"\\n\";\n+        strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\";\n+        strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n+        strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n+        strUsage += \"  -salvagewallet         \" + _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \"\\n\";\n+        strUsage += \"  -checkblocks=<n>       \" + _(\"How many blocks to check at startup (default: 288, 0 = all)\") + \"\\n\";\n+        strUsage += \"  -checklevel=<n>        \" + _(\"How thorough the block verification is (0-4, default: 3)\") + \"\\n\";\n+        strUsage += \"  -txindex               \" + _(\"Maintain a full transaction index (default: 0)\") + \"\\n\";\n+        strUsage += \"  -loadblock=<file>      \" + _(\"Imports blocks from external blk000??.dat file\") + \"\\n\";\n+        strUsage += \"  -reindex               \" + _(\"Rebuild block chain index from current blk000??.dat files\") + \"\\n\";\n+        strUsage += \"  -par=<n>               \" + _(\"Set the number of script verification threads (up to 16, 0 = auto, <0 = leave that many cores free, default: 0)\") + \"\\n\";\n+\n+        strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n+        strUsage += \"  -blockminsize=<n>      \"   + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n+        strUsage += \"  -blockmaxsize=<n>      \"   + _(\"Set maximum block size in bytes (default: 250000)\") + \"\\n\";\n+        strUsage += \"  -blockprioritysize=<n> \"   + _(\"Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)\") + \"\\n\";\n+    }\n \n     strUsage += \"\\n\" + _(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n     strUsage += \"  -rpcssl                                  \" + _(\"Use OpenSSL (https) for JSON-RPC connections\") + \"\\n\";\n-    strUsage += \"  -rpcsslcertificatechainfile=<file.cert>  \" + _(\"Server certificate file (default: server.cert)\") + \"\\n\";\n-    strUsage += \"  -rpcsslprivatekeyfile=<file.pem>         \" + _(\"Server private key (default: server.pem)\") + \"\\n\";\n-    strUsage += \"  -rpcsslciphers=<ciphers>                 \" + _(\"Acceptable ciphers (default: TLSv1.2+HIGH:TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!3DES:@STRENGTH)\") + \"\\n\";\n+    if (hmm == HMM_BITCOIND || hmm == HMM_BITCOIN_QT)\n+    {\n+        strUsage += \"  -rpcsslcertificatechainfile=<file.cert>  \" + _(\"Server certificate file (default: server.cert)\") + \"\\n\";\n+        strUsage += \"  -rpcsslprivatekeyfile=<file.pem>         \" + _(\"Server private key (default: server.pem)\") + \"\\n\";\n+        strUsage += \"  -rpcsslciphers=<ciphers>                 \" + _(\"Acceptable ciphers (default: TLSv1.2+HIGH:TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!3DES:@STRENGTH)\") + \"\\n\";\n+        strUsage += \"  -rpcsslciphers=<ciphers>                 \" + _(\"Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)\") + \"\\n\";\n+    }\n \n     return strUsage;\n }"
      },
      {
        "sha": "785a6cdba158306ac1b65d683451246f563b48ee",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a03a39020da5ae38f05c38a5bf92c023acdeb90/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a03a39020da5ae38f05c38a5bf92c023acdeb90/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=2a03a39020da5ae38f05c38a5bf92c023acdeb90",
        "patch": "@@ -14,6 +14,15 @@ void StartShutdown();\n bool ShutdownRequested();\n void Shutdown();\n bool AppInit2(boost::thread_group& threadGroup);\n-std::string HelpMessage();\n+\n+/* The help message mode determines what help message to show */\n+enum HelpMessageMode\n+{\n+    HMM_BITCOIND,\n+    HMM_BITCOIN_QT,\n+    HMM_BITCOIN_CLI\n+};\n+\n+std::string HelpMessage(HelpMessageMode mode);\n \n #endif"
      },
      {
        "sha": "b65348548b28042fe7adbe1d22bde9f56ea0ec9a",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a03a39020da5ae38f05c38a5bf92c023acdeb90/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a03a39020da5ae38f05c38a5bf92c023acdeb90/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=2a03a39020da5ae38f05c38a5bf92c023acdeb90",
        "patch": "@@ -527,7 +527,7 @@ HelpMessageBox::HelpMessageBox(QWidget *parent) :\n         tr(\"Usage:\") + \"\\n\" +\n         \"  bitcoin-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";\n \n-    coreOptions = QString::fromStdString(HelpMessage());\n+    coreOptions = QString::fromStdString(HelpMessage(HMM_BITCOIN_QT));\n \n     uiOptions = tr(\"UI options\") + \":\\n\" +\n         \"  -lang=<lang>           \" + tr(\"Set language, for example \\\"de_DE\\\" (default: system locale)\") + \"\\n\" +"
      }
    ]
  }
]