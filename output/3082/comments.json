[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26201614",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26201614",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26201614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjAxNjE0",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-12T17:13:39Z",
    "updated_at": "2013-10-12T17:18:54Z",
    "author_association": "MEMBER",
    "body": "Some comments on the help output:\n\n```\nUsage:\n  bitcoin-rpc [options] <command> [params]  Send command to -server or bitcoind\n```\n\nNot sure if it was introduced by this commit, but I have no idea what \"sending to -server\" would mean.\n\n```\n  -rpcport=<port>        Listen for JSON-RPC connections on <port> (default: 8332 or testnet: 18332)\n```\n\nFor bitcoin-rpc, that should probably read \"Connect to\" instead of \"Listen for\"\n\n```\n  -rpcsslcertificatechainfile=<file.cert>  Server certificate file (default: server.cert)\n  -rpcsslprivatekeyfile=<file.pem>         Server private key (default: server.pem)\n  -rpcsslciphers=<ciphers>                 Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)\n```\n\nThese aren't relevant for RPC clients.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26201614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26207209",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26207209",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26207209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjA3MjA5",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-12T22:15:39Z",
    "updated_at": "2013-10-12T22:15:50Z",
    "author_association": "MEMBER",
    "body": "```\nNot sure if it was introduced by this commit, but I have no idea what \"sending to -server\" would mean.\n```\n\nThat was not introduced in this commit. It is also in bitcoind, I literally took that over. I suppose it means \"a bitcoin-qt started with -server\".\n\nAgree on the rpcport having different meaning for the client than for the server, and indeed the SSL server settings can go.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26207209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26216766",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26216766",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26216766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjE2NzY2",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-13T12:20:38Z",
    "updated_at": "2013-10-13T12:20:38Z",
    "author_association": "MEMBER",
    "body": "Updated the help message accordingly, and added mention in bitcoind help message that using it as client is deprecated.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26216766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26219652",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26219652",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26219652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjE5NjUy",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-13T15:08:10Z",
    "updated_at": "2013-10-13T15:08:10Z",
    "author_association": "MEMBER",
    "body": "ACK.\n\nOne nit: -rpcsslciphers isn't used by the RPC client either.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26219652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26229337",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26229337",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26229337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjI5MzM3",
    "user": {
      "login": "super3",
      "id": 60975,
      "node_id": "MDQ6VXNlcjYwOTc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/60975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/super3",
      "html_url": "https://github.com/super3",
      "followers_url": "https://api.github.com/users/super3/followers",
      "following_url": "https://api.github.com/users/super3/following{/other_user}",
      "gists_url": "https://api.github.com/users/super3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/super3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/super3/subscriptions",
      "organizations_url": "https://api.github.com/users/super3/orgs",
      "repos_url": "https://api.github.com/users/super3/repos",
      "events_url": "https://api.github.com/users/super3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/super3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-13T23:08:00Z",
    "updated_at": "2013-10-13T23:08:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Good work. Any stats on the performance over Bitcoind? \n\nAny idea on the time period for deprecation and drop of RPC from Bitcoind? A fair amount of codebase in based on Bitcoind, so that might cause some breakage even if it is deprecated for a while. \n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26229337/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26229504",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26229504",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26229504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjI5NTA0",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-13T23:16:56Z",
    "updated_at": "2013-10-13T23:16:56Z",
    "author_association": "MEMBER",
    "body": "I expect performance to be exactly identical to bitcoind for now.\n\nOnce we can create a stripped-down version with less dependencies, startup time may be reduced a bit. But really, it's just thin wrapper to expose an interface intended for computers to humans. If performance matters to you, you should be sending JSON-RPC directly instead of exec()ing a binary for every call.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26229504/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26234368",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26234368",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26234368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjM0MzY4",
    "user": {
      "login": "super3",
      "id": 60975,
      "node_id": "MDQ6VXNlcjYwOTc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/60975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/super3",
      "html_url": "https://github.com/super3",
      "followers_url": "https://api.github.com/users/super3/followers",
      "following_url": "https://api.github.com/users/super3/following{/other_user}",
      "gists_url": "https://api.github.com/users/super3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/super3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/super3/subscriptions",
      "organizations_url": "https://api.github.com/users/super3/orgs",
      "repos_url": "https://api.github.com/users/super3/repos",
      "events_url": "https://api.github.com/users/super3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/super3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-14T03:48:51Z",
    "updated_at": "2013-10-14T03:48:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just curious. Thanks for clarifying.\n\nOn Sun, Oct 13, 2013 at 7:17 PM, Pieter Wuille notifications@github.comwrote:\n\n> I expect performance to be exactly identical to bitcoind for now.\n> \n> Once we can create a stripped-down version with less dependencies, startup\n> time may be reduced a bit. But really, it's just thin wrapper to expose an\n> interface intended for computers to humans. If performance matters to you,\n> you should be sending JSON-RPC directly instead of exec()ing a binary for\n> every call.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26229504\n> .\n\n## \n\nShawn Wilkinson\nStudent, Morehouse College\nBitcoin Developer/Entrepreneur/Enthusiast\n(1P4QkLsujBPBZyUwDezikL4fUSs7JvFhPv)\nme@super3.org\nhttp://super3.org\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26234368/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26239184",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26239184",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26239184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjM5MTg0",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-14T07:19:56Z",
    "updated_at": "2013-10-14T07:19:56Z",
    "author_association": "MEMBER",
    "body": "Performance wasn't the concern here, just sanity. Why would you need bitcoind on a system that only does requests? And good luck browsing through the bitcoind help message to find options that concern the client. Even as bitcoin developer I needed three reworks to get those right. There is just no excuse in the world to merge the client and server into one executable.\n\nIMO the deprecation time period should be 0.9 to 0.10 or 0.11. Looking at the large time window between major releases, and the carefulness that merchants already have to switch to new major releases, that's enough. In any case that decision is for later, we don't need to make it now.\n\n@sipa shouldn't the ciphers be used for the client as well? As I understand it, with SSL both the client and server have their say in what cipher is used? Or is that only with SSH?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26239184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26324716",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26324716",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26324716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzI0NzE2",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-15T10:50:16Z",
    "updated_at": "2013-10-15T10:50:16Z",
    "author_association": "MEMBER",
    "body": "Ok I've hidden -rpcsslciphers for the client. I still think it would be useful to have it in the client as well (SSL_CTX_set_cipher_list isn't even called in the client), but that is off-topic for this pull.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26324716/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26670150",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26670150",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26670150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjcwMTUw",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T10:08:59Z",
    "updated_at": "2013-10-20T10:08:59Z",
    "author_association": "MEMBER",
    "body": "In case we agree with adding a seperate RPC client, can we please merge this soon? Every change to the help message results in an ugly merge in init.cpp.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26670150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26671252",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26671252",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26671252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjcxMjUy",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T11:32:47Z",
    "updated_at": "2013-10-20T11:32:47Z",
    "author_association": "MEMBER",
    "body": "@gavinandresen @jgarzik @gmaxwell Any general opinion about this?\n\nIMHO, the fact that bitcoind is both a client and a server is confusing, and that alone warrants separating them (though certainly not instantly, too much legacy code relies on bitcoind for now).\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26671252/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26671772",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26671772",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26671772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjcxNzcy",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T12:08:11Z",
    "updated_at": "2013-10-20T12:08:11Z",
    "author_association": "MEMBER",
    "body": "Right, a lot of code relies on bitcoind being a client, that's why this doesn't disable or change the functionality in bitcoind, it just adds a new executable with only the RPC functionality. Removing is completely separate and should be left to a further future release when people had the chance to switch over.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26671772/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26673388",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26673388",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26673388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjczMzg4",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T13:52:54Z",
    "updated_at": "2013-10-20T13:52:54Z",
    "author_association": "MEMBER",
    "body": "@laanwj If we ever choose to actually separate the code, there is always the option to make bitcoind exec() bitcoin-cli in case some command is provided still.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26673388/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26673898",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26673898",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26673898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjczODk4",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?u=0b02049ec38b6bb7d55c5c66d9bbeb0d4b822129&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T14:22:29Z",
    "updated_at": "2013-10-20T14:23:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK, with optional, feel-free-to-merge-without-this comments,\n\n1) I would name it \"bitcoin-cli\" or \"bitcoin-remote\" mirroring some existing practices.\n\n2) Remove, rather than deprecate, \"bitcoind <command>\" usage.  Will break some scripts, but so what.  I'm more willing to break stuff like this, as 1.0 approaches.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26673898/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26674010",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26674010",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26674010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njc0MDEw",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T14:29:44Z",
    "updated_at": "2013-10-20T14:29:44Z",
    "author_association": "MEMBER",
    "body": "Is there any reason this should be Bitcoin-specific? Couldn't a generic-JSON-RPC CLI client (perhaps written in Python?) work just as well, without complicating the codebase unnecessarily?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26674010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26674284",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26674284",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26674284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njc0Mjg0",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T14:43:38Z",
    "updated_at": "2013-10-21T06:39:01Z",
    "author_association": "MEMBER",
    "body": "@jgarzik Bitcoin-cli/remote is fine with me, I don't have any opinion on the name.\nI still prefer a two-step deprecation process though.\n\n@luke-jr How is this complicating the codebase? If anything, this is the beginning of a clean-up. I did some code movements in the original commit to separate different concerns into different files, which I've left out here for easier review, but they can still be done later.\n\nIt needs to be bitcoin specific because of the argument parsing. Only a bitcoin-specific client knows to parse argument 2 of sendtoaddress as a double (for example). Sure, it could be done in a Python script, but that complicates usage on windows or other systems that don't come with Python interpreter by default. And we have the C++ code already...\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26674284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26676366",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26676366",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26676366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njc2MzY2",
    "user": {
      "login": "super3",
      "id": 60975,
      "node_id": "MDQ6VXNlcjYwOTc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/60975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/super3",
      "html_url": "https://github.com/super3",
      "followers_url": "https://api.github.com/users/super3/followers",
      "following_url": "https://api.github.com/users/super3/following{/other_user}",
      "gists_url": "https://api.github.com/users/super3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/super3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/super3/subscriptions",
      "organizations_url": "https://api.github.com/users/super3/orgs",
      "repos_url": "https://api.github.com/users/super3/repos",
      "events_url": "https://api.github.com/users/super3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/super3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T16:26:22Z",
    "updated_at": "2013-10-20T16:26:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sipa I like the idea backward compatibility using exec() to call bitcoin-cli. I assume care of course must be taken to prevent malicious injection via Bitcoind. \n\n@jgarzik I agree that it needs to removed, but I'd rather devs have at least one release cycle to use bitcoin-cli and change their core code to match. Then you can remove on ~1.0. Deprecation give devs a fair warning. Removing is just kinda ripping the Bitcoind rug out from under them. \n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26676366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26676733",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26676733",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26676733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njc2NzMz",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T16:42:56Z",
    "updated_at": "2013-10-20T16:42:56Z",
    "author_association": "MEMBER",
    "body": "Complication, for example see all the different conditionals in strUsage now.\n\nArgument parsing might be an issue, I suppose - are there any cases where a Number might be confused with a String or vice-versa? JSON doesn't have doubles or integers, just Numbers - a client or server that makes a distinction is a bug.\n\nAs long as we're modularising the code, it makes the most sense to _actually_ modularise it IMO. Separate git repository and all.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26676733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26681172",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26681172",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26681172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjgxMTcy",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T19:59:58Z",
    "updated_at": "2013-10-21T06:38:32Z",
    "author_association": "MEMBER",
    "body": "@luke-jr yes, the helpmessage function is complicated somewhat by this, but that's the only one. To make it more readable it could be formatted as a table with a bitfield per option (which client kinds it applies to), if anyone cares enough to do that.\n\nA seperate git repository sounds pointless. It's useful to be able to build everything at once. A different directory within src/ would make sense tho.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26681172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26681993",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26681993",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26681993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjgxOTkz",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T20:37:23Z",
    "updated_at": "2013-10-20T20:37:23Z",
    "author_association": "MEMBER",
    "body": "Well I guess actual separate repositories is one potential future, but I doubt we'll get to the point with the current codebase where that makes sense.\n\nI am in favor of a nice and shiny python RPC client, which supports things like tab completion, and inline help, and batch processing, and pipelines of queries. and unicorns. As long as nobody creates one, I think this will do just fine. If someone ever does create a better RPC client in Python (or another language), I'm sure we can replace the bitcoin-cli/remote binary with a self-contained executable compiled from it in distribution packages.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26681993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26682228",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26682228",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26682228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjgyMjI4",
    "user": {
      "login": "super3",
      "id": 60975,
      "node_id": "MDQ6VXNlcjYwOTc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/60975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/super3",
      "html_url": "https://github.com/super3",
      "followers_url": "https://api.github.com/users/super3/followers",
      "following_url": "https://api.github.com/users/super3/following{/other_user}",
      "gists_url": "https://api.github.com/users/super3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/super3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/super3/subscriptions",
      "organizations_url": "https://api.github.com/users/super3/orgs",
      "repos_url": "https://api.github.com/users/super3/repos",
      "events_url": "https://api.github.com/users/super3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/super3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T20:47:47Z",
    "updated_at": "2013-10-20T20:47:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sipa That kinda sounds like a fun project for me, after I do a few more documentation sweeps. I can add unicorns as long as you don't mind them being [green](http://gunicorn.org/). \n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26682228/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26682344",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26682344",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26682344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjgyMzQ0",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T20:51:37Z",
    "updated_at": "2013-10-20T20:51:54Z",
    "author_association": "MEMBER",
    "body": "Wouldn't tab completion ideally be something in the shell instead of in the executable itself? Ie, bash has extensible command completion.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26682344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26682386",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26682386",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26682386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjgyMzg2",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T20:53:19Z",
    "updated_at": "2013-10-20T20:53:19Z",
    "author_association": "MEMBER",
    "body": "Fair enough- I wasn't entirely serious of course. I just mean that a featureful RPC client sounds useful, and Python (or any script language) sounds more appropriate for developing that than C++ - and easier to review.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26682386/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26682718",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26682718",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26682718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjgyNzE4",
    "user": {
      "login": "wtogami",
      "id": 93665,
      "node_id": "MDQ6VXNlcjkzNjY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/93665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wtogami",
      "html_url": "https://github.com/wtogami",
      "followers_url": "https://api.github.com/users/wtogami/followers",
      "following_url": "https://api.github.com/users/wtogami/following{/other_user}",
      "gists_url": "https://api.github.com/users/wtogami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wtogami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wtogami/subscriptions",
      "organizations_url": "https://api.github.com/users/wtogami/orgs",
      "repos_url": "https://api.github.com/users/wtogami/repos",
      "events_url": "https://api.github.com/users/wtogami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wtogami/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T21:08:53Z",
    "updated_at": "2013-10-20T21:08:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "A python RPC client would definitely have benefits except for ease of cross platform distribution.  For example, it appears that py2exe can't be cross-compiled from a Linux host and also relies upon Microsoft DLL's.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26682718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26683496",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26683496",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26683496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjgzNDk2",
    "user": {
      "login": "super3",
      "id": 60975,
      "node_id": "MDQ6VXNlcjYwOTc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/60975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/super3",
      "html_url": "https://github.com/super3",
      "followers_url": "https://api.github.com/users/super3/followers",
      "following_url": "https://api.github.com/users/super3/following{/other_user}",
      "gists_url": "https://api.github.com/users/super3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/super3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/super3/subscriptions",
      "organizations_url": "https://api.github.com/users/super3/orgs",
      "repos_url": "https://api.github.com/users/super3/repos",
      "events_url": "https://api.github.com/users/super3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/super3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-20T21:41:30Z",
    "updated_at": "2013-10-20T21:41:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sipa Which is why I said it would be a fun project. One or two of those features would be really easy to hack together using existing libs.\n\n@wtogami Hmmm. Didn't know that py2exe had that limitation. Perhaps an alternative might provide the needed cross platform distribution. A quick google search reveals [cx_freeze](http://cx-freeze.sourceforge.net/) as a possibility. \n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26683496/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26691897",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26691897",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26691897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjkxODk3",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T04:09:30Z",
    "updated_at": "2013-10-21T04:09:30Z",
    "author_association": "MEMBER",
    "body": "FWIW: At least my Python install (on Linux) has a bunch of exes for building Windows stuff with.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26691897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26692092",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26692092",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26692092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjkyMDky",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?u=0b02049ec38b6bb7d55c5c66d9bbeb0d4b822129&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T04:17:55Z",
    "updated_at": "2013-10-21T04:17:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Any sort of python clientage is outside the scope of this pull request.  This PR is fine _right now_, even if a future decision replaces the C++ client with something else down the road.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26692092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26695157",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26695157",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26695157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njk1MTU3",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T06:30:14Z",
    "updated_at": "2013-10-21T07:16:55Z",
    "author_association": "MEMBER",
    "body": "@sipa I now understand, you're thinking of some kind of interactive client, not so much the rpc client it is now that is used from the shell or shell script. Sure, that'd be a useful project. I played with that idea while making the debug console, but it stayed at that as we don't want a scripting language (js, python) in the main client :-) Let's open a new issue for that.\n\nIt'd be a complement to this and not a replacement. For lightweight interaction from shell scripts, a small executable (yes, we'll make it small eventually...) would still be preferable to a py2exe wrapped \"monster\".\n\nRebased and renamed to bitcoin-cli.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26695157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26697663",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#issuecomment-26697663",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3082",
    "id": 26697663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njk3NjYz",
    "user": {
      "login": "BitcoinPullTester",
      "id": 2110907,
      "node_id": "MDQ6VXNlcjIxMTA5MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BitcoinPullTester",
      "html_url": "https://github.com/BitcoinPullTester",
      "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
      "following_url": "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
      "gists_url": "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
      "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
      "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
      "events_url": "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-21T07:40:13Z",
    "updated_at": "2013-10-21T07:40:13Z",
    "author_association": "NONE",
    "body": "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/2a03a39020da5ae38f05c38a5bf92c023acdeb90 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/current/\nContact BlueMatt on freenode if something looks broken.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/26697663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6932284",
    "pull_request_review_id": null,
    "id": 6932284,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzIyODQ=",
    "diff_hunk": "@@ -14,6 +14,15 @@\n bool ShutdownRequested();\n void Shutdown();\n bool AppInit2(boost::thread_group& threadGroup);\n-std::string HelpMessage();\n+\n+/* The help message mode determines what help message to show */",
    "path": "src/init.h",
    "position": 6,
    "original_position": 6,
    "commit_id": "2a03a39020da5ae38f05c38a5bf92c023acdeb90",
    "original_commit_id": "6e8ba0801694001f54199f9f14cb1a962e9200cf",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: I'm not sure that init should have knowledge about what type of clients it could be built into. How about using bit-position flags for each of the classes instead (HMM_RPC_CLIENT, HMM_OPTIONAL_RPC_SERVER, HMM_NODE, ...), and passing the combination to it?\n",
    "created_at": "2013-10-12T17:17:41Z",
    "updated_at": "2013-10-21T07:23:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#discussion_r6932284",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3082",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6932284"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3082#discussion_r6932284"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3082"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6932284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 18,
    "original_line": 18,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6932881",
    "pull_request_review_id": null,
    "id": 6932881,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzI4ODE=",
    "diff_hunk": "@@ -14,6 +14,15 @@\n bool ShutdownRequested();\n void Shutdown();\n bool AppInit2(boost::thread_group& threadGroup);\n-std::string HelpMessage();\n+\n+/* The help message mode determines what help message to show */",
    "path": "src/init.h",
    "position": 6,
    "original_position": 6,
    "commit_id": "2a03a39020da5ae38f05c38a5bf92c023acdeb90",
    "original_commit_id": "6e8ba0801694001f54199f9f14cb1a962e9200cf",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That's possible. It shouldn't be in init.cpp either. Init contains all kinds of stuff that is unnecessary for the RPC client.\n\nUsing a bitfield still implies knowledge of the type of clients, just in another format. It does need to know about the GUI so it can disable -daemon, for example. I'm not sure this is important enough to warrant a lot of thinking/planning though. Having a parameter is already lots better than a global variable!\n",
    "created_at": "2013-10-12T22:07:50Z",
    "updated_at": "2013-10-21T07:23:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#discussion_r6932881",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3082",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6932881"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3082#discussion_r6932881"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3082"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6932881/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 18,
    "original_line": 18,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6934529",
    "pull_request_review_id": null,
    "id": 6934529,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzQ1Mjk=",
    "diff_hunk": "@@ -171,93 +171,119 @@ bool static Bind(const CService &addr, unsigned int flags) {\n     return true;\n }\n \n-// Core-specific options shared between UI and daemon\n-std::string HelpMessage()\n+// Core-specific options shared between UI, daemon and RPC client\n+std::string HelpMessage(HelpMessageMode hmm)\n {\n     string strUsage = _(\"Options:\") + \"\\n\";\n     strUsage += \"  -?                     \" + _(\"This help message\") + \"\\n\";\n     strUsage += \"  -conf=<file>           \" + _(\"Specify configuration file (default: bitcoin.conf)\") + \"\\n\";\n-    strUsage += \"  -pid=<file>            \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\";\n-    strUsage += \"  -gen                   \" + _(\"Generate coins (default: 0)\") + \"\\n\";\n     strUsage += \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\";\n-    strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\";\n-    strUsage += \"  -dbcache=<n>           \" + _(\"Set database cache size in megabytes (default: 25)\") + \"\\n\";\n-    strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n-    strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through socks proxy\") + \"\\n\";\n-    strUsage += \"  -socks=<n>             \" + _(\"Select the version of socks proxy to use (4-5, default: 5)\") + \"\\n\";\n-    strUsage += \"  -tor=<ip:port>         \" + _(\"Use proxy to reach tor hidden services (default: same as -proxy)\") + \"\\n\";\n-    strUsage += \"  -dns                   \" + _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \"\\n\";\n-    strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n-    strUsage += \"  -maxconnections=<n>    \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\";\n-    strUsage += \"  -addnode=<ip>          \" + _(\"Add a node to connect to and attempt to keep the connection open\") + \"\\n\";\n-    strUsage += \"  -connect=<ip>          \" + _(\"Connect only to the specified node(s)\") + \"\\n\";\n-    strUsage += \"  -seednode=<ip>         \" + _(\"Connect to a node to retrieve peer addresses, and disconnect\") + \"\\n\";\n-    strUsage += \"  -externalip=<ip>       \" + _(\"Specify your own public address\") + \"\\n\";\n-    strUsage += \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\") + \"\\n\";\n-    strUsage += \"  -discover              \" + _(\"Discover own IP address (default: 1 when listening and no -externalip)\") + \"\\n\";\n-    strUsage += \"  -checkpoints           \" + _(\"Only accept block chain matching built-in checkpoints (default: 1)\") + \"\\n\";\n-    strUsage += \"  -listen                \" + _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\") + \"\\n\";\n-    strUsage += \"  -bind=<addr>           \" + _(\"Bind to given address and always listen on it. Use [host]:port notation for IPv6\") + \"\\n\";\n-    strUsage += \"  -dnsseed               \" + _(\"Find peers using DNS lookup (default: 1 unless -connect)\") + \"\\n\";\n-    strUsage += \"  -banscore=<n>          \" + _(\"Threshold for disconnecting misbehaving peers (default: 100)\") + \"\\n\";\n-    strUsage += \"  -bantime=<n>           \" + _(\"Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\") + \"\\n\";\n-    strUsage += \"  -maxreceivebuffer=<n>  \" + _(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)\") + \"\\n\";\n-    strUsage += \"  -maxsendbuffer=<n>     \" + _(\"Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)\") + \"\\n\";\n+    strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n+\n+    if(hmm == HMM_BITCOIND || hmm == HMM_BITCOIN_QT)\n+    {\n+        strUsage += \"  -pid=<file>            \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\";\n+        strUsage += \"  -gen                   \" + _(\"Generate coins (default: 0)\") + \"\\n\";\n+        strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\";\n+        strUsage += \"  -dbcache=<n>           \" + _(\"Set database cache size in megabytes (default: 25)\") + \"\\n\";\n+        strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n+        strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through socks proxy\") + \"\\n\";\n+        strUsage += \"  -socks=<n>             \" + _(\"Select the version of socks proxy to use (4-5, default: 5)\") + \"\\n\";\n+        strUsage += \"  -tor=<ip:port>         \" + _(\"Use proxy to reach tor hidden services (default: same as -proxy)\") + \"\\n\";\n+        strUsage += \"  -dns                   \" + _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \"\\n\";\n+        strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n+        strUsage += \"  -maxconnections=<n>    \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\";\n+        strUsage += \"  -addnode=<ip>          \" + _(\"Add a node to connect to and attempt to keep the connection open\") + \"\\n\";\n+        strUsage += \"  -connect=<ip>          \" + _(\"Connect only to the specified node(s)\") + \"\\n\";\n+        strUsage += \"  -seednode=<ip>         \" + _(\"Connect to a node to retrieve peer addresses, and disconnect\") + \"\\n\";\n+        strUsage += \"  -externalip=<ip>       \" + _(\"Specify your own public address\") + \"\\n\";\n+        strUsage += \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\") + \"\\n\";\n+        strUsage += \"  -discover              \" + _(\"Discover own IP address (default: 1 when listening and no -externalip)\") + \"\\n\";\n+        strUsage += \"  -checkpoints           \" + _(\"Only accept block chain matching built-in checkpoints (default: 1)\") + \"\\n\";\n+        strUsage += \"  -listen                \" + _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\") + \"\\n\";\n+        strUsage += \"  -bind=<addr>           \" + _(\"Bind to given address and always listen on it. Use [host]:port notation for IPv6\") + \"\\n\";\n+        strUsage += \"  -dnsseed               \" + _(\"Find peers using DNS lookup (default: 1 unless -connect)\") + \"\\n\";\n+        strUsage += \"  -banscore=<n>          \" + _(\"Threshold for disconnecting misbehaving peers (default: 100)\") + \"\\n\";\n+        strUsage += \"  -bantime=<n>           \" + _(\"Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\") + \"\\n\";\n+        strUsage += \"  -maxreceivebuffer=<n>  \" + _(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)\") + \"\\n\";\n+        strUsage += \"  -maxsendbuffer=<n>     \" + _(\"Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)\") + \"\\n\";\n #ifdef USE_UPNP\n #if USE_UPNP\n-    strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 1 when listening)\") + \"\\n\";\n+        strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 1 when listening)\") + \"\\n\";\n #else\n-    strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 0)\") + \"\\n\";\n+        strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 0)\") + \"\\n\";\n+#endif\n #endif\n+        strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per KB to add to transactions you send\") + \"\\n\";\n+        strUsage += \"  -debug                 \" + _(\"Output extra debugging information. Implies all other -debug* options\") + \"\\n\";\n+        strUsage += \"  -debugnet              \" + _(\"Output extra network debugging information\") + \"\\n\";\n+        strUsage += \"  -logtimestamps         \" + _(\"Prepend debug output with timestamp\") + \"\\n\";\n+        strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n+        strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n+        strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n+                                                \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n+#ifdef WIN32\n+        strUsage += \"  -printtodebugger       \" + _(\"Send trace/debug info to debugger\") + \"\\n\";\n #endif\n-    strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per KB to add to transactions you send\") + \"\\n\";\n-    if (fHaveGUI)\n+    }\n+\n+    if (hmm == HMM_BITCOIN_QT)\n+    {\n         strUsage += \"  -server                \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\";\n+    }\n+\n+    if (hmm == HMM_BITCOIND)\n+    {\n #if !defined(WIN32)\n-    if (fHaveGUI)\n         strUsage += \"  -daemon                \" + _(\"Run in the background as a daemon and accept commands\") + \"\\n\";\n #endif\n-    strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n-    strUsage += \"  -debug                 \" + _(\"Output extra debugging information. Implies all other -debug* options\") + \"\\n\";\n-    strUsage += \"  -debugnet              \" + _(\"Output extra network debugging information\") + \"\\n\";\n-    strUsage += \"  -logtimestamps         \" + _(\"Prepend debug output with timestamp\") + \"\\n\";\n-    strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n-    strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n-    strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n-                                                \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n-#ifdef WIN32\n-    strUsage += \"  -printtodebugger       \" + _(\"Send trace/debug info to debugger\") + \"\\n\";\n-#endif\n+    }\n+\n+    if (hmm == HMM_BITCOIND || hmm == HMM_BITCOIN_RPC)\n+    {\n+        strUsage += \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\";\n+    }\n+\n     strUsage += \"  -rpcuser=<user>        \" + _(\"Username for JSON-RPC connections\") + \"\\n\";\n     strUsage += \"  -rpcpassword=<pw>      \" + _(\"Password for JSON-RPC connections\") + \"\\n\";\n-    strUsage += \"  -rpcport=<port>        \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n-    strUsage += \"  -rpcallowip=<ip>       \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\";\n-    if (!fHaveGUI)\n-        strUsage += \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\";\n-    strUsage += \"  -rpcthreads=<n>        \" + _(\"Set the number of threads to service RPC calls (default: 4)\") + \"\\n\";\n-    strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n-    strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n-    strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\") + \"\\n\";\n-    strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\";\n-    strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n-    strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n-    strUsage += \"  -salvagewallet         \" + _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \"\\n\";\n-    strUsage += \"  -checkblocks=<n>       \" + _(\"How many blocks to check at startup (default: 288, 0 = all)\") + \"\\n\";\n-    strUsage += \"  -checklevel=<n>        \" + _(\"How thorough the block verification is (0-4, default: 3)\") + \"\\n\";\n-    strUsage += \"  -txindex               \" + _(\"Maintain a full transaction index (default: 0)\") + \"\\n\";\n-    strUsage += \"  -loadblock=<file>      \" + _(\"Imports blocks from external blk000??.dat file\") + \"\\n\";\n-    strUsage += \"  -reindex               \" + _(\"Rebuild block chain index from current blk000??.dat files\") + \"\\n\";\n-    strUsage += \"  -par=<n>               \" + _(\"Set the number of script verification threads (up to 16, 0 = auto, <0 = leave that many cores free, default: 0)\") + \"\\n\";\n-\n-    strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n-    strUsage += \"  -blockminsize=<n>      \"   + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n-    strUsage += \"  -blockmaxsize=<n>      \"   + _(\"Set maximum block size in bytes (default: 250000)\") + \"\\n\";\n-    strUsage += \"  -blockprioritysize=<n> \"   + _(\"Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)\") + \"\\n\";\n+    if (hmm == HMM_BITCOIND || hmm == HMM_BITCOIN_RPC)",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 145,
    "commit_id": "2a03a39020da5ae38f05c38a5bf92c023acdeb90",
    "original_commit_id": "32a3233ebabd0bf9657a4bf8a3a3f42f45abc565",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Shouldn't this be HMM_BITCOIND || HMM_BITCOIN_QT?\n",
    "created_at": "2013-10-13T14:10:56Z",
    "updated_at": "2013-10-21T07:23:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#discussion_r6934529",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3082",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6934529"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3082#discussion_r6934529"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3082"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6934529/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 249,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6934574",
    "pull_request_review_id": null,
    "id": 6934574,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzQ1NzQ=",
    "diff_hunk": "@@ -171,93 +171,119 @@ bool static Bind(const CService &addr, unsigned int flags) {\n     return true;\n }\n \n-// Core-specific options shared between UI and daemon\n-std::string HelpMessage()\n+// Core-specific options shared between UI, daemon and RPC client\n+std::string HelpMessage(HelpMessageMode hmm)\n {\n     string strUsage = _(\"Options:\") + \"\\n\";\n     strUsage += \"  -?                     \" + _(\"This help message\") + \"\\n\";\n     strUsage += \"  -conf=<file>           \" + _(\"Specify configuration file (default: bitcoin.conf)\") + \"\\n\";\n-    strUsage += \"  -pid=<file>            \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\";\n-    strUsage += \"  -gen                   \" + _(\"Generate coins (default: 0)\") + \"\\n\";\n     strUsage += \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\";\n-    strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\";\n-    strUsage += \"  -dbcache=<n>           \" + _(\"Set database cache size in megabytes (default: 25)\") + \"\\n\";\n-    strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n-    strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through socks proxy\") + \"\\n\";\n-    strUsage += \"  -socks=<n>             \" + _(\"Select the version of socks proxy to use (4-5, default: 5)\") + \"\\n\";\n-    strUsage += \"  -tor=<ip:port>         \" + _(\"Use proxy to reach tor hidden services (default: same as -proxy)\") + \"\\n\";\n-    strUsage += \"  -dns                   \" + _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \"\\n\";\n-    strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n-    strUsage += \"  -maxconnections=<n>    \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\";\n-    strUsage += \"  -addnode=<ip>          \" + _(\"Add a node to connect to and attempt to keep the connection open\") + \"\\n\";\n-    strUsage += \"  -connect=<ip>          \" + _(\"Connect only to the specified node(s)\") + \"\\n\";\n-    strUsage += \"  -seednode=<ip>         \" + _(\"Connect to a node to retrieve peer addresses, and disconnect\") + \"\\n\";\n-    strUsage += \"  -externalip=<ip>       \" + _(\"Specify your own public address\") + \"\\n\";\n-    strUsage += \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\") + \"\\n\";\n-    strUsage += \"  -discover              \" + _(\"Discover own IP address (default: 1 when listening and no -externalip)\") + \"\\n\";\n-    strUsage += \"  -checkpoints           \" + _(\"Only accept block chain matching built-in checkpoints (default: 1)\") + \"\\n\";\n-    strUsage += \"  -listen                \" + _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\") + \"\\n\";\n-    strUsage += \"  -bind=<addr>           \" + _(\"Bind to given address and always listen on it. Use [host]:port notation for IPv6\") + \"\\n\";\n-    strUsage += \"  -dnsseed               \" + _(\"Find peers using DNS lookup (default: 1 unless -connect)\") + \"\\n\";\n-    strUsage += \"  -banscore=<n>          \" + _(\"Threshold for disconnecting misbehaving peers (default: 100)\") + \"\\n\";\n-    strUsage += \"  -bantime=<n>           \" + _(\"Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\") + \"\\n\";\n-    strUsage += \"  -maxreceivebuffer=<n>  \" + _(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)\") + \"\\n\";\n-    strUsage += \"  -maxsendbuffer=<n>     \" + _(\"Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)\") + \"\\n\";\n+    strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n+\n+    if(hmm == HMM_BITCOIND || hmm == HMM_BITCOIN_QT)\n+    {\n+        strUsage += \"  -pid=<file>            \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\";\n+        strUsage += \"  -gen                   \" + _(\"Generate coins (default: 0)\") + \"\\n\";\n+        strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\";\n+        strUsage += \"  -dbcache=<n>           \" + _(\"Set database cache size in megabytes (default: 25)\") + \"\\n\";\n+        strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n+        strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through socks proxy\") + \"\\n\";\n+        strUsage += \"  -socks=<n>             \" + _(\"Select the version of socks proxy to use (4-5, default: 5)\") + \"\\n\";\n+        strUsage += \"  -tor=<ip:port>         \" + _(\"Use proxy to reach tor hidden services (default: same as -proxy)\") + \"\\n\";\n+        strUsage += \"  -dns                   \" + _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \"\\n\";\n+        strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n+        strUsage += \"  -maxconnections=<n>    \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\";\n+        strUsage += \"  -addnode=<ip>          \" + _(\"Add a node to connect to and attempt to keep the connection open\") + \"\\n\";\n+        strUsage += \"  -connect=<ip>          \" + _(\"Connect only to the specified node(s)\") + \"\\n\";\n+        strUsage += \"  -seednode=<ip>         \" + _(\"Connect to a node to retrieve peer addresses, and disconnect\") + \"\\n\";\n+        strUsage += \"  -externalip=<ip>       \" + _(\"Specify your own public address\") + \"\\n\";\n+        strUsage += \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\") + \"\\n\";\n+        strUsage += \"  -discover              \" + _(\"Discover own IP address (default: 1 when listening and no -externalip)\") + \"\\n\";\n+        strUsage += \"  -checkpoints           \" + _(\"Only accept block chain matching built-in checkpoints (default: 1)\") + \"\\n\";\n+        strUsage += \"  -listen                \" + _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\") + \"\\n\";\n+        strUsage += \"  -bind=<addr>           \" + _(\"Bind to given address and always listen on it. Use [host]:port notation for IPv6\") + \"\\n\";\n+        strUsage += \"  -dnsseed               \" + _(\"Find peers using DNS lookup (default: 1 unless -connect)\") + \"\\n\";\n+        strUsage += \"  -banscore=<n>          \" + _(\"Threshold for disconnecting misbehaving peers (default: 100)\") + \"\\n\";\n+        strUsage += \"  -bantime=<n>           \" + _(\"Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\") + \"\\n\";\n+        strUsage += \"  -maxreceivebuffer=<n>  \" + _(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)\") + \"\\n\";\n+        strUsage += \"  -maxsendbuffer=<n>     \" + _(\"Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)\") + \"\\n\";\n #ifdef USE_UPNP\n #if USE_UPNP\n-    strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 1 when listening)\") + \"\\n\";\n+        strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 1 when listening)\") + \"\\n\";\n #else\n-    strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 0)\") + \"\\n\";\n+        strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 0)\") + \"\\n\";\n+#endif\n #endif\n+        strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per KB to add to transactions you send\") + \"\\n\";\n+        strUsage += \"  -debug                 \" + _(\"Output extra debugging information. Implies all other -debug* options\") + \"\\n\";\n+        strUsage += \"  -debugnet              \" + _(\"Output extra network debugging information\") + \"\\n\";\n+        strUsage += \"  -logtimestamps         \" + _(\"Prepend debug output with timestamp\") + \"\\n\";\n+        strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n+        strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n+        strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n+                                                \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n+#ifdef WIN32\n+        strUsage += \"  -printtodebugger       \" + _(\"Send trace/debug info to debugger\") + \"\\n\";\n #endif\n-    strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per KB to add to transactions you send\") + \"\\n\";\n-    if (fHaveGUI)\n+    }\n+\n+    if (hmm == HMM_BITCOIN_QT)\n+    {\n         strUsage += \"  -server                \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\";\n+    }\n+\n+    if (hmm == HMM_BITCOIND)\n+    {\n #if !defined(WIN32)\n-    if (fHaveGUI)\n         strUsage += \"  -daemon                \" + _(\"Run in the background as a daemon and accept commands\") + \"\\n\";\n #endif\n-    strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n-    strUsage += \"  -debug                 \" + _(\"Output extra debugging information. Implies all other -debug* options\") + \"\\n\";\n-    strUsage += \"  -debugnet              \" + _(\"Output extra network debugging information\") + \"\\n\";\n-    strUsage += \"  -logtimestamps         \" + _(\"Prepend debug output with timestamp\") + \"\\n\";\n-    strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n-    strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n-    strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n-                                                \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n-#ifdef WIN32\n-    strUsage += \"  -printtodebugger       \" + _(\"Send trace/debug info to debugger\") + \"\\n\";\n-#endif\n+    }\n+\n+    if (hmm == HMM_BITCOIND || hmm == HMM_BITCOIN_RPC)\n+    {\n+        strUsage += \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\";\n+    }\n+\n     strUsage += \"  -rpcuser=<user>        \" + _(\"Username for JSON-RPC connections\") + \"\\n\";\n     strUsage += \"  -rpcpassword=<pw>      \" + _(\"Password for JSON-RPC connections\") + \"\\n\";\n-    strUsage += \"  -rpcport=<port>        \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n-    strUsage += \"  -rpcallowip=<ip>       \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\";\n-    if (!fHaveGUI)\n-        strUsage += \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\";\n-    strUsage += \"  -rpcthreads=<n>        \" + _(\"Set the number of threads to service RPC calls (default: 4)\") + \"\\n\";\n-    strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n-    strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n-    strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\") + \"\\n\";\n-    strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\";\n-    strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n-    strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n-    strUsage += \"  -salvagewallet         \" + _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \"\\n\";\n-    strUsage += \"  -checkblocks=<n>       \" + _(\"How many blocks to check at startup (default: 288, 0 = all)\") + \"\\n\";\n-    strUsage += \"  -checklevel=<n>        \" + _(\"How thorough the block verification is (0-4, default: 3)\") + \"\\n\";\n-    strUsage += \"  -txindex               \" + _(\"Maintain a full transaction index (default: 0)\") + \"\\n\";\n-    strUsage += \"  -loadblock=<file>      \" + _(\"Imports blocks from external blk000??.dat file\") + \"\\n\";\n-    strUsage += \"  -reindex               \" + _(\"Rebuild block chain index from current blk000??.dat files\") + \"\\n\";\n-    strUsage += \"  -par=<n>               \" + _(\"Set the number of script verification threads (up to 16, 0 = auto, <0 = leave that many cores free, default: 0)\") + \"\\n\";\n-\n-    strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n-    strUsage += \"  -blockminsize=<n>      \"   + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n-    strUsage += \"  -blockmaxsize=<n>      \"   + _(\"Set maximum block size in bytes (default: 250000)\") + \"\\n\";\n-    strUsage += \"  -blockprioritysize=<n> \"   + _(\"Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)\") + \"\\n\";\n+    if (hmm == HMM_BITCOIND || hmm == HMM_BITCOIN_RPC)",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 145,
    "commit_id": "2a03a39020da5ae38f05c38a5bf92c023acdeb90",
    "original_commit_id": "32a3233ebabd0bf9657a4bf8a3a3f42f45abc565",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, you're right.\n",
    "created_at": "2013-10-13T14:28:20Z",
    "updated_at": "2013-10-21T07:23:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/3082#discussion_r6934574",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3082",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6934574"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/3082#discussion_r6934574"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/3082"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/6934574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 249,
    "side": "RIGHT"
  }
]