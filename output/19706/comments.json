[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672992204",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19706#issuecomment-672992204",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19706",
    "id": 672992204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Mjk5MjIwNA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-12T16:54:12Z",
    "updated_at": "2020-08-12T16:54:12Z",
    "author_association": "MEMBER",
    "body": "Code review ACK 356988e200b1debaa80d210d502d2d085c72dc64",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672992204/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674123697",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19706#issuecomment-674123697",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19706",
    "id": 674123697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDEyMzY5Nw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-14T15:15:25Z",
    "updated_at": "2020-08-14T15:15:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674123697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469325245",
    "pull_request_review_id": 466002873,
    "id": 469325245,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyNTI0NQ==",
    "diff_hunk": "@@ -84,21 +84,21 @@ bool DecodeBase58(const char* psz, std::vector<unsigned char>& vch, int max_ret_\n     return true;\n }\n \n-std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n+std::string EncodeBase58(Span<const unsigned char> input)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n     int length = 0;\n-    while (pbegin != pend && *pbegin == 0) {\n-        pbegin++;\n+    while (input.size() > 0 && input[0] == 0) {\n+        input = input.subspan(1);",
    "path": "src/base58.cpp",
    "position": 13,
    "original_position": 13,
    "commit_id": "356988e200b1debaa80d210d502d2d085c72dc64",
    "original_commit_id": "356988e200b1debaa80d210d502d2d085c72dc64",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Taking a subspan is a cheap operation (akin to pointer arithmetic), right?",
    "created_at": "2020-08-12T15:00:10Z",
    "updated_at": "2020-08-12T15:00:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19706#discussion_r469325245",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19706",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469325245"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19706#discussion_r469325245"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19706"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469325245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 93,
    "original_line": 93,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469371527",
    "pull_request_review_id": 466060799,
    "id": 469371527,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM3MTUyNw==",
    "diff_hunk": "@@ -84,21 +84,21 @@ bool DecodeBase58(const char* psz, std::vector<unsigned char>& vch, int max_ret_\n     return true;\n }\n \n-std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n+std::string EncodeBase58(Span<const unsigned char> input)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n     int length = 0;\n-    while (pbegin != pend && *pbegin == 0) {\n-        pbegin++;\n+    while (input.size() > 0 && input[0] == 0) {\n+        input = input.subspan(1);",
    "path": "src/base58.cpp",
    "position": 13,
    "original_position": 13,
    "commit_id": "356988e200b1debaa80d210d502d2d085c72dc64",
    "original_commit_id": "356988e200b1debaa80d210d502d2d085c72dc64",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, taking a subspan only needs to update pointer and size, which I would still consider cheap. I guess often the size update can be optimized away so that in the end only pointer arithmetic is involved, but I wouldn't feel qualified enough to give any guarantees here. Maybe @sipa can shed a bit more light on this topic.\r\n\r\nHowever, I felt keen to experiment... Here is a godbolt snippet where you can see the difference of \"count leading zero-bytes\" implementations, on one hand implemented with pointers and on the other hand with spans (using the Bitcoin Core substitute implementation, as I couldn't find a compiler that supported C++20 std::spans yet): https://godbolt.org/z/1oGGPP  The generated codes for the loop bodies are basically identical.",
    "created_at": "2020-08-12T16:02:35Z",
    "updated_at": "2020-08-12T16:02:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19706#discussion_r469371527",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19706",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469371527"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19706#discussion_r469371527"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19706"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469371527/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 93,
    "original_line": 93,
    "side": "RIGHT",
    "in_reply_to_id": 469325245
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469402726",
    "pull_request_review_id": 466100078,
    "id": 469402726,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQwMjcyNg==",
    "diff_hunk": "@@ -84,21 +84,21 @@ bool DecodeBase58(const char* psz, std::vector<unsigned char>& vch, int max_ret_\n     return true;\n }\n \n-std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n+std::string EncodeBase58(Span<const unsigned char> input)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n     int length = 0;\n-    while (pbegin != pend && *pbegin == 0) {\n-        pbegin++;\n+    while (input.size() > 0 && input[0] == 0) {\n+        input = input.subspan(1);",
    "path": "src/base58.cpp",
    "position": 13,
    "original_position": 13,
    "commit_id": "356988e200b1debaa80d210d502d2d085c72dc64",
    "original_commit_id": "356988e200b1debaa80d210d502d2d085c72dc64",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Clear, I was just wondering, thank you.",
    "created_at": "2020-08-12T16:53:46Z",
    "updated_at": "2020-08-12T16:53:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19706#discussion_r469402726",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19706",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469402726"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19706#discussion_r469402726"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19706"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469402726/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 93,
    "original_line": 93,
    "side": "RIGHT",
    "in_reply_to_id": 469325245
  }
]