laanwj,2020-08-12 16:54:12,Code review ACK 356988e200b1debaa80d210d502d2d085c72dc64,https://github.com/bitcoin/bitcoin/pull/19706#issuecomment-672992204,672992204,
practicalswift,2020-08-14 15:15:25,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19706#issuecomment-674123697,674123697,
laanwj,2020-08-12 15:00:10,"Taking a subspan is a cheap operation (akin to pointer arithmetic), right?",https://github.com/bitcoin/bitcoin/pull/19706#discussion_r469325245,469325245,src/base58.cpp
theStack,2020-08-12 16:02:35,"Yes, taking a subspan only needs to update pointer and size, which I would still consider cheap. I guess often the size update can be optimized away so that in the end only pointer arithmetic is involved, but I wouldn't feel qualified enough to give any guarantees here. Maybe @sipa can shed a bit more light on this topic.\n\nHowever, I felt keen to experiment... Here is a godbolt snippet where y",https://github.com/bitcoin/bitcoin/pull/19706#discussion_r469371527,469371527,src/base58.cpp
laanwj,2020-08-12 16:53:46,"Clear, I was just wondering, thank you.",https://github.com/bitcoin/bitcoin/pull/19706#discussion_r469402726,469402726,src/base58.cpp
