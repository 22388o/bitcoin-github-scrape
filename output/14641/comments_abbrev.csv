DrahtBot,2018-11-02T14:38:35Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #11413 ([wallet] [rpc] sendtoaddress/sendmany: Add explicit feerate option by kallewoof)\n\nIf you consider this pull requ",https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-435401223,435401223,
promag,2018-11-02T14:47:16Z,Will add release notes and tests after some concept ACK.,https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-435404057,435404057,
gmaxwell,2018-11-03T21:17:31Z,What is the max_conf for?,https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-435621590,435621590,
promag,2018-11-03T21:54:44Z,"@gmaxwell just followed `listunspent` options.\nhttps://github.com/bitcoin/bitcoin/blob/742ee213499194f97e59dae4971f1474ae7d57ad/src/wallet/rpcwallet.cpp#L2592-L2598",https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-435623891,435623891,
jonasschnelli,2018-11-04T13:53:10Z,"Concept ACK.\nThe `max_conf` usefulness ist doubtable,... but maybe acceptable to be consistent with `listunspent` (and it's a argument based option-object even in non-argument based RPC calls). ",https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-435671589,435671589,
promag,2018-11-04T18:04:17Z,Is it reasonable to add these options to coin control?,https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-435691757,435691757,
gmaxwell,2018-11-06T19:01:18Z,"I believe the max exists for listunspent so that with the other flags you can see only unconfirmed outputs, which wouldn't apply here, I think.\n\nThe maximum argument turns out to be a severe nuisance on listunspent because 99.99999% of the time you want it set to maximum and 'maximum' is some arbitrary big number but too big and the rpc is rejected (and that threshold even changed once, breaki",https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-436369297,436369297,
promag,2018-11-07T11:48:34Z,"@gmaxwell I'm happy to remove `max_conf` here, as it isn't required for #14542. However it can be acceptable to create a transaction with fresh inputs, especially with 0 confirmations?",https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-436598279,436598279,
meshcollider,2018-11-08T23:13:02Z,"@promag I think in such a specific case they can manually pick the inputs to fund the transaction with, I agree with the comments above and think `max_conf` is probably not the most useful",https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-437190699,437190699,
promag,2018-11-12T13:24:49Z,Rebased and removed `max_conf` option. Please concept ACK to add release note and tests.,https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-437878607,437878607,
meshcollider,2018-11-22T02:30:24Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-440894036,440894036,
laanwj,2018-11-23T09:18:38Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-441188717,441188717,
promag,2018-12-04T23:25:33Z,Added tests and release notes. Is this useful for 0.17 branch (after 0.17.1)?,https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-444298693,444298693,
promag,2018-12-11T12:30:51Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-446186044,446186044,
gmaxwell,2018-12-12T23:31:56Z,":( I hate to say it, but I think this runs into the problems resolving #14602.   In short,  you almost never want to spend coins that come from third parties without confirmation (as they could be doublespent, causing you to double spend someone)  but you almost always do want to be willing to use your own change unconfirmed if its required to get enough funds-- otherwise you'll have seemingly ine",https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-446784055,446784055,
promag,2018-12-17T10:52:48Z,@gmaxwell I think it's reasonable to have both ways to filter unspents?,https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-447803433,447803433,
luke-jr,2018-12-20T05:12:04Z,"utACK (despite the issue @gmaxwell points out, I think this is still an improvement..)",https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-448876411,448876411,
promag,2019-01-18T08:20:41Z,Ping @gmaxwell.,https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-455463576,455463576,
promag,2019-03-03T16:29:28Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-469038860,469038860,
luke-jr,2019-04-08T21:22:52Z,"In light of removal of minconf from sendmany, are we still moving forward on this?",https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-481013255,481013255,
MarcoFalke,2019-04-08T22:22:45Z,"sendmany::minconf was `1` (by default and in many scripts), so it couldn't be used in the same fashion as `min_conf` in this pull request. Otherwise it would break existing behaviour to spend own mempool-change https://github.com/bitcoin/bitcoin/pull/15595#issuecomment-472626834.\n\nI wouldn't object adding `min_conf` with default=0 to other wallet calls as well.",https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-481030187,481030187,
MarcoFalke,2019-07-02T13:55:52Z,"On pull request is removing min conf, the other is adding it. Would be nice if there was a uniform general direction.\n\n*  rpc: Add min_conf option to fund transaction calls #14641 \n*  rpc: Raise error in getbalance if minconf is not zero #15729 ",https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-507688101,507688101,
promag,2019-07-02T14:03:05Z,"This is similar to `listunspent` and handles all utxo the same, regardless if change or not.",https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-507691112,507691112,
luke-jr,2020-04-01T14:36:28Z,@promag here's a rebase you can use https://github.com/bitcoin/bitcoin/compare/master...luke-jr:fundraw_minconf,https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-607287493,607287493,
promag,2020-04-01T15:00:11Z,Thanks @luke-jr!,https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-607300999,607300999,
DrahtBot,2020-06-25T18:44:48Z,<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-649753334,649753334,
ejose19,2020-11-27T21:09:02Z,"While looking for this functionability I found this PR, and I also had the same concerns as @gmaxwell regarding the trusted/untrusted. However could we use instead ```m_min_depth_mine``` & ```m_min_depth_theirs``` similar to\n\nhttps://github.com/bitcoin/bitcoin/blob/e2ff5e7b35d71195278d2a2ed9485f141de33d7a/src/wallet/coinselection.cpp#L331-L336\n\nand implement it at either  ```AvailableCoins",https://github.com/bitcoin/bitcoin/pull/14641#issuecomment-734990201,734990201,
promag,2018-11-21T15:15:38Z,"```suggestion\n                            ""     \""min_conf\""               (numeric, optional, default=0) The minimum confirmations to filter\n""\n```",https://github.com/bitcoin/bitcoin/pull/14641#discussion_r235426694,235426694,src/wallet/rpcwallet.cpp
promag,2018-11-21T15:16:05Z,"```suggestion\n                            ""     \""min_conf\""               (numeric, optional, default=0) The minimum confirmations to filter\n""\n```",https://github.com/bitcoin/bitcoin/pull/14641#discussion_r235426881,235426881,src/wallet/rpcwallet.cpp
MarcoFalke,2018-12-05T22:56:48Z,"Whoopsie, default_value should be string. Should fix this by disallowing something else.",https://github.com/bitcoin/bitcoin/pull/14641#discussion_r239270214,239270214,src/wallet/rpcwallet.cpp
MarcoFalke,2019-02-12T23:53:20Z,"```suggestion\n                            {""min_conf"", RPCArg::Type::NUM, /* default */ ""0"", ""The minimum confirmations to filter""},\n```",https://github.com/bitcoin/bitcoin/pull/14641#discussion_r256196990,256196990,src/wallet/rpcwallet.cpp
promag,2019-03-03T16:28:44Z,Done.,https://github.com/bitcoin/bitcoin/pull/14641#discussion_r261874843,261874843,src/wallet/rpcwallet.cpp
MarcoFalke,2019-04-08T22:29:24Z,"Could pass down via coin control to avoid having to adjust all function signatures?\n\nSee e.g. https://github.com/bitcoin/bitcoin/pull/15595/files#diff-5694bdba4c3d58805c185a3fbced2868R36",https://github.com/bitcoin/bitcoin/pull/14641#discussion_r273263664,273263664,src/wallet/rpcwallet.cpp
luke-jr,2019-04-16T22:43:12Z,Why?,https://github.com/bitcoin/bitcoin/pull/14641#discussion_r276020929,276020929,.gitignore
promag,2019-04-16T22:48:36Z,"I'm glad you ask üòÑtry running `make -j10` and in parallel run `git status`. Some editors will refresh showing these temporary files (mostly `*.o.tmp`).\n\nEdit 2: at least on macos.\nEdit: happy to submit this in a separate PR.\n\n",https://github.com/bitcoin/bitcoin/pull/14641#discussion_r276022097,276022097,.gitignore
