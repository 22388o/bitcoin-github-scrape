[
  {
    "sha": "b5c3440b053217afda5f03ee97b3835f02fd5290",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNWMzNDQwYjA1MzIxN2FmZGE1ZjAzZWU5N2IzODM1ZjAyZmQ1Mjkw",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-06T16:16:06Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-30T19:05:33Z"
      },
      "message": "Mining: return early when block is almost full\n\nGithub-Pull: #9959\nRebased-From: eed816af6c68c0c67f5fc05472a3927db62f8a18",
      "tree": {
        "sha": "e722f71ff6740e3262e812dfa027bda2a0813635",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e722f71ff6740e3262e812dfa027bda2a0813635"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5c3440b053217afda5f03ee97b3835f02fd5290",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5c3440b053217afda5f03ee97b3835f02fd5290",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b5c3440b053217afda5f03ee97b3835f02fd5290",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5c3440b053217afda5f03ee97b3835f02fd5290/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b768202695a090a48b77ce9873267d5ec29b8845",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b768202695a090a48b77ce9873267d5ec29b8845",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b768202695a090a48b77ce9873267d5ec29b8845"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 18,
      "deletions": 0
    },
    "files": [
      {
        "sha": "54d66dadd222001bf7b90598a8a364fb297a9470",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5c3440b053217afda5f03ee97b3835f02fd5290/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5c3440b053217afda5f03ee97b3835f02fd5290/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=b5c3440b053217afda5f03ee97b3835f02fd5290",
        "patch": "@@ -416,6 +416,13 @@ void BlockAssembler::addPackageTxs()\n \n     CTxMemPool::indexed_transaction_set::index<ancestor_score>::type::iterator mi = mempool.mapTx.get<ancestor_score>().begin();\n     CTxMemPool::txiter iter;\n+\n+    // Limit the number of attempts to add transactions to the block when it is\n+    // close to full; this is just a simple heuristic to finish quickly if the\n+    // mempool has a lot of entries.\n+    const int64_t MAX_CONSECUTIVE_FAILURES = 1000;\n+    int64_t nConsecutiveFailed = 0;\n+\n     while (mi != mempool.mapTx.get<ancestor_score>().end() || !mapModifiedTx.empty())\n     {\n         // First try to find a new transaction in mapTx to evaluate.\n@@ -477,6 +484,14 @@ void BlockAssembler::addPackageTxs()\n                 mapModifiedTx.get<ancestor_score>().erase(modit);\n                 failedTx.insert(iter);\n             }\n+\n+            ++nConsecutiveFailed;\n+\n+            if (nConsecutiveFailed > MAX_CONSECUTIVE_FAILURES && nBlockWeight >\n+                    nBlockMaxWeight - 4000) {\n+                // Give up if we're close to full and haven't succeeded in a while\n+                break;\n+            }\n             continue;\n         }\n \n@@ -497,6 +512,9 @@ void BlockAssembler::addPackageTxs()\n             continue;\n         }\n \n+        // This transaction will make it in; reset the failed counter.\n+        nConsecutiveFailed = 0;\n+\n         // Package can be added. Sort the entries in a valid order.\n         std::vector<CTxMemPool::txiter> sortedEntries;\n         SortForBlock(ancestors, iter, sortedEntries);"
      }
    ]
  },
  {
    "sha": "10028fb5551a210c71e63b065c53cb2a3dddba00",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDAyOGZiNTU1MWEyMTBjNzFlNjNiMDY1YzUzY2IyYTNkZGRiYTAw",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-08T15:17:58Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-30T19:06:14Z"
      },
      "message": "Add benchmarking for CreateNewBlock\n\nGithub-Pull: #9959\nRebased-From: 42cd8c890fb2d65274f26edf95b6d52ac41fcab8",
      "tree": {
        "sha": "f3ef9f53e56676ad8383fdeb75c70cdcfa19555e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f3ef9f53e56676ad8383fdeb75c70cdcfa19555e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10028fb5551a210c71e63b065c53cb2a3dddba00",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10028fb5551a210c71e63b065c53cb2a3dddba00",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/10028fb5551a210c71e63b065c53cb2a3dddba00",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10028fb5551a210c71e63b065c53cb2a3dddba00/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b5c3440b053217afda5f03ee97b3835f02fd5290",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5c3440b053217afda5f03ee97b3835f02fd5290",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b5c3440b053217afda5f03ee97b3835f02fd5290"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "89863d3ec2a9429a31c29357e28e573452f25556",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10028fb5551a210c71e63b065c53cb2a3dddba00/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10028fb5551a210c71e63b065c53cb2a3dddba00/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=10028fb5551a210c71e63b065c53cb2a3dddba00",
        "patch": "@@ -129,6 +129,8 @@ void BlockAssembler::resetBlock()\n \n std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn, bool fMineWitnessTx)\n {\n+    int64_t nTimeStart = GetTimeMicros();\n+\n     resetBlock();\n \n     pblocktemplate.reset(new CBlockTemplate());\n@@ -170,6 +172,8 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     addPriorityTxs();\n     addPackageTxs();\n \n+    int64_t nTime1 = GetTimeMicros();\n+\n     nLastBlockTx = nBlockTx;\n     nLastBlockSize = nBlockSize;\n     nLastBlockWeight = nBlockWeight;\n@@ -200,6 +204,9 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     if (!TestBlockValidity(state, chainparams, *pblock, pindexPrev, false, false)) {\n         throw std::runtime_error(strprintf(\"%s: TestBlockValidity failed: %s\", __func__, FormatStateMessage(state)));\n     }\n+    int64_t nTime2 = GetTimeMicros();\n+\n+    LogPrint(\"bench\", \"CreateNewBlock() packages: %.2fms, validity: %.2fms (total %.2fms)\\n\", 0.001 * (nTime1 - nTimeStart), 0.001 * (nTime2 - nTime1), 0.001 * (nTime2 - nTimeStart));\n \n     return std::move(pblocktemplate);\n }"
      }
    ]
  },
  {
    "sha": "a296c6009ffc64e0409aad791449f9f7fc7ba794",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMjk2YzYwMDlmZmM2NGUwNDA5YWFkNzkxNDQ5ZjlmN2ZjN2JhNzk0",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-08T15:56:29Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-30T19:18:02Z"
      },
      "message": "Update benchmarking with package statistics\n\nGithub-Pull: #9959\nRebased-From: 011124a2b278c5a60bad5f1b0b4abbf7ebc95aa0",
      "tree": {
        "sha": "0bb27c64bb5488eb027676c7f18e6b7e0de33b42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0bb27c64bb5488eb027676c7f18e6b7e0de33b42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a296c6009ffc64e0409aad791449f9f7fc7ba794",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a296c6009ffc64e0409aad791449f9f7fc7ba794",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a296c6009ffc64e0409aad791449f9f7fc7ba794",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a296c6009ffc64e0409aad791449f9f7fc7ba794/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "10028fb5551a210c71e63b065c53cb2a3dddba00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10028fb5551a210c71e63b065c53cb2a3dddba00",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10028fb5551a210c71e63b065c53cb2a3dddba00"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 19,
      "deletions": 9
    },
    "files": [
      {
        "sha": "a12dcec2ce7e3706815758cc8d987db3098a68f1",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 5,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a296c6009ffc64e0409aad791449f9f7fc7ba794/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a296c6009ffc64e0409aad791449f9f7fc7ba794/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=a296c6009ffc64e0409aad791449f9f7fc7ba794",
        "patch": "@@ -170,7 +170,9 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     fIncludeWitness = IsWitnessEnabled(pindexPrev, chainparams.GetConsensus()) && fMineWitnessTx;\n \n     addPriorityTxs();\n-    addPackageTxs();\n+    int nPackagesSelected = 0;\n+    int nDescendantsUpdated = 0;\n+    addPackageTxs(nPackagesSelected, nDescendantsUpdated);\n \n     int64_t nTime1 = GetTimeMicros();\n \n@@ -206,7 +208,7 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     }\n     int64_t nTime2 = GetTimeMicros();\n \n-    LogPrint(\"bench\", \"CreateNewBlock() packages: %.2fms, validity: %.2fms (total %.2fms)\\n\", 0.001 * (nTime1 - nTimeStart), 0.001 * (nTime2 - nTime1), 0.001 * (nTime2 - nTimeStart));\n+    LogPrint(\"bench\", \"CreateNewBlock() packages: %.2fms (%d packages, %d updated descendants), validity: %.2fms (total %.2fms)\\n\", 0.001 * (nTime1 - nTimeStart), nPackagesSelected, nDescendantsUpdated, 0.001 * (nTime2 - nTime1), 0.001 * (nTime2 - nTimeStart));\n \n     return std::move(pblocktemplate);\n }\n@@ -347,16 +349,18 @@ void BlockAssembler::AddToBlock(CTxMemPool::txiter iter)\n     }\n }\n \n-void BlockAssembler::UpdatePackagesForAdded(const CTxMemPool::setEntries& alreadyAdded,\n+int BlockAssembler::UpdatePackagesForAdded(const CTxMemPool::setEntries& alreadyAdded,\n         indexed_modified_transaction_set &mapModifiedTx)\n {\n+    int nDescendantsUpdated = 0;\n     BOOST_FOREACH(const CTxMemPool::txiter it, alreadyAdded) {\n         CTxMemPool::setEntries descendants;\n         mempool.CalculateDescendants(it, descendants);\n         // Insert all descendants (not yet in block) into the modified set\n         BOOST_FOREACH(CTxMemPool::txiter desc, descendants) {\n             if (alreadyAdded.count(desc))\n                 continue;\n+            ++nDescendantsUpdated;\n             modtxiter mit = mapModifiedTx.find(desc);\n             if (mit == mapModifiedTx.end()) {\n                 CTxMemPoolModifiedEntry modEntry(desc);\n@@ -369,6 +373,7 @@ void BlockAssembler::UpdatePackagesForAdded(const CTxMemPool::setEntries& alread\n             }\n         }\n     }\n+    return nDescendantsUpdated;\n }\n \n // Skip entries in mapTx that are already in a block or are present\n@@ -409,7 +414,7 @@ void BlockAssembler::SortForBlock(const CTxMemPool::setEntries& package, CTxMemP\n // Each time through the loop, we compare the best transaction in\n // mapModifiedTxs with the next transaction in the mempool to decide what\n // transaction package to work on next.\n-void BlockAssembler::addPackageTxs()\n+void BlockAssembler::addPackageTxs(int &nPackagesSelected, int &nDescendantsUpdated)\n {\n     // mapModifiedTx will store sorted packages after they are modified\n     // because some of their txs are already in the block\n@@ -532,8 +537,10 @@ void BlockAssembler::addPackageTxs()\n             mapModifiedTx.erase(sortedEntries[i]);\n         }\n \n+        ++nPackagesSelected;\n+\n         // Update transactions that depend on each of these\n-        UpdatePackagesForAdded(ancestors, mapModifiedTx);\n+        nDescendantsUpdated += UpdatePackagesForAdded(ancestors, mapModifiedTx);\n     }\n }\n "
      },
      {
        "sha": "9ae2874927c610fa1ac86cdfb50a31e3437407f0",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a296c6009ffc64e0409aad791449f9f7fc7ba794/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a296c6009ffc64e0409aad791449f9f7fc7ba794/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=a296c6009ffc64e0409aad791449f9f7fc7ba794",
        "patch": "@@ -177,8 +177,10 @@ class BlockAssembler\n     // Methods for how to add transactions to a block.\n     /** Add transactions based on tx \"priority\" */\n     void addPriorityTxs();\n-    /** Add transactions based on feerate including unconfirmed ancestors */\n-    void addPackageTxs();\n+    /** Add transactions based on feerate including unconfirmed ancestors\n+      * Increments nPackagesSelected / nDescendantsUpdated with corresponding\n+      * statistics from the package selection (for logging statistics). */\n+    void addPackageTxs(int &nPackagesSelected, int &nDescendantsUpdated);\n \n     // helper function for addPriorityTxs\n     /** Test if tx will still \"fit\" in the block */\n@@ -202,8 +204,9 @@ class BlockAssembler\n     /** Sort the package in an order that is valid to appear in a block */\n     void SortForBlock(const CTxMemPool::setEntries& package, CTxMemPool::txiter entry, std::vector<CTxMemPool::txiter>& sortedEntries);\n     /** Add descendants of given transactions to mapModifiedTx with ancestor\n-      * state updated assuming given transactions are inBlock. */\n-    void UpdatePackagesForAdded(const CTxMemPool::setEntries& alreadyAdded, indexed_modified_transaction_set &mapModifiedTx);\n+      * state updated assuming given transactions are inBlock. Returns number\n+      * of updated descendants. */\n+    int UpdatePackagesForAdded(const CTxMemPool::setEntries& alreadyAdded, indexed_modified_transaction_set &mapModifiedTx);\n };\n \n /** Modify the extranonce in a block */"
      }
    ]
  }
]