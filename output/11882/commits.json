[
  {
    "sha": "8222e057fe60934a57b1d8226b0e1bd071f8dac2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MjIyZTA1N2ZlNjA5MzRhNTdiMWQ4MjI2YjBlMWJkMDcxZjhkYWMy",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-12-12T20:32:50Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-02-25T01:33:46Z"
      },
      "message": "Disable wallet fallbackfee by default on mainnet",
      "tree": {
        "sha": "8439061439ed2cb0ee480b8246243ee91f4f70e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8439061439ed2cb0ee480b8246243ee91f4f70e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8222e057fe60934a57b1d8226b0e1bd071f8dac2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlqSEnwACgkQHrd2uwPH\nki2YIhAAk+QvJrPTUkDyh6q4T9kdyoHJ8yqepxlbLqCOITuz7uXo9MsiV4q7vNkS\noKmaRql+3YvhZrQbqeB/zDYDn2g+mij9XQtiQ6qOR9MUYDWPXKWgD3ixw9+oBvX2\nRHZVkFYciJLrRHWCKD+PE3XOW0xh4LwgTSTPMBxsia97PgLPG6/k0iVUq+iErTne\nlinTIcHBEKtNq7Nxl8eWvCLJDMY7rXY7T8KHFNHdfJN5qHrBQlzev4K2UayUq0/E\nIEvLsUtuhPC+pKRt5tGWTDxqWEK/lPcEiK7cCNkHY8a4/Y3zZh8ArPkUYJnKX+jd\nLCmN2AkuLwA6tajUjqryq1gasvxopRGG2x8sWN2HJAL8ksUhDlb1L2hNprB25E+8\nZeGOQ8pvRTOK8QrYQCN+dD16/wKg32awL5wP0dqyqfLRCD258Az3WWaO1Vnjwqbe\nC9BfBxJutE3Ptf72ZgRc55EMgPISYoTtbun2s9mFyxVYwVXTH/WdsyLuL22ttVkt\nzw2isaGvKKQt5mfNgVGNU10Pyapyn72OnhalU0COhNB/iHO3GX9xCqVVKrndfZiV\nOTYc4lAq0h7/1iXjdItpFuWBTtOB5BkTtqmHUP/RK82M8jPjMzkcggzzFGeuXASk\nYJ96410ugB88saK4OyAlhsQ4k+AsuoGWFAV4huazV6ztggk9R1A=\n=gFyp\n-----END PGP SIGNATURE-----",
        "payload": "tree 8439061439ed2cb0ee480b8246243ee91f4f70e9\nparent 67447ba06057b8e83f962c82491d2fe6c5211f50\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1513110770 -1000\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1519522426 +0800\n\nDisable wallet fallbackfee by default on mainnet\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8222e057fe60934a57b1d8226b0e1bd071f8dac2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8222e057fe60934a57b1d8226b0e1bd071f8dac2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8222e057fe60934a57b1d8226b0e1bd071f8dac2/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "67447ba06057b8e83f962c82491d2fe6c5211f50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67447ba06057b8e83f962c82491d2fe6c5211f50",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/67447ba06057b8e83f962c82491d2fe6c5211f50"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 29,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c2b3480f9d41ed2db94c6363f20fc651a8db5577",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8222e057fe60934a57b1d8226b0e1bd071f8dac2/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8222e057fe60934a57b1d8226b0e1bd071f8dac2/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=8222e057fe60934a57b1d8226b0e1bd071f8dac2",
        "patch": "@@ -175,6 +175,9 @@ class CMainParams : public CChainParams {\n                         //   (the tx=... number in the SetBestChain debug.log lines)\n             3.5         // * estimated number of transactions per second after that timestamp\n         };\n+\n+        /* disable fallback fee on mainnet */\n+        m_fallback_fee_enabled = false;\n     }\n };\n \n@@ -266,6 +269,8 @@ class CTestNetParams : public CChainParams {\n             0.09\n         };\n \n+        /* enable fallback fee on testnet */\n+        m_fallback_fee_enabled = true;\n     }\n };\n \n@@ -343,6 +348,9 @@ class CRegTestParams : public CChainParams {\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n \n         bech32_hrp = \"bcrt\";\n+\n+        /* enable fallback fee on regtest */\n+        m_fallback_fee_enabled = true;\n     }\n };\n "
      },
      {
        "sha": "6b1f813afb47267ba10abf1ece3d5b2cd98246cf",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8222e057fe60934a57b1d8226b0e1bd071f8dac2/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8222e057fe60934a57b1d8226b0e1bd071f8dac2/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=8222e057fe60934a57b1d8226b0e1bd071f8dac2",
        "patch": "@@ -65,6 +65,8 @@ class CChainParams\n     bool MineBlocksOnDemand() const { return fMineBlocksOnDemand; }\n     /** Return the BIP70 network string (main, test or regtest) */\n     std::string NetworkIDString() const { return strNetworkID; }\n+    /** Return true if the fallback fee is by default enabled for this network */\n+    bool IsFallbackFeeEnabled() const { return m_fallback_fee_enabled; }\n     /** Return the list of hostnames to look up for DNS seeds */\n     const std::vector<std::string>& DNSSeeds() const { return vSeeds; }\n     const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n@@ -91,6 +93,7 @@ class CChainParams\n     bool fMineBlocksOnDemand;\n     CCheckpointData checkpointData;\n     ChainTxData chainTxData;\n+    bool m_fallback_fee_enabled;\n };\n \n /**"
      },
      {
        "sha": "0dc557e3a9187f11d9f3d2acd9ef6ff0af5e2aa0",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8222e057fe60934a57b1d8226b0e1bd071f8dac2/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8222e057fe60934a57b1d8226b0e1bd071f8dac2/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=8222e057fe60934a57b1d8226b0e1bd071f8dac2",
        "patch": "@@ -158,6 +158,8 @@ void TestGUI()\n         test.CreateAndProcessBlock({}, GetScriptForRawPubKey(test.coinbaseKey.GetPubKey()));\n     }\n     bitdb.MakeMock();\n+    g_wallet_allow_fallback_fee = true;\n+\n     std::unique_ptr<CWalletDBWrapper> dbw(new CWalletDBWrapper(&bitdb, \"wallet_test.dat\"));\n     CWallet wallet(std::move(dbw));\n     bool firstRun;"
      },
      {
        "sha": "385fdc963a9a5973212cdafe3a8ca62c63d4f9b2",
        "filename": "src/wallet/fees.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8222e057fe60934a57b1d8226b0e1bd071f8dac2/src/wallet/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8222e057fe60934a57b1d8226b0e1bd071f8dac2/src/wallet/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/fees.cpp?ref=8222e057fe60934a57b1d8226b0e1bd071f8dac2",
        "patch": "@@ -53,6 +53,9 @@ CAmount GetMinimumFee(unsigned int nTxBytes, const CCoinControl& coin_control, c\n             // if we don't have enough data for estimateSmartFee, then use fallbackFee\n             fee_needed = CWallet::fallbackFee.GetFee(nTxBytes);\n             if (feeCalc) feeCalc->reason = FeeReason::FALLBACK;\n+\n+            // directly return if fallback fee is disabled (feerate 0 == disabled)\n+            if (CWallet::fallbackFee.GetFee(1000) == 0) return fee_needed;\n         }\n         // Obey mempool min fee when using smart fee estimation\n         CAmount min_mempool_fee = pool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFee(nTxBytes);"
      },
      {
        "sha": "9ac48bff77c7ef8c1f15e284508e555a57a2773a",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8222e057fe60934a57b1d8226b0e1bd071f8dac2/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8222e057fe60934a57b1d8226b0e1bd071f8dac2/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=8222e057fe60934a57b1d8226b0e1bd071f8dac2",
        "patch": "@@ -5,6 +5,7 @@\n \n #include <wallet/init.h>\n \n+#include <chainparams.h>\n #include <net.h>\n #include <util.h>\n #include <utilmoneystr.h>\n@@ -123,6 +124,8 @@ bool WalletParameterInteraction()\n                         _(\"This is the minimum transaction fee you pay on every transaction.\"));\n         CWallet::minTxFee = CFeeRate(n);\n     }\n+\n+    g_wallet_allow_fallback_fee = Params().IsFallbackFeeEnabled();\n     if (gArgs.IsArgSet(\"-fallbackfee\"))\n     {\n         CAmount nFeePerK = 0;\n@@ -132,6 +135,7 @@ bool WalletParameterInteraction()\n             InitWarning(AmountHighWarn(\"-fallbackfee\") + \" \" +\n                         _(\"This is the transaction fee you may pay when fee estimates are not available.\"));\n         CWallet::fallbackFee = CFeeRate(nFeePerK);\n+        g_wallet_allow_fallback_fee = nFeePerK != 0; //disable fallback fee in case value was set to 0, enable if non-null value\n     }\n     if (gArgs.IsArgSet(\"-discardfee\"))\n     {"
      },
      {
        "sha": "6ec5ca29ade1f0bfe545c18057fdae8d23b63782",
        "filename": "src/wallet/test/wallet_test_fixture.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8222e057fe60934a57b1d8226b0e1bd071f8dac2/src/wallet/test/wallet_test_fixture.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8222e057fe60934a57b1d8226b0e1bd071f8dac2/src/wallet/test/wallet_test_fixture.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_test_fixture.cpp?ref=8222e057fe60934a57b1d8226b0e1bd071f8dac2",
        "patch": "@@ -11,6 +11,7 @@ WalletTestingSetup::WalletTestingSetup(const std::string& chainName):\n     TestingSetup(chainName)\n {\n     bitdb.MakeMock();\n+    g_wallet_allow_fallback_fee = true;\n \n     bool fFirstRun;\n     g_address_type = OUTPUT_TYPE_DEFAULT;"
      },
      {
        "sha": "1f56cb373579944d563a3b3e669b6581fd65b662",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8222e057fe60934a57b1d8226b0e1bd071f8dac2/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8222e057fe60934a57b1d8226b0e1bd071f8dac2/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=8222e057fe60934a57b1d8226b0e1bd071f8dac2",
        "patch": "@@ -44,6 +44,7 @@ bool bSpendZeroConfChange = DEFAULT_SPEND_ZEROCONF_CHANGE;\n bool fWalletRbf = DEFAULT_WALLET_RBF;\n OutputType g_address_type = OUTPUT_TYPE_NONE;\n OutputType g_change_type = OUTPUT_TYPE_NONE;\n+bool g_wallet_allow_fallback_fee = false; //<! will be defined via chainparams\n \n const char * DEFAULT_WALLET_DAT = \"wallet.dat\";\n const uint32_t BIP32_HARDENED_KEY_LIMIT = 0x80000000;\n@@ -2922,6 +2923,11 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n                 }\n \n                 nFeeNeeded = GetMinimumFee(nBytes, coin_control, ::mempool, ::feeEstimator, &feeCalc);\n+                if (feeCalc.reason == FeeReason::FALLBACK && !g_wallet_allow_fallback_fee) {\n+                    // eventually allow a fallback fee\n+                    strFailReason = _(\"Fee estimation failed. Fallbackfee is disabled. Wait a few blocks or enable -fallbackfee.\");\n+                    return false;\n+                }\n \n                 // If we made it here and we aren't even able to meet the relay fee on the next pass, give up\n                 // because we must be at the maximum allowed fee."
      },
      {
        "sha": "8d4b7018728e12fe1127f65ac0ef1fde9df3512a",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8222e057fe60934a57b1d8226b0e1bd071f8dac2/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8222e057fe60934a57b1d8226b0e1bd071f8dac2/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=8222e057fe60934a57b1d8226b0e1bd071f8dac2",
        "patch": "@@ -39,6 +39,7 @@ extern CFeeRate payTxFee;\n extern unsigned int nTxConfirmTarget;\n extern bool bSpendZeroConfChange;\n extern bool fWalletRbf;\n+extern bool g_wallet_allow_fallback_fee;\n \n static const unsigned int DEFAULT_KEYPOOL_SIZE = 1000;\n //! -paytxfee default\n@@ -65,6 +66,7 @@ static const unsigned int DEFAULT_TX_CONFIRM_TARGET = 6;\n static const bool DEFAULT_WALLET_RBF = false;\n static const bool DEFAULT_WALLETBROADCAST = true;\n static const bool DEFAULT_DISABLE_WALLET = false;\n+static const bool DEFAULT_WALLET_ALLOW_FALLBACKFEE = true;\n \n extern const char * DEFAULT_WALLET_DAT;\n "
      }
    ]
  },
  {
    "sha": "3f592b81dcca3d2ef11403a623a6ba5b017567d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjU5MmI4MWRjY2EzZDJlZjExNDAzYTYyM2E2YmE1YjAxNzU2N2Q3",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-12-12T22:33:39Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2018-02-25T01:38:38Z"
      },
      "message": "[QA] add wallet-rbf test",
      "tree": {
        "sha": "374d6d45cfaa0b6c86853c79881aa0b2290ccbfd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/374d6d45cfaa0b6c86853c79881aa0b2290ccbfd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f592b81dcca3d2ef11403a623a6ba5b017567d7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlqSE6IACgkQHrd2uwPH\nki15EQ//clBSYejwHWAumyiQ/ppcChLYt2lZaHxjWa6TJhnTd8h22vv/UOfQPVIf\np17pZsVOls2Svo8n9nX2f+rJtZuVIA1G3o+QdiDLyMYSKvvz6TufJLj4BZHaO/pN\nlREaJ8Qk5MJO0zaIRmqHaIV8NmM/dWQEdDVEKEsFgMXVtJCAMSGO4FVVd8PbXhBv\nUCIBT7nHPQZldKryPo74wS74CMcIsK6vyvmidw8CeD97+xhh/UdgTC/hUQR51NOd\nZ7iIfijrFgVEFTSb/iYH8XLYLVz/Ubeo1rEjiGkLwBHkHRf15FVLBqx5IkOsJf+r\nTIYZnxUgaDz1LR/sI47bg84NGmuMDNRJDJzTaOkLGii4PXXq9wiRdm3ICB5x0l2K\nT8lOLhTcXjkHYRdACO/S1qNKH/uF/dCXORtPzoSnEZuw5G0R8QSLyJlJI80pwMXL\nMQdZ9eo1KE8Qfx26R89Qj4TlE/Z1eJlsClKErNh9k95qdykjw8xwoON8Xsx3WlM7\nI1f8eIAuoD1Ydf2k3XMCs8hFNjp1P76PQBVdKe6xITWQi4EByx3UEu1R7G+3GAG3\nvFSxuloPObteRPf5DbJV6WCS9Uold8rl1Xg7jxJ9zZmBOJnc2eEO8GgeHVjdW69I\nXePIL7IMjKJQtyNq8JABcnPojPkvryARRFssjH6cG0fQP8jMDio=\n=qjcN\n-----END PGP SIGNATURE-----",
        "payload": "tree 374d6d45cfaa0b6c86853c79881aa0b2290ccbfd\nparent 8222e057fe60934a57b1d8226b0e1bd071f8dac2\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1513118019 -1000\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1519522718 +0800\n\n[QA] add wallet-rbf test\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f592b81dcca3d2ef11403a623a6ba5b017567d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f592b81dcca3d2ef11403a623a6ba5b017567d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f592b81dcca3d2ef11403a623a6ba5b017567d7/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8222e057fe60934a57b1d8226b0e1bd071f8dac2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8222e057fe60934a57b1d8226b0e1bd071f8dac2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8222e057fe60934a57b1d8226b0e1bd071f8dac2"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 29,
      "deletions": 0
    },
    "files": [
      {
        "sha": "45cbd56e70cceedbaecf4ace16b686c5524bfc51",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f592b81dcca3d2ef11403a623a6ba5b017567d7/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f592b81dcca3d2ef11403a623a6ba5b017567d7/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=3f592b81dcca3d2ef11403a623a6ba5b017567d7",
        "patch": "@@ -126,6 +126,7 @@\n     'feature_cltv.py',\n     'rpc_uptime.py',\n     'wallet_resendwallettransactions.py',\n+    'wallet_fallbackfee.py',\n     'feature_minchainwork.py',\n     'p2p_fingerprint.py',\n     'feature_uacomment.py',"
      },
      {
        "sha": "e9cd052344033f318502d367a54b06cd48255868",
        "filename": "test/functional/wallet_fallbackfee.py",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f592b81dcca3d2ef11403a623a6ba5b017567d7/test/functional/wallet_fallbackfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f592b81dcca3d2ef11403a623a6ba5b017567d7/test/functional/wallet_fallbackfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_fallbackfee.py?ref=3f592b81dcca3d2ef11403a623a6ba5b017567d7",
        "patch": "@@ -0,0 +1,28 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test wallet replace-by-fee capabilities in conjunction with the fallbackfee.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class WalletRBFTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def run_test(self):\n+        self.nodes[0].generate(101)\n+\n+        # sending a transaction without fee estimations must be possible by default on regtest\n+        self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 1)\n+\n+        # test sending a tx with disabled fallback fee (must fail)\n+        self.restart_node(0, extra_args=[\"-fallbackfee=0\"])\n+        assert_raises_rpc_error(-4, \"Fee estimation failed\", lambda: self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 1))\n+        assert_raises_rpc_error(-4, \"Fee estimation failed\", lambda: self.nodes[0].fundrawtransaction(self.nodes[0].createrawtransaction([], {self.nodes[0].getnewaddress(): 1})))\n+        assert_raises_rpc_error(-4, \"Fee estimation failed\", lambda: self.nodes[0].sendfrom(\"\", self.nodes[0].getnewaddress(), 1))\n+        assert_raises_rpc_error(-6, \"Fee estimation failed\", lambda: self.nodes[0].sendmany(\"\", {self.nodes[0].getnewaddress(): 1}))\n+\n+if __name__ == '__main__':\n+    WalletRBFTest().main()"
      }
    ]
  }
]