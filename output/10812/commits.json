[
  {
    "sha": "fe4fabaf12b74782ea99821ed8108f17e582060d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTRmYWJhZjEyYjc0NzgyZWE5OTgyMWVkODEwOGYxN2U1ODIwNjBk",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-07-12T20:55:28Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-07-12T21:06:15Z"
      },
      "message": "[refactor] move SplitHostPort() into utilstrencodings\n\nThis moves SplitHostPort from libbitcoin_common to libbitcoin_util so it\nis available to bitcoin-cli.",
      "tree": {
        "sha": "ba72abdf42d6c2975788cb5e48d377f22756c00f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba72abdf42d6c2975788cb5e48d377f22756c00f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe4fabaf12b74782ea99821ed8108f17e582060d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe4fabaf12b74782ea99821ed8108f17e582060d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe4fabaf12b74782ea99821ed8108f17e582060d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe4fabaf12b74782ea99821ed8108f17e582060d/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ca4c545cc7e8c06bc8d9d4db1dd2d8f5fe011902",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca4c545cc7e8c06bc8d9d4db1dd2d8f5fe011902",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ca4c545cc7e8c06bc8d9d4db1dd2d8f5fe011902"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 22,
      "deletions": 20
    },
    "files": [
      {
        "sha": "290a2efca2b4e86afd1c4362baeea4a4f528c5b0",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe4fabaf12b74782ea99821ed8108f17e582060d/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe4fabaf12b74782ea99821ed8108f17e582060d/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=fe4fabaf12b74782ea99821ed8108f17e582060d",
        "patch": "@@ -7,6 +7,7 @@\n #include \"chainparamsbase.h\"\n #include \"compat.h\"\n #include \"util.h\"\n+#include \"utilstrencodings.h\"\n #include \"netbase.h\"\n #include \"rpc/protocol.h\" // For HTTP status codes\n #include \"sync.h\""
      },
      {
        "sha": "84e1d8228df9b28612d50247edd3268719d824e2",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe4fabaf12b74782ea99821ed8108f17e582060d/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe4fabaf12b74782ea99821ed8108f17e582060d/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=fe4fabaf12b74782ea99821ed8108f17e582060d",
        "patch": "@@ -58,25 +58,6 @@ std::string GetNetworkName(enum Network net) {\n     }\n }\n \n-void SplitHostPort(std::string in, int &portOut, std::string &hostOut) {\n-    size_t colon = in.find_last_of(':');\n-    // if a : is found, and it either follows a [...], or no other : is in the string, treat it as port separator\n-    bool fHaveColon = colon != in.npos;\n-    bool fBracketed = fHaveColon && (in[0]=='[' && in[colon-1]==']'); // if there is a colon, and in[0]=='[', colon is not 0, so in[colon-1] is safe\n-    bool fMultiColon = fHaveColon && (in.find_last_of(':',colon-1) != in.npos);\n-    if (fHaveColon && (colon==0 || fBracketed || !fMultiColon)) {\n-        int32_t n;\n-        if (ParseInt32(in.substr(colon + 1), &n) && n > 0 && n < 0x10000) {\n-            in = in.substr(0, colon);\n-            portOut = n;\n-        }\n-    }\n-    if (in.size()>0 && in[0] == '[' && in[in.size()-1] == ']')\n-        hostOut = in.substr(1, in.size()-2);\n-    else\n-        hostOut = in;\n-}\n-\n bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup)\n {\n     vIP.clear();"
      },
      {
        "sha": "fd4b34c8f1e6e987fdbec98850d8f11fe4729a91",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe4fabaf12b74782ea99821ed8108f17e582060d/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe4fabaf12b74782ea99821ed8108f17e582060d/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=fe4fabaf12b74782ea99821ed8108f17e582060d",
        "patch": "@@ -39,7 +39,6 @@ class proxyType\n \n enum Network ParseNetwork(std::string net);\n std::string GetNetworkName(enum Network net);\n-void SplitHostPort(std::string in, int &portOut, std::string &hostOut);\n bool SetProxy(enum Network net, const proxyType &addrProxy);\n bool GetProxy(enum Network net, proxyType &proxyInfoOut);\n bool IsProxy(const CNetAddr &addr);"
      },
      {
        "sha": "1baf7643e544618448053a3732d109f4db422923",
        "filename": "src/test/netbase_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe4fabaf12b74782ea99821ed8108f17e582060d/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe4fabaf12b74782ea99821ed8108f17e582060d/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=fe4fabaf12b74782ea99821ed8108f17e582060d",
        "patch": "@@ -4,6 +4,7 @@\n \n #include \"netbase.h\"\n #include \"test/test_bitcoin.h\"\n+#include \"utilstrencodings.h\"\n \n #include <string>\n "
      },
      {
        "sha": "6a15186b67abcdb453fee74209edc81af9e4d2d5",
        "filename": "src/utilstrencodings.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe4fabaf12b74782ea99821ed8108f17e582060d/src/utilstrencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe4fabaf12b74782ea99821ed8108f17e582060d/src/utilstrencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.cpp?ref=fe4fabaf12b74782ea99821ed8108f17e582060d",
        "patch": "@@ -91,6 +91,25 @@ std::vector<unsigned char> ParseHex(const std::string& str)\n     return ParseHex(str.c_str());\n }\n \n+void SplitHostPort(std::string in, int &portOut, std::string &hostOut) {\n+    size_t colon = in.find_last_of(':');\n+    // if a : is found, and it either follows a [...], or no other : is in the string, treat it as port separator\n+    bool fHaveColon = colon != in.npos;\n+    bool fBracketed = fHaveColon && (in[0]=='[' && in[colon-1]==']'); // if there is a colon, and in[0]=='[', colon is not 0, so in[colon-1] is safe\n+    bool fMultiColon = fHaveColon && (in.find_last_of(':',colon-1) != in.npos);\n+    if (fHaveColon && (colon==0 || fBracketed || !fMultiColon)) {\n+        int32_t n;\n+        if (ParseInt32(in.substr(colon + 1), &n) && n > 0 && n < 0x10000) {\n+            in = in.substr(0, colon);\n+            portOut = n;\n+        }\n+    }\n+    if (in.size()>0 && in[0] == '[' && in[in.size()-1] == ']')\n+        hostOut = in.substr(1, in.size()-2);\n+    else\n+        hostOut = in;\n+}\n+\n std::string EncodeBase64(const unsigned char* pch, size_t len)\n {\n     static const char *pbase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";"
      },
      {
        "sha": "707fdaad169b17f83104ad45ad70819f53ae83b3",
        "filename": "src/utilstrencodings.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe4fabaf12b74782ea99821ed8108f17e582060d/src/utilstrencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe4fabaf12b74782ea99821ed8108f17e582060d/src/utilstrencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.h?ref=fe4fabaf12b74782ea99821ed8108f17e582060d",
        "patch": "@@ -48,6 +48,7 @@ std::string DecodeBase32(const std::string& str);\n std::string EncodeBase32(const unsigned char* pch, size_t len);\n std::string EncodeBase32(const std::string& str);\n \n+void SplitHostPort(std::string in, int &portOut, std::string &hostOut);\n std::string i64tostr(int64_t n);\n std::string itostr(int n);\n int64_t atoi64(const char* psz);"
      }
    ]
  },
  {
    "sha": "5c643241e5d98992c0d5487b65e9c7b6d8005d1a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YzY0MzI0MWU1ZDk4OTkyYzBkNTQ4N2I2NWU5YzdiNmQ4MDA1ZDFh",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-07-12T20:59:09Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-07-13T21:15:36Z"
      },
      "message": "[utils] allow square brackets for ipv6 addresses in bitcoin-cli\n\n-rpcconnect can now accept ipv6 addresses with and without square\nbrackets.",
      "tree": {
        "sha": "3f976f056d92f576e87e1d0ad96af871d0982595",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f976f056d92f576e87e1d0ad96af871d0982595"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5c643241e5d98992c0d5487b65e9c7b6d8005d1a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c643241e5d98992c0d5487b65e9c7b6d8005d1a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5c643241e5d98992c0d5487b65e9c7b6d8005d1a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c643241e5d98992c0d5487b65e9c7b6d8005d1a/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe4fabaf12b74782ea99821ed8108f17e582060d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe4fabaf12b74782ea99821ed8108f17e582060d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe4fabaf12b74782ea99821ed8108f17e582060d"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "92f6a21ebbd72a406711a3048822c40870efc54a",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c643241e5d98992c0d5487b65e9c7b6d8005d1a/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c643241e5d98992c0d5487b65e9c7b6d8005d1a/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=5c643241e5d98992c0d5487b65e9c7b6d8005d1a",
        "patch": "@@ -10,6 +10,7 @@\n #include \"chainparamsbase.h\"\n #include \"clientversion.h\"\n #include \"fs.h\"\n+#include \"utilstrencodings.h\"\n #include \"rpc/client.h\"\n #include \"rpc/protocol.h\"\n #include \"util.h\"\n@@ -191,8 +192,14 @@ static void http_error_cb(enum evhttp_request_error err, void *ctx)\n \n UniValue CallRPC(const std::string& strMethod, const UniValue& params)\n {\n-    std::string host = GetArg(\"-rpcconnect\", DEFAULT_RPCCONNECT);\n-    int port = GetArg(\"-rpcport\", BaseParams().RPCPort());\n+    std::string host;\n+    // In preference order, we choose the following for the port:\n+    //     1. -rpcport\n+    //     2. port in -rpcconnect (ie following : in ipv4 or ]: in ipv6)\n+    //     3. default port for chain\n+    int port = BaseParams().RPCPort();\n+    SplitHostPort(GetArg(\"-rpcconnect\", DEFAULT_RPCCONNECT), port, host);\n+    port = GetArg(\"-rpcport\", port);\n \n     // Obtain event base\n     raii_event_base base = obtain_event_base();"
      }
    ]
  }
]