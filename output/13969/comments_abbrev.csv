DrahtBot,2018-08-14T21:32:07Z,"<!--e57a25ab6845829454e8d69fc972939a-->Reviewers, this pull request conflicts with the following ones:\n\n* #14437 (Refactor: Start to separate wallet from node by ryanofsky)\n* #10973 (Refactor: separate wallet from node by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",https://github.com/bitcoin/bitcoin/pull/13969#issuecomment-413023282,413023282,
practicalswift,2018-08-15T13:46:51Z,@domob1812 Thanks for reviewing. Feedback addressed. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13969#issuecomment-413202374,413202374,
practicalswift,2018-08-16T10:24:57Z,@promag Thanks for reviewing! Feedback addressed. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/13969#issuecomment-413498012,413498012,
practicalswift,2018-08-16T14:41:04Z,"@promag I'm not sure I follow. The assumption underlying your reasoning seems to be that the only difference between …\n\n```\nassert(foo);\nfoo->bar();\n```\n\n… and …\n\n```\n// assert(foo);\nfoo->bar();\n```\n... at runtime would be the line number at which the process terminates (given `foo == nullptr`). That seems like a very risky assumption to make? :-)",https://github.com/bitcoin/bitcoin/pull/13969#issuecomment-413569583,413569583,
promag,2018-08-16T14:45:54Z,"@practicalswift I said\n\n> which I believe is not the case here.",https://github.com/bitcoin/bitcoin/pull/13969#issuecomment-413571163,413571163,
practicalswift,2018-08-16T14:51:21Z,"@promag Ah, I think I misunderstood what you wrote. You're simply suggesting that the assertions should be made right before dereferencing and not earlier (assuming no side effects before dereferencing)?\n\nI misunderstood and thought that you meant that the only potential problem caused by null pointer dereferencing would be process termination :-)",https://github.com/bitcoin/bitcoin/pull/13969#issuecomment-413573101,413573101,
promag,2018-08-16T15:05:07Z,"> You're simply suggesting that the assertions should be made right before dereferencing and not earlier\n\nI mean that an assertion makes sense to prevent side effects before dereferencing.\n\nI also think that these particular assertions are not that relevant or useful.\n\nIMHO of course, and I'd wait for more reviews.",https://github.com/bitcoin/bitcoin/pull/13969#issuecomment-413577908,413577908,
promag,2018-09-13T19:55:36Z,"> it might encourage more uses of c++ references instead of pointers\n\n@ryanofsky +1",https://github.com/bitcoin/bitcoin/pull/13969#issuecomment-421132516,421132516,
domob1812,2018-08-15T06:04:53Z,Nit: You could make this `const CBlockIndex*`.,https://github.com/bitcoin/bitcoin/pull/13969#discussion_r210177846,210177846,src/rpc/blockchain.cpp
domob1812,2018-08-15T06:05:14Z,"While you are here, you could make this `const`.",https://github.com/bitcoin/bitcoin/pull/13969#discussion_r210177880,210177880,src/validation.cpp
domob1812,2018-08-15T06:06:38Z,"This is a matter of taste, but I think that the more explicit `pBestIndex != nullptr` is more readable as to the intent.  I'm not sure if there's a style rule for how to test pointers against null which goes against that, though.",https://github.com/bitcoin/bitcoin/pull/13969#discussion_r210178014,210178014,src/net_processing.cpp
domob1812,2018-08-15T06:07:10Z,Can also be `const`.,https://github.com/bitcoin/bitcoin/pull/13969#discussion_r210178053,210178053,src/wallet/rpcwallet.cpp
promag,2018-08-15T22:25:14Z,"Is this even possible? If so then it's new behaviour, should have a test, otherwise should be an assertion.",https://github.com/bitcoin/bitcoin/pull/13969#discussion_r210428877,210428877,src/rpc/blockchain.cpp
promag,2018-08-15T22:28:43Z,Unrelated to this PR. Above you see that if `vHeaders.push` is called then `pBestIndex = pindex` was called. IMO this should be removed.,https://github.com/bitcoin/bitcoin/pull/13969#discussion_r210429576,210429576,src/net_processing.cpp
promag,2018-08-15T22:31:07Z,"Is this even possible? If not, should be an assertion.",https://github.com/bitcoin/bitcoin/pull/13969#discussion_r210430033,210430033,src/rpc/blockchain.cpp
promag,2018-08-15T22:32:50Z,Should be an assertion? How can it be `nullptr` since `confirms > 0`?,https://github.com/bitcoin/bitcoin/pull/13969#discussion_r210430408,210430408,src/wallet/rpcwallet.cpp
practicalswift,2018-08-16T09:01:22Z,"You don't mean that the assertion should be removed? How do you mean ""unrelated to this PR"" in this context? :-)",https://github.com/bitcoin/bitcoin/pull/13969#discussion_r210524206,210524206,src/net_processing.cpp
promag,2018-08-16T09:03:47Z,"This is not an assertion of a LookupBlockIndex result, that's done in L3400.",https://github.com/bitcoin/bitcoin/pull/13969#discussion_r210524918,210524918,src/net_processing.cpp
promag,2018-08-16T14:15:57Z,Why this assertion?,https://github.com/bitcoin/bitcoin/pull/13969#discussion_r210612752,210612752,src/wallet/rpcwallet.cpp
practicalswift,2018-08-16T14:29:25Z,"@promag `stopBlock` is dereferenced a few lines down:\n\n```\nresponse.pushKV(""stop_height"", stopBlock->nHeight);\n```",https://github.com/bitcoin/bitcoin/pull/13969#discussion_r210618575,210618575,src/wallet/rpcwallet.cpp
promag,2018-08-16T14:44:13Z,"And that's fine, if by any chance `stopBlock` is null then the process will terminate. In this simple code the assertion is pointless IMO.",https://github.com/bitcoin/bitcoin/pull/13969#discussion_r210624364,210624364,src/wallet/rpcwallet.cpp
