[
  {
    "sha": "75f360cfd8e69656bebe195e64b4ad1b1b069ae6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NWYzNjBjZmQ4ZTY5NjU2YmViZTE5NWU2NGI0YWQxYjFiMDY5YWU2",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-16T14:57:18Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-08-16T14:57:18Z"
      },
      "message": "Make sure all callers of LookupBlockIndex(...) check for nullptr before dereferencing (CBlockIndex*)",
      "tree": {
        "sha": "5964306c8d302c55b1dfa7c41cac886fab379bdd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5964306c8d302c55b1dfa7c41cac886fab379bdd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75f360cfd8e69656bebe195e64b4ad1b1b069ae6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75f360cfd8e69656bebe195e64b4ad1b1b069ae6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/75f360cfd8e69656bebe195e64b4ad1b1b069ae6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75f360cfd8e69656bebe195e64b4ad1b1b069ae6/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b5591ca0b053623f0d96423b05ad809115a0bdef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5591ca0b053623f0d96423b05ad809115a0bdef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b5591ca0b053623f0d96423b05ad809115a0bdef"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 10,
      "deletions": 3
    },
    "files": [
      {
        "sha": "eb7c45204c445a782858ede78b4317e776e6a97a",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75f360cfd8e69656bebe195e64b4ad1b1b069ae6/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75f360cfd8e69656bebe195e64b4ad1b1b069ae6/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=75f360cfd8e69656bebe195e64b4ad1b1b069ae6",
        "patch": "@@ -880,7 +880,9 @@ static bool GetUTXOStats(CCoinsView *view, CCoinsStats &stats)\n     stats.hashBlock = pcursor->GetBestBlock();\n     {\n         LOCK(cs_main);\n-        stats.nHeight = LookupBlockIndex(stats.hashBlock)->nHeight;\n+        const CBlockIndex* blockIndex = LookupBlockIndex(stats.hashBlock);\n+        assert(blockIndex);\n+        stats.nHeight = blockIndex->nHeight;\n     }\n     ss << stats.hashBlock;\n     uint256 prevkey;\n@@ -1064,6 +1066,7 @@ UniValue gettxout(const JSONRPCRequest& request)\n     }\n \n     const CBlockIndex* pindex = LookupBlockIndex(pcoinsTip->GetBestBlock());\n+    assert(pindex);\n     ret.pushKV(\"bestblock\", pindex->GetBlockHash().GetHex());\n     if (coin.nHeight == MEMPOOL_HEIGHT) {\n         ret.pushKV(\"confirmations\", 0);"
      },
      {
        "sha": "defd6bdc06480e9e4119786a2d3c6e08cff4157d",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75f360cfd8e69656bebe195e64b4ad1b1b069ae6/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75f360cfd8e69656bebe195e64b4ad1b1b069ae6/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=75f360cfd8e69656bebe195e64b4ad1b1b069ae6",
        "patch": "@@ -1346,7 +1346,8 @@ bool CScriptCheck::operator()() {\n int GetSpendHeight(const CCoinsViewCache& inputs)\n {\n     LOCK(cs_main);\n-    CBlockIndex* pindexPrev = LookupBlockIndex(inputs.GetBestBlock());\n+    const CBlockIndex* pindexPrev = LookupBlockIndex(inputs.GetBestBlock());\n+    assert(pindexPrev);\n     return pindexPrev->nHeight + 1;\n }\n "
      },
      {
        "sha": "b662c09ae4dca2dd2f1b89ce87978da7d14d277b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75f360cfd8e69656bebe195e64b4ad1b1b069ae6/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75f360cfd8e69656bebe195e64b4ad1b1b069ae6/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=75f360cfd8e69656bebe195e64b4ad1b1b069ae6",
        "patch": "@@ -99,7 +99,9 @@ static void WalletTxToJSON(const CWalletTx& wtx, UniValue& entry)\n     {\n         entry.pushKV(\"blockhash\", wtx.hashBlock.GetHex());\n         entry.pushKV(\"blockindex\", wtx.nIndex);\n-        entry.pushKV(\"blocktime\", LookupBlockIndex(wtx.hashBlock)->GetBlockTime());\n+        const CBlockIndex* blockIndex = LookupBlockIndex(wtx.hashBlock);\n+        assert(blockIndex);\n+        entry.pushKV(\"blocktime\", blockIndex->GetBlockTime());\n     } else {\n         entry.pushKV(\"trusted\", wtx.IsTrusted());\n     }\n@@ -4009,6 +4011,7 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n     }\n     UniValue response(UniValue::VOBJ);\n     response.pushKV(\"start_height\", pindexStart->nHeight);\n+    assert(stopBlock);\n     response.pushKV(\"stop_height\", stopBlock->nHeight);\n     return response;\n }"
      }
    ]
  }
]