[
  {
    "sha": "d70bc52ee31b8c4c87ee011625e7031c2dc89c0c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNzBiYzUyZWUzMWI4YzRjODdlZTAxMTYyNWU3MDMxYzJkYzg5YzBj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-07-26T20:49:17Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-07-26T22:41:03Z"
      },
      "message": "Rework block processing benchmark code\n\n* Replace -benchmark (and the related fBenchmark) with a regular debug option, -debug=bench.\n* Increase coverage and granularity of individual block processing steps.\n* Add cummulative times.",
      "tree": {
        "sha": "9b9050744185290e4f2207560dbf89888331b7b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9b9050744185290e4f2207560dbf89888331b7b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d70bc52ee31b8c4c87ee011625e7031c2dc89c0c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d70bc52ee31b8c4c87ee011625e7031c2dc89c0c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d70bc52ee31b8c4c87ee011625e7031c2dc89c0c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d70bc52ee31b8c4c87ee011625e7031c2dc89c0c/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3955c3940eff83518c186facfec6f50545b5aab5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3955c3940eff83518c186facfec6f50545b5aab5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3955c3940eff83518c186facfec6f50545b5aab5"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 41,
      "deletions": 17
    },
    "files": [
      {
        "sha": "8b6567b5c4179a965af4a8139459b096a34ceeb8",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d70bc52ee31b8c4c87ee011625e7031c2dc89c0c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d70bc52ee31b8c4c87ee011625e7031c2dc89c0c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d70bc52ee31b8c4c87ee011625e7031c2dc89c0c",
        "patch": "@@ -285,7 +285,6 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += \"\\n\" + _(\"Debugging/Testing options:\") + \"\\n\";\n     if (GetBoolArg(\"-help-debug\", false))\n     {\n-        strUsage += \"  -benchmark             \" + _(\"Show benchmark information (default: 0)\") + \"\\n\";\n         strUsage += \"  -checkpoints           \" + _(\"Only accept block chain matching built-in checkpoints (default: 1)\") + \"\\n\";\n         strUsage += \"  -dblogsize=<n>         \" + _(\"Flush database activity from memory pool to disk log every <n> megabytes (default: 100)\") + \"\\n\";\n         strUsage += \"  -disablesafemode       \" + _(\"Disable safemode, override a real safe mode event (default: 0)\") + \"\\n\";\n@@ -298,7 +297,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += \"  -debug=<category>      \" + _(\"Output debugging information (default: 0, supplying <category> is optional)\") + \"\\n\";\n     strUsage += \"                         \" + _(\"If <category> is not supplied, output all debugging information.\") + \"\\n\";\n     strUsage += \"                         \" + _(\"<category> can be:\");\n-    strUsage +=                                 \" addrman, alert, coindb, db, lock, rand, rpc, selectcoins, mempool, net\"; // Don't translate these and qt below\n+    strUsage +=                                 \" addrman, alert, bench, coindb, db, lock, rand, rpc, selectcoins, mempool, net\"; // Don't translate these and qt below\n     if (mode == HMM_BITCOIN_QT)\n         strUsage += \", qt\";\n     strUsage += \".\\n\";\n@@ -599,7 +598,9 @@ bool AppInit2(boost::thread_group& threadGroup)\n     if (GetBoolArg(\"-tor\", false))\n         return InitError(_(\"Error: Unsupported argument -tor found, use -onion.\"));\n \n-    fBenchmark = GetBoolArg(\"-benchmark\", false);\n+    if (GetBoolArg(\"-benchmark\", false))\n+        InitWarning(_(\"Warning: Unsupported argument -benchmark ignored, use -debug=bench.\"));\n+\n     // Checkmempool defaults to true in regtest mode\n     mempool.setSanityCheck(GetBoolArg(\"-checkmempool\", Params().DefaultCheckMemPool()));\n     Checkpoints::fEnabled = GetBoolArg(\"-checkpoints\", true);"
      },
      {
        "sha": "85e0851895af6e185dc009828b06c1fac2ebf043",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 13,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d70bc52ee31b8c4c87ee011625e7031c2dc89c0c/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d70bc52ee31b8c4c87ee011625e7031c2dc89c0c/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=d70bc52ee31b8c4c87ee011625e7031c2dc89c0c",
        "patch": "@@ -45,7 +45,6 @@ CConditionVariable cvBlockChange;\n int nScriptCheckThreads = 0;\n bool fImporting = false;\n bool fReindex = false;\n-bool fBenchmark = false;\n bool fTxIndex = false;\n bool fIsBareMultisigStd = true;\n unsigned int nCoinCacheSize = 5000;\n@@ -1680,6 +1679,12 @@ void ThreadScriptCheck() {\n     scriptcheckqueue.Thread();\n }\n \n+static int64_t nTimeVerify = 0;\n+static int64_t nTimeConnect = 0;\n+static int64_t nTimeIndex = 0;\n+static int64_t nTimeCallbacks = 0;\n+static int64_t nTimeTotal = 0;\n+\n bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, CCoinsViewCache& view, bool fJustCheck)\n {\n     AssertLockHeld(cs_main);\n@@ -1735,7 +1740,7 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n \n     CCheckQueueControl<CScriptCheck> control(fScriptChecks && nScriptCheckThreads ? &scriptcheckqueue : NULL);\n \n-    int64_t nStart = GetTimeMicros();\n+    int64_t nTimeStart = GetTimeMicros();\n     int64_t nFees = 0;\n     int nInputs = 0;\n     unsigned int nSigOps = 0;\n@@ -1785,9 +1790,8 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n         vPos.push_back(std::make_pair(tx.GetHash(), pos));\n         pos.nTxOffset += ::GetSerializeSize(tx, SER_DISK, CLIENT_VERSION);\n     }\n-    int64_t nTime = GetTimeMicros() - nStart;\n-    if (fBenchmark)\n-        LogPrintf(\"- Connect %u transactions: %.2fms (%.3fms/tx, %.3fms/txin)\\n\", (unsigned)block.vtx.size(), 0.001 * nTime, 0.001 * nTime / block.vtx.size(), nInputs <= 1 ? 0 : 0.001 * nTime / (nInputs-1));\n+    int64_t nTime1 = GetTimeMicros(); nTimeConnect += nTime1 - nTimeStart;\n+    LogPrint(\"bench\", \"      - Connect %u transactions: %.2fms (%.3fms/tx, %.3fms/txin) [%.2fs]\\n\", (unsigned)block.vtx.size(), 0.001 * (nTime1 - nTimeStart), 0.001 * (nTime1 - nTimeStart) / block.vtx.size(), nInputs <= 1 ? 0 : 0.001 * (nTime1 - nTimeStart) / (nInputs-1), nTimeConnect * 0.000001);\n \n     if (block.vtx[0].GetValueOut() > GetBlockValue(pindex->nHeight, nFees))\n         return state.DoS(100,\n@@ -1797,9 +1801,8 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n \n     if (!control.Wait())\n         return state.DoS(100, false);\n-    int64_t nTime2 = GetTimeMicros() - nStart;\n-    if (fBenchmark)\n-        LogPrintf(\"- Verify %u txins: %.2fms (%.3fms/txin)\\n\", nInputs - 1, 0.001 * nTime2, nInputs <= 1 ? 0 : 0.001 * nTime2 / (nInputs-1));\n+    int64_t nTime2 = GetTimeMicros(); nTimeVerify += nTime2 - nTimeStart;\n+    LogPrint(\"bench\", \"    - Verify %u txins: %.2fms (%.3fms/txin) [%.2fs]\\n\", nInputs - 1, 0.001 * (nTime2 - nTimeStart), nInputs <= 1 ? 0 : 0.001 * (nTime2 - nTimeStart) / (nInputs-1), nTimeVerify * 0.000001);\n \n     if (fJustCheck)\n         return true;\n@@ -1840,6 +1843,9 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n     ret = view.SetBestBlock(pindex->GetBlockHash());\n     assert(ret);\n \n+    int64_t nTime3 = GetTimeMicros(); nTimeIndex += nTime3 - nTime2;\n+    LogPrint(\"bench\", \"    - Index writing: %.2fms [%.2fs]\\n\", 0.001 * (nTime3 - nTime2), nTimeIndex * 0.000001);\n+\n     // Watch for transactions paying to me\n     BOOST_FOREACH(const CTransaction& tx, block.vtx)\n         g_signals.SyncTransaction(tx, &block);\n@@ -1849,6 +1855,9 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n     g_signals.UpdatedTransaction(hashPrevBestCoinBase);\n     hashPrevBestCoinBase = block.vtx[0].GetHash();\n \n+    int64_t nTime4 = GetTimeMicros(); nTimeCallbacks += nTime4 - nTime3;\n+    LogPrint(\"bench\", \"    - Callbacks: %.2fms [%.2fs]\\n\", 0.001 * (nTime4 - nTime3), nTimeCallbacks * 0.000001);\n+\n     return true;\n }\n \n@@ -1928,8 +1937,7 @@ bool static DisconnectTip(CValidationState &state) {\n             return error(\"DisconnectTip() : DisconnectBlock %s failed\", pindexDelete->GetBlockHash().ToString());\n         assert(view.Flush());\n     }\n-    if (fBenchmark)\n-        LogPrintf(\"- Disconnect: %.2fms\\n\", (GetTimeMicros() - nStart) * 0.001);\n+    LogPrint(\"bench\", \"- Disconnect block: %.2fms\\n\", (GetTimeMicros() - nStart) * 0.001);\n     // Write the chain state to disk, if necessary.\n     if (!WriteChainState(state))\n         return false;\n@@ -1953,16 +1961,25 @@ bool static DisconnectTip(CValidationState &state) {\n     return true;\n }\n \n+static int64_t nTimeReadFromDisk = 0;\n+static int64_t nTimeConnectTotal = 0;\n+static int64_t nTimeFlush = 0;\n+static int64_t nTimeChainState = 0;\n+static int64_t nTimePostConnect = 0;\n+\n // Connect a new block to chainActive.\n bool static ConnectTip(CValidationState &state, CBlockIndex *pindexNew) {\n     assert(pindexNew->pprev == chainActive.Tip());\n     mempool.check(pcoinsTip);\n     // Read block from disk.\n+    int64_t nTime1 = GetTimeMicros();\n     CBlock block;\n     if (!ReadBlockFromDisk(block, pindexNew))\n         return state.Abort(_(\"Failed to read block\"));\n     // Apply the block atomically to the chain state.\n-    int64_t nStart = GetTimeMicros();\n+    int64_t nTime2 = GetTimeMicros(); nTimeReadFromDisk += nTime2 - nTime1;\n+    int64_t nTime3;\n+    LogPrint(\"bench\", \"  - Load block from disk: %.2fms [%.2fs]\\n\", (nTime2 - nTime1) * 0.001, nTimeReadFromDisk * 0.000001);\n     {\n         CCoinsViewCache view(*pcoinsTip, true);\n         CInv inv(MSG_BLOCK, pindexNew->GetBlockHash());\n@@ -1972,13 +1989,17 @@ bool static ConnectTip(CValidationState &state, CBlockIndex *pindexNew) {\n             return error(\"ConnectTip() : ConnectBlock %s failed\", pindexNew->GetBlockHash().ToString());\n         }\n         mapBlockSource.erase(inv.hash);\n+        nTime3 = GetTimeMicros(); nTimeConnectTotal += nTime3 - nTime2;\n+        LogPrint(\"bench\", \"  - Connect total: %.2fms [%.2fs]\\n\", (nTime3 - nTime2) * 0.001, nTimeConnectTotal * 0.000001);\n         assert(view.Flush());\n     }\n-    if (fBenchmark)\n-        LogPrintf(\"- Connect: %.2fms\\n\", (GetTimeMicros() - nStart) * 0.001);\n+    int64_t nTime4 = GetTimeMicros(); nTimeFlush += nTime4 - nTime3;\n+    LogPrint(\"bench\", \"  - Flush: %.2fms [%.2fs]\\n\", (nTime4 - nTime3) * 0.001, nTimeFlush * 0.000001);\n     // Write the chain state to disk, if necessary.\n     if (!WriteChainState(state))\n         return false;\n+    int64_t nTime5 = GetTimeMicros(); nTimeChainState += nTime5 - nTime4;\n+    LogPrint(\"bench\", \"  - Writing chainstate: %.2fms [%.2fs]\\n\", (nTime5 - nTime4) * 0.001, nTimeChainState * 0.000001);\n     // Remove conflicting transactions from the mempool.\n     list<CTransaction> txConflicted;\n     mempool.removeForBlock(block.vtx, pindexNew->nHeight, txConflicted);\n@@ -1994,6 +2015,9 @@ bool static ConnectTip(CValidationState &state, CBlockIndex *pindexNew) {\n     BOOST_FOREACH(const CTransaction &tx, block.vtx) {\n         SyncWithWallets(tx, &block);\n     }\n+    int64_t nTime6 = GetTimeMicros(); nTimePostConnect += nTime6 - nTime5; nTimeTotal += nTime6 - nTime1;\n+    LogPrint(\"bench\", \"  - Connect postprocess: %.2fms [%.2fs]\\n\", (nTime6 - nTime5) * 0.001, nTimePostConnect * 0.000001);\n+    LogPrint(\"bench\", \"- Connect block: %.2fms [%.2fs]\\n\", (nTime6 - nTime1) * 0.001, nTimeTotal * 0.000001);\n     return true;\n }\n "
      },
      {
        "sha": "48ec86f6a892c030782a87b27dfbdb0850156edb",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d70bc52ee31b8c4c87ee011625e7031c2dc89c0c/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d70bc52ee31b8c4c87ee011625e7031c2dc89c0c/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=d70bc52ee31b8c4c87ee011625e7031c2dc89c0c",
        "patch": "@@ -91,7 +91,6 @@ extern CWaitableCriticalSection csBestBlock;\n extern CConditionVariable cvBlockChange;\n extern bool fImporting;\n extern bool fReindex;\n-extern bool fBenchmark;\n extern int nScriptCheckThreads;\n extern bool fTxIndex;\n extern bool fIsBareMultisigStd;"
      }
    ]
  }
]