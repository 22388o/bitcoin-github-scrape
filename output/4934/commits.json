[
  {
    "sha": "7669b6ec13925f3cb0f8902b92c3a7fd9278b014",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NjY5YjZlYzEzOTI1ZjNjYjBmODkwMmI5MmMzYTdmZDkyNzhiMDE0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-09-17T04:33:08Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-09-17T05:15:29Z"
      },
      "message": "script: break out destination functionality",
      "tree": {
        "sha": "507615b7ae04e7cb9b1be96cd98e40cda20fde64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/507615b7ae04e7cb9b1be96cd98e40cda20fde64"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7669b6ec13925f3cb0f8902b92c3a7fd9278b014",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7669b6ec13925f3cb0f8902b92c3a7fd9278b014",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7669b6ec13925f3cb0f8902b92c3a7fd9278b014",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7669b6ec13925f3cb0f8902b92c3a7fd9278b014/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab3834baae2e48708de2be74217eaf9da9081fc3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab3834baae2e48708de2be74217eaf9da9081fc3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab3834baae2e48708de2be74217eaf9da9081fc3"
      }
    ],
    "stats": {
      "total": 86,
      "additions": 86,
      "deletions": 0
    },
    "files": [
      {
        "sha": "92ceab511d2634eade812ef1e2681e08db248d6f",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7669b6ec13925f3cb0f8902b92c3a7fd9278b014/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7669b6ec13925f3cb0f8902b92c3a7fd9278b014/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=7669b6ec13925f3cb0f8902b92c3a7fd9278b014",
        "patch": "@@ -99,6 +99,7 @@ BITCOIN_CORE_H = \\\n   rpcprotocol.h \\\n   rpcserver.h \\\n   script/compressor.h \\\n+  script/destination.h \\\n   script/interpreter.h \\\n   script/script.h \\\n   script/sign.h \\\n@@ -213,6 +214,7 @@ libbitcoin_common_a_SOURCES = \\\n   netbase.cpp \\\n   protocol.cpp \\\n   script/compressor.cpp \\\n+  script/destination.cpp \\\n   script/interpreter.cpp \\\n   script/script.cpp \\\n   script/sign.cpp \\"
      },
      {
        "sha": "08e1bc65d03aae44f633bc1a7c2b05df081a5d4e",
        "filename": "src/script/destination.cpp",
        "status": "added",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7669b6ec13925f3cb0f8902b92c3a7fd9278b014/src/script/destination.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7669b6ec13925f3cb0f8902b92c3a7fd9278b014/src/script/destination.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/destination.cpp?ref=7669b6ec13925f3cb0f8902b92c3a7fd9278b014",
        "patch": "@@ -0,0 +1,47 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"script/destination.h\"\n+\n+#include \"script/script.h\"\n+#include \"key.h\"\n+\n+bool ScriptDestinationVisitor::operator()(const CNoDestination &dest) const\n+{\n+    SetScriptDestination(m_script, dest);\n+    return false;\n+}\n+\n+bool ScriptDestinationVisitor::operator()(const CKeyID &keyID) const\n+{\n+    SetScriptDestination(m_script, keyID);\n+    return true;\n+}\n+\n+bool ScriptDestinationVisitor::operator()(const CScriptID &scriptID) const\n+{\n+    SetScriptDestination(m_script, scriptID);\n+    return true;\n+}\n+\n+void SetScriptDestination(CScript& script, const CNoDestination& dest)\n+{\n+    script.SetDestinationNone();\n+}\n+\n+void SetScriptDestination(CScript& script, const CKeyID& keyID)\n+{\n+    script.SetDestinationKeyID(keyID);\n+}\n+\n+void SetScriptDestination(CScript& script, const CScriptID& scriptID)\n+{\n+    script.SetDestinationScriptID(scriptID);\n+}\n+\n+bool SetScriptDestination(CScript& script, const CTxDestination& dest)\n+{\n+    return boost::apply_visitor(ScriptDestinationVisitor(script), dest);\n+}"
      },
      {
        "sha": "aeba52ad4c9d45a7b0b8a5814320e1806c24db6d",
        "filename": "src/script/destination.h",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7669b6ec13925f3cb0f8902b92c3a7fd9278b014/src/script/destination.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7669b6ec13925f3cb0f8902b92c3a7fd9278b014/src/script/destination.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/destination.h?ref=7669b6ec13925f3cb0f8902b92c3a7fd9278b014",
        "patch": "@@ -0,0 +1,37 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef H_BITCOIN_SCRIPT_DESTINATION\n+#define H_BITCOIN_SCRIPT_DESTINATION\n+#include \"key.h\"\n+#include <boost/variant.hpp>\n+\n+class CScript;\n+\n+class CNoDestination {\n+public:\n+    friend bool operator==(const CNoDestination &a, const CNoDestination &b) { return true; }\n+    friend bool operator<(const CNoDestination &a, const CNoDestination &b) { return true; }\n+};\n+\n+class ScriptDestinationVisitor : public boost::static_visitor<bool>\n+{\n+private:\n+    CScript& m_script;\n+public:\n+    ScriptDestinationVisitor(CScript& script) : m_script(script) {}\n+    bool operator()(const CNoDestination &dest) const;\n+    bool operator()(const CKeyID &keyID) const;\n+    bool operator()(const CScriptID &scriptID) const;\n+};\n+\n+typedef boost::variant<CNoDestination, CKeyID, CScriptID> CTxDestination;\n+\n+\n+bool SetScriptDestination(CScript& script, const CTxDestination& dest);\n+void SetScriptDestination(CScript& script, const CKeyID& keyID);\n+void SetScriptDestination(CScript& script, const CScriptID& scriptID);\n+void SetScriptDestination(CScript& script, const CNoDestination& dest);\n+#endif"
      }
    ]
  },
  {
    "sha": "70654d710bc604acbe32345a925ba26d70e2f601",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MDY1NGQ3MTBiYzYwNGFjYmUzMjM0NWE5MjViYTI2ZDcwZTJmNjAx",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-09-17T04:34:32Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-09-17T05:17:13Z"
      },
      "message": "script: Hook up new destination functions",
      "tree": {
        "sha": "bc64f8c6309e4f24cdb4f16bd2ce65387ad6cad0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc64f8c6309e4f24cdb4f16bd2ce65387ad6cad0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70654d710bc604acbe32345a925ba26d70e2f601",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70654d710bc604acbe32345a925ba26d70e2f601",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/70654d710bc604acbe32345a925ba26d70e2f601",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70654d710bc604acbe32345a925ba26d70e2f601/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7669b6ec13925f3cb0f8902b92c3a7fd9278b014",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7669b6ec13925f3cb0f8902b92c3a7fd9278b014",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7669b6ec13925f3cb0f8902b92c3a7fd9278b014"
      }
    ],
    "stats": {
      "total": 144,
      "additions": 64,
      "deletions": 80
    },
    "files": [
      {
        "sha": "a142e0d0284cd0bb92744e8bef2f48f902de8f14",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -16,7 +16,7 @@\n \n #include \"chainparams.h\"\n #include \"key.h\"\n-#include \"script/script.h\"\n+#include \"script/destination.h\"\n \n #include <string>\n #include <vector>"
      },
      {
        "sha": "9a0e1bce487b8f6d3655e2249e745659ce1e7fcc",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -224,9 +224,9 @@ static void MutateTxAddOutAddr(CMutableTransaction& tx, const string& strInput)\n     if (!addr.IsValid())\n         throw runtime_error(\"invalid TX output address\");\n \n-    // build standard output script via SetDestination()\n+    // build standard output script via SetScriptDestination()\n     CScript scriptPubKey;\n-    scriptPubKey.SetDestination(addr.Get());\n+    SetScriptDestination(scriptPubKey, addr.Get());\n \n     // construct TxOut, append to transaction output list\n     CTxOut txout(value, scriptPubKey);"
      },
      {
        "sha": "e53e278c9945159767fdb078c7db87555076c12f",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -222,7 +222,7 @@ QString formatBitcoinURI(const SendCoinsRecipient &info)\n bool isDust(const QString& address, qint64 amount)\n {\n     CTxDestination dest = CBitcoinAddress(address.toStdString()).Get();\n-    CScript script; script.SetDestination(dest);\n+    CScript script; SetScriptDestination(script, dest);\n     CTxOut txOut(amount, script);\n     return txOut.IsDust(::minRelayTxFee);\n }"
      },
      {
        "sha": "146cd951afeda3f1248da610f27710286895530e",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -609,7 +609,7 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n     std::string strAccount = account.toStdString();\n     set<CTxDestination> refundAddresses = wallet->GetAccountAddresses(strAccount);\n     if (!refundAddresses.empty()) {\n-        CScript s; s.SetDestination(*refundAddresses.begin());\n+        CScript s; SetScriptDestination(s, *refundAddresses.begin());\n         payments::Output* refund_to = payment.add_refund_to();\n         refund_to->set_script(&s[0], s.size());\n     }\n@@ -620,7 +620,7 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n             CKeyID keyID = newKey.GetID();\n             wallet->SetAddressBook(keyID, strAccount, \"refund\");\n \n-            CScript s; s.SetDestination(keyID);\n+            CScript s; SetScriptDestination(s, keyID);\n             payments::Output* refund_to = payment.add_refund_to();\n             refund_to->set_script(&s[0], s.size());\n         }"
      },
      {
        "sha": "64708671d893ec8063d5eaf3c9db9357019b957c",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -242,7 +242,7 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n             ++nAddresses;\n \n             CScript scriptPubKey;\n-            scriptPubKey.SetDestination(CBitcoinAddress(rcp.address.toStdString()).Get());\n+            SetScriptDestination(scriptPubKey, CBitcoinAddress(rcp.address.toStdString()).Get());\n             vecSend.push_back(std::pair<CScript, int64_t>(scriptPubKey, rcp.amount));\n \n             total += rcp.amount;"
      },
      {
        "sha": "1d49c46ada24e88549ddcd6643a9d78213b58bc8",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -161,7 +161,7 @@ Value importaddress(const Array& params, bool fHelp)\n \n     CBitcoinAddress address(params[0].get_str());\n     if (address.IsValid()) {\n-        script.SetDestination(address.Get());\n+        SetScriptDestination(script, address.Get());\n     } else if (IsHex(params[0].get_str())) {\n         std::vector<unsigned char> data(ParseHex(params[0].get_str()));\n         script = CScript(data.begin(), data.end());"
      },
      {
        "sha": "e3120845f13d69d9075a715d3cc32d40aa47e767",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -367,7 +367,7 @@ Value createrawtransaction(const Array& params, bool fHelp)\n         setAddress.insert(address);\n \n         CScript scriptPubKey;\n-        scriptPubKey.SetDestination(address.Get());\n+        SetScriptDestination(scriptPubKey, address.Get());\n         int64_t nAmount = AmountFromValue(s.value_);\n \n         CTxOut out(nAmount, scriptPubKey);"
      },
      {
        "sha": "63f3e1b2394ea2850e014f999293a29753250cf9",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -125,7 +125,7 @@ CBitcoinAddress GetAccountAddress(string strAccount, bool bForceNew=false)\n     if (account.vchPubKey.IsValid())\n     {\n         CScript scriptPubKey;\n-        scriptPubKey.SetDestination(account.vchPubKey.GetID());\n+        SetScriptDestination(scriptPubKey, account.vchPubKey.GetID());\n         for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin();\n              it != pwalletMain->mapWallet.end() && account.vchPubKey.IsValid();\n              ++it)\n@@ -475,7 +475,7 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n     CScript scriptPubKey;\n     if (!address.IsValid())\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n-    scriptPubKey.SetDestination(address.Get());\n+    SetScriptDestination(scriptPubKey, address.Get());\n     if (!IsMine(*pwalletMain,scriptPubKey))\n         return (double)0.0;\n \n@@ -850,7 +850,7 @@ Value sendmany(const Array& params, bool fHelp)\n         setAddress.insert(address);\n \n         CScript scriptPubKey;\n-        scriptPubKey.SetDestination(address.Get());\n+        SetScriptDestination(scriptPubKey, address.Get());\n         int64_t nAmount = AmountFromValue(s.value_);\n         totalAmount += nAmount;\n "
      },
      {
        "sha": "3f19141c34daf90f83a92e1495a00b7fad790134",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 24,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -254,34 +254,21 @@ bool CScript::HasCanonicalPushes() const\n     return true;\n }\n \n-class CScriptVisitor : public boost::static_visitor<bool>\n+void CScript::SetDestinationNone()\n {\n-private:\n-    CScript *script;\n-public:\n-    CScriptVisitor(CScript *scriptin) { script = scriptin; }\n-\n-    bool operator()(const CNoDestination &dest) const {\n-        script->clear();\n-        return false;\n-    }\n-\n-    bool operator()(const CKeyID &keyID) const {\n-        script->clear();\n-        *script << OP_DUP << OP_HASH160 << keyID << OP_EQUALVERIFY << OP_CHECKSIG;\n-        return true;\n-    }\n+    clear();\n+}\n \n-    bool operator()(const CScriptID &scriptID) const {\n-        script->clear();\n-        *script << OP_HASH160 << scriptID << OP_EQUAL;\n-        return true;\n-    }\n-};\n+void CScript::SetDestinationKeyID(const CKeyID& keyID)\n+{\n+    clear();\n+    *this << OP_DUP << OP_HASH160 << keyID << OP_EQUALVERIFY << OP_CHECKSIG;\n+}\n \n-void CScript::SetDestination(const CTxDestination& dest)\n+void CScript::SetDestinationScriptID(const CScriptID& scriptID)\n {\n-    boost::apply_visitor(CScriptVisitor(this), dest);\n+    clear();\n+    *this << OP_HASH160 << scriptID << OP_EQUAL;\n }\n \n void CScript::SetMultisig(int nRequired, const std::vector<CPubKey>& keys)"
      },
      {
        "sha": "ff5e4ce71ed5a787f6c6c07a99e43e03527f7e24",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 5,
        "deletions": 10,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -12,10 +12,9 @@\n \n #include <stdexcept>\n \n-#include <boost/variant.hpp>\n-\n static const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520; // bytes\n \n+class CNoDestination;\n /** Script opcodes */\n enum opcodetype\n {\n@@ -320,19 +319,12 @@ inline std::string ValueString(const std::vector<unsigned char>& vch)\n         return HexStr(vch);\n }\n \n-class CNoDestination {\n-public:\n-    friend bool operator==(const CNoDestination &a, const CNoDestination &b) { return true; }\n-    friend bool operator<(const CNoDestination &a, const CNoDestination &b) { return true; }\n-};\n-\n /** A txout script template with a specific destination. It is either:\n  *  * CNoDestination: no destination set\n  *  * CKeyID: TX_PUBKEYHASH destination\n  *  * CScriptID: TX_SCRIPTHASH destination\n  *  A CTxDestination is the internal data type encoded in a CBitcoinAddress\n  */\n-typedef boost::variant<CNoDestination, CKeyID, CScriptID> CTxDestination;\n \n /** Serialized script, used inside transaction inputs and outputs */\n class CScript : public std::vector<unsigned char>\n@@ -604,7 +596,10 @@ class CScript : public std::vector<unsigned char>\n         return (size() > 0 && *begin() == OP_RETURN);\n     }\n \n-    void SetDestination(const CTxDestination& address);\n+    void SetDestinationNone();\n+    void SetDestinationKeyID(const CKeyID& keyID);\n+    void SetDestinationScriptID(const CScriptID& scriptID);\n+\n     void SetMultisig(int nRequired, const std::vector<CPubKey>& keys);\n \n     std::string ToString() const"
      },
      {
        "sha": "637bf0f0f20504711692c7b190b9b9b21725d141",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -6,7 +6,7 @@\n #ifndef H_BITCOIN_SCRIPT_STANDARD\n #define H_BITCOIN_SCRIPT_STANDARD\n \n-#include \"script/script.h\"\n+#include \"script/destination.h\"\n #include \"script/interpreter.h\"\n \n #include <stdint.h>"
      },
      {
        "sha": "90ed180f1d61b95ed1ff99a8991c7b9f295219bb",
        "filename": "src/test/DoS_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/test/DoS_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/test/DoS_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/DoS_tests.cpp?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -173,8 +173,8 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n         tx.vin[0].scriptSig << OP_1;\n         tx.vout.resize(1);\n         tx.vout[0].nValue = 1*CENT;\n-        tx.vout[0].scriptPubKey.SetDestination(key.GetPubKey().GetID());\n \n+        SetScriptDestination(tx.vout[0].scriptPubKey, key.GetPubKey().GetID());\n         AddOrphanTx(tx, i);\n     }\n \n@@ -189,7 +189,7 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n         tx.vin[0].prevout.hash = txPrev.GetHash();\n         tx.vout.resize(1);\n         tx.vout[0].nValue = 1*CENT;\n-        tx.vout[0].scriptPubKey.SetDestination(key.GetPubKey().GetID());\n+        SetScriptDestination(tx.vout[0].scriptPubKey,key.GetPubKey().GetID());\n         SignSignature(keystore, txPrev, tx, 0);\n \n         AddOrphanTx(tx, i);\n@@ -203,7 +203,7 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n         CMutableTransaction tx;\n         tx.vout.resize(1);\n         tx.vout[0].nValue = 1*CENT;\n-        tx.vout[0].scriptPubKey.SetDestination(key.GetPubKey().GetID());\n+        SetScriptDestination(tx.vout[0].scriptPubKey,key.GetPubKey().GetID());\n         tx.vin.resize(500);\n         for (unsigned int j = 0; j < tx.vin.size(); j++)\n         {"
      },
      {
        "sha": "7fd7abe280524863e112453b0fc4d1f1d5581cd4",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -170,7 +170,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vin[0].scriptSig = CScript() << OP_1;\n     tx.vout[0].nValue = 4900000000LL;\n     script = CScript() << OP_0;\n-    tx.vout[0].scriptPubKey.SetDestination(script.GetID());\n+    SetScriptDestination(tx.vout[0].scriptPubKey,script.GetID());\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, CTxMemPoolEntry(tx, 11, GetTime(), 111.0, 11));\n     tx.vin[0].prevout.hash = hash;"
      },
      {
        "sha": "2eb0f3af3167733daf878aec40f46df677d08000",
        "filename": "src/test/script_P2SH_tests.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/test/script_P2SH_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/test/script_P2SH_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_P2SH_tests.cpp?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -68,14 +68,14 @@ BOOST_AUTO_TEST_CASE(sign)\n     // different keys, straight/P2SH, pubkey/pubkeyhash\n     CScript standardScripts[4];\n     standardScripts[0] << key[0].GetPubKey() << OP_CHECKSIG;\n-    standardScripts[1].SetDestination(key[1].GetPubKey().GetID());\n+    SetScriptDestination(standardScripts[1], key[1].GetPubKey().GetID());\n     standardScripts[2] << key[1].GetPubKey() << OP_CHECKSIG;\n-    standardScripts[3].SetDestination(key[2].GetPubKey().GetID());\n+    SetScriptDestination(standardScripts[3], key[2].GetPubKey().GetID());\n     CScript evalScripts[4];\n     for (int i = 0; i < 4; i++)\n     {\n         keystore.AddCScript(standardScripts[i]);\n-        evalScripts[i].SetDestination(standardScripts[i].GetID());\n+        SetScriptDestination(evalScripts[i], standardScripts[i].GetID());\n     }\n \n     CMutableTransaction txFrom;  // Funding transaction:\n@@ -130,7 +130,7 @@ BOOST_AUTO_TEST_CASE(norecurse)\n     invalidAsScript << OP_INVALIDOPCODE << OP_INVALIDOPCODE;\n \n     CScript p2sh;\n-    p2sh.SetDestination(invalidAsScript.GetID());\n+    SetScriptDestination(p2sh, invalidAsScript.GetID());\n \n     CScript scriptSig;\n     scriptSig << Serialize(invalidAsScript);\n@@ -141,7 +141,7 @@ BOOST_AUTO_TEST_CASE(norecurse)\n     // Try to recur, and verification should succeed because\n     // the inner HASH160 <> EQUAL should only check the hash:\n     CScript p2sh2;\n-    p2sh2.SetDestination(p2sh.GetID());\n+    SetScriptDestination(p2sh2, p2sh.GetID());\n     CScript scriptSig2;\n     scriptSig2 << Serialize(invalidAsScript) << Serialize(p2sh);\n \n@@ -163,15 +163,15 @@ BOOST_AUTO_TEST_CASE(set)\n     }\n \n     CScript inner[4];\n-    inner[0].SetDestination(key[0].GetPubKey().GetID());\n+    SetScriptDestination(inner[0], key[0].GetPubKey().GetID());\n     inner[1].SetMultisig(2, std::vector<CPubKey>(keys.begin(), keys.begin()+2));\n     inner[2].SetMultisig(1, std::vector<CPubKey>(keys.begin(), keys.begin()+2));\n     inner[3].SetMultisig(2, std::vector<CPubKey>(keys.begin(), keys.begin()+3));\n \n     CScript outer[4];\n     for (int i = 0; i < 4; i++)\n     {\n-        outer[i].SetDestination(inner[i].GetID());\n+        SetScriptDestination(outer[i], inner[i].GetID());\n         keystore.AddCScript(inner[i]);\n     }\n \n@@ -245,7 +245,7 @@ BOOST_AUTO_TEST_CASE(switchover)\n     scriptSig << Serialize(notValid);\n \n     CScript fund;\n-    fund.SetDestination(notValid.GetID());\n+    SetScriptDestination(fund, notValid.GetID());\n \n \n     // Validation should succeed under old rules (hash is correct):\n@@ -274,11 +274,11 @@ BOOST_AUTO_TEST_CASE(AreInputsStandard)\n     txFrom.vout.resize(7);\n \n     // First three are standard:\n-    CScript pay1; pay1.SetDestination(key[0].GetPubKey().GetID());\n+    CScript pay1; SetScriptDestination(pay1, key[0].GetPubKey().GetID());\n     keystore.AddCScript(pay1);\n     CScript pay1of3; pay1of3.SetMultisig(1, keys);\n \n-    txFrom.vout[0].scriptPubKey.SetDestination(pay1.GetID()); // P2SH (OP_CHECKSIG)\n+    SetScriptDestination(txFrom.vout[0].scriptPubKey, pay1.GetID()); // P2SH (OP_CHECKSIG)\n     txFrom.vout[0].nValue = 1000;\n     txFrom.vout[1].scriptPubKey = pay1; // ordinary OP_CHECKSIG\n     txFrom.vout[1].nValue = 2000;\n@@ -293,7 +293,7 @@ BOOST_AUTO_TEST_CASE(AreInputsStandard)\n     oneAndTwo << OP_2 << key[3].GetPubKey() << key[4].GetPubKey() << key[5].GetPubKey();\n     oneAndTwo << OP_3 << OP_CHECKMULTISIG;\n     keystore.AddCScript(oneAndTwo);\n-    txFrom.vout[3].scriptPubKey.SetDestination(oneAndTwo.GetID());\n+    SetScriptDestination(txFrom.vout[3].scriptPubKey, oneAndTwo.GetID());\n     txFrom.vout[3].nValue = 4000;\n \n     // vout[4] is max sigops:\n@@ -302,25 +302,25 @@ BOOST_AUTO_TEST_CASE(AreInputsStandard)\n         fifteenSigops << key[i%3].GetPubKey();\n     fifteenSigops << OP_15 << OP_CHECKMULTISIG;\n     keystore.AddCScript(fifteenSigops);\n-    txFrom.vout[4].scriptPubKey.SetDestination(fifteenSigops.GetID());\n+    SetScriptDestination(txFrom.vout[4].scriptPubKey, fifteenSigops.GetID());\n     txFrom.vout[4].nValue = 5000;\n \n     // vout[5/6] are non-standard because they exceed MAX_P2SH_SIGOPS\n     CScript sixteenSigops; sixteenSigops << OP_16 << OP_CHECKMULTISIG;\n     keystore.AddCScript(sixteenSigops);\n-    txFrom.vout[5].scriptPubKey.SetDestination(fifteenSigops.GetID());\n+    SetScriptDestination(txFrom.vout[5].scriptPubKey, fifteenSigops.GetID());\n     txFrom.vout[5].nValue = 5000;\n     CScript twentySigops; twentySigops << OP_CHECKMULTISIG;\n     keystore.AddCScript(twentySigops);\n-    txFrom.vout[6].scriptPubKey.SetDestination(twentySigops.GetID());\n+    SetScriptDestination(txFrom.vout[6].scriptPubKey, twentySigops.GetID());\n     txFrom.vout[6].nValue = 6000;\n \n \n     coins.SetCoins(txFrom.GetHash(), CCoins(txFrom, 0));\n \n     CMutableTransaction txTo;\n     txTo.vout.resize(1);\n-    txTo.vout[0].scriptPubKey.SetDestination(key[1].GetPubKey().GetID());\n+    SetScriptDestination(txTo.vout[0].scriptPubKey, key[1].GetPubKey().GetID());\n \n     txTo.vin.resize(5);\n     for (int i = 0; i < 5; i++)\n@@ -352,7 +352,7 @@ BOOST_AUTO_TEST_CASE(AreInputsStandard)\n \n     CMutableTransaction txToNonStd1;\n     txToNonStd1.vout.resize(1);\n-    txToNonStd1.vout[0].scriptPubKey.SetDestination(key[1].GetPubKey().GetID());\n+    SetScriptDestination(txToNonStd1.vout[0].scriptPubKey, key[1].GetPubKey().GetID());\n     txToNonStd1.vout[0].nValue = 1000;\n     txToNonStd1.vin.resize(1);\n     txToNonStd1.vin[0].prevout.n = 5;\n@@ -364,7 +364,7 @@ BOOST_AUTO_TEST_CASE(AreInputsStandard)\n \n     CMutableTransaction txToNonStd2;\n     txToNonStd2.vout.resize(1);\n-    txToNonStd2.vout[0].scriptPubKey.SetDestination(key[1].GetPubKey().GetID());\n+    SetScriptDestination(txToNonStd2.vout[0].scriptPubKey, key[1].GetPubKey().GetID());\n     txToNonStd2.vout[0].nValue = 1000;\n     txToNonStd2.vin.resize(1);\n     txToNonStd2.vin[0].prevout.n = 6;"
      },
      {
        "sha": "a5ff03e5d70a91bb1e9aaf6f430cf082db10d296",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -280,7 +280,7 @@ BOOST_AUTO_TEST_CASE(script_combineSigs)\n \n     CMutableTransaction txFrom;\n     txFrom.vout.resize(1);\n-    txFrom.vout[0].scriptPubKey.SetDestination(keys[0].GetPubKey().GetID());\n+    SetScriptDestination(txFrom.vout[0].scriptPubKey, keys[0].GetPubKey().GetID());\n     CScript& scriptPubKey = txFrom.vout[0].scriptPubKey;\n     CMutableTransaction txTo;\n     txTo.vin.resize(1);\n@@ -309,7 +309,7 @@ BOOST_AUTO_TEST_CASE(script_combineSigs)\n     // P2SH, single-signature case:\n     CScript pkSingle; pkSingle << keys[0].GetPubKey() << OP_CHECKSIG;\n     keystore.AddCScript(pkSingle);\n-    scriptPubKey.SetDestination(pkSingle.GetID());\n+    SetScriptDestination(scriptPubKey, pkSingle.GetID());\n     SignSignature(keystore, txFrom, txTo, 0);\n     combined = CombineSignatures(scriptPubKey, txTo, 0, scriptSig, empty);\n     BOOST_CHECK(combined == scriptSig);"
      },
      {
        "sha": "9f493fef04524eb61c84f0d88b5623a881bbe2cd",
        "filename": "src/test/sigopcount_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/test/sigopcount_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/test/sigopcount_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sigopcount_tests.cpp?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -4,6 +4,7 @@\n \n #include \"key.h\"\n #include \"script/script.h\"\n+#include \"script/destination.h\"\n #include \"uint256.h\"\n \n #include <vector>\n@@ -38,7 +39,7 @@ BOOST_AUTO_TEST_CASE(GetSigOpCount)\n     BOOST_CHECK_EQUAL(s1.GetSigOpCount(false), 21U);\n \n     CScript p2sh;\n-    p2sh.SetDestination(s1.GetID());\n+    SetScriptDestination(p2sh,s1.GetID());\n     CScript scriptSig;\n     scriptSig << OP_0 << Serialize(s1);\n     BOOST_CHECK_EQUAL(p2sh.GetSigOpCount(scriptSig), 3U);\n@@ -55,7 +56,7 @@ BOOST_AUTO_TEST_CASE(GetSigOpCount)\n     BOOST_CHECK_EQUAL(s2.GetSigOpCount(true), 3U);\n     BOOST_CHECK_EQUAL(s2.GetSigOpCount(false), 20U);\n \n-    p2sh.SetDestination(s2.GetID());\n+    SetScriptDestination(p2sh,s2.GetID());\n     BOOST_CHECK_EQUAL(p2sh.GetSigOpCount(true), 0U);\n     BOOST_CHECK_EQUAL(p2sh.GetSigOpCount(false), 0U);\n     CScript scriptSig2;"
      },
      {
        "sha": "3596631e7b2f77d9c8fcbfb4a06bdf2e46b56d05",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -248,9 +248,9 @@ SetupDummyInputs(CBasicKeyStore& keystoreRet, CCoinsView & coinsRet)\n \n     dummyTransactions[1].vout.resize(2);\n     dummyTransactions[1].vout[0].nValue = 21*CENT;\n-    dummyTransactions[1].vout[0].scriptPubKey.SetDestination(key[2].GetPubKey().GetID());\n+    SetScriptDestination(dummyTransactions[1].vout[0].scriptPubKey, key[2].GetPubKey().GetID());\n     dummyTransactions[1].vout[1].nValue = 22*CENT;\n-    dummyTransactions[1].vout[1].scriptPubKey.SetDestination(key[3].GetPubKey().GetID());\n+    SetScriptDestination(dummyTransactions[1].vout[1].scriptPubKey, key[3].GetPubKey().GetID());\n     coinsRet.SetCoins(dummyTransactions[1].GetHash(), CCoins(dummyTransactions[1], 0));\n \n     return dummyTransactions;\n@@ -307,7 +307,7 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     t.vout[0].nValue = 90*CENT;\n     CKey key;\n     key.MakeNewKey(true);\n-    t.vout[0].scriptPubKey.SetDestination(key.GetPubKey().GetID());\n+    SetScriptDestination(t.vout[0].scriptPubKey, key.GetPubKey().GetID());\n \n     string reason;\n     BOOST_CHECK(IsStandardTx(t, reason));"
      },
      {
        "sha": "a6531003403ee70a22d083efd40a527fee2cd73b",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -1385,7 +1385,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64_t> >& vecSend,\n \n                     // coin control: send change to custom address\n                     if (coinControl && !boost::get<CNoDestination>(&coinControl->destChange))\n-                        scriptChange.SetDestination(coinControl->destChange);\n+                        SetScriptDestination(scriptChange, coinControl->destChange);\n \n                     // no coin control: send change to newly generated address\n                     else\n@@ -1403,7 +1403,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64_t> >& vecSend,\n                         ret = reservekey.GetReservedKey(vchPubKey);\n                         assert(ret); // should never fail, as we just unlocked\n \n-                        scriptChange.SetDestination(vchPubKey.GetID());\n+                        SetScriptDestination(scriptChange,vchPubKey.GetID());\n                     }\n \n                     CTxOut newTxOut(nChange, scriptChange);\n@@ -1557,7 +1557,7 @@ string CWallet::SendMoney(const CTxDestination &address, int64_t nValue, CWallet\n \n     // Parse Bitcoin address\n     CScript scriptPubKey;\n-    scriptPubKey.SetDestination(address);\n+    SetScriptDestination(scriptPubKey, address);\n \n     // Create and send the transaction\n     CReserveKey reservekey(this);"
      },
      {
        "sha": "02e98b013d538f907bd4b69f2d86887128104781",
        "filename": "src/wallet_ismine.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/wallet_ismine.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/wallet_ismine.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet_ismine.cpp?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -7,6 +7,7 @@\n \n #include \"key.h\"\n #include \"keystore.h\"\n+#include \"script/script.h\"\n #include \"script/standard.h\"\n \n #include <boost/foreach.hpp>\n@@ -30,7 +31,7 @@ unsigned int HaveKeys(const vector<valtype>& pubkeys, const CKeyStore& keystore)\n isminetype IsMine(const CKeyStore &keystore, const CTxDestination& dest)\n {\n     CScript script;\n-    script.SetDestination(dest);\n+    SetScriptDestination(script, dest);\n     return IsMine(keystore, script);\n }\n "
      },
      {
        "sha": "5198f7684b388db5d17d867d1b4d94169d206c77",
        "filename": "src/wallet_ismine.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70654d710bc604acbe32345a925ba26d70e2f601/src/wallet_ismine.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70654d710bc604acbe32345a925ba26d70e2f601/src/wallet_ismine.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet_ismine.h?ref=70654d710bc604acbe32345a925ba26d70e2f601",
        "patch": "@@ -7,7 +7,7 @@\n #define H_BITCOIN_WALLET_ISMINE\n \n #include \"key.h\"\n-#include \"script/script.h\"\n+#include \"script/destination.h\"\n \n class CKeyStore;\n "
      }
    ]
  },
  {
    "sha": "bed34efe865fde80e7b0db1b4419c9d55fe66341",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZWQzNGVmZTg2NWZkZTgwZTdiMGRiMWI0NDE5YzlkNTVmZTY2MzQx",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-09-17T04:29:17Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-09-17T05:18:04Z"
      },
      "message": "script: Use bare vectors here rather than core classes",
      "tree": {
        "sha": "6dc44216f98f45a0af947f6af47448010367b91f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6dc44216f98f45a0af947f6af47448010367b91f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bed34efe865fde80e7b0db1b4419c9d55fe66341",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bed34efe865fde80e7b0db1b4419c9d55fe66341",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bed34efe865fde80e7b0db1b4419c9d55fe66341",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bed34efe865fde80e7b0db1b4419c9d55fe66341/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "70654d710bc604acbe32345a925ba26d70e2f601",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70654d710bc604acbe32345a925ba26d70e2f601",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/70654d710bc604acbe32345a925ba26d70e2f601"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 16,
      "deletions": 8
    },
    "files": [
      {
        "sha": "146130b439d44712a3c5d941c00984fc47897f18",
        "filename": "src/script/destination.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bed34efe865fde80e7b0db1b4419c9d55fe66341/src/script/destination.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bed34efe865fde80e7b0db1b4419c9d55fe66341/src/script/destination.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/destination.cpp?ref=bed34efe865fde80e7b0db1b4419c9d55fe66341",
        "patch": "@@ -33,12 +33,14 @@ void SetScriptDestination(CScript& script, const CNoDestination& dest)\n \n void SetScriptDestination(CScript& script, const CKeyID& keyID)\n {\n-    script.SetDestinationKeyID(keyID);\n+    std::vector<unsigned char> vch(keyID.begin(), keyID.end());\n+    script.SetDestinationKeyID(vch);\n }\n \n void SetScriptDestination(CScript& script, const CScriptID& scriptID)\n {\n-    script.SetDestinationScriptID(scriptID);\n+    std::vector<unsigned char> vch(scriptID.begin(), scriptID.end());\n+    script.SetDestinationScriptID(vch);\n }\n \n bool SetScriptDestination(CScript& script, const CTxDestination& dest)"
      },
      {
        "sha": "d3bc62658c3be917790fbebe1774ca519ad21300",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bed34efe865fde80e7b0db1b4419c9d55fe66341/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bed34efe865fde80e7b0db1b4419c9d55fe66341/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=bed34efe865fde80e7b0db1b4419c9d55fe66341",
        "patch": "@@ -259,16 +259,22 @@ void CScript::SetDestinationNone()\n     clear();\n }\n \n-void CScript::SetDestinationKeyID(const CKeyID& keyID)\n+void CScript::SetDestinationKeyID(const std::vector<unsigned char>& keyID)\n {\n     clear();\n-    *this << OP_DUP << OP_HASH160 << keyID << OP_EQUALVERIFY << OP_CHECKSIG;\n+    *this << OP_DUP << OP_HASH160;\n+    insert(end(), keyID.size());\n+    insert(end(), keyID.begin(), keyID.end());\n+    *this << OP_EQUALVERIFY << OP_CHECKSIG;\n }\n \n-void CScript::SetDestinationScriptID(const CScriptID& scriptID)\n+void CScript::SetDestinationScriptID(const std::vector<unsigned char>& scriptID)\n {\n     clear();\n-    *this << OP_HASH160 << scriptID << OP_EQUAL;\n+    *this << OP_HASH160;\n+    insert(end(), scriptID.size());\n+    insert(end(), scriptID.begin(), scriptID.end());\n+    *this << OP_EQUAL;\n }\n \n void CScript::SetMultisig(int nRequired, const std::vector<CPubKey>& keys)"
      },
      {
        "sha": "6d30e5fc2a3ed5ba2034ed4531f6259bdd4031c7",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bed34efe865fde80e7b0db1b4419c9d55fe66341/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bed34efe865fde80e7b0db1b4419c9d55fe66341/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=bed34efe865fde80e7b0db1b4419c9d55fe66341",
        "patch": "@@ -597,8 +597,8 @@ class CScript : public std::vector<unsigned char>\n     }\n \n     void SetDestinationNone();\n-    void SetDestinationKeyID(const CKeyID& keyID);\n-    void SetDestinationScriptID(const CScriptID& scriptID);\n+    void SetDestinationKeyID(const std::vector<unsigned char>& keyID);\n+    void SetDestinationScriptID(const std::vector<unsigned char>& ScriptID);\n \n     void SetMultisig(int nRequired, const std::vector<CPubKey>& keys);\n "
      }
    ]
  }
]