[
  {
    "sha": "d4ff270b268fa2c9fa696de45c3e1a0277913418",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNGZmMjcwYjI2OGZhMmM5ZmE2OTZkZTQ1YzNlMWEwMjc3OTEzNDE4",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-12-21T10:15:41Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-12-28T09:21:38Z"
      },
      "message": "Allow per network network.conf\n\nThe network.conf is processed in the same way as the bitcoin.conf and it\nis looked for in the data directory, and processed after the\nbitcoin.conf.\n\nFixes #9374",
      "tree": {
        "sha": "635b7103631109ae74fc6336cf4f2e630a1e6b2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/635b7103631109ae74fc6336cf4f2e630a1e6b2c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4ff270b268fa2c9fa696de45c3e1a0277913418",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYY4QiAAoJEJYWlWnKgEH5IQgP/17ySOs50P5agx2t4spQg/+3\nG9iMy5BFR5UA57IAV89pv7mWxNHdo38OBpvnKCMM+imFaiUitvNTet+feq0wfVYf\nmV7W6HE1b85E9K6aXhLoZ5/0QAUmBU5322+zt/Ao/uaRwjIZ9CkQWVnd+3jKUsyr\n3AXO08uHIq7Sy9oRkrhoncYG+OkbLHEuFpPCobQgUJ7Kl9Yl27w7pMXe1lHCcdTF\nmPtHPk14EWblQy24NX+ximm3FJXfxd9ThrQH8REXmRUuKjpiNCJOSYCG/qsAruSj\nRIsbzDyAG/9ooBLKg4rHJiBjmph1PYxRSrdVONnnz08frgY4JcElyYy2sDZ579OD\nrNBLYBv0yC+aejRueLYcLS5kN2oaLVGtqIDpWS12DVUPamK9UNABgaio1RO5yTrz\nOQLabH8sUmrUtZwa/gqyop3hmu46H9FEqMy4YFf1/rc51UJAciVqv2q+5R6i2iqY\n6eOqfyolocQEc4VrgZY6Zuuvs5LfNWdPWQNct+HmRPLSdXg0A7KGp+BpkxmyZkoU\n4vEg6OREMAToPbjkjmxsBxqqGl5gE+zzac1NlZLgq/lsN+ZVP0/fVeTwVAMqpkNM\ndrRwAsillPA/LPaTQJAdZvEeeyw+Tv6+LquMUvTV1xCXoYIlzBNXvR3brI0VoqzN\noJScZBBj32+oN/zs71OI\n=u1N0\n-----END PGP SIGNATURE-----",
        "payload": "tree 635b7103631109ae74fc6336cf4f2e630a1e6b2c\nparent 2db4cbcc437f51f5dac82cc4de46f383b92e6f11\nauthor R E Broadley <rebroad+github@gmail.com> 1482315341 +0700\ncommitter R E Broadley <rebroad+github@gmail.com> 1482916898 +0700\n\nAllow per network network.conf\n\nThe network.conf is processed in the same way as the bitcoin.conf and it\nis looked for in the data directory, and processed after the\nbitcoin.conf.\n\nFixes #9374\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4ff270b268fa2c9fa696de45c3e1a0277913418",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d4ff270b268fa2c9fa696de45c3e1a0277913418",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4ff270b268fa2c9fa696de45c3e1a0277913418/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2db4cbcc437f51f5dac82cc4de46f383b92e6f11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2db4cbcc437f51f5dac82cc4de46f383b92e6f11",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2db4cbcc437f51f5dac82cc4de46f383b92e6f11"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 35,
      "deletions": 7
    },
    "files": [
      {
        "sha": "ba4aab022e3a3157df27a8c31cbbb894d4f05549",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4ff270b268fa2c9fa696de45c3e1a0277913418/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4ff270b268fa2c9fa696de45c3e1a0277913418/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=d4ff270b268fa2c9fa696de45c3e1a0277913418",
        "patch": "@@ -34,6 +34,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageGroup(_(\"Options:\"));\n     strUsage += HelpMessageOpt(\"-?\", _(\"This help message\"));\n     strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), BITCOIN_CONF_FILENAME));\n+    strUsage += HelpMessageOpt(\"-netconf=<file>\", strprintf(_(\"Specify network specific configuration file (default: %s)\"), NETWORK_CONF_FILENAME));\n     strUsage += HelpMessageOpt(\"-datadir=<dir>\", _(\"Specify data directory\"));\n     AppendParamsHelpMessages(strUsage);\n     strUsage += HelpMessageOpt(\"-rpcconnect=<ip>\", strprintf(_(\"Send commands to node running on <ip> (default: %s)\"), DEFAULT_RPCCONNECT));\n@@ -111,6 +112,13 @@ static int AppInitRPC(int argc, char* argv[])\n         fprintf(stderr, \"Error: %s\\n\", e.what());\n         return EXIT_FAILURE;\n     }\n+    // Read the network specific config file\n+    try {\n+        ReadConfigFile(GetArg(\"-netconf\", NETWORK_CONF_FILENAME), true);\n+    } catch (const std::exception& e) {\n+        fprintf(stderr, \"Error reading network config file: %s\\n\", e.what());\n+        return false;\n+    }\n     if (GetBoolArg(\"-rpcssl\", false))\n     {\n         fprintf(stderr, \"Error: SSL mode for RPC (-rpcssl) is no longer supported.\\n\");"
      },
      {
        "sha": "fa4e1acf74deeb5ea99ccea7f89e2bb257ccdfc8",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4ff270b268fa2c9fa696de45c3e1a0277913418/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4ff270b268fa2c9fa696de45c3e1a0277913418/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=d4ff270b268fa2c9fa696de45c3e1a0277913418",
        "patch": "@@ -116,6 +116,13 @@ bool AppInit(int argc, char* argv[])\n             fprintf(stderr, \"Error: %s\\n\", e.what());\n             return false;\n         }\n+        // Read the network specific config file\n+        try {\n+            ReadConfigFile(GetArg(\"-netconf\", NETWORK_CONF_FILENAME), true);\n+        } catch (const std::exception& e) {\n+            fprintf(stderr,\"Error reading network config file: %s\\n\", e.what());\n+            return false;\n+        }\n \n         // Command-line RPC\n         bool fCommandLine = false;"
      },
      {
        "sha": "7310439f19811e68abb3bf28a54ce6e6e3a87ae0",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4ff270b268fa2c9fa696de45c3e1a0277913418/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4ff270b268fa2c9fa696de45c3e1a0277913418/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d4ff270b268fa2c9fa696de45c3e1a0277913418",
        "patch": "@@ -328,6 +328,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-checkblocks=<n>\", strprintf(_(\"How many blocks to check at startup (default: %u, 0 = all)\"), DEFAULT_CHECKBLOCKS));\n     strUsage += HelpMessageOpt(\"-checklevel=<n>\", strprintf(_(\"How thorough the block verification of -checkblocks is (0-4, default: %u)\"), DEFAULT_CHECKLEVEL));\n     strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), BITCOIN_CONF_FILENAME));\n+    strUsage += HelpMessageOpt(\"-netconf=<file>\", strprintf(_(\"Specify network specific configuration file (default: %s)\"), NETWORK_CONF_FILENAME));\n     if (mode == HMM_BITCOIND)\n     {\n #if HAVE_DECL_DAEMON\n@@ -1107,6 +1108,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     LogPrintf(\"Default data directory %s\\n\", GetDefaultDataDir().string());\n     LogPrintf(\"Using data directory %s\\n\", GetDataDir().string());\n     LogPrintf(\"Using config file %s\\n\", GetConfigFile(GetArg(\"-conf\", BITCOIN_CONF_FILENAME)).string());\n+    LogPrintf(\"Using netconf file %s\\n\", GetConfigFile(GetArg(\"-netconf\", NETWORK_CONF_FILENAME), true).string());\n     LogPrintf(\"Using at most %i connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n \n     InitSignatureCache();"
      },
      {
        "sha": "a84516c1a0100edbeb22b1c469131c0c7dc5e4b7",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4ff270b268fa2c9fa696de45c3e1a0277913418/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4ff270b268fa2c9fa696de45c3e1a0277913418/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=d4ff270b268fa2c9fa696de45c3e1a0277913418",
        "patch": "@@ -628,6 +628,13 @@ int main(int argc, char *argv[])\n         QMessageBox::critical(0, QObject::tr(PACKAGE_NAME), QObject::tr(\"Error: %1\").arg(e.what()));\n         return EXIT_FAILURE;\n     }\n+    try {\n+        ReadConfigFile(GetArg(\"-netconf\", NETWORK_CONF_FILENAME), true);\n+    } catch (const std::exception& e) {\n+        QMessageBox::critical(0, QObject::tr(PACKAGE_NAME),\n+                              QObject::tr(\"Error: Cannot parse configuration file: %1. Only use key=value syntax.\").arg(e.what()));\n+        return EXIT_FAILURE;\n+    }\n #ifdef ENABLE_WALLET\n     // Parse URIs on command line -- this can affect Params()\n     PaymentServer::ipcParseCommandLine(argc, argv);"
      },
      {
        "sha": "de0b080ba1e527dba3557b320fdd70fd4c984396",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 5,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4ff270b268fa2c9fa696de45c3e1a0277913418/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4ff270b268fa2c9fa696de45c3e1a0277913418/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=d4ff270b268fa2c9fa696de45c3e1a0277913418",
        "patch": "@@ -100,6 +100,7 @@ namespace boost {\n using namespace std;\n \n const char * const BITCOIN_CONF_FILENAME = \"bitcoin.conf\";\n+const char * const NETWORK_CONF_FILENAME = \"network.conf\";\n const char * const BITCOIN_PID_FILENAME = \"bitcoind.pid\";\n \n CCriticalSection cs_args;\n@@ -543,20 +544,20 @@ void ClearDatadirCache()\n     pathCachedNetSpecific = boost::filesystem::path();\n }\n \n-boost::filesystem::path GetConfigFile(const std::string& confPath)\n+boost::filesystem::path GetConfigFile(const std::string& confPath, const bool fNetSpecific /*=false*/)\n {\n     boost::filesystem::path pathConfigFile(confPath);\n     if (!pathConfigFile.is_complete())\n-        pathConfigFile = GetDataDir(false) / pathConfigFile;\n+        pathConfigFile = GetDataDir(fNetSpecific) / pathConfigFile;\n \n     return pathConfigFile;\n }\n \n-void ReadConfigFile(const std::string& confPath)\n+bool ReadConfigFile(const std::string& confPath, const bool fNetSpecific /*=false*/)\n {\n-    boost::filesystem::ifstream streamConfig(GetConfigFile(confPath));\n+    boost::filesystem::ifstream streamConfig(GetConfigFile(confPath, fNetSpecific));\n     if (!streamConfig.good())\n-        return; // No bitcoin.conf file is OK\n+        return false; // No bitcoin.conf file is OK\n \n     {\n         LOCK(cs_args);\n@@ -576,6 +577,8 @@ void ReadConfigFile(const std::string& confPath)\n     }\n     // If datadir is changed in .conf file:\n     ClearDatadirCache();\n+\n+    return true; // indicate a config file was processed\n }\n \n #ifndef WIN32"
      },
      {
        "sha": "7cf128b930086d0fb35ec65d002809d2d58c546f",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4ff270b268fa2c9fa696de45c3e1a0277913418/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4ff270b268fa2c9fa696de45c3e1a0277913418/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=d4ff270b268fa2c9fa696de45c3e1a0277913418",
        "patch": "@@ -53,6 +53,7 @@ extern std::atomic<bool> fReopenDebugLog;\n extern CTranslationInterface translationInterface;\n \n extern const char * const BITCOIN_CONF_FILENAME;\n+extern const char * const NETWORK_CONF_FILENAME;\n extern const char * const BITCOIN_PID_FILENAME;\n \n /**\n@@ -100,12 +101,12 @@ bool TryCreateDirectory(const boost::filesystem::path& p);\n boost::filesystem::path GetDefaultDataDir();\n const boost::filesystem::path &GetDataDir(bool fNetSpecific = true);\n void ClearDatadirCache();\n-boost::filesystem::path GetConfigFile(const std::string& confPath);\n+boost::filesystem::path GetConfigFile(const std::string& confPath, const bool fNetSpecific = false);\n #ifndef WIN32\n boost::filesystem::path GetPidFile();\n void CreatePidFile(const boost::filesystem::path &path, pid_t pid);\n #endif\n-void ReadConfigFile(const std::string& confPath);\n+bool ReadConfigFile(const std::string& confPath, const bool fNetSpecific = false);\n #ifdef WIN32\n boost::filesystem::path GetSpecialFolderPath(int nFolder, bool fCreate = true);\n #endif"
      }
    ]
  }
]