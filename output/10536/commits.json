[
  {
    "sha": "4265bf351a5c7b89ec33deff9f3800f28ff6f3e3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MjY1YmYzNTFhNWM3Yjg5ZWMzM2RlZmY5ZjM4MDBmMjhmZjZmM2Uz",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-06-12T13:01:46Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-06-12T13:01:46Z"
      },
      "message": "Remove unreachable or otherwise redundant code",
      "tree": {
        "sha": "9267a414b11a86780a4163bee5b9461142b80f3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9267a414b11a86780a4163bee5b9461142b80f3b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4265bf351a5c7b89ec33deff9f3800f28ff6f3e3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4265bf351a5c7b89ec33deff9f3800f28ff6f3e3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4265bf351a5c7b89ec33deff9f3800f28ff6f3e3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4265bf351a5c7b89ec33deff9f3800f28ff6f3e3/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "177433ad22d6b386fec10a92a14cd8472ea02f41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/177433ad22d6b386fec10a92a14cd8472ea02f41",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/177433ad22d6b386fec10a92a14cd8472ea02f41"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 2,
      "deletions": 16
    },
    "files": [
      {
        "sha": "101e99741b514bbd2527848d9143c59645cc1491",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4265bf351a5c7b89ec33deff9f3800f28ff6f3e3/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4265bf351a5c7b89ec33deff9f3800f28ff6f3e3/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=4265bf351a5c7b89ec33deff9f3800f28ff6f3e3",
        "patch": "@@ -299,7 +299,6 @@ static void MutateTxAddOutPubKey(CMutableTransaction& tx, const std::string& str\n     if (!pubkey.IsFullyValid())\n         throw std::runtime_error(\"invalid TX output pubkey\");\n     CScript scriptPubKey = GetScriptForRawPubKey(pubkey);\n-    CBitcoinAddress addr(scriptPubKey);\n \n     // Extract and validate FLAGS\n     bool bSegWit = false;"
      },
      {
        "sha": "26dec3c61087acca5b9a261d48c2338bcb209a26",
        "filename": "src/qt/test/rpcnestedtests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4265bf351a5c7b89ec33deff9f3800f28ff6f3e3/src/qt/test/rpcnestedtests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4265bf351a5c7b89ec33deff9f3800f28ff6f3e3/src/qt/test/rpcnestedtests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/rpcnestedtests.cpp?ref=4265bf351a5c7b89ec33deff9f3800f28ff6f3e3",
        "patch": "@@ -33,8 +33,6 @@ static const CRPCCommand vRPCCommands[] =\n \n void RPCNestedTests::rpcNestedTests()\n {\n-    UniValue jsonRPCError;\n-\n     // do some test setup\n     // could be moved to a more generic place when we add more tests on QT level\n     const CChainParams& chainparams = Params();"
      },
      {
        "sha": "5bfb3f74fc22f61188bc8bdf0d893641688973a1",
        "filename": "src/wallet/crypter.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4265bf351a5c7b89ec33deff9f3800f28ff6f3e3/src/wallet/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4265bf351a5c7b89ec33deff9f3800f28ff6f3e3/src/wallet/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.cpp?ref=4265bf351a5c7b89ec33deff9f3800f28ff6f3e3",
        "patch": "@@ -274,7 +274,6 @@ bool CCryptoKeyStore::GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) co\n         // Check for watch-only pubkeys\n         return CBasicKeyStore::GetPubKey(address, vchPubKeyOut);\n     }\n-    return false;\n }\n \n bool CCryptoKeyStore::EncryptKeys(CKeyingMaterial& vMasterKeyIn)"
      },
      {
        "sha": "ef34a65e109441235d9f5cfe7812b0e5ea3d66d9",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4265bf351a5c7b89ec33deff9f3800f28ff6f3e3/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4265bf351a5c7b89ec33deff9f3800f28ff6f3e3/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=4265bf351a5c7b89ec33deff9f3800f28ff6f3e3",
        "patch": "@@ -1064,7 +1064,6 @@ class Witnessifier : public boost::static_visitor<bool>\n     bool operator()(const CNoDestination &dest) const { return false; }\n \n     bool operator()(const CKeyID &keyID) {\n-        CPubKey pubkey;\n         if (pwallet) {\n             CScript basescript = GetScriptForDestination(keyID);\n             isminetype typ;"
      },
      {
        "sha": "e95a8c809f2df3357c56f106179b303081e94465",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4265bf351a5c7b89ec33deff9f3800f28ff6f3e3/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4265bf351a5c7b89ec33deff9f3800f28ff6f3e3/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=4265bf351a5c7b89ec33deff9f3800f28ff6f3e3",
        "patch": "@@ -205,7 +205,6 @@ bool CWallet::AddCryptedKey(const CPubKey &vchPubKey,\n                                                             vchCryptedSecret,\n                                                             mapKeyMetadata[vchPubKey.GetID()]);\n     }\n-    return false;\n }\n \n bool CWallet::LoadKeyMetadata(const CTxDestination& keyID, const CKeyMetadata &meta)\n@@ -2708,8 +2707,6 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n \n                 unsigned int nBytes = GetVirtualTransactionSize(txNew);\n \n-                CTransaction txNewConst(txNew);\n-\n                 // Remove scriptSigs to eliminate the fee calculation dummy signatures\n                 for (auto& vin : txNew.vin) {\n                     vin.scriptSig = CScript();"
      },
      {
        "sha": "d839beca88176f8c1d6c5631c845b00d3296de34",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 8,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4265bf351a5c7b89ec33deff9f3800f28ff6f3e3/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4265bf351a5c7b89ec33deff9f3800f28ff6f3e3/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=4265bf351a5c7b89ec33deff9f3800f28ff6f3e3",
        "patch": "@@ -76,21 +76,15 @@ bool CWalletDB::WriteCryptedKey(const CPubKey& vchPubKey,\n                                 const std::vector<unsigned char>& vchCryptedSecret,\n                                 const CKeyMetadata &keyMeta)\n {\n-    const bool fEraseUnencryptedKey = true;\n-\n     if (!WriteIC(std::make_pair(std::string(\"keymeta\"), vchPubKey), keyMeta)) {\n         return false;\n     }\n \n     if (!WriteIC(std::make_pair(std::string(\"ckey\"), vchPubKey), vchCryptedSecret, false)) {\n         return false;\n     }\n-    if (fEraseUnencryptedKey)\n-    {\n-        EraseIC(std::make_pair(std::string(\"key\"), vchPubKey));\n-        EraseIC(std::make_pair(std::string(\"wkey\"), vchPubKey));\n-    }\n-\n+    EraseIC(std::make_pair(std::string(\"key\"), vchPubKey));\n+    EraseIC(std::make_pair(std::string(\"wkey\"), vchPubKey));\n     return true;\n }\n "
      }
    ]
  }
]