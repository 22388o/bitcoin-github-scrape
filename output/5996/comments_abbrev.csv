jgarzik,2015-04-10T17:34:03Z,Looks OK from quick glance.  Test plan?\n,https://github.com/bitcoin/bitcoin/pull/5996#issuecomment-91630210,91630210,
sipa,2015-04-11T08:42:06Z,"utACK.\n\nOne way to test this would be creating a unit test with the old GetBlockValue() implementation, and calling it for some arbitrary heights/fees, and comparing with the new. It looks trivially correct to me, though.\n",https://github.com/bitcoin/bitcoin/pull/5996#issuecomment-91795371,91795371,
jtimon,2015-04-13T16:31:20Z,"Needed rebase.\nI also think it is trivial enough: passing Consensus::Params, adding the fees outside of the function and not calculating the initial subsidy if it's going to return 0.\n\nIn any case, the current main_tests.cpp (which just tests this function) could be improved, it only checks that the subsidy is always <= 50 \* COIN. Probably a dataset with pairs height -> subsidy would be better",https://github.com/bitcoin/bitcoin/pull/5996#issuecomment-92418696,92418696,
jtimon,2015-04-15T14:03:15Z,"Needed rebase again.\nI also added some more tests.\nNote that if the constants...\n\n```\n    int maxHalvings = 64;\n    CAmount nInitialSubsidy = 50 * COIN;\n```\n\n...were part of Consensus::Params, we could easily adapt my tests to test different values for them.\nBut I'm not sure it's worth it.\nAnd even less sure if that belongs to this PR, I mean to get rid of CChainParams::SubsidyHalvingIn",https://github.com/bitcoin/bitcoin/pull/5996#issuecomment-93413373,93413373,
jtimon,2015-05-15T14:13:03Z,Rebased\n,https://github.com/bitcoin/bitcoin/pull/5996#issuecomment-102410095,102410095,
laanwj,2015-05-16T08:13:13Z,"> I mean to get rid of CChainParams::SubsidyHalvingInterval() I could have simply added the Consensus::Params parameter to GetBlockValue without removing the nFees parameter...\n\nIf you had done that, this would have already been merged. I'm a bit wary as this changes the fee computation code and is not simple substitution like the other ""Remove redundant getter"" pulls.\n",https://github.com/bitcoin/bitcoin/pull/5996#issuecomment-102586431,102586431,
jtimon,2015-05-16T09:42:31Z,"That's fine.\nLibconsensus-wise, this is only required for VerifyBlock, which can only come after both VerifyTx and VerifyHeader, so this isn't really blocking anything in the short term. Therefore I prefer to do it in a way that I think is right rather than in the fastest way possible.\n\nThis doesn't ""change the way fees are computed"": fees are computed outside of this function. The only differe",https://github.com/bitcoin/bitcoin/pull/5996#issuecomment-102596718,102596718,
laanwj,2015-05-18T06:27:02Z,"@jjtimon I didn't intend to argue, or demand that you have to change this code now after all that time, just tried to explain why this one requires more thorough scrutiny than those other mentioned pulls.\n\nThat said, the change looks good to me. utACK\n",https://github.com/bitcoin/bitcoin/pull/5996#issuecomment-102936478,102936478,
jtimon,2015-05-19T00:05:26Z,"I understood that and that's why this one got tests.\nRe-reading my comment it sounds overly defensive and almost rude, my apologies. \n",https://github.com/bitcoin/bitcoin/pull/5996#issuecomment-103275155,103275155,
Diapolo,2015-05-20T13:50:09Z,Nit: You could have added a comment explaining the function AFAIK all main.h functions should include a comment.\n,https://github.com/bitcoin/bitcoin/pull/5996#discussion_r30702997,30702997,src/main.h
jtimon,2015-05-20T20:19:07Z,"That can still be done as an independent PR. Documentation is good, but there's no reason why it has to be added when a function is touched. For example, should I complete the documentation of all functions touched in  #6163 ? Seems orthogonal to me...\nAlso I don't see how functions declared main.h should be special in that regard.\n",https://github.com/bitcoin/bitcoin/pull/5996#discussion_r30744433,30744433,src/main.h
