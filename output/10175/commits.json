[
  {
    "sha": "9a763d4f86fb2428bfcae6cad5326600ada10c11",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTc2M2Q0Zjg2ZmIyNDI4YmZjYWU2Y2FkNTMyNjYwMGFkYTEwYzEx",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-04-10T08:24:49Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-04-10T08:24:49Z"
      },
      "message": "Remove excess logic.",
      "tree": {
        "sha": "216bc64aac841ad0a34ca5f993bac2434104ef1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/216bc64aac841ad0a34ca5f993bac2434104ef1b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a763d4f86fb2428bfcae6cad5326600ada10c11",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a763d4f86fb2428bfcae6cad5326600ada10c11",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9a763d4f86fb2428bfcae6cad5326600ada10c11",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a763d4f86fb2428bfcae6cad5326600ada10c11/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "813eacf81b7359906bbcf3d926b411415200362c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/813eacf81b7359906bbcf3d926b411415200362c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/813eacf81b7359906bbcf3d926b411415200362c"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 3,
      "deletions": 10
    },
    "files": [
      {
        "sha": "69a89bd61703e3632d782401dc09989667b41d11",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a763d4f86fb2428bfcae6cad5326600ada10c11/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a763d4f86fb2428bfcae6cad5326600ada10c11/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=9a763d4f86fb2428bfcae6cad5326600ada10c11",
        "patch": "@@ -317,9 +317,7 @@ int BlockAssembler::UpdatePackagesForAdded(const CTxMemPool::setEntries& already\n bool BlockAssembler::SkipMapTxEntry(CTxMemPool::txiter it, indexed_modified_transaction_set &mapModifiedTx, CTxMemPool::setEntries &failedTx)\n {\n     assert (it != mempool.mapTx.end());\n-    if (mapModifiedTx.count(it) || inBlock.count(it) || failedTx.count(it))\n-        return true;\n-    return false;\n+    return mapModifiedTx.count(it) || inBlock.count(it) || failedTx.count(it);\n }\n \n void BlockAssembler::SortForBlock(const CTxMemPool::setEntries& package, CTxMemPool::txiter entry, std::vector<CTxMemPool::txiter>& sortedEntries)"
      },
      {
        "sha": "f8a99506c131ea35169a73cf7240d4b818599282",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a763d4f86fb2428bfcae6cad5326600ada10c11/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a763d4f86fb2428bfcae6cad5326600ada10c11/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=9a763d4f86fb2428bfcae6cad5326600ada10c11",
        "patch": "@@ -181,7 +181,5 @@ void BanTableModel::sort(int column, Qt::SortOrder order)\n \n bool BanTableModel::shouldShow()\n {\n-    if (priv->size() > 0)\n-        return true;\n-    return false;\n+    return priv->size() > 0;\n }"
      },
      {
        "sha": "41b085ffa7db8831ae36b24689446c2ac072f635",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a763d4f86fb2428bfcae6cad5326600ada10c11/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a763d4f86fb2428bfcae6cad5326600ada10c11/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=9a763d4f86fb2428bfcae6cad5326600ada10c11",
        "patch": "@@ -1330,10 +1330,7 @@ void UpdateCoins(const CTransaction& tx, CCoinsViewCache& inputs, int nHeight)\n bool CScriptCheck::operator()() {\n     const CScript &scriptSig = ptxTo->vin[nIn].scriptSig;\n     const CScriptWitness *witness = &ptxTo->vin[nIn].scriptWitness;\n-    if (!VerifyScript(scriptSig, scriptPubKey, witness, nFlags, CachingTransactionSignatureChecker(ptxTo, nIn, amount, cacheStore, *txdata), &error)) {\n-        return false;\n-    }\n-    return true;\n+    return VerifyScript(scriptSig, scriptPubKey, witness, nFlags, CachingTransactionSignatureChecker(ptxTo, nIn, amount, cacheStore, *txdata), &error);\n }\n \n int GetSpendHeight(const CCoinsViewCache& inputs)"
      }
    ]
  }
]