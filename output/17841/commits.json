[
  {
    "sha": "8da847ef6f3893f922eec0dd27b3762aedefebb2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZGE4NDdlZjZmMzg5M2Y5MjJlZWMwZGQyN2IzNzYyYWVkZWZlYmIy",
    "commit": {
      "author": {
        "name": "Emil Engler",
        "email": "me@emilengler.com",
        "date": "2020-01-01T06:08:17Z"
      },
      "committer": {
        "name": "Emil Engler",
        "email": "me@emilengler.com",
        "date": "2020-01-01T17:55:37Z"
      },
      "message": "util: Make -help more Unix and grep friendly",
      "tree": {
        "sha": "bcb1261425ddda4ff0de6008fcc08acf2dc9126a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bcb1261425ddda4ff0de6008fcc08acf2dc9126a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8da847ef6f3893f922eec0dd27b3762aedefebb2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE82XmVEpcmrEyk0LUL21BRcVfx8cFAl4M3R4ACgkQL21BRcVf\nx8djZg/+IfJSCTPzXrFRV99uqx2FRtoxgbypgMI3IJ8pEq7Ce2fs5kFxqeQX7zTQ\n1fKGp6xLSjLnGYFsyxdV+roQwx2dokMKXG7I6etlyEtA0c+N/gh68CejvttmakLW\n2O60KUnbrFkDez4NGAoBZ8XtApjq4xBwn+mmpDxscQJIPVsXhdWHQhTNlmBxTr7c\nKA34ziP2KO1JAEiLnoeOgs75zEuOFg89qvMOSG+xtv6AqOnd95ReWpY+DwbMAfIf\nShpjCW/3fwfh00pBaKR+ystq9DaiTMs9IWRnxwcGGPD0I51XGIAkODZfSLFU9LS/\nutnrG0FHYF5LZayD8VK32aruG3oYkCHwPqmx4O/o+8bE/5wzZ7irYNyXlBCfbIt+\naKl1IhO/uUS39NpWyN6oPSBqADx0psCi9xDLW771u2sbuRccobPqfiuu+dewnSTS\nsGvRRNgF/DtUj4keARA1mAMGjh9Tfp5QyZ1qQQpqy+KN2LgaAOS8Z37ngr2xr68/\nNXYhh2TS7TgVHkMJ5lZcYu3dSgEjGQsZWd6UDt5EXE4UR/nS2UFAwEganB9HoOXS\nnefPTXRLYTybPYzbpIrPcZ+Hh66dFaNV4OezXlRNrA6JIieIx4JMOUcwRk08iCOU\nJ+a1AdpnND61OblFr8F6Dsy7COakzXeWtC2oX30m1G5TWSsRnWE=\n=QwDc\n-----END PGP SIGNATURE-----",
        "payload": "tree bcb1261425ddda4ff0de6008fcc08acf2dc9126a\nparent 35fff5be60e853455abc24713481544e91adfedb\nauthor Emil Engler <me@emilengler.com> 1577858897 +0100\ncommitter Emil Engler <me@emilengler.com> 1577901337 +0100\n\nutil: Make -help more Unix and grep friendly\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8da847ef6f3893f922eec0dd27b3762aedefebb2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8da847ef6f3893f922eec0dd27b3762aedefebb2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8da847ef6f3893f922eec0dd27b3762aedefebb2/comments",
    "author": {
      "login": "emilengler",
      "id": 12272949,
      "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilengler",
      "html_url": "https://github.com/emilengler",
      "followers_url": "https://api.github.com/users/emilengler/followers",
      "following_url": "https://api.github.com/users/emilengler/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilengler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
      "organizations_url": "https://api.github.com/users/emilengler/orgs",
      "repos_url": "https://api.github.com/users/emilengler/repos",
      "events_url": "https://api.github.com/users/emilengler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilengler/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "emilengler",
      "id": 12272949,
      "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilengler",
      "html_url": "https://github.com/emilengler",
      "followers_url": "https://api.github.com/users/emilengler/followers",
      "following_url": "https://api.github.com/users/emilengler/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilengler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
      "organizations_url": "https://api.github.com/users/emilengler/orgs",
      "repos_url": "https://api.github.com/users/emilengler/repos",
      "events_url": "https://api.github.com/users/emilengler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilengler/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35fff5be60e853455abc24713481544e91adfedb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35fff5be60e853455abc24713481544e91adfedb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35fff5be60e853455abc24713481544e91adfedb"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 36,
      "deletions": 1
    },
    "files": [
      {
        "sha": "cab82fd4b91169d941de1ad46264cad4843acb41",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8da847ef6f3893f922eec0dd27b3762aedefebb2/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8da847ef6f3893f922eec0dd27b3762aedefebb2/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=8da847ef6f3893f922eec0dd27b3762aedefebb2",
        "patch": "@@ -444,7 +444,7 @@ void SetupServerArgs()\n         \"and mempool (allow requesting BIP35 mempool contents). \"\n         \"Specify multiple permissions separated by commas (default: noban,mempool,relay). Can be specified multiple times.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n \n-    gArgs.AddArg(\"-whitelist=<[permissions@]IP address or network>\", \"Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or \"\n+    gArgs.AddArg(\"-whitelist=<[permissions@]addr>\", \"Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or \"\n         \"CIDR notated network(e.g. 1.2.3.0/24). Uses same permissions as \"\n         \"-whitebind. Can be specified multiple times.\" , ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n "
      },
      {
        "sha": "028d48da1aef79ab1228b01e0f24d7f250d52aff",
        "filename": "src/util/strencodings.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8da847ef6f3893f922eec0dd27b3762aedefebb2/src/util/strencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8da847ef6f3893f922eec0dd27b3762aedefebb2/src/util/strencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.cpp?ref=8da847ef6f3893f922eec0dd27b3762aedefebb2",
        "patch": "@@ -368,6 +368,7 @@ bool ParseDouble(const std::string& str, double *out)\n \n std::string FormatParagraph(const std::string& in, size_t width, size_t indent)\n {\n+#ifdef _WIN32\n     std::stringstream out;\n     size_t ptr = 0;\n     size_t indented = 0;\n@@ -405,6 +406,29 @@ std::string FormatParagraph(const std::string& in, size_t width, size_t indent)\n         }\n     }\n     return out.str();\n+#else\n+    std::istringstream iss(in);\n+    std::vector<std::string> lines_splitted((std::istream_iterator<std::string>(iss)), std::istream_iterator<std::string>());\n+    std::vector<std::string> lines_formatted = {\"\"};    // Initialize with empty string\n+    for(long unsigned int i = 0; i < lines_splitted.size(); i++) {\n+        if(std::string(lines_formatted[lines_formatted.size() - 1] + lines_splitted[i] + \" \").size() > width) {\n+            lines_formatted.push_back(lines_splitted[i] + \" \");\n+        }\n+        else {\n+            lines_formatted[lines_formatted.size() - 1] += lines_splitted[i] + \" \";\n+        }\n+    }\n+    // Make it a string\n+    std::string retstr;\n+    for(long unsigned int i = 0; i < lines_formatted.size(); i++) {\n+        // Do not do the indent on line 1\n+        if(i == 0)\n+            retstr += lines_formatted[0] + \"\\n\";\n+        else\n+            retstr += std::string(indent, ' ') + lines_formatted[i] + \"\\n\";\n+    }\n+    return retstr;\n+#endif\n }\n \n std::string i64tostr(int64_t n)"
      },
      {
        "sha": "ea6f5f3cd4c61187cd86101b25f59b83bf5f3457",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8da847ef6f3893f922eec0dd27b3762aedefebb2/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8da847ef6f3893f922eec0dd27b3762aedefebb2/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=8da847ef6f3893f922eec0dd27b3762aedefebb2",
        "patch": "@@ -518,17 +518,28 @@ void SetupHelpOptions(ArgsManager& args)\n \n static const int screenWidth = 79;\n static const int optIndent = 2;\n+#ifdef _WIN32\n static const int msgIndent = 7;\n+#else\n+static const int msgIndent = 41;\n+#endif\n \n std::string HelpMessageGroup(const std::string &message) {\n     return std::string(message) + std::string(\"\\n\\n\");\n }\n \n std::string HelpMessageOpt(const std::string &option, const std::string &message) {\n+#ifdef _WIN32\n     return std::string(optIndent,' ') + std::string(option) +\n            std::string(\"\\n\") + std::string(msgIndent,' ') +\n            FormatParagraph(message, screenWidth - msgIndent, msgIndent) +\n            std::string(\"\\n\\n\");\n+#else\n+    return std::string(optIndent,' ') + std::string(option) +\n+           std::string(msgIndent - option.size() - optIndent,' ') +\n+           FormatParagraph(message, screenWidth - msgIndent, msgIndent) +\n+           std::string(\"\\n\\n\");\n+#endif\n }\n \n static std::string FormatException(const std::exception* pex, const char* pszThread)"
      }
    ]
  }
]