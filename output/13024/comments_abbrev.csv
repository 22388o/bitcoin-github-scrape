ken2812221,2018-04-18T22:43:40Z,Can this resolve #12995?,https://github.com/bitcoin/bitcoin/pull/13024#issuecomment-382552228,382552228,
laanwj,2018-04-19T13:01:08Z,"> Can this resolve #12995?\n\nYes - looks good to me",https://github.com/bitcoin/bitcoin/pull/13024#issuecomment-382725487,382725487,
ken2812221,2018-04-19T13:48:10Z,@MarcoFalke Done. ,https://github.com/bitcoin/bitcoin/pull/13024#issuecomment-382742372,382742372,
cdecker,2018-04-19T15:56:20Z,ACK,https://github.com/bitcoin/bitcoin/pull/13024#issuecomment-382788460,382788460,
jnewbery,2018-04-19T19:28:03Z,"I've just skimmed the code, but I'm NACKish on this. I don't think we should be adding dependencies to the functional tests (even if they're internal project dependencies).\n\nBetter to just have a unit test for rpcauth.py.",https://github.com/bitcoin/bitcoin/pull/13024#issuecomment-382853506,382853506,
MarcoFalke,2018-04-19T21:02:57Z,"@jnewbery Mind to elaborate on that. Unlike the unit tests, which are shipped in a single executable, the functional tests are only used by developers, who have all the project files.\n\nAdding a python unit test to rpcauth would add yet another test target that is run by no one (execpt by travis, if we add it to the yaml). And the rpcauth unit test would need to borrow a ton from the functional",https://github.com/bitcoin/bitcoin/pull/13024#issuecomment-382879892,382879892,
jnewbery,2018-04-19T21:12:05Z,"See my comment in #12995. I don't think it's good practice to have functional tests calling out to random scripts in the share directory, and certainly isn't a good idea to hard code the relative path to that directory.",https://github.com/bitcoin/bitcoin/pull/13024#issuecomment-382882221,382882221,
MarcoFalke,2018-04-19T22:52:54Z,"> certainly isn't a good idea to hard code the relative path to that directory\n\nThat could easily be fixed by adjusting `configure.ac` to create an appropriate link in the `test` directory. (And read the BUILDDIR from our `confg.ini`)",https://github.com/bitcoin/bitcoin/pull/13024#issuecomment-382904672,382904672,
ken2812221,2018-04-20T01:08:06Z,"~~I modified `configure.ac`, it can generate a symlink during `./configure `~~\nNow I just add rpcauth path to config.ini",https://github.com/bitcoin/bitcoin/pull/13024#issuecomment-382930932,382930932,
laanwj,2018-04-21T06:16:12Z,"> I don't think it's good practice to have functional tests calling out to random scripts in the share directory\n\nIt also calls out to ""random executables"" in the `src` directory. It's a good default assumption.\n\nHowever, I do agree that the path ideally needs to be override-able with an environment variable, like `BITCOIND` and `BITCOINCLI` are.\n\n> Better to just have a unit test for ",https://github.com/bitcoin/bitcoin/pull/13024#issuecomment-383271135,383271135,
jnewbery,2018-04-22T22:14:43Z,"> It also calls out to ""random executables"" in the src directory.\n\nNo - it calls out specifically to the bitcoind, bitcoin-qt and bitcoin-cli executables, which is what the functional test framework should be testing in my opinion. I don't think expanding the functional test framework to also test scripts in the source directory is a good idea. We already drive far too much testing through the",https://github.com/bitcoin/bitcoin/pull/13024#issuecomment-383416584,383416584,
laanwj,2018-04-23T05:29:14Z,"> Edit: I won't stand in the way if everyone else thinks this is a good idea, but using the functional test framework to also test python scripts just seems like the wrong approach to me.\n\nI think the functional test framework should be able to test everything that is supposed to be used by the user.\nSo probably not developer/maintainer scripts such as `github-merge.py`, but yes this script ",https://github.com/bitcoin/bitcoin/pull/13024#issuecomment-383458536,383458536,
laanwj,2018-04-24T06:36:17Z,"Tested ACK 8b8032e283ae1dff00de71e2d9d28c0df626fc23, also verified that it works for out-of-tree builds.",https://github.com/bitcoin/bitcoin/pull/13024#issuecomment-383819762,383819762,
MarcoFalke,2018-04-24T10:34:44Z,utACK 8b8032e,https://github.com/bitcoin/bitcoin/pull/13024#issuecomment-383884768,383884768,
MarcoFalke,2018-04-19T13:19:19Z,"nit: Could give the executable a name\n\n```py\ngen_rpcauth = os.path.join(...\np = subprocess.Popen([gen_rpcauth, self.user], ...",https://github.com/bitcoin/bitcoin/pull/13024#discussion_r182741959,182741959,test/functional/rpc_users.py
MarcoFalke,2018-04-19T13:20:27Z,"nit: `set_test_params` is mostly used to overwrite test params, not set member variables. I think this hunk can go in `setup_chain`.",https://github.com/bitcoin/bitcoin/pull/13024#discussion_r182742334,182742334,test/functional/rpc_users.py
MarcoFalke,2018-04-19T13:21:33Z,"nit: Could use `self.log.info('Correct...')` instead of a comment, which is not shown in the debug log and makes debugging harder in case of a failure.",https://github.com/bitcoin/bitcoin/pull/13024#discussion_r182742696,182742696,test/functional/rpc_users.py
MarcoFalke,2018-04-19T13:21:42Z,Same,https://github.com/bitcoin/bitcoin/pull/13024#discussion_r182742735,182742735,test/functional/rpc_users.py
MarcoFalke,2018-04-22T22:22:30Z,"nit: Just make this `open(self.options.configfile)`\n<!-- utACK 6be22e7db3ac815356ba14298d551bfae0e7a74c -->",https://github.com/bitcoin/bitcoin/pull/13024#discussion_r183253843,183253843,test/functional/rpc_users.py
kanzure,2018-04-24T13:09:22Z,"this is not very descriptive (""wrong"")",https://github.com/bitcoin/bitcoin/pull/13024#discussion_r183722650,183722650,test/functional/rpc_users.py
