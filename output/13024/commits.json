[
  {
    "sha": "8b8032e283ae1dff00de71e2d9d28c0df626fc23",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjgwMzJlMjgzYWUxZGZmMDBkZTcxZTJkOWQyOGMwZGY2MjZmYzIz",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-04-18T21:39:24Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-04-22T22:32:58Z"
      },
      "message": "test: Add rpcauth pair that generated by rpcauth",
      "tree": {
        "sha": "d9bc7bec1462252b504dd57cf9ddeb3b47487e44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9bc7bec1462252b504dd57cf9ddeb3b47487e44"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b8032e283ae1dff00de71e2d9d28c0df626fc23",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJa3Q2jAAoJEJaOmp5fPHXZWfsQANEvsRdn8gcNpjRtoWRRrFE6\n7zqUX5P85NnNzo6IzSB01NIydhKH2rq9XRe5+xAfQM0LIYrR/WJCiKvS03OIJwCU\nOm/73WChoZRYtUYG7uzk0xDt4yrWUa86VEGU/32BE6hjv2wM39O9bs9AamlbVbGO\n/k5A9Wid54WGsZ1hMZEPC7supghyMoqg002AygXoeJDdkOEQLJ9zw0Rh5MTHR7j0\nHBEmeS0fKpo27hUXLWBKN7xZhFbp6l45je7n2OYOsbk9JJFRQctvaKKIFeefnHfm\nzbpWMqhWg5s+F6uoaGCx0mRRBdisjBPD1wOqeV8achzmKdfnHt+jpBA9QmZrWGv3\n4M5N5lpJVvR6hIwMx9wnNkyTIm+jvP8A8lj6UszSfWYiC9AE+aKDl3/83zrf7HDm\n0S57LnC/iaOXAM0swMTreRbEeUNpFXSMHE/gGCe6vR40EaAKSA6ICogljV+jpGTv\nvG5GdQtMeof0XObNqdY8rmz339N/91mSbdr3BcswpJhQzQQpF0MrQEaXt1TIHwQd\nJ5Z7Err1Nr5DaQIELxv4EcND7Mi6HursswogfTqUNr44dkGbgsS2o6pn3Fp0+AQW\nwTHKv+Heny9h43JRImFUTj+BCZwlk2bvB/DNgemaAyCmMs7iWzOiF6KHSHwgxExN\nksStGoz73QkfT59HN9lm\n=gO86\n-----END PGP SIGNATURE-----",
        "payload": "tree d9bc7bec1462252b504dd57cf9ddeb3b47487e44\nparent 615f7c288414a89cd1dec1d67e0f84abe2fb4c6d\nauthor Chun Kuan Lee <ken2812221@gmail.com> 1524087564 +0800\ncommitter Chun Kuan Lee <ken2812221@gmail.com> 1524436378 +0800\n\ntest: Add rpcauth pair that generated by rpcauth\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b8032e283ae1dff00de71e2d9d28c0df626fc23",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b8032e283ae1dff00de71e2d9d28c0df626fc23",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b8032e283ae1dff00de71e2d9d28c0df626fc23/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "615f7c288414a89cd1dec1d67e0f84abe2fb4c6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/615f7c288414a89cd1dec1d67e0f84abe2fb4c6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/615f7c288414a89cd1dec1d67e0f84abe2fb4c6d"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 48,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a1119dc7399def8266f8c5af44285786dc214c97",
        "filename": "test/config.ini.in",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b8032e283ae1dff00de71e2d9d28c0df626fc23/test/config.ini.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b8032e283ae1dff00de71e2d9d28c0df626fc23/test/config.ini.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/config.ini.in?ref=8b8032e283ae1dff00de71e2d9d28c0df626fc23",
        "patch": "@@ -9,6 +9,7 @@\n SRCDIR=@abs_top_srcdir@\n BUILDDIR=@abs_top_builddir@\n EXEEXT=@EXEEXT@\n+RPCAUTH=@abs_top_srcdir@/share/rpcauth/rpcauth.py\n \n [components]\n # Which components are enabled. These are commented out by `configure` if they were disabled when running config."
      },
      {
        "sha": "1ef59da5ad49e391aa711a1f9ff7a307bb49194f",
        "filename": "test/functional/rpc_users.py",
        "status": "modified",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b8032e283ae1dff00de71e2d9d28c0df626fc23/test/functional/rpc_users.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b8032e283ae1dff00de71e2d9d28c0df626fc23/test/functional/rpc_users.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_users.py?ref=8b8032e283ae1dff00de71e2d9d28c0df626fc23",
        "patch": "@@ -14,6 +14,10 @@\n import os\n import http.client\n import urllib.parse\n+import subprocess\n+from random import SystemRandom\n+import string\n+import configparser\n \n \n class HTTPBasicsTest(BitcoinTestFramework):\n@@ -27,9 +31,20 @@ def setup_chain(self):\n         rpcauth2 = \"rpcauth=rt2:f8607b1a88861fac29dfccf9b52ff9f$ff36a0c23c8c62b4846112e50fa888416e94c17bfd4c42f88fd8f55ec6a3137e\"\n         rpcuser = \"rpcuser=rpcuser\ud83d\udcbb\"\n         rpcpassword = \"rpcpassword=rpcpassword\ud83d\udd11\"\n+\n+        self.user = ''.join(SystemRandom().choice(string.ascii_letters + string.digits) for _ in range(10))\n+        config = configparser.ConfigParser()\n+        config.read_file(open(self.options.configfile))\n+        gen_rpcauth = config['environment']['RPCAUTH']\n+        p = subprocess.Popen([gen_rpcauth, self.user], stdout=subprocess.PIPE, universal_newlines=True)\n+        lines = p.stdout.read().splitlines()\n+        rpcauth3 = lines[1]\n+        self.password = lines[3]\n+\n         with open(os.path.join(get_datadir_path(self.options.tmpdir, 0), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n             f.write(rpcauth+\"\\n\")\n             f.write(rpcauth2+\"\\n\")\n+            f.write(rpcauth3+\"\\n\")\n         with open(os.path.join(get_datadir_path(self.options.tmpdir, 1), \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n             f.write(rpcuser+\"\\n\")\n             f.write(rpcpassword+\"\\n\")\n@@ -51,6 +66,7 @@ def run_test(self):\n         password2 = \"8/F3uMDw4KSEbw96U3CA1C4X05dkHDN2BPFjTgZW4KI=\"\n         authpairnew = \"rt:\"+password\n \n+        self.log.info('Correct...')\n         headers = {\"Authorization\": \"Basic \" + str_to_b64str(authpair)}\n \n         conn = http.client.HTTPConnection(url.hostname, url.port)\n@@ -61,6 +77,7 @@ def run_test(self):\n         conn.close()\n \n         #Use new authpair to confirm both work\n+        self.log.info('Correct...')\n         headers = {\"Authorization\": \"Basic \" + str_to_b64str(authpairnew)}\n \n         conn = http.client.HTTPConnection(url.hostname, url.port)\n@@ -71,6 +88,7 @@ def run_test(self):\n         conn.close()\n \n         #Wrong login name with rt's password\n+        self.log.info('Wrong...')\n         authpairnew = \"rtwrong:\"+password\n         headers = {\"Authorization\": \"Basic \" + str_to_b64str(authpairnew)}\n \n@@ -82,6 +100,7 @@ def run_test(self):\n         conn.close()\n \n         #Wrong password for rt\n+        self.log.info('Wrong...')\n         authpairnew = \"rt:\"+password+\"wrong\"\n         headers = {\"Authorization\": \"Basic \" + str_to_b64str(authpairnew)}\n \n@@ -93,6 +112,7 @@ def run_test(self):\n         conn.close()\n \n         #Correct for rt2\n+        self.log.info('Correct...')\n         authpairnew = \"rt2:\"+password2\n         headers = {\"Authorization\": \"Basic \" + str_to_b64str(authpairnew)}\n \n@@ -104,6 +124,7 @@ def run_test(self):\n         conn.close()\n \n         #Wrong password for rt2\n+        self.log.info('Wrong...')\n         authpairnew = \"rt2:\"+password2+\"wrong\"\n         headers = {\"Authorization\": \"Basic \" + str_to_b64str(authpairnew)}\n \n@@ -114,12 +135,37 @@ def run_test(self):\n         assert_equal(resp.status, 401)\n         conn.close()\n \n+        #Correct for randomly generated user\n+        self.log.info('Correct...')\n+        authpairnew = self.user+\":\"+self.password\n+        headers = {\"Authorization\": \"Basic \" + str_to_b64str(authpairnew)}\n+\n+        conn = http.client.HTTPConnection(url.hostname, url.port)\n+        conn.connect()\n+        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+        resp = conn.getresponse()\n+        assert_equal(resp.status, 200)\n+        conn.close()\n+\n+        #Wrong password for randomly generated user\n+        self.log.info('Wrong...')\n+        authpairnew = self.user+\":\"+self.password+\"Wrong\"\n+        headers = {\"Authorization\": \"Basic \" + str_to_b64str(authpairnew)}\n+\n+        conn = http.client.HTTPConnection(url.hostname, url.port)\n+        conn.connect()\n+        conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n+        resp = conn.getresponse()\n+        assert_equal(resp.status, 401)\n+        conn.close()\n+\n         ###############################################################\n         # Check correctness of the rpcuser/rpcpassword config options #\n         ###############################################################\n         url = urllib.parse.urlparse(self.nodes[1].url)\n \n         # rpcuser and rpcpassword authpair\n+        self.log.info('Correct...')\n         rpcuserauthpair = \"rpcuser\ud83d\udcbb:rpcpassword\ud83d\udd11\"\n \n         headers = {\"Authorization\": \"Basic \" + str_to_b64str(rpcuserauthpair)}\n@@ -143,6 +189,7 @@ def run_test(self):\n         conn.close()\n \n         #Wrong password for rpcuser\n+        self.log.info('Wrong...')\n         rpcuserauthpair = \"rpcuser:rpcpasswordwrong\"\n         headers = {\"Authorization\": \"Basic \" + str_to_b64str(rpcuserauthpair)}\n "
      }
    ]
  }
]