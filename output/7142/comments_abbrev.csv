laanwj,2015-12-01T11:30:05Z,"Concept ACK on testing with qt4, but I'm not entirely happy about adding yet another build for this, Travis is slow enough these days.\n",https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-160940671,160940671,
jonasschnelli,2015-12-01T11:57:59Z,Concept ACK.\nAgree with @laanw but IMO another build is more valuable then a speedy CI.\n,https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-160946439,160946439,
laanwj,2015-12-01T12:01:15Z,"@jonasschnelli I wonder if there's a compromise, if we can combine the qt4 build with one of the existing builds\n",https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-160947014,160947014,
jonasschnelli,2015-12-01T12:24:18Z,"We only have one linux ""full"" Qt5 build ""32bit + dash"". The other linux QT5 build does not build the wallet. Maybe it would be worth to change one of the windows builds (Win32) to build with Qt4? On the other hand, Qt4 mostly makes sense on Linux, but even though, a Win32 Qt4 build should at least detect most Qt4 incompatibilities.\n",https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-160952877,160952877,
laanwj,2015-12-01T12:29:53Z,"Yeah. That may work.\nAnyhow this is up to @theuni. Another option would be to combine this build with something else that we wanted to test already, so that it's not just added for qt4.\n",https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-160954375,160954375,
luke-jr,2015-12-02T03:07:39Z,@theuni Can't seem to get this to build with Qt - any ideas? Shouldn't --with-qt=qt4 configure _fail_ if it has a problem? :/\n,https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-161165793,161165793,
luke-jr,2015-12-02T06:24:13Z,"@laanwj Oh, an idea if Travis time is a concern: make this build use _only_ system libraries (no depends). That's probably better test coverage anyway...\n",https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-161192097,161192097,
laanwj,2015-12-02T09:24:17Z,"> @laanwj Oh, an idea if Travis time is a concern: make this build use only system libraries (no depends). That's probably better test coverage anyway...\n\nNot a bad idea because of the extra test coverage with old libraries, but I don't think that will save much time as the depends are supposed to be built once and cached anyway.\n",https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-161232674,161232674,
MarcoFalke,2015-12-02T10:43:35Z,"> supposed to be built once and cached anyway.\n\nDoes travis cache between builds, I don't think so?\n",https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-161255174,161255174,
laanwj,2015-12-02T11:25:40Z,"No, not between builds, I think. In most cases this would make no sense as they have different flags or even a different platform.\n",https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-161266067,161266067,
theuni,2015-12-02T18:20:38Z,"Right. To clarify, depends are cached and re-used for subsequent builds of the same config. Each config is an island though.\n\nPersonally, I don't think this is worth adding another build for. If anything, I'd rather do as @laanwj said and combine it with another.\n",https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-161388210,161388210,
laanwj,2015-12-03T14:48:38Z,Travis PR test is quite slow lately. I'd certainly prefer not to add another config.\n\nTesting more obscure platforms and library versions (like Qt4) may be better suited for something like a nightly extended build (e.g. #7148)\n,https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-161661208,161661208,
luke-jr,2016-01-13T23:43:31Z,"Once #7339 is merged, I suggest this can be extended to test --without-libevent as well.\n",https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-171473472,171473472,
laanwj,2016-01-16T10:03:34Z,"Closing, this is part of #7148 now\n",https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-172178690,172178690,
laanwj,2017-06-24T11:28:09Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-310833137,310833137,
jtimon,2017-06-24T23:06:01Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-310870981,310870981,
luke-jr,2017-07-05T08:34:12Z,"Rebased, sorry for the delay",https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-313038603,313038603,
TheBlueMatt,2017-07-11T17:43:31Z,Concept ACK. Only concern is are we willing to add more jobs to travis? Can we pay them to make things go faster?,https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-314519642,314519642,
MarcoFalke,2017-07-30T10:54:16Z,"@TheBlueMatt According to apache, it is possible to increase the number of concurrent builds. (https://blogs.apache.org/infra/entry/apache_gains_additional_travis_ci)\n\nThough, I am slightly worried that this makes it harder for developers to fork the project and enable travis on their fork. After switching to the paid infrastructure, we might have faster machines or even extended timeouts for ",https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-318893851,318893851,
MarcoFalke,2017-07-30T10:56:12Z,Is this still WIP or ready for review?,https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-318893964,318893964,
luke-jr,2017-08-05T09:53:00Z,"Fixed issues, rebased, and removed `bc` from the other builds too.",https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-320434358,320434358,
luke-jr,2017-08-05T11:57:03Z,"There, tests pass now, and it tests against more system dependencies as well.",https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-320439677,320439677,
MarcoFalke,2017-08-08T21:53:37Z,utACK 6d2aac8bb142adc1e5cff9dd91ddd1d91403b33c,https://github.com/bitcoin/bitcoin/pull/7142#issuecomment-321092823,321092823,
MarcoFalke,2017-07-30T13:20:28Z,"No need for the `bc` package. Also, the configure option is called `--with-gui=qt4`.",https://github.com/bitcoin/bitcoin/pull/7142#discussion_r130242406,130242406,.travis.yml
luke-jr,2017-08-04T18:13:19Z,Why is `bc` not needed here? Other builds need it...?,https://github.com/bitcoin/bitcoin/pull/7142#discussion_r131452934,131452934,.travis.yml
MarcoFalke,2017-08-04T23:21:03Z,"I can't figure out why the ""GNU bc arbitrary precision calculator language"" is required. It  is likely an artifact of the days where the functional tests were written in bash.",https://github.com/bitcoin/bitcoin/pull/7142#discussion_r131504348,131504348,.travis.yml
MarcoFalke,2017-08-05T08:59:17Z,https://github.com/bitcoin/bitcoin/blob/2191eac812a72fe57167be882bddd2e6a3f0340e/qa/rpc-tests/util.sh#L38,https://github.com/bitcoin/bitcoin/pull/7142#discussion_r131518002,131518002,.travis.yml
