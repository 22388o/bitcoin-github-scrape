morcos,2017-01-27T02:46:52Z,"concept ACK\ni think the last commit at least is important to have to 0.14..   ",https://github.com/bitcoin/bitcoin/pull/9640#issuecomment-275576921,275576921,
laanwj,2017-01-30T11:35:58Z,"Needs rebase, I think the merge of #9615 introduced conflicts",https://github.com/bitcoin/bitcoin/pull/9640#issuecomment-276040915,276040915,
sdaftuar,2017-01-30T19:03:07Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/9640#issuecomment-276157077,276157077,
MarcoFalke,2017-01-30T19:15:16Z,utACK 1fa55fca3b206df38dc4bd15e5cbe697e6adade1\n,https://github.com/bitcoin/bitcoin/pull/9640#issuecomment-276160471,276160471,
laanwj,2017-01-31T11:17:54Z,"> The approach I took was to aggregate the errors in a single JSON object and return it, similar to what we do in some other RPCs.\n\nSo this changes the way to detect wheter an error happened from looking at the JSON-RPC-level error to seeing if rv[""error""] is a non-empty list?\n\nI guess this change in interface is acceptable as `bumpfee` is new for 0.14 and it's unlikely that any code will ",https://github.com/bitcoin/bitcoin/pull/9640#issuecomment-276337714,276337714,
sdaftuar,2017-01-31T14:51:58Z,">> The approach I took was to aggregate the errors in a single JSON object and return it, similar to what we do in some other RPCs.\n\n> So this changes the way to detect wheter an error happened from looking at the JSON-RPC-level error to seeing if rv[""error""] is a non-empty list?\n\n@laanwj Only for those errors which occur after the rpc call has successfully created a new transaction, so th",https://github.com/bitcoin/bitcoin/pull/9640#issuecomment-276383879,276383879,
MarcoFalke,2017-01-31T16:00:54Z,"Indeed, we don't want to reintroduce the bug we just fixed in 0.13.2,\nso the last commit is required for 0.14.0.\n",https://github.com/bitcoin/bitcoin/pull/9640#issuecomment-276405080,276405080,
sdaftuar,2017-01-31T20:24:21Z,Added a fixup commit to address @TheBlueMatt's nits.,https://github.com/bitcoin/bitcoin/pull/9640#issuecomment-276481081,276481081,
TheBlueMatt,2017-01-31T20:37:02Z,re-utACK 227f50a373c6c7af9e5b6f8a85875ffa7c2c4be7 (post-squash),https://github.com/bitcoin/bitcoin/pull/9640#issuecomment-276484365,276484365,
sdaftuar,2017-02-01T01:06:04Z,Squashed 227f50a -> 9522b53a91f28032c34b94662d50b000534708ce,https://github.com/bitcoin/bitcoin/pull/9640#issuecomment-276544076,276544076,
jtimon,2017-02-01T02:22:03Z,utACK individual commits: d625b907a1800a5a30c4ad285641c7418d2c28c1 9522b53a91f28032c34b94662d50b000534708ce,https://github.com/bitcoin/bitcoin/pull/9640#issuecomment-276555594,276555594,
laanwj,2017-02-01T07:42:50Z,utACK 9522b53,https://github.com/bitcoin/bitcoin/pull/9640#issuecomment-276592513,276592513,
ryanofsky,2017-01-27T17:02:53Z,Can remove this todo? Seems to be taken care of in previous commit.,https://github.com/bitcoin/bitcoin/pull/9640#discussion_r98245341,98245341,src/wallet/rpcwallet.cpp
sdaftuar,2017-01-27T17:14:05Z,"Oh I had originally tried to write this so that CalculateMaximumSignedTxSize() would be a function in CWallet, and CreateTransaction would directly use it -- but that was harder than I expected since CreateTransaction actually uses the dummy-signed tx for something that bumpfee doesn't care about (the priority calculation I mentioned).\n\nSo this todo refers to making these code paths even more ",https://github.com/bitcoin/bitcoin/pull/9640#discussion_r98247279,98247279,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-01-31T19:01:01Z,"Yes, lets not forget to do this after #9602",https://github.com/bitcoin/bitcoin/pull/9640#discussion_r98743839,98743839,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-01-31T19:17:17Z,nit: Technically the int should be unsigned?,https://github.com/bitcoin/bitcoin/pull/9640#discussion_r98747390,98747390,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-01-31T19:26:08Z,"Might want to add an additional comment pointing out that ALL inputs MUST be in mapWallet (eg IsAllFromMe, which we do check in bumpfee).",https://github.com/bitcoin/bitcoin/pull/9640#discussion_r98749513,98749513,src/wallet/rpcwallet.cpp
