instagibbs,2020-01-21 17:01:33,@sanket1729 @apoelstra may be interested too,https://github.com/bitcoin/bitcoin/pull/17975#issuecomment-576778692,576778692,
michaelfolkson,2020-01-22 09:41:13,"This looks great. To get the concept ACK I'm wondering what the arguments against are. I think (I may be mistaken) these are broadly long term motivations and sketched out roadmap-like issues.\n\n1) Does Bitcoin Core *need* to be able to recognize Miniscript in the future? Are the future upsides sufficiently material to introduce it? Presumably Miniscript could always be translated to Script ext",https://github.com/bitcoin/bitcoin/pull/17975#issuecomment-577095603,577095603,
practicalswift,2020-01-22 13:38:13,"@jachiang\n\nVery nice to see another Miniscript implementation! I love Miniscript! :)\n\nYou might want to check your Python implementation for the following issues I've reported in the C++ and Rust implementations:\n* [Issues reported in the C++ implementation (7 of which I would consider bugs)](https://github.com/sipa/miniscript/issues?utf8=%E2%9C%93&q=is%3Aissue+author%3Apracticalswift+)",https://github.com/bitcoin/bitcoin/pull/17975#issuecomment-577185437,577185437,
michaelfolkson,2020-01-31 13:21:21,Concept ACK. Moving these high level questions to a RFC (#18040) so as not to hold up review of the details of this PR. https://github.com/bitcoin/bitcoin/pull/17975#issuecomment-577095603,https://github.com/bitcoin/bitcoin/pull/17975#issuecomment-580730613,580730613,
laanwj,2020-02-05 13:57:37,Concept ACK,https://github.com/bitcoin/bitcoin/pull/17975#issuecomment-582419401,582419401,
jachiang,2020-03-14 13:56:12,"Apologies for the delay updating this PR. \n\nf8a30b4c7 includes rebase and changes suggested by reviewers so far. ",https://github.com/bitcoin/bitcoin/pull/17975#issuecomment-599064494,599064494,
JeremyRubin,2021-08-06 15:51:38,"Another option here which might not be too bad in the scheme of things would be to check in a WASM blob that is gitian built of e.g. rust miniscript, and then call it using a wasm runtime https://github.com/wasmerio/wasmer-python\n\nthe main benefit being we don't have to check in yet another implementation of miniscript to maintain as miniscript evolves, we can use the rust or c++ one today, an",https://github.com/bitcoin/bitcoin/pull/17975#issuecomment-894352293,894352293,
jachiang,2021-08-07 13:51:47,"> the main benefit being we don't have to check in yet another implementation of miniscript to maintain as miniscript evolves, we can use the rust or c++ one today, and when the C++ becomes merged & available as an RPC we can drop it.\n\nIn the absence of a formal, (mechanizable) specification of Miniscript (MS), separate implementations have higher chances of finding bugs or problems than a sin",https://github.com/bitcoin/bitcoin/pull/17975#issuecomment-894657750,894657750,
dgpv,2020-01-21 18:41:15,"should be `=` rather than `+=` in two lines above, otherwise `child_is_e` will be converted to int and will always be `>= 1`",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r369175249,369175249,test/functional/test_framework/miniscript.py
dgpv,2020-01-21 18:54:09,why not `child.t.name.startswith('WRAP_')` ?,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r369181782,369181782,test/functional/test_framework/miniscript.py
jachiang,2020-01-21 19:38:32,That's much better. Thx.,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r369203105,369203105,test/functional/test_framework/miniscript.py
jachiang,2020-01-21 19:41:32,Excellent catch. Thank you for review.,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r369204453,369204453,test/functional/test_framework/miniscript.py
emilengler,2020-01-22 12:51:08,"Please change this to ""The Bitcoin Core developers"" or add your name on line 105 in https://github.com/bitcoin/bitcoin/blob/master/contrib/devtools/copyright_header.py\n\nOtherwise it will get overridden by the copyright-headers script",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r369540740,369540740,test/functional/feature_miniscript.py
jachiang,2020-01-22 13:10:34,"Thank you for the review and tip, will gladly amend copyright header as you suggested!",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r369549291,369549291,test/functional/feature_miniscript.py
sanket1729,2020-02-02 00:07:28,"I think this should be ` prop_str += ""f"" if child_x.p.s or child_y.p.f else """" ` . Since the left child must have a base type`V`, it always has malleability property `f`. The above statement will make all `and_v` has property `f`. \nThere is only one possible non-canonical dissat being [sat(X), dissat(Y)] which gives us self.f = `sx or fy`. \n\nOne valid miniscript counter-example: `and_v(vc:pk",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r373809703,373809703,test/functional/test_framework/miniscript.py
sanket1729,2020-02-02 03:47:30,Should be `f=fxfy or sxfx or syfy`,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r373816993,373816993,test/functional/test_framework/miniscript.py
sanket1729,2020-02-02 04:48:41,Nit: Always `d`,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r373819067,373819067,test/functional/test_framework/miniscript.py
sanket1729,2020-02-02 05:00:18,Nit: Can never be f. Convert to an assertion?,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r373819524,373819524,test/functional/test_framework/miniscript.py
sanket1729,2020-02-02 05:23:56,I think this should be `or` instead of `and`?,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r373820402,373820402,test/functional/test_framework/miniscript.py
sanket1729,2020-02-02 05:26:40,unnecessary since it's already added at the start of function,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r373820482,373820482,test/functional/test_framework/miniscript.py
sanket1729,2020-02-02 05:28:17,This should never happen. Maybe replace it with an assertion?,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r373820527,373820527,test/functional/test_framework/miniscript.py
sanket1729,2020-02-02 05:46:31,Missing both V condition,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r373821064,373821064,test/functional/test_framework/miniscript.py
sanket1729,2020-02-02 05:52:16,f = fz and (sx or fy),https://github.com/bitcoin/bitcoin/pull/17975#discussion_r373821331,373821331,test/functional/test_framework/miniscript.py
sanket1729,2020-02-02 06:31:47,"Should be if ""Bdu"" if is_B, otherwise """"",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r373822958,373822958,test/functional/test_framework/miniscript.py
jachiang,2020-02-02 08:40:08,Yes absolutely! Thanks for the correction!,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r373829160,373829160,test/functional/test_framework/miniscript.py
jachiang,2020-02-02 08:42:29,"Ah yes, both V are from revised rules.",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r373829295,373829295,test/functional/test_framework/miniscript.py
jachiang,2020-02-02 08:44:16,"Got it, revised rules again :)",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r373829390,373829390,test/functional/test_framework/miniscript.py
jachiang,2020-02-02 08:50:02,"This was a mistake in encoding the property rules, thank you.",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r373829712,373829712,test/functional/test_framework/miniscript.py
JeremyRubin,2020-07-05 17:54:07,"Should be type ""V"" if both ""V"".",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r449902553,449902553,test/functional/test_framework/miniscript.py
darosior,2021-08-01 19:57:47,"nit: since we are returning `False` on invalid by conflicts below, let's just return `False` here too?",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r680558400,680558400,test/functional/test_framework/miniscript.py
darosior,2021-08-01 20:24:56,"`W`Â conflicts with `n`, too.",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r680561414,680561414,test/functional/test_framework/miniscript.py
darosior,2021-08-02 06:55:29,It was renamed to `PK_K`,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r680699193,680699193,test/functional/test_framework/miniscript.py
darosior,2021-08-02 06:55:45,Now renamed to `MULTI`,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r680699345,680699345,test/functional/test_framework/miniscript.py
darosior,2021-08-02 14:55:51,(and `pk()` is now an alias for `c:pk_k()`),https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681042120,681042120,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:05:04,`pk` is `x`,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681049641,681049641,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:05:23,`pk_h` is `x` too,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681049885,681049885,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:32:12,The `x` property isn't part of Miniscript itself and is an implementation detail of the C++ implem so i wonder if it's not clearer here to just use a boolean member to the `Node` class instead.,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681071269,681071269,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:32:42,`after` and `older` are `x`,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681071699,681071699,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:36:27,`and_v` should inherit `x` from `y` too,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681074508,681074508,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:36:49,`and_b` is `x`,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681074836,681074836,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:38:03,`and_n` (like `and_or`) is `x` too,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681075817,681075817,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:38:31,`or_b` is `x` too,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681076207,681076207,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:38:45,`or_d` is `x` too,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681076367,681076367,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:38:59,`or_c` is `x`,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681076526,681076526,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:39:21,`or_i` is `x`,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681076774,681076774,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:39:40,`and_or` is `x`,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681076986,681076986,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:52:15,`a:` is `x`,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681086702,681086702,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:53:41,Should inherit `x` too,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681087735,681087735,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:55:05,"I think `t:` is `x` since it's `and_v(X, 1)` and `1`Â is `x`.",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681088825,681088825,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:55:37,`d:` and `v:` are `x`,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681089205,681089205,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:55:55,`j:` is `x`,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681089414,681089414,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:56:38,`n` is `x` too,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681089950,681089950,test/functional/test_framework/miniscript.py
darosior,2021-08-02 15:57:37,`l:`Â and `u:` should be `x` since `or_i()` is,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681090584,681090584,test/functional/test_framework/miniscript.py
darosior,2021-08-02 16:18:27,"You don't even actually use it actually (you match against `child_script[-1]` to check if you need to append `VERIFY`), so i'd say it's better to not have it at all (and therefore to ignore my comments regarding missing `x`s in the following commits).",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681104862,681104862,test/functional/test_framework/miniscript.py
darosior,2021-08-02 16:25:12,That's super nit but i find it nicer to have an optional argument to the constructor instead of `from_string()` and use `__repr__` instead of `to_string()`,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681109249,681109249,test/functional/test_framework/miniscript.py
darosior,2021-08-02 16:33:04,"In addition to `pk` being renamed to `pk_k`, `pk` is now an alias for `c:pk_k` (so we need to keep matching this tag)",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681114469,681114469,test/functional/test_framework/miniscript.py
darosior,2021-08-02 16:36:27,This function doesn't exist as of this commit.,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681116827,681116827,test/functional/test_framework/miniscript.py
darosior,2021-08-02 16:37:17,`thresh`Â now supports `k == 1`Â or `k == n`.,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681117333,681117333,test/functional/test_framework/miniscript.py
darosior,2021-08-03 07:53:42,Why `5`? It wouldn't match `1 <pk> 1 CMS`?,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681523358,681523358,test/functional/test_framework/miniscript.py
darosior,2021-08-03 08:06:52,Why `k`? I think you rather want to iterate from `idx` to `expr_list_len-2` here?,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681532313,681532313,test/functional/test_framework/miniscript.py
darosior,2021-08-03 14:15:52,"This should check that `child_x` is `V` and y is `B`, `K` or `V`",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r681802030,681802030,test/functional/test_framework/miniscript.py
darosior,2021-08-04 08:28:42,This needs to check that `child_x` is `V`,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r682402887,682402887,test/functional/test_framework/miniscript.py
darosior,2021-08-04 10:38:12,"Similarly as for `pk()`, `pkh()` is now an alias for `c:pk_h()`.",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r682497072,682497072,test/functional/test_framework/miniscript.py
darosior,2021-08-04 11:11:22,"This should also check the other boundary imo:\n```python\nassert delay > 0 and delay < 2**31\n```",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r682518289,682518289,test/functional/test_framework/miniscript.py
darosior,2021-08-04 11:19:50,"This should check `Bdu`Â for `x` and either `B`, `K` or `V`Â for both y and z.\n```python\n        # X is Bdu; Y and Z are both B, K, or V\n        assert all([getattr(child_x.p, pt) for pt in ""Bdu""])\n        for child in child_y, child_z:\n            assert any([getattr(child.p, t) for t in ""BKV""])\n```",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r682523060,682523060,test/functional/test_framework/miniscript.py
darosior,2021-08-04 11:23:08,`x` must be `B` and `y` must be `W`..,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r682525185,682525185,test/functional/test_framework/miniscript.py
darosior,2021-08-04 11:29:15,"or_b(X,Z) | X is Bd; Z is Wd",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r682529133,682529133,test/functional/test_framework/miniscript.py
darosior,2021-08-04 11:29:34,"or_d(X,Z) | X is Bdu; Z is B",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r682529339,682529339,test/functional/test_framework/miniscript.py
darosior,2021-08-04 11:30:32,"or_i(X,Z) | both are B, K, or V",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r682529925,682529925,test/functional/test_framework/miniscript.py
darosior,2021-08-04 15:08:34,"`pk_h` is defined as taking a key, not a key hash. Different implementors have different opinions on this but we need to at least be able to parse pk_h() nodes with keys.",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r682707659,682707659,test/functional/test_framework/miniscript.py
darosior,2021-08-05 11:05:13,"Script Numbers are little endian. Also, you don't check if the sign bit is set. Consider something like so (what i'm using for python-miniscript):\n```python\nclass ScriptNumError(ValueError):\n    def __init__(self, message):\n        self.message = message\n\n\ndef read_script_number(data):\n    """"""Read a Script number from {data} bytes""""""\n    size = len(data)\n    if size > 4:\n    ",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r683353332,683353332,test/functional/test_framework/miniscript.py
darosior,2021-08-06 07:30:39,`X` must be `B`,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r684013210,684013210,test/functional/test_framework/miniscript.py
darosior,2021-08-06 08:45:55,X is Bdu; Z is V,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r684064607,684064607,test/functional/test_framework/miniscript.py
darosior,2021-08-06 08:46:33,X is Vz,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r684064998,684064998,test/functional/test_framework/miniscript.py
darosior,2021-08-06 09:01:31,X is Bn,https://github.com/bitcoin/bitcoin/pull/17975#discussion_r684075249,684075249,test/functional/test_framework/miniscript.py
darosior,2021-08-06 09:04:39,"X must be B, K or V",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r684077295,684077295,test/functional/test_framework/miniscript.py
darosior,2021-08-06 09:16:37,"X is Bdu; Y and Z are both B, K, or V",https://github.com/bitcoin/bitcoin/pull/17975#discussion_r684085045,684085045,test/functional/test_framework/miniscript.py
