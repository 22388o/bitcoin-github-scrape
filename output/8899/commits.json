[
  {
    "sha": "49be9f0c88b2bb8d1409c138f92e0cf753807353",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OWJlOWYwYzg4YjJiYjhkMTQwOWMxMzhmOTJlMGNmNzUzODA3MzUz",
    "commit": {
      "author": {
        "name": "Michael Ford",
        "email": "fanquake@gmail.com",
        "date": "2016-10-07T11:05:53Z"
      },
      "committer": {
        "name": "Michael Ford",
        "email": "fanquake@gmail.com",
        "date": "2016-10-07T11:05:53Z"
      },
      "message": "Fix wake from sleep issue with Boost 1.59.0",
      "tree": {
        "sha": "6545ad028c68f0439b2ca9e66d6f060bca2f441e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6545ad028c68f0439b2ca9e66d6f060bca2f441e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49be9f0c88b2bb8d1409c138f92e0cf753807353",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49be9f0c88b2bb8d1409c138f92e0cf753807353",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/49be9f0c88b2bb8d1409c138f92e0cf753807353",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49be9f0c88b2bb8d1409c138f92e0cf753807353/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a916677ace1c214f1c87f3a383cdc0d38dee8831",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a916677ace1c214f1c87f3a383cdc0d38dee8831",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a916677ace1c214f1c87f3a383cdc0d38dee8831"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 33,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2bedbc6f18f2aa39a462013e81670edd32253285",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49be9f0c88b2bb8d1409c138f92e0cf753807353/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49be9f0c88b2bb8d1409c138f92e0cf753807353/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=49be9f0c88b2bb8d1409c138f92e0cf753807353",
        "patch": "@@ -3,6 +3,7 @@ $(package)_version=1_59_0\n $(package)_download_path=http://sourceforge.net/projects/boost/files/boost/1.59.0\n $(package)_file_name=$(package)_$($(package)_version).tar.bz2\n $(package)_sha256_hash=727a932322d94287b62abb1bd2d41723eec4356a7728909e38adb65ca25241ca\n+$(package)_patches=fix-win-wake-from-sleep.patch\n \n define $(package)_set_vars\n $(package)_config_opts_release=variant=release\n@@ -25,6 +26,7 @@ $(package)_cxxflags_linux=-fPIC\n endef\n \n define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/fix-win-wake-from-sleep.patch && \\\n   echo \"using $(boost_toolset_$(host_os)) : : $($(package)_cxx) : <cxxflags>\\\"$($(package)_cxxflags) $($(package)_cppflags)\\\" <linkflags>\\\"$($(package)_ldflags)\\\" <archiver>\\\"$(boost_archiver_$(host_os))\\\" <striper>\\\"$(host_STRIP)\\\"  <ranlib>\\\"$(host_RANLIB)\\\" <rc>\\\"$(host_WINDRES)\\\" : ;\" > user-config.jam\n endef\n "
      },
      {
        "sha": "8fb4d3028bf5ab3797b52a5ab528479e3fc95f5e",
        "filename": "depends/patches/boost/fix-win-wake-from-sleep.patch",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49be9f0c88b2bb8d1409c138f92e0cf753807353/depends/patches/boost/fix-win-wake-from-sleep.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49be9f0c88b2bb8d1409c138f92e0cf753807353/depends/patches/boost/fix-win-wake-from-sleep.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/fix-win-wake-from-sleep.patch?ref=49be9f0c88b2bb8d1409c138f92e0cf753807353",
        "patch": "@@ -0,0 +1,31 @@\n+--- old/libs/thread/src/win32/thread.cpp\n++++ new/libs/thread/src/win32/thread.cpp\n+@@ -645,7 +645,7 @@\n+                     } Detailed;\n+                 } Reason;\n+             } REASON_CONTEXT, *PREASON_CONTEXT;\n+-            static REASON_CONTEXT default_reason_context={0/*POWER_REQUEST_CONTEXT_VERSION*/, 0x00000001/*POWER_REQUEST_CONTEXT_SIMPLE_STRING*/, (LPWSTR)L\"generic\"};\n++            //static REASON_CONTEXT default_reason_context={0/*POWER_REQUEST_CONTEXT_VERSION*/, 0x00000001/*POWER_REQUEST_CONTEXT_SIMPLE_STRING*/, (LPWSTR)L\"generic\"};\n+             typedef BOOL (WINAPI *setwaitabletimerex_t)(HANDLE, const LARGE_INTEGER *, LONG, PTIMERAPCROUTINE, LPVOID, PREASON_CONTEXT, ULONG);\n+             static inline BOOL WINAPI SetWaitableTimerEx_emulation(HANDLE hTimer, const LARGE_INTEGER *lpDueTime, LONG lPeriod, PTIMERAPCROUTINE pfnCompletionRoutine, LPVOID lpArgToCompletionRoutine, PREASON_CONTEXT WakeContext, ULONG TolerableDelay)\n+             {\n+@@ -715,7 +715,8 @@\n+                     if(time_left.milliseconds/20>tolerable)  // 5%\n+                         tolerable=time_left.milliseconds/20;\n+                     LARGE_INTEGER due_time=get_due_time(target_time);\n+-                    bool const set_time_succeeded=detail_::SetWaitableTimerEx()(timer_handle,&due_time,0,0,0,&detail_::default_reason_context,tolerable)!=0;\n++                    //bool const set_time_succeeded=detail_::SetWaitableTimerEx()(timer_handle,&due_time,0,0,0,&detail_::default_reason_context,tolerable)!=0;\n++                    bool const set_time_succeeded=detail_::SetWaitableTimerEx()(timer_handle,&due_time,0,0,0,NULL,tolerable)!=0;\n+                     if(set_time_succeeded)\n+                     {\n+                         timeout_index=handle_count;\n+@@ -799,7 +800,8 @@\n+                     if(time_left.milliseconds/20>tolerable)  // 5%\n+                         tolerable=time_left.milliseconds/20;\n+                     LARGE_INTEGER due_time=get_due_time(target_time);\n+-                    bool const set_time_succeeded=detail_::SetWaitableTimerEx()(timer_handle,&due_time,0,0,0,&detail_::default_reason_context,tolerable)!=0;\n++                    //bool const set_time_succeeded=detail_::SetWaitableTimerEx()(timer_handle,&due_time,0,0,0,&detail_::default_reason_context,tolerable)!=0;\n++                    bool const set_time_succeeded=detail_::SetWaitableTimerEx()(timer_handle,&due_time,0,0,0,NULL,tolerable)!=0;\n+                     if(set_time_succeeded)\n+                     {\n+                         timeout_index=handle_count;"
      }
    ]
  }
]