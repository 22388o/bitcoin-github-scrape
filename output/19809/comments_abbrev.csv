DrahtBot,2020-08-26 01:07:25,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21102 (Log: Add debug log category tag by wodry)\n* #16673 (Relog configuration args on debug.log rotation by LarryRuane)",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-680400546,680400546,
theStack,2020-08-26 03:53:49,"Concept ACK\n(although I would suggest improving the PR description with s/mcedit/vim :stuck_out_tongue_winking_eye:)\nNice time-saving idea -- I think many core devs are familiar with your described cycle and could benefit from this.\nAfter this gets into master, I suggest also passing it by default to nodes in the test framework.",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-680535659,680535659,
laanwj,2020-08-27 09:03:32,"Concept ACK. After this we can start removing the explicit `__func__` in logging calls, I guess, which is very inconsistently used.\n",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-681822628,681822628,
jamesob,2020-09-01 01:16:48,"Concept ACK, will review in the next few days",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-684133358,684133358,
laanwj,2020-09-01 12:54:29,"Code review and  tested ACK bd71653bfc312b10ca6b578b7c3accd0155b1a20\nI think this is great for developers, but for the sake of not making default logging too wide / spammy I would prefer not to enable it by default (but it isn't in this PR).\n\nEdit: I somewhat wonder how much larger this makes the executable. This adds a string for every function that has logging. I don't think it's too bad, ",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-684830873,684830873,
instagibbs,2020-09-03 19:08:21,"Ooh, concept ACK",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-686701133,686701133,
instagibbs,2020-09-03 19:11:14,Wouldn't hurt I think to have this active for a single test at least?,https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-686702471,686702471,
sipa,2020-09-15 21:34:33,"It seems I'll be in a minority here, but I don't think this is very useful in the current form.\n\nIf the goal is to avoid the need for searching the source code to find where a message originated, it would be better to include file/line number instead of (or at least in addition to) the function name. Function names can be ambiguous, and do occasionally move from one file to another, so just th",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-692992061,692992061,
theStack,2020-09-15 22:27:33,"@sipa: Agreed that the PR doesn't eliminate the need to grep completely, but I think the main focus is to get rid of the burdensome part of figuring out _what_ to grep in the first place (as expressed in the PR description ""try to figure out a regexp matching the static part of the dynamic log message""). That can sometimes take quite some iterations or is not even possible at all of the log messag",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-693012687,693012687,
sipa,2020-09-16 00:40:28,"> ""try to figure out a regexp matching the static part of the dynamic log message""\n\nThat's a good point, I had missed this. I think it can be partially addressed with just better log messages, but this PR is a useful catch-all improvement with little code changes.",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-693102397,693102397,
practicalswift,2020-09-29 18:01:25,"@instagibbs \n\n> Wouldn't hurt I think to have this active for a single test at least?\n\nNow enabled for the unit tests and the functional tests.\n\n@theStack \n\n> That said, also showing file and line number can for sure also be helpful. Maybe via verbosity levels?\n\nI think that should be a separate option (`-logsourcelocation` perhaps?). However, that is out of scope for this PR.",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-700884084,700884084,
practicalswift,2020-12-01 12:53:16,Anything left to do here? :),https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-736532924,736532924,
practicalswift,2020-12-01 14:58:46,Rebased and bumped version check :),https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-736606896,736606896,
jonasschnelli,2020-12-01 19:18:33,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-736763044,736763044,
jnewbery,2020-12-29 16:04:41,"Concept ACK, if only to remove the `__func__` and explicit function names in existing logs.",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-752137043,752137043,
ajtowns,2021-01-14 09:32:05,"> This is a small developer ergonomics improvement: I've found this to be a cheap/simple way to correlate log output and originating function.\n\nWouldn't it be slightly better to also include the line number (or filename and line) as well then?",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-760075069,760075069,
MarcoFalke,2021-01-14 09:59:53,@practicalswift Mind replying to the open questions in any way? Would be good to make progress here.,https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-760090105,760090105,
practicalswift,2021-01-14 11:08:24,"> > This is a small developer ergonomics improvement: I've found this to be a cheap/simple way to correlate log output and originating function.\n> \n> Wouldn't it be slightly better to also include the line number (or filename and line) as well then?\n\nSure, that's a good idea but that would be out of scope for `-logfunctionnames` which this PR adds.\n\nA follow-up PR can add say `-logsour",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-760127107,760127107,
ajtowns,2021-01-14 11:18:56,"> > > This is a small developer ergonomics improvement: I've found this to be a cheap/simple way to correlate log output and originating function.\n> > \n> > Wouldn't it be slightly better to also include the line number (or filename and line) as well then?\n> \n> Sure, that's a good idea but that would be out of scope for `-logfunctionnames` which this PR adds.\n> \n> A follow-up PR can add",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-760132620,760132620,
MarcoFalke,2021-01-14 11:33:41,"review ACK 9f5fc7eb55f8a19f6002f4cfe92e76c574ee8749\n\nI am also ok with printing the file:line as well when `-logfunctionnames` is set.",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-760140316,760140316,
practicalswift,2021-01-14 12:04:23,"@ajtowns \n\n> Having two options seems like overkill; why not make this one introduce -logsourcelocation which adds file/line/func to the logs\n\n@MarcoFalke \n\n> I am also ok with printing the file:line as well when -logfunctionnames is set.\n\nBeing the very flexible person I am I have now added the `file:line` feature to satisfy the overwhelming public demand :)\n\nLive demo:\n\n`",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-760154490,760154490,
MarcoFalke,2021-01-14 12:43:10,review ACK 09b974587ff90834c3559c15b3ab7d9489c65d65,https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-760172654,760172654,
practicalswift,2021-01-15 10:29:37,"@ajtowns \n\nThanks for reviewing!\n\n> `2021-01-15T06:44:32Z [./util/system.h:449] [TraceThread] torcontrol thread start`\n>\n> with a leading ""./"" -- might be due to us using #include <> which implies an include path search?\n\nNow removing leading `./` which gives us:\n\n`2021-01-15T06:44:32Z [util/system.h:449] [TraceThread] torcontrol thread start`\n\nPlease re-review :)",https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-760810607,760810607,
laanwj,2021-02-18 13:25:48,Code review ACK b4511e2e2ed1a6077ae6826a9ee6b7a311293d08,https://github.com/bitcoin/bitcoin/pull/19809#issuecomment-781341757,781341757,
theStack,2020-10-11 16:45:32,"v0.20.0 is already released and obviously doesn't include this new feature that is not even merged on master.\n```suggestion\n        if self.version_is_at_least(209900):\n```",https://github.com/bitcoin/bitcoin/pull/19809#discussion_r502938730,502938730,test/functional/test_framework/test_node.py
practicalswift,2020-10-13 13:30:20,"Oh, thanks! Fix pushed.",https://github.com/bitcoin/bitcoin/pull/19809#discussion_r503952754,503952754,test/functional/test_framework/test_node.py
MarcoFalke,2020-12-01 13:00:37,needs rebase,https://github.com/bitcoin/bitcoin/pull/19809#discussion_r533389365,533389365,test/functional/test_framework/test_node.py
practicalswift,2020-12-01 13:32:19,Thanks! Rebased! :),https://github.com/bitcoin/bitcoin/pull/19809#discussion_r533408585,533408585,test/functional/test_framework/test_node.py
MarcoFalke,2020-12-01 13:37:33,I tried to say that this is a silent merge conflict. The version needs to be adjusted with the rebase as well,https://github.com/bitcoin/bitcoin/pull/19809#discussion_r533411964,533411964,test/functional/test_framework/test_node.py
MarcoFalke,2021-01-05 11:36:04,Does this line need to be changed?,https://github.com/bitcoin/bitcoin/pull/19809#discussion_r551878343,551878343,src/logging.h
MarcoFalke,2021-01-05 11:37:16,"```suggestion\n    LogInstance().m_log_functionnames = args.GetBoolArg(""-logfunctionnames"", DEFAULT_LOGFUNCTIONNAMES);\n```\n\nnit: Would be nice to not introduce more gArgs",https://github.com/bitcoin/bitcoin/pull/19809#discussion_r551878910,551878910,src/init.cpp
practicalswift,2021-01-14 11:07:05,Good point. Fixed!,https://github.com/bitcoin/bitcoin/pull/19809#discussion_r557315879,557315879,src/logging.h
practicalswift,2021-01-14 11:07:13,Good point. Fixed!,https://github.com/bitcoin/bitcoin/pull/19809#discussion_r557315945,557315945,src/init.cpp
ajtowns,2021-01-15 06:46:09,nit: I thought `-logsourcelocation` was a better name,https://github.com/bitcoin/bitcoin/pull/19809#discussion_r557909719,557909719,src/init.cpp
ajtowns,2021-01-15 06:47:04,"If I'd written it, I would have preferred `[foo.cpp:123:Function()]` vs `[foo.cpp:123] [Function]`",https://github.com/bitcoin/bitcoin/pull/19809#discussion_r557910425,557910425,src/logging.cpp
btcslade,2021-01-15 08:24:58,Slight preference towards this style as well.,https://github.com/bitcoin/bitcoin/pull/19809#discussion_r558024576,558024576,src/logging.cpp
practicalswift,2021-01-15 10:03:01,Agreed! Now using `-logsourcelocations`. The plural suffix to be consistent with `-logthreadnames`.,https://github.com/bitcoin/bitcoin/pull/19809#discussion_r558174697,558174697,src/init.cpp
practicalswift,2021-01-15 10:06:11,"I tried with that, but I find the current version easier to parse.\n\nAs-is:\n\n```\n2021-01-15T10:00:03Z [init.cpp:1568] [AppInitMain] * Using 440.0 MiB for in-memory UTXO set (plus up to 286.1 MiB of unused mempool space)\n2021-01-15T10:00:03Z [noui.cpp:56] [noui_InitMessage] init message: Loading block index...                                                       \n2021-01-15T10:00:03Z ",https://github.com/bitcoin/bitcoin/pull/19809#discussion_r558179609,558179609,src/logging.cpp
