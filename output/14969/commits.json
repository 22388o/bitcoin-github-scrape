[
  {
    "sha": "d98a29ec408590e54f405a7f8d232cd9dc5b14da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOThhMjllYzQwODU5MGU1NGY0MDVhN2Y4ZDIzMmNkOWRjNWIxNGRh",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-12-15T08:59:24Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-12-15T15:14:36Z"
      },
      "message": "Fix cuckoocache_tests TSAN failure introduced in #14935. Fixes #14967.",
      "tree": {
        "sha": "296ebb3a7a3c3af2fd27c7527df4cc1a6b3e8edd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/296ebb3a7a3c3af2fd27c7527df4cc1a6b3e8edd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d98a29ec408590e54f405a7f8d232cd9dc5b14da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d98a29ec408590e54f405a7f8d232cd9dc5b14da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d98a29ec408590e54f405a7f8d232cd9dc5b14da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d98a29ec408590e54f405a7f8d232cd9dc5b14da/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9133227298ad97bbb10c44ac038f614c0bd7f7c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9133227298ad97bbb10c44ac038f614c0bd7f7c7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9133227298ad97bbb10c44ac038f614c0bd7f7c7"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 6,
      "deletions": 3
    },
    "files": [
      {
        "sha": "3469c6dfba98d0e164152459cb15df8db0b8a02f",
        "filename": "src/test/checkqueue_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d98a29ec408590e54f405a7f8d232cd9dc5b14da/src/test/checkqueue_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d98a29ec408590e54f405a7f8d232cd9dc5b14da/src/test/checkqueue_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/checkqueue_tests.cpp?ref=d98a29ec408590e54f405a7f8d232cd9dc5b14da",
        "patch": "@@ -355,7 +355,8 @@ BOOST_AUTO_TEST_CASE(test_CheckQueue_FrozenCleanup)\n         // would get called twice).\n         vChecks[0].should_freeze = true;\n         control.Add(vChecks);\n-        BOOST_CHECK(control.Wait()); // Hangs here\n+        bool waitResult = control.Wait(); // Hangs here\n+        assert(waitResult);\n     });\n     {\n         std::unique_lock<std::mutex> l(FrozenCleanupCheck::m);"
      },
      {
        "sha": "d8286520ec75d259d6078eb6a1d801d09735bb19",
        "filename": "src/test/cuckoocache_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d98a29ec408590e54f405a7f8d232cd9dc5b14da/src/test/cuckoocache_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d98a29ec408590e54f405a7f8d232cd9dc5b14da/src/test/cuckoocache_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/cuckoocache_tests.cpp?ref=d98a29ec408590e54f405a7f8d232cd9dc5b14da",
        "patch": "@@ -220,8 +220,10 @@ static void test_cache_erase_parallel(size_t megabytes)\n             size_t ntodo = (n_insert/4)/3;\n             size_t start = ntodo*x;\n             size_t end = ntodo*(x+1);\n-            for (uint32_t i = start; i < end; ++i)\n-                BOOST_CHECK(set.contains(hashes[i], true));\n+            for (uint32_t i = start; i < end; ++i) {\n+                bool contains = set.contains(hashes[i], true);\n+                assert(contains);\n+            }\n         });\n \n     /** Wait for all threads to finish"
      }
    ]
  }
]