Empact,2018-07-11T05:23:17Z,"For reference:\nhttps://github.com/bitcoin/bitcoin/blob/062738cf69a27192ecb9014f79a8a9b5cbd06a7d/src/wallet/wallet.cpp#L4435-L4438",https://github.com/bitcoin/bitcoin/pull/13631#issuecomment-404048736,404048736,
practicalswift,2018-07-12T14:28:19Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/13631#issuecomment-404531740,404531740,
promag,2018-07-12T15:30:19Z,Concept ACK. Makes the intention clear. Agree with @251Labs points.,https://github.com/bitcoin/bitcoin/pull/13631#issuecomment-404552954,404552954,
Empact,2018-07-12T18:13:43Z,"Added docs, moved the implementations together.\n\nI also noticed that the result of `GetBlocksToMaturity` would be inaccurate if the TX was marked as conflicted - my impression is that coinbase transactions can't be conflicting, so I added an assert to make that expectation explicit:\nhttps://github.com/bitcoin/bitcoin/pull/13631/files#diff-b2bb174788c7409b671c46ccc86034bdR4440",https://github.com/bitcoin/bitcoin/pull/13631#issuecomment-404602488,404602488,
Empact,2018-07-13T16:48:11Z,Moved the GetBlocksToMaturity assert out into #13657,https://github.com/bitcoin/bitcoin/pull/13631#issuecomment-404889443,404889443,
Empact,2018-07-14T03:49:24Z,"Rebased for #13630, #13072",https://github.com/bitcoin/bitcoin/pull/13631#issuecomment-404996198,404996198,
l2a5b1,2018-07-19T22:09:02Z,"Nice, utACK 860e214",https://github.com/bitcoin/bitcoin/pull/13631#issuecomment-406429662,406429662,
promag,2018-07-19T22:24:03Z,utACK 860e214.,https://github.com/bitcoin/bitcoin/pull/13631#issuecomment-406432830,406432830,
MarcoFalke,2018-07-19T23:36:06Z,utACK 860e214f7ba899efae397205891181056adf3fc2,https://github.com/bitcoin/bitcoin/pull/13631#issuecomment-406445391,406445391,
Empact,2018-07-25T14:57:24Z,Rebased for #12257,https://github.com/bitcoin/bitcoin/pull/13631#issuecomment-407784369,407784369,
MarcoFalke,2018-07-27T15:55:36Z,re-utACK bb653872be8d251c21ee32c2948100b7febbd477,https://github.com/bitcoin/bitcoin/pull/13631#issuecomment-408461806,408461806,
promag,2018-07-27T18:26:18Z,re-utACK bb65387.,https://github.com/bitcoin/bitcoin/pull/13631#issuecomment-408501436,408501436,
Empact,2018-07-29T23:51:06Z,"Noticed the whitespace was off. Diff:\n\n```diff\ndiff --git a/src/wallet/wallet.cpp b/src/wallet/wallet.cpp\nindex fc6f03a16..540a7b0fc 100644\n--- a/src/wallet/wallet.cpp\n+++ b/src/wallet/wallet.cpp\n@@ -1926,8 +1926,7 @@ CAmount CWalletTx::GetCredit(const isminefilter& filter) const\n \n CAmount CWalletTx::GetImmatureCredit(bool fUseCache) const\n {\n-    if (IsImmatureCoinBase() &&",https://github.com/bitcoin/bitcoin/pull/13631#issuecomment-408714880,408714880,
DrahtBot,2018-08-01T00:27:54Z,<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #14023 (Remove accounts rpcs by jnewbery)\n* #13083 (Add compile time checking for cs_main runtime locking assertions by practicalswift)\n* #10973 (Refactor: separate wallet from node by ryanofsky)\n* #10102 ([experimental] Multiprocess bitcoin by ryanofsky)\n\nIf you consider this p,https://github.com/bitcoin/bitcoin/pull/13631#issuecomment-409410014,409410014,
laanwj,2018-08-25T14:53:02Z,utACK 23f434378153cf764230066662f3ec3ad614ff30,https://github.com/bitcoin/bitcoin/pull/13631#issuecomment-415974542,415974542,
l2a5b1,2018-07-11T14:59:55Z,"Nits: Maybe move the comment to the function body, because it's an implementation detail of `IsImmatureCoinbase`; and update the comment by replacing ""is"" with ""returns"".",https://github.com/bitcoin/bitcoin/pull/13631#discussion_r201724396,201724396,src/wallet/wallet.h
l2a5b1,2018-07-11T17:18:02Z,"It seems safe to optimize this boolean expression and remove the `IsCoinBase()` condition in `IsImmatureCoinBase`, because `GetBlocksToMaturity` already calls `IsCoinBase`, which effectively makes this condition redundant. \n\nI do however appreciate the defensiveness of having the redundant`IsCoinBase()` condition; it is not specified that `GetBlocksToMaturity` must return `0` if it is not a co",https://github.com/bitcoin/bitcoin/pull/13631#discussion_r201774241,201774241,src/wallet/wallet.cpp
l2a5b1,2018-07-11T17:33:48Z,"If we are going to rely on the result of `GetBlocksToMaturity`, and not defensively call `IsCoinBase()`, a unit test would be nice to verify the expected behaviour. ",https://github.com/bitcoin/bitcoin/pull/13631#discussion_r201779033,201779033,src/wallet/wallet.h
