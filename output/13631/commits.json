[
  {
    "sha": "23f434378153cf764230066662f3ec3ad614ff30",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyM2Y0MzQzNzgxNTNjZjc2NDIzMDA2NjY2MmYzZWMzYWQ2MTRmZjMw",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-07-11T05:17:59Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-07-29T23:49:14Z"
      },
      "message": "Add CMerkleTx::IsImmatureCoinBase method\n\nAll but one call to GetBlocksToMaturity is testing it relative to 0\nfor the purposes of determining whether the coinbase tx is immature.\nIn such case, the value greater than 0 implies that the tx is coinbase,\nso there is no need to separately test that status.\n\nThis names the concept for easy singular use.",
      "tree": {
        "sha": "cc049ebe24f4323b63c040618485280f9108700d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc049ebe24f4323b63c040618485280f9108700d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23f434378153cf764230066662f3ec3ad614ff30",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbXlJ8AAoJEG7l83hfeLNFtUUIALHx1v0zJOSfd17L8tqmP+bm\ncTwxN1PZ765n2mnp+HZhi9jUs7CcF+54cWiycZeL6EASi+nrwOTrb2dNb13bsoBD\n/7BrmZ3zQ8tkuP8awd+Hf6RiAsSqY+gYsjeHDn7sZ9P+A9306SpLM4/P40QGujFW\n4MrpIfcFYnaPkWQbVS9+7ydPgfjtP8nDLYgJmxqyg5XzXUf8Pwyb/YVkDXMuT49q\nSahb79/2ET1r93ukkchl+v2FdaridjsoWTtIFUh/E5JxQGe9jI422jCqvpjIw/X5\nHqITtxCVK25eZkSXunrs5BA4of5ETc1pkQFDgB+ljZU7QURMlyfhucFLlnpc2Y8=\n=6Qok\n-----END PGP SIGNATURE-----",
        "payload": "tree cc049ebe24f4323b63c040618485280f9108700d\nparent 29b4ee64695f79511912ae127e66e0fe82f7a0d1\nauthor Ben Woosley <ben.woosley@gmail.com> 1531286279 -0400\ncommitter Ben Woosley <ben.woosley@gmail.com> 1532908154 -0400\n\nAdd CMerkleTx::IsImmatureCoinBase method\n\nAll but one call to GetBlocksToMaturity is testing it relative to 0\nfor the purposes of determining whether the coinbase tx is immature.\nIn such case, the value greater than 0 implies that the tx is coinbase,\nso there is no need to separately test that status.\n\nThis names the concept for easy singular use.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23f434378153cf764230066662f3ec3ad614ff30",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/23f434378153cf764230066662f3ec3ad614ff30",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23f434378153cf764230066662f3ec3ad614ff30/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29b4ee64695f79511912ae127e66e0fe82f7a0d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29b4ee64695f79511912ae127e66e0fe82f7a0d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29b4ee64695f79511912ae127e66e0fe82f7a0d1"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 21,
      "deletions": 11
    },
    "files": [
      {
        "sha": "84fd55edefa0f671c52ed032351762e5bdebb1b0",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23f434378153cf764230066662f3ec3ad614ff30/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23f434378153cf764230066662f3ec3ad614ff30/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=23f434378153cf764230066662f3ec3ad614ff30",
        "patch": "@@ -1851,7 +1851,7 @@ static void ListTransactions(CWallet* const pwallet, const CWalletTx& wtx, const\n                 {\n                     if (wtx.GetDepthInMainChain() < 1)\n                         entry.pushKV(\"category\", \"orphan\");\n-                    else if (wtx.GetBlocksToMaturity() > 0)\n+                    else if (wtx.IsImmatureCoinBase())\n                         entry.pushKV(\"category\", \"immature\");\n                     else\n                         entry.pushKV(\"category\", \"generate\");\n@@ -2147,7 +2147,7 @@ static UniValue listaccounts(const JSONRPCRequest& request)\n         std::list<COutputEntry> listReceived;\n         std::list<COutputEntry> listSent;\n         int nDepth = wtx.GetDepthInMainChain();\n-        if (wtx.GetBlocksToMaturity() > 0 || nDepth < 0)\n+        if (wtx.IsImmatureCoinBase() || nDepth < 0)\n             continue;\n         wtx.GetAmounts(listReceived, listSent, nFee, strSentAccount, includeWatchonly);\n         mapAccountBalances[strSentAccount] -= nFee;"
      },
      {
        "sha": "540a7b0fc6ffbd577508436512ba330212b66d9c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 9,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23f434378153cf764230066662f3ec3ad614ff30/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23f434378153cf764230066662f3ec3ad614ff30/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=23f434378153cf764230066662f3ec3ad614ff30",
        "patch": "@@ -1894,7 +1894,7 @@ CAmount CWalletTx::GetDebit(const isminefilter& filter) const\n CAmount CWalletTx::GetCredit(const isminefilter& filter) const\n {\n     // Must wait until coinbase is safely deep enough in the chain before valuing it\n-    if (IsCoinBase() && GetBlocksToMaturity() > 0)\n+    if (IsImmatureCoinBase())\n         return 0;\n \n     CAmount credit = 0;\n@@ -1926,8 +1926,7 @@ CAmount CWalletTx::GetCredit(const isminefilter& filter) const\n \n CAmount CWalletTx::GetImmatureCredit(bool fUseCache) const\n {\n-    if (IsCoinBase() && GetBlocksToMaturity() > 0 && IsInMainChain())\n-    {\n+    if (IsImmatureCoinBase() && IsInMainChain()) {\n         if (fUseCache && fImmatureCreditCached)\n             return nImmatureCreditCached;\n         nImmatureCreditCached = pwallet->GetCredit(*tx, ISMINE_SPENDABLE);\n@@ -1944,7 +1943,7 @@ CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter\n         return 0;\n \n     // Must wait until coinbase is safely deep enough in the chain before valuing it\n-    if (IsCoinBase() && GetBlocksToMaturity() > 0)\n+    if (IsImmatureCoinBase())\n         return 0;\n \n     CAmount* cache = nullptr;\n@@ -1985,8 +1984,7 @@ CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter\n \n CAmount CWalletTx::GetImmatureWatchOnlyCredit(const bool fUseCache) const\n {\n-    if (IsCoinBase() && GetBlocksToMaturity() > 0 && IsInMainChain())\n-    {\n+    if (IsImmatureCoinBase() && IsInMainChain()) {\n         if (fUseCache && fImmatureWatchCreditCached)\n             return nImmatureWatchCreditCached;\n         nImmatureWatchCreditCached = pwallet->GetCredit(*tx, ISMINE_WATCH_ONLY);\n@@ -2199,7 +2197,7 @@ CAmount CWallet::GetLegacyBalance(const isminefilter& filter, int minDepth, cons\n     for (const auto& entry : mapWallet) {\n         const CWalletTx& wtx = entry.second;\n         const int depth = wtx.GetDepthInMainChain();\n-        if (depth < 0 || !CheckFinalTx(*wtx.tx) || wtx.GetBlocksToMaturity() > 0) {\n+        if (depth < 0 || !CheckFinalTx(*wtx.tx) || wtx.IsImmatureCoinBase()) {\n             continue;\n         }\n \n@@ -2259,7 +2257,7 @@ void CWallet::AvailableCoins(std::vector<COutput> &vCoins, bool fOnlySafe, const\n         if (!CheckFinalTx(*pcoin->tx))\n             continue;\n \n-        if (pcoin->IsCoinBase() && pcoin->GetBlocksToMaturity() > 0)\n+        if (pcoin->IsImmatureCoinBase())\n             continue;\n \n         int nDepth = pcoin->GetDepthInMainChain();\n@@ -3521,7 +3519,7 @@ std::map<CTxDestination, CAmount> CWallet::GetAddressBalances()\n             if (!pcoin->IsTrusted())\n                 continue;\n \n-            if (pcoin->IsCoinBase() && pcoin->GetBlocksToMaturity() > 0)\n+            if (pcoin->IsImmatureCoinBase())\n                 continue;\n \n             int nDepth = pcoin->GetDepthInMainChain();\n@@ -4397,6 +4395,11 @@ int CMerkleTx::GetBlocksToMaturity() const\n     return std::max(0, (COINBASE_MATURITY+1) - GetDepthInMainChain());\n }\n \n+bool CMerkleTx::IsImmatureCoinBase() const\n+{\n+    // note GetBlocksToMaturity is 0 for non-coinbase tx\n+    return GetBlocksToMaturity() > 0;\n+}\n \n bool CWalletTx::AcceptToMemoryPool(const CAmount& nAbsurdFee, CValidationState& state)\n {"
      },
      {
        "sha": "8253dc1eba53a8c6d1b35cec4c507a16ce7952a6",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23f434378153cf764230066662f3ec3ad614ff30/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23f434378153cf764230066662f3ec3ad614ff30/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=23f434378153cf764230066662f3ec3ad614ff30",
        "patch": "@@ -266,13 +266,20 @@ class CMerkleTx\n      */\n     int GetDepthInMainChain() const;\n     bool IsInMainChain() const { return GetDepthInMainChain() > 0; }\n+\n+    /**\n+     * @return number of blocks to maturity for this transaction:\n+     *  0 : is not a coinbase transaction, or is a mature coinbase transaction\n+     * >0 : is a coinbase transaction which matures in this many blocks\n+     */\n     int GetBlocksToMaturity() const;\n     bool hashUnset() const { return (hashBlock.IsNull() || hashBlock == ABANDON_HASH); }\n     bool isAbandoned() const { return (hashBlock == ABANDON_HASH); }\n     void setAbandoned() { hashBlock = ABANDON_HASH; }\n \n     const uint256& GetHash() const { return tx->GetHash(); }\n     bool IsCoinBase() const { return tx->IsCoinBase(); }\n+    bool IsImmatureCoinBase() const;\n };\n \n //Get the marginal bytes of spending the specified output"
      }
    ]
  }
]