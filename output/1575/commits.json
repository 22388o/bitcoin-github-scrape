[
  {
    "sha": "2e00b8fbd9138c03a11af9f7cb5418b57cd0ddb5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZTAwYjhmYmQ5MTM4YzAzYTExYWY5ZjdjYjU0MThiNTdjZDBkZGI1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-07-10T13:19:57Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-07-11T07:01:11Z"
      },
      "message": "Persistently poll for balance change when number of blocks changed\n\nFixes #1452. Until we can make the logic water-tight *and* are notified in every\ncase the balance might have changed, remove the premature optimization and\nsimply recompute the balance every half a second when the number of blocks changed.",
      "tree": {
        "sha": "16f2181964d3e445d85f03be6ca65db30678bace",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16f2181964d3e445d85f03be6ca65db30678bace"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2e00b8fbd9138c03a11af9f7cb5418b57cd0ddb5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e00b8fbd9138c03a11af9f7cb5418b57cd0ddb5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2e00b8fbd9138c03a11af9f7cb5418b57cd0ddb5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e00b8fbd9138c03a11af9f7cb5418b57cd0ddb5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "232393e3bda19392d1a9727c81bad1796b6061a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/232393e3bda19392d1a9727c81bad1796b6061a8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/232393e3bda19392d1a9727c81bad1796b6061a8"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 10,
      "deletions": 15
    },
    "files": [
      {
        "sha": "3568616cd31f139a695e2106f4713b4e4f055b7a",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 15,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e00b8fbd9138c03a11af9f7cb5418b57cd0ddb5/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e00b8fbd9138c03a11af9f7cb5418b57cd0ddb5/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=2e00b8fbd9138c03a11af9f7cb5418b57cd0ddb5",
        "patch": "@@ -23,13 +23,10 @@ WalletModel::WalletModel(CWallet *wallet, OptionsModel *optionsModel, QObject *p\n     addressTableModel = new AddressTableModel(wallet, this);\n     transactionTableModel = new TransactionTableModel(wallet, this);\n \n-    // This single-shot timer will be fired from the 'checkBalancedChanged'\n-    // method repeatedly while either of the unconfirmed or immature balances\n-    // are non-zero\n+    // This timer will be fired repeatedly to update the balance\n     pollTimer = new QTimer(this);\n-    pollTimer->setInterval(MODEL_UPDATE_DELAY);\n-    pollTimer->setSingleShot(true);\n     connect(pollTimer, SIGNAL(timeout()), this, SLOT(pollBalanceChanged()));\n+    pollTimer->start(MODEL_UPDATE_DELAY);\n \n     subscribeToCoreSignals();\n }\n@@ -74,13 +71,12 @@ void WalletModel::updateStatus()\n \n void WalletModel::pollBalanceChanged()\n {\n-    if(nBestHeight != cachedNumBlocks) {\n+    if(nBestHeight != cachedNumBlocks)\n+    {\n+        // Balance and number of transactions might have changed\n         cachedNumBlocks = nBestHeight;\n         checkBalanceChanged();\n     }\n-\n-    if(cachedUnconfirmedBalance || cachedImmatureBalance)\n-        pollTimer->start();\n }\n \n void WalletModel::checkBalanceChanged()\n@@ -89,7 +85,8 @@ void WalletModel::checkBalanceChanged()\n     qint64 newUnconfirmedBalance = getUnconfirmedBalance();\n     qint64 newImmatureBalance = getImmatureBalance();\n \n-    if(cachedBalance != newBalance || cachedUnconfirmedBalance != newUnconfirmedBalance || cachedImmatureBalance != newImmatureBalance) {\n+    if(cachedBalance != newBalance || cachedUnconfirmedBalance != newUnconfirmedBalance || cachedImmatureBalance != newImmatureBalance)\n+    {\n         cachedBalance = newBalance;\n         cachedUnconfirmedBalance = newUnconfirmedBalance;\n         cachedImmatureBalance = newImmatureBalance;\n@@ -105,13 +102,11 @@ void WalletModel::updateTransaction(const QString &hash, int status)\n     // Balance and number of transactions might have changed\n     checkBalanceChanged();\n \n-    if(cachedUnconfirmedBalance || cachedImmatureBalance)\n-        pollTimer->start();\n-\n     int newNumTransactions = getNumTransactions();\n-    if(cachedNumTransactions != newNumTransactions) {\n-        emit numTransactionsChanged(newNumTransactions);\n+    if(cachedNumTransactions != newNumTransactions)\n+    {\n         cachedNumTransactions = newNumTransactions;\n+        emit numTransactionsChanged(newNumTransactions);\n     }\n }\n "
      }
    ]
  }
]