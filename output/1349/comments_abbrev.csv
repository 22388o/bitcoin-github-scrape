gmaxwell,2012-05-18T02:57:16Z,"Blown up by 6d64a0bfed8636da4a0a5b7a4bf68cff2abbf035, after merging by hand it dies because key.cpp doesn't #include &lt;sync.h&gt;.  Introduces a harmless looking  signed compare warning key.cpp:388:3.\n\nHave it running on a node now.\n",https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5779058,5779058,
jgarzik,2012-05-18T03:10:47Z,Code appears correct to me.  Comments inline...  IMO push those refactors into the tree immediately.\n,https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5779164,5779164,
gmaxwell,2012-05-18T03:21:18Z,"@jgarzik if your 'log-worthy event' comment is also on the oversized orphans (like 183 instead of 191), I thought the same thing.\n",https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5779253,5779253,
jgarzik,2012-05-18T03:23:13Z,"both, really\n",https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5779266,5779266,
gavinandresen,2012-05-18T14:24:38Z,"@gmaxwell : I want to keep this pull based on 0.6.2 in case we decide we need a 0.6.3.\n\n@jgarzik : ACK, I'll fix the comments. I think encapsulation in a class is overkill.\n\n@SergioDemianLerner  : excellent catch on vSpent, and I 100% agree this code needs extremely careful review and as much testing as we can throw at it.  I also like your suggestion to only cache valid signatures; it has the",https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5787180,5787180,
sipa,2012-05-20T23:45:28Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5813511,5813511,
SergioDemianLerner,2012-05-21T12:20:04Z,"Gavin: can you estimate the time it takes to verify a signature compared to the time it takes to get the result from the cache? There should be a factor of at least 100x between them, but the test code seems to disagree with this.\n",https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5821060,5821060,
gavinandresen,2012-05-21T12:33:19Z,"@SergioDemianLerner I'll isolate and benchmark the cache unit test to see why cached signatures are taking 50ms to validate.  Note that all of the CScript interpreter machinery is still being run (I am testing/measuring at the VerifySignature() level, not a the CKey:: level).\n",https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5821270,5821270,
gavinandresen,2012-05-22T16:31:42Z,What I did:\n\nUsed valgrind --tool=callgrind and hacked versions of test/DoS_tests.cpp to isolate and measure just the cached signature verification code.\n\nWhat I found:\n\nTwo things slow down cached signature verification:\n\n1) Decompressing compressed public keys. Using uncompressed public keys almost doubles performance (from 110ms to validate 500 inputs to 60ms). If we need/want to furthe,https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5851790,5851790,
SergioDemianLerner,2012-05-22T16:59:27Z,"Great! A lot of useful information! \nRemember that I had suggested caching (outpoint,script)->bool and not the signature verification (signature,pubkey)->bool to get all possible speedups. \n",https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5852538,5852538,
gmaxwell,2012-05-22T17:06:59Z,@SergioDemianLerner  Thats actually a bad idea.    Otherwise I can just create endless numbers of scripts of the form push $randomnumber pop  [normal script]   with no computation on my part in order to bypass the cache.\n,https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5852732,5852732,
SergioDemianLerner,2012-05-22T19:20:41Z,We're caching only the scripts that verify ok so that kind of attack does not work.\n,https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5856183,5856183,
SergioDemianLerner,2012-05-22T19:21:27Z,"Also I had suggested caching (outpoint,hash(script)) -> bool to reduce memory consumption.\n",https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5856199,5856199,
gmaxwell,2012-05-22T20:52:21Z,@SergioDemianLerner      PUSH $randomnumber POP {normal script}   will also validate if {normal script} would have also validatedâ€” but it will have a different hash.\n,https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5858576,5858576,
sipa,2012-05-22T21:02:25Z,See follow-up pull #1380.\n,https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5858817,5858817,
SergioDemianLerner,2012-05-22T22:29:26Z,"@gmaxwell You are right. Scripts cannot be easily cached. We would need an pushdown automata parser and optimizer to compress scripts and erase all garbage. \nIt would be interesting to program such an algorithm to allow clients to ""standarize"" scripts, detect and remove hidden messages while transactions are passed from peer to peer. We may even create a transaction antivirus !! (just joking, I r",https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5860763,5860763,
SergioDemianLerner,2012-05-23T12:28:06Z,"Although IsStandard() check would prevent  ""PUSH $randomnumber POP {normal script}"" scripts from being forwarded, so it may be possible to cache at that level too.\n",https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5871490,5871490,
gmaxwell,2012-05-23T13:29:32Z,"@SergioDemianLerner  I picked a toy example, and besides, we wouldn't want to adopt a design which strongly discouraged expanding IsStandard in the future.\n",https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5872807,5872807,
SergioDemianLerner,2012-05-23T16:15:14Z,ACK.\n,https://github.com/bitcoin/bitcoin/pull/1349#issuecomment-5877247,5877247,
