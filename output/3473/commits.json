[
  {
    "sha": "0d669ae5737201aeae61bf1389040dac5944e7a8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZDY2OWFlNTczNzIwMWFlYWU2MWJmMTM4OTA0MGRhYzU5NDRlN2E4",
    "commit": {
      "author": {
        "name": "walter",
        "email": "ww@ww.com",
        "date": "2013-12-29T10:32:29Z"
      },
      "committer": {
        "name": "walter",
        "email": "ww@ww.com",
        "date": "2013-12-29T10:32:29Z"
      },
      "message": "Added extractpubkey rpc call, allows extraction of public key from a message and signature.",
      "tree": {
        "sha": "b1a048449341a7a48c9589f55994d7604747b7d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1a048449341a7a48c9589f55994d7604747b7d7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d669ae5737201aeae61bf1389040dac5944e7a8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d669ae5737201aeae61bf1389040dac5944e7a8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0d669ae5737201aeae61bf1389040dac5944e7a8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d669ae5737201aeae61bf1389040dac5944e7a8/comments",
    "author": {
      "login": "rree11",
      "id": 15120125,
      "node_id": "MDQ6VXNlcjE1MTIwMTI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15120125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rree11",
      "html_url": "https://github.com/rree11",
      "followers_url": "https://api.github.com/users/rree11/followers",
      "following_url": "https://api.github.com/users/rree11/following{/other_user}",
      "gists_url": "https://api.github.com/users/rree11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rree11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rree11/subscriptions",
      "organizations_url": "https://api.github.com/users/rree11/orgs",
      "repos_url": "https://api.github.com/users/rree11/repos",
      "events_url": "https://api.github.com/users/rree11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rree11/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rree11",
      "id": 15120125,
      "node_id": "MDQ6VXNlcjE1MTIwMTI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15120125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rree11",
      "html_url": "https://github.com/rree11",
      "followers_url": "https://api.github.com/users/rree11/followers",
      "following_url": "https://api.github.com/users/rree11/following{/other_user}",
      "gists_url": "https://api.github.com/users/rree11/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rree11/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rree11/subscriptions",
      "organizations_url": "https://api.github.com/users/rree11/orgs",
      "repos_url": "https://api.github.com/users/rree11/repos",
      "events_url": "https://api.github.com/users/rree11/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rree11/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e7792003b5c520fcc81d223f07471d690594081",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e7792003b5c520fcc81d223f07471d690594081",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e7792003b5c520fcc81d223f07471d690594081"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 43,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8e604e05562cb4b181c830344176c8035f71ec79",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d669ae5737201aeae61bf1389040dac5944e7a8/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d669ae5737201aeae61bf1389040dac5944e7a8/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=0d669ae5737201aeae61bf1389040dac5944e7a8",
        "patch": "@@ -324,3 +324,44 @@ Value verifymessage(const Array& params, bool fHelp)\n     return (pubkey.GetID() == keyID);\n }\n \n+Value extractpubkey(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 2)\n+        throw runtime_error(\n+            \"extractpubkey \\\"signature\\\" \\\"message\\\"\\n\"\n+            \"\\nExtracts the public key from a signature and message\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"signature\\\"       (string, required) The signature provided by the signer in base 64 encoding (see signmessage).\\n\"\n+            \"2. \\\"message\\\"         (string, required) The message that was signed.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"key\\\"                (string) The public key\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nUnlock the wallet for 30 seconds\\n\"\n+            + HelpExampleCli(\"walletpassphrase\", \"\\\"mypassphrase\\\" 30\") +\n+            \"\\nCreate the signature\\n\"\n+            + HelpExampleCli(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"my message\\\"\") +\n+            \"\\nVerify the signature\\n\"\n+            + HelpExampleCli(\"extractpubkey\", \"\\\"signature\\\" \\\"my message\\\"\") +\n+            \"\\nAs json rpc\\n\"\n+            + HelpExampleRpc(\"extractpubkey\", \"\\\"signature\\\", \\\"my message\\\"\")\n+        );\n+\n+    string strSign     = params[0].get_str();\n+    string strMessage  = params[1].get_str();\n+\n+    bool fInvalid = false;\n+    vector<unsigned char> vchSig = DecodeBase64(strSign.c_str(), &fInvalid);\n+\n+    if (fInvalid)\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Malformed base64 encoding\");\n+\n+    CHashWriter ss(SER_GETHASH, 0);\n+    ss << strMessageMagic;\n+    ss << strMessage;\n+\n+    CPubKey pubkey;\n+    if (!pubkey.RecoverCompact(ss.GetHash(), vchSig))\n+        return false;\n+\n+    return HexStr(pubkey.begin(), pubkey.end());\n+}"
      },
      {
        "sha": "c427eeb2f9d8d3275f3a1734ad7d5e01c6ec8dcf",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d669ae5737201aeae61bf1389040dac5944e7a8/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d669ae5737201aeae61bf1389040dac5944e7a8/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=0d669ae5737201aeae61bf1389040dac5944e7a8",
        "patch": "@@ -255,6 +255,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"validateaddress\",        &validateaddress,        true,      false,      false },\n     { \"createmultisig\",         &createmultisig,         true,      true ,      false },\n     { \"verifymessage\",          &verifymessage,          false,     false,      false },\n+    { \"extractpubkey\",          &extractpubkey,          false,     false,      false },\n \n #ifdef ENABLE_WALLET\n     /* Wallet */"
      },
      {
        "sha": "99371cd7b6a5a3ae33992a5b8becf5d296e7e2d1",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d669ae5737201aeae61bf1389040dac5944e7a8/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d669ae5737201aeae61bf1389040dac5944e7a8/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=0d669ae5737201aeae61bf1389040dac5944e7a8",
        "patch": "@@ -132,6 +132,7 @@ extern json_spirit::Value getaddressesbyaccount(const json_spirit::Array& params\n extern json_spirit::Value sendtoaddress(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value signmessage(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value verifymessage(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value extractpubkey(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getreceivedbyaddress(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getreceivedbyaccount(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getbalance(const json_spirit::Array& params, bool fHelp);"
      }
    ]
  }
]