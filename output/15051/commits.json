[
  {
    "sha": "6dc4593db1ccfb8745b2daa42f457981ae08dba9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZGM0NTkzZGIxY2NmYjg3NDViMmRhYTQyZjQ1Nzk4MWFlMDhkYmE5",
    "commit": {
      "author": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-28T15:20:30Z"
      },
      "committer": {
        "name": "marcaiaf",
        "email": "mmachicao@m19r.de",
        "date": "2018-12-28T15:20:30Z"
      },
      "message": "IsReachable is the inverse of IsLimited (DRY). Includes unit tests",
      "tree": {
        "sha": "1f4ce54fbe9a0f35dc7b6a0ec74d188b5b3c314b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f4ce54fbe9a0f35dc7b6a0ec74d188b5b3c314b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6dc4593db1ccfb8745b2daa42f457981ae08dba9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dc4593db1ccfb8745b2daa42f457981ae08dba9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6dc4593db1ccfb8745b2daa42f457981ae08dba9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6dc4593db1ccfb8745b2daa42f457981ae08dba9/comments",
    "author": {
      "login": "mmachicao",
      "id": 1525975,
      "node_id": "MDQ6VXNlcjE1MjU5NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmachicao",
      "html_url": "https://github.com/mmachicao",
      "followers_url": "https://api.github.com/users/mmachicao/followers",
      "following_url": "https://api.github.com/users/mmachicao/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmachicao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmachicao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
      "organizations_url": "https://api.github.com/users/mmachicao/orgs",
      "repos_url": "https://api.github.com/users/mmachicao/repos",
      "events_url": "https://api.github.com/users/mmachicao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmachicao/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mmachicao",
      "id": 1525975,
      "node_id": "MDQ6VXNlcjE1MjU5NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1525975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmachicao",
      "html_url": "https://github.com/mmachicao",
      "followers_url": "https://api.github.com/users/mmachicao/followers",
      "following_url": "https://api.github.com/users/mmachicao/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmachicao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmachicao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmachicao/subscriptions",
      "organizations_url": "https://api.github.com/users/mmachicao/orgs",
      "repos_url": "https://api.github.com/users/mmachicao/repos",
      "events_url": "https://api.github.com/users/mmachicao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmachicao/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "86e0a33f5c382513d5179e3fdf158baf952d7e2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86e0a33f5c382513d5179e3fdf158baf952d7e2f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/86e0a33f5c382513d5179e3fdf158baf952d7e2f"
      }
    ],
    "stats": {
      "total": 95,
      "additions": 91,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a0f66d06d00ab366c6f53f0165dca46d0ef8096f",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6dc4593db1ccfb8745b2daa42f457981ae08dba9/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6dc4593db1ccfb8745b2daa42f457981ae08dba9/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=6dc4593db1ccfb8745b2daa42f457981ae08dba9",
        "patch": "@@ -286,15 +286,13 @@ bool IsLocal(const CService& addr)\n /** check whether a given network is one we can probably connect to */\n bool IsReachable(enum Network net)\n {\n-    LOCK(cs_mapLocalHost);\n-    return !vfLimited[net];\n+    return !IsLimited(net);\n }\n \n /** check whether a given address is in a network we can probably connect to */\n bool IsReachable(const CNetAddr& addr)\n {\n-    enum Network net = addr.GetNetwork();\n-    return IsReachable(net);\n+    return IsReachable(addr.GetNetwork());\n }\n \n "
      },
      {
        "sha": "4dc394b86da12b0f9bcd1c96cad3520a6d892e7e",
        "filename": "src/test/net_tests.cpp",
        "status": "modified",
        "additions": 89,
        "deletions": 0,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6dc4593db1ccfb8745b2daa42f457981ae08dba9/src/test/net_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6dc4593db1ccfb8745b2daa42f457981ae08dba9/src/test/net_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_tests.cpp?ref=6dc4593db1ccfb8745b2daa42f457981ae08dba9",
        "patch": "@@ -227,4 +227,93 @@ BOOST_AUTO_TEST_CASE(ipv4_peer_with_ipv6_addrMe_test)\n     BOOST_CHECK(1);\n }\n \n+\n+BOOST_AUTO_TEST_CASE(LimitedAndReachable_Network)\n+{\n+    SetLimited(NET_IPV4, true);\n+    SetLimited(NET_IPV6, true);\n+    SetLimited(NET_ONION, true);\n+\n+    BOOST_CHECK_EQUAL(IsLimited(NET_IPV4), true);\n+    BOOST_CHECK_EQUAL(IsLimited(NET_IPV6), true);\n+    BOOST_CHECK_EQUAL(IsLimited(NET_ONION), true);\n+\n+    BOOST_CHECK_EQUAL(IsReachable(NET_IPV4), false);\n+    BOOST_CHECK_EQUAL(IsReachable(NET_IPV6), false);\n+    BOOST_CHECK_EQUAL(IsReachable(NET_ONION), false);\n+\n+\n+    SetLimited(NET_IPV4, false);\n+    SetLimited(NET_IPV6, false);\n+    SetLimited(NET_ONION, false);\n+\n+    BOOST_CHECK_EQUAL(IsLimited(NET_IPV4), false);\n+    BOOST_CHECK_EQUAL(IsLimited(NET_IPV6), false);\n+    BOOST_CHECK_EQUAL(IsLimited(NET_ONION), false);\n+\n+    BOOST_CHECK_EQUAL(IsReachable(NET_IPV4), true);\n+    BOOST_CHECK_EQUAL(IsReachable(NET_IPV6), true);\n+    BOOST_CHECK_EQUAL(IsReachable(NET_ONION), true);\n+}\n+\n+BOOST_AUTO_TEST_CASE(LimitedAndReachable_NetworkCaseUnroutableAndInternal)\n+{\n+    BOOST_CHECK_EQUAL(IsLimited(NET_UNROUTABLE), false);\n+    BOOST_CHECK_EQUAL(IsLimited(NET_INTERNAL), false);\n+\n+    BOOST_CHECK_EQUAL(IsReachable(NET_UNROUTABLE), true);\n+    BOOST_CHECK_EQUAL(IsReachable(NET_INTERNAL), true);\n+\n+    SetLimited(NET_UNROUTABLE, true);\n+    SetLimited(NET_INTERNAL, true);\n+\n+    BOOST_CHECK_EQUAL(IsLimited(NET_UNROUTABLE), false); // Ignored for both networks\n+    BOOST_CHECK_EQUAL(IsLimited(NET_INTERNAL), false);\n+\n+    BOOST_CHECK_EQUAL(IsReachable(NET_UNROUTABLE), true);\n+    BOOST_CHECK_EQUAL(IsReachable(NET_INTERNAL), true);\n+}\n+\n+CNetAddr UtilBuildAddress(unsigned char p1, unsigned char p2, unsigned char p3, unsigned char p4)\n+{\n+    unsigned char ip[] = {p1, p2, p3, p4};\n+\n+    struct sockaddr_in sa;\n+    memset(&sa, 0, sizeof(sockaddr_in)); // initialize the memory block\n+    memcpy(&(sa.sin_addr), &ip, sizeof(ip));\n+    return CNetAddr(sa.sin_addr);\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(LimitedAndReachable_CNetAddr)\n+{\n+    CNetAddr addr = UtilBuildAddress(0x001, 0x001, 0x001, 0x001); // 1.1.1.1\n+\n+    SetLimited(NET_IPV4, false);\n+    BOOST_CHECK_EQUAL(IsLimited(addr), false);\n+    BOOST_CHECK_EQUAL(IsReachable(addr), true);\n+\n+    SetLimited(NET_IPV4, true);\n+    BOOST_CHECK_EQUAL(IsLimited(addr), true);\n+    BOOST_CHECK_EQUAL(IsReachable(addr), false);\n+\n+    SetLimited(NET_IPV4, false); // have to reset this, because this is stateful.\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(LocalAddress_BasicLifecycle)\n+{\n+    CService addr = CService(UtilBuildAddress(0x002, 0x001, 0x001, 0x001), 1000); // 2.1.1.1:1000\n+\n+    SetLimited(NET_IPV4, false);\n+\n+    BOOST_CHECK_EQUAL(IsLocal(addr), false);\n+    BOOST_CHECK_EQUAL(AddLocal(addr, 1000), true);\n+    BOOST_CHECK_EQUAL(IsLocal(addr), true);\n+\n+    RemoveLocal(addr);\n+    BOOST_CHECK_EQUAL(IsLocal(addr), false);\n+}\n+\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]