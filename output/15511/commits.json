[
  {
    "sha": "309102fff94108bf5aca3b613351e3cf01219f6f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDkxMDJmZmY5NDEwOGJmNWFjYTNiNjEzMzUxZTNjZjAxMjE5ZjZm",
    "commit": {
      "author": {
        "name": "darosior",
        "email": "darosior@gmail.com",
        "date": "2019-03-01T16:06:27Z"
      },
      "committer": {
        "name": "darosior",
        "email": "darosior@gmail.com",
        "date": "2019-03-01T16:06:27Z"
      },
      "message": "Adds a field 'servicesnames' in getpeerinfo and getnetworkinfo to output services names",
      "tree": {
        "sha": "bbaa0a6b90f0fffd7c5eb19cd4b20428670bf539",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bbaa0a6b90f0fffd7c5eb19cd4b20428670bf539"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/309102fff94108bf5aca3b613351e3cf01219f6f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/309102fff94108bf5aca3b613351e3cf01219f6f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/309102fff94108bf5aca3b613351e3cf01219f6f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/309102fff94108bf5aca3b613351e3cf01219f6f/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29c24b05fb71a5577af9f58298493c1f2d489069",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29c24b05fb71a5577af9f58298493c1f2d489069",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29c24b05fb71a5577af9f58298493c1f2d489069"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 40,
      "deletions": 2
    },
    "files": [
      {
        "sha": "16e9338a8dee0a831384def764dacc12fb861adc",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 2,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/309102fff94108bf5aca3b613351e3cf01219f6f/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/309102fff94108bf5aca3b613351e3cf01219f6f/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=309102fff94108bf5aca3b613351e3cf01219f6f",
        "patch": "@@ -88,6 +88,10 @@ static UniValue getpeerinfo(const JSONRPCRequest& request)\n             \"    \\\"addrbind\\\":\\\"ip:port\\\",    (string) Bind address of the connection to the peer\\n\"\n             \"    \\\"addrlocal\\\":\\\"ip:port\\\",   (string) Local address as reported by the peer\\n\"\n             \"    \\\"services\\\":\\\"xxxxxxxxxxxxxxxx\\\",   (string) The services offered\\n\"\n+            \"    \\\"servicesnames\\\": [              (array) the services offered\\n\"\n+            \"       \\\"SERVICE NAME\\\",         (string) the service name\\n\"\n+            \"        ...\\n\"\n+            \"     ],\\n\"\n             \"    \\\"relaytxes\\\":true|false,    (boolean) Whether peer has asked us to relay transactions to it\\n\"\n             \"    \\\"lastsend\\\": ttt,           (numeric) The time in seconds since epoch (Jan 1 1970 GMT) of the last send\\n\"\n             \"    \\\"lastrecv\\\": ttt,           (numeric) The time in seconds since epoch (Jan 1 1970 GMT) of the last receive\\n\"\n@@ -153,6 +157,20 @@ static UniValue getpeerinfo(const JSONRPCRequest& request)\n         if (stats.addrBind.IsValid())\n             obj.pushKV(\"addrbind\", stats.addrBind.ToString());\n         obj.pushKV(\"services\", strprintf(\"%016x\", stats.nServices));\n+        UniValue servicesnames(UniValue::VARR);\n+        if (stats.nServices & NODE_NETWORK)\n+            servicesnames.push_back(\"NODE_NETWORK\");\n+        if (stats.nServices & NODE_GETUTXO)\n+            servicesnames.push_back(\"NODE_GETUTXO\");\n+        if (stats.nServices & NODE_BLOOM)\n+            servicesnames.push_back(\"NODE_BLOOM\");\n+        if (stats.nServices & NODE_WITNESS)\n+            servicesnames.push_back(\"NODE_WITNESS\");\n+        if (stats.nServices & NODE_XTHIN)\n+            servicesnames.push_back(\"NODE_XTHIN\");\n+        if (stats.nServices & NODE_NETWORK_LIMITED)\n+            servicesnames.push_back(\"NODE_NETWORK_LIMITED\");\n+        obj.pushKV(\"servicesnames\", servicesnames);\n         obj.pushKV(\"relaytxes\", stats.fRelayTxes);\n         obj.pushKV(\"lastsend\", stats.nLastSend);\n         obj.pushKV(\"lastrecv\", stats.nLastRecv);\n@@ -455,6 +473,10 @@ static UniValue getnetworkinfo(const JSONRPCRequest& request)\n             \"  \\\"subversion\\\": \\\"/Satoshi:x.x.x/\\\",     (string) the server subversion string\\n\"\n             \"  \\\"protocolversion\\\": xxxxx,              (numeric) the protocol version\\n\"\n             \"  \\\"localservices\\\": \\\"xxxxxxxxxxxxxxxx\\\", (string) the services we offer to the network\\n\"\n+            \"  \\\"localservicesnames\\\": [                     (array) the services we offer to the network\\n\"\n+            \"  \\\"SERVICE NAME\\\",                        (string) the service name\\n\"\n+            \"  ...\\n\"\n+            \"  ],\\n\"\n             \"  \\\"localrelay\\\": true|false,              (bool) true if transaction relay is requested from peers\\n\"\n             \"  \\\"timeoffset\\\": xxxxx,                   (numeric) the time offset\\n\"\n             \"  \\\"connections\\\": xxxxx,                  (numeric) the number of connections\\n\"\n@@ -493,8 +515,24 @@ static UniValue getnetworkinfo(const JSONRPCRequest& request)\n     obj.pushKV(\"version\",       CLIENT_VERSION);\n     obj.pushKV(\"subversion\",    strSubVersion);\n     obj.pushKV(\"protocolversion\",PROTOCOL_VERSION);\n-    if(g_connman)\n-        obj.pushKV(\"localservices\", strprintf(\"%016x\", g_connman->GetLocalServices()));\n+    if(g_connman) {\n+        ServiceFlags services = g_connman->GetLocalServices();\n+        obj.pushKV(\"localservices\", strprintf(\"%016x\", services));\n+        UniValue servicesnames(UniValue::VARR);\n+        if (services & NODE_NETWORK)\n+            servicesnames.push_back(\"NODE_NETWORK\");\n+        if (services & NODE_GETUTXO)\n+            servicesnames.push_back(\"NODE_GETUTXO\");\n+        if (services & NODE_BLOOM)\n+            servicesnames.push_back(\"NODE_BLOOM\");\n+        if (services & NODE_WITNESS)\n+            servicesnames.push_back(\"NODE_WITNESS\");\n+        if (services & NODE_XTHIN)\n+            servicesnames.push_back(\"NODE_XTHIN\");\n+        if (services & NODE_NETWORK_LIMITED)\n+            servicesnames.push_back(\"NODE_NETWORK_LIMITED\");\n+        obj.pushKV(\"localservicesnames\", servicesnames);\n+    }\n     obj.pushKV(\"localrelay\",     fRelayTxes);\n     obj.pushKV(\"timeoffset\",    GetTimeOffset());\n     if (g_connman) {"
      }
    ]
  }
]