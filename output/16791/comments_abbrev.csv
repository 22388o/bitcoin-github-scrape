elichai,2019-09-03 00:10:52,"**clang without LTO run 1**\n```\n# Benchmark, evals, iterations, total, min, max, median\nAssembleBlock, 5, 700, 1.75888, 0.000499424, 0.000509562, 0.000501284\nBase58CheckEncode, 5, 320000, 4.44531, 2.76679e-06, 2.79008e-06, 2.78027e-06\nBase58Decode, 5, 800000, 2.51903, 6.27043e-07, 6.33854e-07, 6.29572e-07\nBase58Encode, 5, 470000, 4.544, 1.92153e-06, 1.9427e-06, 1.93532e-06\nBech32Deco",https://github.com/bitcoin/bitcoin/pull/16791#issuecomment-527260935,527260935,
elichai,2019-09-03 00:12:29,"Build time benchmark (with `./configure --with-incompatible-bdb`)\n1. Clang without LTO:\n```\nreal    3m59.577s\nuser    54m18.507s\nsys     2m7.528s\n```\n\n2. Clang with LTO:\n```\nreal    7m7.265s\nuser    97m1.044s\nsys     2m49.948s\n```\n\n3. GCC without LTO:\n```\nreal    3m13.461s\nuser    37m23.436s\nsys     2m8.695s\n```\n\n4. GCC with LTO:\n```\nreal    6m20.885",https://github.com/bitcoin/bitcoin/pull/16791#issuecomment-527261087,527261087,
fanquake,2019-09-03 00:14:41,"Have you read through the past (#10616, #10800) and current (#14277) discussions around enabling LTO? If not, that will likely give you a starting point for performance measurement, build system considerations etc.",https://github.com/bitcoin/bitcoin/pull/16791#issuecomment-527261302,527261302,
elichai,2019-09-03 00:18:01,"@fanquake I knew I forgot something hehe, i'll go read them now. thanks! ",https://github.com/bitcoin/bitcoin/pull/16791#issuecomment-527261636,527261636,
DrahtBot,2019-09-03 03:10:17,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16834](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16834.html) (Fetch Headers over DNS by TheBlueMatt)\n* [",https://github.com/bitcoin/bitcoin/pull/16791#issuecomment-527287071,527287071,
practicalswift,2019-09-03 12:07:04,"Concept ACK assuming the default is switched: LTO should be opt-in using `--enable-lto` to allow for risk-free experimentation and for the reason @laanwj gives in https://github.com/bitcoin/bitcoin/issues/10616#issuecomment-313464529:\n\n> It should definitely not be enabled by default! Programs usually shouldn't add non-standard compilation flags by default unless necessary.",https://github.com/bitcoin/bitcoin/pull/16791#issuecomment-527429765,527429765,
laanwj,2019-09-03 12:54:18,"I think this is an interesting experiment!\n\nHowever, build-system-wise, this simply adds some compiler and linker flags, which could be passed in through `CFLAGS`, `CXXFLAGS`, `CPPFLAGS`, `LDFLAGS` environment variables. I don't think it really belongs as a separate configure option for individual applications.\n\nWill leave it to @theuni though.",https://github.com/bitcoin/bitcoin/pull/16791#issuecomment-527445380,527445380,
laanwj,2019-10-02 08:45:42,"This is unlikely to be merged. Closing this PR.\n(feel free to continue discussion about LTO in the release builds, of course)",https://github.com/bitcoin/bitcoin/pull/16791#issuecomment-537397932,537397932,
