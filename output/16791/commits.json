[
  {
    "sha": "3643493b5d36b0754f8ec74a4cd138e0618cdd57",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjQzNDkzYjVkMzZiMDc1NGY4ZWM3NGE0Y2QxMzhlMDYxOGNkZDU3",
    "commit": {
      "author": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2019-09-03T00:07:40Z"
      },
      "committer": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2019-09-03T00:07:40Z"
      },
      "message": "Enable Link Time Optimizations",
      "tree": {
        "sha": "ba3c51b55ee87caa9e75a7f9a76c1f0edda22f6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba3c51b55ee87caa9e75a7f9a76c1f0edda22f6d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3643493b5d36b0754f8ec74a4cd138e0618cdd57",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl1trswZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqfyNSD/965Z8cG4tbxlxBMF/VMvsi\n9YWZdM7qz/T7x7d8iDsO0T157mS9wEpVl6ke5eYPp2E/MZ+t6XjO0a3n1r10K1mU\nUbf8Hlf/qT6Y8mkLr+u0mreauhQ1M7X302o15i4Teeew2+0X6lRsyB9GpMOTQ2aF\nX7hrmWq/XLe5NG6XV83hRe7OPqdoiNoXCWQTEfDoW9rvlIf18CFIXLj5aRSmBakO\nlGnipSGfCPnQG76wMo94sTzfLyIAGz2mDRJfn54mJLCxl345lr//u2MRvQxnAZuf\ne7AwLsN7oGGn3JCzwsJNR2q/pA8TujjOxzN5n/DQAOSnLpqxg+0AIcUdQvts4Z2f\ns8OcWJCL03WH6rMVDGITABqYiYklb/tcsEK2l3sPPLbmMbjLL+KTPW8+Yf6OfPje\nNnq11ib4QyMKPL+JdgCxR+wjwbltCE6m2HKP3xeFGA9C210bebcdJh4YPLbnE2pu\ng1DyX4NLlXBipEWw18m56ARxFO37B1oHWxKakLkkGtLnxmyIHMTTibRz1vCU2+pR\nfw6ktdAwqmROH8RfQ4LHCV0shUDhdYOgbnhBunf5ha9O8sxuzG2cgL9OAdb74JnI\n/Dn1bA2UA6uz1rr4iFLeA8cs5dI6CiYXhui8Kjvw043FFC/cMhYLrz3g7bD1p+GT\nw11SmjylBoUJHrKQzhVp7Q==\n=mSav\n-----END PGP SIGNATURE-----",
        "payload": "tree ba3c51b55ee87caa9e75a7f9a76c1f0edda22f6d\nparent 33f9750b1b86a705d092b0e1314ed15287c45239\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1567469260 -0400\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1567469260 -0400\n\nEnable Link Time Optimizations\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3643493b5d36b0754f8ec74a4cd138e0618cdd57",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3643493b5d36b0754f8ec74a4cd138e0618cdd57",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3643493b5d36b0754f8ec74a4cd138e0618cdd57/comments",
    "author": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "33f9750b1b86a705d092b0e1314ed15287c45239",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33f9750b1b86a705d092b0e1314ed15287c45239",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/33f9750b1b86a705d092b0e1314ed15287c45239"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 28,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f5e2d50bed9832363fe723c5256813461509ec55",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 26,
        "deletions": 2,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3643493b5d36b0754f8ec74a4cd138e0618cdd57/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3643493b5d36b0754f8ec74a4cd138e0618cdd57/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=3643493b5d36b0754f8ec74a4cd138e0618cdd57",
        "patch": "@@ -228,6 +228,12 @@ AC_ARG_ENABLE([bip70],\n   [enable_bip70=$enableval],\n   [enable_bip70=auto])\n \n+  AC_ARG_ENABLE([thinlto],\n+  [AS_HELP_STRING([--disable-thinlto],\n+  [do not attempt to use Link Time Optimizations (default is to use when possible)])],\n+  [use_thinlto=$enableval],\n+  [use_thinlto=auto])\n+\n AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n \n AC_ARG_ENABLE(man,\n@@ -314,6 +320,20 @@ if test x$use_sanitizers != x; then\n     ]],[[]])])\n fi\n \n+if test x$use_thinlto != xno; then\n+  # Check if the compiler accepts `-flto=thin`. in gcc it will enable just lto, clang will chose thinlto.\n+  AX_CHECK_COMPILE_FLAG(\n+    [[-flto=thin]],\n+    [[LTO_CXXFLAGS=-flto=thin]],\n+    [AC_MSG_ERROR([compiler did not accept requested flags])])\n+\n+  # Same thing for the linker.\n+  AX_CHECK_LINK_FLAG(\n+    [[-flto=thin]],\n+    [[LTO_LDFLAGS=-flto=thin]],\n+    [AC_MSG_ERROR([linker did not accept requested flags])])\n+fi\n+\n ERROR_CXXFLAGS=\n if test \"x$enable_werror\" = \"xyes\"; then\n   if test \"x$CXXFLAG_WERROR\" = \"x\"; then\n@@ -1526,6 +1546,8 @@ AM_CONDITIONAL([ENABLE_SSE41],[test x$enable_sse41 = xyes])\n AM_CONDITIONAL([ENABLE_AVX2],[test x$enable_avx2 = xyes])\n AM_CONDITIONAL([ENABLE_SHANI],[test x$enable_shani = xyes])\n AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n+AM_CONDITIONAL([THINLTO],[test x$use_thinlto = xyes])\n+\n \n AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n@@ -1587,6 +1609,8 @@ AC_SUBST(EVENT_PTHREADS_LIBS)\n AC_SUBST(ZMQ_LIBS)\n AC_SUBST(PROTOBUF_LIBS)\n AC_SUBST(QR_LIBS)\n+AC_SUBST(LTO_CXXFLAGS)\n+AC_SUBST(LTO_LDFLAGS)\n AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n AM_COND_IF([HAVE_DOXYGEN], [AC_CONFIG_FILES([doc/Doxyfile])])\n@@ -1675,7 +1699,7 @@ echo \"  CC            = $CC\"\n echo \"  CFLAGS        = $CFLAGS\"\n echo \"  CPPFLAGS      = $DEBUG_CPPFLAGS $HARDENED_CPPFLAGS $CPPFLAGS\"\n echo \"  CXX           = $CXX\"\n-echo \"  CXXFLAGS      = $DEBUG_CXXFLAGS $HARDENED_CXXFLAGS $WARN_CXXFLAGS $NOWARN_CXXFLAGS $ERROR_CXXFLAGS $GPROF_CXXFLAGS $CXXFLAGS\"\n-echo \"  LDFLAGS       = $PTHREAD_CFLAGS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS\"\n+echo \"  CXXFLAGS      = $LTO_CXXFLAGS $DEBUG_CXXFLAGS $HARDENED_CXXFLAGS $WARN_CXXFLAGS $NOWARN_CXXFLAGS $ERROR_CXXFLAGS $GPROF_CXXFLAGS $CXXFLAGS\"\n+echo \"  LDFLAGS       = $LTO_LDFLAGS $PTHREAD_CFLAGS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS\"\n echo \"  ARFLAGS       = $ARFLAGS\"\n echo"
      },
      {
        "sha": "90582763c6ad9ddcb7713bc08121b656e728684e",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3643493b5d36b0754f8ec74a4cd138e0618cdd57/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3643493b5d36b0754f8ec74a4cd138e0618cdd57/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=3643493b5d36b0754f8ec74a4cd138e0618cdd57",
        "patch": "@@ -4,8 +4,8 @@\n \n DIST_SUBDIRS = secp256k1 univalue\n \n-AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS) $(GPROF_LDFLAGS) $(SANITIZER_LDFLAGS)\n-AM_CXXFLAGS = $(DEBUG_CXXFLAGS) $(HARDENED_CXXFLAGS) $(WARN_CXXFLAGS) $(NOWARN_CXXFLAGS) $(ERROR_CXXFLAGS) $(GPROF_CXXFLAGS) $(SANITIZER_CXXFLAGS)\n+AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS) $(GPROF_LDFLAGS) $(SANITIZER_LDFLAGS) $(LTO_LDFLAGS)\n+AM_CXXFLAGS = $(DEBUG_CXXFLAGS) $(HARDENED_CXXFLAGS) $(WARN_CXXFLAGS) $(NOWARN_CXXFLAGS) $(ERROR_CXXFLAGS) $(GPROF_CXXFLAGS) $(SANITIZER_CXXFLAGS) $(LTO_CXXFLAGS)\n AM_CPPFLAGS = $(DEBUG_CPPFLAGS) $(HARDENED_CPPFLAGS)\n AM_LIBTOOLFLAGS = --preserve-dup-deps\n EXTRA_LIBRARIES ="
      }
    ]
  }
]