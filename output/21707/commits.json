[
  {
    "sha": "c9919433994924931757aa7ec278c50744ede35d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOTkxOTQzMzk5NDkyNDkzMTc1N2FhN2VjMjc4YzUwNzQ0ZWRlMzVk",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-03-29T22:19:37Z"
      },
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2021-04-21T20:14:16Z"
      },
      "message": "[test] Refactor the addr relay test to prepare for new tests\n\nMoves setting up the addr message into a repeatable function, and breaks up the\nexisting tests into separate functions for legibility.",
      "tree": {
        "sha": "4418434efe30362b90214532754d6733b4008eee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4418434efe30362b90214532754d6733b4008eee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c9919433994924931757aa7ec278c50744ede35d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9919433994924931757aa7ec278c50744ede35d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c9919433994924931757aa7ec278c50744ede35d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9919433994924931757aa7ec278c50744ede35d/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f6c44e999b7d1d9a0de5d678ac8f1679aa271f65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6c44e999b7d1d9a0de5d678ac8f1679aa271f65",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f6c44e999b7d1d9a0de5d678ac8f1679aa271f65"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 38,
      "deletions": 19
    },
    "files": [
      {
        "sha": "b728ed428bc1094c868eb8ca0154297e94eb6f1f",
        "filename": "test/functional/p2p_addr_relay.py",
        "status": "modified",
        "additions": 38,
        "deletions": 19,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c9919433994924931757aa7ec278c50744ede35d/test/functional/p2p_addr_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c9919433994924931757aa7ec278c50744ede35d/test/functional/p2p_addr_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addr_relay.py?ref=c9919433994924931757aa7ec278c50744ede35d",
        "patch": "@@ -19,18 +19,6 @@\n )\n import time\n \n-# Keep this with length <= 10. Addresses from larger messages are not relayed.\n-ADDRS = []\n-num_ipv4_addrs = 10\n-\n-for i in range(num_ipv4_addrs):\n-    addr = CAddress()\n-    addr.time = int(time.time()) + i\n-    addr.nServices = NODE_NETWORK | NODE_WITNESS\n-    addr.ip = \"123.123.123.{}\".format(i % 256)\n-    addr.port = 8333 + i\n-    ADDRS.append(addr)\n-\n \n class AddrReceiver(P2PInterface):\n     num_ipv4_received = 0\n@@ -45,33 +33,62 @@ def on_addr(self, message):\n \n \n class AddrTest(BitcoinTestFramework):\n+    counter = 0\n+    mocktime = int(time.time())\n+\n     def set_test_params(self):\n         self.num_nodes = 1\n \n     def run_test(self):\n-        self.log.info('Create connection that sends addr messages')\n-        addr_source = self.nodes[0].add_p2p_connection(P2PInterface())\n+        self.oversized_addr_test()\n+        self.relay_tests()\n+\n+    def setup_addr_msg(self, num):\n+        addrs = []\n+        for i in range(num):\n+            addr = CAddress()\n+            addr.time = self.mocktime + i\n+            addr.nServices = NODE_NETWORK | NODE_WITNESS\n+            addr.ip = f\"123.123.123.{self.counter % 256}\"\n+            addr.port = 8333 + i\n+            addrs.append(addr)\n+            self.counter += 1\n+\n         msg = msg_addr()\n+        msg.addrs = addrs\n+        return msg\n \n-        self.log.info('Send too-large addr message')\n-        msg.addrs = ADDRS * 101  # more than 1000 addresses in one message\n+    def oversized_addr_test(self):\n+        self.log.info('Send an addr message that is too large')\n+        addr_source = self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        msg = self.setup_addr_msg(1010)\n         with self.nodes[0].assert_debug_log(['addr message size = 1010']):\n             addr_source.send_and_ping(msg)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n+    def relay_tests(self):\n         self.log.info('Check that addr message content is relayed and added to addrman')\n+        addr_source = self.nodes[0].add_p2p_connection(P2PInterface())\n         num_receivers = 7\n         receivers = []\n         for _ in range(num_receivers):\n             receivers.append(self.nodes[0].add_p2p_connection(AddrReceiver()))\n-        msg.addrs = ADDRS\n+\n+        # Keep this with length <= 10. Addresses from larger messages are not\n+        # relayed.\n+        num_ipv4_addrs = 10\n+        msg = self.setup_addr_msg(num_ipv4_addrs)\n         with self.nodes[0].assert_debug_log(\n             [\n                 'Added {} addresses from 127.0.0.1: 0 tried'.format(num_ipv4_addrs),\n-                'received: addr (301 bytes) peer=0',\n+                'received: addr (301 bytes) peer=1',\n             ]\n         ):\n             addr_source.send_and_ping(msg)\n-            self.nodes[0].setmocktime(int(time.time()) + 30 * 60)\n+            self.mocktime += 30 * 60\n+            self.nodes[0].setmocktime(self.mocktime)\n             for receiver in receivers:\n                 receiver.sync_with_ping()\n \n@@ -82,6 +99,8 @@ def run_test(self):\n         ipv4_branching_factor = 2\n         assert_equal(total_ipv4_received, num_ipv4_addrs * ipv4_branching_factor)\n \n+        self.nodes[0].disconnect_p2ps()\n+\n \n if __name__ == '__main__':\n     AddrTest().main()"
      }
    ]
  },
  {
    "sha": "d2dbfe6ff1806e5248399b28a7a1a22dab726c40",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMmRiZmU2ZmYxODA2ZTUyNDgzOTliMjhhN2ExYTIyZGFiNzI2YzQw",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-03-30T20:15:30Z"
      },
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2021-04-21T20:16:39Z"
      },
      "message": "[test] Extract sending an addr message into a helper\n\nAlso reduces mocktime to prevent idle disconnects\nCo-Authored-By: Martin Zumsande <mzumsande@gmail.com>",
      "tree": {
        "sha": "874ee134e3cdf3b3764792f2640fd16cfebd5cac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/874ee134e3cdf3b3764792f2640fd16cfebd5cac"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2dbfe6ff1806e5248399b28a7a1a22dab726c40",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2dbfe6ff1806e5248399b28a7a1a22dab726c40",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2dbfe6ff1806e5248399b28a7a1a22dab726c40",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2dbfe6ff1806e5248399b28a7a1a22dab726c40/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c9919433994924931757aa7ec278c50744ede35d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c9919433994924931757aa7ec278c50744ede35d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c9919433994924931757aa7ec278c50744ede35d"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 9,
      "deletions": 5
    },
    "files": [
      {
        "sha": "4d7ad2eb10736e8cf51b2bc6cbac4b11cff2827a",
        "filename": "test/functional/p2p_addr_relay.py",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2dbfe6ff1806e5248399b28a7a1a22dab726c40/test/functional/p2p_addr_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2dbfe6ff1806e5248399b28a7a1a22dab726c40/test/functional/p2p_addr_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addr_relay.py?ref=d2dbfe6ff1806e5248399b28a7a1a22dab726c40",
        "patch": "@@ -58,6 +58,14 @@ def setup_addr_msg(self, num):\n         msg.addrs = addrs\n         return msg\n \n+    def send_addr_msg(self, source, msg, receivers):\n+        source.send_and_ping(msg)\n+        # pop m_next_addr_send timer\n+        self.mocktime += 5 * 60\n+        self.nodes[0].setmocktime(self.mocktime)\n+        for peer in receivers:\n+            peer.sync_with_ping()\n+\n     def oversized_addr_test(self):\n         self.log.info('Send an addr message that is too large')\n         addr_source = self.nodes[0].add_p2p_connection(P2PInterface())\n@@ -86,11 +94,7 @@ def relay_tests(self):\n                 'received: addr (301 bytes) peer=1',\n             ]\n         ):\n-            addr_source.send_and_ping(msg)\n-            self.mocktime += 30 * 60\n-            self.nodes[0].setmocktime(self.mocktime)\n-            for receiver in receivers:\n-                receiver.sync_with_ping()\n+            self.send_addr_msg(addr_source, msg, receivers)\n \n         total_ipv4_received = sum(r.num_ipv4_received for r in receivers)\n "
      }
    ]
  },
  {
    "sha": "8188b77c17d78bf608cb41978db4d0f46e91f7d8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MTg4Yjc3YzE3ZDc4YmY2MDhjYjQxOTc4ZGI0ZDBmNDZlOTFmN2Q4",
    "commit": {
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2021-04-16T14:49:01Z"
      },
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2021-04-21T20:16:39Z"
      },
      "message": "[test] Add tests for getaddr behavior\n\nCo-authored-by: Amiti Uttarwar <amiti@uttarwar.org>",
      "tree": {
        "sha": "e66a6727963b4e5cdb056a0e384631aa06e9bf87",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e66a6727963b4e5cdb056a0e384631aa06e9bf87"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8188b77c17d78bf608cb41978db4d0f46e91f7d8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8188b77c17d78bf608cb41978db4d0f46e91f7d8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8188b77c17d78bf608cb41978db4d0f46e91f7d8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8188b77c17d78bf608cb41978db4d0f46e91f7d8/comments",
    "author": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d2dbfe6ff1806e5248399b28a7a1a22dab726c40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2dbfe6ff1806e5248399b28a7a1a22dab726c40",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2dbfe6ff1806e5248399b28a7a1a22dab726c40"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 53,
      "deletions": 0
    },
    "files": [
      {
        "sha": "96f4ff8c2d041477cfb9f25e2e621ccd1060623a",
        "filename": "test/functional/p2p_addr_relay.py",
        "status": "modified",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8188b77c17d78bf608cb41978db4d0f46e91f7d8/test/functional/p2p_addr_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8188b77c17d78bf608cb41978db4d0f46e91f7d8/test/functional/p2p_addr_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addr_relay.py?ref=8188b77c17d78bf608cb41978db4d0f46e91f7d8",
        "patch": "@@ -11,6 +11,7 @@\n     NODE_NETWORK,\n     NODE_WITNESS,\n     msg_addr,\n+    msg_getaddr\n )\n from test_framework.p2p import P2PInterface\n from test_framework.test_framework import BitcoinTestFramework\n@@ -32,6 +33,21 @@ def on_addr(self, message):\n             self.num_ipv4_received += 1\n \n \n+class GetAddrStore(P2PInterface):\n+    getaddr_received = False\n+    num_ipv4_received = 0\n+\n+    def on_getaddr(self, message):\n+        self.getaddr_received = True\n+\n+    def on_addr(self, message):\n+        for addr in message.addrs:\n+            self.num_ipv4_received += 1\n+\n+    def addr_received(self):\n+        return self.num_ipv4_received != 0\n+\n+\n class AddrTest(BitcoinTestFramework):\n     counter = 0\n     mocktime = int(time.time())\n@@ -42,6 +58,7 @@ def set_test_params(self):\n     def run_test(self):\n         self.oversized_addr_test()\n         self.relay_tests()\n+        self.getaddr_tests()\n \n     def setup_addr_msg(self, num):\n         addrs = []\n@@ -105,6 +122,42 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def getaddr_tests(self):\n+        self.log.info('Test getaddr behavior')\n+        self.log.info('Check that we send a getaddr message upon connecting to an outbound-full-relay peer')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert full_outbound_peer.getaddr_received\n+\n+        self.log.info('Check that we do not send a getaddr message upon connecting to a block-relay-only peer')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        block_relay_peer.sync_with_ping()\n+        assert_equal(block_relay_peer.getaddr_received, False)\n+\n+        self.log.info('Check that we answer getaddr messages only from inbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n+        inbound_peer.sync_with_ping()\n+        # Add some addresses to addrman\n+        for i in range(1000):\n+            first_octet = i >> 8\n+            second_octet = i % 256\n+            a = f\"{first_octet}.{second_octet}.1.1\"\n+            self.nodes[0].addpeeraddress(a, 8333)\n+\n+        full_outbound_peer.send_and_ping(msg_getaddr())\n+        block_relay_peer.send_and_ping(msg_getaddr())\n+        inbound_peer.send_and_ping(msg_getaddr())\n+\n+        self.mocktime += 5 * 60\n+        self.nodes[0].setmocktime(self.mocktime)\n+        inbound_peer.wait_until(inbound_peer.addr_received)\n+\n+        assert_equal(full_outbound_peer.num_ipv4_received, 0)\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+        assert inbound_peer.num_ipv4_received > 100\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n \n if __name__ == '__main__':\n     AddrTest().main()"
      }
    ]
  },
  {
    "sha": "a6694eaed8f86a6ad79689bbcbfdbed4d73327c9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNjY5NGVhZWQ4Zjg2YTZhZDc5Njg5YmJjYmZkYmVkNGQ3MzMyN2M5",
    "commit": {
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2021-04-16T15:53:15Z"
      },
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2021-04-21T20:34:03Z"
      },
      "message": "[test] Add address relay tests involving outbound peers\n\nCo-authored-by: Amiti Uttarwar <amiti@uttarwar.org>",
      "tree": {
        "sha": "82c97c708431f1e1d9b54347d6c1961f41e79bca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82c97c708431f1e1d9b54347d6c1961f41e79bca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a6694eaed8f86a6ad79689bbcbfdbed4d73327c9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6694eaed8f86a6ad79689bbcbfdbed4d73327c9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a6694eaed8f86a6ad79689bbcbfdbed4d73327c9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6694eaed8f86a6ad79689bbcbfdbed4d73327c9/comments",
    "author": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8188b77c17d78bf608cb41978db4d0f46e91f7d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8188b77c17d78bf608cb41978db4d0f46e91f7d8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8188b77c17d78bf608cb41978db4d0f46e91f7d8"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 30,
      "deletions": 0
    },
    "files": [
      {
        "sha": "46c804e72890b136cd40361d372210d3ba2c1cb4",
        "filename": "test/functional/p2p_addr_relay.py",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6694eaed8f86a6ad79689bbcbfdbed4d73327c9/test/functional/p2p_addr_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6694eaed8f86a6ad79689bbcbfdbed4d73327c9/test/functional/p2p_addr_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addr_relay.py?ref=a6694eaed8f86a6ad79689bbcbfdbed4d73327c9",
        "patch": "@@ -94,6 +94,7 @@ def oversized_addr_test(self):\n         self.nodes[0].disconnect_p2ps()\n \n     def relay_tests(self):\n+        self.log.info('Test address relay')\n         self.log.info('Check that addr message content is relayed and added to addrman')\n         addr_source = self.nodes[0].add_p2p_connection(P2PInterface())\n         num_receivers = 7\n@@ -122,6 +123,35 @@ def relay_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+        self.log.info('Check relay of addresses received from outbound peers')\n+        inbound_peer = self.nodes[0].add_p2p_connection(AddrReceiver())\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        msg = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg, [inbound_peer])\n+        self.log.info('Check that the first addr message received from an outbound peer is not relayed')\n+        # Currently, there is a flag that prevents the first addr message received\n+        # from a new outbound peer to be relayed to others. Originally meant to prevent\n+        # large GETADDR responses from being relayed, it now typically affects the self-announcement\n+        # of the outbound peer which is often sent before the GETADDR response.\n+        assert_equal(inbound_peer.num_ipv4_received, 0)\n+\n+        self.log.info('Check that subsequent addr messages sent from an outbound peer are relayed')\n+        msg2 = self.setup_addr_msg(2)\n+        self.send_addr_msg(full_outbound_peer, msg2, [inbound_peer])\n+        assert_equal(inbound_peer.num_ipv4_received, 2)\n+\n+        self.log.info('Check address relay to outbound peers')\n+        block_relay_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=1, connection_type=\"block-relay-only\")\n+        msg3 = self.setup_addr_msg(2)\n+        self.send_addr_msg(inbound_peer, msg3, [full_outbound_peer, block_relay_peer])\n+\n+        self.log.info('Check that addresses are relayed to full outbound peers')\n+        assert_equal(full_outbound_peer.num_ipv4_received, 2)\n+        self.log.info('Check that addresses are not relayed to block-relay-only outbound peers')\n+        assert_equal(block_relay_peer.num_ipv4_received, 0)\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n     def getaddr_tests(self):\n         self.log.info('Test getaddr behavior')\n         self.log.info('Check that we send a getaddr message upon connecting to an outbound-full-relay peer')"
      }
    ]
  },
  {
    "sha": "a732ee353c1922a1f9ca082775884d190893e0e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzMyZWUzNTNjMTkyMmExZjljYTA4Mjc3NTg4NGQxOTA4OTNlMGU5",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-04-15T21:09:40Z"
      },
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2021-04-21T20:34:10Z"
      },
      "message": "[test] Add tests for addr relay in -blocksonly mode\n\nCo-Authored-By: Martin Zumsande <mzumsande@gmail.com>",
      "tree": {
        "sha": "03ce73163113230e3bcd378ff78fafa319137d2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/03ce73163113230e3bcd378ff78fafa319137d2b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a732ee353c1922a1f9ca082775884d190893e0e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a732ee353c1922a1f9ca082775884d190893e0e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a732ee353c1922a1f9ca082775884d190893e0e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a732ee353c1922a1f9ca082775884d190893e0e9/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6694eaed8f86a6ad79689bbcbfdbed4d73327c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6694eaed8f86a6ad79689bbcbfdbed4d73327c9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6694eaed8f86a6ad79689bbcbfdbed4d73327c9"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 23,
      "deletions": 0
    },
    "files": [
      {
        "sha": "fdd02b7324943c3a776ebf5dc0d3425a17dd157b",
        "filename": "test/functional/p2p_addr_relay.py",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a732ee353c1922a1f9ca082775884d190893e0e9/test/functional/p2p_addr_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a732ee353c1922a1f9ca082775884d190893e0e9/test/functional/p2p_addr_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addr_relay.py?ref=a732ee353c1922a1f9ca082775884d190893e0e9",
        "patch": "@@ -59,6 +59,7 @@ def run_test(self):\n         self.oversized_addr_test()\n         self.relay_tests()\n         self.getaddr_tests()\n+        self.blocksonly_mode_tests()\n \n     def setup_addr_msg(self, num):\n         addrs = []\n@@ -167,6 +168,7 @@ def getaddr_tests(self):\n         self.log.info('Check that we answer getaddr messages only from inbound peers')\n         inbound_peer = self.nodes[0].add_p2p_connection(GetAddrStore())\n         inbound_peer.sync_with_ping()\n+\n         # Add some addresses to addrman\n         for i in range(1000):\n             first_octet = i >> 8\n@@ -188,6 +190,27 @@ def getaddr_tests(self):\n \n         self.nodes[0].disconnect_p2ps()\n \n+    def blocksonly_mode_tests(self):\n+        self.log.info('Test addr relay in -blocksonly mode')\n+        self.restart_node(0, [\"-blocksonly\"])\n+        self.mocktime = int(time.time())\n+\n+        self.log.info('Check that we send getaddr messages')\n+        full_outbound_peer = self.nodes[0].add_outbound_p2p_connection(GetAddrStore(), p2p_idx=0, connection_type=\"outbound-full-relay\")\n+        full_outbound_peer.sync_with_ping()\n+        assert full_outbound_peer.getaddr_received\n+\n+        self.log.info('Check that we relay address messages')\n+        addr_source = self.nodes[0].add_p2p_connection(P2PInterface())\n+        msg = self.setup_addr_msg(2)\n+        addr_source.send_and_ping(msg)\n+        self.mocktime += 5 * 60\n+        self.nodes[0].setmocktime(self.mocktime)\n+        full_outbound_peer.sync_with_ping()\n+        assert_equal(full_outbound_peer.num_ipv4_received, 2)\n+\n+        self.nodes[0].disconnect_p2ps()\n+\n \n if __name__ == '__main__':\n     AddrTest().main()"
      }
    ]
  }
]