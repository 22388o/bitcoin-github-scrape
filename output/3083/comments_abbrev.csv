jgarzik,2013-10-15T02:33:09Z,"untested ACK.\n\nACK, presuming getblocks and getheaders style downloads from older clients has been tested.\n",https://github.com/bitcoin/bitcoin/pull/3083#issuecomment-26305261,26305261,
BitcoinPullTester,2013-10-15T09:48:36Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f9b15a4fc94cdd4b535a2f7b1eccc04332367d00 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3083#issuecomment-26321693,26321693,
sipa,2013-10-15T20:47:26Z,"@jgarzik We should test that, indeed.\n@gmaxwell Feel like testing sync by/from a node with this patch? :p\n",https://github.com/bitcoin/bitcoin/pull/3083#issuecomment-26370768,26370768,
Diapolo,2013-10-15T20:51:59Z,"Sometimes I miss the practical pros such pulls give, like 5% faster in IBD or something easily understandable. Can you give an insight if this is the case here :)?\n",https://github.com/bitcoin/bitcoin/pull/3083#issuecomment-26371125,26371125,
sipa,2013-10-15T21:25:09Z,"There's two improvements here.\n\nThe first is just a cleanup. The CBlockLocator datastructure is part of the P2P protocol (so something very basic), but its methods directly refer to some of the validation engine's globals. That's really ugly, as a user of that class you won't expect that using some of its methods imply you need to do locking on cs_main, or that it would depend on global data in ",https://github.com/bitcoin/bitcoin/pull/3083#issuecomment-26373684,26373684,
Diapolo,2013-10-15T21:37:41Z,"ACK description wise, sounds like a very good idea! And thanks for taking the time to explain it to me :+1:.\n",https://github.com/bitcoin/bitcoin/pull/3083#issuecomment-26374637,26374637,
gavinandresen,2013-10-15T22:59:31Z,"ACK.\n\nCode changes look good, and I tested following combinations against new code:\n\nold code, partial chain, main network\nold code, partial chain, test network\nold code, fresh sync, test network\n",https://github.com/bitcoin/bitcoin/pull/3083#issuecomment-26380080,26380080,
gavinandresen,2013-10-15T03:56:32Z,Not a merge-stopping issue... but why not vChain.clear() ? I doubt SetTip(NULL) called often enough to justify the memory saved by the more obscure swap-with-an-empty-vector coding idiom.\n,https://github.com/bitcoin/bitcoin/pull/3083#discussion_r6962205,6962205,src/main.cpp
gavinandresen,2013-10-15T04:02:59Z,clang warns (repeatedly):\n\n```\n./core.h:669:1: warning: 'CBlockLocator' defined as a struct here but previously declared as a class [-Wmismatched-tags]\n```\n\n... because db.h contains  'class CBlockLocator;'\n,https://github.com/bitcoin/bitcoin/pull/3083#discussion_r6962260,6962260,src/core.h
sipa,2013-10-15T20:41:03Z,Fixed.\n,https://github.com/bitcoin/bitcoin/pull/3083#discussion_r6984299,6984299,src/core.h
sipa,2013-10-15T20:41:16Z,Fair enough. Fixed.\n,https://github.com/bitcoin/bitcoin/pull/3083#discussion_r6984306,6984306,src/main.cpp
