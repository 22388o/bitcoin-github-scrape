[
  {
    "sha": "dcb69fde5aae3ef572e299e57a45712f005daf8b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkY2I2OWZkZTVhYWUzZWY1NzJlMjk5ZTU3YTQ1NzEyZjAwNWRhZjhi",
    "commit": {
      "author": {
        "name": "Jimmy Song",
        "email": "jaejoon@gmail.com",
        "date": "2017-04-26T04:04:11Z"
      },
      "committer": {
        "name": "Jimmy Song",
        "email": "jaejoon@gmail.com",
        "date": "2017-04-26T14:25:57Z"
      },
      "message": "[test] Unit test amount.h/amount.cpp\n\nAdd tests for MoneyRange, binary operators, ToString and a constructor",
      "tree": {
        "sha": "a560a77a2ddb11611e4e3f5f5d73e9d4ff2fe916",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a560a77a2ddb11611e4e3f5f5d73e9d4ff2fe916"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dcb69fde5aae3ef572e299e57a45712f005daf8b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcb69fde5aae3ef572e299e57a45712f005daf8b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dcb69fde5aae3ef572e299e57a45712f005daf8b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcb69fde5aae3ef572e299e57a45712f005daf8b/comments",
    "author": {
      "login": "jimmysong",
      "id": 524761,
      "node_id": "MDQ6VXNlcjUyNDc2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/524761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmysong",
      "html_url": "https://github.com/jimmysong",
      "followers_url": "https://api.github.com/users/jimmysong/followers",
      "following_url": "https://api.github.com/users/jimmysong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmysong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmysong/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmysong/orgs",
      "repos_url": "https://api.github.com/users/jimmysong/repos",
      "events_url": "https://api.github.com/users/jimmysong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmysong/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jimmysong",
      "id": 524761,
      "node_id": "MDQ6VXNlcjUyNDc2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/524761?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimmysong",
      "html_url": "https://github.com/jimmysong",
      "followers_url": "https://api.github.com/users/jimmysong/followers",
      "following_url": "https://api.github.com/users/jimmysong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimmysong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimmysong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimmysong/subscriptions",
      "organizations_url": "https://api.github.com/users/jimmysong/orgs",
      "repos_url": "https://api.github.com/users/jimmysong/repos",
      "events_url": "https://api.github.com/users/jimmysong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimmysong/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e0a7e1994e6f3ebbf076feb50552440a365fd317",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0a7e1994e6f3ebbf076feb50552440a365fd317",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e0a7e1994e6f3ebbf076feb50552440a365fd317"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 37,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c95def5e87fc9a254357945fd867d2a522a842e9",
        "filename": "src/test/amount_tests.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 1,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dcb69fde5aae3ef572e299e57a45712f005daf8b/src/test/amount_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dcb69fde5aae3ef572e299e57a45712f005daf8b/src/test/amount_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/amount_tests.cpp?ref=dcb69fde5aae3ef572e299e57a45712f005daf8b",
        "patch": "@@ -9,9 +9,16 @@\n \n BOOST_FIXTURE_TEST_SUITE(amount_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(MoneyRangeTest)\n+{\n+    BOOST_CHECK_EQUAL(MoneyRange(CAmount(-1)), false);\n+    BOOST_CHECK_EQUAL(MoneyRange(MAX_MONEY + CAmount(1)), false);\n+    BOOST_CHECK_EQUAL(MoneyRange(CAmount(1)), true);\n+}\n+\n BOOST_AUTO_TEST_CASE(GetFeeTest)\n {\n-    CFeeRate feeRate;\n+    CFeeRate feeRate, altFeeRate;\n \n     feeRate = CFeeRate(0);\n     // Must always return 0\n@@ -53,6 +60,11 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     BOOST_CHECK_EQUAL(feeRate.GetFee(8), -1); // Special case: returns -1 instead of 0\n     BOOST_CHECK_EQUAL(feeRate.GetFee(9), -1);\n \n+    // check alternate constructor\n+    feeRate = CFeeRate(1000);\n+    altFeeRate = CFeeRate(feeRate);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(100), altFeeRate.GetFee(100));\n+\n     // Check full constructor\n     // default value\n     BOOST_CHECK(CFeeRate(CAmount(-1), 1000) == CFeeRate(-1));\n@@ -68,4 +80,28 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     CFeeRate(MAX_MONEY, std::numeric_limits<size_t>::max() >> 1).GetFeePerK();\n }\n \n+BOOST_AUTO_TEST_CASE(BinaryOperatorTest)\n+{\n+    CFeeRate a, b;\n+    a = CFeeRate(1);\n+    b = CFeeRate(2);\n+    BOOST_CHECK(a < b);\n+    BOOST_CHECK(b > a);\n+    BOOST_CHECK(a == a);\n+    BOOST_CHECK(a <= b);\n+    BOOST_CHECK(a <= a);\n+    BOOST_CHECK(b >= a);\n+    BOOST_CHECK(b >= b);\n+    // a should be 0.00000002 BTC/kB now\n+    a += a;\n+    BOOST_CHECK(a == b);\n+}\n+\n+BOOST_AUTO_TEST_CASE(ToStringTest)\n+{\n+    CFeeRate feeRate;\n+    feeRate = CFeeRate(1);\n+    BOOST_CHECK_EQUAL(feeRate.ToString(), \"0.00000001 BTC/kB\");\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]