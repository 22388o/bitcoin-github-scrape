[
  {
    "sha": "6158a6d3978a18d5ac4166ca2f59056d8ef71c3d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTU4YTZkMzk3OGExOGQ1YWM0MTY2Y2EyZjU5MDU2ZDhlZjcxYzNk",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-01-29T23:09:46Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-01-29T23:09:46Z"
      },
      "message": "refactor: Replace JSONRPCRequest fHelp field with mode field\n\nNo change in behavior",
      "tree": {
        "sha": "13a8ad94af645984bb524c0a3e0db638b10f0430",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/13a8ad94af645984bb524c0a3e0db638b10f0430"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "80e16cadd56ca73b94b01c5cd98a325fe9d89bf3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80e16cadd56ca73b94b01c5cd98a325fe9d89bf3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/80e16cadd56ca73b94b01c5cd98a325fe9d89bf3"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 18,
      "deletions": 21
    },
    "files": [
      {
        "sha": "1751c24cd3fad2c34c6f0b089fc26f460e76c10b",
        "filename": "src/rpc/request.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d/src/rpc/request.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d/src/rpc/request.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/request.h?ref=6158a6d3978a18d5ac4166ca2f59056d8ef71c3d",
        "patch": "@@ -34,19 +34,19 @@ class JSONRPCRequest\n     UniValue id;\n     std::string strMethod;\n     UniValue params;\n-    bool fHelp;\n+    enum Mode { EXECUTE, GET_HELP } mode = EXECUTE;\n     std::string URI;\n     std::string authUser;\n     std::string peerAddr;\n     const util::Ref& context;\n \n-    explicit JSONRPCRequest(const util::Ref& context) : id(NullUniValue), params(NullUniValue), fHelp(false), context(context) {}\n+    explicit JSONRPCRequest(const util::Ref& context) : id(NullUniValue), params(NullUniValue), context(context) {}\n \n     //! Initializes request information from another request object and the\n     //! given context. The implementation should be updated if any members are\n     //! added or removed above.\n     JSONRPCRequest(const JSONRPCRequest& other, const util::Ref& context)\n-        : id(other.id), strMethod(other.strMethod), params(other.params), fHelp(other.fHelp), URI(other.URI),\n+        : id(other.id), strMethod(other.strMethod), params(other.params), mode(other.mode), URI(other.URI),\n           authUser(other.authUser), peerAddr(other.peerAddr), context(context)\n     {\n     }"
      },
      {
        "sha": "1b8bbafcef03d2d98f74b8c9ca0af96e179d886a",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=6158a6d3978a18d5ac4166ca2f59056d8ef71c3d",
        "patch": "@@ -88,7 +88,7 @@ std::string CRPCTable::help(const std::string& strCommand, const JSONRPCRequest&\n     sort(vCommands.begin(), vCommands.end());\n \n     JSONRPCRequest jreq(helpreq);\n-    jreq.fHelp = true;\n+    jreq.mode = JSONRPCRequest::GET_HELP;\n     jreq.params = UniValue();\n \n     for (const std::pair<std::string, const CRPCCommand*>& command : vCommands)"
      },
      {
        "sha": "dc57d2be072b0c413e5397d0c654b73507105545",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=6158a6d3978a18d5ac4166ca2f59056d8ef71c3d",
        "patch": "@@ -476,6 +476,18 @@ std::string RPCExamples::ToDescriptionString() const\n     return m_examples.empty() ? m_examples : \"\\nExamples:\\n\" + m_examples;\n }\n \n+UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request)\n+{\n+    /*\n+     * Check if the given request is valid according to this command or if\n+     * the user is asking for help information, and throw help when appropriate.\n+     */\n+    if (request.mode == JSONRPCRequest::GET_HELP || !IsValidNumArgs(request.params.size())) {\n+        throw std::runtime_error(ToString());\n+    }\n+    return m_fun(*this, request);\n+}\n+\n bool RPCHelpMan::IsValidNumArgs(size_t num_args) const\n {\n     size_t num_required_args = 0;"
      },
      {
        "sha": "aaca88790093b2f2e959555d6a1825505dd984bf",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 15,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=6158a6d3978a18d5ac4166ca2f59056d8ef71c3d",
        "patch": "@@ -335,26 +335,12 @@ class RPCHelpMan\n     using RPCMethodImpl = std::function<UniValue(const RPCHelpMan&, const JSONRPCRequest&)>;\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n+    UniValue HandleRequest(const JSONRPCRequest& request);\n     std::string ToString() const;\n     /** Append the named args that need to be converted from string to another JSON type */\n     void AppendArgMap(UniValue& arr) const;\n-    UniValue HandleRequest(const JSONRPCRequest& request)\n-    {\n-        Check(request);\n-        return m_fun(*this, request);\n-    }\n     /** If the supplied number of args is neither too small nor too high */\n     bool IsValidNumArgs(size_t num_args) const;\n-    /**\n-     * Check if the given request is valid according to this command or if\n-     * the user is asking for help information, and throw help when appropriate.\n-     */\n-    inline void Check(const JSONRPCRequest& request) const {\n-        if (request.fHelp || !IsValidNumArgs(request.params.size())) {\n-            throw std::runtime_error(ToString());\n-        }\n-    }\n-\n     std::vector<std::string> GetArgNames() const;\n \n     const std::string m_name;"
      },
      {
        "sha": "e88d60033f2a9b390c0c080d0ae027e78befa6ba",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=6158a6d3978a18d5ac4166ca2f59056d8ef71c3d",
        "patch": "@@ -36,7 +36,6 @@ UniValue RPCTestingSetup::CallRPC(std::string args)\n     JSONRPCRequest request(context);\n     request.strMethod = strMethod;\n     request.params = RPCConvertValues(strMethod, vArgs);\n-    request.fHelp = false;\n     if (RPCIsInWarmup(nullptr)) SetRPCWarmupFinished();\n     try {\n         UniValue result = tableRPC.execute(request);"
      },
      {
        "sha": "2b613a0d32a27d721070a1471815f6a93486b925",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=6158a6d3978a18d5ac4166ca2f59056d8ef71c3d",
        "patch": "@@ -96,7 +96,7 @@ bool GetWalletNameFromJSONRPCRequest(const JSONRPCRequest& request, std::string&\n \n std::shared_ptr<CWallet> GetWalletForJSONRPCRequest(const JSONRPCRequest& request)\n {\n-    CHECK_NONFATAL(!request.fHelp);\n+    CHECK_NONFATAL(request.mode == JSONRPCRequest::EXECUTE);\n     std::string wallet_name;\n     if (GetWalletNameFromJSONRPCRequest(request, wallet_name)) {\n         std::shared_ptr<CWallet> pwallet = GetWallet(wallet_name);"
      }
    ]
  },
  {
    "sha": "14f3d9b908ed9e78997bfaad3d8a06357a89d46e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNGYzZDliOTA4ZWQ5ZTc4OTk3YmZhYWQzZDhhMDYzNTdhODlkNDZl",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-01-29T23:12:19Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-01-29T23:12:19Z"
      },
      "message": "refactor: Add RPC server ExecuteCommands function\n\nNo change in behavior. New function is split from CRPCTable::execute and\nused in the next commit.",
      "tree": {
        "sha": "393ac84c51be5dff233dd04901ecda279537e11c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/393ac84c51be5dff233dd04901ecda279537e11c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14f3d9b908ed9e78997bfaad3d8a06357a89d46e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14f3d9b908ed9e78997bfaad3d8a06357a89d46e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/14f3d9b908ed9e78997bfaad3d8a06357a89d46e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14f3d9b908ed9e78997bfaad3d8a06357a89d46e/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6158a6d3978a18d5ac4166ca2f59056d8ef71c3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6158a6d3978a18d5ac4166ca2f59056d8ef71c3d"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 12,
      "deletions": 4
    },
    "files": [
      {
        "sha": "66134a77b2f320ae86b057b8f66b7f9c66eab952",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14f3d9b908ed9e78997bfaad3d8a06357a89d46e/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14f3d9b908ed9e78997bfaad3d8a06357a89d46e/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=14f3d9b908ed9e78997bfaad3d8a06357a89d46e",
        "patch": "@@ -437,6 +437,16 @@ static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, c\n     return out;\n }\n \n+static bool ExecuteCommands(const std::vector<const CRPCCommand*>& commands, const JSONRPCRequest& request, UniValue& result)\n+{\n+    for (const auto& command : commands) {\n+        if (ExecuteCommand(*command, request, result, &command == &commands.back())) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n UniValue CRPCTable::execute(const JSONRPCRequest &request) const\n {\n     // Return immediately if in warmup\n@@ -450,10 +460,8 @@ UniValue CRPCTable::execute(const JSONRPCRequest &request) const\n     auto it = mapCommands.find(request.strMethod);\n     if (it != mapCommands.end()) {\n         UniValue result;\n-        for (const auto& command : it->second) {\n-            if (ExecuteCommand(*command, request, result, &command == &it->second.back())) {\n-                return result;\n-            }\n+        if (ExecuteCommands(it->second, request, result)) {\n+            return result;\n         }\n     }\n     throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found\");"
      }
    ]
  },
  {
    "sha": "9048c58e10841d9e1d709c0a325dd14684cec325",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MDQ4YzU4ZTEwODQxZDllMWQ3MDljMGEzMjVkZDE0Njg0Y2VjMzI1",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-01-29T23:15:48Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-01-29T23:15:48Z"
      },
      "message": "Remove pointer cast in CRPCTable::dumpArgMap\n\nCRPCTable::dumpArgMap currently works by casting RPC command unique_id\ninteger field to a function pointer, and then calling the function. The\nunique_id field wasn't supposed to be used this way (it's meant to be\nused to detect RPC aliases), and this code segfaults in the rpc_help.py\ntest in multiprocess PR https://github.com/bitcoin/bitcoin/pull/10102\nbecause wallet RPC functions aren't directly accessible from the node\nprocess.\n\nFix this by adding a new GET_ARGS request mode to retrieve argument\ninformation similar to the way the GET_HELP mode retrieves help\ninformation.",
      "tree": {
        "sha": "aa399e99d405412a1205c6eec856d5a886b21dc7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa399e99d405412a1205c6eec856d5a886b21dc7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9048c58e10841d9e1d709c0a325dd14684cec325",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9048c58e10841d9e1d709c0a325dd14684cec325",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9048c58e10841d9e1d709c0a325dd14684cec325",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9048c58e10841d9e1d709c0a325dd14684cec325/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "14f3d9b908ed9e78997bfaad3d8a06357a89d46e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14f3d9b908ed9e78997bfaad3d8a06357a89d46e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/14f3d9b908ed9e78997bfaad3d8a06357a89d46e"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 20,
      "deletions": 10
    },
    "files": [
      {
        "sha": "27d06f3c92802d97e353c1dc381d22d8944f3b95",
        "filename": "src/rpc/request.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9048c58e10841d9e1d709c0a325dd14684cec325/src/rpc/request.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9048c58e10841d9e1d709c0a325dd14684cec325/src/rpc/request.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/request.h?ref=9048c58e10841d9e1d709c0a325dd14684cec325",
        "patch": "@@ -34,7 +34,7 @@ class JSONRPCRequest\n     UniValue id;\n     std::string strMethod;\n     UniValue params;\n-    enum Mode { EXECUTE, GET_HELP } mode = EXECUTE;\n+    enum Mode { EXECUTE, GET_HELP, GET_ARGS } mode = EXECUTE;\n     std::string URI;\n     std::string authUser;\n     std::string peerAddr;"
      },
      {
        "sha": "39938f4eb9836284a07fbfe0e48d83f0b96b564f",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 5,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9048c58e10841d9e1d709c0a325dd14684cec325/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9048c58e10841d9e1d709c0a325dd14684cec325/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=9048c58e10841d9e1d709c0a325dd14684cec325",
        "patch": "@@ -149,7 +149,7 @@ static RPCHelpMan help()\n     }\n     if (strCommand == \"dump_all_command_conversions\") {\n         // Used for testing only, undocumented\n-        return tableRPC.dumpArgMap();\n+        return tableRPC.dumpArgMap(jsonRequest);\n     }\n \n     return tableRPC.help(strCommand, jsonRequest);\n@@ -492,13 +492,18 @@ std::vector<std::string> CRPCTable::listCommands() const\n     return commandList;\n }\n \n-UniValue CRPCTable::dumpArgMap() const\n+UniValue CRPCTable::dumpArgMap(const JSONRPCRequest& args_request) const\n {\n+    JSONRPCRequest request(args_request);\n+    request.mode = JSONRPCRequest::GET_ARGS;\n+\n     UniValue ret{UniValue::VARR};\n     for (const auto& cmd : mapCommands) {\n-        for (const auto& c : cmd.second) {\n-            const auto help = RpcMethodFnType(c->unique_id)();\n-            help.AppendArgMap(ret);\n+        UniValue result;\n+        if (ExecuteCommands(cmd.second, request, result)) {\n+            for (const auto& values : result.getValues()) {\n+                ret.push_back(values);\n+            }\n         }\n     }\n     return ret;"
      },
      {
        "sha": "03967020c2ec6095717221749874cfc61bb9f77e",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9048c58e10841d9e1d709c0a325dd14684cec325/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9048c58e10841d9e1d709c0a325dd14684cec325/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=9048c58e10841d9e1d709c0a325dd14684cec325",
        "patch": "@@ -148,7 +148,7 @@ class CRPCTable\n     /**\n      * Return all named arguments that need to be converted by the client from string to another JSON type\n      */\n-    UniValue dumpArgMap() const;\n+    UniValue dumpArgMap(const JSONRPCRequest& request) const;\n \n     /**\n      * Appends a CRPCCommand to the dispatch table."
      },
      {
        "sha": "c7472fc5c1088646ba2b02f52d4ae02396632842",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9048c58e10841d9e1d709c0a325dd14684cec325/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9048c58e10841d9e1d709c0a325dd14684cec325/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=9048c58e10841d9e1d709c0a325dd14684cec325",
        "patch": "@@ -478,6 +478,9 @@ std::string RPCExamples::ToDescriptionString() const\n \n UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request)\n {\n+    if (request.mode == JSONRPCRequest::GET_ARGS) {\n+        return GetArgMap();\n+    }\n     /*\n      * Check if the given request is valid according to this command or if\n      * the user is asking for help information, and throw help when appropriate.\n@@ -561,8 +564,9 @@ std::string RPCHelpMan::ToString() const\n     return ret;\n }\n \n-void RPCHelpMan::AppendArgMap(UniValue& arr) const\n+UniValue RPCHelpMan::GetArgMap() const\n {\n+    UniValue arr{UniValue::VARR};\n     for (int i{0}; i < int(m_args.size()); ++i) {\n         const auto& arg = m_args.at(i);\n         std::vector<std::string> arg_names;\n@@ -577,6 +581,7 @@ void RPCHelpMan::AppendArgMap(UniValue& arr) const\n             arr.push_back(map);\n         }\n     }\n+    return arr;\n }\n \n std::string RPCArg::GetFirstName() const"
      },
      {
        "sha": "90521949a678da1d648341d47682e8f604594cfc",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9048c58e10841d9e1d709c0a325dd14684cec325/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9048c58e10841d9e1d709c0a325dd14684cec325/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=9048c58e10841d9e1d709c0a325dd14684cec325",
        "patch": "@@ -337,8 +337,8 @@ class RPCHelpMan\n \n     UniValue HandleRequest(const JSONRPCRequest& request);\n     std::string ToString() const;\n-    /** Append the named args that need to be converted from string to another JSON type */\n-    void AppendArgMap(UniValue& arr) const;\n+    /** Return the named args that need to be converted from string to another JSON type */\n+    UniValue GetArgMap() const;\n     /** If the supplied number of args is neither too small nor too high */\n     bool IsValidNumArgs(size_t num_args) const;\n     std::vector<std::string> GetArgNames() const;"
      }
    ]
  }
]