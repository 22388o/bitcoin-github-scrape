[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/391437656",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-391437656",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 391437656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTQzNzY1Ng==",
    "user": {
      "login": "skeees",
      "id": 195769,
      "node_id": "MDQ6VXNlcjE5NTc2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skeees",
      "html_url": "https://github.com/skeees",
      "followers_url": "https://api.github.com/users/skeees/followers",
      "following_url": "https://api.github.com/users/skeees/following{/other_user}",
      "gists_url": "https://api.github.com/users/skeees/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skeees/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
      "organizations_url": "https://api.github.com/users/skeees/orgs",
      "repos_url": "https://api.github.com/users/skeees/repos",
      "events_url": "https://api.github.com/users/skeees/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skeees/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-23T17:45:46Z",
    "updated_at": "2018-05-23T17:45:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "to ease review, might be good to split this into a moveonly commit and then a subsequent one with changes if thats possible?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/391437656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/391800316",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-391800316",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 391800316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTgwMDMxNg==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-24T17:42:09Z",
    "updated_at": "2018-05-24T17:42:09Z",
    "author_association": "MEMBER",
    "body": "Why move the version bits information to a separate file? This introduces a circular dependency between chainparams and versionbitsinfo,",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/391800316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/392321101",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-392321101",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 392321101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjMyMTEwMQ==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-27T10:36:54Z",
    "updated_at": "2018-05-27T10:36:54Z",
    "author_association": "MEMBER",
    "body": "> to ease review, might be good to split this into a moveonly commit and then a subsequent one with changes if thats possible?\r\n\r\nSure, but I would like to wait for some concept acks first.\r\n\r\n> Why move the version bits information to a separate file? This introduces a circular dependency between chainparams and versionbitsinfo,\r\n\r\nNo, it does not. After this, versionbits depends onchainparams, which depends on versionbitsinfo, which depends on consensus/params.\r\nThe separation is precisely to avoid a circular dependency between chainparams and versionbits.\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/392321101/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/392362127",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-392362127",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 392362127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjM2MjEyNw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-27T20:01:35Z",
    "updated_at": "2018-05-27T20:01:35Z",
    "author_association": "MEMBER",
    "body": "> No, it does not. After this, versionbits depends onchainparams, which depends on versionbitsinfo, which depends on consensus/params.\r\n> The separation is precisely to avoid a circular dependency between chainparams and versionbits.\r\n\r\nMy apologies! I confused chainparams and consensus/params when reading this.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/392362127/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/393172348",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-393172348",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 393172348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzE3MjM0OA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-30T13:58:47Z",
    "updated_at": "2018-05-30T13:58:47Z",
    "author_association": "MEMBER",
    "body": "Needs rebase due to merge of #13341\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/393172348/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/397837719",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-397837719",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 397837719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzgzNzcxOQ==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-16T20:42:49Z",
    "updated_at": "2018-06-16T20:42:49Z",
    "author_association": "MEMBER",
    "body": "Rebased and separated MOVEONLY commit.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/397837719/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/406160934",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-406160934",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 406160934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjE2MDkzNA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T05:41:05Z",
    "updated_at": "2018-07-19T22:36:38Z",
    "author_association": "MEMBER",
    "body": "rebased\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/406160934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/406435380",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-406435380",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 406435380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjQzNTM4MA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T22:36:52Z",
    "updated_at": "2018-07-19T22:36:52Z",
    "author_association": "MEMBER",
    "body": "Fixed nit in https://github.com/bitcoin/bitcoin/pull/13311#discussion_r201876880",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/406435380/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/406459616",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-406459616",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 406459616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjQ1OTYxNg==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-20T01:13:49Z",
    "updated_at": "2018-07-20T01:13:49Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/406459616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/406462100",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-406462100",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 406462100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjQ2MjEwMA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-20T01:31:34Z",
    "updated_at": "2018-07-20T01:31:34Z",
    "author_association": "MEMBER",
    "body": "Fixed nit in https://github.com/bitcoin/bitcoin/pull/13311/files#r203899444",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/406462100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/418556456",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-418556456",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 418556456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODU1NjQ1Ng==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-05T00:06:36Z",
    "updated_at": "2018-09-05T00:06:36Z",
    "author_association": "MEMBER",
    "body": "Hopefully fixed all pending nits in the last commit to be squashed, please remind me if I left anything out. Also sorry about the wait, back from vacation.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/418556456/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/418919835",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-418919835",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 418919835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODkxOTgzNQ==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-06T00:04:28Z",
    "updated_at": "2018-09-06T00:04:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks good to me, fwiw",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/418919835/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419579264",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-419579264",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 419579264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTU3OTI2NA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-07T22:09:40Z",
    "updated_at": "2018-09-07T22:09:40Z",
    "author_association": "MEMBER",
    "body": "Of course, @DrahtBot , from now on I will rebase all my open PRs whenever you ask. Starting today with this PR. Thanks",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419579264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419764792",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-419764792",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 419764792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTc2NDc5Mg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T01:49:43Z",
    "updated_at": "2018-09-24T22:03:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #14309 (scripted-diff: Use non-throwing type-safe ChainType where possible by MarcoFalke)\n* #14053 (Add address-based index (attempt 4?) by marcinja)\n* #14045 (refactor: Fix the chainparamsbase -> util circular dependency by Empact)\n* #13751 (Utils and libraries: Drops the boost/algorithm/string/split.hpp dependency by 251Labs)\n* #10823 (Allow all mempool txs to be replaced after a configurable timeout (default 6h) by greenaddress)\n* #10443 (Add fee_est tool for debugging fee estimation code by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419764792/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420779255",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-420779255",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 420779255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDc3OTI1NQ==",
    "user": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-12T20:04:57Z",
    "updated_at": "2018-09-12T20:04:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK 18d5f26",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420779255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421845888",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-421845888",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 421845888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTg0NTg4OA==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-16T22:37:21Z",
    "updated_at": "2018-09-16T22:37:21Z",
    "author_association": "MEMBER",
    "body": "Any reason to use the global instead of a parameter?\nI think it's more encapsulated this way, but I tend to be alergic to\nglobals ib general. If people prefer a global I guess I will have to change\nit.\n\n\nOn Sun, 16 Sep 2018, 23:21 Jo\u00e3o Barbosa, <notifications@github.com> wrote:\n\n> *@promag* commented on this pull request.\n>\n> utACK 18d5f26\n> <https://github.com/bitcoin/bitcoin/commit/18d5f2621f2ade428e631d34b95e23c8be862ec8>,\n> with a little question.\n> ------------------------------\n>\n> In src/chainparams.cpp\n> <https://github.com/bitcoin/bitcoin/pull/13311#discussion_r217928196>:\n>\n> >  {\n>      if (chain == CBaseChainParams::MAIN)\n>          return std::unique_ptr<CChainParams>(new CMainParams());\n>      else if (chain == CBaseChainParams::TESTNET)\n>          return std::unique_ptr<CChainParams>(new CTestNetParams());\n>      else if (chain == CBaseChainParams::REGTEST)\n> -        return std::unique_ptr<CChainParams>(new CRegTestParams());\n> +        return std::unique_ptr<CChainParams>(new CRegTestParams(gArgs));\n>\n> Any reason to not use gArgs global in CRegTestParams constructor?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/13311#pullrequestreview-155758424>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AA9jStqUTYlVdHuFThL_C3Io272IQd7eks5ubsDAgaJpZM4UKcd3>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421845888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422384407",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-422384407",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 422384407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjM4NDQwNw==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T13:03:04Z",
    "updated_at": "2018-09-18T13:03:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK 18d5f2621f2ade428e631d34b95e23c8be862ec8",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422384407/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422860252",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-422860252",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 422860252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjg2MDI1Mg==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-19T16:03:21Z",
    "updated_at": "2018-09-19T16:03:21Z",
    "author_association": "MEMBER",
    "body": "Fixed 2 of the 3 clang warnings.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422860252/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423847512",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-423847512",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 423847512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzg0NzUxMg==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-23T20:59:59Z",
    "updated_at": "2018-09-23T20:59:59Z",
    "author_association": "MEMBER",
    "body": "Fixed latest style nit.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423847512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423855860",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-423855860",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 423855860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzg1NTg2MA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-23T23:25:37Z",
    "updated_at": "2018-09-23T23:25:37Z",
    "author_association": "MEMBER",
    "body": "utACK 6fa901f.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423855860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424118836",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#issuecomment-424118836",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13311",
    "id": 424118836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDExODgzNg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-24T20:45:54Z",
    "updated_at": "2018-09-24T20:45:54Z",
    "author_association": "MEMBER",
    "body": "re-utACK 6fa901f",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424118836/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201875969",
    "pull_request_review_id": 136464269,
    "id": 201875969,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTg3NTk2OQ==",
    "diff_hunk": "@@ -4,15 +4,17 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <chainparams.h>\n+#include <chainparamsseeds.h>\n #include <consensus/merkle.h>\n-\n #include <tinyformat.h>\n #include <util.h>\n #include <utilstrencodings.h>\n+#include <versionbitsinfo.h>\n \n #include <assert.h>\n \n-#include <chainparamsseeds.h>\n+#include <boost/algorithm/string/classification.hpp>\n+#include <boost/algorithm/string/split.hpp>",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 16,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "c3d5082ce373f5ee39bdf5daa7bae36ad94c5433",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "NB: it's still used in init.cpp, only for mempool replacement",
    "created_at": "2018-07-12T00:07:25Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r201875969",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201875969"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r201875969"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201875969/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 18,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201876512",
    "pull_request_review_id": 136464269,
    "id": 201876512,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTg3NjUxMg==",
    "diff_hunk": "@@ -4,15 +4,17 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <chainparams.h>\n+#include <chainparamsseeds.h>\n #include <consensus/merkle.h>\n-\n #include <tinyformat.h>\n #include <util.h>\n #include <utilstrencodings.h>\n+#include <versionbitsinfo.h>\n \n #include <assert.h>\n \n-#include <chainparamsseeds.h>\n+#include <boost/algorithm/string/classification.hpp>",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "c3d5082ce373f5ee39bdf5daa7bae36ad94c5433",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "NB: it's still used in init.cpp, only for mempool replacement",
    "created_at": "2018-07-12T00:11:19Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r201876512",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201876512"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r201876512"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201876512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 17,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201876880",
    "pull_request_review_id": 136464269,
    "id": 201876880,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTg3Njg4MA==",
    "diff_hunk": "@@ -55,6 +55,9 @@ BasicTestingSetup::BasicTestingSetup(const std::string& chainName)\n         InitSignatureCache();\n         InitScriptExecutionCache();\n         fCheckBlockIndex = true;\n+        // CreateAndProcessBlock() does not support building SegWit blocks, so don't activate in these tests.\n+        // TODO: fix the code to support SegWit blocks.\n+        gArgs.ForceSetArg(\"-vbparams\", \"segwit:0:999999999999\");",
    "path": "src/test/test_bitcoin.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "c3d5082ce373f5ee39bdf5daa7bae36ad94c5433",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: would be nice to keep using `Consensus::BIP9Deployment::NO_TIMEOUT`",
    "created_at": "2018-07-12T00:14:10Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r201876880",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201876880"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r201876880"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/201876880/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 60,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203899444",
    "pull_request_review_id": 138883723,
    "id": 203899444,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg5OTQ0NA==",
    "diff_hunk": "@@ -353,33 +351,78 @@ class CRegTestParams : public CChainParams {\n         /* enable fallback fee on regtest */\n         m_fallback_fee_enabled = true;\n     }\n+\n+    /**\n+     * Allows modifying the Version Bits regtest parameters.\n+     */\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    {\n+        consensus.vDeployments[d].nStartTime = nStartTime;\n+        consensus.vDeployments[d].nTimeout = nTimeout;\n+    }\n+    void UpdateVersionBitsParametersFromArgs(ArgsManager& args);\n };\n \n+void CRegTestParams::UpdateVersionBitsParametersFromArgs(ArgsManager& args)\n+{\n+    // Allow overriding version bits parameters for testing\n+    if (args.IsArgSet(\"-vbparams\")) {\n+        for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {\n+            std::vector<std::string> vDeploymentParams;\n+            boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n+            if (vDeploymentParams.size() != 3) {\n+                throw std::runtime_error(\"Version bits parameters malformed, expecting deployment:start:end\");\n+            }\n+            int64_t nStartTime, nTimeout;\n+            if (!ParseInt64(vDeploymentParams[1], &nStartTime)) {\n+                throw std::runtime_error(strprintf(\"Invalid nStartTime (%s)\", vDeploymentParams[1]));\n+            }\n+            if (!ParseInt64(vDeploymentParams[2], &nTimeout)) {\n+                throw std::runtime_error(strprintf(\"Invalid nTimeout (%s)\", vDeploymentParams[2]));\n+            }\n+            bool found = false;\n+            for (int j=0; j<(int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j)\n+            {\n+                if (vDeploymentParams[0].compare(VersionBitsDeploymentInfo[j].name) == 0) {\n+                    UpdateVersionBitsParameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n+                    found = true;\n+                    LogPrintf(\"Setting version bits activation parameters for %s to start=%ld, timeout=%ld\\n\", vDeploymentParams[0], nStartTime, nTimeout);\n+                    break;\n+                }\n+            }\n+            if (!found) {\n+                throw std::runtime_error(strprintf(\"Invalid deployment (%s)\", vDeploymentParams[0]));\n+            }\n+        }\n+    }\n+}\n+\n static std::unique_ptr<CChainParams> globalChainParams;",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 101,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "7067657731404c28ff87e46ec390992500ca13be",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could change this to `unique_ptr<const CChainParams>` to better ensure that params aren't changed after initialisation? (Means `CreateChainParams()` return value also needs to change, but that seems to work fine)",
    "created_at": "2018-07-19T23:11:44Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r203899444",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203899444"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r203899444"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203899444/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 400,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203901242",
    "pull_request_review_id": 138883723,
    "id": 203901242,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzkwMTI0Mg==",
    "diff_hunk": "@@ -353,33 +351,78 @@ class CRegTestParams : public CChainParams {\n         /* enable fallback fee on regtest */\n         m_fallback_fee_enabled = true;\n     }\n+\n+    /**\n+     * Allows modifying the Version Bits regtest parameters.\n+     */\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    {\n+        consensus.vDeployments[d].nStartTime = nStartTime;\n+        consensus.vDeployments[d].nTimeout = nTimeout;\n+    }\n+    void UpdateVersionBitsParametersFromArgs(ArgsManager& args);\n };\n \n+void CRegTestParams::UpdateVersionBitsParametersFromArgs(ArgsManager& args)\n+{\n+    // Allow overriding version bits parameters for testing\n+    if (args.IsArgSet(\"-vbparams\")) {\n+        for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {\n+            std::vector<std::string> vDeploymentParams;\n+            boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n+            if (vDeploymentParams.size() != 3) {\n+                throw std::runtime_error(\"Version bits parameters malformed, expecting deployment:start:end\");\n+            }\n+            int64_t nStartTime, nTimeout;\n+            if (!ParseInt64(vDeploymentParams[1], &nStartTime)) {\n+                throw std::runtime_error(strprintf(\"Invalid nStartTime (%s)\", vDeploymentParams[1]));\n+            }\n+            if (!ParseInt64(vDeploymentParams[2], &nTimeout)) {\n+                throw std::runtime_error(strprintf(\"Invalid nTimeout (%s)\", vDeploymentParams[2]));\n+            }\n+            bool found = false;\n+            for (int j=0; j<(int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j)\n+            {\n+                if (vDeploymentParams[0].compare(VersionBitsDeploymentInfo[j].name) == 0) {\n+                    UpdateVersionBitsParameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n+                    found = true;\n+                    LogPrintf(\"Setting version bits activation parameters for %s to start=%ld, timeout=%ld\\n\", vDeploymentParams[0], nStartTime, nTimeout);\n+                    break;\n+                }\n+            }\n+            if (!found) {\n+                throw std::runtime_error(strprintf(\"Invalid deployment (%s)\", vDeploymentParams[0]));\n+            }\n+        }\n+    }\n+}\n+\n static std::unique_ptr<CChainParams> globalChainParams;\n \n const CChainParams &Params() {\n     assert(globalChainParams);\n     return *globalChainParams;\n }\n \n-std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain)\n+std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain, ArgsManager& args)\n {\n     if (chain == CBaseChainParams::MAIN)\n         return std::unique_ptr<CChainParams>(new CMainParams());\n     else if (chain == CBaseChainParams::TESTNET)\n         return std::unique_ptr<CChainParams>(new CTestNetParams());\n     else if (chain == CBaseChainParams::REGTEST)\n-        return std::unique_ptr<CChainParams>(new CRegTestParams());\n+        return std::unique_ptr<CChainParams>(new CRegTestParams(args));\n     throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }\n \n-void SelectParams(const std::string& network)\n+std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain)\n {\n-    SelectBaseParams(network);\n-    globalChainParams = CreateChainParams(network);\n+    ArgsManager args;\n+    return CreateChainParams(chain, args);\n }\n \n-void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+void SelectParams(const std::string& network)\n {\n-    globalChainParams->UpdateVersionBitsParameters(d, nStartTime, nTimeout);\n+    SelectBaseParams(network);\n+    globalChainParams = CreateChainParams(network, gArgs);",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 135,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "7067657731404c28ff87e46ec390992500ca13be",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why not reference `gArgs` directly in `CreateChainParams()` when using REGTEST? This is the only place that actually calls `CreateChainParams` with the `args` parameter and the only place that calls it with `chain==REGTEST`. That way you don't need to have two different ways of calling `CreateChainParams`.",
    "created_at": "2018-07-19T23:23:40Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r203901242",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203901242"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r203901242"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203901242/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 427,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203901479",
    "pull_request_review_id": 138885990,
    "id": 203901479,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzkwMTQ3OQ==",
    "diff_hunk": "@@ -280,7 +276,7 @@ class CTestNetParams : public CChainParams {\n  */\n class CRegTestParams : public CChainParams {\n public:\n-    CRegTestParams() {\n+    CRegTestParams(ArgsManager& args) {",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "7067657731404c28ff87e46ec390992500ca13be",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is it necessary to pass in an entire ArgsManager object? It seems only the -vbparams value is used. What about just passing in the vbparams value?",
    "created_at": "2018-07-19T23:25:04Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r203901479",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203901479"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r203901479"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203901479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 279,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203901688",
    "pull_request_review_id": 138886233,
    "id": 203901688,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzkwMTY4OA==",
    "diff_hunk": "@@ -280,7 +276,7 @@ class CTestNetParams : public CChainParams {\n  */\n class CRegTestParams : public CChainParams {\n public:\n-    CRegTestParams() {\n+    CRegTestParams(ArgsManager& args) {",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "7067657731404c28ff87e46ec390992500ca13be",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Well, the point of that is to make it easy to add further params, like in https://github.com/bitcoin/bitcoin/pull/8994 (probably not all of them are interesting for testing).\r\n",
    "created_at": "2018-07-19T23:26:33Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r203901688",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203901688"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r203901688"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203901688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 279,
    "side": "RIGHT",
    "in_reply_to_id": 203901479
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203917276",
    "pull_request_review_id": 138904046,
    "id": 203917276,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzkxNzI3Ng==",
    "diff_hunk": "@@ -353,33 +351,78 @@ class CRegTestParams : public CChainParams {\n         /* enable fallback fee on regtest */\n         m_fallback_fee_enabled = true;\n     }\n+\n+    /**\n+     * Allows modifying the Version Bits regtest parameters.\n+     */\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    {\n+        consensus.vDeployments[d].nStartTime = nStartTime;\n+        consensus.vDeployments[d].nTimeout = nTimeout;\n+    }\n+    void UpdateVersionBitsParametersFromArgs(ArgsManager& args);\n };\n \n+void CRegTestParams::UpdateVersionBitsParametersFromArgs(ArgsManager& args)\n+{\n+    // Allow overriding version bits parameters for testing\n+    if (args.IsArgSet(\"-vbparams\")) {\n+        for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {\n+            std::vector<std::string> vDeploymentParams;\n+            boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n+            if (vDeploymentParams.size() != 3) {\n+                throw std::runtime_error(\"Version bits parameters malformed, expecting deployment:start:end\");\n+            }\n+            int64_t nStartTime, nTimeout;\n+            if (!ParseInt64(vDeploymentParams[1], &nStartTime)) {\n+                throw std::runtime_error(strprintf(\"Invalid nStartTime (%s)\", vDeploymentParams[1]));\n+            }\n+            if (!ParseInt64(vDeploymentParams[2], &nTimeout)) {\n+                throw std::runtime_error(strprintf(\"Invalid nTimeout (%s)\", vDeploymentParams[2]));\n+            }\n+            bool found = false;\n+            for (int j=0; j<(int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j)\n+            {\n+                if (vDeploymentParams[0].compare(VersionBitsDeploymentInfo[j].name) == 0) {\n+                    UpdateVersionBitsParameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n+                    found = true;\n+                    LogPrintf(\"Setting version bits activation parameters for %s to start=%ld, timeout=%ld\\n\", vDeploymentParams[0], nStartTime, nTimeout);\n+                    break;\n+                }\n+            }\n+            if (!found) {\n+                throw std::runtime_error(strprintf(\"Invalid deployment (%s)\", vDeploymentParams[0]));\n+            }\n+        }\n+    }\n+}\n+\n static std::unique_ptr<CChainParams> globalChainParams;\n \n const CChainParams &Params() {\n     assert(globalChainParams);\n     return *globalChainParams;\n }\n \n-std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain)\n+std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain, ArgsManager& args)\n {\n     if (chain == CBaseChainParams::MAIN)\n         return std::unique_ptr<CChainParams>(new CMainParams());\n     else if (chain == CBaseChainParams::TESTNET)\n         return std::unique_ptr<CChainParams>(new CTestNetParams());\n     else if (chain == CBaseChainParams::REGTEST)\n-        return std::unique_ptr<CChainParams>(new CRegTestParams());\n+        return std::unique_ptr<CChainParams>(new CRegTestParams(args));\n     throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }\n \n-void SelectParams(const std::string& network)\n+std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain)\n {\n-    SelectBaseParams(network);\n-    globalChainParams = CreateChainParams(network);\n+    ArgsManager args;\n+    return CreateChainParams(chain, args);\n }\n \n-void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+void SelectParams(const std::string& network)\n {\n-    globalChainParams->UpdateVersionBitsParameters(d, nStartTime, nTimeout);\n+    SelectBaseParams(network);\n+    globalChainParams = CreateChainParams(network, gArgs);",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 135,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "7067657731404c28ff87e46ec390992500ca13be",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I can remove the new way of calling CreateChainParams, but the idea was that some unittests could create their own custom ArgsManager instead of using gArgs. This would only serve for testing functions that explicitly take a CChainParams instead of relaying on Params().",
    "created_at": "2018-07-20T01:23:17Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r203917276",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203917276"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r203917276"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203917276/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 427,
    "side": "RIGHT",
    "in_reply_to_id": 203901242
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211117992",
    "pull_request_review_id": 147473549,
    "id": 211117992,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTExNzk5Mg==",
    "diff_hunk": "@@ -353,33 +351,78 @@ class CRegTestParams : public CChainParams {\n         /* enable fallback fee on regtest */\n         m_fallback_fee_enabled = true;\n     }\n+\n+    /**\n+     * Allows modifying the Version Bits regtest parameters.\n+     */\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    {\n+        consensus.vDeployments[d].nStartTime = nStartTime;\n+        consensus.vDeployments[d].nTimeout = nTimeout;\n+    }\n+    void UpdateVersionBitsParametersFromArgs(ArgsManager& args);\n };\n \n+void CRegTestParams::UpdateVersionBitsParametersFromArgs(ArgsManager& args)\n+{\n+    // Allow overriding version bits parameters for testing\n+    if (args.IsArgSet(\"-vbparams\")) {\n+        for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {\n+            std::vector<std::string> vDeploymentParams;\n+            boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n+            if (vDeploymentParams.size() != 3) {\n+                throw std::runtime_error(\"Version bits parameters malformed, expecting deployment:start:end\");\n+            }\n+            int64_t nStartTime, nTimeout;\n+            if (!ParseInt64(vDeploymentParams[1], &nStartTime)) {\n+                throw std::runtime_error(strprintf(\"Invalid nStartTime (%s)\", vDeploymentParams[1]));\n+            }\n+            if (!ParseInt64(vDeploymentParams[2], &nTimeout)) {\n+                throw std::runtime_error(strprintf(\"Invalid nTimeout (%s)\", vDeploymentParams[2]));\n+            }\n+            bool found = false;\n+            for (int j=0; j<(int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j)\n+            {\n+                if (vDeploymentParams[0].compare(VersionBitsDeploymentInfo[j].name) == 0) {\n+                    UpdateVersionBitsParameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n+                    found = true;\n+                    LogPrintf(\"Setting version bits activation parameters for %s to start=%ld, timeout=%ld\\n\", vDeploymentParams[0], nStartTime, nTimeout);\n+                    break;\n+                }\n+            }\n+            if (!found) {\n+                throw std::runtime_error(strprintf(\"Invalid deployment (%s)\", vDeploymentParams[0]));\n+            }\n+        }\n+    }\n+}\n+\n static std::unique_ptr<CChainParams> globalChainParams;\n \n const CChainParams &Params() {\n     assert(globalChainParams);\n     return *globalChainParams;\n }\n \n-std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain)\n+std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain, ArgsManager& args)\n {\n     if (chain == CBaseChainParams::MAIN)\n         return std::unique_ptr<CChainParams>(new CMainParams());\n     else if (chain == CBaseChainParams::TESTNET)\n         return std::unique_ptr<CChainParams>(new CTestNetParams());\n     else if (chain == CBaseChainParams::REGTEST)\n-        return std::unique_ptr<CChainParams>(new CRegTestParams());\n+        return std::unique_ptr<CChainParams>(new CRegTestParams(args));\n     throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }\n \n-void SelectParams(const std::string& network)\n+std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain)\n {\n-    SelectBaseParams(network);\n-    globalChainParams = CreateChainParams(network);\n+    ArgsManager args;\n+    return CreateChainParams(chain, args);\n }\n \n-void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+void SelectParams(const std::string& network)\n {\n-    globalChainParams->UpdateVersionBitsParameters(d, nStartTime, nTimeout);\n+    SelectBaseParams(network);\n+    globalChainParams = CreateChainParams(network, gArgs);",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 135,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "7067657731404c28ff87e46ec390992500ca13be",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Tend to agree with @ajtowns.\r\n\r\n> but the idea was that some unittests could create their own custom ArgsManager instead of using gArgs\r\n\r\nIf needed it can mutate gArgs? Or this can be done when needed?",
    "created_at": "2018-08-19T22:51:07Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r211117992",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211117992"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r211117992"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211117992/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 427,
    "side": "RIGHT",
    "in_reply_to_id": 203901242
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211394627",
    "pull_request_review_id": 147806728,
    "id": 211394627,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTM5NDYyNw==",
    "diff_hunk": "@@ -353,33 +351,78 @@ class CRegTestParams : public CChainParams {\n         /* enable fallback fee on regtest */\n         m_fallback_fee_enabled = true;\n     }\n+\n+    /**\n+     * Allows modifying the Version Bits regtest parameters.\n+     */\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    {\n+        consensus.vDeployments[d].nStartTime = nStartTime;\n+        consensus.vDeployments[d].nTimeout = nTimeout;\n+    }\n+    void UpdateVersionBitsParametersFromArgs(ArgsManager& args);\n };\n \n+void CRegTestParams::UpdateVersionBitsParametersFromArgs(ArgsManager& args)\n+{\n+    // Allow overriding version bits parameters for testing\n+    if (args.IsArgSet(\"-vbparams\")) {\n+        for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {\n+            std::vector<std::string> vDeploymentParams;\n+            boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n+            if (vDeploymentParams.size() != 3) {\n+                throw std::runtime_error(\"Version bits parameters malformed, expecting deployment:start:end\");\n+            }\n+            int64_t nStartTime, nTimeout;\n+            if (!ParseInt64(vDeploymentParams[1], &nStartTime)) {\n+                throw std::runtime_error(strprintf(\"Invalid nStartTime (%s)\", vDeploymentParams[1]));\n+            }\n+            if (!ParseInt64(vDeploymentParams[2], &nTimeout)) {\n+                throw std::runtime_error(strprintf(\"Invalid nTimeout (%s)\", vDeploymentParams[2]));\n+            }\n+            bool found = false;\n+            for (int j=0; j<(int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j)\n+            {\n+                if (vDeploymentParams[0].compare(VersionBitsDeploymentInfo[j].name) == 0) {\n+                    UpdateVersionBitsParameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n+                    found = true;\n+                    LogPrintf(\"Setting version bits activation parameters for %s to start=%ld, timeout=%ld\\n\", vDeploymentParams[0], nStartTime, nTimeout);\n+                    break;\n+                }\n+            }\n+            if (!found) {\n+                throw std::runtime_error(strprintf(\"Invalid deployment (%s)\", vDeploymentParams[0]));\n+            }\n+        }\n+    }\n+}\n+\n static std::unique_ptr<CChainParams> globalChainParams;\n \n const CChainParams &Params() {\n     assert(globalChainParams);\n     return *globalChainParams;\n }\n \n-std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain)\n+std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain, ArgsManager& args)\n {\n     if (chain == CBaseChainParams::MAIN)\n         return std::unique_ptr<CChainParams>(new CMainParams());\n     else if (chain == CBaseChainParams::TESTNET)\n         return std::unique_ptr<CChainParams>(new CTestNetParams());\n     else if (chain == CBaseChainParams::REGTEST)\n-        return std::unique_ptr<CChainParams>(new CRegTestParams());\n+        return std::unique_ptr<CChainParams>(new CRegTestParams(args));\n     throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }\n \n-void SelectParams(const std::string& network)\n+std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain)\n {\n-    SelectBaseParams(network);\n-    globalChainParams = CreateChainParams(network);\n+    ArgsManager args;\n+    return CreateChainParams(chain, args);\n }\n \n-void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+void SelectParams(const std::string& network)\n {\n-    globalChainParams->UpdateVersionBitsParameters(d, nStartTime, nTimeout);\n+    SelectBaseParams(network);\n+    globalChainParams = CreateChainParams(network, gArgs);",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 135,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "7067657731404c28ff87e46ec390992500ca13be",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I guess one can mutate gArgs to a given value for a given test and then back to its original value afterwards.\r\nOr as you say, make this change afterwards when it's going to be used.\r\n",
    "created_at": "2018-08-20T20:20:44Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r211394627",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211394627"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r211394627"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211394627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 427,
    "side": "RIGHT",
    "in_reply_to_id": 203901242
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211437401",
    "pull_request_review_id": 147857722,
    "id": 211437401,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTQzNzQwMQ==",
    "diff_hunk": "@@ -280,7 +276,7 @@ class CTestNetParams : public CChainParams {\n  */\n class CRegTestParams : public CChainParams {\n public:\n-    CRegTestParams() {\n+    CRegTestParams(ArgsManager& args) {",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "7067657731404c28ff87e46ec390992500ca13be",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Better to just pass the needed arg IMO, and only couple these classes if preferable based on the eventual use.\r\nhttps://martinfowler.com/bliki/Yagni.html",
    "created_at": "2018-08-20T23:23:55Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r211437401",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211437401"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r211437401"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211437401/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 279,
    "side": "RIGHT",
    "in_reply_to_id": 203901479
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212864705",
    "pull_request_review_id": 149579796,
    "id": 212864705,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjg2NDcwNQ==",
    "diff_hunk": "@@ -280,7 +276,7 @@ class CTestNetParams : public CChainParams {\n  */\n class CRegTestParams : public CChainParams {\n public:\n-    CRegTestParams() {\n+    CRegTestParams(ArgsManager& args) {",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "7067657731404c28ff87e46ec390992500ca13be",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could make this `const ArgsManager& args`",
    "created_at": "2018-08-27T04:39:58Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r212864705",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212864705"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r212864705"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212864705/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 279,
    "side": "RIGHT",
    "in_reply_to_id": 203901479
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212864736",
    "pull_request_review_id": 149579796,
    "id": 212864736,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjg2NDczNg==",
    "diff_hunk": "@@ -353,33 +351,78 @@ class CRegTestParams : public CChainParams {\n         /* enable fallback fee on regtest */\n         m_fallback_fee_enabled = true;\n     }\n+\n+    /**\n+     * Allows modifying the Version Bits regtest parameters.\n+     */\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    {\n+        consensus.vDeployments[d].nStartTime = nStartTime;\n+        consensus.vDeployments[d].nTimeout = nTimeout;\n+    }\n+    void UpdateVersionBitsParametersFromArgs(ArgsManager& args);",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 64,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "ca040b5b76ddeeace6da4f8111169ffd6234414a",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`const ArgsManager&` here as well",
    "created_at": "2018-08-27T04:40:23Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r212864736",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212864736"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r212864736"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212864736/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 363,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212864830",
    "pull_request_review_id": 149579796,
    "id": 212864830,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjg2NDgzMA==",
    "diff_hunk": "@@ -353,33 +351,78 @@ class CRegTestParams : public CChainParams {\n         /* enable fallback fee on regtest */\n         m_fallback_fee_enabled = true;\n     }\n+\n+    /**\n+     * Allows modifying the Version Bits regtest parameters.\n+     */\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    {\n+        consensus.vDeployments[d].nStartTime = nStartTime;\n+        consensus.vDeployments[d].nTimeout = nTimeout;\n+    }\n+    void UpdateVersionBitsParametersFromArgs(ArgsManager& args);\n };\n \n-static std::unique_ptr<CChainParams> globalChainParams;\n+void CRegTestParams::UpdateVersionBitsParametersFromArgs(ArgsManager& args)\n+{\n+    // Allow overriding version bits parameters for testing\n+    if (args.IsArgSet(\"-vbparams\")) {\n+        for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {\n+            std::vector<std::string> vDeploymentParams;\n+            boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n+            if (vDeploymentParams.size() != 3) {\n+                throw std::runtime_error(\"Version bits parameters malformed, expecting deployment:start:end\");\n+            }\n+            int64_t nStartTime, nTimeout;\n+            if (!ParseInt64(vDeploymentParams[1], &nStartTime)) {\n+                throw std::runtime_error(strprintf(\"Invalid nStartTime (%s)\", vDeploymentParams[1]));\n+            }\n+            if (!ParseInt64(vDeploymentParams[2], &nTimeout)) {\n+                throw std::runtime_error(strprintf(\"Invalid nTimeout (%s)\", vDeploymentParams[2]));\n+            }\n+            bool found = false;\n+            for (int j=0; j<(int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j)\n+            {\n+                if (vDeploymentParams[0].compare(VersionBitsDeploymentInfo[j].name) == 0) {\n+                    UpdateVersionBitsParameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n+                    found = true;\n+                    LogPrintf(\"Setting version bits activation parameters for %s to start=%ld, timeout=%ld\\n\", vDeploymentParams[0], nStartTime, nTimeout);\n+                    break;\n+                }\n+            }\n+            if (!found) {\n+                throw std::runtime_error(strprintf(\"Invalid deployment (%s)\", vDeploymentParams[0]));\n+            }\n+        }\n+    }\n+}\n+\n+static std::unique_ptr<const CChainParams> globalChainParams;\n \n const CChainParams &Params() {\n     assert(globalChainParams);\n     return *globalChainParams;\n }\n \n-std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain)\n+std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain, ArgsManager& args)\n {\n     if (chain == CBaseChainParams::MAIN)\n         return std::unique_ptr<CChainParams>(new CMainParams());\n     else if (chain == CBaseChainParams::TESTNET)\n         return std::unique_ptr<CChainParams>(new CTestNetParams());\n     else if (chain == CBaseChainParams::REGTEST)\n-        return std::unique_ptr<CChainParams>(new CRegTestParams());\n+        return std::unique_ptr<CChainParams>(new CRegTestParams(args));",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 118,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "ca040b5b76ddeeace6da4f8111169ffd6234414a",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I still think dropping the `args` param and referencing `gArgs` here directly makes more sense. Otherwise, could make `args` be `const` here too.",
    "created_at": "2018-08-27T04:41:39Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r212864830",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212864830"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r212864830"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212864830/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 414,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214517046",
    "pull_request_review_id": 151596890,
    "id": 214517046,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUxNzA0Ng==",
    "diff_hunk": "@@ -353,33 +351,78 @@ class CRegTestParams : public CChainParams {\n         /* enable fallback fee on regtest */\n         m_fallback_fee_enabled = true;\n     }\n+\n+    /**\n+     * Allows modifying the Version Bits regtest parameters.\n+     */\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    {\n+        consensus.vDeployments[d].nStartTime = nStartTime;\n+        consensus.vDeployments[d].nTimeout = nTimeout;\n+    }\n+    void UpdateVersionBitsParametersFromArgs(ArgsManager& args);\n };\n \n-static std::unique_ptr<CChainParams> globalChainParams;\n+void CRegTestParams::UpdateVersionBitsParametersFromArgs(ArgsManager& args)\n+{\n+    // Allow overriding version bits parameters for testing\n+    if (args.IsArgSet(\"-vbparams\")) {",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 71,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "ca040b5b76ddeeace6da4f8111169ffd6234414a",
    "user": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This function can exit early if the `-vbparams` arg is not set.\r\n```c++\r\nvoid CRegTestParams::UpdateVersionBitsParametersFromArgs(ArgsManager& args)\r\n{\r\n    if (!args.IsArgSet(\"-vbparams\")) return;\r\n\r\n    for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {\r\n        ...\r\n    }\r\n}\r\n```",
    "created_at": "2018-09-01T15:52:25Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r214517046",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214517046"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r214517046"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214517046/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 369,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214522950",
    "pull_request_review_id": 151596890,
    "id": 214522950,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUyMjk1MA==",
    "diff_hunk": "@@ -107,7 +108,9 @@ class CChainParams\n  * @returns a CChainParams* of the chosen chain.\n  * @throws a std::runtime_error if the chain is not supported.\n  */\n-std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain);\n+std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain);\n+/** Extended version taking custom args (only useful for regtest). */\n+std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain, ArgsManager& args);",
    "path": "src/chainparams.h",
    "position": null,
    "original_position": 24,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "ca040b5b76ddeeace6da4f8111169ffd6234414a",
    "user": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I tend to agree with @ajtowns that we can do without `std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain, ArgsManager& args)`.\r\n\r\nIf you want to keep it then maybe you can remove its declaration from `chainparams.h`. There is no need to expose it; it only uses internal linkage at the moment.",
    "created_at": "2018-09-01T21:00:37Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r214522950",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214522950"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r214522950"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214522950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 113,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214523789",
    "pull_request_review_id": 151596890,
    "id": 214523789,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUyMzc4OQ==",
    "diff_hunk": "@@ -353,33 +351,78 @@ class CRegTestParams : public CChainParams {\n         /* enable fallback fee on regtest */\n         m_fallback_fee_enabled = true;\n     }\n+\n+    /**\n+     * Allows modifying the Version Bits regtest parameters.\n+     */\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    {\n+        consensus.vDeployments[d].nStartTime = nStartTime;\n+        consensus.vDeployments[d].nTimeout = nTimeout;\n+    }\n+    void UpdateVersionBitsParametersFromArgs(ArgsManager& args);\n };\n \n-static std::unique_ptr<CChainParams> globalChainParams;\n+void CRegTestParams::UpdateVersionBitsParametersFromArgs(ArgsManager& args)\n+{\n+    // Allow overriding version bits parameters for testing\n+    if (args.IsArgSet(\"-vbparams\")) {\n+        for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {\n+            std::vector<std::string> vDeploymentParams;\n+            boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n+            if (vDeploymentParams.size() != 3) {\n+                throw std::runtime_error(\"Version bits parameters malformed, expecting deployment:start:end\");\n+            }\n+            int64_t nStartTime, nTimeout;\n+            if (!ParseInt64(vDeploymentParams[1], &nStartTime)) {\n+                throw std::runtime_error(strprintf(\"Invalid nStartTime (%s)\", vDeploymentParams[1]));\n+            }\n+            if (!ParseInt64(vDeploymentParams[2], &nTimeout)) {\n+                throw std::runtime_error(strprintf(\"Invalid nTimeout (%s)\", vDeploymentParams[2]));\n+            }\n+            bool found = false;\n+            for (int j=0; j<(int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j)\n+            {\n+                if (vDeploymentParams[0].compare(VersionBitsDeploymentInfo[j].name) == 0) {\n+                    UpdateVersionBitsParameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n+                    found = true;\n+                    LogPrintf(\"Setting version bits activation parameters for %s to start=%ld, timeout=%ld\\n\", vDeploymentParams[0], nStartTime, nTimeout);\n+                    break;\n+                }\n+            }\n+            if (!found) {\n+                throw std::runtime_error(strprintf(\"Invalid deployment (%s)\", vDeploymentParams[0]));\n+            }\n+        }\n+    }\n+}\n+\n+static std::unique_ptr<const CChainParams> globalChainParams;\n \n const CChainParams &Params() {\n     assert(globalChainParams);\n     return *globalChainParams;\n }\n \n-std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain)\n+std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain, ArgsManager& args)\n {\n     if (chain == CBaseChainParams::MAIN)\n         return std::unique_ptr<CChainParams>(new CMainParams());\n     else if (chain == CBaseChainParams::TESTNET)\n         return std::unique_ptr<CChainParams>(new CTestNetParams());\n     else if (chain == CBaseChainParams::REGTEST)\n-        return std::unique_ptr<CChainParams>(new CRegTestParams());\n+        return std::unique_ptr<CChainParams>(new CRegTestParams(args));",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 118,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "ca040b5b76ddeeace6da4f8111169ffd6234414a",
    "user": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, that makes sense. \r\n\r\nBy doing just that and dropping the `ArgsManager& args` argument from `std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain, ArgsManager& args)` we can remove `std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain)` as you also have pointed out here: https://github.com/bitcoin/bitcoin/pull/13311#discussion_r203901242.",
    "created_at": "2018-09-01T21:50:44Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r214523789",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214523789"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r214523789"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214523789/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 414,
    "side": "RIGHT",
    "in_reply_to_id": 212864830
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217928196",
    "pull_request_review_id": 155758424,
    "id": 217928196,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzkyODE5Ng==",
    "diff_hunk": "@@ -343,23 +343,65 @@ class CRegTestParams : public CChainParams {\n         /* enable fallback fee on regtest */\n         m_fallback_fee_enabled = true;\n     }\n+\n+    /**\n+     * Allows modifying the Version Bits regtest parameters.\n+     */\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    {\n+        consensus.vDeployments[d].nStartTime = nStartTime;\n+        consensus.vDeployments[d].nTimeout = nTimeout;\n+    }\n+    void UpdateVersionBitsParametersFromArgs(const ArgsManager& args);\n };\n \n-static std::unique_ptr<CChainParams> globalChainParams;\n+void CRegTestParams::UpdateVersionBitsParametersFromArgs(const ArgsManager& args)\n+{\n+    if (!args.IsArgSet(\"-vbparams\")) return;\n+\n+    for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {\n+        std::vector<std::string> vDeploymentParams;\n+        boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n+        if (vDeploymentParams.size() != 3) {\n+            throw std::runtime_error(\"Version bits parameters malformed, expecting deployment:start:end\");\n+        }\n+        int64_t nStartTime, nTimeout;\n+        if (!ParseInt64(vDeploymentParams[1], &nStartTime)) {\n+            throw std::runtime_error(strprintf(\"Invalid nStartTime (%s)\", vDeploymentParams[1]));\n+        }\n+        if (!ParseInt64(vDeploymentParams[2], &nTimeout)) {\n+            throw std::runtime_error(strprintf(\"Invalid nTimeout (%s)\", vDeploymentParams[2]));\n+        }\n+        bool found = false;\n+        for (int j=0; j<(int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j) {\n+            if (vDeploymentParams[0].compare(VersionBitsDeploymentInfo[j].name) == 0) {\n+                UpdateVersionBitsParameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n+                found = true;\n+                LogPrintf(\"Setting version bits activation parameters for %s to start=%ld, timeout=%ld\\n\", vDeploymentParams[0], nStartTime, nTimeout);\n+                break;\n+            }\n+        }\n+        if (!found) {\n+            throw std::runtime_error(strprintf(\"Invalid deployment (%s)\", vDeploymentParams[0]));\n+        }\n+    }\n+}\n+\n+static std::unique_ptr<const CChainParams> globalChainParams;\n \n const CChainParams &Params() {\n     assert(globalChainParams);\n     return *globalChainParams;\n }\n \n-std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain)\n+std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain)\n {\n     if (chain == CBaseChainParams::MAIN)\n         return std::unique_ptr<CChainParams>(new CMainParams());\n     else if (chain == CBaseChainParams::TESTNET)\n         return std::unique_ptr<CChainParams>(new CTestNetParams());\n     else if (chain == CBaseChainParams::REGTEST)\n-        return std::unique_ptr<CChainParams>(new CRegTestParams());\n+        return std::unique_ptr<CChainParams>(new CRegTestParams(gArgs));",
    "path": "src/chainparams.cpp",
    "position": 110,
    "original_position": 110,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "18d5f2621f2ade428e631d34b95e23c8be862ec8",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Any reason to not use `gArgs` global in `CRegTestParams` constructor?",
    "created_at": "2018-09-16T21:19:08Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r217928196",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217928196"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r217928196"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217928196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 404,
    "original_line": 404,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218418992",
    "pull_request_review_id": 156350079,
    "id": 218418992,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODQxODk5Mg==",
    "diff_hunk": "@@ -343,23 +343,65 @@ class CRegTestParams : public CChainParams {\n         /* enable fallback fee on regtest */\n         m_fallback_fee_enabled = true;\n     }\n+\n+    /**\n+     * Allows modifying the Version Bits regtest parameters.\n+     */\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    {\n+        consensus.vDeployments[d].nStartTime = nStartTime;\n+        consensus.vDeployments[d].nTimeout = nTimeout;\n+    }\n+    void UpdateVersionBitsParametersFromArgs(const ArgsManager& args);\n };\n \n-static std::unique_ptr<CChainParams> globalChainParams;\n+void CRegTestParams::UpdateVersionBitsParametersFromArgs(const ArgsManager& args)\n+{\n+    if (!args.IsArgSet(\"-vbparams\")) return;\n+\n+    for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {\n+        std::vector<std::string> vDeploymentParams;\n+        boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n+        if (vDeploymentParams.size() != 3) {\n+            throw std::runtime_error(\"Version bits parameters malformed, expecting deployment:start:end\");\n+        }\n+        int64_t nStartTime, nTimeout;\n+        if (!ParseInt64(vDeploymentParams[1], &nStartTime)) {\n+            throw std::runtime_error(strprintf(\"Invalid nStartTime (%s)\", vDeploymentParams[1]));\n+        }\n+        if (!ParseInt64(vDeploymentParams[2], &nTimeout)) {\n+            throw std::runtime_error(strprintf(\"Invalid nTimeout (%s)\", vDeploymentParams[2]));\n+        }\n+        bool found = false;\n+        for (int j=0; j<(int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j) {\n+            if (vDeploymentParams[0].compare(VersionBitsDeploymentInfo[j].name) == 0) {\n+                UpdateVersionBitsParameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n+                found = true;\n+                LogPrintf(\"Setting version bits activation parameters for %s to start=%ld, timeout=%ld\\n\", vDeploymentParams[0], nStartTime, nTimeout);\n+                break;\n+            }\n+        }\n+        if (!found) {\n+            throw std::runtime_error(strprintf(\"Invalid deployment (%s)\", vDeploymentParams[0]));\n+        }\n+    }\n+}\n+\n+static std::unique_ptr<const CChainParams> globalChainParams;\n \n const CChainParams &Params() {\n     assert(globalChainParams);\n     return *globalChainParams;\n }\n \n-std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain)\n+std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain)\n {\n     if (chain == CBaseChainParams::MAIN)\n         return std::unique_ptr<CChainParams>(new CMainParams());\n     else if (chain == CBaseChainParams::TESTNET)\n         return std::unique_ptr<CChainParams>(new CTestNetParams());\n     else if (chain == CBaseChainParams::REGTEST)\n-        return std::unique_ptr<CChainParams>(new CRegTestParams());\n+        return std::unique_ptr<CChainParams>(new CRegTestParams(gArgs));",
    "path": "src/chainparams.cpp",
    "position": 110,
    "original_position": 110,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "18d5f2621f2ade428e631d34b95e23c8be862ec8",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The class only uses the global for initialisation; I think it makes sense to supply it as a parameter for initialisation rather than making the entire class dependent on the global. YMMV, FWIW, etc.",
    "created_at": "2018-09-18T12:54:05Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r218418992",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218418992"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r218418992"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218418992/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 404,
    "original_line": 404,
    "side": "RIGHT",
    "in_reply_to_id": 217928196
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218471221",
    "pull_request_review_id": 156417099,
    "id": 218471221,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODQ3MTIyMQ==",
    "diff_hunk": "@@ -58,6 +59,9 @@ BasicTestingSetup::BasicTestingSetup(const std::string& chainName)\n     InitSignatureCache();\n     InitScriptExecutionCache();\n     fCheckBlockIndex = true;\n+    // CreateAndProcessBlock() does not support building SegWit blocks, so don't activate in these tests.\n+    // TODO: fix the code to support SegWit blocks.\n+    gArgs.ForceSetArg(\"-vbparams\", strprintf(\"segwit:0:%d\", (int64_t)Consensus::BIP9Deployment::NO_TIMEOUT));",
    "path": "src/test/test_bitcoin.cpp",
    "position": 14,
    "original_position": 14,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "18d5f2621f2ade428e631d34b95e23c8be862ec8",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n2018-09-18 16:46:43 clang-tidy(pr=13311): src/test/test_bitcoin.cpp:64:61: warning: redundant cast to the same type [google-readability-casting]\r\n```",
    "created_at": "2018-09-18T15:05:17Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r218471221",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218471221"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r218471221"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218471221/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 64,
    "original_line": 64,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218471875",
    "pull_request_review_id": 156417900,
    "id": 218471875,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODQ3MTg3NQ==",
    "diff_hunk": "@@ -343,23 +343,65 @@ class CRegTestParams : public CChainParams {\n         /* enable fallback fee on regtest */\n         m_fallback_fee_enabled = true;\n     }\n+\n+    /**\n+     * Allows modifying the Version Bits regtest parameters.\n+     */\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    {\n+        consensus.vDeployments[d].nStartTime = nStartTime;\n+        consensus.vDeployments[d].nTimeout = nTimeout;\n+    }\n+    void UpdateVersionBitsParametersFromArgs(const ArgsManager& args);\n };\n \n-static std::unique_ptr<CChainParams> globalChainParams;\n+void CRegTestParams::UpdateVersionBitsParametersFromArgs(const ArgsManager& args)\n+{\n+    if (!args.IsArgSet(\"-vbparams\")) return;\n+\n+    for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {\n+        std::vector<std::string> vDeploymentParams;\n+        boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n+        if (vDeploymentParams.size() != 3) {\n+            throw std::runtime_error(\"Version bits parameters malformed, expecting deployment:start:end\");\n+        }\n+        int64_t nStartTime, nTimeout;\n+        if (!ParseInt64(vDeploymentParams[1], &nStartTime)) {\n+            throw std::runtime_error(strprintf(\"Invalid nStartTime (%s)\", vDeploymentParams[1]));\n+        }\n+        if (!ParseInt64(vDeploymentParams[2], &nTimeout)) {\n+            throw std::runtime_error(strprintf(\"Invalid nTimeout (%s)\", vDeploymentParams[2]));\n+        }\n+        bool found = false;\n+        for (int j=0; j<(int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j) {\n+            if (vDeploymentParams[0].compare(VersionBitsDeploymentInfo[j].name) == 0) {",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 81,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "18d5f2621f2ade428e631d34b95e23c8be862ec8",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n2018-09-18 16:46:43 clang-tidy(pr=13311): src/chainparams.cpp:377:17: warning: do not use 'compare' to test equality of strings; use the string equality operator instead [misc-string-compare]\r\n```",
    "created_at": "2018-09-18T15:06:54Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r218471875",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218471875"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r218471875"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218471875/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 377,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218471939",
    "pull_request_review_id": 156417988,
    "id": 218471939,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODQ3MTkzOQ==",
    "diff_hunk": "@@ -270,7 +268,7 @@ class CTestNetParams : public CChainParams {\n  */\n class CRegTestParams : public CChainParams {\n public:\n-    CRegTestParams() {\n+    CRegTestParams(const ArgsManager& args) {",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "18d5f2621f2ade428e631d34b95e23c8be862ec8",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n2018-09-18 16:46:43 clang-tidy(pr=13311): src/chainparams.cpp:271:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor]\r\n```",
    "created_at": "2018-09-18T15:07:05Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r218471939",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218471939"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r218471939"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218471939/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 271,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218865284",
    "pull_request_review_id": 156899468,
    "id": 218865284,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODg2NTI4NA==",
    "diff_hunk": "@@ -58,6 +59,9 @@ BasicTestingSetup::BasicTestingSetup(const std::string& chainName)\n     InitSignatureCache();\n     InitScriptExecutionCache();\n     fCheckBlockIndex = true;\n+    // CreateAndProcessBlock() does not support building SegWit blocks, so don't activate in these tests.\n+    // TODO: fix the code to support SegWit blocks.\n+    gArgs.ForceSetArg(\"-vbparams\", strprintf(\"segwit:0:%d\", (int64_t)Consensus::BIP9Deployment::NO_TIMEOUT));",
    "path": "src/test/test_bitcoin.cpp",
    "position": 14,
    "original_position": 14,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "18d5f2621f2ade428e631d34b95e23c8be862ec8",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If I remove that casting, I get:\r\n```\r\ntest/qt_test_test_bitcoin_qt-test_bitcoin.o: In function `tinyformat::detail::FormatArg::FormatArg<long>(long const&)':\r\n/home/jt/code/bitcoin/src/./tinyformat.h:508: undefined reference to `Consensus::BIP9Deployment::NO_TIMEOUT'\r\n```",
    "created_at": "2018-09-19T16:02:41Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r218865284",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218865284"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r218865284"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218865284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 64,
    "original_line": 64,
    "side": "RIGHT",
    "in_reply_to_id": 218471221
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218868220",
    "pull_request_review_id": 156903308,
    "id": 218868220,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODg2ODIyMA==",
    "diff_hunk": "@@ -58,6 +59,9 @@ BasicTestingSetup::BasicTestingSetup(const std::string& chainName)\n     InitSignatureCache();\n     InitScriptExecutionCache();\n     fCheckBlockIndex = true;\n+    // CreateAndProcessBlock() does not support building SegWit blocks, so don't activate in these tests.\n+    // TODO: fix the code to support SegWit blocks.\n+    gArgs.ForceSetArg(\"-vbparams\", strprintf(\"segwit:0:%d\", (int64_t)Consensus::BIP9Deployment::NO_TIMEOUT));",
    "path": "src/test/test_bitcoin.cpp",
    "position": 14,
    "original_position": 14,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "18d5f2621f2ade428e631d34b95e23c8be862ec8",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Cool! A false positive then. Thanks for investigating.",
    "created_at": "2018-09-19T16:11:38Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r218868220",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218868220"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r218868220"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218868220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 64,
    "original_line": 64,
    "side": "RIGHT",
    "in_reply_to_id": 218471221
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218921579",
    "pull_request_review_id": 156968986,
    "id": 218921579,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODkyMTU3OQ==",
    "diff_hunk": "@@ -343,23 +343,65 @@ class CRegTestParams : public CChainParams {\n         /* enable fallback fee on regtest */\n         m_fallback_fee_enabled = true;\n     }\n+\n+    /**\n+     * Allows modifying the Version Bits regtest parameters.\n+     */\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    {\n+        consensus.vDeployments[d].nStartTime = nStartTime;\n+        consensus.vDeployments[d].nTimeout = nTimeout;\n+    }\n+    void UpdateVersionBitsParametersFromArgs(const ArgsManager& args);\n };\n \n-static std::unique_ptr<CChainParams> globalChainParams;\n+void CRegTestParams::UpdateVersionBitsParametersFromArgs(const ArgsManager& args)\n+{\n+    if (!args.IsArgSet(\"-vbparams\")) return;\n+\n+    for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {\n+        std::vector<std::string> vDeploymentParams;\n+        boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n+        if (vDeploymentParams.size() != 3) {\n+            throw std::runtime_error(\"Version bits parameters malformed, expecting deployment:start:end\");",
    "path": "src/chainparams.cpp",
    "position": 70,
    "original_position": 70,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "bd74fb9e4c271bd901dfbb5ad1929b44fcadd735",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't like that this introduces more exceptions in code that can normally hit them by a mere typo. I'd prefer if we used exceptions only in exceptional circumstances, since it is not easy to follow the control flow with exceptions.\r\n\r\nNote that the our other command line parsing is done with functions that return bool instead of void and append the error to a passed in string reference.\r\n\r\nI see that the caller needs to throw, but that isn't reason enough to \"poison\" unrelated code.",
    "created_at": "2018-09-19T18:46:41Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r218921579",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218921579"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r218921579"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218921579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 366,
    "original_line": 366,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219081422",
    "pull_request_review_id": 157166032,
    "id": 219081422,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTA4MTQyMg==",
    "diff_hunk": "@@ -343,23 +343,65 @@ class CRegTestParams : public CChainParams {\n         /* enable fallback fee on regtest */\n         m_fallback_fee_enabled = true;\n     }\n+\n+    /**\n+     * Allows modifying the Version Bits regtest parameters.\n+     */\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    {\n+        consensus.vDeployments[d].nStartTime = nStartTime;\n+        consensus.vDeployments[d].nTimeout = nTimeout;\n+    }\n+    void UpdateVersionBitsParametersFromArgs(const ArgsManager& args);\n };\n \n-static std::unique_ptr<CChainParams> globalChainParams;\n+void CRegTestParams::UpdateVersionBitsParametersFromArgs(const ArgsManager& args)\n+{\n+    if (!args.IsArgSet(\"-vbparams\")) return;\n+\n+    for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {\n+        std::vector<std::string> vDeploymentParams;\n+        boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n+        if (vDeploymentParams.size() != 3) {\n+            throw std::runtime_error(\"Version bits parameters malformed, expecting deployment:start:end\");",
    "path": "src/chainparams.cpp",
    "position": 70,
    "original_position": 70,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "bd74fb9e4c271bd901dfbb5ad1929b44fcadd735",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think there's absolutely no problem in initialization exceptions that will prevent the binary from starting, this one should be cached (depending on binary) on bitcoin-cli.cpp, bitcoin-tx.cpp or bitcoind.cpp, when SelectParams is called, just like https://github.com/bitcoin/bitcoin/blob/master/src/chainparamsbase.cpp#L42\r\n",
    "created_at": "2018-09-20T08:47:46Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r219081422",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219081422"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r219081422"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219081422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 366,
    "original_line": 366,
    "side": "RIGHT",
    "in_reply_to_id": 218921579
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691718",
    "pull_request_review_id": 157932322,
    "id": 219691718,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTcxOA==",
    "diff_hunk": "@@ -343,23 +343,65 @@ class CRegTestParams : public CChainParams {\n         /* enable fallback fee on regtest */\n         m_fallback_fee_enabled = true;\n     }\n+\n+    /**\n+     * Allows modifying the Version Bits regtest parameters.\n+     */\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    {\n+        consensus.vDeployments[d].nStartTime = nStartTime;\n+        consensus.vDeployments[d].nTimeout = nTimeout;\n+    }\n+    void UpdateVersionBitsParametersFromArgs(const ArgsManager& args);\n };\n \n-static std::unique_ptr<CChainParams> globalChainParams;\n+void CRegTestParams::UpdateVersionBitsParametersFromArgs(const ArgsManager& args)\n+{\n+    if (!args.IsArgSet(\"-vbparams\")) return;\n+\n+    for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {\n+        std::vector<std::string> vDeploymentParams;\n+        boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n+        if (vDeploymentParams.size() != 3) {\n+            throw std::runtime_error(\"Version bits parameters malformed, expecting deployment:start:end\");\n+        }\n+        int64_t nStartTime, nTimeout;\n+        if (!ParseInt64(vDeploymentParams[1], &nStartTime)) {\n+            throw std::runtime_error(strprintf(\"Invalid nStartTime (%s)\", vDeploymentParams[1]));\n+        }\n+        if (!ParseInt64(vDeploymentParams[2], &nTimeout)) {\n+            throw std::runtime_error(strprintf(\"Invalid nTimeout (%s)\", vDeploymentParams[2]));\n+        }\n+        bool found = false;\n+        for (int j=0; j<(int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j) {",
    "path": "src/chainparams.cpp",
    "position": null,
    "original_position": 80,
    "commit_id": "6fa901fb4726ddac025d5396ecf09d047a8aa9a1",
    "original_commit_id": "bd74fb9e4c271bd901dfbb5ad1929b44fcadd735",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n2018-09-22 22:20:08 cpplint(pr=13311): src/chainparams.cpp:376:  Missing spaces around <  [whitespace/operators] [3]\r\n```",
    "created_at": "2018-09-23T08:20:47Z",
    "updated_at": "2018-09-23T20:59:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r219691718",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691718"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13311#discussion_r219691718"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13311"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691718/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 376,
    "side": "RIGHT"
  }
]