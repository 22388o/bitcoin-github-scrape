[
  {
    "sha": "fa8629b98ea589a8079c05824cb877b5dd3e9549",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTg2MjliOThlYTU4OWE4MDc5YzA1ODI0Y2I4NzdiNWRkM2U5NTQ5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-08-02T11:42:42Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-08-02T12:26:18Z"
      },
      "message": "Add missing const to CAddrMan::Check_()\n\nAlso: Always compile the function signature to avoid similar issues in\nthe future.",
      "tree": {
        "sha": "e2f5fe7bee58e5965d8557e20bf5529f88de3516",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2f5fe7bee58e5965d8557e20bf5529f88de3516"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa8629b98ea589a8079c05824cb877b5dd3e9549",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgjBwv+Mo8gEJR35X51NH81DOmF0RiUHAtieXTEgAK7xKGpHfEhMQVEA2P6Nde1\nX+vFzmURSvZwk2wX9atkmibjMiDwjIfxZOTkQ6qdPWTnAMtkl99sIb+Zd+B5srmr\n82qK2ix3y9SH3VPPQoH8cDaWZWrjdN/S4wOgTU3q0yVl8/1VJ9d1vsqU5YkUdeU9\nO/HT3c2NndcE3H/eE9tiLm/F5ViLUP2NqZSeAhDpMGD9AetkbYcXDpvgVmg+sW+N\nOFtDZigxlrOf5JluaSpSNXD685E/AgK5ck5kmKwc4EBvJAi4fUyBIyZHjfMXGWP0\n9zqrMbOsUAdXFKdSriugk4URTJ6TIfdlby+1oW2qCjgE7O7Qelkzvm+r0sjNv3bn\n7P/ele+6RBhmsZksHIH2zMuXU8svJ8qOPI7SYjcjNJYuwt/Oy5BcqArF1uM/nIXf\nF4/Y5ND6nhVb7jxARtPmzm/cZoe0Cl25UYgS7SHlMkYyqEEHFt9eHeyl7slnlcB3\nWwHj0V+v\n=jtoc\n-----END PGP SIGNATURE-----",
        "payload": "tree e2f5fe7bee58e5965d8557e20bf5529f88de3516\nparent 2f60d9fce65efa3e18751e0778128a9ebe9f35cd\nauthor MarcoFalke <falke.marco@gmail.com> 1627904562 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1627907178 +0200\n\nAdd missing const to CAddrMan::Check_()\n\nAlso: Always compile the function signature to avoid similar issues in\nthe future.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8629b98ea589a8079c05824cb877b5dd3e9549",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8629b98ea589a8079c05824cb877b5dd3e9549",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8629b98ea589a8079c05824cb877b5dd3e9549/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2f60d9fce65efa3e18751e0778128a9ebe9f35cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f60d9fce65efa3e18751e0778128a9ebe9f35cd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2f60d9fce65efa3e18751e0778128a9ebe9f35cd"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 14,
      "deletions": 11
    },
    "files": [
      {
        "sha": "fd738928c22e8688525e1c48ee76bae76ef7948c",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 7,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8629b98ea589a8079c05824cb877b5dd3e9549/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8629b98ea589a8079c05824cb877b5dd3e9549/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=fa8629b98ea589a8079c05824cb877b5dd3e9549",
        "patch": "@@ -463,9 +463,9 @@ CAddrInfo CAddrMan::Select_(bool newOnly) const\n     }\n }\n \n-#ifdef DEBUG_ADDRMAN\n-int CAddrMan::Check_()\n+int CAddrMan::Check_() const\n {\n+#ifdef DEBUG_ADDRMAN\n     AssertLockHeld(cs);\n \n     std::unordered_set<int> setTried;\n@@ -490,8 +490,10 @@ int CAddrMan::Check_()\n                 return -4;\n             mapNew[n] = info.nRefCount;\n         }\n-        if (mapAddr[info] != n)\n+        const auto it{mapAddr.find(info)};\n+        if (it == mapAddr.end() || it->second != n) {\n             return -5;\n+        }\n         if (info.nRandomPos < 0 || (size_t)info.nRandomPos >= vRandom.size() || vRandom[info.nRandomPos] != n)\n             return -14;\n         if (info.nLastTry < 0)\n@@ -510,10 +512,13 @@ int CAddrMan::Check_()\n             if (vvTried[n][i] != -1) {\n                 if (!setTried.count(vvTried[n][i]))\n                     return -11;\n-                if (mapInfo[vvTried[n][i]].GetTriedBucket(nKey, m_asmap) != n)\n+                const auto it{mapInfo.find(vvTried[n][i])};\n+                if (it == mapInfo.end() || it->second.GetTriedBucket(nKey, m_asmap) != n) {\n                     return -17;\n-                if (mapInfo[vvTried[n][i]].GetBucketPosition(nKey, false, n) != i)\n+                }\n+                if (it->second.GetBucketPosition(nKey, false, n) != i) {\n                     return -18;\n+                }\n                 setTried.erase(vvTried[n][i]);\n             }\n         }\n@@ -524,8 +529,10 @@ int CAddrMan::Check_()\n             if (vvNew[n][i] != -1) {\n                 if (!mapNew.count(vvNew[n][i]))\n                     return -12;\n-                if (mapInfo[vvNew[n][i]].GetBucketPosition(nKey, true, n) != i)\n+                const auto it{mapInfo.find(vvNew[n][i])};\n+                if (it == mapInfo.end() || it->second.GetBucketPosition(nKey, true, n) != i) {\n                     return -19;\n+                }\n                 if (--mapNew[vvNew[n][i]] == 0)\n                     mapNew.erase(vvNew[n][i]);\n             }\n@@ -539,9 +546,9 @@ int CAddrMan::Check_()\n     if (nKey.IsNull())\n         return -16;\n \n+#endif // DEBUG_ADDRMAN\n     return 0;\n }\n-#endif\n \n void CAddrMan::GetAddr_(std::vector<CAddress>& vAddr, size_t max_addresses, size_t max_pct, std::optional<Network> network) const\n {"
      },
      {
        "sha": "feee89b09cb9deafb1d2801aed6d8fed8cc7abc2",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8629b98ea589a8079c05824cb877b5dd3e9549/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8629b98ea589a8079c05824cb877b5dd3e9549/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=fa8629b98ea589a8079c05824cb877b5dd3e9549",
        "patch": "@@ -732,19 +732,15 @@ class CAddrMan\n     void Check() const\n         EXCLUSIVE_LOCKS_REQUIRED(cs)\n     {\n-#ifdef DEBUG_ADDRMAN\n         AssertLockHeld(cs);\n         const int err = Check_();\n         if (err) {\n             LogPrintf(\"ADDRMAN CONSISTENCY CHECK FAILED!!! err=%i\\n\", err);\n         }\n-#endif\n     }\n \n-#ifdef DEBUG_ADDRMAN\n     //! Perform consistency check. Returns an error code or zero.\n     int Check_() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n-#endif\n \n     /**\n      * Return all or many randomly selected addresses, optionally by network."
      }
    ]
  }
]