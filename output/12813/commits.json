[
  {
    "sha": "597146ef3c68361fb8377eee344a93b7ec4d4b85",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OTcxNDZlZjNjNjgzNjFmYjgzNzdlZWUzNDRhOTNiN2VjNGQ0Yjg1",
    "commit": {
      "author": {
        "name": "murrayn",
        "email": "github@nesbitt.ca",
        "date": "2018-03-28T10:00:02Z"
      },
      "committer": {
        "name": "murrayn",
        "email": "github@nesbitt.ca",
        "date": "2018-03-28T10:00:02Z"
      },
      "message": "Update man pages.",
      "tree": {
        "sha": "72ef50d4e6c8503e50b565102ffc071722d7b7fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/72ef50d4e6c8503e50b565102ffc071722d7b7fd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/597146ef3c68361fb8377eee344a93b7ec4d4b85",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/597146ef3c68361fb8377eee344a93b7ec4d4b85",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/597146ef3c68361fb8377eee344a93b7ec4d4b85",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/597146ef3c68361fb8377eee344a93b7ec4d4b85/comments",
    "author": {
      "login": "murrayn",
      "id": 5404807,
      "node_id": "MDQ6VXNlcjU0MDQ4MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5404807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murrayn",
      "html_url": "https://github.com/murrayn",
      "followers_url": "https://api.github.com/users/murrayn/followers",
      "following_url": "https://api.github.com/users/murrayn/following{/other_user}",
      "gists_url": "https://api.github.com/users/murrayn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murrayn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murrayn/subscriptions",
      "organizations_url": "https://api.github.com/users/murrayn/orgs",
      "repos_url": "https://api.github.com/users/murrayn/repos",
      "events_url": "https://api.github.com/users/murrayn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murrayn/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "murrayn",
      "id": 5404807,
      "node_id": "MDQ6VXNlcjU0MDQ4MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5404807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/murrayn",
      "html_url": "https://github.com/murrayn",
      "followers_url": "https://api.github.com/users/murrayn/followers",
      "following_url": "https://api.github.com/users/murrayn/following{/other_user}",
      "gists_url": "https://api.github.com/users/murrayn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/murrayn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/murrayn/subscriptions",
      "organizations_url": "https://api.github.com/users/murrayn/orgs",
      "repos_url": "https://api.github.com/users/murrayn/repos",
      "events_url": "https://api.github.com/users/murrayn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/murrayn/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7466a26cab5d66665991433947964a638f5b957e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7466a26cab5d66665991433947964a638f5b957e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7466a26cab5d66665991433947964a638f5b957e"
      }
    ],
    "stats": {
      "total": 1225,
      "additions": 355,
      "deletions": 870
    },
    "files": [
      {
        "sha": "b9df1025815537e9723047ebc3988b6616a0443f",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "modified",
        "additions": 34,
        "deletions": 66,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/597146ef3c68361fb8377eee344a93b7ec4d4b85/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/597146ef3c68361fb8377eee344a93b7ec4d4b85/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=597146ef3c68361fb8377eee344a93b7ec4d4b85",
        "patch": "@@ -1,4 +1,3 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.\n .TH BITCOIN-CLI \"1\" \"January 2018\" \"bitcoin-cli v0.16.99.0\" \"User Commands\"\n .SH NAME\n bitcoin-cli \\- manual page for bitcoin-cli v0.16.99.0\n@@ -7,94 +6,63 @@ Bitcoin Core RPC client version v0.16.99.0\n .SS \"Usage:\"\n .TP\n bitcoin\\-cli [options] <command> [params]\n-Send command to Bitcoin Core\n-.IP\n-bitcoin\\-cli [options] \\fB\\-named\\fR <command> [name=value] ... Send command to Bitcoin Core (with named arguments)\n-bitcoin\\-cli [options] help                List commands\n-bitcoin\\-cli [options] help <command>      Get help for a command\n+.TP\n+bitcoin\\-cli [options] \\fB\\-named\\fR <command> [name=value] ...\n+Send command to Bitcoin Core (with named arguments)\n+.TP\n+bitcoin\\-cli [options] help\n+.TP\n+bitcoin\\-cli [options] help <command>\n .SH OPTIONS\n-.HP\n-\\-?\n-.IP\n+.IP \\-?\n This help message\n-.HP\n-\\fB\\-conf=\\fR<file>\n-.IP\n+.IP \\fB\\-conf=\\fR<file>\n Specify configuration file (default: bitcoin.conf)\n-.HP\n-\\fB\\-datadir=\\fR<dir>\n-.IP\n+.IP \\fB\\-datadir=\\fR<dir>\n Specify data directory\n-.HP\n-\\fB\\-getinfo\\fR\n-.IP\n+.IP \\fB\\-getinfo\\fR\n Get general information from the remote server. Note that unlike\n server\\-side RPC calls, the results of \\fB\\-getinfo\\fR is the result of\n multiple non\\-atomic requests. Some entries in the result may\n represent results from different states (e.g. wallet balance may\n be as of a different block from the chain state reported)\n .PP\n Chain selection options:\n-.HP\n-\\fB\\-testnet\\fR\n-.IP\n+.IP \\fB\\-testnet\\fR\n Use the test chain\n-.HP\n-\\fB\\-regtest\\fR\n-.IP\n+.IP \\fB\\-regtest\\fR\n Enter regression test mode, which uses a special chain in which blocks\n can be solved instantly. This is intended for regression testing\n tools and app development.\n-.HP\n-\\fB\\-named\\fR\n-.IP\n+.IP \\fB\\-named\\fR\n Pass named instead of positional arguments (default: false)\n-.HP\n-\\fB\\-rpcconnect=\\fR<ip>\n-.IP\n+.IP \\fB\\-rpcclienttimeout=\\fR<n>\n+Timeout in seconds during HTTP requests, or 0 for no timeout. (default:\n+900)\n+.IP \\fB\\-rpcconnect=\\fR<ip>\n Send commands to node running on <ip> (default: 127.0.0.1)\n-.HP\n-\\fB\\-rpcport=\\fR<port>\n-.IP\n+.IP \\fB\\-rpcpassword=\\fR<pw>\n+Password for JSON\\-RPC connections\n+.IP \\fB\\-rpcport=\\fR<port>\n Connect to JSON\\-RPC on <port> (default: 8332 or testnet: 18332)\n-.HP\n-\\fB\\-rpcwait\\fR\n-.IP\n-Wait for RPC server to start\n-.HP\n-\\fB\\-rpcuser=\\fR<user>\n-.IP\n+.IP \\fB\\-rpcuser=\\fR<user>\n Username for JSON\\-RPC connections\n-.HP\n-\\fB\\-rpcpassword=\\fR<pw>\n-.IP\n-Password for JSON\\-RPC connections\n-.HP\n-\\fB\\-rpcclienttimeout=\\fR<n>\n-.IP\n-Timeout in seconds during HTTP requests, or 0 for no timeout. (default:\n-900)\n-.HP\n-\\fB\\-stdinrpcpass\\fR\n-.TP\n-Read RPC password from standard input as a single line.\n-When combined\n-.IP\n-with \\fB\\-stdin\\fR, the first line from standard input is used for the\n-RPC password.\n-.HP\n-\\fB\\-stdin\\fR\n-.IP\n+.IP \\fB\\-rpcwait\\fR\n+Wait for RPC server to start\n+.IP \\fB\\-rpcwallet=\\fR<walletname>\n+Send RPC for non\\-default wallet on RPC server (argument is wallet\n+filename in bitcoind directory, required if bitcoind/\\-Qt runs\n+with multiple wallets)\n+.IP \\fB\\-stdin\\fR\n Read extra arguments from standard input, one per line until EOF/Ctrl\\-D\n (recommended for sensitive information such as passphrases).\n When combined with \\fB\\-stdinrpcpass\\fR, the first line from standard\n input is used for the RPC password.\n-.HP\n-\\fB\\-rpcwallet=\\fR<walletname>\n-.IP\n-Send RPC for non\\-default wallet on RPC server (argument is wallet\n-filename in bitcoind directory, required if bitcoind/\\-Qt runs\n-with multiple wallets)\n+.IP \\fB\\-stdinrpcpass\\fR\n+Read RPC password from standard input as a single line.\n+When combined\n+with \\fB\\-stdin\\fR, the first line from standard input is used for the\n+RPC password.\n .SH COPYRIGHT\n Copyright (C) 2009-2018 The Bitcoin Core developers\n "
      },
      {
        "sha": "908331cd3397ad0f3b5f90cc9f699997968e0421",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "modified",
        "additions": 150,
        "deletions": 375,
        "changes": 525,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/597146ef3c68361fb8377eee344a93b7ec4d4b85/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/597146ef3c68361fb8377eee344a93b7ec4d4b85/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=597146ef3c68361fb8377eee344a93b7ec4d4b85",
        "patch": "@@ -1,4 +1,3 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.\n .TH BITCOIN-QT \"1\" \"January 2018\" \"bitcoin-qt v0.16.99.0\" \"User Commands\"\n .SH NAME\n bitcoin-qt \\- manual page for bitcoin-qt v0.16.99.0\n@@ -8,88 +7,54 @@ Usage:\n .IP\n bitcoin\\-qt [command\\-line options]\n .SH OPTIONS\n-.HP\n-\\-?\n-.IP\n+.IP \\-?\n Print this help message and exit\n-.HP\n-\\fB\\-version\\fR\n-.IP\n+.IP \\fB\\-version\\fR\n Print version and exit\n-.HP\n-\\fB\\-alertnotify=\\fR<cmd>\n-.IP\n+.IP \\fB\\-alertnotify=\\fR<cmd>\n Execute command when a relevant alert is received or we see a really\n long fork (%s in cmd is replaced by message)\n-.HP\n-\\fB\\-blocknotify=\\fR<cmd>\n-.IP\n-Execute command when the best block changes (%s in cmd is replaced by\n-block hash)\n-.HP\n-\\fB\\-assumevalid=\\fR<hex>\n-.IP\n+.IP \\fB\\-assumevalid=\\fR<hex>\n If this block is in the chain assume that it and its ancestors are valid\n and potentially skip their script verification (0 to verify all,\n default:\n 0000000000000000005214481d2d96f898e3d5416e43359c145944a909d242e0,\n testnet:\n 0000000002e9e7b00e1f6dc5123a04aad68dd0f0968d8c7aa45f6640795c37b1)\n-.HP\n-\\fB\\-conf=\\fR<file>\n-.IP\n+.IP \\fB\\-blocknotify=\\fR<cmd>\n+Execute command when the best block changes (%s in cmd is replaced by\n+block hash)\n+.IP \\fB\\-blockreconstructionextratxn=\\fR<n>\n+Extra transactions to keep in memory for compact block reconstructions\n+(default: 100)\n+.IP \\fB\\-blocksdir=\\fR<dir>\n+Specify blocks directory (default: <datadir>/blocks)\n+.IP \\fB\\-conf=\\fR<file>\n Specify configuration file (default: bitcoin.conf)\n-.HP\n-\\fB\\-datadir=\\fR<dir>\n-.IP\n+.IP \\fB\\-datadir=\\fR<dir>\n Specify data directory\n-.HP\n-\\fB\\-dbcache=\\fR<n>\n-.IP\n+.IP \\fB\\-dbcache=\\fR<n>\n Set database cache size in megabytes (4 to 16384, default: 450)\n-.HP\n-\\fB\\-loadblock=\\fR<file>\n-.IP\n-Imports blocks from external blk000??.dat file on startup\n-.HP\n-\\fB\\-debuglogfile=\\fR<file>\n-.IP\n+.IP \\fB\\-debuglogfile=\\fR<file>\n Specify location of debug log file: this can be an absolute path or a\n path relative to the data directory (default: debug.log)\n-.HP\n-\\fB\\-maxorphantx=\\fR<n>\n-.IP\n-Keep at most <n> unconnectable transactions in memory (default: 100)\n-.HP\n-\\fB\\-maxmempool=\\fR<n>\n-.IP\n+.IP \\fB\\-loadblock=\\fR<file>\n+Imports blocks from external blk000??.dat file on startup\n+.IP \\fB\\-maxmempool=\\fR<n>\n Keep the transaction memory pool below <n> megabytes (default: 300)\n-.HP\n-\\fB\\-mempoolexpiry=\\fR<n>\n-.IP\n+.IP \\fB\\-maxorphantx=\\fR<n>\n+Keep at most <n> unconnectable transactions in memory (default: 100)\n+.IP \\fB\\-mempoolexpiry=\\fR<n>\n Do not keep transactions in the mempool longer than <n> hours (default:\n 336)\n-.HP\n-\\fB\\-persistmempool\\fR\n-.IP\n-Whether to save the mempool on shutdown and load on restart (default: 1)\n-.HP\n-\\fB\\-blockreconstructionextratxn=\\fR<n>\n-.IP\n-Extra transactions to keep in memory for compact block reconstructions\n-(default: 100)\n-.HP\n-\\fB\\-par=\\fR<n>\n-.IP\n+.IP \\fB\\-par=\\fR<n>\n Set the number of script verification threads (\\fB\\-6\\fR to 16, 0 = auto, <0 =\n leave that many cores free, default: 0)\n-.HP\n-\\fB\\-pid=\\fR<file>\n-.IP\n+.IP \\fB\\-persistmempool\\fR\n+Whether to save the mempool on shutdown and load on restart (default: 1)\n+.IP \\fB\\-pid=\\fR<file>\n Specify pid file (default: bitcoind.pid)\n-.HP\n-\\fB\\-prune=\\fR<n>\n-.IP\n+.IP \\fB\\-prune=\\fR<n>\n Reduce storage requirements by enabling pruning (deleting) of old\n blocks. This allows the pruneblockchain RPC to be called to\n delete specific blocks, and enables automatic pruning of old\n@@ -99,472 +64,282 @@ setting requires re\\-downloading the entire blockchain. (default:\n 0 = disable pruning blocks, 1 = allow manual pruning via RPC,\n >550 = automatically prune block files to stay under the\n specified target size in MiB)\n-.HP\n-\\fB\\-reindex\\-chainstate\\fR\n-.IP\n-Rebuild chain state from the currently indexed blocks\n-.HP\n-\\fB\\-reindex\\fR\n-.IP\n+.IP \\fB\\-reindex\\fR\n Rebuild chain state and block index from the blk*.dat files on disk\n-.HP\n-\\fB\\-sysperms\\fR\n-.IP\n+.IP \\fB\\-reindex\\-chainstate\\fR\n+Rebuild chain state from the currently indexed blocks\n+.IP \\fB\\-sysperms\\fR\n Create new files with system default permissions, instead of umask 077\n (only effective with disabled wallet functionality)\n-.HP\n-\\fB\\-txindex\\fR\n-.IP\n+.IP \\fB\\-txindex\\fR\n Maintain a full transaction index, used by the getrawtransaction rpc\n call (default: 0)\n .PP\n Connection options:\n-.HP\n-\\fB\\-addnode=\\fR<ip>\n-.IP\n+.IP \\fB\\-addnode=\\fR<ip>\n Add a node to connect to and attempt to keep the connection open (see\n the `addnode` RPC command help for more info)\n-.HP\n-\\fB\\-banscore=\\fR<n>\n-.IP\n+.IP \\fB\\-banscore=\\fR<n>\n Threshold for disconnecting misbehaving peers (default: 100)\n-.HP\n-\\fB\\-bantime=\\fR<n>\n-.IP\n+.IP \\fB\\-bantime=\\fR<n>\n Number of seconds to keep misbehaving peers from reconnecting (default:\n 86400)\n-.HP\n-\\fB\\-bind=\\fR<addr>\n-.IP\n+.IP \\fB\\-bind=\\fR<addr>\n Bind to given address and always listen on it. Use [host]:port notation\n for IPv6\n-.HP\n-\\fB\\-connect=\\fR<ip>\n-.IP\n+.IP \\fB\\-connect=\\fR<ip>\n Connect only to the specified node(s); \\fB\\-connect\\fR=\\fI\\,0\\/\\fR disables automatic\n connections (the rules for this peer are the same as for\n \\fB\\-addnode\\fR)\n-.HP\n-\\fB\\-discover\\fR\n-.IP\n+.IP \\fB\\-discover\\fR\n Discover own IP addresses (default: 1 when listening and no \\fB\\-externalip\\fR\n or \\fB\\-proxy\\fR)\n-.HP\n-\\fB\\-dns\\fR\n-.IP\n+.IP \\fB\\-dns\\fR\n Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR (default: 1)\n-.HP\n-\\fB\\-dnsseed\\fR\n-.IP\n+.IP \\fB\\-dnsseed\\fR\n Query for peer addresses via DNS lookup, if low on addresses (default: 1\n unless \\fB\\-connect\\fR used)\n-.HP\n-\\fB\\-externalip=\\fR<ip>\n-.IP\n+.IP \\fB\\-externalip=\\fR<ip>\n Specify your own public address\n-.HP\n-\\fB\\-forcednsseed\\fR\n-.IP\n+.IP \\fB\\-forcednsseed\\fR\n Always query for peer addresses via DNS lookup (default: 0)\n-.HP\n-\\fB\\-listen\\fR\n-.IP\n+.IP \\fB\\-listen\\fR\n Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n-.HP\n-\\fB\\-listenonion\\fR\n-.IP\n+.IP \\fB\\-listenonion\\fR\n Automatically create Tor hidden service (default: 1)\n-.HP\n-\\fB\\-maxconnections=\\fR<n>\n-.IP\n+.IP \\fB\\-maxconnections=\\fR<n>\n Maintain at most <n> connections to peers (default: 125)\n-.HP\n-\\fB\\-maxreceivebuffer=\\fR<n>\n-.IP\n+.IP \\fB\\-maxreceivebuffer=\\fR<n>\n Maximum per\\-connection receive buffer, <n>*1000 bytes (default: 5000)\n-.HP\n-\\fB\\-maxsendbuffer=\\fR<n>\n-.IP\n+.IP \\fB\\-maxsendbuffer=\\fR<n>\n Maximum per\\-connection send buffer, <n>*1000 bytes (default: 1000)\n-.HP\n-\\fB\\-maxtimeadjustment\\fR\n-.IP\n+.IP \\fB\\-maxtimeadjustment\\fR\n Maximum allowed median peer time offset adjustment. Local perspective of\n time may be influenced by peers forward or backward by this\n amount. (default: 4200 seconds)\n-.HP\n-\\fB\\-onion=\\fR<ip:port>\n-.IP\n+.IP \\fB\\-maxuploadtarget=\\fR<n>\n+Tries to keep outbound traffic under the given target (in MiB per 24h),\n+0 = no limit (default: 0)\n+.IP \\fB\\-onion=\\fR<ip:port>\n Use separate SOCKS5 proxy to reach peers via Tor hidden services\n (default: \\fB\\-proxy\\fR)\n-.HP\n-\\fB\\-onlynet=\\fR<net>\n-.IP\n+.IP \\fB\\-onlynet=\\fR<net>\n Only connect to nodes in network <net> (ipv4, ipv6 or onion)\n-.HP\n-\\fB\\-permitbaremultisig\\fR\n-.IP\n-Relay non\\-P2SH multisig (default: 1)\n-.HP\n-\\fB\\-peerbloomfilters\\fR\n-.IP\n+.IP \\fB\\-peerbloomfilters\\fR\n Support filtering of blocks and transaction with bloom filters (default:\n 1)\n-.HP\n-\\fB\\-port=\\fR<port>\n-.IP\n+.IP \\fB\\-permitbaremultisig\\fR\n+Relay non\\-P2SH multisig (default: 1)\n+.IP \\fB\\-port=\\fR<port>\n Listen for connections on <port> (default: 8333 or testnet: 18333)\n-.HP\n-\\fB\\-proxy=\\fR<ip:port>\n-.IP\n+.IP \\fB\\-proxy=\\fR<ip:port>\n Connect through SOCKS5 proxy\n-.HP\n-\\fB\\-proxyrandomize\\fR\n-.IP\n+.IP \\fB\\-proxyrandomize\\fR\n Randomize credentials for every proxy connection. This enables Tor\n stream isolation (default: 1)\n-.HP\n-\\fB\\-seednode=\\fR<ip>\n-.IP\n+.IP \\fB\\-seednode=\\fR<ip>\n Connect to a node to retrieve peer addresses, and disconnect\n-.HP\n-\\fB\\-timeout=\\fR<n>\n-.IP\n+.IP \\fB\\-timeout=\\fR<n>\n Specify connection timeout in milliseconds (minimum: 1, default: 5000)\n-.HP\n-\\fB\\-torcontrol=\\fR<ip>:<port>\n-.IP\n+.IP \\fB\\-torcontrol=\\fR<ip>:<port>\n Tor control port to use if onion listening enabled (default:\n 127.0.0.1:9051)\n-.HP\n-\\fB\\-torpassword=\\fR<pass>\n-.IP\n+.IP \\fB\\-torpassword=\\fR<pass>\n Tor control port password (default: empty)\n-.HP\n-\\fB\\-upnp\\fR\n-.IP\n-Use UPnP to map the listening port (default: 0)\n-.HP\n-\\fB\\-whitebind=\\fR<addr>\n-.IP\n+.IP \\fB\\-whitebind=\\fR<addr>\n Bind to given address and whitelist peers connecting to it. Use\n [host]:port notation for IPv6\n-.HP\n-\\fB\\-whitelist=\\fR<IP address or network>\n-.IP\n+.IP \\fB\\-whitelist=\\fR<IP address or network>\n Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or\n CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple\n times. Whitelisted peers cannot be DoS banned and their\n transactions are always relayed, even if they are already in the\n mempool, useful e.g. for a gateway\n-.HP\n-\\fB\\-maxuploadtarget=\\fR<n>\n-.IP\n-Tries to keep outbound traffic under the given target (in MiB per 24h),\n-0 = no limit (default: 0)\n .PP\n Wallet options:\n-.HP\n-\\fB\\-addresstype\\fR\n-.IP\n+.IP \\fB\\-addresstype\\fR\n What type of addresses to use (\"legacy\", \"p2sh\\-segwit\", or \"bech32\",\n default: \"p2sh\\-segwit\")\n-.HP\n-\\fB\\-changetype\\fR\n-.IP\n+.IP \\fB\\-changetype\\fR\n What type of change to use (\"legacy\", \"p2sh\\-segwit\", or \"bech32\").\n Default is same as \\fB\\-addresstype\\fR, except when\n \\fB\\-addresstype\\fR=\\fI\\,p2sh\\-segwit\\/\\fR a native segwit output is used when\n sending to a native segwit address)\n-.HP\n-\\fB\\-disablewallet\\fR\n-.IP\n+.IP \\fB\\-disablewallet\\fR\n Do not load the wallet and disable wallet RPC calls\n-.HP\n-\\fB\\-keypool=\\fR<n>\n-.IP\n-Set key pool size to <n> (default: 1000)\n-.HP\n-\\fB\\-fallbackfee=\\fR<amt>\n-.IP\n-A fee rate (in BTC/kB) that will be used when fee estimation has\n-insufficient data (default: 0.0002)\n-.HP\n-\\fB\\-discardfee=\\fR<amt>\n-.IP\n+.IP \\fB\\-discardfee=\\fR<amt>\n The fee rate (in BTC/kB) that indicates your tolerance for discarding\n change by adding it to the fee (default: 0.0001). Note: An output\n is discarded if it is dust at this rate, but we will always\n discard up to the dust relay fee and a discard fee above that is\n limited by the fee estimate for the longest target\n-.HP\n-\\fB\\-mintxfee=\\fR<amt>\n-.IP\n+.IP \\fB\\-fallbackfee=\\fR<amt>\n+A fee rate (in BTC/kB) that will be used when fee estimation has\n+insufficient data (default: 0.0002)\n+.IP \\fB\\-keypool=\\fR<n>\n+Set key pool size to <n> (default: 1000)\n+.IP \\fB\\-mintxfee=\\fR<amt>\n Fees (in BTC/kB) smaller than this are considered zero fee for\n transaction creation (default: 0.00001)\n-.HP\n-\\fB\\-paytxfee=\\fR<amt>\n-.IP\n+.IP \\fB\\-paytxfee=\\fR<amt>\n Fee (in BTC/kB) to add to transactions you send (default: 0.00)\n-.HP\n-\\fB\\-rescan\\fR\n-.IP\n+.IP \\fB\\-rescan\\fR\n Rescan the block chain for missing wallet transactions on startup\n-.HP\n-\\fB\\-salvagewallet\\fR\n-.IP\n+.IP \\fB\\-salvagewallet\\fR\n Attempt to recover private keys from a corrupt wallet on startup\n-.HP\n-\\fB\\-spendzeroconfchange\\fR\n-.IP\n+.IP \\fB\\-spendzeroconfchange\\fR\n Spend unconfirmed change when sending transactions (default: 1)\n-.HP\n-\\fB\\-txconfirmtarget=\\fR<n>\n-.IP\n+.IP \\fB\\-txconfirmtarget=\\fR<n>\n If paytxfee is not set, include enough fee so transactions begin\n confirmation on average within n blocks (default: 6)\n-.HP\n-\\fB\\-walletrbf\\fR\n-.IP\n-Send transactions with full\\-RBF opt\\-in enabled (RPC only, default: 0)\n-.HP\n-\\fB\\-upgradewallet\\fR\n-.IP\n+.IP \\fB\\-upgradewallet\\fR\n Upgrade wallet to latest format on startup\n-.HP\n-\\fB\\-wallet=\\fR<file>\n-.IP\n-Specify wallet file (within data directory) (default: wallet.dat)\n-.HP\n-\\fB\\-walletbroadcast\\fR\n-.IP\n+.IP \\fB\\-wallet=\\fR<file>\n+Specify wallet database path. Can be specified multiple times to load\n+multiple wallets. Path is interpreted relative to <walletdir> if\n+it is not absolute, and will be created if it does not exist (as\n+a directory containing a wallet.dat file and log files). For\n+backwards compatibility this will also accept names of existing\n+data files in <walletdir>.)\n+.IP \\fB\\-walletbroadcast\\fR\n Make the wallet broadcast transactions (default: 1)\n-.HP\n-\\fB\\-walletdir=\\fR<dir>\n-.IP\n+.IP \\fB\\-walletdir=\\fR<dir>\n Specify directory to hold wallets (default: <datadir>/wallets if it\n exists, otherwise <datadir>)\n-.HP\n-\\fB\\-walletnotify=\\fR<cmd>\n-.IP\n+.IP \\fB\\-walletnotify=\\fR<cmd>\n Execute command when a wallet transaction changes (%s in cmd is replaced\n by TxID)\n-.HP\n-\\fB\\-zapwallettxes=\\fR<mode>\n-.IP\n+.IP \\fB\\-walletrbf\\fR\n+Send transactions with full\\-RBF opt\\-in enabled (RPC only, default: 0)\n+.IP \\fB\\-zapwallettxes=\\fR<mode>\n Delete all wallet transactions and only recover those parts of the\n blockchain through \\fB\\-rescan\\fR on startup (1 = keep tx meta data e.g.\n account owner and payment request information, 2 = drop tx meta\n data)\n .PP\n ZeroMQ notification options:\n-.HP\n-\\fB\\-zmqpubhashblock=\\fR<address>\n-.IP\n+.IP \\fB\\-zmqpubhashblock=\\fR<address>\n Enable publish hash block in <address>\n-.HP\n-\\fB\\-zmqpubhashtx=\\fR<address>\n-.IP\n+.IP \\fB\\-zmqpubhashtx=\\fR<address>\n Enable publish hash transaction in <address>\n-.HP\n-\\fB\\-zmqpubrawblock=\\fR<address>\n-.IP\n+.IP \\fB\\-zmqpubrawblock=\\fR<address>\n Enable publish raw block in <address>\n-.HP\n-\\fB\\-zmqpubrawtx=\\fR<address>\n-.IP\n+.IP \\fB\\-zmqpubrawtx=\\fR<address>\n Enable publish raw transaction in <address>\n .PP\n Debugging/Testing options:\n-.HP\n-\\fB\\-uacomment=\\fR<cmt>\n-.IP\n-Append comment to the user agent string\n-.HP\n-\\fB\\-debug=\\fR<category>\n-.IP\n+.IP \\fB\\-debug=\\fR<category>\n Output debugging information (default: 0, supplying <category> is\n optional). If <category> is not supplied or if <category> = 1,\n output all debugging information. <category> can be: net, tor,\n mempool, http, bench, zmq, db, rpc, estimatefee, addrman,\n selectcoins, reindex, cmpctblock, rand, prune, proxy, mempoolrej,\n libevent, coindb, qt, leveldb.\n-.HP\n-\\fB\\-debugexclude=\\fR<category>\n-.IP\n+.IP \\fB\\-debugexclude=\\fR<category>\n Exclude debugging information for a category. Can be used in conjunction\n with \\fB\\-debug\\fR=\\fI\\,1\\/\\fR to output debug logs for all categories except one\n or more specified categories.\n-.HP\n-\\fB\\-help\\-debug\\fR\n-.IP\n+.IP \\fB\\-help\\-debug\\fR\n Show all debugging options (usage: \\fB\\-\\-help\\fR \\fB\\-help\\-debug\\fR)\n-.HP\n-\\fB\\-logips\\fR\n-.IP\n+.IP \\fB\\-logips\\fR\n Include IP addresses in debug output (default: 0)\n-.HP\n-\\fB\\-logtimestamps\\fR\n-.IP\n+.IP \\fB\\-logtimestamps\\fR\n Prepend debug output with timestamp (default: 1)\n-.HP\n-\\fB\\-maxtxfee=\\fR<amt>\n-.IP\n+.IP \\fB\\-maxtxfee=\\fR<amt>\n Maximum total fees (in BTC) to use in a single wallet transaction or raw\n transaction; setting this too low may abort large transactions\n (default: 0.10)\n-.HP\n-\\fB\\-printtoconsole\\fR\n-.IP\n+.IP \\fB\\-printtoconsole\\fR\n Send trace/debug info to console instead of debug.log file\n-.HP\n-\\fB\\-shrinkdebugfile\\fR\n-.IP\n+.IP \\fB\\-shrinkdebugfile\\fR\n Shrink debug.log file on client startup (default: 1 when no \\fB\\-debug\\fR)\n+.IP \\fB\\-uacomment=\\fR<cmt>\n+Append comment to the user agent string\n .PP\n Chain selection options:\n-.HP\n-\\fB\\-testnet\\fR\n-.IP\n+.IP \\fB\\-testnet\\fR\n Use the test chain\n .PP\n Node relay options:\n-.HP\n-\\fB\\-bytespersigop\\fR\n-.IP\n+.IP \\fB\\-bytespersigop\\fR\n Equivalent bytes per sigop in transactions for relay and mining\n (default: 20)\n-.HP\n-\\fB\\-datacarrier\\fR\n-.IP\n+.IP \\fB\\-datacarrier\\fR\n Relay and mine data carrier transactions (default: 1)\n-.HP\n-\\fB\\-datacarriersize\\fR\n-.IP\n+.IP \\fB\\-datacarriersize\\fR\n Maximum size of data in data carrier transactions we relay and mine\n (default: 83)\n-.HP\n-\\fB\\-mempoolreplacement\\fR\n-.IP\n+.IP \\fB\\-mempoolreplacement\\fR\n Enable transaction replacement in the memory pool (default: 1)\n-.HP\n-\\fB\\-minrelaytxfee=\\fR<amt>\n-.IP\n+.IP \\fB\\-minrelaytxfee=\\fR<amt>\n Fees (in BTC/kB) smaller than this are considered zero fee for relaying,\n mining and transaction creation (default: 0.00001)\n-.HP\n-\\fB\\-whitelistrelay\\fR\n-.IP\n-Accept relayed transactions received from whitelisted peers even when\n-not relaying transactions (default: 1)\n-.HP\n-\\fB\\-whitelistforcerelay\\fR\n-.IP\n+.IP \\fB\\-whitelistforcerelay\\fR\n Force relay of transactions from whitelisted peers even if they violate\n local relay policy (default: 1)\n+.IP \\fB\\-whitelistrelay\\fR\n+Accept relayed transactions received from whitelisted peers even when\n+not relaying transactions (default: 1)\n .PP\n Block creation options:\n-.HP\n-\\fB\\-blockmaxweight=\\fR<n>\n-.IP\n+.IP \\fB\\-blockmaxweight=\\fR<n>\n Set maximum BIP141 block weight (default: 3996000)\n-.HP\n-\\fB\\-blockmaxsize=\\fR<n>\n-.IP\n-Set maximum BIP141 block weight to this * 4. Deprecated, use\n-blockmaxweight\n-.HP\n-\\fB\\-blockmintxfee=\\fR<amt>\n-.IP\n+.IP \\fB\\-blockmintxfee=\\fR<amt>\n Set lowest fee rate (in BTC/kB) for transactions to be included in block\n creation. (default: 0.00001)\n .PP\n RPC server options:\n-.HP\n-\\fB\\-server\\fR\n-.IP\n-Accept command line and JSON\\-RPC commands\n-.HP\n-\\fB\\-rest\\fR\n-.IP\n+.IP \\fB\\-rest\\fR\n Accept public REST requests (default: 0)\n-.HP\n-\\fB\\-rpcbind=\\fR<addr>[:port]\n-.IP\n+.IP \\fB\\-rpcallowip=\\fR<ip>\n+Allow JSON\\-RPC connections from specified source. Valid for <ip> are a\n+single IP (e.g. 1.2.3.4), a network/netmask (e.g.\n+1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This\n+option can be specified multiple times\n+.IP \\fB\\-rpcauth=\\fR<userpw>\n+Username and hashed password for JSON\\-RPC connections. The field\n+<userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A\n+canonical python script is included in share/rpcuser. The client\n+then connects normally using the\n+rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This\n+option can be specified multiple times\n+.IP \\fB\\-rpcbind=\\fR<addr>[:port]\n Bind to given address to listen for JSON\\-RPC connections. This option is\n ignored unless \\fB\\-rpcallowip\\fR is also passed. Port is optional and\n overrides \\fB\\-rpcport\\fR. Use [host]:port notation for IPv6. This\n option can be specified multiple times (default: 127.0.0.1 and\n ::1 i.e., localhost, or if \\fB\\-rpcallowip\\fR has been specified,\n 0.0.0.0 and :: i.e., all addresses)\n-.HP\n-\\fB\\-rpccookiefile=\\fR<loc>\n-.IP\n+.IP \\fB\\-rpccookiefile=\\fR<loc>\n Location of the auth cookie (default: data dir)\n-.HP\n-\\fB\\-rpcuser=\\fR<user>\n-.IP\n-Username for JSON\\-RPC connections\n-.HP\n-\\fB\\-rpcpassword=\\fR<pw>\n-.IP\n+.IP \\fB\\-rpcpassword=\\fR<pw>\n Password for JSON\\-RPC connections\n-.HP\n-\\fB\\-rpcauth=\\fR<userpw>\n-.IP\n-Username and hashed password for JSON\\-RPC connections. The field\n-<userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A\n-canonical python script is included in share/rpcuser. The client\n-then connects normally using the\n-rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This\n-option can be specified multiple times\n-.HP\n-\\fB\\-rpcport=\\fR<port>\n-.IP\n+.IP \\fB\\-rpcport=\\fR<port>\n Listen for JSON\\-RPC connections on <port> (default: 8332 or testnet:\n 18332)\n-.HP\n-\\fB\\-rpcallowip=\\fR<ip>\n-.IP\n-Allow JSON\\-RPC connections from specified source. Valid for <ip> are a\n-single IP (e.g. 1.2.3.4), a network/netmask (e.g.\n-1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This\n-option can be specified multiple times\n-.HP\n-\\fB\\-rpcserialversion\\fR\n-.IP\n+.IP \\fB\\-rpcserialversion\\fR\n Sets the serialization of raw transaction or block hex returned in\n non\\-verbose mode, non\\-segwit(0) or segwit(1) (default: 1)\n-.HP\n-\\fB\\-rpcthreads=\\fR<n>\n-.IP\n+.IP \\fB\\-rpcthreads=\\fR<n>\n Set the number of threads to service RPC calls (default: 4)\n+.IP \\fB\\-rpcuser=\\fR<user>\n+Username for JSON\\-RPC connections\n+.IP \\fB\\-server\\fR\n+Accept command line and JSON\\-RPC commands\n .PP\n UI Options:\n-.HP\n-\\fB\\-choosedatadir\\fR\n-.IP\n+.IP \\fB\\-choosedatadir\\fR\n Choose data directory on startup (default: 0)\n-.HP\n-\\fB\\-lang=\\fR<lang>\n-.IP\n+.IP \\fB\\-lang=\\fR<lang>\n Set language, for example \"de_DE\" (default: system locale)\n-.HP\n-\\fB\\-min\\fR\n-.IP\n+.IP \\fB\\-min\\fR\n Start minimized\n-.HP\n-\\fB\\-rootcertificates=\\fR<file>\n-.IP\n+.IP \\fB\\-resetguisettings\\fR\n+Reset all settings changed in the GUI\n+.IP \\fB\\-rootcertificates=\\fR<file>\n Set SSL root certificates for payment request (default: \\fB\\-system\\-\\fR)\n-.HP\n-\\fB\\-splash\\fR\n-.IP\n+.IP \\fB\\-splash\\fR\n Show splash screen on startup (default: 1)\n-.HP\n-\\fB\\-resetguisettings\\fR\n-.IP\n-Reset all settings changed in the GUI\n .SH COPYRIGHT\n Copyright (C) 2009-2018 The Bitcoin Core developers\n "
      },
      {
        "sha": "8c8eb3f50aae51628c3e9cf4882ba01cc52609fb",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "modified",
        "additions": 28,
        "deletions": 69,
        "changes": 97,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/597146ef3c68361fb8377eee344a93b7ec4d4b85/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/597146ef3c68361fb8377eee344a93b7ec4d4b85/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=597146ef3c68361fb8377eee344a93b7ec4d4b85",
        "patch": "@@ -1,4 +1,3 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.\n .TH BITCOIN-TX \"1\" \"January 2018\" \"bitcoin-tx v0.16.99.0\" \"User Commands\"\n .SH NAME\n bitcoin-tx \\- manual page for bitcoin-tx v0.16.99.0\n@@ -12,104 +11,64 @@ Update hex\\-encoded bitcoin transaction\n bitcoin\\-tx [options] \\fB\\-create\\fR [commands]\n Create hex\\-encoded bitcoin transaction\n .SH OPTIONS\n-.HP\n-\\-?\n-.IP\n+.IP \\-?\n This help message\n-.HP\n-\\fB\\-create\\fR\n-.IP\n+.IP \\fB\\-create\\fR\n Create new, empty TX.\n-.HP\n-\\fB\\-json\\fR\n-.IP\n+.IP \\fB\\-json\\fR\n Select JSON output\n-.HP\n-\\fB\\-txid\\fR\n-.IP\n+.IP \\fB\\-txid\\fR\n Output only the hex\\-encoded transaction id of the resultant transaction.\n .PP\n Chain selection options:\n-.HP\n-\\fB\\-testnet\\fR\n-.IP\n-Use the test chain\n-.HP\n-\\fB\\-regtest\\fR\n-.IP\n+.IP \\fB\\-regtest\\fR\n Enter regression test mode, which uses a special chain in which blocks\n can be solved instantly. This is intended for regression testing\n tools and app development.\n+.IP \\fB\\-testnet\\fR\n+Use the test chain\n .PP\n Commands:\n-.IP\n-delin=N\n-.IP\n+.IP delin=N\n Delete input N from TX\n-.IP\n-delout=N\n-.IP\n+.IP delout=N\n Delete output N from TX\n-.IP\n-in=TXID:VOUT(:SEQUENCE_NUMBER)\n-.IP\n+.IP in=TXID:VOUT(:SEQUENCE_NUMBER)\n Add input to TX\n-.IP\n-locktime=N\n-.IP\n+.IP locktime=N\n Set TX lock time to N\n-.IP\n-nversion=N\n-.IP\n+.IP nversion=N\n Set TX version to N\n-.IP\n-replaceable(=N)\n-.IP\n-Set RBF opt\\-in sequence number for input N (if not provided, opt\\-in all\n-available inputs)\n-.IP\n-outaddr=VALUE:ADDRESS\n-.IP\n+.IP outaddr=VALUE:ADDRESS\n Add address\\-based output to TX\n-.IP\n-outpubkey=VALUE:PUBKEY[:FLAGS]\n-.IP\n+.IP outdata=[VALUE:]DATA\n+Add data\\-based output to TX\n+.IP outmultisig=VALUE:REQUIRED:PUBKEYS:PUBKEY1:PUBKEY2:....[:FLAGS]\n+Add Pay To n\\-of\\-m Multi\\-sig output to TX. n = REQUIRED, m = PUBKEYS.\n+Optionally add the \"W\" flag to produce a\n+pay\\-to\\-witness\\-script\\-hash output. Optionally add the \"S\" flag to\n+wrap the output in a pay\\-to\\-script\\-hash.\n+.IP outpubkey=VALUE:PUBKEY[:FLAGS]\n Add pay\\-to\\-pubkey output to TX. Optionally add the \"W\" flag to produce a\n pay\\-to\\-witness\\-pubkey\\-hash output. Optionally add the \"S\" flag to\n wrap the output in a pay\\-to\\-script\\-hash.\n-.IP\n-outdata=[VALUE:]DATA\n-.IP\n-Add data\\-based output to TX\n-.IP\n-outscript=VALUE:SCRIPT[:FLAGS]\n-.IP\n+.IP outscript=VALUE:SCRIPT[:FLAGS]\n Add raw script output to TX. Optionally add the \"W\" flag to produce a\n pay\\-to\\-witness\\-script\\-hash output. Optionally add the \"S\" flag to\n wrap the output in a pay\\-to\\-script\\-hash.\n-.IP\n-outmultisig=VALUE:REQUIRED:PUBKEYS:PUBKEY1:PUBKEY2:....[:FLAGS]\n-.IP\n-Add Pay To n\\-of\\-m Multi\\-sig output to TX. n = REQUIRED, m = PUBKEYS.\n-Optionally add the \"W\" flag to produce a\n-pay\\-to\\-witness\\-script\\-hash output. Optionally add the \"S\" flag to\n-wrap the output in a pay\\-to\\-script\\-hash.\n-.IP\n-sign=SIGHASH\\-FLAGS\n-.IP\n+.IP replaceable(=N)\n+Set RBF opt\\-in sequence number for input N (if not provided, opt\\-in all\n+available inputs)\n+.IP sign=SIGHASH\\-FLAGS\n Add zero or more signatures to transaction. This command requires JSON\n registers:prevtxs=JSON object, privatekeys=JSON object. See\n signrawtransaction docs for format of sighash flags, JSON\n objects.\n .PP\n Register Commands:\n-.IP\n-load=NAME:FILENAME\n-.IP\n+.IP load=NAME:FILENAME\n Load JSON file FILENAME into register NAME\n-.IP\n-set=NAME:JSON\\-STRING\n-.IP\n+.IP set=NAME:JSON\\-STRING\n Set register NAME to given JSON\\-STRING\n .SH COPYRIGHT\n Copyright (C) 2009-2018 The Bitcoin Core developers"
      },
      {
        "sha": "6ec3e446b70f65cefaf5e033bdb6aa7bc7412f93",
        "filename": "doc/man/bitcoind.1",
        "status": "modified",
        "additions": 143,
        "deletions": 360,
        "changes": 503,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/597146ef3c68361fb8377eee344a93b7ec4d4b85/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/597146ef3c68361fb8377eee344a93b7ec4d4b85/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=597146ef3c68361fb8377eee344a93b7ec4d4b85",
        "patch": "@@ -1,4 +1,3 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.\n .TH BITCOIND \"1\" \"January 2018\" \"bitcoind v0.16.99.0\" \"User Commands\"\n .SH NAME\n bitcoind \\- manual page for bitcoind v0.16.99.0\n@@ -9,92 +8,54 @@ Bitcoin Core Daemon version v0.16.99.0\n bitcoind [options]\n Start Bitcoin Core Daemon\n .SH OPTIONS\n-.HP\n-\\-?\n-.IP\n+.IP \\-?\n Print this help message and exit\n-.HP\n-\\fB\\-version\\fR\n-.IP\n+.IP \\fB\\-version\\fR\n Print version and exit\n-.HP\n-\\fB\\-alertnotify=\\fR<cmd>\n-.IP\n+.IP \\fB\\-alertnotify=\\fR<cmd>\n Execute command when a relevant alert is received or we see a really\n long fork (%s in cmd is replaced by message)\n-.HP\n-\\fB\\-blocknotify=\\fR<cmd>\n-.IP\n-Execute command when the best block changes (%s in cmd is replaced by\n-block hash)\n-.HP\n-\\fB\\-assumevalid=\\fR<hex>\n-.IP\n+.IP \\fB\\-assumevalid=\\fR<hex>\n If this block is in the chain assume that it and its ancestors are valid\n and potentially skip their script verification (0 to verify all,\n default:\n 0000000000000000005214481d2d96f898e3d5416e43359c145944a909d242e0,\n testnet:\n 0000000002e9e7b00e1f6dc5123a04aad68dd0f0968d8c7aa45f6640795c37b1)\n-.HP\n-\\fB\\-conf=\\fR<file>\n-.IP\n+.IP \\fB\\-blocknotify=\\fR<cmd>\n+Execute command when the best block changes (%s in cmd is replaced by\n+block hash)\n+.IP \\fB\\-blockreconstructionextratxn=\\fR<n>\n+Extra transactions to keep in memory for compact block reconstructions (default: 100)\n+.IP \\fB\\-blocksdir=\\fR<dir>\n+Specify blocks directory (default: <datadir>/blocks)\n+.IP \\fB\\-conf=\\fR<file>\n Specify configuration file (default: bitcoin.conf)\n-.HP\n-\\fB\\-daemon\\fR\n-.IP\n+.IP \\fB\\-daemon\\fR\n Run in the background as a daemon and accept commands\n-.HP\n-\\fB\\-datadir=\\fR<dir>\n-.IP\n+.IP \\fB\\-datadir=\\fR<dir>\n Specify data directory\n-.HP\n-\\fB\\-dbcache=\\fR<n>\n-.IP\n+.IP \\fB\\-dbcache=\\fR<n>\n Set database cache size in megabytes (4 to 16384, default: 450)\n-.HP\n-\\fB\\-loadblock=\\fR<file>\n-.IP\n+.IP \\fB\\-debuglogfile=\\fR<file>\n+Specify location of debug log file. Relative paths will be prefixed by a net-specific datadir location. (default: debug.log)\n+.IP \\fB\\-loadblock=\\fR<file>\n Imports blocks from external blk000??.dat file on startup\n-.HP\n-\\fB\\-debuglogfile=\\fR<file>\n-.IP\n-Specify location of debug log file: this can be an absolute path or a\n-path relative to the data directory (default: debug.log)\n-.HP\n-\\fB\\-maxorphantx=\\fR<n>\n-.IP\n-Keep at most <n> unconnectable transactions in memory (default: 100)\n-.HP\n-\\fB\\-maxmempool=\\fR<n>\n-.IP\n+.IP \\fB\\-maxmempool=\\fR<n>\n Keep the transaction memory pool below <n> megabytes (default: 300)\n-.HP\n-\\fB\\-mempoolexpiry=\\fR<n>\n-.IP\n+.IP \\fB\\-maxorphantx=\\fR<n>\n+Keep at most <n> unconnectable transactions in memory (default: 100)\n+.IP \\fB\\-mempoolexpiry=\\fR<n>\n Do not keep transactions in the mempool longer than <n> hours (default:\n 336)\n-.HP\n-\\fB\\-persistmempool\\fR\n-.IP\n-Whether to save the mempool on shutdown and load on restart (default: 1)\n-.HP\n-\\fB\\-blockreconstructionextratxn=\\fR<n>\n-.IP\n-Extra transactions to keep in memory for compact block reconstructions\n-(default: 100)\n-.HP\n-\\fB\\-par=\\fR<n>\n-.IP\n+.IP \\fB\\-par=\\fR<n>\n Set the number of script verification threads (\\fB\\-6\\fR to 16, 0 = auto, <0 =\n leave that many cores free, default: 0)\n-.HP\n-\\fB\\-pid=\\fR<file>\n-.IP\n+.IP \\fB\\-persistmempool\\fR\n+Whether to save the mempool on shutdown and load on restart (default: 1)\n+.IP \\fB\\-pid=\\fR<file>\n Specify pid file (default: bitcoind.pid)\n-.HP\n-\\fB\\-prune=\\fR<n>\n-.IP\n+.IP \\fB\\-prune=\\fR<n>\n Reduce storage requirements by enabling pruning (deleting) of old\n blocks. This allows the pruneblockchain RPC to be called to\n delete specific blocks, and enables automatic pruning of old\n@@ -104,446 +65,268 @@ setting requires re\\-downloading the entire blockchain. (default:\n 0 = disable pruning blocks, 1 = allow manual pruning via RPC,\n >550 = automatically prune block files to stay under the\n specified target size in MiB)\n-.HP\n-\\fB\\-reindex\\-chainstate\\fR\n-.IP\n-Rebuild chain state from the currently indexed blocks\n-.HP\n-\\fB\\-reindex\\fR\n-.IP\n+.IP \\fB\\-reindex\\fR\n Rebuild chain state and block index from the blk*.dat files on disk\n-.HP\n-\\fB\\-sysperms\\fR\n-.IP\n+.IP \\fB\\-reindex\\-chainstate\\fR\n+Rebuild chain state from the currently indexed blocks\n+.IP \\fB\\-sysperms\\fR\n Create new files with system default permissions, instead of umask 077\n (only effective with disabled wallet functionality)\n-.HP\n-\\fB\\-txindex\\fR\n-.IP\n+.IP \\fB\\-txindex\\fR\n Maintain a full transaction index, used by the getrawtransaction rpc\n call (default: 0)\n .PP\n Connection options:\n-.HP\n-\\fB\\-addnode=\\fR<ip>\n-.IP\n+.IP \\fB\\-addnode=\\fR<ip>\n Add a node to connect to and attempt to keep the connection open (see\n the `addnode` RPC command help for more info)\n-.HP\n-\\fB\\-banscore=\\fR<n>\n-.IP\n+.IP \\fB\\-banscore=\\fR<n>\n Threshold for disconnecting misbehaving peers (default: 100)\n-.HP\n-\\fB\\-bantime=\\fR<n>\n-.IP\n+.IP \\fB\\-bantime=\\fR<n>\n Number of seconds to keep misbehaving peers from reconnecting (default:\n 86400)\n-.HP\n-\\fB\\-bind=\\fR<addr>\n-.IP\n+.IP \\fB\\-bind=\\fR<addr>\n Bind to given address and always listen on it. Use [host]:port notation\n for IPv6\n-.HP\n-\\fB\\-connect=\\fR<ip>\n-.IP\n+.IP \\fB\\-connect=\\fR<ip>\n Connect only to the specified node(s); \\fB\\-connect\\fR=\\fI\\,0\\/\\fR disables automatic\n connections (the rules for this peer are the same as for\n \\fB\\-addnode\\fR)\n-.HP\n-\\fB\\-discover\\fR\n-.IP\n+.IP \\fB\\-discover\\fR\n Discover own IP addresses (default: 1 when listening and no \\fB\\-externalip\\fR\n or \\fB\\-proxy\\fR)\n-.HP\n-\\fB\\-dns\\fR\n-.IP\n+.IP \\fB\\-dns\\fR\n Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR (default: 1)\n-.HP\n-\\fB\\-dnsseed\\fR\n-.IP\n+.IP \\fB\\-dnsseed\\fR\n Query for peer addresses via DNS lookup, if low on addresses (default: 1\n unless \\fB\\-connect\\fR used)\n-.HP\n-\\fB\\-externalip=\\fR<ip>\n-.IP\n+.IP \\fB\\-externalip=\\fR<ip>\n Specify your own public address\n-.HP\n-\\fB\\-forcednsseed\\fR\n-.IP\n+.IP \\fB\\-forcednsseed\\fR\n Always query for peer addresses via DNS lookup (default: 0)\n-.HP\n-\\fB\\-listen\\fR\n-.IP\n+.IP \\fB\\-listen\\fR\n Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n-.HP\n-\\fB\\-listenonion\\fR\n-.IP\n+.IP \\fB\\-listenonion\\fR\n Automatically create Tor hidden service (default: 1)\n-.HP\n-\\fB\\-maxconnections=\\fR<n>\n-.IP\n+.IP \\fB\\-maxconnections=\\fR<n>\n Maintain at most <n> connections to peers (default: 125)\n-.HP\n-\\fB\\-maxreceivebuffer=\\fR<n>\n-.IP\n+.IP \\fB\\-maxreceivebuffer=\\fR<n>\n Maximum per\\-connection receive buffer, <n>*1000 bytes (default: 5000)\n-.HP\n-\\fB\\-maxsendbuffer=\\fR<n>\n-.IP\n+.IP \\fB\\-maxsendbuffer=\\fR<n>\n Maximum per\\-connection send buffer, <n>*1000 bytes (default: 1000)\n-.HP\n-\\fB\\-maxtimeadjustment\\fR\n-.IP\n+.IP \\fB\\-maxtimeadjustment\\fR\n Maximum allowed median peer time offset adjustment. Local perspective of\n time may be influenced by peers forward or backward by this\n amount. (default: 4200 seconds)\n-.HP\n-\\fB\\-onion=\\fR<ip:port>\n-.IP\n+.IP \\fB\\-maxuploadtarget=\\fR<n>\n+Tries to keep outbound traffic under the given target (in MiB per 24h),\n+0 = no limit (default: 0)\n+.IP \\fB\\-onion=\\fR<ip:port>\n Use separate SOCKS5 proxy to reach peers via Tor hidden services\n (default: \\fB\\-proxy\\fR)\n-.HP\n-\\fB\\-onlynet=\\fR<net>\n-.IP\n+.IP \\fB\\-onlynet=\\fR<net>\n Only connect to nodes in network <net> (ipv4, ipv6 or onion)\n-.HP\n-\\fB\\-permitbaremultisig\\fR\n-.IP\n-Relay non\\-P2SH multisig (default: 1)\n-.HP\n-\\fB\\-peerbloomfilters\\fR\n-.IP\n+.IP \\fB\\-peerbloomfilters\\fR\n Support filtering of blocks and transaction with bloom filters (default:\n 1)\n-.HP\n-\\fB\\-port=\\fR<port>\n-.IP\n+.IP \\fB\\-permitbaremultisig\\fR\n+Relay non\\-P2SH multisig (default: 1)\n+.IP \\fB\\-port=\\fR<port>\n Listen for connections on <port> (default: 8333 or testnet: 18333)\n-.HP\n-\\fB\\-proxy=\\fR<ip:port>\n-.IP\n+.IP \\fB\\-proxy=\\fR<ip:port>\n Connect through SOCKS5 proxy\n-.HP\n-\\fB\\-proxyrandomize\\fR\n-.IP\n+.IP \\fB\\-proxyrandomize\\fR\n Randomize credentials for every proxy connection. This enables Tor\n stream isolation (default: 1)\n-.HP\n-\\fB\\-seednode=\\fR<ip>\n-.IP\n+.IP \\fB\\-seednode=\\fR<ip>\n Connect to a node to retrieve peer addresses, and disconnect\n-.HP\n-\\fB\\-timeout=\\fR<n>\n-.IP\n+.IP \\fB\\-timeout=\\fR<n>\n Specify connection timeout in milliseconds (minimum: 1, default: 5000)\n-.HP\n-\\fB\\-torcontrol=\\fR<ip>:<port>\n-.IP\n+.IP \\fB\\-torcontrol=\\fR<ip>:<port>\n Tor control port to use if onion listening enabled (default:\n 127.0.0.1:9051)\n-.HP\n-\\fB\\-torpassword=\\fR<pass>\n-.IP\n+.IP \\fB\\-torpassword=\\fR<pass>\n Tor control port password (default: empty)\n-.HP\n-\\fB\\-upnp\\fR\n-.IP\n-Use UPnP to map the listening port (default: 0)\n-.HP\n-\\fB\\-whitebind=\\fR<addr>\n-.IP\n+.IP \\fB\\-whitebind=\\fR<addr>\n Bind to given address and whitelist peers connecting to it. Use\n [host]:port notation for IPv6\n-.HP\n-\\fB\\-whitelist=\\fR<IP address or network>\n-.IP\n+.IP \\fB\\-whitelist=\\fR<IP address or network>\n Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or\n CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple\n times. Whitelisted peers cannot be DoS banned and their\n transactions are always relayed, even if they are already in the\n mempool, useful e.g. for a gateway\n-.HP\n-\\fB\\-maxuploadtarget=\\fR<n>\n-.IP\n-Tries to keep outbound traffic under the given target (in MiB per 24h),\n-0 = no limit (default: 0)\n .PP\n Wallet options:\n-.HP\n-\\fB\\-addresstype\\fR\n-.IP\n+.IP \\fB\\-addresstype\\fR\n What type of addresses to use (\"legacy\", \"p2sh\\-segwit\", or \"bech32\",\n default: \"p2sh\\-segwit\")\n-.HP\n-\\fB\\-changetype\\fR\n-.IP\n+.IP \\fB\\-changetype\\fR\n What type of change to use (\"legacy\", \"p2sh\\-segwit\", or \"bech32\").\n Default is same as \\fB\\-addresstype\\fR, except when\n \\fB\\-addresstype\\fR=\\fI\\,p2sh\\-segwit\\/\\fR a native segwit output is used when\n sending to a native segwit address)\n-.HP\n-\\fB\\-disablewallet\\fR\n-.IP\n+.IP \\fB\\-disablewallet\\fR\n Do not load the wallet and disable wallet RPC calls\n-.HP\n-\\fB\\-keypool=\\fR<n>\n-.IP\n-Set key pool size to <n> (default: 1000)\n-.HP\n-\\fB\\-fallbackfee=\\fR<amt>\n-.IP\n-A fee rate (in BTC/kB) that will be used when fee estimation has\n-insufficient data (default: 0.0002)\n-.HP\n-\\fB\\-discardfee=\\fR<amt>\n-.IP\n+.IP \\fB\\-discardfee=\\fR<amt>\n The fee rate (in BTC/kB) that indicates your tolerance for discarding\n change by adding it to the fee (default: 0.0001). Note: An output\n is discarded if it is dust at this rate, but we will always\n discard up to the dust relay fee and a discard fee above that is\n limited by the fee estimate for the longest target\n-.HP\n-\\fB\\-mintxfee=\\fR<amt>\n-.IP\n+.IP \\fB\\-fallbackfee=\\fR<amt>\n+A fee rate (in BTC/kB) that will be used when fee estimation has\n+insufficient data (default: 0.0002)\n+.IP \\fB\\-keypool=\\fR<n>\n+Set key pool size to <n> (default: 1000)\n+.IP \\fB\\-mintxfee=\\fR<amt>\n Fees (in BTC/kB) smaller than this are considered zero fee for\n transaction creation (default: 0.00001)\n-.HP\n-\\fB\\-paytxfee=\\fR<amt>\n-.IP\n+.IP \\fB\\-paytxfee=\\fR<amt>\n Fee (in BTC/kB) to add to transactions you send (default: 0.00)\n-.HP\n-\\fB\\-rescan\\fR\n-.IP\n+.IP \\fB\\-rescan\\fR\n Rescan the block chain for missing wallet transactions on startup\n-.HP\n-\\fB\\-salvagewallet\\fR\n-.IP\n+.IP \\fB\\-salvagewallet\\fR\n Attempt to recover private keys from a corrupt wallet on startup\n-.HP\n-\\fB\\-spendzeroconfchange\\fR\n-.IP\n+.IP \\fB\\-spendzeroconfchange\\fR\n Spend unconfirmed change when sending transactions (default: 1)\n-.HP\n-\\fB\\-txconfirmtarget=\\fR<n>\n-.IP\n+.IP \\fB\\-txconfirmtarget=\\fR<n>\n If paytxfee is not set, include enough fee so transactions begin\n confirmation on average within n blocks (default: 6)\n-.HP\n-\\fB\\-walletrbf\\fR\n-.IP\n-Send transactions with full\\-RBF opt\\-in enabled (RPC only, default: 0)\n-.HP\n-\\fB\\-upgradewallet\\fR\n-.IP\n+.IP \\fB\\-upgradewallet\\fR\n Upgrade wallet to latest format on startup\n-.HP\n-\\fB\\-wallet=\\fR<file>\n-.IP\n-Specify wallet file (within data directory) (default: wallet.dat)\n-.HP\n-\\fB\\-walletbroadcast\\fR\n-.IP\n+.IP \\fB\\-wallet=\\fR<file>\n+Specify wallet database path. Can be specified multiple times to load\n+multiple wallets. Path is interpreted relative to <walletdir> if\n+it is not absolute, and will be created if it does not exist (as\n+a directory containing a wallet.dat file and log files). For\n+backwards compatibility this will also accept names of existing\n+data files in <walletdir>.)\n+.IP \\fB\\-walletbroadcast\\fR\n Make the wallet broadcast transactions (default: 1)\n-.HP\n-\\fB\\-walletdir=\\fR<dir>\n-.IP\n+.IP \\fB\\-walletdir=\\fR<dir>\n Specify directory to hold wallets (default: <datadir>/wallets if it\n exists, otherwise <datadir>)\n-.HP\n-\\fB\\-walletnotify=\\fR<cmd>\n-.IP\n+.IP \\fB\\-walletnotify=\\fR<cmd>\n Execute command when a wallet transaction changes (%s in cmd is replaced\n by TxID)\n-.HP\n-\\fB\\-zapwallettxes=\\fR<mode>\n-.IP\n+.IP \\fB\\-walletrbf\\fR\n+Send transactions with full\\-RBF opt\\-in enabled (RPC only, default: 0)\n+.IP \\fB\\-zapwallettxes=\\fR<mode>\n Delete all wallet transactions and only recover those parts of the\n blockchain through \\fB\\-rescan\\fR on startup (1 = keep tx meta data e.g.\n account owner and payment request information, 2 = drop tx meta\n data)\n .PP\n ZeroMQ notification options:\n-.HP\n-\\fB\\-zmqpubhashblock=\\fR<address>\n-.IP\n+.IP \\fB\\-zmqpubhashblock=\\fR<address>\n Enable publish hash block in <address>\n-.HP\n-\\fB\\-zmqpubhashtx=\\fR<address>\n-.IP\n+.IP \\fB\\-zmqpubhashtx=\\fR<address>\n Enable publish hash transaction in <address>\n-.HP\n-\\fB\\-zmqpubrawblock=\\fR<address>\n-.IP\n+.IP \\fB\\-zmqpubrawblock=\\fR<address>\n Enable publish raw block in <address>\n-.HP\n-\\fB\\-zmqpubrawtx=\\fR<address>\n-.IP\n+.IP \\fB\\-zmqpubrawtx=\\fR<address>\n Enable publish raw transaction in <address>\n .PP\n Debugging/Testing options:\n-.HP\n-\\fB\\-uacomment=\\fR<cmt>\n-.IP\n-Append comment to the user agent string\n-.HP\n-\\fB\\-debug=\\fR<category>\n-.IP\n+.IP \\fB\\-debug=\\fR<category>\n Output debugging information (default: 0, supplying <category> is\n optional). If <category> is not supplied or if <category> = 1,\n output all debugging information. <category> can be: net, tor,\n mempool, http, bench, zmq, db, rpc, estimatefee, addrman,\n selectcoins, reindex, cmpctblock, rand, prune, proxy, mempoolrej,\n libevent, coindb, qt, leveldb.\n-.HP\n-\\fB\\-debugexclude=\\fR<category>\n-.IP\n+.IP \\fB\\-debugexclude=\\fR<category>\n Exclude debugging information for a category. Can be used in conjunction\n with \\fB\\-debug\\fR=\\fI\\,1\\/\\fR to output debug logs for all categories except one\n or more specified categories.\n-.HP\n-\\fB\\-help\\-debug\\fR\n-.IP\n+.IP \\fB\\-help\\-debug\\fR\n Show all debugging options (usage: \\fB\\-\\-help\\fR \\fB\\-help\\-debug\\fR)\n-.HP\n-\\fB\\-logips\\fR\n-.IP\n+.IP \\fB\\-logips\\fR\n Include IP addresses in debug output (default: 0)\n-.HP\n-\\fB\\-logtimestamps\\fR\n-.IP\n+.IP \\fB\\-logtimestamps\\fR\n Prepend debug output with timestamp (default: 1)\n-.HP\n-\\fB\\-maxtxfee=\\fR<amt>\n-.IP\n+.IP \\fB\\-maxtxfee=\\fR<amt>\n Maximum total fees (in BTC) to use in a single wallet transaction or raw\n transaction; setting this too low may abort large transactions\n (default: 0.10)\n-.HP\n-\\fB\\-printtoconsole\\fR\n-.IP\n+.IP \\fB\\-printtoconsole\\fR\n Send trace/debug info to console instead of debug.log file\n-.HP\n-\\fB\\-shrinkdebugfile\\fR\n-.IP\n+.IP \\fB\\-shrinkdebugfile\\fR\n Shrink debug.log file on client startup (default: 1 when no \\fB\\-debug\\fR)\n+.IP \\fB\\-uacomment=\\fR<cmt>\n+Append comment to the user agent string\n .PP\n Chain selection options:\n-.HP\n-\\fB\\-testnet\\fR\n-.IP\n+.IP \\fB\\-testnet\\fR\n Use the test chain\n .PP\n Node relay options:\n-.HP\n-\\fB\\-bytespersigop\\fR\n-.IP\n+.IP \\fB\\-bytespersigop\\fR\n Equivalent bytes per sigop in transactions for relay and mining\n (default: 20)\n-.HP\n-\\fB\\-datacarrier\\fR\n-.IP\n+.IP \\fB\\-datacarrier\\fR\n Relay and mine data carrier transactions (default: 1)\n-.HP\n-\\fB\\-datacarriersize\\fR\n-.IP\n+.IP \\fB\\-datacarriersize\\fR\n Maximum size of data in data carrier transactions we relay and mine\n (default: 83)\n-.HP\n-\\fB\\-mempoolreplacement\\fR\n-.IP\n+.IP \\fB\\-mempoolreplacement\\fR\n Enable transaction replacement in the memory pool (default: 1)\n-.HP\n-\\fB\\-minrelaytxfee=\\fR<amt>\n-.IP\n+.IP \\fB\\-minrelaytxfee=\\fR<amt>\n Fees (in BTC/kB) smaller than this are considered zero fee for relaying,\n mining and transaction creation (default: 0.00001)\n-.HP\n-\\fB\\-whitelistrelay\\fR\n-.IP\n-Accept relayed transactions received from whitelisted peers even when\n-not relaying transactions (default: 1)\n-.HP\n-\\fB\\-whitelistforcerelay\\fR\n-.IP\n+.IP \\fB\\-whitelistforcerelay\\fR\n Force relay of transactions from whitelisted peers even if they violate\n local relay policy (default: 1)\n+.IP \\fB\\-whitelistrelay\\fR\n+Accept relayed transactions received from whitelisted peers even when\n+not relaying transactions (default: 1)\n .PP\n Block creation options:\n-.HP\n-\\fB\\-blockmaxweight=\\fR<n>\n-.IP\n+.IP \\fB\\-blockmaxweight=\\fR<n>\n Set maximum BIP141 block weight (default: 3996000)\n-.HP\n-\\fB\\-blockmaxsize=\\fR<n>\n-.IP\n-Set maximum BIP141 block weight to this * 4. Deprecated, use\n-blockmaxweight\n-.HP\n-\\fB\\-blockmintxfee=\\fR<amt>\n-.IP\n+.IP \\fB\\-blockmintxfee=\\fR<amt>\n Set lowest fee rate (in BTC/kB) for transactions to be included in block\n creation. (default: 0.00001)\n .PP\n RPC server options:\n-.HP\n-\\fB\\-server\\fR\n-.IP\n-Accept command line and JSON\\-RPC commands\n-.HP\n-\\fB\\-rest\\fR\n-.IP\n+.IP \\fB\\-rest\\fR\n Accept public REST requests (default: 0)\n-.HP\n-\\fB\\-rpcbind=\\fR<addr>[:port]\n-.IP\n+.IP \\fB\\-rpcallowip=\\fR<ip>\n+Allow JSON\\-RPC connections from specified source. Valid for <ip> are a\n+single IP (e.g. 1.2.3.4), a network/netmask (e.g.\n+1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This\n+option can be specified multiple times\n+.IP \\fB\\-rpcauth=\\fR<userpw>\n+Username and hashed password for JSON\\-RPC connections. The field\n+<userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A\n+canonical python script is included in share/rpcuser. The client\n+then connects normally using the\n+rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This\n+option can be specified multiple times\n+.IP \\fB\\-rpcbind=\\fR<addr>[:port]\n Bind to given address to listen for JSON\\-RPC connections. This option is\n ignored unless \\fB\\-rpcallowip\\fR is also passed. Port is optional and\n overrides \\fB\\-rpcport\\fR. Use [host]:port notation for IPv6. This\n option can be specified multiple times (default: 127.0.0.1 and\n ::1 i.e., localhost, or if \\fB\\-rpcallowip\\fR has been specified,\n 0.0.0.0 and :: i.e., all addresses)\n-.HP\n-\\fB\\-rpccookiefile=\\fR<loc>\n-.IP\n+.IP \\fB\\-rpccookiefile=\\fR<loc>\n Location of the auth cookie (default: data dir)\n-.HP\n-\\fB\\-rpcuser=\\fR<user>\n-.IP\n-Username for JSON\\-RPC connections\n-.HP\n-\\fB\\-rpcpassword=\\fR<pw>\n-.IP\n+.IP \\fB\\-rpcpassword=\\fR<pw>\n Password for JSON\\-RPC connections\n-.HP\n-\\fB\\-rpcauth=\\fR<userpw>\n-.IP\n-Username and hashed password for JSON\\-RPC connections. The field\n-<userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A\n-canonical python script is included in share/rpcuser. The client\n-then connects normally using the\n-rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This\n-option can be specified multiple times\n-.HP\n-\\fB\\-rpcport=\\fR<port>\n-.IP\n+.IP \\fB\\-rpcport=\\fR<port>\n Listen for JSON\\-RPC connections on <port> (default: 8332 or testnet:\n 18332)\n-.HP\n-\\fB\\-rpcallowip=\\fR<ip>\n-.IP\n-Allow JSON\\-RPC connections from specified source. Valid for <ip> are a\n-single IP (e.g. 1.2.3.4), a network/netmask (e.g.\n-1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This\n-option can be specified multiple times\n-.HP\n-\\fB\\-rpcserialversion\\fR\n-.IP\n+.IP \\fB\\-rpcserialversion\\fR\n Sets the serialization of raw transaction or block hex returned in\n non\\-verbose mode, non\\-segwit(0) or segwit(1) (default: 1)\n-.HP\n-\\fB\\-rpcthreads=\\fR<n>\n-.IP\n+.IP \\fB\\-rpcthreads=\\fR<n>\n Set the number of threads to service RPC calls (default: 4)\n+.IP \\fB\\-rpcuser=\\fR<user>\n+Username for JSON\\-RPC connections\n+.IP \\fB\\-server\\fR\n+Accept command line and JSON\\-RPC commands\n .SH COPYRIGHT\n Copyright (C) 2009-2018 The Bitcoin Core developers\n "
      }
    ]
  }
]