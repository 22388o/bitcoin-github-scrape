[
  {
    "sha": "8b2ef8fe969e0a82ad6017369ed5f037ea885bce",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjJlZjhmZTk2OWUwYTgyYWQ2MDE3MzY5ZWQ1ZjAzN2VhODg1YmNl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-23T10:20:12Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-04T11:35:16Z"
      },
      "message": "[wallet] [qa] check MAX_STANDARD_TX_SIZE",
      "tree": {
        "sha": "dea98ea213db90a27ce85b9b0c309dd6a9ea8ecc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dea98ea213db90a27ce85b9b0c309dd6a9ea8ecc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b2ef8fe969e0a82ad6017369ed5f037ea885bce",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b2ef8fe969e0a82ad6017369ed5f037ea885bce",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b2ef8fe969e0a82ad6017369ed5f037ea885bce",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b2ef8fe969e0a82ad6017369ed5f037ea885bce/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a95a18562b2be0b738ec5dd36670c8098c5f255",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a95a18562b2be0b738ec5dd36670c8098c5f255",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a95a18562b2be0b738ec5dd36670c8098c5f255"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 27,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5640bc395ac174543a11987307e969365e8121d5",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b2ef8fe969e0a82ad6017369ed5f037ea885bce/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b2ef8fe969e0a82ad6017369ed5f037ea885bce/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=8b2ef8fe969e0a82ad6017369ed5f037ea885bce",
        "patch": "@@ -2,6 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"policy/policy.h\"\n #include \"wallet/wallet.h\"\n \n #include <set>\n@@ -263,6 +264,32 @@ BOOST_AUTO_TEST_CASE(coin_selection_tests)\n         BOOST_CHECK_EQUAL(nValueRet, 101 * MIN_CHANGE);\n         BOOST_CHECK_EQUAL(setCoinsRet.size(), 2U);\n \n+        // test large transactions\n+        const uint16_t nMaxInputsPerTx = MAX_STANDARD_TX_SIZE / 148; // Assume ~148 bytes per input\n+\n+        // https://github.com/bitcoin/bitcoin/issues/5782#issuecomment-73819058\n+        // large tx 1:\n+        empty_wallet();\n+        add_coin(50 * COIN);\n+        for (uint16_t j1 = 0; j1 < 1000; j1++)\n+            add_coin(5 * CENT);\n+        BOOST_CHECK(wallet.SelectCoinsMinConf(49.5 * COIN, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_GT(nMaxInputsPerTx, setCoinsRet.size());\n+\n+        // large tx 2:\n+        empty_wallet();\n+        for (uint16_t j2 = 0; j2 < 500; j2++)\n+            add_coin(0.1 * COIN);\n+        for (uint16_t j2 = 0; j2 < 1000; j2++)\n+            add_coin(5 * CENT);\n+        BOOST_CHECK(wallet.SelectCoinsMinConf(49.5 * COIN, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_GT(nMaxInputsPerTx, setCoinsRet.size());\n+\n+        // large tx 3:\n+        add_coin(50 * COIN);\n+        BOOST_CHECK(wallet.SelectCoinsMinConf(49.5 * COIN, 1, 1, vCoins, setCoinsRet, nValueRet));\n+        BOOST_CHECK_GT(nMaxInputsPerTx, setCoinsRet.size());\n+\n         // test with many inputs\n         for (CAmount amt=1500; amt < COIN; amt*=10) {\n              empty_wallet();"
      }
    ]
  }
]