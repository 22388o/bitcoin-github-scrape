[
  {
    "sha": "ad63e8bc7bc29e33494d375cccd4b00c3b44813e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDYzZThiYzdiYzI5ZTMzNDk0ZDM3NWNjY2Q0YjAwYzNiNDQ4MTNl",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2017-01-11T06:50:26Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2017-01-20T08:14:46Z"
      },
      "message": "Perform validation in a separate thread to message handling.",
      "tree": {
        "sha": "04c08197c4e05ad5ec592976dc8ff2bc686df519",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/04c08197c4e05ad5ec592976dc8ff2bc686df519"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad63e8bc7bc29e33494d375cccd4b00c3b44813e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIbBAABAgAGBQJYgcb2AAoJEJYWlWnKgEH5HwQP92Lfi4z89wvAZdlFYo2QFJsy\neUb0RLOf6i1BciIMNOMf1vwS/s1fUBiFn6g04n/eJai2sLsYS00PlKGSZy8bpTDI\nMzEvCsOJXu7DqjAbjNAi48LbpFqY2I/EhI/hyKK7zos0QvdAZuMHCrKYp2g9RLxT\neTJdir9Yn7m69KwkZ8+vReU0//Hd0+j4X/ELM4n2PsNWebQcS1101Vzq8mHcdAIG\nh/9P2E6WaJ72MICXuT2xVXYj9JqkPYUHIsoq4TjpkZXs127f7CyrvJPBOyTIRLYa\njtCuB243regDz+0b9FRqIDQtbdmIb8apQUBb9QYg1Baa8SRMkX5j4HibytjsQlrc\nIhMMQhg5TDv2pOWv31yAkRMUByepALbhtIRULzcny6SscsviKY3VmZXLQm/Ovv5a\nXvOGiZozO5dWCyh0doQBbPiTvHAJsy2LJ3FdHNqItiKBUdDIa6xHm46ZaM6VI5XA\nuX6DSsnuXBRv8Vs2AqK0RvQx9QDwhSFl4PyaR9ybtObHBxnBeZQ4zd/axc9dCqG6\nWmjPhXphbLWTw72hXd2HkBX16Y+h0q585iP+c4YzP0ZM47ExXS3E/XfRhkEfFBWG\nfGT3xI1KH9CrGG1lM+8mEybit86twQpSyGq+99pLlxUTVtpHV+Uer2Z+tX7mC3k3\nimfSMhNskJawCJDKLiM=\n=/6qG\n-----END PGP SIGNATURE-----",
        "payload": "tree 04c08197c4e05ad5ec592976dc8ff2bc686df519\nparent 6696b4635ceb9b47aaa63244bff9032fa7b08354\nauthor R E Broadley <rebroad+github@gmail.com> 1484117426 +0800\ncommitter R E Broadley <rebroad+github@gmail.com> 1484900086 +0800\n\nPerform validation in a separate thread to message handling.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad63e8bc7bc29e33494d375cccd4b00c3b44813e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad63e8bc7bc29e33494d375cccd4b00c3b44813e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6696b4635ceb9b47aaa63244bff9032fa7b08354",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6696b4635ceb9b47aaa63244bff9032fa7b08354",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6696b4635ceb9b47aaa63244bff9032fa7b08354"
      }
    ],
    "stats": {
      "total": 86,
      "additions": 76,
      "deletions": 10
    },
    "files": [
      {
        "sha": "fc2a6be8cc0fda3aa4c40e3255fb68bd63215676",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=ad63e8bc7bc29e33494d375cccd4b00c3b44813e",
        "patch": "@@ -150,6 +150,7 @@ BITCOIN_CORE_H = \\\n   utilmoneystr.h \\\n   utiltime.h \\\n   validation.h \\\n+  validation_thread.h \\\n   validationinterface.h \\\n   versionbits.h \\\n   wallet/coincontrol.h \\\n@@ -208,6 +209,7 @@ libbitcoin_server_a_SOURCES = \\\n   txmempool.cpp \\\n   ui_interface.cpp \\\n   validation.cpp \\\n+  validation_thread.cpp \\\n   validationinterface.cpp \\\n   versionbits.cpp \\\n   $(BITCOIN_CORE_H)"
      },
      {
        "sha": "f2be87e070c61ac41ed1432b9b49dfc0ea893ccd",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ad63e8bc7bc29e33494d375cccd4b00c3b44813e",
        "patch": "@@ -664,10 +664,12 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n     }\n \n     // scan for better chains in the block chain database, that are not yet connected in the active best chain\n-    CValidationState state;\n-    if (!ActivateBestChain(state, chainparams)) {\n-        LogPrintf(\"Failed to connect best block\");\n-        StartShutdown();\n+    if (chainActive.Tip() == NULL) {\n+        CValidationState state;\n+        if (!ActivateBestChain(state, chainparams)) {\n+            LogPrintf(\"Failed to connect best block\");\n+            StartShutdown();\n+        }\n     }\n \n     if (GetBoolArg(\"-stopafterblockimport\", DEFAULT_STOPAFTERBLOCKIMPORT)) {"
      },
      {
        "sha": "65275f5416a751026a3cf91b906d866bfed50a7e",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ad63e8bc7bc29e33494d375cccd4b00c3b44813e",
        "patch": "@@ -2194,6 +2194,9 @@ bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options c\n     // Process messages\n     threadMessageHandler = std::thread(&TraceThread<std::function<void()> >, \"msghand\", std::function<void()>(std::bind(&CConnman::ThreadMessageHandler, this)));\n \n+    // Validate blocks\n+    threadValidation = std::thread(&TraceThread<boost::function<void()> >, \"validate\", std::function<void()>(boost::bind(&CConnman::ThreadValidation, this)));\n+\n     // Dump network addresses\n     scheduler.scheduleEvery(boost::bind(&CConnman::DumpData, this), DUMP_ADDRESSES_INTERVAL);\n \n@@ -2233,6 +2236,8 @@ void CConnman::Interrupt()\n \n void CConnman::Stop()\n {\n+    if (threadValidation.joinable())\n+        threadValidation.join();\n     if (threadMessageHandler.joinable())\n         threadMessageHandler.join();\n     if (threadOpenConnections.joinable())"
      },
      {
        "sha": "8d25f41aa1c6b6aa73d3f927625f3645437ed0a8",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=ad63e8bc7bc29e33494d375cccd4b00c3b44813e",
        "patch": "@@ -342,6 +342,7 @@ class CConnman\n     void ProcessOneShot();\n     void ThreadOpenConnections();\n     void ThreadMessageHandler();\n+    void ThreadValidation();\n     void AcceptConnection(const ListenSocket& hListenSocket);\n     void ThreadSocketHandler();\n     void ThreadDNSAddressSeed();\n@@ -435,6 +436,8 @@ class CConnman\n \n     std::condition_variable condMsgProc;\n     std::mutex mutexMsgProc;\n+    std::condition_variable condValidation;\n+    std::mutex mutexValidation;\n     std::atomic<bool> flagInterruptMsgProc;\n \n     CThreadInterrupt interruptNet;\n@@ -444,6 +447,7 @@ class CConnman\n     std::thread threadOpenAddedConnections;\n     std::thread threadOpenConnections;\n     std::thread threadMessageHandler;\n+    std::thread threadValidation;\n };\n extern std::unique_ptr<CConnman> g_connman;\n void Discover(boost::thread_group& threadGroup);"
      },
      {
        "sha": "4b0e948bb7c40012e5be2ed1b2b080e7ca6c87ff",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=ad63e8bc7bc29e33494d375cccd4b00c3b44813e",
        "patch": "@@ -803,6 +803,7 @@ void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std:\n }\n \n void PeerLogicValidation::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n+    // This will now often run in the validate thread rather than the message handler thread.\n     const int nNewHeight = pindexNew->nHeight;\n     connman->SetBestHeight(nNewHeight);\n "
      },
      {
        "sha": "4431020fd41b01075033c2d50916d893ccc6c366",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=ad63e8bc7bc29e33494d375cccd4b00c3b44813e",
        "patch": "@@ -114,6 +114,7 @@ bool fLogTimestamps = DEFAULT_LOGTIMESTAMPS;\n bool fLogTimeMicros = DEFAULT_LOGTIMEMICROS;\n bool fLogIPs = DEFAULT_LOGIPS;\n std::atomic<bool> fReopenDebugLog(false);\n+std::atomic<bool> fActivatingChain(false);\n CTranslationInterface translationInterface;\n \n /** Init OpenSSL library multithreading support */"
      },
      {
        "sha": "c82f956c4e401bacb11c65d2b1248d3d53a7175d",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=ad63e8bc7bc29e33494d375cccd4b00c3b44813e",
        "patch": "@@ -50,6 +50,7 @@ extern bool fLogTimestamps;\n extern bool fLogTimeMicros;\n extern bool fLogIPs;\n extern std::atomic<bool> fReopenDebugLog;\n+extern std::atomic<bool> fActivatingChain; // True while activating the best chain\n extern CTranslationInterface translationInterface;\n \n extern const char * const BITCOIN_CONF_FILENAME;"
      },
      {
        "sha": "836b5ac0cb7472f691b84263ece6100dc0ed9fd6",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 6,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ad63e8bc7bc29e33494d375cccd4b00c3b44813e",
        "patch": "@@ -33,6 +33,7 @@\n #include \"utilmoneystr.h\"\n #include \"utilstrencodings.h\"\n #include \"validationinterface.h\"\n+#include \"validation_thread.h\"\n #include \"versionbits.h\"\n #include \"warnings.h\"\n \n@@ -2436,6 +2437,9 @@ bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams,\n     // us in the middle of ProcessNewBlock - do not assume pblock is set\n     // sanely for performance or correctness!\n \n+    if (fActivatingChain)\n+        return true;\n+    fActivatingChain = true;\n     CBlockIndex *pindexMostWork = NULL;\n     CBlockIndex *pindexNewTip = NULL;\n     do {\n@@ -2454,13 +2458,17 @@ bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams,\n             }\n \n             // Whether we have anything to do at all.\n-            if (pindexMostWork == NULL || pindexMostWork == chainActive.Tip())\n+            if (pindexMostWork == NULL || pindexMostWork == chainActive.Tip()) {\n+                fActivatingChain = false;\n                 return true;\n+            }\n \n             bool fInvalidFound = false;\n             std::shared_ptr<const CBlock> nullBlockPtr;\n-            if (!ActivateBestChainStep(state, chainparams, pindexMostWork, pblock && pblock->GetHash() == pindexMostWork->GetBlockHash() ? pblock : nullBlockPtr, fInvalidFound, connectTrace))\n+            if (!ActivateBestChainStep(state, chainparams, pindexMostWork, pblock && pblock->GetHash() == pindexMostWork->GetBlockHash() ? pblock : nullBlockPtr, fInvalidFound, connectTrace)) {\n+                fActivatingChain = false;\n                 return false;\n+            }\n \n             if (fInvalidFound) {\n                 // Wipe cache, we may need another branch now.\n@@ -2495,9 +2503,11 @@ bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams,\n \n     // Write changes periodically to disk, after relay.\n     if (!FlushStateToDisk(state, FLUSH_STATE_PERIODIC)) {\n+        fActivatingChain = false;\n         return false;\n     }\n \n+    fActivatingChain = false;\n     return true;\n }\n \n@@ -3177,13 +3187,19 @@ static bool AcceptBlock(const std::shared_ptr<const CBlock>& pblock, CValidation\n     return true;\n }\n \n+void FormBestChain() {\n+    CValidationState state;\n+    const CChainParams& chainparams = Params();\n+    ActivateBestChain(state, chainparams);\n+}\n+\n bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing, bool *fNewBlock)\n {\n+    CBlockIndex *pindex = NULL;\n     {\n         LOCK(cs_main);\n \n         // Store to disk\n-        CBlockIndex *pindex = NULL;\n         if (fNewBlock) *fNewBlock = false;\n         CValidationState state;\n         bool ret = AcceptBlock(pblock, state, chainparams, &pindex, fForceProcessing, NULL, fNewBlock);\n@@ -3196,9 +3212,15 @@ bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<cons\n \n     NotifyHeaderTip();\n \n-    CValidationState state; // Only used to report errors, not invalidity - ignore it\n-    if (!ActivateBestChain(state, chainparams, pblock))\n-        return error(\"%s: ActivateBestChain failed\", __func__);\n+    // If best header is within 6 blocks from our tip, activate best chain withtin the message handler thread to avoid the 100ms delay,\n+    // and to avoid breaking the miner tests.\n+    if (fActivatingChain || pindexBestHeader->nChainWork > chainActive.Tip()->nChainWork + GetBlockProof(*chainActive.Tip()) * 6)\n+        fActivateChain = true;\n+    else {\n+        CValidationState state; // Only used to report errors, not invalidity - ignore it\n+        if (!ActivateBestChain(state, chainparams, pblock))\n+            return error(\"%s: ActivateBestChain failed\", __func__);\n+    }\n \n     return true;\n }"
      },
      {
        "sha": "2b5755c1b7c5e6a649fd3814e787e2a26336b963",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=ad63e8bc7bc29e33494d375cccd4b00c3b44813e",
        "patch": "@@ -283,6 +283,7 @@ std::string GetWarnings(const std::string& strFor);\n bool GetTransaction(const uint256 &hash, CTransactionRef &tx, const Consensus::Params& params, uint256 &hashBlock, bool fAllowSlow = false);\n /** Find the best known block, and make it the tip of the block chain */\n bool ActivateBestChain(CValidationState& state, const CChainParams& chainparams, std::shared_ptr<const CBlock> pblock = std::shared_ptr<const CBlock>());\n+void FormBestChain();\n CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams);\n \n /** Guess verification progress (as a fraction between 0.0=genesis and 1.0=current tip). */"
      },
      {
        "sha": "b8eeafb615fc63ccd49f5f5d8e7f16e00db16a8d",
        "filename": "src/validation_thread.cpp",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/validation_thread.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/validation_thread.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation_thread.cpp?ref=ad63e8bc7bc29e33494d375cccd4b00c3b44813e",
        "patch": "@@ -0,0 +1,26 @@\n+#include \"chainparams.h\"\n+#include \"validation.h\"\n+#include \"validationinterface.h\"\n+#include \"net.h\"\n+\n+std::atomic<bool> fActivateChain(true);\n+\n+void CConnman::ThreadValidation()\n+{\n+    int nSleep;\n+    while (!flagInterruptMsgProc) {\n+        if (fActivateChain && !fActivatingChain) {\n+            fActivateChain = false;\n+            FormBestChain();\n+        }\n+        if (!pindexBestHeader || pindexBestHeader->nChainWork == chainActive.Tip()->nChainWork)\n+            nSleep = 1000;\n+        else\n+            nSleep = 100;\n+        if (!fActivateChain)\n+            MilliSleep(nSleep);\n+        else\n+            nSleep = 0;\n+    }\n+}\n+"
      },
      {
        "sha": "785c84b1a1e25b7190fe5d3c7c9a896768321a55",
        "filename": "src/validation_thread.h",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/validation_thread.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad63e8bc7bc29e33494d375cccd4b00c3b44813e/src/validation_thread.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation_thread.h?ref=ad63e8bc7bc29e33494d375cccd4b00c3b44813e",
        "patch": "@@ -0,0 +1 @@\n+extern std::atomic<bool> fActivateChain; // Set to true to trigger validation thread"
      }
    ]
  }
]