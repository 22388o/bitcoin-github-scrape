[
  {
    "sha": "e84843c0dbb9cb853b912c09858b01c5c9302b09",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODQ4NDNjMGRiYjljYjg1M2I5MTJjMDk4NThiMDFjNWM5MzAyYjA5",
    "commit": {
      "author": {
        "name": "Ross Nicoll",
        "email": "jrn@jrn.me.uk",
        "date": "2014-08-02T18:54:57Z"
      },
      "committer": {
        "name": "Ross Nicoll",
        "email": "jrn@jrn.me.uk",
        "date": "2014-08-30T08:39:59Z"
      },
      "message": "Broken addresses on command line no longer trigger testnet.\n\nWhen passing a bitcoin: URI on the command line, invalid addresses do not incorrectly send the\nuser to the test network.",
      "tree": {
        "sha": "da59bc29ef10f63bc53ccba2e392c4979f37d353",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da59bc29ef10f63bc53ccba2e392c4979f37d353"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e84843c0dbb9cb853b912c09858b01c5c9302b09",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e84843c0dbb9cb853b912c09858b01c5c9302b09",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e84843c0dbb9cb853b912c09858b01c5c9302b09",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e84843c0dbb9cb853b912c09858b01c5c9302b09/comments",
    "author": {
      "login": "rnicoll",
      "id": 3513077,
      "node_id": "MDQ6VXNlcjM1MTMwNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3513077?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rnicoll",
      "html_url": "https://github.com/rnicoll",
      "followers_url": "https://api.github.com/users/rnicoll/followers",
      "following_url": "https://api.github.com/users/rnicoll/following{/other_user}",
      "gists_url": "https://api.github.com/users/rnicoll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rnicoll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rnicoll/subscriptions",
      "organizations_url": "https://api.github.com/users/rnicoll/orgs",
      "repos_url": "https://api.github.com/users/rnicoll/repos",
      "events_url": "https://api.github.com/users/rnicoll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rnicoll/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rnicoll",
      "id": 3513077,
      "node_id": "MDQ6VXNlcjM1MTMwNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3513077?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rnicoll",
      "html_url": "https://github.com/rnicoll",
      "followers_url": "https://api.github.com/users/rnicoll/followers",
      "following_url": "https://api.github.com/users/rnicoll/following{/other_user}",
      "gists_url": "https://api.github.com/users/rnicoll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rnicoll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rnicoll/subscriptions",
      "organizations_url": "https://api.github.com/users/rnicoll/orgs",
      "repos_url": "https://api.github.com/users/rnicoll/repos",
      "events_url": "https://api.github.com/users/rnicoll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rnicoll/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d26dc3b2973252cc4dbe0f46edb56bfcea1cb78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d26dc3b2973252cc4dbe0f46edb56bfcea1cb78",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d26dc3b2973252cc4dbe0f46edb56bfcea1cb78"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 26,
      "deletions": 13
    },
    "files": [
      {
        "sha": "76f0404a184dd249666844feed022a1896ca8253",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e84843c0dbb9cb853b912c09858b01c5c9302b09/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e84843c0dbb9cb853b912c09858b01c5c9302b09/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=e84843c0dbb9cb853b912c09858b01c5c9302b09",
        "patch": "@@ -215,9 +215,13 @@ bool CBitcoinAddress::Set(const CTxDestination &dest) {\n }\n \n bool CBitcoinAddress::IsValid() const {\n+    return IsValid(Params());\n+}\n+\n+bool CBitcoinAddress::IsValid(const CChainParams &params) const {\n     bool fCorrectSize = vchData.size() == 20;\n-    bool fKnownVersion = vchVersion == Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS) ||\n-                         vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n+    bool fKnownVersion = vchVersion == params.Base58Prefix(CChainParams::PUBKEY_ADDRESS) ||\n+                         vchVersion == params.Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n     return fCorrectSize && fKnownVersion;\n }\n "
      },
      {
        "sha": "0f11f7c6d396576ab295870a64ae397be6dfda80",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e84843c0dbb9cb853b912c09858b01c5c9302b09/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e84843c0dbb9cb853b912c09858b01c5c9302b09/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=e84843c0dbb9cb853b912c09858b01c5c9302b09",
        "patch": "@@ -104,6 +104,7 @@ class CBitcoinAddress : public CBase58Data {\n     bool Set(const CScriptID &id);\n     bool Set(const CTxDestination &dest);\n     bool IsValid() const;\n+    bool IsValid(const CChainParams &params) const;\n \n     CBitcoinAddress() {}\n     CBitcoinAddress(const CTxDestination &dest) { Set(dest); }"
      },
      {
        "sha": "84cfd11feb579beab50d4e528d5c66984c10978c",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e84843c0dbb9cb853b912c09858b01c5c9302b09/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e84843c0dbb9cb853b912c09858b01c5c9302b09/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=e84843c0dbb9cb853b912c09858b01c5c9302b09",
        "patch": "@@ -220,24 +220,25 @@ const CChainParams &Params() {\n     return *pCurrentParams;\n }\n \n-void SelectParams(CBaseChainParams::Network network) {\n-    SelectBaseParams(network);\n+CChainParams &Params(CBaseChainParams::Network network) {\n     switch (network) {\n         case CBaseChainParams::MAIN:\n-            pCurrentParams = &mainParams;\n-            break;\n+            return mainParams;\n         case CBaseChainParams::TESTNET:\n-            pCurrentParams = &testNetParams;\n-            break;\n+            return testNetParams;\n         case CBaseChainParams::REGTEST:\n-            pCurrentParams = &regTestParams;\n-            break;\n+            return regTestParams;\n         default:\n             assert(false && \"Unimplemented network\");\n-            return;\n+            return mainParams;\n     }\n }\n \n+void SelectParams(CBaseChainParams::Network network) {\n+    SelectBaseParams(network);\n+    pCurrentParams = &Params(network);\n+}\n+\n bool SelectParamsFromCommandLine() {\n     if (!SelectBaseParamsFromCommandLine())\n         return false;"
      },
      {
        "sha": "34aaf1fb4767bec3c9db080db330e02a952e1b34",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e84843c0dbb9cb853b912c09858b01c5c9302b09/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e84843c0dbb9cb853b912c09858b01c5c9302b09/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=e84843c0dbb9cb853b912c09858b01c5c9302b09",
        "patch": "@@ -111,6 +111,9 @@ class CChainParams\n  */\n const CChainParams &Params();\n \n+/** Return parameters for the given network. */\n+CChainParams &Params(CBaseChainParams::Network network);\n+\n /** Sets the params returned by Params() to those for the given network. */\n void SelectParams(CBaseChainParams::Network network);\n "
      },
      {
        "sha": "3360dd36eb150d569fc0b2ac6c6905caf7501b69",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e84843c0dbb9cb853b912c09858b01c5c9302b09/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e84843c0dbb9cb853b912c09858b01c5c9302b09/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=e84843c0dbb9cb853b912c09858b01c5c9302b09",
        "patch": "@@ -10,6 +10,7 @@\n #include \"optionsmodel.h\"\n \n #include \"base58.h\"\n+#include \"chainparams.h\"\n #include \"ui_interface.h\"\n #include \"wallet.h\"\n \n@@ -199,8 +200,11 @@ bool PaymentServer::ipcParseCommandLine(int argc, char* argv[])\n             {\n                 CBitcoinAddress address(r.address.toStdString());\n \n-                SelectParams(CBaseChainParams::MAIN);\n-                if (!address.IsValid())\n+                if (address.IsValid(Params(CBaseChainParams::MAIN)))\n+                {\n+                    SelectParams(CBaseChainParams::MAIN);\n+                }\n+                else if (address.IsValid(Params(CBaseChainParams::TESTNET)))\n                 {\n                     SelectParams(CBaseChainParams::TESTNET);\n                 }"
      }
    ]
  }
]