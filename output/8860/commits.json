[
  {
    "sha": "fa7c35c4ec630838178b4674288da33561a66f08",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTdjMzVjNGVjNjMwODM4MTc4YjQ2NzQyODhkYTMzNTYxYTY2ZjA4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-10-01T19:07:31Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-10-02T09:16:44Z"
      },
      "message": "[qa] util: Move wait_bitcoinds() into stop_nodes()",
      "tree": {
        "sha": "faf4539ae38778a4d6ca5bc2d39efb8685d1e653",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/faf4539ae38778a4d6ca5bc2d39efb8685d1e653"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa7c35c4ec630838178b4674288da33561a66f08",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7c35c4ec630838178b4674288da33561a66f08",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7c35c4ec630838178b4674288da33561a66f08",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7c35c4ec630838178b4674288da33561a66f08/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6faffb8a83db3f209a303a4464dbdd597faad5a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6faffb8a83db3f209a303a4464dbdd597faad5a4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6faffb8a83db3f209a303a4464dbdd597faad5a4"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 12,
      "deletions": 23
    },
    "files": [
      {
        "sha": "be6ddde112ea280040b531dc9a526e24089e4dde",
        "filename": "qa/rpc-tests/bip9-softforks.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7c35c4ec630838178b4674288da33561a66f08/qa/rpc-tests/bip9-softforks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7c35c4ec630838178b4674288da33561a66f08/qa/rpc-tests/bip9-softforks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip9-softforks.py?ref=fa7c35c4ec630838178b4674288da33561a66f08",
        "patch": "@@ -195,7 +195,6 @@ def test_BIP(self, bipName, activated_version, invalidate, invalidatePostSignatu\n         # Restart all\n         self.test.block_store.close()\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n         shutil.rmtree(self.options.tmpdir)\n         self.setup_chain()\n         self.setup_network()"
      },
      {
        "sha": "8c45578fcfbddba93cb38ff66c11a75825228f4b",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7c35c4ec630838178b4674288da33561a66f08/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7c35c4ec630838178b4674288da33561a66f08/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=fa7c35c4ec630838178b4674288da33561a66f08",
        "patch": "@@ -470,7 +470,6 @@ def run_test(self):\n         self.nodes[1].encryptwallet(\"test\")\n         self.nodes.pop(1)\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n \n         self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n         # This test is not meant to test fee estimation and we'd like"
      },
      {
        "sha": "fc3eddddee17b18fe93b396f0d3f91ea43efa1e5",
        "filename": "qa/rpc-tests/p2p-versionbits-warning.py",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7c35c4ec630838178b4674288da33561a66f08/qa/rpc-tests/p2p-versionbits-warning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7c35c4ec630838178b4674288da33561a66f08/qa/rpc-tests/p2p-versionbits-warning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-versionbits-warning.py?ref=fa7c35c4ec630838178b4674288da33561a66f08",
        "patch": "@@ -144,8 +144,7 @@ def run_test(self):\n         # is cleared, and restart the node. This should move the versionbit state\n         # to ACTIVE.\n         self.nodes[0].generate(VB_PERIOD)\n-        stop_node(self.nodes[0], 0)\n-        wait_bitcoinds()\n+        stop_nodes(self.nodes)\n         # Empty out the alert file\n         with open(self.alert_filename, 'w', encoding='utf8') as _:\n             pass\n@@ -156,8 +155,7 @@ def run_test(self):\n         assert(WARN_UNKNOWN_RULES_ACTIVE in self.nodes[0].getinfo()[\"errors\"])\n         assert(WARN_UNKNOWN_RULES_ACTIVE in self.nodes[0].getmininginfo()[\"errors\"])\n         assert(WARN_UNKNOWN_RULES_ACTIVE in self.nodes[0].getnetworkinfo()[\"warnings\"])\n-        stop_node(self.nodes[0], 0)\n-        wait_bitcoinds()\n+        stop_nodes(self.nodes)\n         self.test_versionbits_in_alert_file()\n \n         # Test framework expects the node to still be running..."
      },
      {
        "sha": "25cf4c1679b984b86d261b67eb66127a09b3abe1",
        "filename": "qa/rpc-tests/reindex.py",
        "status": "modified",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7c35c4ec630838178b4674288da33561a66f08/qa/rpc-tests/reindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7c35c4ec630838178b4674288da33561a66f08/qa/rpc-tests/reindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/reindex.py?ref=fa7c35c4ec630838178b4674288da33561a66f08",
        "patch": "@@ -7,7 +7,11 @@\n # Test -reindex and -reindex-chainstate with CheckBlockIndex\n #\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (\n+    start_nodes,\n+    stop_nodes,\n+    assert_equal,\n+)\n import time\n \n class ReindexTest(BitcoinTestFramework):\n@@ -18,16 +22,14 @@ def __init__(self):\n         self.num_nodes = 1\n \n     def setup_network(self):\n-        self.nodes = []\n-        self.is_network_split = False\n-        self.nodes.append(start_node(0, self.options.tmpdir))\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n \n     def reindex(self, justchainstate=False):\n         self.nodes[0].generate(3)\n         blockcount = self.nodes[0].getblockcount()\n-        stop_node(self.nodes[0], 0)\n-        wait_bitcoinds()\n-        self.nodes[0]=start_node(0, self.options.tmpdir, [\"-debug\", \"-reindex-chainstate\" if justchainstate else \"-reindex\", \"-checkblockindex=1\"])\n+        stop_nodes(self.nodes)\n+        extra_args = [[\"-debug\", \"-reindex-chainstate\" if justchainstate else \"-reindex\", \"-checkblockindex=1\"]]\n+        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir, extra_args)\n         while self.nodes[0].getblockcount() < blockcount:\n             time.sleep(0.1)\n         assert_equal(self.nodes[0].getblockcount(), blockcount)"
      },
      {
        "sha": "d78d0b884e9ed97347ff5e7729a9a7c2d81b3bd4",
        "filename": "qa/rpc-tests/rpcbind_test.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7c35c4ec630838178b4674288da33561a66f08/qa/rpc-tests/rpcbind_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7c35c4ec630838178b4674288da33561a66f08/qa/rpc-tests/rpcbind_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcbind_test.py?ref=fa7c35c4ec630838178b4674288da33561a66f08",
        "patch": "@@ -40,7 +40,6 @@ def run_bind_test(self, allow_ips, connect_to, addresses, expected):\n             assert_equal(set(get_bind_addrs(pid)), set(expected))\n         finally:\n             stop_nodes(self.nodes)\n-            wait_bitcoinds()\n \n     def run_allowip_test(self, allow_ips, rpchost, rpcport):\n         '''\n@@ -56,7 +55,6 @@ def run_allowip_test(self, allow_ips, rpchost, rpcport):\n         finally:\n             node = None # make sure connection will be garbage collected and closed\n             stop_nodes(self.nodes)\n-            wait_bitcoinds()\n \n     def run_test(self):\n         # due to OS-specific network stats queries, this test works only on Linux"
      },
      {
        "sha": "e6fc5fd8a20e48683352f611a1bdc6d60e375066",
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7c35c4ec630838178b4674288da33561a66f08/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7c35c4ec630838178b4674288da33561a66f08/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=fa7c35c4ec630838178b4674288da33561a66f08",
        "patch": "@@ -21,7 +21,6 @@\n     sync_mempools,\n     stop_nodes,\n     stop_node,\n-    wait_bitcoinds,\n     enable_coverage,\n     check_json_precision,\n     initialize_chain_clean,\n@@ -81,7 +80,6 @@ def split_network(self):\n         \"\"\"\n         assert not self.is_network_split\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n         self.setup_network(True)\n \n     def sync_all(self):\n@@ -100,7 +98,6 @@ def join_network(self):\n         \"\"\"\n         assert self.is_network_split\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n         self.setup_network(False)\n \n     def main(self):\n@@ -170,7 +167,6 @@ def main(self):\n         if not self.options.noshutdown:\n             print(\"Stopping nodes\")\n             stop_nodes(self.nodes)\n-            wait_bitcoinds()\n         else:\n             print(\"Note: bitcoinds were not stopped and may still be running\")\n "
      },
      {
        "sha": "c6b0367b419d6c73d2a3770c74f87dcb19075f35",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7c35c4ec630838178b4674288da33561a66f08/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7c35c4ec630838178b4674288da33561a66f08/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=fa7c35c4ec630838178b4674288da33561a66f08",
        "patch": "@@ -266,7 +266,6 @@ def initialize_chain(test_dir, num_nodes, cachedir):\n \n         # Shut them down, and clean up cache directories:\n         stop_nodes(rpcs)\n-        wait_bitcoinds()\n         disable_mocktime()\n         for i in range(MAX_NODES):\n             os.remove(log_filename(cachedir, i, \"debug.log\"))\n@@ -365,6 +364,7 @@ def stop_nodes(nodes):\n         except http.client.CannotSendRequest as e:\n             print(\"WARN: Unable to stop node: \" + repr(e))\n     del nodes[:] # Emptying array closes connections as a side effect\n+    wait_bitcoinds()\n \n def set_node_times(nodes, t):\n     for node in nodes:"
      },
      {
        "sha": "e43f6ea5d225ee2b8276412e27221f68ea8f59f8",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7c35c4ec630838178b4674288da33561a66f08/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7c35c4ec630838178b4674288da33561a66f08/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=fa7c35c4ec630838178b4674288da33561a66f08",
        "patch": "@@ -199,7 +199,6 @@ def run_test (self):\n \n         #do some -walletbroadcast tests\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n         self.nodes = start_nodes(3, self.options.tmpdir, [[\"-walletbroadcast=0\"],[\"-walletbroadcast=0\"],[\"-walletbroadcast=0\"]])\n         connect_nodes_bi(self.nodes,0,1)\n         connect_nodes_bi(self.nodes,1,2)\n@@ -225,7 +224,6 @@ def run_test (self):\n \n         #restart the nodes with -walletbroadcast=1\n         stop_nodes(self.nodes)\n-        wait_bitcoinds()\n         self.nodes = start_nodes(3, self.options.tmpdir)\n         connect_nodes_bi(self.nodes,0,1)\n         connect_nodes_bi(self.nodes,1,2)\n@@ -335,7 +333,6 @@ def run_test (self):\n         for m in maintenance:\n             print(\"check \" + m)\n             stop_nodes(self.nodes)\n-            wait_bitcoinds()\n             self.nodes = start_nodes(3, self.options.tmpdir, [[m]] * 3)\n             while m == '-reindex' and [block_count] * 3 != [self.nodes[i].getblockcount() for i in range(3)]:\n                 # reindex will leave rpc warm up \"early\"; Wait for it to finish"
      }
    ]
  }
]