[
  {
    "sha": "fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTkxOTk0YjFiOWI2ZGEzYmIyYTJmNzIyZDkyNTFkN2QwZjIxNjdl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-03T11:39:42Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-16T09:34:27Z"
      },
      "message": "fuzz: Add utxo_snapshot target",
      "tree": {
        "sha": "1c79c7d6e26a4088973ba6104d5c0883895f9818",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c79c7d6e26a4088973ba6104d5c0883895f9818"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhSBAv+PxORp5QClvTQFdljZ8jRqHnvEs4goLmaKkZ/RV7TiX/BAsQzl9uPk4fi\nyvdK2tgu7UWjkCq5+qIJCqX+kjRkChFMIFzuTMs0S5LXCh4fpUbAM+jebPljVQuJ\n2IQq3ZTFVfGuwAAc1MapYpfDkDWIfkzePhlkBb+BjJw3zqQDmHaFDaU7OBNydN+O\ntu88/M/wZrwOV+U5uCUZTCakyF/gOHt4LEkgsgFp7+PWJvG9inyEywrkoFNeuZSz\nxLsZN1dV0NsStQqLic66ibBP6uhUcxHEXAhvOo8KNH7wpcms+9epABBKvCTvtp8o\nvs3nUPdFGidR+CbSy2x7g7a4Rx9/AVjmObI0XXA5D+VcPh4Mj6WygnGd4vvEZ9N9\ncGAq7LTIeAadRZpB+Uc3DssBRTZht/zKqGbzHAIpQxez+xlwVmA2znrmSgDcfKiT\nIUjEI53vDDg09cL6nd7Ir9SQL2GEGzr9adi3JT+lmAgoBpQrDepDWSdDPMwDGp2L\nN90qKTad\n=TQCm\n-----END PGP SIGNATURE-----",
        "payload": "tree 1c79c7d6e26a4088973ba6104d5c0883895f9818\nparent c8571486364d6e9ca8c86bd1c81e230ca64f8904\nauthor MarcoFalke <falke.marco@gmail.com> 1617449982 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1621157667 +0200\n\nfuzz: Add utxo_snapshot target\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c8571486364d6e9ca8c86bd1c81e230ca64f8904",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8571486364d6e9ca8c86bd1c81e230ca64f8904",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c8571486364d6e9ca8c86bd1c81e230ca64f8904"
      }
    ],
    "stats": {
      "total": 138,
      "additions": 132,
      "deletions": 6
    },
    "files": [
      {
        "sha": "dc79ea3125a0e66f8292a791c66b349051498292",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e",
        "patch": "@@ -303,6 +303,7 @@ test_fuzz_fuzz_SOURCES = \\\n  test/fuzz/tx_out.cpp \\\n  test/fuzz/tx_pool.cpp \\\n  test/fuzz/txrequest.cpp \\\n+ test/fuzz/utxo_snapshot.cpp \\\n  test/fuzz/validation_load_mempool.cpp \\\n  test/fuzz/versionbits.cpp\n endif # ENABLE_FUZZ_BINARY"
      },
      {
        "sha": "1b71c4db4304c1c93ac645b96c7dd2e0f730149a",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e",
        "patch": "@@ -454,8 +454,8 @@ class CRegTestParams : public CChainParams {\n                 {AssumeutxoHash{uint256S(\"0x1ebbf5850204c0bdb15bf030f47c7fe91d45c44c712697e4509ba67adb01c618\")}, 110},\n             },\n             {\n-                210,\n-                {AssumeutxoHash{uint256S(\"0x9c5ed99ef98544b34f8920b6d1802f72ac28ae6e2bd2bd4c316ff10c230df3f2\")}, 210},\n+                200,\n+                {AssumeutxoHash{uint256S(\"0x51c8d11d8b5c1de51543c579736e786aa2736206d1e11e627568029ce092cf62\")}, 200},\n             },\n         };\n "
      },
      {
        "sha": "0b42282b34c8e62df16d516c0ccb01387a73fc0d",
        "filename": "src/test/fuzz/utxo_snapshot.cpp",
        "status": "added",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e/src/test/fuzz/utxo_snapshot.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e/src/test/fuzz/utxo_snapshot.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/utxo_snapshot.cpp?ref=fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e",
        "patch": "@@ -0,0 +1,87 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <consensus/validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+namespace {\n+\n+const std::vector<std::shared_ptr<CBlock>>* g_chain;\n+\n+void initialize_chain()\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::REGTEST)};\n+    static const auto chain{CreateBlockChain(2 * COINBASE_MATURITY, *params)};\n+    g_chain = &chain;\n+}\n+\n+FUZZ_TARGET_INIT(utxo_snapshot, initialize_chain)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    std::unique_ptr<const TestingSetup> setup{MakeNoLogFileContext<const TestingSetup>()};\n+    const auto& node = setup->m_node;\n+    auto& chainman{*node.chainman};\n+\n+    const auto snapshot_path = GetDataDir() / \"fuzzed_snapshot.dat\";\n+\n+    Assert(!chainman.SnapshotBlockhash());\n+\n+    {\n+        CAutoFile outfile{fsbridge::fopen(snapshot_path, \"wb\"), SER_DISK, CLIENT_VERSION};\n+        const auto file_data{ConsumeRandomLengthByteVector(fuzzed_data_provider)};\n+        outfile << Span<const uint8_t>{file_data};\n+    }\n+\n+    const auto ActivateFuzzedSnapshot{[&] {\n+        CAutoFile infile{fsbridge::fopen(snapshot_path, \"rb\"), SER_DISK, CLIENT_VERSION};\n+        SnapshotMetadata metadata;\n+        try {\n+            infile >> metadata;\n+        } catch (const std::ios_base::failure&) {\n+            return false;\n+        }\n+        return chainman.ActivateSnapshot(infile, metadata, /* in_memory */ true);\n+    }};\n+\n+    if (fuzzed_data_provider.ConsumeBool()) {\n+        for (const auto& block : *g_chain) {\n+            BlockValidationState dummy;\n+            bool processed{chainman.ProcessNewBlockHeaders({*block}, dummy, ::Params())};\n+            Assert(processed);\n+            const auto* index{WITH_LOCK(::cs_main, return chainman.m_blockman.LookupBlockIndex(block->GetHash()))};\n+            Assert(index);\n+        }\n+    }\n+\n+    if (ActivateFuzzedSnapshot()) {\n+        LOCK(::cs_main);\n+        Assert(!chainman.ActiveChainstate().m_from_snapshot_blockhash->IsNull());\n+        Assert(*chainman.ActiveChainstate().m_from_snapshot_blockhash ==\n+               *chainman.SnapshotBlockhash());\n+        const auto& coinscache{chainman.ActiveChainstate().CoinsTip()};\n+        int64_t chain_tx{};\n+        for (const auto& block : *g_chain) {\n+            Assert(coinscache.HaveCoin(COutPoint{block->vtx.at(0)->GetHash(), 0}));\n+            const auto* index{chainman.m_blockman.LookupBlockIndex(block->GetHash())};\n+            const auto num_tx{Assert(index)->nTx};\n+            Assert(num_tx == 1);\n+            chain_tx += num_tx;\n+        }\n+        Assert(g_chain->size() == coinscache.GetCacheSize());\n+        Assert(chain_tx == chainman.ActiveTip()->nChainTx);\n+    } else {\n+        Assert(!chainman.SnapshotBlockhash());\n+        Assert(!chainman.ActiveChainstate().m_from_snapshot_blockhash);\n+    }\n+    // Snapshot should refuse to load a second time regardless of validity\n+    Assert(!ActivateFuzzedSnapshot());\n+}\n+} // namespace"
      },
      {
        "sha": "12048738284254f904c6893b9d785febbd4e08c1",
        "filename": "src/test/util/mining.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e/src/test/util/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e/src/test/util/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/mining.cpp?ref=fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e",
        "patch": "@@ -11,8 +11,10 @@\n #include <node/context.h>\n #include <pow.h>\n #include <script/standard.h>\n+#include <test/util/script.h>\n #include <util/check.h>\n #include <validation.h>\n+#include <versionbits.h>\n \n CTxIn generatetoaddress(const NodeContext& node, const std::string& address)\n {\n@@ -23,6 +25,37 @@ CTxIn generatetoaddress(const NodeContext& node, const std::string& address)\n     return MineBlock(node, coinbase_script);\n }\n \n+std::vector<std::shared_ptr<CBlock>> CreateBlockChain(size_t total_height, const CChainParams& params)\n+{\n+    std::vector<std::shared_ptr<CBlock>> ret{total_height};\n+    auto time{params.GenesisBlock().nTime};\n+    for (size_t height{0}; height < total_height; ++height) {\n+        CBlock& block{*(ret.at(height) = std::make_shared<CBlock>())};\n+\n+        CMutableTransaction coinbase_tx;\n+        coinbase_tx.vin.resize(1);\n+        coinbase_tx.vin[0].prevout.SetNull();\n+        coinbase_tx.vout.resize(1);\n+        coinbase_tx.vout[0].scriptPubKey = P2WSH_OP_TRUE;\n+        coinbase_tx.vout[0].nValue = GetBlockSubsidy(height + 1, params.GetConsensus());\n+        coinbase_tx.vin[0].scriptSig = CScript() << (height + 1) << OP_0;\n+        block.vtx = {MakeTransactionRef(std::move(coinbase_tx))};\n+\n+        block.nVersion = VERSIONBITS_LAST_OLD_BLOCK_VERSION;\n+        block.hashPrevBlock = (height >= 1 ? *ret.at(height - 1) : params.GenesisBlock()).GetHash();\n+        block.hashMerkleRoot = BlockMerkleRoot(block);\n+        block.nTime = ++time;\n+        block.nBits = params.GenesisBlock().nBits;\n+        block.nNonce = 0;\n+\n+        while (!CheckProofOfWork(block.GetHash(), block.nBits, params.GetConsensus())) {\n+            ++block.nNonce;\n+            assert(block.nNonce);\n+        }\n+    }\n+    return ret;\n+}\n+\n CTxIn MineBlock(const NodeContext& node, const CScript& coinbase_scriptPubKey)\n {\n     auto block = PrepareBlock(node, coinbase_scriptPubKey);"
      },
      {
        "sha": "1fc1864b918d4f044bfc924c7cc85f41e3eb149c",
        "filename": "src/test/util/mining.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e/src/test/util/mining.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e/src/test/util/mining.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/mining.h?ref=fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e",
        "patch": "@@ -7,12 +7,17 @@\n \n #include <memory>\n #include <string>\n+#include <vector>\n \n class CBlock;\n+class CChainParams;\n class CScript;\n class CTxIn;\n struct NodeContext;\n \n+/** Create a blockchain, starting from genesis */\n+std::vector<std::shared_ptr<CBlock>> CreateBlockChain(size_t total_height, const CChainParams& params);\n+\n /** Returns the generated coin */\n CTxIn MineBlock(const NodeContext&, const CScript& coinbase_scriptPubKey);\n "
      },
      {
        "sha": "a0c2e76f006424d119620d98d90c4377e5052a66",
        "filename": "src/test/validation_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e/src/test/validation_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e/src/test/validation_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_tests.cpp?ref=fa91994b1b9b6da3bb2a2f722d9251d7d0f2167e",
        "patch": "@@ -136,11 +136,11 @@ BOOST_AUTO_TEST_CASE(test_assumeutxo)\n \n     const auto out110 = *ExpectedAssumeutxo(110, *params);\n     BOOST_CHECK_EQUAL(out110.hash_serialized.ToString(), \"1ebbf5850204c0bdb15bf030f47c7fe91d45c44c712697e4509ba67adb01c618\");\n-    BOOST_CHECK_EQUAL(out110.nChainTx, (unsigned int)110);\n+    BOOST_CHECK_EQUAL(out110.nChainTx, 110U);\n \n-    const auto out210 = *ExpectedAssumeutxo(210, *params);\n-    BOOST_CHECK_EQUAL(out210.hash_serialized.ToString(), \"9c5ed99ef98544b34f8920b6d1802f72ac28ae6e2bd2bd4c316ff10c230df3f2\");\n-    BOOST_CHECK_EQUAL(out210.nChainTx, (unsigned int)210);\n+    const auto out210 = *ExpectedAssumeutxo(200, *params);\n+    BOOST_CHECK_EQUAL(out210.hash_serialized.ToString(), \"51c8d11d8b5c1de51543c579736e786aa2736206d1e11e627568029ce092cf62\");\n+    BOOST_CHECK_EQUAL(out210.nChainTx, 200U);\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]