[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777087249",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#issuecomment-777087249",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21144",
    "id": 777087249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzA4NzI0OQ==",
    "user": {
      "login": "danben",
      "id": 253639,
      "node_id": "MDQ6VXNlcjI1MzYzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/253639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danben",
      "html_url": "https://github.com/danben",
      "followers_url": "https://api.github.com/users/danben/followers",
      "following_url": "https://api.github.com/users/danben/following{/other_user}",
      "gists_url": "https://api.github.com/users/danben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danben/subscriptions",
      "organizations_url": "https://api.github.com/users/danben/orgs",
      "repos_url": "https://api.github.com/users/danben/repos",
      "events_url": "https://api.github.com/users/danben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danben/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-10T22:48:22Z",
    "updated_at": "2021-02-19T16:20:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm still very new to the codebase so I'm sure I did lots of things suboptimally, but this should be a decent starting point. \r\n\r\nThanks for reviewing!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777087249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777219957",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#issuecomment-777219957",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21144",
    "id": 777219957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzIxOTk1Nw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-11T05:58:00Z",
    "updated_at": "2021-03-09T06:40:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21390 (test: Test improvements for UTXO set hash tests by fjahr)\n* #21178 (test: run mempool_reorg.py even with wallet disabled by DariusParvin)\n* #21014 (test: Run mempool_accept.py even with wallet disabled by stackman27)\n* #20889 (test: ensure any failing method in MiniWallet leaves no side-effects by mjdietzx)\n* #20874 (test: Run mempool_limit.py even with wallet disabled by stackman27)\n* #20808 (test: Run rpc_generateblock.py even with wallet disabled by nginocchio)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777219957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/808071530",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#issuecomment-808071530",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21144",
    "id": 808071530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwODA3MTUzMA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-26T09:33:46Z",
    "updated_at": "2021-03-26T09:33:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n\ud83d\udc19 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/808071530/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/906567426",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#issuecomment-906567426",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21144",
    "id": 906567426,
    "node_id": "IC_kwDOABII5842CR8C",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-26T16:36:52Z",
    "updated_at": "2021-08-26T16:36:52Z",
    "author_association": "MEMBER",
    "body": "Marked up for grabs, because it still needs rebase",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/906567426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576278194",
    "pull_request_review_id": 590584587,
    "id": 576278194,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjI3ODE5NA==",
    "diff_hunk": "@@ -38,13 +40,15 @@ def set_test_params(self):\n         ]\n \n     def skip_test_if_missing_module(self):",
    "path": "test/functional/feature_bip68_sequence.py",
    "position": null,
    "original_position": 27,
    "commit_id": "520e7799b556807c818eb05b5380c389a470ae3b",
    "original_commit_id": "e89ee566b7d99075c8e594b50ea8fbf721b7ce4b",
    "user": {
      "login": "stackman27",
      "id": 26356227,
      "node_id": "MDQ6VXNlcjI2MzU2MjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stackman27",
      "html_url": "https://github.com/stackman27",
      "followers_url": "https://api.github.com/users/stackman27/followers",
      "following_url": "https://api.github.com/users/stackman27/following{/other_user}",
      "gists_url": "https://api.github.com/users/stackman27/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
      "organizations_url": "https://api.github.com/users/stackman27/orgs",
      "repos_url": "https://api.github.com/users/stackman27/repos",
      "events_url": "https://api.github.com/users/stackman27/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stackman27/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No need for this method. You can just remove it",
    "created_at": "2021-02-15T15:40:56Z",
    "updated_at": "2021-02-19T16:15:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576278194",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576278194"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576278194"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576278194/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 42,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576306695",
    "pull_request_review_id": 590584587,
    "id": 576306695,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjMwNjY5NQ==",
    "diff_hunk": "@@ -32,14 +32,39 @@ def __init__(self, test_node):\n         self._address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n         self._scriptPubKey = hex_str_to_bytes(self._test_node.validateaddress(self._address)['scriptPubKey'])\n \n+    def num_utxos(self):",
    "path": "test/functional/test_framework/wallet.py",
    "position": null,
    "original_position": 4,
    "commit_id": "520e7799b556807c818eb05b5380c389a470ae3b",
    "original_commit_id": "e89ee566b7d99075c8e594b50ea8fbf721b7ce4b",
    "user": {
      "login": "stackman27",
      "id": 26356227,
      "node_id": "MDQ6VXNlcjI2MzU2MjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stackman27",
      "html_url": "https://github.com/stackman27",
      "followers_url": "https://api.github.com/users/stackman27/followers",
      "following_url": "https://api.github.com/users/stackman27/following{/other_user}",
      "gists_url": "https://api.github.com/users/stackman27/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
      "organizations_url": "https://api.github.com/users/stackman27/orgs",
      "repos_url": "https://api.github.com/users/stackman27/repos",
      "events_url": "https://api.github.com/users/stackman27/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stackman27/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This method hasn't been used elsewhere. Is there a need for it?",
    "created_at": "2021-02-15T16:26:54Z",
    "updated_at": "2021-02-19T16:15:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576306695",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576306695"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576306695"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576306695/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 35,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576316154",
    "pull_request_review_id": 590584587,
    "id": 576316154,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjMxNjE1NA==",
    "diff_hunk": "@@ -55,25 +80,41 @@ def get_utxo(self, *, txid=''):\n             index = self._utxos.index(utxo)\n         return self._utxos.pop(index)\n \n-    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None):\n+    def get_utxos(self, amount):",
    "path": "test/functional/test_framework/wallet.py",
    "position": 38,
    "original_position": 46,
    "commit_id": "520e7799b556807c818eb05b5380c389a470ae3b",
    "original_commit_id": "e89ee566b7d99075c8e594b50ea8fbf721b7ce4b",
    "user": {
      "login": "stackman27",
      "id": 26356227,
      "node_id": "MDQ6VXNlcjI2MzU2MjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stackman27",
      "html_url": "https://github.com/stackman27",
      "followers_url": "https://api.github.com/users/stackman27/followers",
      "following_url": "https://api.github.com/users/stackman27/following{/other_user}",
      "gists_url": "https://api.github.com/users/stackman27/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
      "organizations_url": "https://api.github.com/users/stackman27/orgs",
      "repos_url": "https://api.github.com/users/stackman27/repos",
      "events_url": "https://api.github.com/users/stackman27/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stackman27/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why not just have a getter method for `get_self_utxos`, and pop it while running `utxos += self.wallet.get_utxos(50)`. Seems cleaner no?",
    "created_at": "2021-02-15T16:42:26Z",
    "updated_at": "2021-02-19T16:15:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576316154",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576316154"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576316154"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576316154/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 80,
    "original_line": 80,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576316827",
    "pull_request_review_id": 590584587,
    "id": 576316827,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjMxNjgyNw==",
    "diff_hunk": "@@ -55,25 +80,41 @@ def get_utxo(self, *, txid=''):\n             index = self._utxos.index(utxo)\n         return self._utxos.pop(index)\n \n-    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None):\n+    def get_utxos(self, amount):\n+        \"\"\"Removes and returns the last {amount} utxos from the wallet\"\"\"\n+        assert amount <= len(self._utxos)",
    "path": "test/functional/test_framework/wallet.py",
    "position": 40,
    "original_position": 48,
    "commit_id": "520e7799b556807c818eb05b5380c389a470ae3b",
    "original_commit_id": "e89ee566b7d99075c8e594b50ea8fbf721b7ce4b",
    "user": {
      "login": "stackman27",
      "id": 26356227,
      "node_id": "MDQ6VXNlcjI2MzU2MjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stackman27",
      "html_url": "https://github.com/stackman27",
      "followers_url": "https://api.github.com/users/stackman27/followers",
      "following_url": "https://api.github.com/users/stackman27/following{/other_user}",
      "gists_url": "https://api.github.com/users/stackman27/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
      "organizations_url": "https://api.github.com/users/stackman27/orgs",
      "repos_url": "https://api.github.com/users/stackman27/repos",
      "events_url": "https://api.github.com/users/stackman27/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stackman27/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Also i'm having hard time understanding this assertion. Why are you comparing amount to the length of utxos? ",
    "created_at": "2021-02-15T16:43:39Z",
    "updated_at": "2021-02-19T16:15:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576316827",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576316827"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576316827"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576316827/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 82,
    "original_line": 82,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576353601",
    "pull_request_review_id": 590676095,
    "id": 576353601,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjM1MzYwMQ==",
    "diff_hunk": "@@ -55,25 +80,41 @@ def get_utxo(self, *, txid=''):\n             index = self._utxos.index(utxo)\n         return self._utxos.pop(index)\n \n-    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None):\n+    def get_utxos(self, amount):",
    "path": "test/functional/test_framework/wallet.py",
    "position": 38,
    "original_position": 46,
    "commit_id": "520e7799b556807c818eb05b5380c389a470ae3b",
    "original_commit_id": "e89ee566b7d99075c8e594b50ea8fbf721b7ce4b",
    "user": {
      "login": "danben",
      "id": 253639,
      "node_id": "MDQ6VXNlcjI1MzYzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/253639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danben",
      "html_url": "https://github.com/danben",
      "followers_url": "https://api.github.com/users/danben/followers",
      "following_url": "https://api.github.com/users/danben/following{/other_user}",
      "gists_url": "https://api.github.com/users/danben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danben/subscriptions",
      "organizations_url": "https://api.github.com/users/danben/orgs",
      "repos_url": "https://api.github.com/users/danben/repos",
      "events_url": "https://api.github.com/users/danben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danben/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Exposing `self._utxos` via a getter weakens the existing guarantees of the class (i.e. the list of utxos is not writeable from the outside). It didn't seem like an appropriate change to make. (At the very least, someone made a deliberate choice not to expose this field and I didn't want to undo that.)",
    "created_at": "2021-02-15T17:56:02Z",
    "updated_at": "2021-02-19T16:15:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576353601",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576353601"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576353601"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576353601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 80,
    "original_line": 80,
    "side": "RIGHT",
    "in_reply_to_id": 576316154
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576354908",
    "pull_request_review_id": 590677548,
    "id": 576354908,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjM1NDkwOA==",
    "diff_hunk": "@@ -55,25 +80,41 @@ def get_utxo(self, *, txid=''):\n             index = self._utxos.index(utxo)\n         return self._utxos.pop(index)\n \n-    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None):\n+    def get_utxos(self, amount):\n+        \"\"\"Removes and returns the last {amount} utxos from the wallet\"\"\"\n+        assert amount <= len(self._utxos)",
    "path": "test/functional/test_framework/wallet.py",
    "position": 40,
    "original_position": 48,
    "commit_id": "520e7799b556807c818eb05b5380c389a470ae3b",
    "original_commit_id": "e89ee566b7d99075c8e594b50ea8fbf721b7ce4b",
    "user": {
      "login": "danben",
      "id": 253639,
      "node_id": "MDQ6VXNlcjI1MzYzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/253639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danben",
      "html_url": "https://github.com/danben",
      "followers_url": "https://api.github.com/users/danben/followers",
      "following_url": "https://api.github.com/users/danben/following{/other_user}",
      "gists_url": "https://api.github.com/users/danben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danben/subscriptions",
      "organizations_url": "https://api.github.com/users/danben/orgs",
      "repos_url": "https://api.github.com/users/danben/repos",
      "events_url": "https://api.github.com/users/danben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danben/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If you pass a negative value, whose absolute value is larger than the length of the list, as the first index of a slice operator you'll just get back the whole list. This assertion protects against what is most likely user error.",
    "created_at": "2021-02-15T17:58:52Z",
    "updated_at": "2021-02-19T16:15:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576354908",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576354908"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576354908"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576354908/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 82,
    "original_line": 82,
    "side": "RIGHT",
    "in_reply_to_id": 576316827
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576355280",
    "pull_request_review_id": 590677978,
    "id": 576355280,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjM1NTI4MA==",
    "diff_hunk": "@@ -32,14 +32,39 @@ def __init__(self, test_node):\n         self._address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n         self._scriptPubKey = hex_str_to_bytes(self._test_node.validateaddress(self._address)['scriptPubKey'])\n \n+    def num_utxos(self):",
    "path": "test/functional/test_framework/wallet.py",
    "position": null,
    "original_position": 4,
    "commit_id": "520e7799b556807c818eb05b5380c389a470ae3b",
    "original_commit_id": "e89ee566b7d99075c8e594b50ea8fbf721b7ce4b",
    "user": {
      "login": "danben",
      "id": 253639,
      "node_id": "MDQ6VXNlcjI1MzYzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/253639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danben",
      "html_url": "https://github.com/danben",
      "followers_url": "https://api.github.com/users/danben/followers",
      "following_url": "https://api.github.com/users/danben/following{/other_user}",
      "gists_url": "https://api.github.com/users/danben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danben/subscriptions",
      "organizations_url": "https://api.github.com/users/danben/orgs",
      "repos_url": "https://api.github.com/users/danben/repos",
      "events_url": "https://api.github.com/users/danben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danben/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nope, that's left over from an earlier version. I'll get rid of it, thanks.",
    "created_at": "2021-02-15T17:59:46Z",
    "updated_at": "2021-02-19T16:15:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576355280",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576355280"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576355280"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576355280/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 35,
    "side": "RIGHT",
    "in_reply_to_id": 576306695
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576929133",
    "pull_request_review_id": 591362250,
    "id": 576929133,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjkyOTEzMw==",
    "diff_hunk": "@@ -32,14 +32,39 @@ def __init__(self, test_node):\n         self._address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n         self._scriptPubKey = hex_str_to_bytes(self._test_node.validateaddress(self._address)['scriptPubKey'])\n \n+    def num_utxos(self):\n+        return len(self._utxos)\n+\n     def generate(self, num_blocks):\n         \"\"\"Generate blocks with coinbase outputs to the internal address, and append the outputs to the internal list\"\"\"\n         blocks = self._test_node.generatetoaddress(num_blocks, self._address)\n         for b in blocks:\n             cb_tx = self._test_node.getblock(blockhash=b, verbosity=2)['tx'][0]\n-            self._utxos.append({'txid': cb_tx['txid'], 'vout': 0, 'value': cb_tx['vout'][0]['value']})\n+            self._utxos.append({'txid': cb_tx['txid'], 'vout': 0, 'value': cb_tx['vout'][0]['value'], 'blockhash':b})\n         return blocks\n \n+    def generate_random_outputs(self, utxo, num_outputs, confirmed=True):",
    "path": "test/functional/test_framework/wallet.py",
    "position": 8,
    "original_position": 16,
    "commit_id": "520e7799b556807c818eb05b5380c389a470ae3b",
    "original_commit_id": "e89ee566b7d99075c8e594b50ea8fbf721b7ce4b",
    "user": {
      "login": "stackman27",
      "id": 26356227,
      "node_id": "MDQ6VXNlcjI2MzU2MjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stackman27",
      "html_url": "https://github.com/stackman27",
      "followers_url": "https://api.github.com/users/stackman27/followers",
      "following_url": "https://api.github.com/users/stackman27/following{/other_user}",
      "gists_url": "https://api.github.com/users/stackman27/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
      "organizations_url": "https://api.github.com/users/stackman27/orgs",
      "repos_url": "https://api.github.com/users/stackman27/repos",
      "events_url": "https://api.github.com/users/stackman27/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stackman27/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is `confirmed= True` needed? Seems to be true all the time as of now",
    "created_at": "2021-02-16T15:50:48Z",
    "updated_at": "2021-02-19T16:15:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576929133",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576929133"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576929133"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576929133/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 43,
    "original_line": 43,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576962769",
    "pull_request_review_id": 591362250,
    "id": 576962769,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Njk2Mjc2OQ==",
    "diff_hunk": "@@ -55,25 +80,41 @@ def get_utxo(self, *, txid=''):\n             index = self._utxos.index(utxo)\n         return self._utxos.pop(index)\n \n-    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None):\n+    def get_utxos(self, amount):\n+        \"\"\"Removes and returns the last {amount} utxos from the wallet\"\"\"\n+        assert amount <= len(self._utxos)\n+        ret = self._utxos[-amount:]\n+        self._utxos = self._utxos[:-amount]\n+        return ret\n+\n+    def send_self_transfer(self, *, fee_rate=Decimal(\"0.00003\"), from_node, utxo_to_spend=None, send_values=None, nSequence=0, nVersion=1):\n         \"\"\"Create and send a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n         self._utxos = sorted(self._utxos, key=lambda k: k['value'])\n         utxo_to_spend = utxo_to_spend or self._utxos.pop()  # Pick the largest utxo (if none provided) and hope it covers the fee\n-        vsize = Decimal(96)\n-        send_value = satoshi_round(utxo_to_spend['value'] - fee_rate * (vsize / 1000))\n-        fee = utxo_to_spend['value'] - send_value\n-        assert send_value > 0\n-\n+        send_values = send_values or [utxo_to_spend['value']]\n+        assert sum(send_values) <= utxo_to_spend['value']\n+        vsize = Decimal(53 + 43 * len(send_values))\n         tx = CTransaction()\n-        tx.vin = [CTxIn(COutPoint(int(utxo_to_spend['txid'], 16), utxo_to_spend['vout']))]\n-        tx.vout = [CTxOut(int(send_value * COIN), self._scriptPubKey)]\n+        tx.nVersion = nVersion\n+        tx.vin = [CTxIn(COutPoint(int(utxo_to_spend['txid'], 16), utxo_to_spend['vout']), nSequence=nSequence)]\n+\n+        # Distribute the fee evenly among all outputs\n+        fee_per_output = fee_rate * vsize / 1000 / len(send_values)\n+\n+        total_sent = 0\n+        for send_value in send_values:\n+            output_value = satoshi_round(send_value - fee_per_output)\n+            total_sent += output_value\n+            tx.vout.append(CTxOut(int(output_value * COIN), self._scriptPubKey))\n+\n         tx.wit.vtxinwit = [CTxInWitness()]\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n-        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n-        from_node.sendrawtransaction(tx_hex)\n+        for i, send_value in enumerate(send_values):\n+            self._utxos.append({'txid': tx_info['txid'], 'vout': i, 'value': satoshi_round(send_value - fee_per_output)})\n+\n+        assert_equal(tx_info['txid'], from_node.sendrawtransaction(tx_hex))\n         assert_equal(tx_info['vsize'], vsize)\n-        assert_equal(tx_info['fees']['base'], fee)",
    "path": "test/functional/test_framework/wallet.py",
    "position": 84,
    "original_position": 92,
    "commit_id": "520e7799b556807c818eb05b5380c389a470ae3b",
    "original_commit_id": "e89ee566b7d99075c8e594b50ea8fbf721b7ce4b",
    "user": {
      "login": "stackman27",
      "id": 26356227,
      "node_id": "MDQ6VXNlcjI2MzU2MjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stackman27",
      "html_url": "https://github.com/stackman27",
      "followers_url": "https://api.github.com/users/stackman27/followers",
      "following_url": "https://api.github.com/users/stackman27/following{/other_user}",
      "gists_url": "https://api.github.com/users/stackman27/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
      "organizations_url": "https://api.github.com/users/stackman27/orgs",
      "repos_url": "https://api.github.com/users/stackman27/repos",
      "events_url": "https://api.github.com/users/stackman27/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stackman27/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I believe for the fees assertion, you weren't taking the whole fees of the tx into consideration.  If you print(tx) in line 109, you'll see tx with one input and lots of outputs. `fee_per_output` only calculated tx for a single set of output, but here you need to calculate fee for the whole tx. I tried doing something like this and the assertion worked! lmk if that was helpful \r\n\r\n```\r\n...\r\ntotal_base_fee = 0\r\n        for send_value in send_values:\r\n            output_value = satoshi_round(send_value - fee_per_output)\r\n            total_base_fee += satoshi_round(send_value - output_value)\r\n            total_sent += output_value\r\n            tx.vout.append(CTxOut(int(output_value * COIN), self._scriptPubKey))\r\n...\r\nassert_equal(tx_info['fees']['base'], total_base_fee)\r\n```",
    "created_at": "2021-02-16T16:32:15Z",
    "updated_at": "2021-02-19T16:15:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576962769",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576962769"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576962769"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576962769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 78,
    "original_line": 78,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576964670",
    "pull_request_review_id": 591408669,
    "id": 576964670,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Njk2NDY3MA==",
    "diff_hunk": "@@ -55,25 +80,41 @@ def get_utxo(self, *, txid=''):\n             index = self._utxos.index(utxo)\n         return self._utxos.pop(index)\n \n-    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None):\n+    def get_utxos(self, amount):",
    "path": "test/functional/test_framework/wallet.py",
    "position": 38,
    "original_position": 46,
    "commit_id": "520e7799b556807c818eb05b5380c389a470ae3b",
    "original_commit_id": "e89ee566b7d99075c8e594b50ea8fbf721b7ce4b",
    "user": {
      "login": "stackman27",
      "id": 26356227,
      "node_id": "MDQ6VXNlcjI2MzU2MjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stackman27",
      "html_url": "https://github.com/stackman27",
      "followers_url": "https://api.github.com/users/stackman27/followers",
      "following_url": "https://api.github.com/users/stackman27/following{/other_user}",
      "gists_url": "https://api.github.com/users/stackman27/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
      "organizations_url": "https://api.github.com/users/stackman27/orgs",
      "repos_url": "https://api.github.com/users/stackman27/repos",
      "events_url": "https://api.github.com/users/stackman27/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stackman27/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I see if that's the case its fine. Just out of curiosity when you said, \"Someone made a delibrate choice...\", is there a specific PR or dev notes that you can link where getter method has been discarded",
    "created_at": "2021-02-16T16:34:57Z",
    "updated_at": "2021-02-19T16:15:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576964670",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576964670"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576964670"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576964670/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 80,
    "original_line": 80,
    "side": "RIGHT",
    "in_reply_to_id": 576316154
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576971880",
    "pull_request_review_id": 591417913,
    "id": 576971880,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Njk3MTg4MA==",
    "diff_hunk": "@@ -55,25 +80,41 @@ def get_utxo(self, *, txid=''):\n             index = self._utxos.index(utxo)\n         return self._utxos.pop(index)\n \n-    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None):\n+    def get_utxos(self, amount):",
    "path": "test/functional/test_framework/wallet.py",
    "position": 38,
    "original_position": 46,
    "commit_id": "520e7799b556807c818eb05b5380c389a470ae3b",
    "original_commit_id": "e89ee566b7d99075c8e594b50ea8fbf721b7ce4b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Just for the sake of abstraction, so that outside code doesn't access the inner \"organs\" of MiniWallet, I didn't write a getter for the private member `_utxos`.\r\n\r\nAs pointed out by @danben the \"list of utxos is not writeable from the outside\"",
    "created_at": "2021-02-16T16:44:10Z",
    "updated_at": "2021-02-19T16:15:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576971880",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576971880"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576971880"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576971880/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 80,
    "original_line": 80,
    "side": "RIGHT",
    "in_reply_to_id": 576316154
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576973426",
    "pull_request_review_id": 591419892,
    "id": 576973426,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Njk3MzQyNg==",
    "diff_hunk": "@@ -55,25 +80,41 @@ def get_utxo(self, *, txid=''):\n             index = self._utxos.index(utxo)\n         return self._utxos.pop(index)\n \n-    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None):\n+    def get_utxos(self, amount):",
    "path": "test/functional/test_framework/wallet.py",
    "position": 38,
    "original_position": 46,
    "commit_id": "520e7799b556807c818eb05b5380c389a470ae3b",
    "original_commit_id": "e89ee566b7d99075c8e594b50ea8fbf721b7ce4b",
    "user": {
      "login": "stackman27",
      "id": 26356227,
      "node_id": "MDQ6VXNlcjI2MzU2MjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stackman27",
      "html_url": "https://github.com/stackman27",
      "followers_url": "https://api.github.com/users/stackman27/followers",
      "following_url": "https://api.github.com/users/stackman27/following{/other_user}",
      "gists_url": "https://api.github.com/users/stackman27/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
      "organizations_url": "https://api.github.com/users/stackman27/orgs",
      "repos_url": "https://api.github.com/users/stackman27/repos",
      "events_url": "https://api.github.com/users/stackman27/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stackman27/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "aah i see that makes sense. Thank you!",
    "created_at": "2021-02-16T16:46:11Z",
    "updated_at": "2021-02-19T16:15:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576973426",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576973426"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576973426"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576973426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 80,
    "original_line": 80,
    "side": "RIGHT",
    "in_reply_to_id": 576316154
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579305183",
    "pull_request_review_id": 594344867,
    "id": 579305183,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTMwNTE4Mw==",
    "diff_hunk": "@@ -55,25 +80,41 @@ def get_utxo(self, *, txid=''):\n             index = self._utxos.index(utxo)\n         return self._utxos.pop(index)\n \n-    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None):\n+    def get_utxos(self, amount):\n+        \"\"\"Removes and returns the last {amount} utxos from the wallet\"\"\"\n+        assert amount <= len(self._utxos)\n+        ret = self._utxos[-amount:]\n+        self._utxos = self._utxos[:-amount]\n+        return ret\n+\n+    def send_self_transfer(self, *, fee_rate=Decimal(\"0.00003\"), from_node, utxo_to_spend=None, send_values=None, nSequence=0, nVersion=1):\n         \"\"\"Create and send a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n         self._utxos = sorted(self._utxos, key=lambda k: k['value'])\n         utxo_to_spend = utxo_to_spend or self._utxos.pop()  # Pick the largest utxo (if none provided) and hope it covers the fee\n-        vsize = Decimal(96)\n-        send_value = satoshi_round(utxo_to_spend['value'] - fee_rate * (vsize / 1000))\n-        fee = utxo_to_spend['value'] - send_value\n-        assert send_value > 0\n-\n+        send_values = send_values or [utxo_to_spend['value']]\n+        assert sum(send_values) <= utxo_to_spend['value']\n+        vsize = Decimal(53 + 43 * len(send_values))\n         tx = CTransaction()\n-        tx.vin = [CTxIn(COutPoint(int(utxo_to_spend['txid'], 16), utxo_to_spend['vout']))]\n-        tx.vout = [CTxOut(int(send_value * COIN), self._scriptPubKey)]\n+        tx.nVersion = nVersion\n+        tx.vin = [CTxIn(COutPoint(int(utxo_to_spend['txid'], 16), utxo_to_spend['vout']), nSequence=nSequence)]\n+\n+        # Distribute the fee evenly among all outputs\n+        fee_per_output = fee_rate * vsize / 1000 / len(send_values)\n+\n+        total_sent = 0\n+        for send_value in send_values:\n+            output_value = satoshi_round(send_value - fee_per_output)\n+            total_sent += output_value\n+            tx.vout.append(CTxOut(int(output_value * COIN), self._scriptPubKey))\n+\n         tx.wit.vtxinwit = [CTxInWitness()]\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n-        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n-        from_node.sendrawtransaction(tx_hex)\n+        for i, send_value in enumerate(send_values):\n+            self._utxos.append({'txid': tx_info['txid'], 'vout': i, 'value': satoshi_round(send_value - fee_per_output)})\n+\n+        assert_equal(tx_info['txid'], from_node.sendrawtransaction(tx_hex))\n         assert_equal(tx_info['vsize'], vsize)\n-        assert_equal(tx_info['fees']['base'], fee)",
    "path": "test/functional/test_framework/wallet.py",
    "position": 84,
    "original_position": 92,
    "commit_id": "520e7799b556807c818eb05b5380c389a470ae3b",
    "original_commit_id": "e89ee566b7d99075c8e594b50ea8fbf721b7ce4b",
    "user": {
      "login": "danben",
      "id": 253639,
      "node_id": "MDQ6VXNlcjI1MzYzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/253639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danben",
      "html_url": "https://github.com/danben",
      "followers_url": "https://api.github.com/users/danben/followers",
      "following_url": "https://api.github.com/users/danben/following{/other_user}",
      "gists_url": "https://api.github.com/users/danben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danben/subscriptions",
      "organizations_url": "https://api.github.com/users/danben/orgs",
      "repos_url": "https://api.github.com/users/danben/repos",
      "events_url": "https://api.github.com/users/danben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danben/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, that was helpful - I actually had something similar before but I think my mistake was forgetting to use `satoshi_round` on `fee_per_output`, and then I just convinced myself that I didn't know what fees-base actually represented.",
    "created_at": "2021-02-19T16:17:49Z",
    "updated_at": "2021-02-19T16:17:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r579305183",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579305183"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r579305183"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579305183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 78,
    "original_line": 78,
    "side": "LEFT",
    "in_reply_to_id": 576962769
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579306607",
    "pull_request_review_id": 594346773,
    "id": 579306607,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTMwNjYwNw==",
    "diff_hunk": "@@ -32,14 +32,39 @@ def __init__(self, test_node):\n         self._address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n         self._scriptPubKey = hex_str_to_bytes(self._test_node.validateaddress(self._address)['scriptPubKey'])\n \n+    def num_utxos(self):\n+        return len(self._utxos)\n+\n     def generate(self, num_blocks):\n         \"\"\"Generate blocks with coinbase outputs to the internal address, and append the outputs to the internal list\"\"\"\n         blocks = self._test_node.generatetoaddress(num_blocks, self._address)\n         for b in blocks:\n             cb_tx = self._test_node.getblock(blockhash=b, verbosity=2)['tx'][0]\n-            self._utxos.append({'txid': cb_tx['txid'], 'vout': 0, 'value': cb_tx['vout'][0]['value']})\n+            self._utxos.append({'txid': cb_tx['txid'], 'vout': 0, 'value': cb_tx['vout'][0]['value'], 'blockhash':b})\n         return blocks\n \n+    def generate_random_outputs(self, utxo, num_outputs, confirmed=True):",
    "path": "test/functional/test_framework/wallet.py",
    "position": 8,
    "original_position": 16,
    "commit_id": "520e7799b556807c818eb05b5380c389a470ae3b",
    "original_commit_id": "e89ee566b7d99075c8e594b50ea8fbf721b7ce4b",
    "user": {
      "login": "danben",
      "id": 253639,
      "node_id": "MDQ6VXNlcjI1MzYzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/253639?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danben",
      "html_url": "https://github.com/danben",
      "followers_url": "https://api.github.com/users/danben/followers",
      "following_url": "https://api.github.com/users/danben/following{/other_user}",
      "gists_url": "https://api.github.com/users/danben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danben/subscriptions",
      "organizations_url": "https://api.github.com/users/danben/orgs",
      "repos_url": "https://api.github.com/users/danben/repos",
      "events_url": "https://api.github.com/users/danben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danben/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's true that I only use this function in `feature_bip68_sequence.py` to create confirmed outputs, but `generate_random_outputs` belongs to `wallet.py`, not a specific functional test. It seems more broadly useful to allow the user to create unconfirmed outputs if they like (and with the amount of tests left to convert I suspect it will come up at some point).",
    "created_at": "2021-02-19T16:19:56Z",
    "updated_at": "2021-02-19T16:19:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r579306607",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579306607"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21144#discussion_r579306607"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21144"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579306607/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 43,
    "original_line": 43,
    "side": "RIGHT",
    "in_reply_to_id": 576929133
  }
]