danben,2021-02-10 22:48:22,"I'm still very new to the codebase so I'm sure I did lots of things suboptimally, but this should be a decent starting point. \n\nThanks for reviewing!",https://github.com/bitcoin/bitcoin/pull/21144#issuecomment-777087249,777087249,
DrahtBot,2021-02-11 05:58:00,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21390 (test: Test improvements for UTXO set hash tests by fjahr)\n* #21178 (test: run mempool_reorg.py even with wallet d",https://github.com/bitcoin/bitcoin/pull/21144#issuecomment-777219957,777219957,
DrahtBot,2021-03-26 09:33:46,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/21144#issuecomment-808071530,808071530,
MarcoFalke,2021-08-26 16:36:52,"Marked up for grabs, because it still needs rebase",https://github.com/bitcoin/bitcoin/pull/21144#issuecomment-906567426,906567426,
stackman27,2021-02-15 15:40:56,No need for this method. You can just remove it,https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576278194,576278194,test/functional/feature_bip68_sequence.py
stackman27,2021-02-15 16:26:54,This method hasn't been used elsewhere. Is there a need for it?,https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576306695,576306695,test/functional/test_framework/wallet.py
stackman27,2021-02-15 16:42:26,"Why not just have a getter method for `get_self_utxos`, and pop it while running `utxos += self.wallet.get_utxos(50)`. Seems cleaner no?",https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576316154,576316154,test/functional/test_framework/wallet.py
stackman27,2021-02-15 16:43:39,Also i'm having hard time understanding this assertion. Why are you comparing amount to the length of utxos? ,https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576316827,576316827,test/functional/test_framework/wallet.py
danben,2021-02-15 17:56:02,"Exposing `self._utxos` via a getter weakens the existing guarantees of the class (i.e. the list of utxos is not writeable from the outside). It didn't seem like an appropriate change to make. (At the very least, someone made a deliberate choice not to expose this field and I didn't want to undo that.)",https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576353601,576353601,test/functional/test_framework/wallet.py
danben,2021-02-15 17:58:52,"If you pass a negative value, whose absolute value is larger than the length of the list, as the first index of a slice operator you'll just get back the whole list. This assertion protects against what is most likely user error.",https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576354908,576354908,test/functional/test_framework/wallet.py
danben,2021-02-15 17:59:46,"Nope, that's left over from an earlier version. I'll get rid of it, thanks.",https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576355280,576355280,test/functional/test_framework/wallet.py
stackman27,2021-02-16 15:50:48,Is `confirmed= True` needed? Seems to be true all the time as of now,https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576929133,576929133,test/functional/test_framework/wallet.py
stackman27,2021-02-16 16:32:15,"I believe for the fees assertion, you weren't taking the whole fees of the tx into consideration.  If you print(tx) in line 109, you'll see tx with one input and lots of outputs. `fee_per_output` only calculated tx for a single set of output, but here you need to calculate fee for the whole tx. I tried doing something like this and the assertion worked! lmk if that was helpful \n\n```\n...\nto",https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576962769,576962769,test/functional/test_framework/wallet.py
stackman27,2021-02-16 16:34:57,"I see if that's the case its fine. Just out of curiosity when you said, ""Someone made a delibrate choice..."", is there a specific PR or dev notes that you can link where getter method has been discarded",https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576964670,576964670,test/functional/test_framework/wallet.py
MarcoFalke,2021-02-16 16:44:10,"Just for the sake of abstraction, so that outside code doesn't access the inner ""organs"" of MiniWallet, I didn't write a getter for the private member `_utxos`.\n\nAs pointed out by @danben the ""list of utxos is not writeable from the outside""",https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576971880,576971880,test/functional/test_framework/wallet.py
stackman27,2021-02-16 16:46:11,aah i see that makes sense. Thank you!,https://github.com/bitcoin/bitcoin/pull/21144#discussion_r576973426,576973426,test/functional/test_framework/wallet.py
danben,2021-02-19 16:17:49,"Thanks, that was helpful - I actually had something similar before but I think my mistake was forgetting to use `satoshi_round` on `fee_per_output`, and then I just convinced myself that I didn't know what fees-base actually represented.",https://github.com/bitcoin/bitcoin/pull/21144#discussion_r579305183,579305183,test/functional/test_framework/wallet.py
danben,2021-02-19 16:19:56,"It's true that I only use this function in `feature_bip68_sequence.py` to create confirmed outputs, but `generate_random_outputs` belongs to `wallet.py`, not a specific functional test. It seems more broadly useful to allow the user to create unconfirmed outputs if they like (and with the amount of tests left to convert I suspect it will come up at some point).",https://github.com/bitcoin/bitcoin/pull/21144#discussion_r579306607,579306607,test/functional/test_framework/wallet.py
