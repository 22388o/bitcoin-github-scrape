sipa,2019-06-19 07:07:31,"Concept ACK, though it seems more appropriate that the RPC help object would gain a method the check RPC arguments, than the RPC handling code to be aware of RPC help. I'm sure the circular dependency is resolvable; don't let it stop you from cleaning things up.\n\nAlso, if these lines are all touched anyway, could you add a scripted diff to fix their indentation?",https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-503435791,503435791,
promag,2019-06-19 07:18:37,"Agree with @sipa, although the request already knows about `fHelp`.",https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-503439074,503439074,
DrahtBot,2019-06-19 07:19:40,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16365](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16365.html) (Log RPC parameters (arguments) if -debug=rp",https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-503439388,503439388,
kallewoof,2019-06-19 07:43:06,"@sipa I initially added one, but it needs to know about `JSONRPCRequest` to fetch the `fHelp` and `params.size()`, but if I `#include <rpc/server.h>`, the linters detect a circular dependency `util -> server -> util`. I definitely think this would be better in `RPCHelpMan`, but alas..\n\nI would love to fix the indentation, but not sure how a scripted-diff would be used in this case. (I started ",https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-503446768,503446768,
fanquake,2019-06-19 08:26:25,Concept ACK - nice cleanup / deduplication.,https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-503460868,503460868,
kallewoof,2019-06-19 09:42:55,"@sipa @promag I realized I could inline the helper method and implement it after `JSONRPCRequest` to get around linker issues, so this is now an `RPCHelpMan` method, as you recommended.\n\nThere is also a whitespace only commit (e7124e3) which blows the diff up a bit, but if reviewers check per-commit and use `-w`/`?w=1` properly, it should be manageable. I can drop the whitespace commit too.",https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-503488122,503488122,
promag,2019-06-19 10:08:04,"@kallewoof see dfdf7f213cd84756f8f17bb3c7cb25a1ee7989e2 for a scripted diff, produced by running on your 31599d8:\n```sh\ngit diff -U0 HEAD~3.. | ./contrib/devtools/clang-format-diff.py -p0 -i -v\n```",https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-503496831,503496831,
kallewoof,2019-06-19 11:47:42,"@promag I had no idea you could do that. Thanks, very cool!\n\nEdit: not sure what is going wrong. Running this from cli gives me \n```\nFormatting b/src/rpc/blockchain.cpp\nNo such file or directory\n```",https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-503526819,503526819,
promag,2019-06-19 13:29:00,"Makes sense @MarcoFalke, not worth it.",https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-503560898,503560898,
kallewoof,2019-06-19 13:32:13,"@MarcoFalke \n\n> Tend to NACK on fixing the code style in lines that are not touched otherwise. This breaks `git blame` and all cherry-pick/rebase/merge operations by default (see the list of conflicts).\n\nI would normally agree, but the RPC code is out-of-this-world awful with indentation. I think it may be worth to run through it once, especially since the review effort required is near-ni",https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-503562101,503562101,
MarcoFalke,2019-06-19 13:55:51,"> especially since the review effort required is near-nil.\n\nJust because something is easy to review doesn't mean it should be done. Beside the things it breaks that I mentioned previously, it will also conflict with a bunch of my local branches, where I restructure the help to make it more consistent and compile-time-safe (use compile time checks and compile-time generated help). Those change",https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-503571606,503571606,
kallewoof,2019-06-19 14:03:30,Understood. Would have been a nice clean up but I'm not gonna lose sleep over it. :) Dropped the whitespace commit.,https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-503574884,503574884,
kallewoof,2019-06-19 17:01:02,"@MarcoFalke: Updated `getblocktemplate` to display default as `{}` rather than `{""mode"":""template""}`.",https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-503645533,503645533,
kallewoof,2019-07-05 02:17:02,"@laanwj\n\n> I do think this is slightly risky, as it gets rid of a lot of special-case code, is our test coverage of RPC good enough to be confident about changing this for all methods at once?\n\nI'm not sure about ""a lot"" of special-case code, to be honest. There were a few exceptions but I mostly left special case stuff alone.",https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-508607684,508607684,
laanwj,2019-07-05 10:57:46,"> I'm not sure about ""a lot"" of special-case code, to be honest. There were a few exceptions but I mostly left special case stuff alone.\n\nOK, I just wanted to bring it up.",https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-508721213,508721213,
kallewoof,2019-07-08 00:56:58,"@promag Thanks for the review! Note that I only renamed `protocol.cpp`, and moved some parts out of `protocol.h` into `request.h` -- `protocol.h` is still there, just smaller.",https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-509045583,509045583,
laanwj,2019-07-08 15:16:45,code rview and lightly tested ACK b6fb617aaaad5f9cdd7f2ad2825b253ca792055d,https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-509268861,509268861,
MarcoFalke,2019-07-08 16:29:50,">     I do think this is slightly risky, as it gets rid of a lot of special-case code, is our test coverage of RPC good enough to be confident about changing this for all methods at once?\n\n\nI checked all call-sites as part of\n*  rpc: Actually throw help when passed invalid number of params #15401 \n\nso this *should* only be refactoring. Though, you are right, most of it is not covered b",https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-509297418,509297418,
MarcoFalke,2019-07-09 23:31:30,"ACK b6fb617aaa, looked at the diff, verified move-only where applicable\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK b6fb617aaa, looked at the diff, verified move-only where applicable\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhX0AwA",https://github.com/bitcoin/bitcoin/pull/16240#issuecomment-509847909,509847909,
MarcoFalke,2019-06-19 12:50:16,"in commit 2512d3d2e2f2a2b891f9a3baa1a1309edaf41e01:\n\nCould add a doc string?",https://github.com/bitcoin/bitcoin/pull/16240#discussion_r295278443,295278443,src/rpc/util.h
kallewoof,2019-06-19 13:30:57,Done!,https://github.com/bitcoin/bitcoin/pull/16240#discussion_r295297792,295297792,src/rpc/util.h
MarcoFalke,2019-06-19 15:02:22,"Does this need backport? Should be a separate pull request, since behavior changes should not be mixed with refactoring.",https://github.com/bitcoin/bitcoin/pull/16240#discussion_r295348478,295348478,src/rpc/mining.cpp
MarcoFalke,2019-06-19 15:03:10,"This is wrong anyway, it is required and needs to be set to:\n\n```\ngetblocktemplate must be called with the segwit rule set (call with {""rules"": [""segwit""]}) (code -8)",https://github.com/bitcoin/bitcoin/pull/16240#discussion_r295348820,295348820,src/rpc/mining.cpp
kallewoof,2019-06-19 15:47:35,"It may be wrong doc-wise, but tests break if you make this mandatory. And it *is* optional in the code.\n\nEdit: on the same note, this is not a behavior change, for the reasons stated above. It always behaved this way, even if the docs indicated differently.\n\nEdit 2: the thing you pointed at actually throws the help topic because it does not provide any values;\n\nhttps://github.com/bitco",https://github.com/bitcoin/bitcoin/pull/16240#discussion_r295372213,295372213,src/rpc/mining.cpp
MarcoFalke,2019-06-19 15:51:49,Which tests break?,https://github.com/bitcoin/bitcoin/pull/16240#discussion_r295374182,295374182,src/rpc/mining.cpp
kallewoof,2019-06-19 16:16:17,minig_basic.py (see above log),https://github.com/bitcoin/bitcoin/pull/16240#discussion_r295386603,295386603,src/rpc/mining.cpp
MarcoFalke,2019-06-19 16:40:15,"Ah, so the default is not `{\""mode\"":\""template\""}`, but the empty dict `{}`? The help text for mode says ""This must be set to \""template\"", \""proposal\"" (see BIP 23), **or omitted**"" (emphasis mine)",https://github.com/bitcoin/bitcoin/pull/16240#discussion_r295397327,295397327,src/rpc/mining.cpp
kallewoof,2019-06-19 16:58:05,"~If it can be omitted, `Optional::NO` is probably wrong, then.~ (I read too fast; you were talking about mode, not template_request) I can change the default to simply say `{}`~, but the code essentially acts as if it was `{""mode"":""template""}`.~\n",https://github.com/bitcoin/bitcoin/pull/16240#discussion_r295405009,295405009,src/rpc/mining.cpp
MarcoFalke,2019-06-19 17:28:35,"In commit 09e176a958  Make the RPCHelpMan aware of JSONRPCRequest and add Check() helper\n\n\nLooks like you added the implementation to an unrelated header file (should be in rpc/util.cpp).\n\nYou can solve the circular dependency by moving JSONRPCRequest to rpc/protocol.h ",https://github.com/bitcoin/bitcoin/pull/16240#discussion_r295417566,295417566,src/rpc/server.h
kallewoof,2019-06-19 17:36:38,"That sounds like a good solution, yeah. Thanks, doing that.",https://github.com/bitcoin/bitcoin/pull/16240#discussion_r295421229,295421229,src/rpc/server.h
MarcoFalke,2019-06-19 18:02:56,? :eyes: ,https://github.com/bitcoin/bitcoin/pull/16240#discussion_r295432546,295432546,src/rpc/server.cpp
kallewoof,2019-06-19 18:09:52,Sigh. I moved it to .h because it needed RPCHelpMan at one point. Fixed!,https://github.com/bitcoin/bitcoin/pull/16240#discussion_r295435368,295435368,src/rpc/server.cpp
laanwj,2019-07-04 12:11:46,"I'm not 100% convinced that `protocol.h` is the right place for this architecturally, as it's supposed to be functions and data structures shared between RPC client and server, and `JSONRPCRequest` is internal to the server. I understand the rationale, though (but we might just want to create a new header instead for it).",https://github.com/bitcoin/bitcoin/pull/16240#discussion_r300370684,300370684,src/rpc/protocol.h
kallewoof,2019-07-05 02:16:57,"I think you're right, but I also think we have stuff in `protocol` that does not belong there to begin with. I made an attempt at cleaning this up by splitting the 'request' stuff into a separate file. This moves stuff from `server.cpp` and `server.h` and `protocol.h` into `request.h`, and `protocol.cpp` is replaced by `request.cpp`.",https://github.com/bitcoin/bitcoin/pull/16240#discussion_r300523037,300523037,src/rpc/protocol.h
promag,2019-07-06 15:54:49,"09f0bf5f1a5a50168d64c488c2b8972774711a98\n\nnit, add `{ }`.",https://github.com/bitcoin/bitcoin/pull/16240#discussion_r300835316,300835316,src/rpc/util.h
kallewoof,2019-07-08 00:54:01,Added.,https://github.com/bitcoin/bitcoin/pull/16240#discussion_r300894889,300894889,src/rpc/util.h
