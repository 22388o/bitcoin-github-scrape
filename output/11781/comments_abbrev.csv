promag,2017-11-28T10:29:08Z,"Can't test right now, but what happens if the absolute path doesn't exist?",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347480078,347480078,
laanwj,2017-11-28T10:31:41Z,"> Can't test right now, but what happens if the absolute path doesn't exist?\n```\nbitcoind: /home/orion/projects/bitcoin/bitcoin/src/util.cpp:359: int LogPrintStr(const std::string &): Assertion `vMsgsBeforeOpenLog' failed.\nAborted (core dumped)\n```\nGah, seems like we need a check in init before the logging stuff is initialized.\n",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347480745,347480745,
promag,2017-11-28T10:35:59Z,"Right, current code knows that data dir exists.",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347481915,347481915,
promag,2017-11-28T10:37:05Z,"If you do handle that, then add an init test for inexistent path.",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347482171,347482171,
laanwj,2017-11-28T10:38:21Z,"@promag Apparently there is some logic for handling the case that the debug log could not be opened: https://github.com/bitcoin/bitcoin/blob/master/src/util.cpp#L201 . So it's a matter of passing it on to the caller.\n",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347482490,347482490,
laanwj,2017-11-28T11:06:38Z,"Pushed error handling when the log file could not be opened.\n```\n$ src/bitcoind -testnet -debuglogfile=/dfdf                                                                                                             \nError: Could not open debug log file /dfdf\n```\n(currently this segfaults afterwards, but that is due to an unrelated problem introduced in #10286, see #11783)\n",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347489817,347489817,
jonasschnelli,2017-11-28T19:35:54Z,"utACK ad4e94a4aa8cebfa2147c47cd57098a2901b3e62\n\n* For me, it was not clear from the release notes and the init.cpp help line that one can use absolute paths (but maybe it's obvious).\n* What if someone uses `-debuglogfile=wallet.dat`?",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347638767,347638767,
promag,2017-11-29T01:10:23Z,"Âµnit, just `test/functional/logging.py`?",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347718712,347718712,
laanwj,2017-11-29T08:16:08Z,"> It will corrupt the db by appending the log and eventually rotate the content. Later we could only an existing file if it is text/plain?\n\nI guess it could do a berkeleydb magic check (from #11485) before opening the log for appending, but I'm not going to do so in this PR.\n\nAt least the walletdir makes it less likely people will overwrite an existing wallet. You can't 100% prevent people",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347784727,347784727,
promag,2017-11-29T08:29:13Z,I think this is good as it is.,https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347787549,347787549,
laanwj,2017-11-29T09:02:23Z,"> For me, it was not clear from the release notes and the init.cpp help line that one can use absolute paths (but maybe it's obvious).\n\nCouldn't hurt mentioning it, I agree, will add it, though I don't think we mention this for any other options. Maybe we should though... for many options it's clear you can use an absolute path, but it's quite unclear what a relative path even does.",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347795351,347795351,
laanwj,2017-11-29T10:10:00Z,"Ok, updated the message (as well as added DEFAULT_DEBUGLOGFILE constant) and squashed",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347813111,347813111,
promag,2017-11-29T14:38:26Z,re-Tested ACK b382a24.,https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347879370,347879370,
jonasschnelli,2017-11-29T19:11:36Z,"utACK b382a246dafbb1895c66445bef2a5aac595933de.\nI don't really care about PEP.",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347964563,347964563,
jnewbery,2017-11-29T19:41:56Z,"> I don't really care about PEP.\n\nI appreciate I may be in the minority here, but some reasoning for why I think it's a good idea to follow standard style conventions (at least when introducing new code):\n\n- having a canonical ordering for imports makes scanning much quicker for anyone reading the code.\n- people who have worked on other projects may be used to following PEP8, so will fee",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347973362,347973362,
jonasschnelli,2017-11-29T20:19:11Z,"@jnewbery. I generally agree.\n\nThe point I'm trying to make is that we tend to loose important focus or time with minor code ordering discussions. I think we should make contributors aware of the recommended rules and standard but then, at the same time, let it go a bit for the sake of focus on the important stuff.\n\nThough I don't want to advocate bad code quality with this.",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347983743,347983743,
promag,2017-11-29T20:33:31Z,@jnewbery +1,https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-347987463,347987463,
laanwj,2017-11-30T09:24:13Z,"Please, not the PEP8 talk again. Let's just agree to disagree. I want to move the project forward and it doesn't help if PRs stay stuck for ages on minor code cosmetics issues, certainly not in the tests. If you feel like spending a lot of time on that, by all means go ahead, but don't force all contributors to do so.\n\n> The point I'm trying to make is that we tend to loose important focus or ",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-348130127,348130127,
laanwj,2017-11-30T10:08:23Z,"Anyyhow, updated to reorder the imports etc.\nAnd got rid of ""Fix shutdown in case of errors during initialization"" which is merged.",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-348142017,348142017,
jnewbery,2017-11-30T13:37:12Z,"@laanwj - I'm not going to argue about import ordering, but I do wholeheartedly disagree with your sentiment.\n\n> I want to move the project forward and it doesn't help if PRs stay stuck for ages on minor code cosmetics issues,\n\nIf I were nit sniping on a PR that had been open for a long time and was otherwise ready for merge, you may have a point. That's not what's happening here. This PR ",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-348189861,348189861,
promag,2017-11-30T14:03:41Z,re-tested ACK 07c8970.,https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-348196518,348196518,
laanwj,2017-11-30T16:31:31Z,"> It's a little disheartening if the response is that you think I'm wasting your time.\n\nThat's not what I was trying to suggest. Thanks for taking the time to test and review! \n\nSorry if I somehow overreacted.\n\nOn a high level I completely agree with you, it's just that following some style guide to the letter ranks lower in my code quality metrics than it does for you.",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-348243078,348243078,
promag,2017-11-30T16:50:59Z,IMO (keep) working for consistency throughout pays off on the long term.,https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-348249504,348249504,
laanwj,2017-12-01T10:53:35Z,"Pulled in @ajtowns's changes, squashed the commit that changes assert(...) but not the one that adds tests (to keep author information).",https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-348464938,348464938,
jonasschnelli,2017-12-02T06:42:55Z,Re-utACK 5a7c09aebf8b0229e9f320135472275d244a7a35,https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-348672872,348672872,
ajtowns,2017-12-04T03:54:11Z,testedACK 5a7c09aebf8b0229e9f320135472275d244a7a35,https://github.com/bitcoin/bitcoin/pull/11781#issuecomment-348854565,348854565,
promag,2017-11-28T12:12:26Z,"Nit, missing test.",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153473818,153473818,src/init.cpp
laanwj,2017-11-28T12:40:00Z,"Will add a test, though testing this particular message only makes sense after #11783 goes in",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153479727,153479727,src/init.cpp
promag,2017-11-28T12:54:47Z,Fix `=<dir>`.,https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153482746,153482746,src/init.cpp
laanwj,2017-11-28T14:39:57Z,"Added test anyway, temporarily adding ""Fix shutdown in case of errors during initialization"" into here",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153510227,153510227,src/init.cpp
laanwj,2017-11-28T14:40:03Z,"Thanks, done",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153510260,153510260,src/init.cpp
promag,2017-11-28T22:19:54Z,Replace with `foo/foo.log`? :trollface: (before squash).,https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153640814,153640814,test/functional/loggingtest.py
promag,2017-11-28T22:23:18Z,"~~Nit, remove 2nd empty line.~~ \n\nFrom PEP 8:\n> ### Blank Lines\n> Surround top-level function and class definitions with two blank lines.",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153641663,153641663,test/functional/loggingtest.py
promag,2017-11-28T22:26:22Z,"Nit, from PEP 8:\n> Imports should be grouped in the following order:\n> \n> - standard library imports\n> - related third party imports\n> - local application/library specific imports\n> \n> You should put a blank line between each group of imports.\n\nExample:\nhttps://github.com/bitcoin/bitcoin/blob/26efc220a13aa3413f6e55e311e8991445104f82/test/functional/multiwallet.py#L5-L16",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153642296,153642296,test/functional/loggingtest.py
laanwj,2017-11-29T08:10:20Z,"I literally copied this from another test (uacomment.py), so it should be consistent at least. PEP8 compliance is not really my goal, sorry.",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153715432,153715432,test/functional/loggingtest.py
laanwj,2017-11-29T08:11:46Z,Why? any invalid filename will do equally and this is as likely to stay invalid as anything.,https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153715674,153715674,test/functional/loggingtest.py
promag,2017-11-29T08:26:44Z,"Below you use foo/foo.log, not shydhehhaghdhdjs.",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153718165,153718165,test/functional/loggingtest.py
promag,2017-11-29T08:27:14Z,Fine.,https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153718246,153718246,test/functional/loggingtest.py
laanwj,2017-11-29T08:54:41Z,"That's a different test case, there's no need for them to use the same (non-existent) file name.",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153723811,153723811,test/functional/loggingtest.py
jnewbery,2017-11-29T18:03:41Z,Can you update the text to say that this can be absolute or relative (just like you have for the help text: `this can be an absolute path or a path relative to the data directory`)?,https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153868046,153868046,doc/release-notes.md
jnewbery,2017-11-29T18:13:23Z,"My personal preference is to follow pep8 convention. I agree that it doesn't make sense to go and change all existing tests, but when adding new tests there's no harm in following the standard convention.\n\nuacomment.py doesn't import any standard libraries, so pep8 import ordering isn't a consideration for that test.",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153870444,153870444,test/functional/loggingtest.py
jnewbery,2017-11-29T18:13:33Z,imported but unused,https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153870483,153870483,test/functional/loggingtest.py
jnewbery,2017-11-29T18:15:29Z,"nit: pep8 convention would have this continuation line aligned with the opening parens of the line above, ie:\n\n```\n        self.assert_start_raises_init_error(0, [""-debuglogfile=ssdksjdf/sdasdfa/sdfsdfsfd""],\n                                            ""Error: Could not open debug log file"")\n```\n\nagain, this is more personal preference than a fast rule.",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r153870991,153870991,test/functional/loggingtest.py
laanwj,2017-11-30T09:22:59Z,The release notes are not documentation. This minor change does not warrant a long write-up in the release notes. If anyone wants to have documentation they can just look at bitcoind's help which is documentation.,https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154021090,154021090,doc/release-notes.md
ajtowns,2017-12-01T01:17:00Z,"It's the only keyboard mashing in the codebase, by the looks? Something like ""-debuglogfile=no/path/for/debug.log"" or similar seems like it would be clearer. Having a similar path for both relative and absolute cases would make it a bit more obvious what the key difference that's being tested is too.",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154247293,154247293,test/functional/loggingtest.py
ajtowns,2017-12-01T01:22:55Z,"Would have expected this to have accompanied\n\n    extern const char * const BITCOIN_CONF_FILENAME;\n    extern const char * const BITCOIN_PID_FILENAME;\n\nlower in the file.",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154248067,154248067,src/util.h
ajtowns,2017-12-01T01:43:25Z,"Python asserts are statements not functions, so the bracketing probably isn't a good idea, even though lots of the other tests also do it :(",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154250599,154250599,test/functional/loggingtest.py
ajtowns,2017-12-01T01:47:23Z,"Consider naming the file ""function_debuglogfile.py"" to match the naming scheme in #11796 ?",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154251078,154251078,test/functional/test_runner.py
ajtowns,2017-12-01T01:56:47Z,"Doesn't actually test that relative paths with slashes will ever actually work. Probably doesn't matter, but if you like, https://github.com/laanwj/bitcoin/pull/5 remedies that.",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154252199,154252199,test/functional/loggingtest.py
laanwj,2017-12-01T03:28:17Z,"I thought about that, but it's grouped with the other `DEFAULT_` here, that makes more sense to me than grouping by type.",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154261393,154261393,src/util.h
laanwj,2017-12-01T03:32:27Z,"`function_` isn't one of the allowed prefixes according to #11796?\n\nAlso I think it would make sense to extend this test later to test other logging related things such as the `logging` RPC call, that's why I used a more general name than ""debuglogfile"".",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154261741,154261741,test/functional/test_runner.py
laanwj,2017-12-01T03:44:16Z,"Thanks, will pull that in.",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154262645,154262645,test/functional/loggingtest.py
ajtowns,2017-12-01T07:54:12Z,The others are defaults that can be overridden via an option; calling it BITCOIN_DEBUGLOG_FILENAME could make it fit by both name and type?,https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154284508,154284508,src/util.h
ajtowns,2017-12-01T07:55:37Z,Gah. feature_. Apparently there's more that one two-syllable word beginning with f.,https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154284683,154284683,test/functional/test_runner.py
laanwj,2017-12-01T09:11:43Z,"I don't get you. This is the default for `-debuglogfile`, which can is an option. We use the convention `DEFAULT_X` where X is the option name everywhere. These are all constants that cannot be changed and are only used for getarg(...).",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154297287,154297287,src/util.h
ajtowns,2017-12-01T09:35:47Z,"Same thing is true for `BITCOIN_{CONF,PID}_FILENAME` - they're constants that can't be changed and are only used for getArg and HelpMessageOpt. But that's a better argument for renaming those to `DEFAULT_X` like almost every single other option, so nevermind.",https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154302345,154302345,src/util.h
laanwj,2017-12-01T09:53:39Z,I agree! the DEFAULT_ convention is more frequently used so would make sense to use everywhere. BITCOIN_CONF_FILENAME and BITCOIN_PID_FILENAME are very old options so they didn't follow that yet. Feel free to send a patch (but not to this PR as it's pretty out of scope :-),https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154306178,154306178,src/util.h
laanwj,2017-12-01T10:28:59Z,ok renamed to simply `feature_logging.py`,https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154313427,154313427,test/functional/test_runner.py
jnewbery,2017-12-04T19:45:17Z,nit: not required (the previous attempt to start the node failed),https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154755179,154755179,test/functional/feature_logging.py
jnewbery,2017-12-04T19:45:22Z,nit: not required (the previous attempt to start the node failed),https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154755207,154755207,test/functional/feature_logging.py
jnewbery,2017-12-04T19:46:09Z,nit: `check that a previously invalid log (relative) works after path exists` would be more accurate. Same for comment below.,https://github.com/bitcoin/bitcoin/pull/11781#discussion_r154755404,154755404,test/functional/feature_logging.py
