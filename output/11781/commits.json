[
  {
    "sha": "cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZjVmNDMyYzY5NDE4YWRiNTFmMGY0YTBiZGJkNmJhMzExMmVlMTFh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-11-28T09:31:52Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-11-30T10:16:02Z"
      },
      "message": "Add `-debuglogfile` option\n\nThis patch adds an option to configure the name and/or directory of the\ndebug log.\n\nThe user can specify either a relative path, in which case the path\nis relative to the data directory. They can also specify an absolute\npath to put the log anywhere else in the file system.",
      "tree": {
        "sha": "03fea2887477a894dd6e2a64389c6c16a081783e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/03fea2887477a894dd6e2a64389c6c16a081783e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "16fff802574159286e424802442551dc9eba9098",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16fff802574159286e424802442551dc9eba9098",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16fff802574159286e424802442551dc9eba9098"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 35,
      "deletions": 14
    },
    "files": [
      {
        "sha": "871a585267e4cc3f3de7c6547fe12e5da9b8f736",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a",
        "patch": "@@ -342,6 +342,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-feefilter\", strprintf(\"Tell other nodes to filter invs to us by our mempool min fee (default: %u)\", DEFAULT_FEEFILTER));\n     strUsage += HelpMessageOpt(\"-loadblock=<file>\", _(\"Imports blocks from external blk000??.dat file on startup\"));\n+    strUsage += HelpMessageOpt(\"-debuglogfile=<file>\", strprintf(_(\"Specify location of debug log file: this can be an absolute path or a path relative to the data directory (default: %s)\"), DEFAULT_DEBUGLOGFILE));\n     strUsage += HelpMessageOpt(\"-maxorphantx=<n>\", strprintf(_(\"Keep at most <n> unconnectable transactions in memory (default: %u)\"), DEFAULT_MAX_ORPHAN_TRANSACTIONS));\n     strUsage += HelpMessageOpt(\"-maxmempool=<n>\", strprintf(_(\"Keep the transaction memory pool below <n> megabytes (default: %u)\"), DEFAULT_MAX_MEMPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-mempoolexpiry=<n>\", strprintf(_(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\"), DEFAULT_MEMPOOL_EXPIRY));\n@@ -1209,8 +1210,11 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n         ShrinkDebugFile();\n     }\n \n-    if (fPrintToDebugLog)\n-        OpenDebugLog();\n+    if (fPrintToDebugLog) {\n+        if (!OpenDebugLog()) {\n+            return InitError(strprintf(\"Could not open debug log file %s\", GetDebugLogPath().string()));\n+        }\n+    }\n \n     if (!fLogTimestamps)\n         LogPrintf(\"Startup time: %s\\n\", DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", GetTime()));"
      },
      {
        "sha": "6631c236f1dc821558419eccdc807fff9823b89a",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 11,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a",
        "patch": "@@ -89,6 +89,7 @@ const int64_t nStartupTime = GetTime();\n \n const char * const BITCOIN_CONF_FILENAME = \"bitcoin.conf\";\n const char * const BITCOIN_PID_FILENAME = \"bitcoind.pid\";\n+const char * const DEFAULT_DEBUGLOGFILE = \"debug.log\";\n \n ArgsManager gArgs;\n bool fPrintToConsole = false;\n@@ -189,26 +190,40 @@ static void DebugPrintInit()\n     vMsgsBeforeOpenLog = new std::list<std::string>;\n }\n \n-void OpenDebugLog()\n+fs::path GetDebugLogPath()\n+{\n+    fs::path logfile(gArgs.GetArg(\"-debuglogfile\", DEFAULT_DEBUGLOGFILE));\n+    if (logfile.is_absolute()) {\n+        return logfile;\n+    } else {\n+        return GetDataDir() / logfile;\n+    }\n+}\n+\n+bool OpenDebugLog()\n {\n     boost::call_once(&DebugPrintInit, debugPrintInitFlag);\n     boost::mutex::scoped_lock scoped_lock(*mutexDebugLog);\n \n     assert(fileout == nullptr);\n     assert(vMsgsBeforeOpenLog);\n-    fs::path pathDebug = GetDataDir() / \"debug.log\";\n+    fs::path pathDebug = GetDebugLogPath();\n+\n     fileout = fsbridge::fopen(pathDebug, \"a\");\n-    if (fileout) {\n-        setbuf(fileout, nullptr); // unbuffered\n-        // dump buffered messages from before we opened the log\n-        while (!vMsgsBeforeOpenLog->empty()) {\n-            FileWriteStr(vMsgsBeforeOpenLog->front(), fileout);\n-            vMsgsBeforeOpenLog->pop_front();\n-        }\n+    if (!fileout) {\n+        return false;\n+    }\n+\n+    setbuf(fileout, nullptr); // unbuffered\n+    // dump buffered messages from before we opened the log\n+    while (!vMsgsBeforeOpenLog->empty()) {\n+        FileWriteStr(vMsgsBeforeOpenLog->front(), fileout);\n+        vMsgsBeforeOpenLog->pop_front();\n     }\n \n     delete vMsgsBeforeOpenLog;\n     vMsgsBeforeOpenLog = nullptr;\n+    return true;\n }\n \n struct CLogCategoryDesc\n@@ -355,7 +370,7 @@ int LogPrintStr(const std::string &str)\n             // reopen the log file, if requested\n             if (fReopenDebugLog) {\n                 fReopenDebugLog = false;\n-                fs::path pathDebug = GetDataDir() / \"debug.log\";\n+                fs::path pathDebug = GetDebugLogPath();\n                 if (fsbridge::freopen(pathDebug,\"a\",fileout) != nullptr)\n                     setbuf(fileout, nullptr); // unbuffered\n             }\n@@ -774,7 +789,7 @@ void ShrinkDebugFile()\n     // Amount of debug.log to save at end when shrinking (must fit in memory)\n     constexpr size_t RECENT_DEBUG_HISTORY_SIZE = 10 * 1000000;\n     // Scroll debug.log if it's getting too big\n-    fs::path pathLog = GetDataDir() / \"debug.log\";\n+    fs::path pathLog = GetDebugLogPath();\n     FILE* file = fsbridge::fopen(pathLog, \"r\");\n     // If debug.log file is more than 10% bigger the RECENT_DEBUG_HISTORY_SIZE\n     // trim it down by saving only the last RECENT_DEBUG_HISTORY_SIZE bytes"
      },
      {
        "sha": "6687b865d26302fe37f5ef2aa839c8154952d5a1",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a",
        "patch": "@@ -36,6 +36,7 @@ int64_t GetStartupTime();\n static const bool DEFAULT_LOGTIMEMICROS = false;\n static const bool DEFAULT_LOGIPS        = false;\n static const bool DEFAULT_LOGTIMESTAMPS = true;\n+extern const char * const DEFAULT_DEBUGLOGFILE;\n \n /** Signals for translation. */\n class CTranslationInterface\n@@ -180,7 +181,8 @@ void CreatePidFile(const fs::path &path, pid_t pid);\n #ifdef WIN32\n fs::path GetSpecialFolderPath(int nFolder, bool fCreate = true);\n #endif\n-void OpenDebugLog();\n+fs::path GetDebugLogPath();\n+bool OpenDebugLog();\n void ShrinkDebugFile();\n void runCommand(const std::string& strCommand);\n "
      }
    ]
  },
  {
    "sha": "23232422e507a90922c0870611cade5c789bb83a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzIzMjQyMmU1MDdhOTA5MjJjMDg3MDYxMWNhZGU1Yzc4OWJiODNh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-11-28T14:38:46Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-12-01T10:28:13Z"
      },
      "message": "test: Add test for `-debuglogfile`",
      "tree": {
        "sha": "51294deb312089fc618c0edef314938c51cd080b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/51294deb312089fc618c0edef314938c51cd080b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23232422e507a90922c0870611cade5c789bb83a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23232422e507a90922c0870611cade5c789bb83a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/23232422e507a90922c0870611cade5c789bb83a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23232422e507a90922c0870611cade5c789bb83a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf5f432c69418adb51f0f4a0bdbd6ba3112ee11a"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 43,
      "deletions": 0
    },
    "files": [
      {
        "sha": "24591e176f73395e22ae036b889d96191fce6a2d",
        "filename": "test/functional/feature_logging.py",
        "status": "added",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23232422e507a90922c0870611cade5c789bb83a/test/functional/feature_logging.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23232422e507a90922c0870611cade5c789bb83a/test/functional/feature_logging.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_logging.py?ref=23232422e507a90922c0870611cade5c789bb83a",
        "patch": "@@ -0,0 +1,42 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test debug logging.\"\"\"\n+\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+class LoggingTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def run_test(self):\n+        # test default log file name\n+        assert os.path.isfile(os.path.join(self.nodes[0].datadir, \"regtest\", \"debug.log\"))\n+\n+        # test alternative log file name in datadir\n+        self.restart_node(0, [\"-debuglogfile=foo.log\"])\n+        assert os.path.isfile(os.path.join(self.nodes[0].datadir, \"regtest\", \"foo.log\"))\n+\n+        # test alternative log file name outside datadir\n+        tempname = os.path.join(self.options.tmpdir, \"foo.log\")\n+        self.restart_node(0, [\"-debuglogfile=%s\" % tempname])\n+        assert os.path.isfile(tempname)\n+\n+        # check that invalid log (relative) will cause error\n+        self.stop_node(0)\n+        self.assert_start_raises_init_error(0, [\"-debuglogfile=ssdksjdf/sdasdfa/sdfsdfsfd\"],\n+                                                \"Error: Could not open debug log file\")\n+\n+        # check that invalid log (absolute) will cause error\n+        self.stop_node(0)\n+        invalidname = os.path.join(self.options.tmpdir, \"foo/foo.log\")\n+        self.assert_start_raises_init_error(0, [\"-debuglogfile=%s\" % invalidname],\n+                                               \"Error: Could not open debug log file\")\n+\n+\n+if __name__ == '__main__':\n+    LoggingTest().main()"
      },
      {
        "sha": "2202d65b5e648900a5537db5822de771236c8e72",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23232422e507a90922c0870611cade5c789bb83a/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23232422e507a90922c0870611cade5c789bb83a/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=23232422e507a90922c0870611cade5c789bb83a",
        "patch": "@@ -126,6 +126,7 @@\n     'p2p-fingerprint.py',\n     'uacomment.py',\n     'p2p-acceptblock.py',\n+    'feature_logging.py',\n ]\n \n EXTENDED_SCRIPTS = ["
      }
    ]
  },
  {
    "sha": "4158734946eb00a6944244f75a8a5b39e43c302a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MTU4NzM0OTQ2ZWIwMGE2OTQ0MjQ0Zjc1YThhNWIzOWU0M2MzMDJh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-11-28T14:43:31Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-12-01T10:28:23Z"
      },
      "message": "doc: Update release notes for `-debuglogfile`",
      "tree": {
        "sha": "694e7630854abd54557b62f7215a70b6265cf510",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/694e7630854abd54557b62f7215a70b6265cf510"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4158734946eb00a6944244f75a8a5b39e43c302a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4158734946eb00a6944244f75a8a5b39e43c302a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4158734946eb00a6944244f75a8a5b39e43c302a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4158734946eb00a6944244f75a8a5b39e43c302a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "23232422e507a90922c0870611cade5c789bb83a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23232422e507a90922c0870611cade5c789bb83a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/23232422e507a90922c0870611cade5c789bb83a"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "43009b08135666dbd02996002f25a7fb6c7dfb5c",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4158734946eb00a6944244f75a8a5b39e43c302a/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4158734946eb00a6944244f75a8a5b39e43c302a/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=4158734946eb00a6944244f75a8a5b39e43c302a",
        "patch": "@@ -90,6 +90,9 @@ Low-level RPC changes\n   * `getmininginfo`\n - The wallet RPC `getreceivedbyaddress` will return an error if called with an address not in the wallet.\n \n+Changed command-line options\n+-----------------------------\n+- `-debuglogfile=<file>` can be used to specify an alternative debug logging file.\n \n Credits\n ======="
      }
    ]
  },
  {
    "sha": "5a7c09aebf8b0229e9f320135472275d244a7a35",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTdjMDlhZWJmOGIwMjI5ZTlmMzIwMTM1NDcyMjc1ZDI0NGE3YTM1",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2017-12-01T01:49:28Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-12-01T10:28:23Z"
      },
      "message": "test: Add tests for `-debuglogfile` with subdirs",
      "tree": {
        "sha": "f2d225125200cfbdf63f8fa6674245c97ec19204",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2d225125200cfbdf63f8fa6674245c97ec19204"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a7c09aebf8b0229e9f320135472275d244a7a35",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a7c09aebf8b0229e9f320135472275d244a7a35",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a7c09aebf8b0229e9f320135472275d244a7a35",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a7c09aebf8b0229e9f320135472275d244a7a35/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4158734946eb00a6944244f75a8a5b39e43c302a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4158734946eb00a6944244f75a8a5b39e43c302a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4158734946eb00a6944244f75a8a5b39e43c302a"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 19,
      "deletions": 2
    },
    "files": [
      {
        "sha": "da4e7b0398b9356f2b47805853e1ea9aa305badd",
        "filename": "test/functional/feature_logging.py",
        "status": "modified",
        "additions": 19,
        "deletions": 2,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a7c09aebf8b0229e9f320135472275d244a7a35/test/functional/feature_logging.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a7c09aebf8b0229e9f320135472275d244a7a35/test/functional/feature_logging.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_logging.py?ref=5a7c09aebf8b0229e9f320135472275d244a7a35",
        "patch": "@@ -27,15 +27,32 @@ def run_test(self):\n         assert os.path.isfile(tempname)\n \n         # check that invalid log (relative) will cause error\n+        invdir = os.path.join(self.nodes[0].datadir, \"regtest\", \"foo\")\n+        invalidname = os.path.join(\"foo\", \"foo.log\")\n         self.stop_node(0)\n-        self.assert_start_raises_init_error(0, [\"-debuglogfile=ssdksjdf/sdasdfa/sdfsdfsfd\"],\n+        self.assert_start_raises_init_error(0, [\"-debuglogfile=%s\" % (invalidname)],\n                                                 \"Error: Could not open debug log file\")\n+        assert not os.path.isfile(os.path.join(invdir, \"foo.log\"))\n+\n+        # check that invalid log (relative) works after path exists\n+        self.stop_node(0)\n+        os.mkdir(invdir)\n+        self.start_node(0, [\"-debuglogfile=%s\" % (invalidname)])\n+        assert os.path.isfile(os.path.join(invdir, \"foo.log\"))\n \n         # check that invalid log (absolute) will cause error\n         self.stop_node(0)\n-        invalidname = os.path.join(self.options.tmpdir, \"foo/foo.log\")\n+        invdir = os.path.join(self.options.tmpdir, \"foo\")\n+        invalidname = os.path.join(invdir, \"foo.log\")\n         self.assert_start_raises_init_error(0, [\"-debuglogfile=%s\" % invalidname],\n                                                \"Error: Could not open debug log file\")\n+        assert not os.path.isfile(os.path.join(invdir, \"foo.log\"))\n+\n+        # check that invalid log (absolute) works after path exists\n+        self.stop_node(0)\n+        os.mkdir(invdir)\n+        self.start_node(0, [\"-debuglogfile=%s\" % (invalidname)])\n+        assert os.path.isfile(os.path.join(invdir, \"foo.log\"))\n \n \n if __name__ == '__main__':"
      }
    ]
  }
]