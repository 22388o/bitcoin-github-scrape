[
  {
    "sha": "ecb9741ec3067f67f595126869d0200c62064bbd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplY2I5NzQxZWMzMDY3ZjY3ZjU5NTEyNjg2OWQwMjAwYzYyMDY0YmJk",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-17T00:11:24Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-17T00:48:25Z"
      },
      "message": "Move GetAccountBalance from rpcwallet.cpp into CWallet::GetAccountBalance",
      "tree": {
        "sha": "26280ea21a8b24df1a6e99324a63a04cfd398652",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/26280ea21a8b24df1a6e99324a63a04cfd398652"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ecb9741ec3067f67f595126869d0200c62064bbd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ecb9741ec3067f67f595126869d0200c62064bbd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ecb9741ec3067f67f595126869d0200c62064bbd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ecb9741ec3067f67f595126869d0200c62064bbd/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b3e42b6d02e8d19658a9135e427ebceab5367779",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3e42b6d02e8d19658a9135e427ebceab5367779",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b3e42b6d02e8d19658a9135e427ebceab5367779"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 36,
      "deletions": 35
    },
    "files": [
      {
        "sha": "8bd1279b7f5abd9f3288f6899a56eac068a0779c",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 35,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ecb9741ec3067f67f595126869d0200c62064bbd/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ecb9741ec3067f67f595126869d0200c62064bbd/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=ecb9741ec3067f67f595126869d0200c62064bbd",
        "patch": "@@ -673,38 +673,6 @@ UniValue getreceivedbyaccount(const UniValue& params, bool fHelp)\n }\n \n \n-CAmount GetAccountBalance(CWalletDB& walletdb, const string& strAccount, int nMinDepth, const isminefilter& filter)\n-{\n-    CAmount nBalance = 0;\n-\n-    // Tally wallet transactions\n-    for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); ++it)\n-    {\n-        const CWalletTx& wtx = (*it).second;\n-        if (!CheckFinalTx(wtx) || wtx.GetBlocksToMaturity() > 0 || wtx.GetDepthInMainChain() < 0)\n-            continue;\n-\n-        CAmount nReceived, nSent, nFee;\n-        wtx.GetAccountAmounts(strAccount, nReceived, nSent, nFee, filter);\n-\n-        if (nReceived != 0 && wtx.GetDepthInMainChain() >= nMinDepth)\n-            nBalance += nReceived;\n-        nBalance -= nSent + nFee;\n-    }\n-\n-    // Tally internal accounting entries\n-    nBalance += walletdb.GetAccountCreditDebit(strAccount);\n-\n-    return nBalance;\n-}\n-\n-CAmount GetAccountBalance(const string& strAccount, int nMinDepth, const isminefilter& filter)\n-{\n-    CWalletDB walletdb(pwalletMain->strWalletFile);\n-    return GetAccountBalance(walletdb, strAccount, nMinDepth, filter);\n-}\n-\n-\n UniValue getbalance(const UniValue& params, bool fHelp)\n {\n     if (!EnsureWalletIsAvailable(fHelp))\n@@ -775,7 +743,7 @@ UniValue getbalance(const UniValue& params, bool fHelp)\n \n     string strAccount = AccountFromValue(params[0]);\n \n-    CAmount nBalance = GetAccountBalance(strAccount, nMinDepth, filter);\n+    CAmount nBalance = pwalletMain->GetAccountBalance(strAccount, nMinDepth, filter);\n \n     return ValueFromAmount(nBalance);\n }\n@@ -923,7 +891,7 @@ UniValue sendfrom(const UniValue& params, bool fHelp)\n     EnsureWalletIsUnlocked();\n \n     // Check funds\n-    CAmount nBalance = GetAccountBalance(strAccount, nMinDepth, ISMINE_SPENDABLE);\n+    CAmount nBalance = pwalletMain->GetAccountBalance(strAccount, nMinDepth, ISMINE_SPENDABLE);\n     if (nAmount > nBalance)\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, \"Account has insufficient funds\");\n \n@@ -1026,7 +994,7 @@ UniValue sendmany(const UniValue& params, bool fHelp)\n     EnsureWalletIsUnlocked();\n \n     // Check funds\n-    CAmount nBalance = GetAccountBalance(strAccount, nMinDepth, ISMINE_SPENDABLE);\n+    CAmount nBalance = pwalletMain->GetAccountBalance(strAccount, nMinDepth, ISMINE_SPENDABLE);\n     if (totalAmount > nBalance)\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, \"Account has insufficient funds\");\n "
      },
      {
        "sha": "4809e3baa6c380ca922ff755b18264837568043b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ecb9741ec3067f67f595126869d0200c62064bbd/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ecb9741ec3067f67f595126869d0200c62064bbd/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ecb9741ec3067f67f595126869d0200c62064bbd",
        "patch": "@@ -2759,6 +2759,37 @@ set< set<CTxDestination> > CWallet::GetAddressGroupings()\n     return ret;\n }\n \n+CAmount CWallet::GetAccountBalance(const std::string& strAccount, int nMinDepth, const isminefilter& filter)\n+{\n+    CWalletDB walletdb(strWalletFile);\n+    return GetAccountBalance(walletdb, strAccount, nMinDepth, filter);\n+}\n+\n+CAmount CWallet::GetAccountBalance(CWalletDB& walletdb, const std::string& strAccount, int nMinDepth, const isminefilter& filter)\n+{\n+    CAmount nBalance = 0;\n+\n+    // Tally wallet transactions\n+    for (map<uint256, CWalletTx>::iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n+    {\n+        const CWalletTx& wtx = (*it).second;\n+        if (!CheckFinalTx(wtx) || wtx.GetBlocksToMaturity() > 0 || wtx.GetDepthInMainChain() < 0)\n+            continue;\n+\n+        CAmount nReceived, nSent, nFee;\n+        wtx.GetAccountAmounts(strAccount, nReceived, nSent, nFee, filter);\n+\n+        if (nReceived != 0 && wtx.GetDepthInMainChain() >= nMinDepth)\n+            nBalance += nReceived;\n+        nBalance -= nSent + nFee;\n+    }\n+\n+    // Tally internal accounting entries\n+    nBalance += walletdb.GetAccountCreditDebit(strAccount);\n+\n+    return nBalance;\n+}\n+\n std::set<CTxDestination> CWallet::GetAccountAddresses(const std::string& strAccount) const\n {\n     LOCK(cs_wallet);"
      },
      {
        "sha": "631f2b31ef6d02d7ba459f23306678799319a8aa",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ecb9741ec3067f67f595126869d0200c62064bbd/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ecb9741ec3067f67f595126869d0200c62064bbd/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ecb9741ec3067f67f595126869d0200c62064bbd",
        "patch": "@@ -776,6 +776,8 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     std::set< std::set<CTxDestination> > GetAddressGroupings();\n     std::map<CTxDestination, CAmount> GetAddressBalances();\n \n+    CAmount GetAccountBalance(const std::string& strAccount, int nMinDepth, const isminefilter& filter);\n+    CAmount GetAccountBalance(CWalletDB& walletdb, const std::string& strAccount, int nMinDepth, const isminefilter& filter);\n     std::set<CTxDestination> GetAccountAddresses(const std::string& strAccount) const;\n \n     isminetype IsMine(const CTxIn& txin) const;"
      }
    ]
  },
  {
    "sha": "380498aba4f6aebe53a8241f163e3c7fe424b7e0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODA0OThhYmE0ZjZhZWJlNTNhODI0MWYxNjNlM2M3ZmU0MjRiN2Uw",
    "commit": {
      "author": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-17T00:31:16Z"
      },
      "committer": {
        "name": "Patrick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2016-05-17T00:48:25Z"
      },
      "message": "Move BackupWallet to CWallet::BackupWallet",
      "tree": {
        "sha": "c191b564f4bcb915de931d85f661e64045cc65e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c191b564f4bcb915de931d85f661e64045cc65e6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/380498aba4f6aebe53a8241f163e3c7fe424b7e0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/380498aba4f6aebe53a8241f163e3c7fe424b7e0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/380498aba4f6aebe53a8241f163e3c7fe424b7e0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/380498aba4f6aebe53a8241f163e3c7fe424b7e0/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ecb9741ec3067f67f595126869d0200c62064bbd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ecb9741ec3067f67f595126869d0200c62064bbd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ecb9741ec3067f67f595126869d0200c62064bbd"
      }
    ],
    "stats": {
      "total": 87,
      "additions": 44,
      "deletions": 43
    },
    "files": [
      {
        "sha": "3867310cd68572471ac1a90309d8f919f45259df",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/380498aba4f6aebe53a8241f163e3c7fe424b7e0/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/380498aba4f6aebe53a8241f163e3c7fe424b7e0/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=380498aba4f6aebe53a8241f163e3c7fe424b7e0",
        "patch": "@@ -447,7 +447,7 @@ bool WalletModel::changePassphrase(const SecureString &oldPass, const SecureStri\n \n bool WalletModel::backupWallet(const QString &filename)\n {\n-    return BackupWallet(*wallet, filename.toLocal8Bit().data());\n+    return wallet->BackupWallet(filename.toLocal8Bit().data());\n }\n \n // Handlers for core signals"
      },
      {
        "sha": "f11f2991415870b872213b34118e894223ada07f",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/380498aba4f6aebe53a8241f163e3c7fe424b7e0/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/380498aba4f6aebe53a8241f163e3c7fe424b7e0/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=380498aba4f6aebe53a8241f163e3c7fe424b7e0",
        "patch": "@@ -1804,7 +1804,7 @@ UniValue backupwallet(const UniValue& params, bool fHelp)\n     LOCK2(cs_main, pwalletMain->cs_wallet);\n \n     string strDest = params[0].get_str();\n-    if (!BackupWallet(*pwalletMain, strDest))\n+    if (!pwalletMain->BackupWallet(strDest))\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Error: Wallet backup failed!\");\n \n     return NullUniValue;"
      },
      {
        "sha": "5d1a431190954ad1cc3418c463368489560b6694",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/380498aba4f6aebe53a8241f163e3c7fe424b7e0/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/380498aba4f6aebe53a8241f163e3c7fe424b7e0/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=380498aba4f6aebe53a8241f163e3c7fe424b7e0",
        "patch": "@@ -3283,6 +3283,46 @@ bool CWallet::ParameterInteraction()\n     return true;\n }\n \n+bool CWallet::BackupWallet(const std::string& strDest)\n+{\n+    if (!fFileBacked)\n+        return false;\n+    while (true)\n+    {\n+        {\n+            LOCK(bitdb.cs_db);\n+            if (!bitdb.mapFileUseCount.count(strWalletFile) || bitdb.mapFileUseCount[strWalletFile] == 0)\n+            {\n+                // Flush log data to the dat file\n+                bitdb.CloseDb(strWalletFile);\n+                bitdb.CheckpointLSN(strWalletFile);\n+                bitdb.mapFileUseCount.erase(strWalletFile);\n+\n+                // Copy wallet file\n+                boost::filesystem::path pathSrc = GetDataDir() / strWalletFile;\n+                boost::filesystem::path pathDest(strDest);\n+                if (boost::filesystem::is_directory(pathDest))\n+                    pathDest /= strWalletFile;\n+\n+                try {\n+#if BOOST_VERSION >= 104000\n+                    boost::filesystem::copy_file(pathSrc, pathDest, boost::filesystem::copy_option::overwrite_if_exists);\n+#else\n+                    boost::filesystem::copy_file(pathSrc, pathDest);\n+#endif\n+                    LogPrintf(\"copied %s to %s\\n\", strWalletFile, pathDest.string());\n+                    return true;\n+                } catch (const boost::filesystem::filesystem_error& e) {\n+                    LogPrintf(\"error copying %s to %s - %s\\n\", strWalletFile, pathDest.string(), e.what());\n+                    return false;\n+                }\n+            }\n+        }\n+        MilliSleep(100);\n+    }\n+    return false;\n+}\n+\n CKeyPool::CKeyPool()\n {\n     nTime = GetTime();"
      },
      {
        "sha": "b2180a5a26bb8b852d015083786c6169d71263f6",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/380498aba4f6aebe53a8241f163e3c7fe424b7e0/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/380498aba4f6aebe53a8241f163e3c7fe424b7e0/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=380498aba4f6aebe53a8241f163e3c7fe424b7e0",
        "patch": "@@ -885,6 +885,8 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n \n     /* Wallets parameter interaction */\n     static bool ParameterInteraction();\n+\n+    bool BackupWallet(const std::string& strDest);\n };\n \n /** A key allocated from the key pool. */"
      },
      {
        "sha": "b5037c9a65abf989f3843bcb89962353aead0674",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 40,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/380498aba4f6aebe53a8241f163e3c7fe424b7e0/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/380498aba4f6aebe53a8241f163e3c7fe424b7e0/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=380498aba4f6aebe53a8241f163e3c7fe424b7e0",
        "patch": "@@ -903,46 +903,6 @@ void ThreadFlushWalletDB(const string& strFile)\n     }\n }\n \n-bool BackupWallet(const CWallet& wallet, const string& strDest)\n-{\n-    if (!wallet.fFileBacked)\n-        return false;\n-    while (true)\n-    {\n-        {\n-            LOCK(bitdb.cs_db);\n-            if (!bitdb.mapFileUseCount.count(wallet.strWalletFile) || bitdb.mapFileUseCount[wallet.strWalletFile] == 0)\n-            {\n-                // Flush log data to the dat file\n-                bitdb.CloseDb(wallet.strWalletFile);\n-                bitdb.CheckpointLSN(wallet.strWalletFile);\n-                bitdb.mapFileUseCount.erase(wallet.strWalletFile);\n-\n-                // Copy wallet file\n-                boost::filesystem::path pathSrc = GetDataDir() / wallet.strWalletFile;\n-                boost::filesystem::path pathDest(strDest);\n-                if (boost::filesystem::is_directory(pathDest))\n-                    pathDest /= wallet.strWalletFile;\n-\n-                try {\n-#if BOOST_VERSION >= 104000\n-                    boost::filesystem::copy_file(pathSrc, pathDest, boost::filesystem::copy_option::overwrite_if_exists);\n-#else\n-                    boost::filesystem::copy_file(pathSrc, pathDest);\n-#endif\n-                    LogPrintf(\"copied %s to %s\\n\", wallet.strWalletFile, pathDest.string());\n-                    return true;\n-                } catch (const boost::filesystem::filesystem_error& e) {\n-                    LogPrintf(\"error copying %s to %s - %s\\n\", wallet.strWalletFile, pathDest.string(), e.what());\n-                    return false;\n-                }\n-            }\n-        }\n-        MilliSleep(100);\n-    }\n-    return false;\n-}\n-\n //\n // Try to (very carefully!) recover wallet file if there is a problem.\n //"
      },
      {
        "sha": "00c10ea70f03b0b6b3bf23ccc6b2311b9605e895",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/380498aba4f6aebe53a8241f163e3c7fe424b7e0/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/380498aba4f6aebe53a8241f163e3c7fe424b7e0/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=380498aba4f6aebe53a8241f163e3c7fe424b7e0",
        "patch": "@@ -141,7 +141,6 @@ class CWalletDB : public CDB\n     bool WriteAccountingEntry(const uint64_t nAccEntryNum, const CAccountingEntry& acentry);\n };\n \n-bool BackupWallet(const CWallet& wallet, const std::string& strDest);\n void ThreadFlushWalletDB(const std::string& strFile);\n \n #endif // BITCOIN_WALLET_WALLETDB_H"
      }
    ]
  }
]