[
  {
    "sha": "1e1e8952761bc4afe1cdd643a81715c736d81144",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTFlODk1Mjc2MWJjNGFmZTFjZGQ2NDNhODE3MTVjNzM2ZDgxMTQ0",
    "commit": {
      "author": {
        "name": "zenosage",
        "email": "zenosage@protonmail.com",
        "date": "2019-05-04T17:30:13Z"
      },
      "committer": {
        "name": "zenosage",
        "email": "zenosage@protonmail.com",
        "date": "2019-05-08T23:34:12Z"
      },
      "message": "check bad-prevblk is right error for invalid descendants",
      "tree": {
        "sha": "e2b63b25d7d2399dda7840a40d6f920d76aee757",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2b63b25d7d2399dda7840a40d6f920d76aee757"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e1e8952761bc4afe1cdd643a81715c736d81144",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e1e8952761bc4afe1cdd643a81715c736d81144",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e1e8952761bc4afe1cdd643a81715c736d81144",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e1e8952761bc4afe1cdd643a81715c736d81144/comments",
    "author": {
      "login": "zenosage",
      "id": 47063555,
      "node_id": "MDQ6VXNlcjQ3MDYzNTU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/47063555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zenosage",
      "html_url": "https://github.com/zenosage",
      "followers_url": "https://api.github.com/users/zenosage/followers",
      "following_url": "https://api.github.com/users/zenosage/following{/other_user}",
      "gists_url": "https://api.github.com/users/zenosage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zenosage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zenosage/subscriptions",
      "organizations_url": "https://api.github.com/users/zenosage/orgs",
      "repos_url": "https://api.github.com/users/zenosage/repos",
      "events_url": "https://api.github.com/users/zenosage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zenosage/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "zenosage",
      "id": 47063555,
      "node_id": "MDQ6VXNlcjQ3MDYzNTU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/47063555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zenosage",
      "html_url": "https://github.com/zenosage",
      "followers_url": "https://api.github.com/users/zenosage/followers",
      "following_url": "https://api.github.com/users/zenosage/following{/other_user}",
      "gists_url": "https://api.github.com/users/zenosage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zenosage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zenosage/subscriptions",
      "organizations_url": "https://api.github.com/users/zenosage/orgs",
      "repos_url": "https://api.github.com/users/zenosage/repos",
      "events_url": "https://api.github.com/users/zenosage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zenosage/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3632143ebbfdd4888571db800c8ee8d684eec57b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3632143ebbfdd4888571db800c8ee8d684eec57b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3632143ebbfdd4888571db800c8ee8d684eec57b"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "042bdbbe1f322fd67863dd350444171ac2aae3a8",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e1e8952761bc4afe1cdd643a81715c736d81144/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e1e8952761bc4afe1cdd643a81715c736d81144/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=1e1e8952761bc4afe1cdd643a81715c736d81144",
        "patch": "@@ -3437,7 +3437,7 @@ bool CChainState::AcceptBlockHeader(const CBlockHeader& block, CValidationState&\n                         setDirtyBlockIndex.insert(invalid_walk);\n                         invalid_walk = invalid_walk->pprev;\n                     }\n-                    return state.Invalid(ValidationInvalidReason::BLOCK_INVALID_PREV, error(\"%s: prev block invalid\", __func__), REJECT_INVALID, \"bad-prevblk\");\n+                    return state.Invalid(ValidationInvalidReason::BLOCK_INVALID_PREV, error(\"%s: prev block invalid\", __func__), REJECT_INVALID, \"bad-prevblk-desc\");\n                 }\n             }\n         }"
      },
      {
        "sha": "7a02aafbad615383c0833256381f7be9cf946c21",
        "filename": "test/functional/p2p_unrequested_blocks.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e1e8952761bc4afe1cdd643a81715c736d81144/test/functional/p2p_unrequested_blocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e1e8952761bc4afe1cdd643a81715c736d81144/test/functional/p2p_unrequested_blocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_unrequested_blocks.py?ref=1e1e8952761bc4afe1cdd643a81715c736d81144",
        "patch": "@@ -301,6 +301,7 @@ def run_test(self):\n         block_293.solve()\n         headers_message = msg_headers()\n         headers_message.headers.append(CBlockHeader(block_293))\n+        assert_raises_rpc_error(-25, 'bad-prevblk-desc', lambda: self.nodes[0].submitheader(CBlockHeader(block_293).serialize().hex()))\n         test_node.send_message(headers_message)\n         test_node.wait_for_disconnect()\n "
      }
    ]
  }
]