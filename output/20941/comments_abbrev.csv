jarolrod,2021-01-15 14:41:18,"updated fa614af69ac72b5250d3408e4c56f083f3ab6254 -> 35bc72a1bcc6c7bb7618803490fc7957d070dc02\n\nImplemented @jonatack suggestions",https://github.com/bitcoin/bitcoin/pull/20941#issuecomment-760980618,760980618,
jarolrod,2021-01-15 18:33:46,"> NACK, as i understand it, it is an unnecessary note, as discussed earlier, to avoid unnecessary notes.\n\nSee: #5638\n\nYes, it would be more useful to change the code so that the function returns a `{'in_chain': bool, 'in_mempool': bool, 'tx_hash': hash} structure`, but an [argument](https://github.com/bitcoin/bitcoin/issues/5638#issuecomment-69590222) is made against that. It's worthwhile ",https://github.com/bitcoin/bitcoin/pull/20941#issuecomment-761111327,761111327,
jonatack,2021-01-15 18:37:29,"Yes, I did not mean to suggest that adding helpful documentation was a bad idea.",https://github.com/bitcoin/bitcoin/pull/20941#issuecomment-761113090,761113090,
jonatack,2021-01-15 18:39:45,ACK modulo missing full stop line 822 (and/or taking Marco's suggestion or the one at https://github.com/bitcoin/bitcoin/pull/20941#discussion_r558504418 or your proposed improvement),https://github.com/bitcoin/bitcoin/pull/20941#issuecomment-761114196,761114196,
jarolrod,2021-01-15 21:52:50,"updated  35bc72a ->  74d23bf\n\nAddressed the issue of wording around the exception by combining both suggestions from @jonatack and @MarcoFalke ",https://github.com/bitcoin/bitcoin/pull/20941#issuecomment-761218103,761218103,
MarcoFalke,2021-02-01 10:02:17,"I'd still prefer to document exceptions/return codes/error values better, but that might be a task to solve for all RPCs",https://github.com/bitcoin/bitcoin/pull/20941#issuecomment-770733845,770733845,
jonatack,2021-01-15 10:36:27,"suggestion to improve, tighten this up, and remove  ""Note that"" and ""NOTE:"" while grouping together those two messages and keeping the related RPCs sentence at the end\n```diff\n+++ b/src/rpc/rawtransaction.cpp\n@@ -816,12 +816,11 @@ static RPCHelpMan sendrawtransaction()\n {\n     return RPCHelpMan{""sendrawtransaction"",\n                 ""\nSubmit a raw transaction (serialized, hex-encoded)",https://github.com/bitcoin/bitcoin/pull/20941#discussion_r558219697,558219697,src/rpc/rawtransaction.cpp
jonatack,2021-01-15 10:39:23,"which would change the help from\n```\nSubmit a raw transaction (serialized, hex-encoded) to local node and network.\n\nNote that the transaction will be sent unconditionally to all peers, so using this\nfor manual rebroadcast may degrade privacy by leaking the transaction's origin, as\nnodes will normally not rebroadcast non-wallet transactions already in their mempool.\n\nAlso see create",https://github.com/bitcoin/bitcoin/pull/20941#discussion_r558221331,558221331,src/rpc/rawtransaction.cpp
jarolrod,2021-01-15 14:42:10,"addressed in 35bc72a1bcc6c7bb7618803490fc7957d070dc02\nThanks, this is much better :)",https://github.com/bitcoin/bitcoin/pull/20941#discussion_r558350851,558350851,src/rpc/rawtransaction.cpp
MarcoFalke,2021-01-15 14:44:39,This makes it sound like the only exception that can be thrown,https://github.com/bitcoin/bitcoin/pull/20941#discussion_r558352460,558352460,src/rpc/rawtransaction.cpp
jarolrod,2021-01-15 15:03:19,"We can either document every exception that can be thrown or revert back to specifying that this is a note.\n```suggestion\n                ""\nNOTE: an RPC_TRANSACTION_ALREADY_IN_CHAIN will be raised if the transaction already exists in a block\n""\n```",https://github.com/bitcoin/bitcoin/pull/20941#discussion_r558365139,558365139,src/rpc/rawtransaction.cpp
jonatack,2021-01-15 15:13:56,"I would avoid both adding ""note this""/""note that"" (IIRC I added the first note but have since seen review feedback to avoid needless ""note: ""s, which I agree with) and listing all the exceptions. Is there a concrete suggestion how this change can be improved?",https://github.com/bitcoin/bitcoin/pull/20941#discussion_r558372105,558372105,src/rpc/rawtransaction.cpp
MarcoFalke,2021-01-15 15:19:39,"""This may throw if the transaction couldn't be added to the mempool""",https://github.com/bitcoin/bitcoin/pull/20941#discussion_r558375794,558375794,src/rpc/rawtransaction.cpp
jarolrod,2021-01-15 18:15:15,"> ""This may throw if the transaction couldn't be added to the mempool""\n\nThat still sounds like it's the only exception which may be thrown. It also sounds like it's the only reason that a transaction fails to enter the mempool.",https://github.com/bitcoin/bitcoin/pull/20941#discussion_r558485512,558485512,src/rpc/rawtransaction.cpp
jonatack,2021-01-15 18:29:43,As-is seems more explicit but I don't have a strong opinion regarding it versus Marco's suggestion (thanks for the proposal!) I think they are both an improvement and don't see the implication that this the only exception.￼￼,https://github.com/bitcoin/bitcoin/pull/20941#discussion_r558493149,558493149,src/rpc/rawtransaction.cpp
jonatack,2021-01-15 18:38:33,"```suggestion\n                ""\nRPC_TRANSACTION_ALREADY_IN_CHAIN will be raised if the transaction already exists in a block.\n""\n```",https://github.com/bitcoin/bitcoin/pull/20941#discussion_r558498728,558498728,src/rpc/rawtransaction.cpp
jonatack,2021-01-15 18:45:07,"Maybe:\n\n```\nThis will throw a specific exception, RPC_TRANSACTION_ALREADY_IN_CHAIN, if the transaction cannot be added to the mempool.\n```\n",https://github.com/bitcoin/bitcoin/pull/20941#discussion_r558504418,558504418,src/rpc/rawtransaction.cpp
jarolrod,2021-01-15 21:53:41,addressed in  74d23bf,https://github.com/bitcoin/bitcoin/pull/20941#discussion_r558612430,558612430,src/rpc/rawtransaction.cpp
jarolrod,2021-01-15 21:53:52,addressed in  74d23bf,https://github.com/bitcoin/bitcoin/pull/20941#discussion_r558612521,558612521,src/rpc/rawtransaction.cpp
