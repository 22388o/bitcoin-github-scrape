TheBlueMatt,2017-01-21T15:14:15Z,"(fixes #9212)\n\nOn January 21, 2017 1:54:26 AM EST, Cory Fields <notifications@github.com> wrote:\n>First change is from @TheBlueMatt.\n>\n>https://github.com/bitcoin/bitcoin/pull/8708/commits/462965635e8bf9c2754c27946f8b05560b8ddd84\n>added assertions to ensure that we never send out any messages before\n>version negotiation has completed, but a few issues remain.\n>\n>In cases where the version",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-274267476,274267476,
theuni,2017-01-21T18:47:53Z,"@gmaxwell ACK all of those, will fix.",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-274280245,274280245,
theuni,2017-01-24T00:56:27Z,"Ok, I think this is solid now.",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-274668077,274668077,
morcos,2017-01-24T15:46:42Z,"tenuous utACK \nRead through it and makes sense to me, but not too familiar with this code.\n\nI'm also not very familiar with feeler connections but would it make sense to move the feeler check before the fSuccessfullyConnected, so that we set fDisconnect first, and then won't send anything to the feeler peers?   Are we meant to be sending addr and GetAddr messages to the feeler peers?\n",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-274841920,274841920,
gmaxwell,2017-01-24T18:26:52Z,@morcos yes we should send addr to feelers-- their purpose is to improve knowledge about the node addresses all around.  I agree we should probably set Successfully after the disconnect flag is set for them.,https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-274891693,274891693,
TheBlueMatt,2017-01-25T00:13:35Z,"Then we can catch it with our nVersion != 0 check :)\n\nOn January 24, 2017 6:47:38 PM EST, Gregory Maxwell <notifications@github.com> wrote:\n>gmaxwell commented on this pull request.\n>\n>\n>\n>> -        if((pfrom->nServices & NODE_WITNESS))\n>+        pfrom->nServices = nServices;\n>+        pfrom->addrLocal = addrMe;\n>+        pfrom->strSubVer = strSubVer;\n>+        pfrom->cleanSubVer = San",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-274981071,274981071,
gmaxwell,2017-01-25T06:29:22Z,ACK a79e00b8b251ab3744bd2f1bd48f265c1a7d7912,https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-275029967,275029967,
laanwj,2017-01-26T09:02:52Z,"> ACK a79e00b8b251ab3744bd2f1bd48f265c1a7d7912\n\nThat commit is not part of the repository :)",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-275338612,275338612,
gmaxwell,2017-01-26T09:51:47Z,It's the head I reviewed and tested however. :P (I wondered if someone would notice.)  (it sounds like cfields intends to change this more),https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-275348198,275348198,
theuni,2017-01-26T20:21:47Z,"Fixed up as requested. fSuccessfullyConnected is set last thing when processing VERACK so that we push out SENDCMPCT/SENDHEADERS first.\n\nWe will now avoid doing anything in SendMessages() until the handshake is complete.\n\n@morcos That fixes the feeler issue as well, since after VERSION, no more messages will be processed, and nothing else will go out.\n\n@gmaxwell VERACK can't be seen be",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-275502313,275502313,
gmaxwell,2017-01-27T20:25:49Z,utACK. Will test. You should consider making a brief release note that some broken P2P implementations (that never send VERACK) may stop working.,https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-275765719,275765719,
TheBlueMatt,2017-01-28T17:29:33Z,"Other than my general objection to increased use of auto in the codebase (which I'll probably go through and get upset and rip out soon enough), utACK 47134d7de2ae57fbcb0715922094eca624ccb0fb",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-275861635,275861635,
TheBlueMatt,2017-01-28T18:28:49Z,"I'm much happier reviewing a massive pile of sed-generated diff than having auto everywhere, but maybe I'm alone... I'll bring it up at the next meeting (because we didn't /just/ have a discussion of style or anything...).\n\nOn January 28, 2017 1:01:29 PM EST, Cory Fields <notifications@github.com> wrote:\n>theuni commented on this pull request.\n>\n>\n>\n>> @@ -213,36 +213,43 @@ class CConnman\n",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-275865407,275865407,
MarcoFalke,2017-01-30T12:09:13Z,Needs rebase after #9626,https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-276047353,276047353,
sdaftuar,2017-02-01T16:45:55Z,"I'll echo the tenuous utACK (though this needs to be rebased). I spent some time trying to find ways to break this code and wasn't able to come up with anything interesting.  I do think that we should remove the asserts for the 0.14 release, but I'm indifferent to whether we keep them around in master.",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-276710466,276710466,
TheBlueMatt,2017-02-01T16:54:44Z,"Yes, I'd agree with @sdaftuar and remove the assertion in the 0.14 branch, but leave it in in master.",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-276713171,276713171,
laanwj,2017-02-02T08:50:35Z,"I really hate the assertions in the net code. They can and will lead to remotely-triggered DoS attacks. It's just not acceptable to do debugging in this way, sorry.\n\nThey should be replaced with logging, or maybe an option 'stop on network errors' that needs to be enabled explicitly while debugging network code. But this should never be the default behavior.",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-276900251,276900251,
TheBlueMatt,2017-02-02T14:00:31Z,"We use assertions in many places to ensure our logic is functioning - here we're asserting that the peer we're accessing has completed the handshake, a pretty important cleanup IMO. Indeed, this assertion is somewhat shit due to the half-cleaned-up state of net at the moment, but I don't think that means we should remove the assertion in 0.15. Let's remove it after the branch and open an issue to ",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-276964566,276964566,
jtimon,2017-02-02T14:37:12Z,"I see the way we use asserts as equivalent to exceptions, but making sure\nthey cannot be catched. Perhas activating them optionally as wumpus\nsuggests is interesting.\nI really don't understand the reasoning for doing this in 0.14 but not in\nmaster. If it needs to be revisited, fine,  it can be done after this\nchange.  I really dislike that version branches differ from master more\nthan they n",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-276974228,276974228,
TheBlueMatt,2017-02-02T15:03:30Z,"@jtimon the reason for not doing it on master is that the assert, if it fires, actually is an indication of a bug. On the flip side, because of the relative youth of this code (and the fact that such bugs are long-standing issues, not regressions), its probably better to not ship something with the assert in just yet. I dont see any problem having master and 0.14 differ by one line...",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-276981493,276981493,
laanwj,2017-02-02T15:10:45Z,"> We use assertions in many places to ensure our logic is functioning\n\nIn places where there is no (direct) interface with the outside world it's somewhat more acceptable. At least if there'd be crashes it is not remotely triggerable. It's assertions in net code that I have a problem with.\n\n> Let's remove it after the branch and open an issue to revisit before 0.15 release.\n\nWhat I am ",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-276983534,276983534,
TheBlueMatt,2017-02-02T16:08:05Z,"@laanwj ok, fair... @sdaftuar points out that its probably time to rethink our assertion infrastructure - get more agressive with assertions when not running a production build and get weaker on a few of them when doing so (and probably dont use assert(), since it is rarely what we want, but maybe log such errors in production with a big fat ""PLEASE REPORT THIS"" tag).",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-277000520,277000520,
theuni,2017-02-02T16:35:02Z,"(Back in town, sorry for slow response)\n\nI agree with removing the assertion. It probably never should have been there, as it introduces the possibility of remote crashers. I must admit that I'm glad that it forced us to fully address this problem, though.\n\nI'll rebase and turn the assertion into a log.",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-277008793,277008793,
laanwj,2017-02-03T14:37:49Z,utACK 08bb6f4,https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-277262016,277262016,
TheBlueMatt,2017-02-03T16:56:14Z,utACK 08bb6f4ed48359aedd869450b99799b9c734084b,https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-277301235,277301235,
gmaxwell,2017-02-03T23:38:51Z,ACK 08bb6f4,https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-277392746,277392746,
sipa,2017-02-04T00:39:48Z,"utACK 08bb6f4ed48359aedd869450b99799b9c734084b, testing with `-fsanitize`s.",https://github.com/bitcoin/bitcoin/pull/9609#issuecomment-277401355,277401355,
gmaxwell,2017-01-21T18:36:08Z,This block no longer accesses a cs_filter protected variable. The lock and braces should be removed.,https://github.com/bitcoin/bitcoin/pull/9609#discussion_r97203764,97203764,src/net_processing.cpp
gmaxwell,2017-01-21T18:36:31Z,This was protected by cs_filter above.,https://github.com/bitcoin/bitcoin/pull/9609#discussion_r97203772,97203772,src/net_processing.cpp
gmaxwell,2017-01-21T18:44:08Z,nVersion should be made atomic.,https://github.com/bitcoin/bitcoin/pull/9609#discussion_r97203893,97203893,src/net_processing.cpp
gmaxwell,2017-01-22T08:00:41Z,If we set succesfully connected and nversion before sending VERACK is it possible that some other thread will send some other message to this peer before VERACK has been sent?,https://github.com/bitcoin/bitcoin/pull/9609#discussion_r97215932,97215932,src/net_processing.cpp
theuni,2017-01-22T18:10:42Z,"Yes, and that's ok. It's seen on the current network.\n\nWhat's not ok is that messages before VERACK could possibly end up being sent with the upgraded version. So i suppose setting the sendversion should stay as-is, after the VERACK.",https://github.com/bitcoin/bitcoin/pull/9609#discussion_r97229279,97229279,src/net_processing.cpp
theuni,2017-01-22T18:52:55Z,"Er, that doesn't work, it just reintroduces the problem that we're attempting to solve.\n\nA mutex for a group of these attributes may be unavoidable. I'll poke at it some more.",https://github.com/bitcoin/bitcoin/pull/9609#discussion_r97230197,97230197,src/net_processing.cpp
gmaxwell,2017-01-23T07:09:55Z,"the setsetversion can be run on based on nversion variable. So there is no reason it can't be done early with the nversion set later, as far as I can tell. ",https://github.com/bitcoin/bitcoin/pull/9609#discussion_r97261986,97261986,src/net_processing.cpp
TheBlueMatt,2017-01-24T22:10:57Z,Can we just remove unused functions instead of fixing them?,https://github.com/bitcoin/bitcoin/pull/9609#discussion_r97663736,97663736,src/net.h
TheBlueMatt,2017-01-24T22:54:28Z,"If we're gonna be using fSuccessfullyConnected (which I think we should), can we set it in VERACK instead and use it in SendMessages? I looked over where we check nVersion for ""are we connected"" and it all looks like that would leave it at just ProcessMessage, which is right.\n\nThis would mean we at least dont do anything but respond to messages if we haven't gotten the peer's verack yet.",https://github.com/bitcoin/bitcoin/pull/9609#discussion_r97672066,97672066,src/net_processing.cpp
gmaxwell,2017-01-24T23:47:34Z,what if someone sends us a VERACK without anything else having happened? :P,https://github.com/bitcoin/bitcoin/pull/9609#discussion_r97680263,97680263,src/net_processing.cpp
theuni,2017-01-25T00:46:36Z,"@TheBlueMatt That disagrees with my intended future usage of fSuccessfullyConnected (net layer only), but I agree that it makes more sense that way for now. I'll make that change, and we can discuss further post-0.14.",https://github.com/bitcoin/bitcoin/pull/9609#discussion_r97687848,97687848,src/net_processing.cpp
TheBlueMatt,2017-01-28T17:22:26Z,"I know it was already there, but can we remove the auto here? It doesnt save any space, and during review I always find myself thinking ""OK, gonna go grep for CNode to find every use of it in the codebase"", which our ever-increasing use of auto breaks.",https://github.com/bitcoin/bitcoin/pull/9609#discussion_r98335218,98335218,src/net.h
theuni,2017-01-28T18:01:25Z,"It's conducive to large type changes, though. With this one in particular, when CNode becomes a shared_ptr\<CNode\>, this code requires no changes.\n\nFor exactly that reason, I actually have local changes which switch _all_ loop operations on vNodes to ```for (auto&& node : vNodes)``` :\",https://github.com/bitcoin/bitcoin/pull/9609#discussion_r98335957,98335957,src/net.h
gmaxwell,2017-01-28T23:03:33Z,Why isn't this !NodeFullyConnected(pto) ? ,https://github.com/bitcoin/bitcoin/pull/9609#discussion_r98341109,98341109,src/net_processing.cpp
TheBlueMatt,2017-01-29T00:21:15Z,"I believe because Cory wanted NodeFullyConnected to be a net-specific thing, and not a net_processing thing...its all a bit intermixed at the moment but I believe @theuni wants to fix it up soon.",https://github.com/bitcoin/bitcoin/pull/9609#discussion_r98342231,98342231,src/net_processing.cpp
theuni,2017-01-29T00:58:26Z,"Yep, exactly that. I have no problem with changing it for the time-being though if you think it'd be more clear.",https://github.com/bitcoin/bitcoin/pull/9609#discussion_r98342602,98342602,src/net_processing.cpp
gmaxwell,2017-02-02T19:24:13Z,"I don't care, just looked like an obvious omission.",https://github.com/bitcoin/bitcoin/pull/9609#discussion_r99199043,99199043,src/net_processing.cpp
rebroad,2017-02-10T09:57:51Z,this has been in the code forever... is it really needing to be changed now?,https://github.com/bitcoin/bitcoin/pull/9609#discussion_r100502738,100502738,src/net_processing.cpp
laanwj,2017-02-10T10:03:23Z,"Unfortunately, many of the race conditions have been in the code forever and are only now being discovered and solved.",https://github.com/bitcoin/bitcoin/pull/9609#discussion_r100503628,100503628,src/net_processing.cpp
