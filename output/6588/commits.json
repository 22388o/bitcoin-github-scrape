[
  {
    "sha": "9524c4d35cb6ec4bd7becf1d938d21c536669d1f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTI0YzRkMzVjYjZlYzRiZDdiZWNmMWQ5MzhkMjFjNTM2NjY5ZDFm",
    "commit": {
      "author": {
        "name": "Tom Harding",
        "email": "tomh@thinlink.com",
        "date": "2015-08-24T21:02:24Z"
      },
      "committer": {
        "name": "Tom Harding",
        "email": "tomh@thinlink.com",
        "date": "2015-09-03T17:16:59Z"
      },
      "message": "In (strCommand == \"tx\"), return if AlreadyHave()\n\nThe main effect is to exit processing for recently-rejected hashes,\nin case they are pushed to us without prior advertisement.  This\nbehavior was seen in the wild.\n\nAn additional effect is to do early checks for mempool or mapOrphan\nexistence.  No logging or nDoS tracking is needed for failures of\nthese checks.",
      "tree": {
        "sha": "43a091af6800d6e88828f0abb04c35cb34046192",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43a091af6800d6e88828f0abb04c35cb34046192"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9524c4d35cb6ec4bd7becf1d938d21c536669d1f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9524c4d35cb6ec4bd7becf1d938d21c536669d1f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9524c4d35cb6ec4bd7becf1d938d21c536669d1f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9524c4d35cb6ec4bd7becf1d938d21c536669d1f/comments",
    "author": {
      "login": "dgenr8",
      "id": 4284124,
      "node_id": "MDQ6VXNlcjQyODQxMjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgenr8",
      "html_url": "https://github.com/dgenr8",
      "followers_url": "https://api.github.com/users/dgenr8/followers",
      "following_url": "https://api.github.com/users/dgenr8/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgenr8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgenr8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
      "organizations_url": "https://api.github.com/users/dgenr8/orgs",
      "repos_url": "https://api.github.com/users/dgenr8/repos",
      "events_url": "https://api.github.com/users/dgenr8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgenr8/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dgenr8",
      "id": 4284124,
      "node_id": "MDQ6VXNlcjQyODQxMjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4284124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dgenr8",
      "html_url": "https://github.com/dgenr8",
      "followers_url": "https://api.github.com/users/dgenr8/followers",
      "following_url": "https://api.github.com/users/dgenr8/following{/other_user}",
      "gists_url": "https://api.github.com/users/dgenr8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dgenr8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dgenr8/subscriptions",
      "organizations_url": "https://api.github.com/users/dgenr8/orgs",
      "repos_url": "https://api.github.com/users/dgenr8/repos",
      "events_url": "https://api.github.com/users/dgenr8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dgenr8/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da9beb288d2ee35b9c70513dd18f220b2dc32f16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da9beb288d2ee35b9c70513dd18f220b2dc32f16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da9beb288d2ee35b9c70513dd18f220b2dc32f16"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "6d07f83ce5cd0a3cbdf659ddc356e8f99930ad43",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9524c4d35cb6ec4bd7becf1d938d21c536669d1f/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9524c4d35cb6ec4bd7becf1d938d21c536669d1f/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=9524c4d35cb6ec4bd7becf1d938d21c536669d1f",
        "patch": "@@ -4248,6 +4248,10 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n         mapAlreadyAskedFor.erase(inv);\n \n+        // Check for recently rejected (and do other quick existence checks)\n+        if (AlreadyHave(inv))\n+            return true;\n+\n         if (AcceptToMemoryPool(mempool, state, tx, true, &fMissingInputs))\n         {\n             mempool.check(pcoinsTip);\n@@ -4323,13 +4327,9 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             if (nEvicted > 0)\n                 LogPrint(\"mempool\", \"mapOrphan overflow, removed %u tx\\n\", nEvicted);\n         } else {\n-            // AcceptToMemoryPool() returned false, possibly because the tx is\n-            // already in the mempool; if the tx isn't in the mempool that\n-            // means it was rejected and we shouldn't ask for it again.\n-            if (!mempool.exists(tx.GetHash())) {\n-                assert(recentRejects);\n-                recentRejects->insert(tx.GetHash());\n-            }\n+            assert(recentRejects);\n+            recentRejects->insert(tx.GetHash());\n+\n             if (pfrom->fWhitelisted) {\n                 // Always relay transactions received from whitelisted peers, even\n                 // if they were rejected from the mempool, allowing the node to"
      }
    ]
  }
]