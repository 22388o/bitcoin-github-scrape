luke-jr,2019-04-11T18:18:56Z,NACK Rust. There's no reasonable way to bootstrap a Rust compiler without using trusted third party binaries.,https://github.com/bitcoin/bitcoin/pull/15798#issuecomment-482239713,482239713,
theuni,2019-04-11T18:21:04Z,@luke-jr Objection noted.,https://github.com/bitcoin/bitcoin/pull/15798#issuecomment-482240500,482240500,
MarcoFalke,2019-04-11T18:53:58Z,@luke-jr So this is insufficient: https://www.gnu.org/software/guix/blog/2018/bootstrapping-rust/ ?,https://github.com/bitcoin/bitcoin/pull/15798#issuecomment-482251889,482251889,
DrahtBot,2019-04-11T18:55:21Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/15798#issuecomment-482252321,482252321,
theuni,2019-04-11T21:12:13Z,"@MarcoFalke As noted in the summary, for now, gitian requires net access to download the dependencies. That will be fixed before merge.\n\nAlso, It requires a toolchain tarball that hasn't been trimmed, so it's very large. That means that the size of the gitian disk needs to be increased:\n```bash\n$ dd if=/dev/zero of=base-bionic-amd64 bs=1k seek=20480k count=1\n```\nAfaik that won't affect",https://github.com/bitcoin/bitcoin/pull/15798#issuecomment-482315974,482315974,
laanwj,2019-04-12T09:31:15Z,"Thanks for working on this. I think this is great work, and I think it's good to be able to bridge the gap to the bitcoin-rust world.\n\nI also understand the concerns with merging this right now, so I think it makes sense to maintain this as a separate branch for now. I'm willing to do this.\n",https://github.com/bitcoin/bitcoin/pull/15798#issuecomment-482507006,482507006,
daira,2019-04-12T10:30:05Z,"FYI, Zcash makes extensive use of Rust code. You're welcome (of course, since it's MIT-licensed) to look at and reuse our build support for that. It's fully deterministic and statically linked, and [all of the transitively depended-on Rust crates, as well as the toolchain, are pinned by hash](https://github.com/zcash/zcash/tree/master/depends/packages). Support was initially added in https://githu",https://github.com/bitcoin/bitcoin/pull/15798#issuecomment-482525094,482525094,
fanquake,2019-04-12T13:53:04Z,"> Why rust? I don't know. Maybe not.\n\nðŸš€ \nI used a `brew` installed `rust` & `cargo`. Worked out of the box. Keen to have a play around.\n\n```\nmake[1]: Nothing to be done for `all'.\nmake[1]: Nothing to be done for `all-am'.\n\nsrc/bitcoind\nHello World!\n2019-04-12T13:10:35Z Bitcoin Core version v0.18.99.0-0bb8b2e99 (release build)\n```\n\nThere was some CRust related discussion",https://github.com/bitcoin/bitcoin/pull/15798#issuecomment-482582864,482582864,
fanquake,2019-06-15T10:50:25Z,"If anyone's interested, I'll be maintaining a rebased version of this branch (with a couple simple commits on top) here: https://github.com/fanquake/bitcoin/tree/theuni-with-rust-example-working-rebased, and branching off of that to play with more Rust integration. I'm using a `brew` installed `rust` and `cargo`.",https://github.com/bitcoin/bitcoin/pull/15798#issuecomment-502356258,502356258,
fanquake,2019-08-24T02:35:07Z,[My branch](https://github.com/fanquake/bitcoin/tree/theuni-with-rust-example-working-rebased) has been re-rebased and I've added a commit to update [`cbindgen` to 0.9.0](https://github.com/eqrion/cbindgen/commit/e19526e00b3fe6921b881682147a1fe5d6b64124).,https://github.com/bitcoin/bitcoin/pull/15798#issuecomment-524509495,524509495,
hebasto,2019-08-29T20:39:14Z,"@theuni \n> That means that the size of the gitian disk needs to be increased:\n> \n> ```shell\n> $ dd if=/dev/zero of=base-bionic-amd64 bs=1k seek=20480k count=1\n> ```\n\nThere is a new `--disksize` option (https://github.com/devrandom/gitian-builder/pull/222).",https://github.com/bitcoin/bitcoin/pull/15798#issuecomment-526352107,526352107,
elichai,2019-08-31T14:30:16Z,"I personally like cbindgen, but I still think that generated code should be tracked in the version control(aka git) so we can easily notice changes done via cbindgen. ",https://github.com/bitcoin/bitcoin/pull/15798#issuecomment-526834943,526834943,
laanwj,2019-09-09T14:41:59Z,"What would be nice for messing around with this is a way to log (e.g. call `LogPrintf` and/or `LogPrint`)  from rust code.\n\nEdit: ~~will give this a shot~~ Feel free to take over the top commit from here: https://github.com/laanwj/bitcoin/tree/2019_09_rust\n```rust\n   log!(""hello from rust {}\n"", domain_str);\n   log_cat!(LogFlags::NET, ""(cat) hello from rust {}\n"", domain_str);\n```",https://github.com/bitcoin/bitcoin/pull/15798#issuecomment-529508931,529508931,
fanquake,2019-10-09T21:02:15Z,"Closing this in favour of #17090. Please engage in ""Rust inside Bitcoin Core"" discussions there instead.",https://github.com/bitcoin/bitcoin/pull/15798#issuecomment-540195549,540195549,
