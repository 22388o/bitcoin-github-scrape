[
  {
    "sha": "e7f900ed0d7fc9be38c1c44caf461f3a8f13275a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplN2Y5MDBlZDBkN2ZjOWJlMzhjMWM0NGNhZjQ2MWYzYThmMTMyNzVh",
    "commit": {
      "author": {
        "name": "Jeremy Rubin",
        "email": "j@rubin.io",
        "date": "2019-03-29T21:48:20Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2019-04-11T17:54:45Z"
      },
      "message": "Adds a rust library to bitcoin to demonstrate linking and building rust code.\nThe demonstration library compiles a rust hello world example and auto-generates\na header which can be included in C++ code.\n\nCo-Authored-By: Jeremy Rubin <j@rubin.io>\nCo-Authored-By: Cory Fields <cory-nospam-@coryfields.com>",
      "tree": {
        "sha": "2b434859e48614eb1aa2367a93220b0ff45b0020",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b434859e48614eb1aa2367a93220b0ff45b0020"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/comments",
    "author": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "abd914ed34f12a5e7773e87e0457b04bcb7d58c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abd914ed34f12a5e7773e87e0457b04bcb7d58c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/abd914ed34f12a5e7773e87e0457b04bcb7d58c4"
      }
    ],
    "stats": {
      "total": 202,
      "additions": 193,
      "deletions": 9
    },
    "files": [
      {
        "sha": "ce4091260aa6e95c2f0ade8a3c1524c5d8789fba",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=e7f900ed0d7fc9be38c1c44caf461f3a8f13275a",
        "patch": "@@ -200,6 +200,12 @@ AC_ARG_ENABLE([asm],\n   [use_asm=$enableval],\n   [use_asm=yes])\n \n+AC_ARG_ENABLE([experimental-rust],\n+  [AS_HELP_STRING([--enable-experimental-rust],\n+  [Enable experimental rust code (default is no)])],\n+  [use_rust=$enableval],\n+  [use_rust=no])\n+\n if test \"x$use_asm\" = xyes; then\n   AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])\n fi\n@@ -454,6 +460,24 @@ AC_ARG_WITH([daemon],\n   [build_bitcoind=$withval],\n   [build_bitcoind=yes])\n \n+if test \"x$use_rust\" = xyes; then\n+  AC_PATH_PROG(CARGO,cargo)\n+  if test x$CARGO = xnone; then\n+    use_rust=no\n+    AC_MSG_ERROR(\"Cargo required to enable experimental rust support.\")\n+  fi\n+\n+  case $host in\n+    ${host_cpu}-w64-mingw*) RUST_TARGET=${host_cpu}-pc-windows-gnu ;;\n+    ${host_cpu}-pc-linux*) RUST_TARGET=\"${host_cpu}-unknown-${host_os}\" ;;\n+    ${host_cpu}-apple-darwin*) RUST_TARGET=${host_cpu}-apple-darwin ;;\n+    *) RUST_TARGET=\"${host}\" ;;\n+  esac\n+\n+  dnl TODO: create a rust test project and check host_alias as well as host.\n+  AC_DEFINE(ENABLE_RUSTY, [true], [Use Rusty])\n+fi\n+\n use_pkgconfig=yes\n case $host in\n   *mingw*)\n@@ -481,6 +505,7 @@ case $host in\n      AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(libshlwapi missing))\n      AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(libiphlpapi missing))\n      AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(libcrypt32 missing))\n+     AC_CHECK_LIB([userenv],      [main],, AC_MSG_ERROR(libuserenv missing))\n \n      # -static is interpreted by libtool, where it has a different meaning.\n      # In libtool-speak, it's -all-static.\n@@ -617,6 +642,14 @@ if test x$use_pkgconfig = xyes; then\n   ])\n fi\n \n+dnl Find the additional lib (if any) responsible for handling\n+dnl dlopen/dlsym/etc.\n+TEMP_LIBS=\"$LIBS\"\n+LIBS=\n+AC_SEARCH_LIBS([dlsym],[dl])\n+DL_LIBS=\"$LIBS\"\n+LIBS=\"$TEMP_LIBS\"\n+\n if test x$use_extended_functional_tests != xno; then\n   AC_SUBST(EXTENDED_FUNCTIONAL_TESTS, --extended)\n fi\n@@ -1423,6 +1456,7 @@ AM_CONDITIONAL([ENABLE_SSE41],[test x$enable_sse41 = xyes])\n AM_CONDITIONAL([ENABLE_AVX2],[test x$enable_avx2 = xyes])\n AM_CONDITIONAL([ENABLE_SHANI],[test x$enable_shani = xyes])\n AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n+AM_CONDITIONAL([ENABLE_RUSTY], [test x$use_rust = xyes])\n \n AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n@@ -1484,6 +1518,8 @@ AC_SUBST(EVENT_PTHREADS_LIBS)\n AC_SUBST(ZMQ_LIBS)\n AC_SUBST(PROTOBUF_LIBS)\n AC_SUBST(QR_LIBS)\n+AC_SUBST(RUST_TARGET)\n+AC_SUBST(DL_LIBS)\n AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n AM_COND_IF([HAVE_DOXYGEN], [AC_CONFIG_FILES([doc/Doxyfile])])"
      },
      {
        "sha": "b6444cea922e578b242b35cfb523229ff0f17000",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 51,
        "deletions": 4,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=e7f900ed0d7fc9be38c1c44caf461f3a8f13275a",
        "patch": "@@ -5,10 +5,13 @@\n DIST_SUBDIRS = secp256k1 univalue\n \n AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS) $(GPROF_LDFLAGS) $(SANITIZER_LDFLAGS)\n+\n AM_CXXFLAGS = $(DEBUG_CXXFLAGS) $(HARDENED_CXXFLAGS) $(WARN_CXXFLAGS) $(NOWARN_CXXFLAGS) $(ERROR_CXXFLAGS) $(GPROF_CXXFLAGS) $(SANITIZER_CXXFLAGS)\n AM_CPPFLAGS = $(DEBUG_CPPFLAGS) $(HARDENED_CPPFLAGS)\n AM_LIBTOOLFLAGS = --preserve-dup-deps\n EXTRA_LIBRARIES =\n+CLEANFILES =\n+LIBBITCOIN_RUST_LIBS =\n \n if EMBEDDED_UNIVALUE\n LIBUNIVALUE = univalue/libunivalue.la\n@@ -19,6 +22,8 @@ else\n LIBUNIVALUE = $(UNIVALUE_LIBS)\n endif\n \n+\n+\n BITCOIN_INCLUDES=-I$(builddir) $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS)\n \n BITCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n@@ -33,6 +38,9 @@ LIBBITCOIN_CRYPTO_BASE=crypto/libbitcoin_crypto_base.a\n LIBBITCOINQT=qt/libbitcoinqt.a\n LIBSECP256K1=secp256k1/libsecp256k1.la\n \n+if ENABLE_RUSTY\n+LIBBITCOIN_RUSTY = rusty/out/release/librusty.a\n+endif\n if ENABLE_ZMQ\n LIBBITCOIN_ZMQ=libbitcoin_zmq.a\n endif\n@@ -291,6 +299,8 @@ libbitcoin_server_a_SOURCES = \\\n   versionbits.cpp \\\n   $(BITCOIN_CORE_H)\n \n+\n+\n if !ENABLE_WALLET\n libbitcoin_server_a_SOURCES += dummywallet.cpp\n endif\n@@ -510,7 +520,8 @@ bitcoind_LDADD = \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n-bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n+\n+bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS) $(LIBBITCOIN_RUST_LIBS) $(DL_LIBS)\n \n # bitcoin-cli binary #\n bitcoin_cli_SOURCES = bitcoin-cli.cpp\n@@ -577,7 +588,7 @@ bitcoin_wallet_LDADD = \\\n   $(LIBSECP256K1) \\\n   $(LIBUNIVALUE)\n \n-bitcoin_wallet_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS) $(ZMQ_LIBS)\n+bitcoin_wallet_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS) $(ZMQ_LIBS) $(LIBBITCOIN_RUST_LIBS) $(DL_LIBS)\n #\n \n # bitcoinconsensus library #\n@@ -603,7 +614,41 @@ CTAES_DIST += crypto/ctaes/ctaes.h\n CTAES_DIST += crypto/ctaes/README.md\n CTAES_DIST += crypto/ctaes/test.c\n \n-CLEANFILES = $(EXTRA_LIBRARIES)\n+RUSTY_DIST =\n+RUSTY_DIST += rusty/build.rs\n+RUSTY_DIST += rusty/Cargo.toml\n+RUSTY_DIST += rusty/src/lib.rs\n+\n+if ENABLE_RUSTY\n+RUSTY_H_NAMESPACE = rust_hello_world_example\n+RUSTY_H = rusty/out/rusty.hpp\n+LIBBITCOIN_RUST_LIBS += $(LIBBITCOIN_RUSTY)\n+\n+$(RUSTY_H): | $(LIBBITCOIN_RUSTY)\n+$(libbitcoin_server_a_OBJECTS) : $(RUSTY_H)\n+\n+# TODO: Teach Cargo how to accept a target filename and upstream\n+# See https://github.com/rust-lang/rust/issues/43749\n+# Just move it as a temporary hack.\n+$(LIBBITCOIN_RUSTY): $(RUSTY_DIST)\n+\t$(AM_V_at)$(MKDIR_P) rusty/out\n+\t+$(AM_V_at)cd $(srcdir)/rusty && HEADER_FILE_OVERRIDE=$(abs_builddir)/$(RUSTY_H) NAMESPACE_OVERRIDE=\"$(RUSTY_H_NAMESPACE)\" $(CARGO) build --release --target=$(RUST_TARGET) --target-dir=$(abs_builddir)/rusty/out\n+if TARGET_WINDOWS\n+\tmv rusty/out/$(RUST_TARGET)/release/rusty.lib $@\n+else\n+\tmv rusty/out/$(RUST_TARGET)/release/librusty.a $@\n+endif\n+\n+RUSTY_CHECK=rusty-check\n+$(RUSTY_CHECK):\n+\tcd $(srcdir)/rusty && HEADER_FILE_OVERRIDE=/dev/null NAMESPACE_OVERRIDE=\"$(RUSTY_H_NAMESPACE)\" $(CARGO) test --release --target=$(RUST_TARGET) --target-dir=$(abs_builddir)/rusty/out\n+\n+CLEANFILES += $(LIBBITCOIN_RUSTY)\n+CLEANFILES += $(RUSTY_H)\n+\n+endif\n+\n+CLEANFILES += $(EXTRA_LIBRARIES)\n \n CLEANFILES += *.gcda *.gcno\n CLEANFILES += compat/*.gcda compat/*.gcno\n@@ -619,7 +664,7 @@ CLEANFILES += wallet/test/*.gcda wallet/test/*.gcno\n CLEANFILES += zmq/*.gcda zmq/*.gcno\n CLEANFILES += obj/build.h\n \n-EXTRA_DIST = $(CTAES_DIST)\n+EXTRA_DIST = $(CTAES_DIST) $(RUSTY_DIST)\n \n \n config/bitcoin-config.h: config/stamp-h1\n@@ -632,6 +677,8 @@ $(top_srcdir)/$(subdir)/config/bitcoin-config.h.in:  $(am__configure_deps)\n clean-local:\n \t-$(MAKE) -C secp256k1 clean\n \t-$(MAKE) -C univalue clean\n+\t-rm -rf rusty/release\n+\t-rm -rf rusty/$(RUST_TARGET)\n \t-rm -f leveldb/*/*.gcda leveldb/*/*.gcno leveldb/helpers/memenv/*.gcda leveldb/helpers/memenv/*.gcno\n \t-rm -f config.h\n \t-rm -rf test/__pycache__"
      },
      {
        "sha": "a4af4e836467cbf2796b9e5b6199491cea29e812",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=e7f900ed0d7fc9be38c1c44caf461f3a8f13275a",
        "patch": "@@ -37,7 +37,9 @@ nodist_bench_bench_bitcoin_SOURCES = $(GENERATED_BENCH_FILES)\n \n bench_bench_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n bench_bench_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bench_bench_bitcoin_LDADD = \\\n+bench_bench_bitcoin_LDADD=\n+\n+bench_bench_bitcoin_LDADD += \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_WALLET) \\\n   $(LIBBITCOIN_SERVER) \\\n@@ -61,7 +63,7 @@ if ENABLE_WALLET\n bench_bench_bitcoin_SOURCES += bench/coin_selection.cpp\n endif\n \n-bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS)\n+bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS) $(LIBBITCOIN_RUST_LIBS) $(DL_LIBS)\n bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_BENCH_FILES)"
      },
      {
        "sha": "b349647c0a335913a22e1e019e60e5ac252fd56e",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=e7f900ed0d7fc9be38c1c44caf461f3a8f13275a",
        "patch": "@@ -434,6 +434,7 @@ qt_bitcoin_qt_LDADD += $(SSL_LIBS)\n endif\n endif\n qt_bitcoin_qt_LDADD += $(CRYPTO_LIBS)\n+qt_bitcoin_qt_LDADD += $(LIBBITCOIN_RUST_LIBS) $(DL_LIBS)\n qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n qt_bitcoin_qt_LIBTOOLFLAGS = $(AM_LIBTOOLFLAGS) --tag CXX\n "
      },
      {
        "sha": "08ca0cc12456c229fdd65663d5e3496a642ee6ed",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=e7f900ed0d7fc9be38c1c44caf461f3a8f13275a",
        "patch": "@@ -74,7 +74,7 @@ endif\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n   $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n-  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n+  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(LIBBITCOIN_RUST_LIBS) $(DL_LIBS)\n qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n "
      },
      {
        "sha": "d14ec32f0d7afdabeb034e414c8baba6a0b85850",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=e7f900ed0d7fc9be38c1c44caf461f3a8f13275a",
        "patch": "@@ -180,11 +180,13 @@ if ENABLE_WALLET\n test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n endif\n \n+\n test_test_bitcoin_LDADD += $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) \\\n   $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n+\n test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n-test_test_bitcoin_LDADD += $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(RAPIDCHECK_LIBS)\n+test_test_bitcoin_LDADD += $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(RAPIDCHECK_LIBS) $(LIBBITCOIN_RUST_LIBS) $(DL_LIBS)\n test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n \n if ENABLE_ZMQ\n@@ -343,7 +345,7 @@ bitcoin_test_check: $(TEST_BINARY) FORCE\n bitcoin_test_clean : FORCE\n \trm -f $(CLEAN_BITCOIN_TEST) $(test_test_bitcoin_OBJECTS) $(TEST_BINARY)\n \n-check-local: $(BITCOIN_TESTS:.cpp=.cpp.test)\n+check-local: $(RUST_CHECK) $(BITCOIN_TESTS:.cpp=.cpp.test)\n if BUILD_BITCOIN_TX\n \t@echo \"Running test/util/bitcoin-util-test.py...\"\n \t$(PYTHON) $(top_builddir)/test/util/bitcoin-util-test.py"
      },
      {
        "sha": "8b07958d5096b89e69086e1feade52474de36383",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e7f900ed0d7fc9be38c1c44caf461f3a8f13275a",
        "patch": "@@ -352,8 +352,16 @@ static void OnRPCStopped()\n     LogPrint(BCLog::RPC, \"RPC stopped.\\n\");\n }\n \n+#if ENABLE_RUSTY\n+#include <rusty/out/rusty.hpp>\n+#endif\n+\n void SetupServerArgs()\n {\n+#if ENABLE_RUSTY\n+    assert(rust_hello_world_example::RUST_CONSTANT == 43);\n+    rust_hello_world_example::hello_world();\n+#endif\n     SetupHelpOptions(gArgs);\n     gArgs.AddArg(\"-help-debug\", \"Print help message with debugging options and exit\", false, OptionsCategory::DEBUG_TEST); // server-only for now\n "
      },
      {
        "sha": "5f909ac52c3bb40109154c034ae15f6945d3c51e",
        "filename": "src/rusty/Cargo.toml",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/rusty/Cargo.toml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/rusty/Cargo.toml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rusty/Cargo.toml?ref=e7f900ed0d7fc9be38c1c44caf461f3a8f13275a",
        "patch": "@@ -0,0 +1,14 @@\n+[package]\n+name = \"rusty\"\n+version = \"0.1.0\"\n+authors = [\"Jeremy Rubin <j@rubin.io>\"]\n+edition = \"2018\"\n+build = \"build.rs\"\n+\n+[dependencies]\n+\n+[lib]\n+crate-type = [\"staticlib\"]\n+\n+[build-dependencies]\n+cbindgen = {git=\"https://github.com/eqrion/cbindgen\", rev=\"60d8234bf3a287da75699936aa00ed9ec9762cc8\"} # tag = v0.8.2"
      },
      {
        "sha": "80169b23b476fb47de4899ea93d87d5f6cb37fcd",
        "filename": "src/rusty/build.rs",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/rusty/build.rs",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/rusty/build.rs",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rusty/build.rs?ref=e7f900ed0d7fc9be38c1c44caf461f3a8f13275a",
        "patch": "@@ -0,0 +1,59 @@\n+// client/build.rs\n+\n+extern crate cbindgen;\n+\n+use cbindgen::Config;\n+use std::env;\n+use std::path::PathBuf;\n+\n+const LICENSE: &'static str = \"// Autogenerated Header File from Rust Source\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\";\n+\n+fn main() {\n+    // either read from $LIBNAME_H the header file, or\n+    // set it equal to $TARGET/$(CARGO_PKG_NAME).hpp\n+    let header_file_name = env::var(\"HEADER_FILE_OVERRIDE\")\n+        .or(env::var(\"CARGO_PKG_NAME\").map(|f| {\n+            target_dir()\n+                .join(format!(\"{}.hpp\", f))\n+                .display()\n+                .to_string()\n+        }))\n+        .unwrap();\n+\n+    // let the namespace either be read from $LIBNAME_H_NAMESPACE\n+    // or let it be set as the $(CARGO_PKG_NAME)_ffi\n+    let namespace = Some(\n+        env::var(\"NAMESPACE_OVERRIDE\")\n+            .unwrap_or_else(|_| env::var(\"CARGO_PKG_NAME\").map(|f| f + \"_ffi\").unwrap()),\n+    );\n+\n+    let include_guard = Some({\n+        let mut i = String::from(\"BITCOIN_\") + &env::var(\"CARGO_PKG_NAME\").unwrap() + \"_H\";\n+        i.make_ascii_uppercase();\n+        i\n+    });\n+    let config = Config {\n+        header: Some(String::from(LICENSE)),\n+        namespace,\n+        include_guard,\n+        ..Default::default()\n+    };\n+\n+    let crate_dir = env::var(\"CARGO_MANIFEST_DIR\").unwrap();\n+    cbindgen::generate_with_config(&crate_dir, config)\n+        .unwrap()\n+        .write_to_file(&header_file_name);\n+}\n+\n+/// Find the location of the `target/` directory.\n+fn target_dir() -> PathBuf {\n+    env::var(\"HEADER_TARGET_DIR_OVERRIDE\")\n+        .or(env::var(\"CARGO_TARGET_DIR\"))\n+        .map(PathBuf::from)\n+        .unwrap_or_else(|_| {\n+            PathBuf::from(env::var(\"CARGO_MANIFEST_DIR\").unwrap()).join(\"target\")\n+        })\n+}"
      },
      {
        "sha": "855c7706ae1d8a5ec2367dee76c3550eb48b7ad1",
        "filename": "src/rusty/src/lib.rs",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/rusty/src/lib.rs",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a/src/rusty/src/lib.rs",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rusty/src/lib.rs?ref=e7f900ed0d7fc9be38c1c44caf461f3a8f13275a",
        "patch": "@@ -0,0 +1,15 @@\n+#[cfg(test)]\n+mod tests {\n+    #[test]\n+    fn it_works() {\n+        assert_eq!(2 + 2, 4);\n+    }\n+}\n+\n+#[no_mangle]\n+pub static RUST_CONSTANT: i32 = 43;\n+\n+#[no_mangle]\n+pub extern \"C\" fn hello_world() {\n+    println!(\"Hello World!\");\n+}"
      }
    ]
  },
  {
    "sha": "0bb8b2e997a1bea324060698f28fd27c053906e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYmI4YjJlOTk3YTFiZWEzMjQwNjA2OThmMjhmZDI3YzA1MzkwNmU4",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2019-04-10T19:58:40Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2019-04-11T17:54:45Z"
      },
      "message": "DO NOT MERGE. Add rust examples to gitian descriptors",
      "tree": {
        "sha": "afdf4ced359a9d882ab2d9c25cc3dd11ee7cc8b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/afdf4ced359a9d882ab2d9c25cc3dd11ee7cc8b4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0bb8b2e997a1bea324060698f28fd27c053906e8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bb8b2e997a1bea324060698f28fd27c053906e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0bb8b2e997a1bea324060698f28fd27c053906e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bb8b2e997a1bea324060698f28fd27c053906e8/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e7f900ed0d7fc9be38c1c44caf461f3a8f13275a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e7f900ed0d7fc9be38c1c44caf461f3a8f13275a"
      }
    ],
    "stats": {
      "total": 88,
      "additions": 78,
      "deletions": 10
    },
    "files": [
      {
        "sha": "c5843321b86126d99e2f732fb00bb28a6877227e",
        "filename": "contrib/download_rust_toolchain.sh",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb8b2e997a1bea324060698f28fd27c053906e8/contrib/download_rust_toolchain.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb8b2e997a1bea324060698f28fd27c053906e8/contrib/download_rust_toolchain.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/download_rust_toolchain.sh?ref=0bb8b2e997a1bea324060698f28fd27c053906e8",
        "patch": "@@ -0,0 +1,30 @@\n+#!/bin/sh\n+export LC_ALL=C\n+set -e\n+\n+if [ ! -z \"${1}\" ]; then\n+  echo \"Usage: $0\"\n+  echo\n+  echo \"Downloads the latest stable rust toolchain and supported targets\"\n+  exit 1\n+fi\n+\n+export CARGO_HOME=`pwd`/rust-install/.cargo\n+export RUSTUP_HOME=`pwd`/rust-install/.rustup\n+mkdir -p ${CARGO_HOME} ${RUSTUP_HOME}\n+\n+wget -P rust-install https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init\n+chmod +x rust-install/rustup-init\n+\n+./rust-install/rustup-init -y\n+\n+RUST_HOST=`${CARGO_HOME}/bin/rustc --version -v | grep \"host:\" | cut -f2 -d' '`\n+RUST_RELEASE=`${CARGO_HOME}/bin/rustc --version -v | grep \"release:\" | cut -f2 -d' '`\n+RUST_COMMIT=`${CARGO_HOME}/bin/rustc --version -v | grep \"commit-hash:\" | cut -f2 -d' '`\n+OUT_FILE=rust-stable-${RUST_HOST}-${RUST_RELEASE}.tar.xz\n+\n+${CARGO_HOME}/bin/rustup target install x86_64-apple-darwin i686-pc-windows-gnu x86_64-pc-windows-gnu aarch64-unknown-linux-gnu arm-unknown-linux-gnueabihf i686-unknown-linux-gnu x86_64-unknown-linux-gnu\n+\n+echo Creating ${OUT_FILE}. This will take a while.\n+tar -C rust-install -cJf ${OUT_FILE} .cargo .rustup\n+rm -rf ./rust-install"
      },
      {
        "sha": "9adccc626a42353ea29a8d2df7dcc957e4c4f831",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 24,
        "deletions": 4,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb8b2e997a1bea324060698f28fd27c053906e8/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb8b2e997a1bea324060698f28fd27c053906e8/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=0bb8b2e997a1bea324060698f28fd27c053906e8",
        "patch": "@@ -35,13 +35,19 @@ packages:\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n-files: []\n+files:\n+- \"rust-stable-x86_64-unknown-linux-gnu-1.33.0.tar.xz\"\n script: |\n   set -e -o pipefail\n \n+  echo -n \"81b0d6a71f22c21238e8ae4385bb8a3018df29bc667d4131cab3aabb33095443  rust-stable-x86_64-unknown-linux-gnu-1.33.0.tar.xz\" | sha256sum -c\n+\n   WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"i686-pc-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\"\n-  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n+  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests --enable-experimental-rust\"\n+  # TODO: Re-enable riscv64-linux-gnu when riscv support makes it to rust stable.\n+  # See: https://github.com/rust-lang/rust/pull/52787\n+  HOSTS=\"i686-pc-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu\"\n+\n   FAKETIME_HOST_PROGS=\"gcc g++\"\n   FAKETIME_PROGS=\"date ar ranlib nm\"\n   HOST_CFLAGS=\"-O2 -g\"\n@@ -88,6 +94,9 @@ script: |\n   done\n   }\n \n+  tar -C ~ -xf ${BUILD_DIR}/rust-stable-x86_64-unknown-linux-gnu-1.33.0.tar.xz\n+  . ~/.cargo/env\n+\n   # Faketime for depends so intermediate results are comparable\n   export PATH_orig=${PATH}\n   create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n@@ -175,7 +184,18 @@ script: |\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n     make ${MAKEOPTS}\n     make ${MAKEOPTS} -C src check-security\n-    make ${MAKEOPTS} -C src check-symbols\n+    # TODO: Fix symbols check\n+    # bitcoin-wallet: symbol __cxa_thread_atexit_impl from unsupported version GLIBC_2.18\n+    # bitcoin-wallet: symbol posix_spawnp from unsupported version GLIBC_2.15\n+    # test/test_bitcoin: symbol __cxa_thread_atexit_impl from unsupported version GLIBC_2.18\n+    # test/test_bitcoin: symbol posix_spawnp from unsupported version GLIBC_2.15\n+    # qt/bitcoin-qt: symbol __cxa_thread_atexit_impl from unsupported version GLIBC_2.18\n+    # qt/bitcoin-qt: symbol posix_spawnp from unsupported version GLIBC_2.15\n+    #\n+    # See: https://github.com/rust-lang/rust/issues/57497\n+    # We will need to add stubs for posix_spawnp and __cxa_thread_atexit_impl,\n+    # or bump our minimum supported glibc.\n+    # make ${MAKEOPTS} -C src check-symbols\n     make install DESTDIR=${INSTALLPATH}\n     cd installed\n     find . -name \"lib*.la\" -delete"
      },
      {
        "sha": "927fc1f633e6dde481cf1d31e917f7b2f60b74b4",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb8b2e997a1bea324060698f28fd27c053906e8/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb8b2e997a1bea324060698f28fd27c053906e8/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=0bb8b2e997a1bea324060698f28fd27c053906e8",
        "patch": "@@ -33,12 +33,14 @@ remotes:\n   \"dir\": \"bitcoin\"\n files:\n - \"MacOSX10.11.sdk.tar.gz\"\n+- \"rust-stable-x86_64-unknown-linux-gnu-1.33.0.tar.xz\"\n script: |\n   set -e -o pipefail\n \n+  echo -n \"81b0d6a71f22c21238e8ae4385bb8a3018df29bc667d4131cab3aabb33095443  rust-stable-x86_64-unknown-linux-gnu-1.33.0.tar.xz\" | sha256sum -c\n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"x86_64-apple-darwin14\"\n-  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=$WRAP_DIR/genisoimage\"\n+  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests --enable-experimental-rust GENISOIMAGE=$WRAP_DIR/genisoimage\"\n   FAKETIME_HOST_PROGS=\"\"\n   FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n \n@@ -81,6 +83,9 @@ script: |\n   done\n   }\n \n+  tar -C ~ -xf ${BUILD_DIR}/rust-stable-x86_64-unknown-linux-gnu-1.33.0.tar.xz\n+  . ~/.cargo/env\n+\n   # Faketime for depends so intermediate results are comparable\n   export PATH_orig=${PATH}\n   create_global_faketime_wrappers \"2000-01-01 12:00:00\""
      },
      {
        "sha": "b0916f1a9427ece9a4d870f912fec9cb78204957",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 18,
        "deletions": 5,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb8b2e997a1bea324060698f28fd27c053906e8/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb8b2e997a1bea324060698f28fd27c053906e8/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=0bb8b2e997a1bea324060698f28fd27c053906e8",
        "patch": "@@ -26,13 +26,25 @@ packages:\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n-files: []\n+files:\n+- \"rust-stable-x86_64-unknown-linux-gnu-1.33.0.tar.xz\"\n script: |\n   set -e -o pipefail\n \n+  echo -n \"81b0d6a71f22c21238e8ae4385bb8a3018df29bc667d4131cab3aabb33095443  rust-stable-x86_64-unknown-linux-gnu-1.33.0.tar.xz\" | sha256sum -c\n+\n   WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"i686-w64-mingw32 x86_64-w64-mingw32\"\n-  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n+  # TODO: Figure out what to do with i686.\n+  # See: https://github.com/rust-lang/rust/issues/12859#issuecomment-62255275\n+  # CXXLD    bitcoind.exe\n+  # rusty/out/release/librusty.a(panic_unwind-391e531731ebdcff.panic_unwind.4lxunjl3-cgu.0.rcgu.o): In function `ZN12panic_unwind3imp5panic17h909ccf74c1ea010eE':\n+  # /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libpanic_unwind/gcc.rs:73: undefined reference to `_Unwind_RaiseException'\n+  # rusty/out/release/librusty.a(panic_unwind-391e531731ebdcff.panic_unwind.4lxunjl3-cgu.0.rcgu.o): In function `rust_eh_unwind_resume':\n+  # /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858\\/src\\libpanic_unwind/gcc.rs:281: undefined reference to `_Unwind_Resume'\n+  # collect2: error: ld returned 1 exit status\n+  HOSTS=\"x86_64-w64-mingw32\"\n+\n+  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests --enable-experimental-rust\"\n   FAKETIME_HOST_PROGS=\"ar ranlib nm windres strip objcopy\"\n   FAKETIME_PROGS=\"date makensis zip\"\n   HOST_CFLAGS=\"-O2 -g\"\n@@ -99,6 +111,9 @@ script: |\n   done\n   }\n \n+  tar -C ~ -xf ${BUILD_DIR}/rust-stable-x86_64-unknown-linux-gnu-1.33.0.tar.xz\n+  . ~/.cargo/env\n+\n   # Faketime for depends so intermediate results are comparable\n   export PATH_orig=${PATH}\n   create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n@@ -179,6 +194,4 @@ script: |\n   cp $OUTDIR/bitcoin-*setup-unsigned.exe unsigned/\n   find . | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n   mv ${OUTDIR}/${DISTNAME}-x86_64-*-debug.zip ${OUTDIR}/${DISTNAME}-win64-debug.zip\n-  mv ${OUTDIR}/${DISTNAME}-i686-*-debug.zip ${OUTDIR}/${DISTNAME}-win32-debug.zip\n   mv ${OUTDIR}/${DISTNAME}-x86_64-*.zip ${OUTDIR}/${DISTNAME}-win64.zip\n-  mv ${OUTDIR}/${DISTNAME}-i686-*.zip ${OUTDIR}/${DISTNAME}-win32.zip"
      }
    ]
  }
]