practicalswift,2017-06-16T04:25:31Z,utACK 39faab76321bc6bf217ffdc9b380c60b9d99416f,https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-308929749,308929749,
sipa,2017-06-16T21:52:28Z,utACK 39faab76321bc6bf217ffdc9b380c60b9d99416f,https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-309142805,309142805,
fanquake,2017-06-28T00:43:00Z,Concept ACK. Needs rebase.,https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-311524790,311524790,
jnewbery,2017-07-10T20:23:11Z,Tested ACK 39faab76321bc6bf217ffdc9b380c60b9d99416f,https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-314225030,314225030,
benma,2017-07-13T09:43:50Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-315028497,315028497,
TheBlueMatt,2017-07-14T19:23:54Z,"Wait, is this the direction we want to go in, or the opposite? eg i figured we'd want to slowly move towards storing references to gArgs in things that need them, eg as we move towards classes which contain things (CConnman, CChainState, etc) we'd either pass in the options relevant to those objects (ala CConnman's constructor) or pass them the gArgs to avoid the global.",https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-315446228,315446228,
benma,2017-07-14T19:30:36Z,"@TheBlueMatt what you mention makes sense to me, but it seems unrelated to this PR, which is just about removing the wrappers (which use the same global). This PR is also good prep-work for storing references to gArgs in classes in that sense.",https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-315447532,315447532,
TheBlueMatt,2017-07-14T19:45:07Z,"Hmm, I figured it'd be easier to just sed/gArgs/locallyReferencedArgs/ in files, but I guess it doesnt matter much either way.",https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-315450408,315450408,
benma,2017-07-14T20:28:49Z,"One can easily do this after this PR, whereas before, `gArgs` didn't even appear in all the places you'd expect it to and you'd have to use the same kind of complex regexp to catch them all as in the scripted diff script. I agree it doesn't matter much, but it does make it easier I think. \n\nIt could be a long time too until someone starts doing this work, and in the meantime, we can avoid the ",https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-315459697,315459697,
practicalswift,2017-07-17T12:53:57Z,Needs rebase :-),https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-315746978,315746978,
benma,2017-07-17T21:45:04Z,Rebased ðŸ˜† ,https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-315894338,315894338,
benma,2017-07-22T07:48:08Z,"Rebased.\n\n@sipa I'd be glad if this could be merged soon, as it conflicts with other changes very often.",https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-317164418,317164418,
benma,2017-07-23T18:34:19Z,How can I retrigger CI?,https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-317272713,317272713,
sipa,2017-07-23T18:35:11Z,@benma I've restarted Travis.,https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-317272760,317272760,
TheBlueMatt,2017-08-01T18:36:51Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-319458766,319458766,
benma,2017-08-01T19:31:27Z,@TheBlueMatt thx. Rebased.,https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-319472748,319472748,
promag,2017-08-02T13:02:16Z,"I believe 3b22edd has an unrelated change that should be in bb3d105, otherwise tested ACK 3b22edd.",https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-319665159,319665159,
benma,2017-08-02T13:38:47Z,"@promag thank you. util.h and util.cpp are excluded from the scripted diff due to false positives. Making it work would take an unreasonable effort, so I did those few instances manually. ",https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-319674650,319674650,
promag,2017-08-02T15:09:10Z,"@benma what about switching commit order? I know it's not the logical thing to do in terms of commit order, but in terms of what the PR stands for, IMO it's fine.",https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-319701934,319701934,
benma,2017-08-02T21:49:03Z,"@promag, I prefer it if each is compiles and passes tests, and also think it would be more confusing and unneeded work.",https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-319808837,319808837,
MarcoFalke,2017-08-03T12:33:46Z,@benma is right. Commits should be atomic (https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#contributor-workflow),https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-319955888,319955888,
MarcoFalke,2017-08-03T16:12:28Z,utACK 3b22edd106f51cc25b200e41ffaab10877c50144,https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-320016761,320016761,
promag,2017-08-06T14:03:03Z,@laanwj it would be nice to have this in so #10976 can be rebased.,https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-320508887,320508887,
sipa,2017-08-06T22:07:58Z,Let's try to merge this right before branching off.,https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-320536069,320536069,
MarcoFalke,2017-08-08T13:02:58Z,"utACK 3b22edd106f51cc25b200e41ffaab10877c50144, but it conflicts with #10882, which is tagged for 0.15.",https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-320949247,320949247,
benma,2017-08-09T08:27:25Z,I don't mind rebasing once more after #10882 is merged.,https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-321189227,321189227,
MarcoFalke,2017-08-14T14:25:16Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-322204460,322204460,
laanwj,2017-08-14T15:21:07Z,Rebased and merged via c2704ec,https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-322220137,322220137,
jtimon,2017-08-14T21:36:24Z,"Oh, nice, I was planning to do this but thank you for doing it faster!",https://github.com/bitcoin/bitcoin/pull/10607#issuecomment-322316634,322316634,
