[
  {
    "sha": "e49ecc9e720eb5979d99f63767c052cc9b886715",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNDllY2M5ZTcyMGViNTk3OWQ5OWY2Mzc2N2MwNTJjYzliODg2NzE1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-07T10:30:17Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-01-07T13:06:34Z"
      },
      "message": "qt: Create splash screen only when requested, delete after use\n\nSplash screen was always created (but hidden), even when -nosplash or -min was\nprovided on the command line. Fix this.\n\nAlso make the splash screen delete itself after use. No need to keep it\nin memory after initialization.\n\nReduces memory usage a bit and may improve Ubuntu window detection\nissues.",
      "tree": {
        "sha": "02af3500c0ea88a415ca15a32c064fc9eb1a8ec5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02af3500c0ea88a415ca15a32c064fc9eb1a8ec5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e49ecc9e720eb5979d99f63767c052cc9b886715",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e49ecc9e720eb5979d99f63767c052cc9b886715",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e49ecc9e720eb5979d99f63767c052cc9b886715",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e49ecc9e720eb5979d99f63767c052cc9b886715/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d696820b45d9b6be1c21a65f2c8ed3b260938cb7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d696820b45d9b6be1c21a65f2c8ed3b260938cb7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d696820b45d9b6be1c21a65f2c8ed3b260938cb7"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 12,
      "deletions": 9
    },
    "files": [
      {
        "sha": "519fa620c841e638c21b1e9536ddad4172d658ef",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e49ecc9e720eb5979d99f63767c052cc9b886715/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e49ecc9e720eb5979d99f63767c052cc9b886715/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=e49ecc9e720eb5979d99f63767c052cc9b886715",
        "patch": "@@ -29,6 +29,7 @@\n #include <QSettings>\n #include <QTimer>\n #include <QTranslator>\n+#include <QWeakPointer>\n \n #if QT_VERSION < 0x050000\n #include <QTextCodec>\n@@ -50,7 +51,7 @@ Q_DECLARE_METATYPE(bool*)\n \n // Need a global reference for the notifications to find the GUI\n static BitcoinGUI *guiref;\n-static SplashScreen *splashref;\n+static QWeakPointer<SplashScreen> splashref;\n \n static bool ThreadSafeMessageBox(const std::string& message, const std::string& caption, unsigned int style)\n {\n@@ -77,9 +78,9 @@ static bool ThreadSafeMessageBox(const std::string& message, const std::string&\n \n static void InitMessage(const std::string &message)\n {\n-    if(splashref)\n+    if(!splashref.isNull())\n     {\n-        splashref->showMessage(QString::fromStdString(message), Qt::AlignBottom|Qt::AlignHCenter, QColor(55,55,55));\n+        splashref.data()->showMessage(QString::fromStdString(message), Qt::AlignBottom|Qt::AlignHCenter, QColor(55,55,55));\n         qApp->processEvents();\n     }\n     LogPrintf(\"init message: %s\\n\", message.c_str());\n@@ -260,12 +261,12 @@ int main(int argc, char *argv[])\n         return 1;\n     }\n \n-    SplashScreen splash(QPixmap(), 0, isaTestNet);\n     if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\", false))\n     {\n-        splash.show();\n-        splash.setAutoFillBackground(true);\n-        splashref = &splash;\n+        SplashScreen *splash = new SplashScreen(QPixmap(), 0, isaTestNet);\n+        splash->setAttribute(Qt::WA_DeleteOnClose);\n+        splash->show();\n+        splashref = splash;\n     }\n \n     app.processEvents();\n@@ -300,8 +301,8 @@ int main(int argc, char *argv[])\n                 PaymentServer::LoadRootCAs();\n                 paymentServer->setOptionsModel(&optionsModel);\n \n-                if (splashref)\n-                    splash.finish(&window);\n+                if (!splashref.isNull())\n+                    splashref.data()->finish(&window);\n \n                 ClientModel clientModel(&optionsModel);\n                 window.setClientModel(&clientModel);"
      },
      {
        "sha": "0e998c6d7ef8ad4f5bc551f2523796b904e77cf6",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e49ecc9e720eb5979d99f63767c052cc9b886715/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e49ecc9e720eb5979d99f63767c052cc9b886715/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=e49ecc9e720eb5979d99f63767c052cc9b886715",
        "patch": "@@ -13,6 +13,8 @@\n SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTestNet) :\n     QSplashScreen(pixmap, f)\n {\n+    setAutoFillBackground(true);\n+\n     // set reference point, paddings\n     int paddingRight            = 50;\n     int paddingTop              = 50;"
      }
    ]
  }
]