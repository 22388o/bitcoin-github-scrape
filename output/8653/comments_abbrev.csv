NicolasDorier,2016-09-06T09:02:38Z,tested ACK it solved my issue https://github.com/bitcoin/bitcoin/issues/8511\n,https://github.com/bitcoin/bitcoin/pull/8653#issuecomment-244891899,244891899,
sstone,2016-09-06T16:06:37Z,"There might still be a problem with bitcoin-qt.exe which I'm investigating. bitcoind.exe builds and works fine (tested on a VM and several windows boxes). Sorry about that.\nUpdate: I can build and run both bitcoin-qt.exe and bitcoind.exe if I use:\n\n```\nconfigure --disable-hardening --prefix=`pwd`/depends/x86_64-w64-mingw32\n```\n\nSo far I have been able to test on Windows 10 only, so more fee",https://github.com/bitcoin/bitcoin/pull/8653#issuecomment-245001301,245001301,
laanwj,2016-09-13T08:22:07Z,"Very strong NACK on telling people to disable hardening, ACK on the posix alternatives.\n",https://github.com/bitcoin/bitcoin/pull/8653#issuecomment-246610195,246610195,
jonasschnelli,2016-09-13T08:47:35Z,"Agree with @laanwj. Also, the disable hardening recommendation comes without a specific reason. Does the posix compatible mingw compiler breaks the Qt build? If so, why exactly?\n",https://github.com/bitcoin/bitcoin/pull/8653#issuecomment-246616239,246616239,
laanwj,2016-09-14T10:39:34Z,"To see if I could reproduce I did this:\n- Create a brand-new Ubuntu Xenial (16.04) VM, from today's (2015-09-14) cloud image \n- Install the necessary dependencies, and build requirements from these documents:\n\n```\nsudo apt-get install g++-mingw-w64-i686 mingw-w64-i686-dev g++-mingw-w64-x86-64 mingw-w64-x86-64-dev curl\nsudo apt-get install build-essential libtool autotools-dev automake pkg-co",https://github.com/bitcoin/bitcoin/pull/8653#issuecomment-246973266,246973266,
laanwj,2016-09-14T13:19:56Z,"Whoa this even worse than I imagined. Above I already report that `bitcoin-cli` doesn't seem to work. Well here's why. TCPdump output of what comes back from the server:\n\n```\n15:17:02.157987 IP Acer-PC.lan.8332 > vm07.57962: Flags [P.], seq 1:446, ack 151, win 260, options [nop,nop,TS val 10525409 ecr 2673459], length 445\nE...b.@...........z. ..j..m.$|.............\n.....(.3HTTP/1.1 200 OK\nCo",https://github.com/bitcoin/bitcoin/pull/8653#issuecomment-247010084,247010084,
sstone,2016-09-14T13:53:15Z,The issue with bitcoin-cli looks like https://sourceforge.net/p/levent/bugs/363/ which is linked to mingw (but not its POSIX mode specifically)  \n,https://github.com/bitcoin/bitcoin/pull/8653#issuecomment-247019771,247019771,
laanwj,2016-09-14T14:42:27Z,"OK I've done some research. In principle, `std::mutex` is supported in the -win32 compiler variant (which we've always used, and are using in Trusty). No POSIX emulation layer is needed for c++11 threads. However the problem with `<mutex>` and friends on newer Ubuntu's mingw-w64 seems to be the following:\n- Firstly, there is a `/usr/lib/gcc/x86_64-w64-mingw32/5.3-win32/include/c++/mutex`. However",https://github.com/bitcoin/bitcoin/pull/8653#issuecomment-247035773,247035773,
laanwj,2016-09-14T14:53:07Z,"I have verified that after reverting the C++11 threads changes (https://github.com/laanwj/bitcoin/tree/2016_09_windows_hell), it builds normally with the default -win32 compiler. ~~`bitcoin-qt` then works, without having to disable hardening.~~\nFalse positive: I was building without wallet, with the wallet it still crashes. What a shit.\n\nHowever:\n- bitcoin-test.exe: crashes on start\n- bitcoin",https://github.com/bitcoin/bitcoin/pull/8653#issuecomment-247039470,247039470,
sstone,2016-09-14T16:02:46Z,"FWIW, applying the libevent patch above does seem to fix bitcoin-cli.exe\n",https://github.com/bitcoin/bitcoin/pull/8653#issuecomment-247063501,247063501,
laanwj,2016-09-14T16:05:37Z,"Looks like `-fstack-protector-all` is the specific hardening flag that exposes problems. Apparently it affects use of BerkeleyDB and boost::test. The tests pass (at least in wine) without `--stack-protector-all`. It also makes Bitcoin-Qt with wallet start again. \n\nSo apparently there are three, at most tangentially related issues regarding Windows:\n- The `std::mutex` `std::condition_variable` e",https://github.com/bitcoin/bitcoin/pull/8653#issuecomment-247064475,247064475,
laanwj,2016-09-14T16:13:12Z,"> FWIW, applying the libevent patch above does seem to fix bitcoin-cli.exe\n\nInteresting. I wonder what happened in the meantime, I just checked and the 0.13.0 executables don't suffer from this issue. There have been no libevent version changes in depends since then (we've always been using 2.0.22). So it must be an issue with the combination of the new compiler and libevent.\n\nI'm a bit afraid",https://github.com/bitcoin/bitcoin/pull/8653#issuecomment-247066922,247066922,
achow101,2016-09-14T16:14:23Z,@laanwj where can I get a copy of your patches? I can build them in Ubuntu 16.04 and then test them on Windows 10.\n,https://github.com/bitcoin/bitcoin/pull/8653#issuecomment-247067330,247067330,
theuni,2016-09-19T16:27:36Z,"FYI, I'm working on a large-scale toolchain refactor for depends so that we have more control over these things. Will report here when it's ready for testing.\n",https://github.com/bitcoin/bitcoin/pull/8653#issuecomment-248043324,248043324,
fanquake,2016-10-08T09:10:50Z,"Closing this, I've copied all the important info into the #8732\n",https://github.com/bitcoin/bitcoin/pull/8653#issuecomment-252413439,252413439,
paveljanik,2016-09-02T13:45:07Z,Ubuntu\n,https://github.com/bitcoin/bitcoin/pull/8653#discussion_r77348032,77348032,doc/build-windows.md
laanwj,2016-09-13T08:21:47Z,"What, are you sure about this?\n\nCan you be more specific about this problem? I'd prefer figuring out what the issue is and _never_ telling people to disable hardening. The situation on windows is bad enough as it is (#8248). Note that the gitian executables are built with hardening enabled.\n",https://github.com/bitcoin/bitcoin/pull/8653#discussion_r78515636,78515636,doc/build-windows.md
btcdrak,2016-09-13T08:51:53Z,Why `--disable-hardening` ?\n,https://github.com/bitcoin/bitcoin/pull/8653#discussion_r78519995,78519995,doc/build-windows.md
sstone,2016-09-13T16:08:39Z,"Sorry for not being specific enough: with hardening enabled, bitcoint-qt.exe does not start (it crashes on startup), but bitcoind.exe seems to work fine. \nWith hardening disabled, bitcoin-qt.exe starts and seems to work fine AFAICT.\n",https://github.com/bitcoin/bitcoin/pull/8653#discussion_r78591536,78591536,doc/build-windows.md
laanwj,2016-09-14T09:08:41Z,"Do remove this recommendation. You should **never** tell anyone in good conscience to disable hardening on a bitcoin wallet. Those security precautions exists with a good reason. Oh absolutely it will seem to ""work fine"" but you lose any protection against exploitation, if, say, another buffer overflow turns up in UPnP or openssl or any other library.\n\nIf it doesn't work with hardening then you ",https://github.com/bitcoin/bitcoin/pull/8653#discussion_r78712014,78712014,doc/build-windows.md
sstone,2016-09-14T11:28:05Z,You're right. I was thinking mostly about people who might need to cross-build quickly for testing purposes and overlooked the fact that people might use the binaries as their real wallet instead of downloading an official release or using gitian to build. I should probably close this PR and open a new specific issue ?\n,https://github.com/bitcoin/bitcoin/pull/8653#discussion_r78730627,78730627,doc/build-windows.md
