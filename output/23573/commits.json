[
  {
    "sha": "ab22a71429f0f47b3c3582a303c07940aa59cd3e",
    "node_id": "C_kwDOABII59oAKGFiMjJhNzE0MjlmMGY0N2IzYzM1ODJhMzAzYzA3OTQwYWE1OWNkM2U",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-11-22T11:08:24Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-11-22T14:11:58Z"
      },
      "message": "refactor: cast bool to int to silence compiler warning\n\nThis fixes -Wbitwise-instead-of-logical compiler warnings:\n\nnode/interfaces.cpp:544:16: warning: use of bitwise '&' with boolean operands [-Wbitwise-instead-of-logical]\n        return FillBlock(ancestor, ancestor_out, lock, active) & FillBlock(block1, block1_out, lock, active) & FillBlock(block2, block2_out, lock, active);\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n                                                                                                             &&\nnode/interfaces.cpp:544:16: note: cast one or both operands to int to silence this warning\nnode/interfaces.cpp:544:16: warning: use of bitwise '&' with boolean operands [-Wbitwise-instead-of-logical]\n        return FillBlock(ancestor, ancestor_out, lock, active) & FillBlock(block1, block1_out, lock, active) & FillBlock(block2, block2_out, lock, active);\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n                                                               &&\nnode/interfaces.cpp:544:16: note: cast one or both operands to int to silence this warning\n2 warnings generated.\n\nA similar change was recently made to libsecp in commit 16d13221\nfor the same reason.",
      "tree": {
        "sha": "6bfe26240ac720043c192e626cd097b036b7ea89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6bfe26240ac720043c192e626cd097b036b7ea89"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab22a71429f0f47b3c3582a303c07940aa59cd3e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab22a71429f0f47b3c3582a303c07940aa59cd3e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab22a71429f0f47b3c3582a303c07940aa59cd3e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab22a71429f0f47b3c3582a303c07940aa59cd3e/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3a36ec83d024a1343bee8e390833eb1fd7a3705d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a36ec83d024a1343bee8e390833eb1fd7a3705d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3a36ec83d024a1343bee8e390833eb1fd7a3705d"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0f24211a0ec4b3466b3731d8253cfaacafca7180",
        "filename": "src/node/interfaces.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab22a71429f0f47b3c3582a303c07940aa59cd3e/src/node/interfaces.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab22a71429f0f47b3c3582a303c07940aa59cd3e/src/node/interfaces.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/interfaces.cpp?ref=ab22a71429f0f47b3c3582a303c07940aa59cd3e",
        "patch": "@@ -540,8 +540,11 @@ class ChainImpl : public Chain\n         const CBlockIndex* block2 = m_node.chainman->m_blockman.LookupBlockIndex(block_hash2);\n         const CBlockIndex* ancestor = block1 && block2 ? LastCommonAncestor(block1, block2) : nullptr;\n         // Using & instead of && below to avoid short circuiting and leaving\n-        // output uninitialized.\n-        return FillBlock(ancestor, ancestor_out, lock, active) & FillBlock(block1, block1_out, lock, active) & FillBlock(block2, block2_out, lock, active);\n+        // output uninitialized. Cast bool to int to avoid -Wbitwise-instead-of-logical\n+        // compiler warnings.\n+        return int{FillBlock(ancestor, ancestor_out, lock, active)} &\n+               int{FillBlock(block1, block1_out, lock, active)} &\n+               int{FillBlock(block2, block2_out, lock, active)};\n     }\n     void findCoins(std::map<COutPoint, Coin>& coins) override { return FindCoins(m_node, coins); }\n     double guessVerificationProgress(const uint256& block_hash) override"
      }
    ]
  }
]