MarcoFalke,2017-12-05T21:02:44Z,"Cool. I hope this will bring down nit comments on functional test pulls.\n\nutACK 998cdc958f4e50efceb5f5c01f0002506a9d863c",https://github.com/bitcoin/bitcoin/pull/11835#issuecomment-349440490,349440490,
practicalswift,2017-12-05T21:59:23Z,"Travis now fails as expected:\n\n```\n$ if [ ""$CHECK_DOC"" = 1 -a ""$TRAVIS_EVENT_TYPE"" = ""pull_request"" ]; then contrib/devtools/lint-all.sh; fi\n./test/functional/example_test.py:18:1: F401 'test_framework.mininode.NODE_NETWORK' imported but unused\n./test/functional/test_framework/test_framework.py:16:1: F401 'traceback' imported but unused\n./test/functional/test_framework/messages.py:27:1",https://github.com/bitcoin/bitcoin/pull/11835#issuecomment-349455640,349455640,
practicalswift,2017-12-06T07:12:24Z,Now passing Travis and thus working as expected! :-),https://github.com/bitcoin/bitcoin/pull/11835#issuecomment-349555095,349555095,
meshcollider,2017-12-07T23:37:40Z,"Concept ACK, sounds useful",https://github.com/bitcoin/bitcoin/pull/11835#issuecomment-350128279,350128279,
MarcoFalke,2017-12-08T19:38:21Z,"> The only potential problem is if there are open pull requests which would silently conflict with this\n\nGood catch. However, instead of adding temporary code to allow for leeway, I'd rather just reset all arm_doc_jobs on travis. Otherwise we'd have to drag along the leeway code for an unspecific amount of time.\n\n>*    W291 trailing whitespace\n>*    W191 indentation contains tabs\n>*   ",https://github.com/bitcoin/bitcoin/pull/11835#issuecomment-350353106,350353106,
jnewbery,2017-12-08T19:43:20Z,"> instead of adding temporary code to allow for leeway\n\nSorry - I wasn't suggesting going that far - just running a check and then adding a note to those PRs and manually restarting the travis jobs.\n\n> I don't see an issue fixing existing lint errors in python code and enabling those checks in this pull.\n\nI think it's better to keep this PR focused on adding the lint-python.sh infrastr",https://github.com/bitcoin/bitcoin/pull/11835#issuecomment-350354260,350354260,
MarcoFalke,2017-12-08T20:45:14Z,"Agree, makes sense.",https://github.com/bitcoin/bitcoin/pull/11835#issuecomment-350367500,350367500,
practicalswift,2017-12-10T10:51:04Z,@jnewbery Thanks for reviewing! Added a copyright header and changed the commit ordering. Looks good? :-),https://github.com/bitcoin/bitcoin/pull/11835#issuecomment-350539725,350539725,
jnewbery,2017-12-10T14:12:17Z,utACK d60b32074098d50b04e408c1304dd6f6120654ed,https://github.com/bitcoin/bitcoin/pull/11835#issuecomment-350551054,350551054,
ajtowns,2017-12-10T22:25:16Z,"utACK d60b32074098d50b04e408c1304dd6f6120654ed (I've run the new lint script locally, but haven't verified the travis changes work)\n\nThe PR checking I did for the naming convention patches mentioned above was just on filenames (""git diff --name-status $(git merge-base $PR master)..$PR""), checking to see what PRs would break this checks is a bit harder. The following looks okay:\n\n    total=",https://github.com/bitcoin/bitcoin/pull/11835#issuecomment-350586643,350586643,
MarcoFalke,2017-12-10T23:36:05Z,"Thanks for writing and running the script @ajtowns \n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nutACK d60b32074098d50b04e408c1304dd6f6120654ed\n-----BEGIN PGP SIGNATURE-----\n\niQIcBAEBCgAGBQJaLcS6AAoJENLqSFDnUoslH9gP/0PiY6125k0oO/yI2I8C8LmX\nVuQJY5JgdH0apA3mjWYoVLY0mC3vIa1HeOPPBUwXibEDBrO3rBd+OnzW2ZY6FvJ9\nKwViKukjtpK51Kt1AxJN2BBmr/W4M9nCUJ3EaQHdhmKPnrIPcKIqlkufqbpRYDFq",https://github.com/bitcoin/bitcoin/pull/11835#issuecomment-350591246,350591246,
jnewbery,2017-12-11T00:48:44Z,Awesome. Thanks @ajtowns . @MarcoFalke - do you plan to comment on those PRs or would you like me to do it?,https://github.com/bitcoin/bitcoin/pull/11835#issuecomment-350596967,350596967,
MarcoFalke,2017-12-11T01:08:34Z,"I checked that there are comments on all that are mergeable to master. The three ones by you and @ajtowns don't need a comment, I presume. (#11796, #11774,  #11771)",https://github.com/bitcoin/bitcoin/pull/11835#issuecomment-350598748,350598748,
MarcoFalke,2017-12-05T21:17:19Z,"Possibly this version is too old on travis to actually catch those?\n\nCould instead install python3-pip and then a few lines below, `pip3 install flake8 --user`",https://github.com/bitcoin/bitcoin/pull/11835#discussion_r155078232,155078232,.travis.yml
jnewbery,2017-12-08T19:02:34Z,"Can you add a copyright notice and comment please? Just copy-paste from lint-whitespace.sh and change the comment to be something like:\n\n```\n#\n# Copyright (c) 2017 The Bitcoin Core developers\n# Distributed under the MIT software license, see the accompanying\n# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n#\n# Check for specified flake8 warnings in python files",https://github.com/bitcoin/bitcoin/pull/11835#discussion_r155850300,155850300,contrib/devtools/lint-python.sh
jnewbery,2017-12-10T13:17:46Z,"Where did you get this list of error classes to ignore? I believe flake8 only uses:\n- E and W (from pyflakes)\n- F from pycodestyle\n- C from mccabe\n(see http://flake8.pycqa.org/en/latest/user/error-codes.html)\n\nWhere did the B, I and N classes come from?",https://github.com/bitcoin/bitcoin/pull/11835#discussion_r155947320,155947320,contrib/devtools/lint-python.sh
practicalswift,2017-12-10T13:28:22Z,"* `B` is used for blind except warnings - see [`flake8-blind-except`](https://pypi.python.org/pypi/flake8-blind-except)\n* `I` is used for import warnings - see [`flake8-import-order`](https://github.com/PyCQA/flake8-import-order)\n* `N` is used for naming convention warnings - see [`pep8-naming`](https://github.com/PyCQA/pep8-naming)",https://github.com/bitcoin/bitcoin/pull/11835#discussion_r155947604,155947604,contrib/devtools/lint-python.sh
jnewbery,2017-12-10T14:05:02Z,Thanks @practicalswift. I'll add those to my tool belt!,https://github.com/bitcoin/bitcoin/pull/11835#discussion_r155948683,155948683,contrib/devtools/lint-python.sh
