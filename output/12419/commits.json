[
  {
    "sha": "04f45ea52c46d71bf6213946bc08067a9712959d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNGY0NWVhNTJjNDZkNzFiZjYyMTM5NDZiYzA4MDY3YTk3MTI5NTlk",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-02-13T01:04:11Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-05-21T11:33:08Z"
      },
      "message": "wallet: Force distinct destinations in CWallet::CreateTransaction\n\nCheck that all transaction destinations, including change address\nif specified, are distinct.",
      "tree": {
        "sha": "3002dee5c3813bf058a1fcf320dc57c0a64a2ab6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3002dee5c3813bf058a1fcf320dc57c0a64a2ab6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04f45ea52c46d71bf6213946bc08067a9712959d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04f45ea52c46d71bf6213946bc08067a9712959d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/04f45ea52c46d71bf6213946bc08067a9712959d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04f45ea52c46d71bf6213946bc08067a9712959d/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2d1583ee6aff4b68dc46bcb87eb7a85f90b465c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d1583ee6aff4b68dc46bcb87eb7a85f90b465c3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2d1583ee6aff4b68dc46bcb87eb7a85f90b465c3"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 14,
      "deletions": 1
    },
    "files": [
      {
        "sha": "54a43d6e2c514ec5886aae404e5bbe5478f64421",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04f45ea52c46d71bf6213946bc08067a9712959d/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04f45ea52c46d71bf6213946bc08067a9712959d/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=04f45ea52c46d71bf6213946bc08067a9712959d",
        "patch": "@@ -2654,8 +2654,18 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n     CAmount nValue = 0;\n     int nChangePosRequest = nChangePosInOut;\n     unsigned int nSubtractFeeFromAmount = 0;\n+    std::set<CTxDestination> destinations;\n+    if (!boost::get<CNoDestination>(&coin_control.destChange)) {\n+        destinations.insert(coin_control.destChange);\n+    }\n     for (const auto& recipient : vecSend)\n     {\n+        CTxDestination destination;\n+        if (ExtractDestination(recipient.scriptPubKey, destination) &&\n+            !destinations.insert(destination).second) {\n+            strFailReason = _(\"Duplicate address found: addresses should only be used once each.\");\n+            return false;\n+        }\n         if (nValue < 0 || recipient.nAmount < 0)\n         {\n             strFailReason = _(\"Transaction amounts must not be negative\");"
      },
      {
        "sha": "761bdafad9752492fc1a27597c3d2561b5d81698",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04f45ea52c46d71bf6213946bc08067a9712959d/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04f45ea52c46d71bf6213946bc08067a9712959d/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=04f45ea52c46d71bf6213946bc08067a9712959d",
        "patch": "@@ -221,11 +221,14 @@ def run_test(self):\n         utx = get_unspent(self.nodes[2].listunspent(), 5)\n \n         inputs  = [ {'txid' : utx['txid'], 'vout' : utx['vout']} ]\n-        outputs = { self.nodes[0].getnewaddress() : Decimal(4.0) }\n+        address = self.nodes[0].getnewaddress()\n+        outputs = { address : Decimal(4.0) }\n         rawtx   = self.nodes[2].createrawtransaction(inputs, outputs)\n         dec_tx  = self.nodes[2].decoderawtransaction(rawtx)\n         assert_equal(utx['txid'], dec_tx['vin'][0]['txid'])\n \n+        assert_raises_rpc_error(-4, \"Duplicate address found: addresses should only be used once each.\", self.nodes[2].fundrawtransaction, rawtx, {'changeAddress':address})\n+\n         change = self.nodes[2].getnewaddress()\n         assert_raises_rpc_error(-8, \"changePosition out of bounds\", self.nodes[2].fundrawtransaction, rawtx, {'changeAddress':change, 'changePosition':2})\n         rawtxfund = self.nodes[2].fundrawtransaction(rawtx, {'changeAddress': change, 'changePosition': 0})"
      }
    ]
  }
]