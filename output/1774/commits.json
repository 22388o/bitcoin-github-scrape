[
  {
    "sha": "ddb709e9de1490afcfa1af045517d2228d5b864c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZGI3MDllOWRlMTQ5MGFmY2ZhMWFmMDQ1NTE3ZDIyMjhkNWI4NjRj",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2012-09-01T22:07:47Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2012-09-02T08:02:46Z"
      },
      "message": "Bugfix: Require OrderedTxItems to provide properly scoped accounting entry list\n\nOrderedTxItems returns a multimap of pointers, but needs a place to store the actual CAccountingEntries it points to.\nIt had been using a stack item, which was clobbered as soon as it returned, resulting in undefined behaviour.\nThis fixes at least bug #1768.",
      "tree": {
        "sha": "46a8f68d95e38d527729e2b7da7976dad8654921",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46a8f68d95e38d527729e2b7da7976dad8654921"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ddb709e9de1490afcfa1af045517d2228d5b864c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddb709e9de1490afcfa1af045517d2228d5b864c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ddb709e9de1490afcfa1af045517d2228d5b864c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddb709e9de1490afcfa1af045517d2228d5b864c/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c3f95ef13f48d21db53992984976eac93e7a08fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3f95ef13f48d21db53992984976eac93e7a08fc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c3f95ef13f48d21db53992984976eac93e7a08fc"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 12,
      "deletions": 6
    },
    "files": [
      {
        "sha": "20df4c0a68954e67989d825912a651470c77b027",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddb709e9de1490afcfa1af045517d2228d5b864c/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddb709e9de1490afcfa1af045517d2228d5b864c/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=ddb709e9de1490afcfa1af045517d2228d5b864c",
        "patch": "@@ -987,7 +987,8 @@ Value listtransactions(const Array& params, bool fHelp)\n \n     Array ret;\n \n-    CWallet::TxItems txOrdered = pwalletMain->OrderedTxItems(strAccount);\n+    std::list<CAccountingEntry> acentries;\n+    CWallet::TxItems txOrdered = pwalletMain->OrderedTxItems(acentries, strAccount);\n \n     // iterate backwards until we have nCount items to return:\n     for (CWallet::TxItems::reverse_iterator it = txOrdered.rbegin(); it != txOrdered.rend(); ++it)"
      },
      {
        "sha": "3af9fdaeaeed21e2cc91b1e8b7522d67773ffefb",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddb709e9de1490afcfa1af045517d2228d5b864c/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddb709e9de1490afcfa1af045517d2228d5b864c/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=ddb709e9de1490afcfa1af045517d2228d5b864c",
        "patch": "@@ -291,8 +291,7 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n     return true;\n }\n \n-CWallet::TxItems\n-CWallet::OrderedTxItems(std::string strAccount)\n+CWallet::TxItems CWallet::OrderedTxItems(std::list<CAccountingEntry>& acentries, std::string strAccount)\n {\n     CWalletDB walletdb(strWalletFile);\n \n@@ -306,7 +305,7 @@ CWallet::OrderedTxItems(std::string strAccount)\n         CWalletTx* wtx = &((*it).second);\n         txOrdered.insert(make_pair(wtx->nOrderPos, TxPair(wtx, (CAccountingEntry*)0)));\n     }\n-    list<CAccountingEntry> acentries;\n+    acentries.clear();\n     walletdb.ListAccountCreditDebit(strAccount, acentries);\n     BOOST_FOREACH(CAccountingEntry& entry, acentries)\n     {\n@@ -375,7 +374,8 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn)\n                     {\n                         // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n                         int64 latestTolerated = latestNow + 300;\n-                        TxItems txOrdered = OrderedTxItems();\n+                        std::list<CAccountingEntry> acentries;\n+                        TxItems txOrdered = OrderedTxItems(acentries);\n                         for (TxItems::reverse_iterator it = txOrdered.rbegin(); it != txOrdered.rend(); ++it)\n                         {\n                             CWalletTx *const pwtx = (*it).second.first;"
      },
      {
        "sha": "65d3448212dd5fe59f3a3274a960cb33d3544186",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddb709e9de1490afcfa1af045517d2228d5b864c/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddb709e9de1490afcfa1af045517d2228d5b864c/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=ddb709e9de1490afcfa1af045517d2228d5b864c",
        "patch": "@@ -146,7 +146,12 @@ class CWallet : public CCryptoKeyStore\n \n     typedef std::pair<CWalletTx*, CAccountingEntry*> TxPair;\n     typedef std::multimap<int64, TxPair > TxItems;\n-    TxItems OrderedTxItems(std::string strAccount = \"\");\n+\n+    /** Get the wallet's activity log\n+        @return multimap of ordered transactions and accounting entries\n+        @warning Returned pointers are *only* valid within the scope of passed acentries\n+     */\n+    TxItems OrderedTxItems(std::list<CAccountingEntry>& acentries, std::string strAccount = \"\");\n \n     void MarkDirty();\n     bool AddToWallet(const CWalletTx& wtxIn);"
      }
    ]
  }
]