gavinandresen,2012-09-01T22:22:03Z,ACK. makes valgrind happy again.\n,https://github.com/bitcoin/bitcoin/pull/1774#issuecomment-8217135,8217135,
laanwj,2012-09-02T06:44:10Z,"I agree that this would solve the immediate problem. std::list (unlike std::vector) does not invalidate iterators when items are added, so it is safe to keep pointers to items in it.\n\nI do think the solution is a bit strange, but maybe it's just me. Why not return a type from OrderedTxItems that has the actual CAccountingEntry instead of one that has pointers to another (temporary) structure, wh",https://github.com/bitcoin/bitcoin/pull/1774#issuecomment-8219467,8219467,
luke-jr,2012-09-02T07:36:22Z,"@laanwj It does feel strange to me, but I failed to think up a better way short of trying to rewrite it in some other paradigm. Maybe boost::variant would work better (most of the CAccountingEntry pointers are NULL), but I'm not comfortable with adding that into the mix myself this late in the release cycle.\n",https://github.com/bitcoin/bitcoin/pull/1774#issuecomment-8219723,8219723,
laanwj,2012-09-02T07:42:49Z,"Yes, this is the simplest solution for now, that's for sure. Maybe add a (doxygen) comment to CWallet::OrderedTxItems that warns of the dangers, instead of only at the callsite in wallet.h.\n",https://github.com/bitcoin/bitcoin/pull/1774#issuecomment-8219756,8219756,
luke-jr,2012-09-02T08:02:56Z,Like that?\n,https://github.com/bitcoin/bitcoin/pull/1774#issuecomment-8219849,8219849,
laanwj,2012-09-02T10:22:21Z,Yes. ACK\n,https://github.com/bitcoin/bitcoin/pull/1774#issuecomment-8220626,8220626,
gmaxwell,2012-09-02T17:36:26Z,ACK. (oops. clicked the wrong button)\n,https://github.com/bitcoin/bitcoin/pull/1774#issuecomment-8224051,8224051,
laanwj,2012-09-02T06:35:53Z,Don't you mean .clear()?\n,https://github.com/bitcoin/bitcoin/pull/1774#discussion_r1513072,1513072,src/wallet.cpp
luke-jr,2012-09-02T07:33:12Z,"Yes, oops.\n",https://github.com/bitcoin/bitcoin/pull/1774#discussion_r1513125,1513125,src/wallet.cpp
