DrahtBot,2021-04-26 08:36:39,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22555](https://github.com/bitcoin/bitcoin/pull/22555) (build: Fix `make apk` for Android w/ non-default SOURCES_PATH in ",https://github.com/bitcoin/bitcoin/pull/21778#issuecomment-826631869,826631869,
ryanofsky,2021-04-26 13:54:00,"~~This definitely seems like a good thing to add support for, but it seems sad to have to drop support for the open source compiler at the same time as adding support for the closed source one. I don't know enough about this to have an informed opinion, though.~~\n\nEDIT: Just a misunderstanding",https://github.com/bitcoin/bitcoin/pull/21778#issuecomment-826854315,826854315,
fanquake,2021-04-26 13:59:47,"> but it seems sad to have to drop support for the open source compiler at the same time as adding support for the closed source one. \n\nI might be misunderstanding your comment, but the opposite is happening here. We're migrating away from using Apples, irregularly open sourced tools (cctools, ld64), to just vanilla LLVM (lld), which is entirely [open source](https://github.com/llvm/llvm-proje",https://github.com/bitcoin/bitcoin/pull/21778#issuecomment-826858722,826858722,
ryanofsky,2021-04-26 14:11:26,"> I might be misunderstanding your comment, but the opposite is happening here. We're migrating away from using Apples, irregularly open sourced tools (cctools, ld64), to just vanilla LLVM (lld), which is entirely [open source](https://github.com/llvm/llvm-project/).\n\nMy bad! I thought this was switching from an unsupported apple open-source toolchain to an supported apple closed source toolch",https://github.com/bitcoin/bitcoin/pull/21778#issuecomment-826867805,826867805,
theuni,2021-04-26 18:58:09,"Very nice! Strong concept ACK, but obviously we can't use this until all features we need are supported. But it's great to see that linking finally works!\n\nFor a little extra context beyond what @fanquake said above, the macOS clang+cctools build has always been a wonky outlier because we have to build our own (very unsupported) toolchain first. LD64 is apple's libre/open-source linker, and th",https://github.com/bitcoin/bitcoin/pull/21778#issuecomment-827071574,827071574,
fanquake,2021-04-28 03:06:19,"> Is cctools still needed at all? LLVM ships bitcode equivalents of most binutils tools (ar, nm, ranlib, etc), I wonder if we can use those instead. Maybe they require lto?\n\n@theuni no cctools is no longer required. I drop the native_cctools as part of this PR and we just use the LLVM tools.",https://github.com/bitcoin/bitcoin/pull/21778#issuecomment-828107267,828107267,
theuni,2021-04-28 04:32:27,"> @theuni no cctools is no longer required. I drop the native_cctools as part of this PR and we just use the LLVM tools.\n\nApologies for reading too quickly, I see now that I only looked at the first commit. Turns out the 3rd one is the one I expected :)",https://github.com/bitcoin/bitcoin/pull/21778#issuecomment-828135842,828135842,
fanquake,2021-05-01 06:10:48,"Rebased for #21793, and rebased on top of #19817. Made some additional changes, such as renaming the `native_cctools` package to `native_llvm`, and removed some now-redundant info from the macdeploy documentation.\n\nNote: I'm pretty sure the use of `ZERO_AR_DATE` can now be dropped entirely, but have left that out for now.",https://github.com/bitcoin/bitcoin/pull/21778#issuecomment-830560517,830560517,
