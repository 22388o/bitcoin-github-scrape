[
  {
    "sha": "021fc6a87666e4262ead1ab2702811c5ec8100da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjFmYzZhODc2NjZlNDI2MmVhZDFhYjI3MDI4MTFjNWVjODEwMGRh",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-03-17T16:48:05Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-03-17T16:53:05Z"
      },
      "message": "Fix calculation of balances and available coins.\n\nNo longer consider coins which aren't in our mempool.",
      "tree": {
        "sha": "55dae8bc1aac096ced51eee787ebb1422669a311",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/55dae8bc1aac096ced51eee787ebb1422669a311"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/021fc6a87666e4262ead1ab2702811c5ec8100da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/021fc6a87666e4262ead1ab2702811c5ec8100da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/021fc6a87666e4262ead1ab2702811c5ec8100da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/021fc6a87666e4262ead1ab2702811c5ec8100da/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f034bced269c4859809d320dcfbdc4b008191b85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f034bced269c4859809d320dcfbdc4b008191b85",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f034bced269c4859809d320dcfbdc4b008191b85"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "f1e61c710f288e3d88b9101c0d709e1369ca84f9",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/021fc6a87666e4262ead1ab2702811c5ec8100da/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/021fc6a87666e4262ead1ab2702811c5ec8100da/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=021fc6a87666e4262ead1ab2702811c5ec8100da",
        "patch": "@@ -1578,7 +1578,7 @@ CAmount CWallet::GetUnconfirmedBalance() const\n         for (map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n         {\n             const CWalletTx* pcoin = &(*it).second;\n-            if (!CheckFinalTx(*pcoin) || (!pcoin->IsTrusted() && pcoin->GetDepthInMainChain() == 0))\n+            if (!pcoin->IsTrusted() && pcoin->GetDepthInMainChain() == 0 && pcoin->InMempool())\n                 nTotal += pcoin->GetAvailableCredit();\n         }\n     }\n@@ -1623,7 +1623,7 @@ CAmount CWallet::GetUnconfirmedWatchOnlyBalance() const\n         for (map<uint256, CWalletTx>::const_iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n         {\n             const CWalletTx* pcoin = &(*it).second;\n-            if (!CheckFinalTx(*pcoin) || (!pcoin->IsTrusted() && pcoin->GetDepthInMainChain() == 0))\n+            if (!pcoin->IsTrusted() && pcoin->GetDepthInMainChain() == 0 && pcoin->InMempool())\n                 nTotal += pcoin->GetAvailableWatchOnlyCredit();\n         }\n     }\n@@ -1668,6 +1668,11 @@ void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed, const\n             if (nDepth < 0)\n                 continue;\n \n+            // We should not consider coins which aren't at least in our mempool\n+            // It's possible for these to be conflicted via ancestors which we may never be able to detect\n+            if (nDepth == 0 && !pcoin->InMempool())\n+                continue;\n+\n             for (unsigned int i = 0; i < pcoin->vout.size(); i++) {\n                 isminetype mine = IsMine(pcoin->vout[i]);\n                 if (!(IsSpent(wtxid, i)) && mine != ISMINE_NO &&"
      }
    ]
  },
  {
    "sha": "168f7bf8707a4b6f3adcb8445d0cc0124111f905",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNjhmN2JmODcwN2E0YjZmM2FkY2I4NDQ1ZDBjYzAxMjQxMTFmOTA1",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-03-17T21:56:06Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-03-17T21:56:06Z"
      },
      "message": "Modify treatment of unconfirmed txs for accounting by account.\n\nUnconfirmed txs that are no longer in your mempool will no longer affect your balance in either direction for accounting by account.",
      "tree": {
        "sha": "6fa85a3c8ec2903b0aff7d9bce7dac5ad06994be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6fa85a3c8ec2903b0aff7d9bce7dac5ad06994be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/168f7bf8707a4b6f3adcb8445d0cc0124111f905",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/168f7bf8707a4b6f3adcb8445d0cc0124111f905",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/168f7bf8707a4b6f3adcb8445d0cc0124111f905",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/168f7bf8707a4b6f3adcb8445d0cc0124111f905/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "021fc6a87666e4262ead1ab2702811c5ec8100da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/021fc6a87666e4262ead1ab2702811c5ec8100da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/021fc6a87666e4262ead1ab2702811c5ec8100da"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "eb7dee283c06cd4a363234b91ea15ad099a195e6",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/168f7bf8707a4b6f3adcb8445d0cc0124111f905/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/168f7bf8707a4b6f3adcb8445d0cc0124111f905/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=168f7bf8707a4b6f3adcb8445d0cc0124111f905",
        "patch": "@@ -685,13 +685,14 @@ CAmount GetAccountBalance(CWalletDB& walletdb, const string& strAccount, int nMi\n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); ++it)\n     {\n         const CWalletTx& wtx = (*it).second;\n-        if (!CheckFinalTx(wtx) || wtx.GetBlocksToMaturity() > 0 || wtx.GetDepthInMainChain() < 0)\n+        int depth = wtx.GetDepthInMainChain();\n+        if (!CheckFinalTx(wtx) || wtx.GetBlocksToMaturity() > 0 || depth < 0 || (depth == 0 && !wtx.InMempool()))\n             continue;\n \n         CAmount nReceived, nSent, nFee;\n         wtx.GetAccountAmounts(strAccount, nReceived, nSent, nFee, filter);\n \n-        if (nReceived != 0 && wtx.GetDepthInMainChain() >= nMinDepth)\n+        if (nReceived != 0 && depth >= nMinDepth)\n             nBalance += nReceived;\n         nBalance -= nSent + nFee;\n     }\n@@ -757,15 +758,16 @@ UniValue getbalance(const UniValue& params, bool fHelp)\n         for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); ++it)\n         {\n             const CWalletTx& wtx = (*it).second;\n-            if (!CheckFinalTx(wtx) || wtx.GetBlocksToMaturity() > 0 || wtx.GetDepthInMainChain() < 0)\n+            int depth = wtx.GetDepthInMainChain();\n+            if (!CheckFinalTx(wtx) || wtx.GetBlocksToMaturity() > 0 || depth < 0 || (depth == 0 && !wtx.InMempool()))\n                 continue;\n \n             CAmount allFee;\n             string strSentAccount;\n             list<COutputEntry> listReceived;\n             list<COutputEntry> listSent;\n             wtx.GetAmounts(listReceived, listSent, allFee, strSentAccount, filter);\n-            if (wtx.GetDepthInMainChain() >= nMinDepth)\n+            if (depth >= nMinDepth)\n             {\n                 BOOST_FOREACH(const COutputEntry& r, listReceived)\n                     nBalance += r.amount;"
      }
    ]
  }
]