[
  {
    "sha": "8302a0bcd86a39db323261a886b9186f04ae5a9f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MzAyYTBiY2Q4NmEzOWRiMzIzMjYxYTg4NmI5MTg2ZjA0YWU1YTlm",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-10-04T21:29:33Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-10-27T18:56:24Z"
      },
      "message": "gui: Don't use global connman in bantable",
      "tree": {
        "sha": "0e83d30708af11ae8ac3b44c2087819549e22f82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e83d30708af11ae8ac3b44c2087819549e22f82"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8302a0bcd86a39db323261a886b9186f04ae5a9f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8302a0bcd86a39db323261a886b9186f04ae5a9f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8302a0bcd86a39db323261a886b9186f04ae5a9f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8302a0bcd86a39db323261a886b9186f04ae5a9f/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "83234d4d1723e4f207a20f1abbe9432566a7d5ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83234d4d1723e4f207a20f1abbe9432566a7d5ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/83234d4d1723e4f207a20f1abbe9432566a7d5ee"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 34,
      "deletions": 28
    },
    "files": [
      {
        "sha": "89d5ae4f5e52cbaab1e54f60ae56c0256fdcd127",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8302a0bcd86a39db323261a886b9186f04ae5a9f/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8302a0bcd86a39db323261a886b9186f04ae5a9f/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=8302a0bcd86a39db323261a886b9186f04ae5a9f",
        "patch": "@@ -2100,6 +2100,9 @@ bool CConnman::Start(boost::thread_group& threadGroup, CScheduler& scheduler, st\n \n         LogPrint(\"net\", \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n             banmap.size(), GetTimeMillis() - nStart);\n+\n+        if (clientInterface)\n+            clientInterface->BannedListChanged();\n     } else {\n         LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n         SetBannedSetDirty(true); // force write"
      },
      {
        "sha": "9a9c6af9d201d54c604bbadbc48f76d0293b67af",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 24,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8302a0bcd86a39db323261a886b9186f04ae5a9f/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8302a0bcd86a39db323261a886b9186f04ae5a9f/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=8302a0bcd86a39db323261a886b9186f04ae5a9f",
        "patch": "@@ -45,24 +45,13 @@ class BanTablePriv\n     Qt::SortOrder sortOrder;\n \n     /** Pull a full list of banned nodes from CNode into our cache */\n-    void refreshBanlist()\n+    void updateBanlist(QList<CCombinedBan> banlist)\n     {\n-        banmap_t banMap;\n-        if(g_connman)\n-            g_connman->GetBanned(banMap);\n-\n-        cachedBanlist.clear();\n-#if QT_VERSION >= 0x040700\n-        cachedBanlist.reserve(banMap.size());\n-#endif\n-        for (banmap_t::iterator it = banMap.begin(); it != banMap.end(); it++)\n-        {\n-            CCombinedBan banEntry;\n-            banEntry.subnet = (*it).first;\n-            banEntry.banEntry = (*it).second;\n-            cachedBanlist.append(banEntry);\n-        }\n+        cachedBanlist = std::move(banlist);\n+    }\n \n+    void sortBanlist()\n+    {\n         if (sortColumn >= 0)\n             // sort cachedBanlist (use stable sort to prevent rows jumping around unneceesarily)\n             qStableSort(cachedBanlist.begin(), cachedBanlist.end(), BannedNodeLessThan(sortColumn, sortOrder));\n@@ -90,9 +79,6 @@ BanTableModel::BanTableModel(ClientModel *parent) :\n     priv = new BanTablePriv();\n     // default to unsorted\n     priv->sortColumn = -1;\n-\n-    // load initial data\n-    refresh();\n }\n \n int BanTableModel::rowCount(const QModelIndex &parent) const\n@@ -160,18 +146,19 @@ QModelIndex BanTableModel::index(int row, int column, const QModelIndex &parent)\n     return QModelIndex();\n }\n \n-void BanTableModel::refresh()\n+void BanTableModel::update(QList<CCombinedBan> banlist)\n {\n-    Q_EMIT layoutAboutToBeChanged();\n-    priv->refreshBanlist();\n-    Q_EMIT layoutChanged();\n+    priv->updateBanlist(std::move(banlist));\n+    sort(priv->sortColumn, priv->sortOrder);\n }\n \n void BanTableModel::sort(int column, Qt::SortOrder order)\n {\n+    Q_EMIT layoutAboutToBeChanged();\n     priv->sortColumn = column;\n     priv->sortOrder = order;\n-    refresh();\n+    priv->sortBanlist();\n+    Q_EMIT layoutChanged();\n }\n \n bool BanTableModel::shouldShow()"
      },
      {
        "sha": "d4217b706d5ddb744197dfd9b2587186feb85fa7",
        "filename": "src/qt/bantablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8302a0bcd86a39db323261a886b9186f04ae5a9f/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8302a0bcd86a39db323261a886b9186f04ae5a9f/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=8302a0bcd86a39db323261a886b9186f04ae5a9f",
        "patch": "@@ -61,7 +61,7 @@ class BanTableModel : public QAbstractTableModel\n     /*@}*/\n \n public Q_SLOTS:\n-    void refresh();\n+    void update(QList<CCombinedBan> banlist);\n \n private:\n     ClientModel *clientModel;"
      },
      {
        "sha": "016cd0cfb2e295bfc02f60aa52fbe2b4cafadcd4",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 1,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8302a0bcd86a39db323261a886b9186f04ae5a9f/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8302a0bcd86a39db323261a886b9186f04ae5a9f/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=8302a0bcd86a39db323261a886b9186f04ae5a9f",
        "patch": "@@ -213,7 +213,23 @@ QString ClientModel::dataDir() const\n \n void ClientModel::updateBanlist()\n {\n-    banTableModel->refresh();\n+    banmap_t banMap;\n+    if(!g_connman)\n+        return;\n+    g_connman->GetBanned(banMap);\n+\n+    QList<CCombinedBan> banlist;\n+#if QT_VERSION >= 0x040700\n+    banlist.reserve(banMap.size());\n+#endif\n+    for (banmap_t::const_iterator it = banMap.begin(); it != banMap.end(); it++)\n+    {\n+        CCombinedBan banEntry;\n+        banEntry.subnet = (*it).first;\n+        banEntry.banEntry = (*it).second;\n+        banlist.append(banEntry);\n+    }\n+    banTableModel->update(std::move(banlist));\n }\n \n // Handlers for core signals"
      },
      {
        "sha": "e5018d3f14664bc6c227f361084c0d2e5836babe",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8302a0bcd86a39db323261a886b9186f04ae5a9f/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8302a0bcd86a39db323261a886b9186f04ae5a9f/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=8302a0bcd86a39db323261a886b9186f04ae5a9f",
        "patch": "@@ -998,7 +998,7 @@ void RPCConsole::banSelectedNode(int bantime)\n     if(stats) {\n         g_connman->Ban(stats->nodeStats.addr, BanReasonManuallyAdded, bantime);\n         clearSelectedNode();\n-        clientModel->getBanTableModel()->refresh();\n+        // BannedListChanged signal will take care of refreshing\n     }\n }\n \n@@ -1015,7 +1015,7 @@ void RPCConsole::unbanSelectedNode()\n     if (possibleSubnet.IsValid() && g_connman)\n     {\n         g_connman->Unban(possibleSubnet);\n-        clientModel->getBanTableModel()->refresh();\n+        // BannedListChanged signal will take care of refreshing\n     }\n }\n "
      }
    ]
  },
  {
    "sha": "9da6613b67a982587589e00609dc21107907a861",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZGE2NjEzYjY3YTk4MjU4NzU4OWUwMDYwOWRjMjExMDc5MDdhODYx",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-10-04T22:52:35Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-10-27T18:56:24Z"
      },
      "message": "gui: don't use global connman in peertable",
      "tree": {
        "sha": "3a8ff2ca7bcf67299eecd005ca97adb031f141d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a8ff2ca7bcf67299eecd005ca97adb031f141d5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9da6613b67a982587589e00609dc21107907a861",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9da6613b67a982587589e00609dc21107907a861",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9da6613b67a982587589e00609dc21107907a861",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9da6613b67a982587589e00609dc21107907a861/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8302a0bcd86a39db323261a886b9186f04ae5a9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8302a0bcd86a39db323261a886b9186f04ae5a9f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8302a0bcd86a39db323261a886b9186f04ae5a9f"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 31,
      "deletions": 22
    },
    "files": [
      {
        "sha": "d3a392ab7de9c23a982920e6a8c5f0d865d8ee0a",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9da6613b67a982587589e00609dc21107907a861/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9da6613b67a982587589e00609dc21107907a861/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=9da6613b67a982587589e00609dc21107907a861",
        "patch": "@@ -110,6 +110,29 @@ QDateTime ClientModel::getLastBlockDate() const\n     return QDateTime::fromTime_t(Params().GenesisBlock().GetBlockTime()); // Genesis block's time of current network\n }\n \n+QList<CNodeCombinedStats> ClientModel::getNodeStats() const\n+{\n+    std::vector<CNodeStats> vstats;\n+    if(g_connman)\n+        g_connman->GetNodeStats(vstats);\n+\n+    QList<CNodeCombinedStats> combinedStats;\n+#if QT_VERSION >= 0x040700\n+    combinedStats.reserve(vstats.size());\n+#endif\n+    Q_FOREACH (const CNodeStats& nodestats, vstats)\n+    {\n+        CNodeCombinedStats stats;\n+        stats.nodeStateStats.nMisbehavior = 0;\n+        stats.nodeStateStats.nSyncHeight = -1;\n+        stats.nodeStateStats.nCommonHeight = -1;\n+        stats.fNodeStateStatsAvailable = false;\n+        stats.nodeStats = nodestats;\n+        combinedStats.append(stats);\n+    }\n+    return combinedStats;\n+}\n+\n long ClientModel::getMempoolSize() const\n {\n     return mempool.size();"
      },
      {
        "sha": "589ecae47e5e5a5206227ddcc04b37f00daedc46",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9da6613b67a982587589e00609dc21107907a861/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9da6613b67a982587589e00609dc21107907a861/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=9da6613b67a982587589e00609dc21107907a861",
        "patch": "@@ -21,6 +21,8 @@ QT_BEGIN_NAMESPACE\n class QTimer;\n QT_END_NAMESPACE\n \n+struct CNodeCombinedStats;\n+\n enum BlockSource {\n     BLOCK_SOURCE_NONE,\n     BLOCK_SOURCE_REINDEX,\n@@ -64,6 +66,8 @@ class ClientModel : public QObject\n     double getVerificationProgress(const CBlockIndex *tip) const;\n     QDateTime getLastBlockDate() const;\n \n+    QList<CNodeCombinedStats> getNodeStats() const;\n+\n     //! Return true if core is doing initial block download\n     bool inInitialBlockDownload() const;\n     //! Return true if core is importing blocks"
      },
      {
        "sha": "f0bef308e50e548dd339962399baa401e90964bf",
        "filename": "src/qt/peertablemodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 22,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9da6613b67a982587589e00609dc21107907a861/src/qt/peertablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9da6613b67a982587589e00609dc21107907a861/src/qt/peertablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.cpp?ref=9da6613b67a982587589e00609dc21107907a861",
        "patch": "@@ -51,28 +51,9 @@ class PeerTablePriv\n     std::map<NodeId, int> mapNodeRows;\n \n     /** Pull a full list of peers from vNodes into our cache */\n-    void refreshPeers()\n+    void refreshPeers(QList<CNodeCombinedStats> combinedStats)\n     {\n-        {\n-            cachedNodeStats.clear();\n-            std::vector<CNodeStats> vstats;\n-            if(g_connman)\n-                g_connman->GetNodeStats(vstats);\n-#if QT_VERSION >= 0x040700\n-            cachedNodeStats.reserve(vstats.size());\n-#endif\n-            Q_FOREACH (const CNodeStats& nodestats, vstats)\n-            {\n-                CNodeCombinedStats stats;\n-                stats.nodeStateStats.nMisbehavior = 0;\n-                stats.nodeStateStats.nSyncHeight = -1;\n-                stats.nodeStateStats.nCommonHeight = -1;\n-                stats.fNodeStateStatsAvailable = false;\n-                stats.nodeStats = nodestats;\n-                cachedNodeStats.append(stats);\n-            }\n-        }\n-\n+        cachedNodeStats = std::move(combinedStats);\n         // Try to retrieve the CNodeStateStats for each node.\n         {\n             TRY_LOCK(cs_main, lockMain);\n@@ -214,8 +195,9 @@ const CNodeCombinedStats *PeerTableModel::getNodeStats(int idx)\n \n void PeerTableModel::refresh()\n {\n+    QList<CNodeCombinedStats> stats = clientModel->getNodeStats();\n     Q_EMIT layoutAboutToBeChanged();\n-    priv->refreshPeers();\n+    priv->refreshPeers(std::move(stats));\n     Q_EMIT layoutChanged();\n }\n "
      }
    ]
  }
]