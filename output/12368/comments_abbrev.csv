MarcoFalke,2018-02-06T19:22:11Z,"Thanks, fixes the test failures for me. (At least the wallet and mempool related ones, heh)\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK 85aa8398f5d13c659299b81cdae377462b4f8316\n-----BEGIN PGP SIGNATURE-----\n\niQIcBAEBCgAGBQJaefz+AAoJENLqSFDnUoslrz4P/07HOkA1I4XAQTGUcFpWYVgM\nLdLJIdSY1HcflR/l9L07oNU7wZgKMGRVYMU+fn6sB1FPmJVJAWURSKBBrq1dr37h\nAHIkHG4nZAJuxcU1oi+s0n8/Kx",https://github.com/bitcoin/bitcoin/pull/12368#issuecomment-363535207,363535207,
MarcoFalke,2018-02-06T21:15:17Z,re-utACK 02fc8863630a20e75230f8bc3ba1051c480ae560 (second commit obviously not for backport),https://github.com/bitcoin/bitcoin/pull/12368#issuecomment-363566834,363566834,
promag,2018-02-06T22:20:02Z,"I don't think this is correct because of lock order. You correctly say\n```cpp\n// mempool ""read lock"" (held through GetMainSignals().TransactionAddedToMempool())\n```\nAnd when it hits `CWallet::TransactionAddedToMempool` the lock order will be `cs_main, mempool.cs, cs_wallet`.\n\nBut, for instance, `listtransactions` RPC when eventually reaches `WalletTxToJSON`, the lock order will be `cs_",https://github.com/bitcoin/bitcoin/pull/12368#issuecomment-363584547,363584547,
TheBlueMatt,2018-02-06T22:24:44Z,There is no lock order across TransactionAddedToMempool as it is called on a background thread (and can wait as long as it wants).,https://github.com/bitcoin/bitcoin/pull/12368#issuecomment-363585868,363585868,
promag,2018-02-06T22:34:15Z,"Right, `GetMainSignals().TransactionAddedToMempool` enqueues the signal!\n\nutACK 02fc886.",https://github.com/bitcoin/bitcoin/pull/12368#issuecomment-363588397,363588397,
sipa,2018-02-07T03:21:31Z,"utACK 02fc8863630a20e75230f8bc3ba1051c480ae560. We probably want to rethink how locking of chainstate/mempool works later on (either by using actual rwlocks, or by allowing the mempool to lag behind chain validation).",https://github.com/bitcoin/bitcoin/pull/12368#issuecomment-363643941,363643941,
devrandom,2018-02-07T17:27:45Z,utACK https://github.com/bitcoin/bitcoin/pull/12368/commits/02fc8863630a20e75230f8bc3ba1051c480ae560,https://github.com/bitcoin/bitcoin/pull/12368#issuecomment-363845440,363845440,
