[
  {
    "sha": "85aa8398f5d13c659299b81cdae377462b4f8316",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NWFhODM5OGY1ZDEzYzY1OTI5OWI4MWNkYWUzNzc0NjJiNGY4MzE2",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-02-06T18:51:44Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-02-06T18:51:44Z"
      },
      "message": "Hold mempool.cs for the duration of ATMP.\n\nThis resolves an issue where getrawmempool() can race mempool\nnotification signals. Intuitively we use mempool.cs as a \"read\nlock\" on the mempool with cs_main being the write lock, so holding\nthe read lock intermittently while doing write operations is\nsomewhat strange.\nThis also avoids the introduction of cs_main in getrawmempool()\nwhich reviewers objected to in the previous fix in #12273",
      "tree": {
        "sha": "2d1fd73c3efdec208b4e607ea403a38275cec668",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d1fd73c3efdec208b4e607ea403a38275cec668"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85aa8398f5d13c659299b81cdae377462b4f8316",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85aa8398f5d13c659299b81cdae377462b4f8316",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/85aa8398f5d13c659299b81cdae377462b4f8316",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85aa8398f5d13c659299b81cdae377462b4f8316/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1462bde767a121233118c04c5629bd9de1ba0f16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1462bde767a121233118c04c5629bd9de1ba0f16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1462bde767a121233118c04c5629bd9de1ba0f16"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 1,
      "deletions": 8
    },
    "files": [
      {
        "sha": "a8b41d16e6a98437b66d6c82a2fd2741a08c4dac",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85aa8398f5d13c659299b81cdae377462b4f8316/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85aa8398f5d13c659299b81cdae377462b4f8316/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=85aa8398f5d13c659299b81cdae377462b4f8316",
        "patch": "@@ -547,6 +547,7 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n     const CTransaction& tx = *ptx;\n     const uint256 hash = tx.GetHash();\n     AssertLockHeld(cs_main);\n+    LOCK(pool.cs); // mempool \"read lock\" (held through GetMainSignals().TransactionAddedToMempool())\n     if (pfMissingInputs)\n         *pfMissingInputs = false;\n \n@@ -581,8 +582,6 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n \n     // Check for conflicts with in-memory transactions\n     std::set<uint256> setConflicts;\n-    {\n-    LOCK(pool.cs); // protect pool.mapNextTx\n     for (const CTxIn &txin : tx.vin)\n     {\n         auto itConflicting = pool.mapNextTx.find(txin.prevout);\n@@ -623,15 +622,12 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n             }\n         }\n     }\n-    }\n \n     {\n         CCoinsView dummy;\n         CCoinsViewCache view(&dummy);\n \n         LockPoints lp;\n-        {\n-        LOCK(pool.cs);\n         CCoinsViewMemPool viewMemPool(pcoinsTip.get(), pool);\n         view.SetBackend(viewMemPool);\n \n@@ -670,8 +666,6 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         if (!CheckSequenceLocks(tx, STANDARD_LOCKTIME_VERIFY_FLAGS, &lp))\n             return state.DoS(0, false, REJECT_NONSTANDARD, \"non-BIP68-final\");\n \n-        } // end LOCK(pool.cs)\n-\n         CAmount nFees = 0;\n         if (!Consensus::CheckTxInputs(tx, state, view, GetSpendHeight(view), nFees)) {\n             return error(\"%s: Consensus::CheckTxInputs: %s, %s\", __func__, tx.GetHash().ToString(), FormatStateMessage(state));\n@@ -768,7 +762,6 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         // If we don't hold the lock allConflicting might be incomplete; the\n         // subsequent RemoveStaged() and addUnchecked() calls don't guarantee\n         // mempool consistency for us.\n-        LOCK(pool.cs);\n         const bool fReplacementTransaction = setConflicts.size();\n         if (fReplacementTransaction)\n         {"
      }
    ]
  },
  {
    "sha": "02fc8863630a20e75230f8bc3ba1051c480ae560",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMmZjODg2MzYzMGEyMGU3NTIzMGY4YmMzYmExMDUxYzQ4MGFlNTYw",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-02-06T19:55:36Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-02-06T19:55:36Z"
      },
      "message": "Add braces to meet code style on line-after-the-one-changed.",
      "tree": {
        "sha": "371045b7e7db2765970eed343aa0bed78c93adff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/371045b7e7db2765970eed343aa0bed78c93adff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02fc8863630a20e75230f8bc3ba1051c480ae560",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02fc8863630a20e75230f8bc3ba1051c480ae560",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/02fc8863630a20e75230f8bc3ba1051c480ae560",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02fc8863630a20e75230f8bc3ba1051c480ae560/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "85aa8398f5d13c659299b81cdae377462b4f8316",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85aa8398f5d13c659299b81cdae377462b4f8316",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/85aa8398f5d13c659299b81cdae377462b4f8316"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "eb8599b7692ea58d09cbff7f74820589445356ed",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02fc8863630a20e75230f8bc3ba1051c480ae560/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02fc8863630a20e75230f8bc3ba1051c480ae560/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=02fc8863630a20e75230f8bc3ba1051c480ae560",
        "patch": "@@ -548,8 +548,9 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n     const uint256 hash = tx.GetHash();\n     AssertLockHeld(cs_main);\n     LOCK(pool.cs); // mempool \"read lock\" (held through GetMainSignals().TransactionAddedToMempool())\n-    if (pfMissingInputs)\n+    if (pfMissingInputs) {\n         *pfMissingInputs = false;\n+    }\n \n     if (!CheckTransaction(tx, state))\n         return false; // state filled in by CheckTransaction"
      }
    ]
  }
]