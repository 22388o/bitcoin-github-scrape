[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666587078",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-666587078",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 666587078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjU4NzA3OA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-30T18:33:59Z",
    "updated_at": "2020-07-30T18:33:59Z",
    "author_association": "MEMBER",
    "body": "Hmm, I think it is hard to write a meaningful test case right now. Locally I tested with\r\n\r\n```diff\r\ndiff --git a/src/init.cpp b/src/init.cpp\r\nindex 50d25e672e..7fb8b3aaa7 100644\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -1563,7 +1563,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node)\r\n             const int64_t load_block_index_start_time = GetTimeMillis();\r\n             try {\r\n                 LOCK(cs_main);\r\n-                chainman.InitializeChainstate(node.mempool);\r\n+                chainman.InitializeChainstate(nullptr);\r\n                 chainman.m_total_coinstip_cache = nCoinCacheUsage;\r\n                 chainman.m_total_coinsdb_cache = nCoinDBCache;\r\n \r\n```\r\n\r\nThough, if you have a test commit, I am happy to cherry-pick it here.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666587078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666760428",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-666760428",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 666760428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2Njc2MDQyOA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-30T22:55:06Z",
    "updated_at": "2020-07-30T22:55:06Z",
    "author_association": "MEMBER",
    "body": "I think it would be less problematic if you just pass the mempool reference (not pointer) and defer the optional change to when it's needed - `blocksonly` or `withoutmempool` PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666760428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666918980",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-666918980",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 666918980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjkxODk4MA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-31T04:52:48Z",
    "updated_at": "2020-07-31T04:52:48Z",
    "author_association": "MEMBER",
    "body": "That was my initial draft, but it would also mean that all changed lines will need to change again. Is there any reason to increase the `git blame` stack for those lines? See also https://github.com/bitcoin/bitcoin/pull/19556#discussion_r458102776",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666918980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667080238",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-667080238",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 667080238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzA4MDIzOA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-31T11:46:36Z",
    "updated_at": "2020-08-24T22:54:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19438 (Introduce deploymentstatus by ajtowns)\n* #19306 (refactor: Replace RecursiveMutex with Mutex in CTxMemPool by hebasto)\n* #18731 (refactor: Make CCheckQueue RAII-styled by hebasto)\n* #18077 (net: Add NAT-PMP port forwarding support by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667080238/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667511700",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-667511700",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 667511700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzUxMTcwMA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-01T10:43:06Z",
    "updated_at": "2020-08-01T10:43:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667511700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667515765",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-667515765",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 667515765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzUxNTc2NQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-01T11:18:29Z",
    "updated_at": "2020-08-01T11:18:29Z",
    "author_association": "MEMBER",
    "body": "> That was my initial draft, but it would also mean that all changed lines will need to change again. Is there any reason to increase the git blame stack for those lines? See also #19556 (comment)\r\n\r\nI totally agree with this. If the intention is to eventually allow `CChainState` to not have a mempool, then it makes sense to have the constructor take a pointer, and then assert that it's not nullptr. To make mempool optional, you just need to change the internal implementation of CChainState rather than the interface and all call sites.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667515765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667680449",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-667680449",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 667680449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzY4MDQ0OQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-02T14:24:25Z",
    "updated_at": "2020-08-02T14:28:38Z",
    "author_association": "MEMBER",
    "body": "@jnewbery would you drop `if (m_mempool)` checks?\r\n\r\nedit: @MarcoFalke sorry for being pedantic, feel free to ignore.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667680449/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667707718",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-667707718",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 667707718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzcwNzcxOA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-02T18:19:46Z",
    "updated_at": "2020-08-02T18:19:46Z",
    "author_association": "MEMBER",
    "body": "> My alternative approach would have been to leave those out and keep the logic the same, but add an `assert m_mempool != nullptr` to the constructor\r\n\r\nSame thing here. But it's fine as it is.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667707718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668505308",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-668505308",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 668505308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODUwNTMwOA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-04T10:02:12Z",
    "updated_at": "2020-08-04T10:02:12Z",
    "author_association": "MEMBER",
    "body": "Without a mempool, the mempool lock won't exist and thus can not be taken. Though, this shouldn't affect anything outside of validation. E.g. changing `cs` to a non-recursive mutex or lock annotations outside of validation should be unaffected.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/668505308/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669673015",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-669673015",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 669673015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTY3MzAxNQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-06T04:14:46Z",
    "updated_at": "2020-08-06T04:14:46Z",
    "author_association": "MEMBER",
    "body": "> Without a mempool, the mempool lock won't exist and thus can not be taken. Though, this shouldn't affect anything outside of validation. E.g. changing `cs` to a non-recursive mutex or lock annotations outside of validation should be unaffected.\r\n\r\nI guess it won't work. For example, this patch\r\n```diff\r\n--- a/src/validation.h\r\n+++ b/src/validation.h\r\n@@ -645,7 +645,7 @@ public:\r\n                       CCoinsViewCache& view, const CChainParams& chainparams, bool fJustCheck = false) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n \r\n     // Apply the effects of a block disconnection on the UTXO set.\r\n-    bool DisconnectTip(BlockValidationState& state, const CChainParams& chainparams, DisconnectedBlockTransactions* disconnectpool) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n+    bool DisconnectTip(BlockValidationState& state, const CChainParams& chainparams, DisconnectedBlockTransactions* disconnectpool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, m_mempool->cs);\r\n \r\n     // Manual block validity manipulation:\r\n     bool PreciousBlock(BlockValidationState& state, const CChainParams& params, CBlockIndex* pindex) LOCKS_EXCLUDED(cs_main);\r\n```\r\n\r\ncauses `-Wthread-safety-analysis` warnings regardless of `if (m_mempool) AssertLockHeld(m_mempool->cs);` and `LOCK(m_mempool ? &m_mempool->cs : nullptr);` before the `DisconnectTip()` calls.\r\n\r\nI think a such disadvantage should be avoided.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669673015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669832475",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-669832475",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 669832475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTgzMjQ3NQ==",
    "user": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?u=48352d181d6b944494bc6622f6352e05560369d0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-06T09:53:35Z",
    "updated_at": "2020-08-06T09:53:35Z",
    "author_association": "MEMBER",
    "body": "> ```diff\r\n> --- a/src/validation.h\r\n> +++ b/src/validation.h\r\n> @@ -645,7 +645,7 @@ public:\r\n>                        CCoinsViewCache& view, const CChainParams& chainparams, bool fJustCheck = false) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n>  \r\n>      // Apply the effects of a block disconnection on the UTXO set.\r\n> -    bool DisconnectTip(BlockValidationState& state, const CChainParams& chainparams, DisconnectedBlockTransactions* disconnectpool) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n> +    bool DisconnectTip(BlockValidationState& state, const CChainParams& chainparams, DisconnectedBlockTransactions* disconnectpool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, m_mempool->cs);\r\n>  \r\n>      // Manual block validity manipulation:\r\n>      bool PreciousBlock(BlockValidationState& state, const CChainParams& params, CBlockIndex* pindex) LOCKS_EXCLUDED(cs_main);\r\n> ```\r\n> \r\n> causes `-Wthread-safety-analysis` warnings regardless of `if (m_mempool) AssertLockHeld(m_mempool->cs);` and `LOCK(m_mempool ? &m_mempool->cs : nullptr);` before the `DisconnectTip()` calls.\r\n> \r\n> I think a such disadvantage should be avoided.\r\n\r\nIs such an annotation in the header file dereferencing a pointer that may be `NULL` valid ?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669832475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669837507",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-669837507",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 669837507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTgzNzUwNw==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-06T10:04:58Z",
    "updated_at": "2020-08-06T10:04:58Z",
    "author_association": "MEMBER",
    "body": "> Is such an annotation in the header file dereferencing a pointer that may be `NULL` valid ?\r\n\r\nNot sure about annotation validity, but Clang accepts it.\r\n\r\nI don't want to lose ability to use `EXCLUSIVE_LOCKS_REQUIRED(m_mempool->cs)` annotations.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669837507/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674315735",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-674315735",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 674315735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDMxNTczNQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-14T23:59:57Z",
    "updated_at": "2020-08-14T23:59:57Z",
    "author_association": "MEMBER",
    "body": "> If we want to support not having a mempool, it might be better to virtualize CTxMemPool, so that validation expects a `TxMemPoolInterface` that has a `cs` lock to let thread safety annotations all make sense, and a bunch of virtual functions that are either implemented by CTxMemPool as is, or by dummy functions in a `NoMemPool` class.\r\n\r\nSounds like a nice approach.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674315735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674387720",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-674387720",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 674387720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDM4NzcyMA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-15T11:55:38Z",
    "updated_at": "2020-08-15T11:55:38Z",
    "author_association": "MEMBER",
    "body": "Added back compile-time thread safety annotations as requested by @ajtowns and @hebasto ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674387720/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674409354",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-674409354",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 674409354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDQwOTM1NA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-15T15:08:37Z",
    "updated_at": "2020-08-15T15:08:37Z",
    "author_association": "MEMBER",
    "body": "Trying to test thread safety annotations with the following patch:\r\n```diff\r\n--- a/src/interfaces/txmempool.cpp\r\n+++ b/src/interfaces/txmempool.cpp\r\n@@ -34,7 +34,6 @@ public:\r\n \r\n     void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int block_height) override EXCLUSIVE_LOCKS_REQUIRED(m_mutex)\r\n     {\r\n-        AssertLockHeld(m_txmempool.cs);\r\n         m_txmempool.removeForBlock(vtx, block_height);\r\n     }\r\n\r\n```\r\n\r\nand got:\r\n```\r\ninterfaces/txmempool.cpp:37:21: warning: calling function 'removeForBlock' requires holding mutex 'm_txmempool.cs' exclusively [-Wthread-safety-analysis]\r\n        m_txmempool.removeForBlock(vtx, block_height);\r\n                    ^\r\n1 warning generated.\r\n```\r\n\r\nCould be related to https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#no-alias-analysis",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674409354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674423662",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-674423662",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 674423662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDQyMzY2Mg==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-15T17:03:00Z",
    "updated_at": "2020-08-15T17:03:00Z",
    "author_association": "MEMBER",
    "body": "Another test of thread safety annotations with the following patch:\r\n```diff\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -2595,7 +2595,6 @@ public:\r\n bool CChainState::ConnectTip(BlockValidationState& state, const CChainParams& chainparams, CBlockIndex* pindexNew, const std::shared_ptr<const CBlock>& pblock, ConnectTrace& connectTrace, DisconnectedBlockTransactions &disconnectpool)\r\n {\r\n     AssertLockHeld(cs_main);\r\n-    AssertLockHeld(m_txmempool->m_mutex);\r\n \r\n     assert(pindexNew->pprev == m_chain.Tip());\r\n     // Read block from disk.\r\n--- a/src/validation.h\r\n+++ b/src/validation.h\r\n@@ -689,7 +689,7 @@ public:\r\n \r\n private:\r\n     bool ActivateBestChainStep(BlockValidationState& state, const CChainParams& chainparams, CBlockIndex* pindexMostWork, const std::shared_ptr<const CBlock>& pblock, bool& fInvalidFound, ConnectTrace& connectTrace) EXCLUSIVE_LOCKS_REQUIRED(cs_main, m_txmempool->m_mutex);\r\n-    bool ConnectTip(BlockValidationState& state, const CChainParams& chainparams, CBlockIndex* pindexNew, const std::shared_ptr<const CBlock>& pblock, ConnectTrace& connectTrace, DisconnectedBlockTransactions& disconnectpool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, m_txmempool->m_mutex);\r\n+    bool ConnectTip(BlockValidationState& state, const CChainParams& chainparams, CBlockIndex* pindexNew, const std::shared_ptr<const CBlock>& pblock, ConnectTrace& connectTrace, DisconnectedBlockTransactions& disconnectpool) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n \r\n     void InvalidBlockFound(CBlockIndex* pindex, const BlockValidationState& state) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n     CBlockIndex* FindMostWorkChain() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n```\r\n\r\nand this line https://github.com/bitcoin/bitcoin/blob/face16170176c83d04c68454c91eaf42c80e6ec7/src/validation.cpp#L2640\r\n\r\ndoes _not_ raise a thread safety warning as one could expect due to this annotation:\r\nhttps://github.com/bitcoin/bitcoin/blob/face16170176c83d04c68454c91eaf42c80e6ec7/src/interfaces/txmempool.cpp#L35",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674423662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674486264",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-674486264",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 674486264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDQ4NjI2NA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-16T06:29:17Z",
    "updated_at": "2020-08-16T06:29:17Z",
    "author_association": "MEMBER",
    "body": "Addressed feedback by @hebasto ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674486264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674487906",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-674487906",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 674487906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDQ4NzkwNg==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-16T06:49:47Z",
    "updated_at": "2020-08-16T06:49:47Z",
    "author_association": "MEMBER",
    "body": "Tested fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d with https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-674409354. Still fail.\r\nIt seems required to move data member `m_txmempool` from the implementation class to the base one, changing its type to a pointer, and providing `EXCLUSIVE_LOCKS_REQUIRED(m_txmempool->cs)` annotation.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674487906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674488400",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-674488400",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 674488400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDQ4ODQwMA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-16T06:56:43Z",
    "updated_at": "2020-08-16T06:56:43Z",
    "author_association": "MEMBER",
    "body": "Tested fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d with https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-674423662. Looks ok:\r\n```\r\nvalidation.cpp:2639:18: warning: calling function 'removeForBlock' requires holding mutex 'm_txmempool->m_mutex' exclusively [-Wthread-safety-analysis]\r\n    m_txmempool->removeForBlock(blockConnecting.vtx, pindexNew->nHeight);\r\n                 ^\r\n1 warning generated.\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674488400/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674489878",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-674489878",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 674489878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDQ4OTg3OA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-16T07:10:51Z",
    "updated_at": "2020-08-16T07:10:51Z",
    "author_association": "MEMBER",
    "body": "FWIW, I found a patch set from #19668 very useful to test correctness of thread safety annotations.\r\nCurrently, fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d, a bunch of `-Wthread-safety-analysis` warnings are generated.\r\n\r\n<details>\r\n  <summary>fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d + #19668</summary>\r\n  \r\n```\r\ninterfaces/txmempool.cpp:38:9: warning: calling function 'AssertLockHeldInternal<AnnotatedMixin<std::recursive_mutex> >' requires holding mutex 'm_txmempool.cs' exclusively [-Wthread-safety-analysis]\r\n        AssertLockHeld(m_txmempool.cs);\r\n        ^\r\n./sync.h:79:28: note: expanded from macro 'AssertLockHeld'\r\n#define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, cs)\r\n                           ^\r\ninterfaces/txmempool.cpp:39:21: warning: calling function 'removeForBlock' requires holding mutex 'm_txmempool.cs' exclusively [-Wthread-safety-analysis]\r\n        m_txmempool.removeForBlock(vtx, block_height);\r\n                    ^\r\n2 warnings generated.\r\nvalidation.cpp:379:5: warning: calling function 'AssertLockHeldInternal<AnnotatedMixin<std::recursive_mutex> >' requires holding mutex 'mempool.cs' exclusively [-Wthread-safety-analysis]\r\n    AssertLockHeld(mempool.cs);\r\n    ^\r\n./sync.h:79:28: note: expanded from macro 'AssertLockHeld'\r\n#define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, cs)\r\n                           ^\r\nvalidation.cpp:397:21: warning: calling function 'removeRecursive' requires holding mutex 'mempool.cs' exclusively [-Wthread-safety-analysis]\r\n            mempool.removeRecursive(**it, MemPoolRemovalReason::REORG);\r\n                    ^\r\nvalidation.cpp:409:13: warning: calling function 'UpdateTransactionsFromBlock' requires holding mutex 'mempool.cs' exclusively [-Wthread-safety-analysis]\r\n    mempool.UpdateTransactionsFromBlock(vHashUpdate);\r\n            ^\r\nvalidation.cpp:412:13: warning: calling function 'removeForReorg' requires holding mutex 'mempool.cs' exclusively [-Wthread-safety-analysis]\r\n    mempool.removeForReorg(&::ChainstateActive().CoinsTip(), ::ChainActive().Tip()->nHeight + 1, STANDARD_LOCKTIME_VERIFY_FLAGS);\r\n            ^\r\nvalidation.cpp:414:5: warning: calling function 'LimitMempoolSize' requires holding mutex 'mempool.cs' exclusively [-Wthread-safety-analysis]\r\n    LimitMempoolSize(mempool, gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, std::chrono::hours{gArgs.GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY)});\r\n    ^\r\nvalidation.cpp:2521:9: warning: calling function 'AssertLockHeldInternal<AnnotatedMixin<std::recursive_mutex> >' requires holding mutex 'm_txmempool->txmempool().cs' exclusively [-Wthread-safety-analysis]\r\n        AssertLockHeld(m_txmempool->txmempool()->cs);\r\n        ^\r\n./sync.h:79:28: note: expanded from macro 'AssertLockHeld'\r\n#define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, cs)\r\n                           ^\r\nvalidation.cpp:2529:39: warning: calling function 'removeRecursive' requires holding mutex 'm_txmempool->txmempool().cs' exclusively [-Wthread-safety-analysis]\r\n            m_txmempool->txmempool()->removeRecursive(**it, MemPoolRemovalReason::REORG);\r\n                                      ^\r\n7 warnings generated.\r\n```\r\n</details>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674489878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674493040",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-674493040",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 674493040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDQ5MzA0MA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-16T07:41:31Z",
    "updated_at": "2020-08-16T07:42:20Z",
    "author_association": "MEMBER",
    "body": "Yes, if #19668 is merged, the AsserLockHeld in `interfaces/txmempool` must be replaced by LockAssertion\r\n\r\n> changing its type to a pointer\r\n\r\nI don't think this works. Or at least it would lead to the initial solution I had (keep a mempool pointer in validation). I am happy to revert to the initial solution or take over a patch, if you have one that compiles on clang with and without --enable-debug",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674493040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675118072",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-675118072",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 675118072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTExODA3Mg==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-17T21:11:59Z",
    "updated_at": "2020-08-18T11:06:39Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke \r\n> I don't think this works. ... if you have one that compiles on clang with and without --enable-debug\r\n\r\nMind looking at https://github.com/hebasto/bitcoin/commits/pr19629-0816-FORK ?\r\n\r\nThe same branch, rebased on top of the master (1bc8e8eae2dc4b47ef67afc6880ea48b8e84a086) + #19668:\r\n- https://github.com/hebasto/bitcoin/commits/pr19629-0816-REBASED\r\n\r\n`LimitMempoolSize()` is a bit messed, but it is resolvable, I think.\r\n\r\n\r\nUPDATE: the improved patch version is [available](https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-675397941).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675118072/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675397941",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-675397941",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 675397941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTM5Nzk0MQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-18T10:27:30Z",
    "updated_at": "2020-08-18T11:05:47Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke \r\nPlease have a look at the updated branch: https://github.com/hebasto/bitcoin/commits/pr19629-0816-FORKv2:\r\n - mess with `LimitMempoolSize()` is fixed\r\n- `TxMempool` is a pure interface now\r\n\r\n---\r\n\r\nThe same branch, rebased on top of the master (e6e277f9ed4da7aff9b7b39a7838bada0c3e572a) + #19668::\r\n- https://github.com/hebasto/bitcoin/commits/pr19629-0816-REBASEDv2",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675397941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675415266",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-675415266",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 675415266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTQxNTI2Ng==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-18T11:09:24Z",
    "updated_at": "2020-08-18T11:09:24Z",
    "author_association": "MEMBER",
    "body": "> Yes, if #19668 is merged, the AsserLockHeld in `interfaces/txmempool` must be replaced by LockAssertion\r\n\r\nThis is not required with [suggested](https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-675397941) patch.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/675415266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682380380",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-682380380",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 682380380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjM4MDM4MA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-28T07:43:24Z",
    "updated_at": "2020-08-28T07:43:24Z",
    "author_association": "MEMBER",
    "body": "Thanks for the review everyone. Though, I think this is getting a bit out of hand and trying to do too much things in one go. Closing for now.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682380380/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682393466",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-682393466",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 682393466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjM5MzQ2Ng==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-28T08:14:50Z",
    "updated_at": "2020-08-28T08:14:50Z",
    "author_association": "MEMBER",
    "body": "I really thought the original implementation was fine and is an improvement over the current code. Were there actually any problems with it, or is this just a case of the best being the enemy of good and us not making a good change because it's not perfect?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682393466/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682406578",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-682406578",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
    "id": 682406578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjQwNjU3OA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-28T08:45:30Z",
    "updated_at": "2020-08-28T08:45:30Z",
    "author_association": "MEMBER",
    "body": "Opened alternative in #19826 . The mempool interface idea can be explored later, if needed.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/682406578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463600495",
    "pull_request_review_id": 459159788,
    "id": 463600495,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYwMDQ5NQ==",
    "diff_hunk": "@@ -2508,22 +2512,23 @@ bool CChainState::DisconnectTip(BlockValidationState& state, const CChainParams&\n     if (!FlushStateToDisk(chainparams, state, FlushStateMode::IF_NEEDED))\n         return false;\n \n-    if (disconnectpool) {\n+    if (disconnectpool && m_mempool) {\n+        AssertLockHeld(m_mempool->cs);",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 78,
    "commit_id": "fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d",
    "original_commit_id": "faab637301a336c318ea8ee0187a74a2c7a92ef3",
    "user": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Isn't the asserion redundant with [line 2491](https://github.com/bitcoin/bitcoin/pull/19629/commits/faab637301a336c318ea8ee0187a74a2c7a92ef3#diff-24efdb00bfbe56b140fb006b562cc70bR2491) ?",
    "created_at": "2020-07-31T13:09:15Z",
    "updated_at": "2020-08-16T06:26:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r463600495",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463600495"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r463600495"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463600495/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2516,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463706448",
    "pull_request_review_id": 459300349,
    "id": 463706448,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcwNjQ0OA==",
    "diff_hunk": "@@ -2508,22 +2512,23 @@ bool CChainState::DisconnectTip(BlockValidationState& state, const CChainParams&\n     if (!FlushStateToDisk(chainparams, state, FlushStateMode::IF_NEEDED))\n         return false;\n \n-    if (disconnectpool) {\n+    if (disconnectpool && m_mempool) {\n+        AssertLockHeld(m_mempool->cs);",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 78,
    "commit_id": "fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d",
    "original_commit_id": "faab637301a336c318ea8ee0187a74a2c7a92ef3",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Locally it wouldn't compile for me with clang as soon as I remove it",
    "created_at": "2020-07-31T16:21:45Z",
    "updated_at": "2020-08-16T06:26:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r463706448",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463706448"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r463706448"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463706448/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2516,
    "side": "RIGHT",
    "in_reply_to_id": 463600495
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464104555",
    "pull_request_review_id": 459666677,
    "id": 464104555,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDEwNDU1NQ==",
    "diff_hunk": "@@ -2866,7 +2878,8 @@ bool CChainState::ActivateBestChain(BlockValidationState &state, const CChainPar\n         LimitValidationInterfaceQueue();\n \n         {\n-            LOCK2(cs_main, ::mempool.cs); // Lock transaction pool for at least as long as it takes for connectTrace to be consumed\n+            LOCK(cs_main);\n+            LOCK(m_mempool ? &m_mempool->cs : nullptr); // Lock transaction pool for at least as long as it takes for connectTrace to be consumed",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 170,
    "commit_id": "fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d",
    "original_commit_id": "faab637301a336c318ea8ee0187a74a2c7a92ef3",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "For those scratching their heads over whether `LOCK(nullptr)` is ok, I think it's fine. It constructs a `UniqueLock` using this constructor:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/a78742830aa35bf57bcb0a4730977a1e5a1876bc/src/sync.h#L163\r\n\r\nWhich calls the default constructor (1 in https://en.cppreference.com/w/cpp/thread/unique_lock/unique_lock) for the base `std::unique_lock<Mutex>` class and then exits:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/a78742830aa35bf57bcb0a4730977a1e5a1876bc/src/sync.h#L165\r\n\r\nIn the destructor, the call to `owns_lock()` returns false (since the `unique_lock` doesn't have a locked mutex):\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/a78742830aa35bf57bcb0a4730977a1e5a1876bc/src/sync.h#L174-L178\r\n\r\nand the base class destructor does nothing.",
    "created_at": "2020-08-02T17:49:42Z",
    "updated_at": "2020-08-16T06:26:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r464104555",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464104555"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r464104555"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464104555/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2882,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466662830",
    "pull_request_review_id": 462846605,
    "id": 466662830,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2MjgzMA==",
    "diff_hunk": "@@ -370,9 +370,10 @@ static bool IsCurrentForFeeEstimation() EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n  * and instead just erase from the mempool as needed.\n  */\n \n-static void UpdateMempoolForReorg(DisconnectedBlockTransactions& disconnectpool, bool fAddToMempool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, ::mempool.cs)\n+static void UpdateMempoolForReorg(CTxMemPool& mempool, DisconnectedBlockTransactions& disconnectpool, bool fAddToMempool) EXCLUSIVE_LOCKS_REQUIRED(cs_main)",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d",
    "original_commit_id": "faab637301a336c318ea8ee0187a74a2c7a92ef3",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should just be removing the `::` but still requiring `mempool.cs` to already be locked. Keeping the annotation here means adding `LockAnnotation lock(mempool->cs);` in a bunch of places that call `UpdateMempoolForReorg`.",
    "created_at": "2020-08-06T20:18:45Z",
    "updated_at": "2020-08-16T06:26:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r466662830",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466662830"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r466662830"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466662830/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 373,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466676807",
    "pull_request_review_id": 462846605,
    "id": 466676807,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3NjgwNw==",
    "diff_hunk": "@@ -2508,22 +2512,23 @@ bool CChainState::DisconnectTip(BlockValidationState& state, const CChainParams&\n     if (!FlushStateToDisk(chainparams, state, FlushStateMode::IF_NEEDED))\n         return false;\n \n-    if (disconnectpool) {\n+    if (disconnectpool && m_mempool) {\n+        AssertLockHeld(m_mempool->cs);",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 78,
    "commit_id": "fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d",
    "original_commit_id": "faab637301a336c318ea8ee0187a74a2c7a92ef3",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The `AssertLockHeld` here is silencing the compile time thread safety check, and will need to be `LockAssertion lock(m_mempool->cs)` after #19668 . It's not redundant with the earlier assertion, because the silencing is scoped to the block, which ends immediately for the `if (m_mempool) AssertLockHeld(m_mempool->cs);` line.",
    "created_at": "2020-08-06T20:46:51Z",
    "updated_at": "2020-08-16T06:26:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r466676807",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466676807"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r466676807"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466676807/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2516,
    "side": "RIGHT",
    "in_reply_to_id": 463600495
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470969162",
    "pull_request_review_id": 467966301,
    "id": 470969162,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2OTE2Mg==",
    "diff_hunk": "@@ -370,9 +370,10 @@ static bool IsCurrentForFeeEstimation() EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n  * and instead just erase from the mempool as needed.\n  */\n \n-static void UpdateMempoolForReorg(DisconnectedBlockTransactions& disconnectpool, bool fAddToMempool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, ::mempool.cs)\n+static void UpdateMempoolForReorg(CTxMemPool& mempool, DisconnectedBlockTransactions& disconnectpool, bool fAddToMempool) EXCLUSIVE_LOCKS_REQUIRED(cs_main)",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d",
    "original_commit_id": "faab637301a336c318ea8ee0187a74a2c7a92ef3",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-08-15T11:45:18Z",
    "updated_at": "2020-08-16T06:26:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r470969162",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470969162"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r470969162"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470969162/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 373,
    "side": "RIGHT",
    "in_reply_to_id": 466662830
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470996408",
    "pull_request_review_id": 467989179,
    "id": 470996408,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk5NjQwOA==",
    "diff_hunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_TXMEMPOOL_H\n+#define BITCOIN_INTERFACES_TXMEMPOOL_H\n+\n+#include <primitives/transaction.h> // For CTransactionRef\n+#include <sync.h>                   // For RecursiveMutex\n+#include <util/check.h>             // For Assert\n+\n+#include <memory>\n+#include <vector>\n+\n+class CTxMemPool;\n+class CCoinsViewCache;\n+\n+namespace interfaces {\n+\n+//! Interface for accessing a txmempool.\n+class TxMempool\n+{\n+public:\n+    explicit TxMempool(RecursiveMutex* mutex)\n+        : m_mutex{mutex} {}\n+    virtual ~TxMempool() {}\n+\n+    //! A transaction was updated\n+    virtual void transactionUpdated() = 0;\n+\n+    //! Run consistency check\n+    virtual void check(const CCoinsViewCache& coins) = 0;\n+\n+    //! Remove txs after block has been connected\n+    virtual void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int block_height) = 0;\n+\n+    //! Alias for the txmempool mutex or nullptr if no txmempool was passed in\n+    RecursiveMutex* const m_mutex;\n+\n+    //! Return pointer to internal txmempool class\n+    virtual CTxMemPool* txmempool() { return nullptr; }\n+};\n+\n+class NoTxMempool final : public TxMempool\n+{\n+public:\n+    explicit NoTxMempool()\n+        : TxMempool{nullptr} {}\n+\n+    void transactionUpdated() override { invalidCall(); }\n+    void check(const CCoinsViewCache& coins) override { invalidCall(); }\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int block_height) override { invalidCall(); }\n+\n+private:\n+    void invalidCall() { Assert(false); }\n+};",
    "path": "src/interfaces/txmempool.h",
    "position": null,
    "original_position": 56,
    "commit_id": "fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d",
    "original_commit_id": "face16170176c83d04c68454c91eaf42c80e6ec7",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "face16170176c83d04c68454c91eaf42c80e6ec7\r\nThere is no need to place this class in the header, right?",
    "created_at": "2020-08-15T14:36:27Z",
    "updated_at": "2020-08-16T06:26:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r470996408",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470996408"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r470996408"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470996408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 44,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 56,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470996615",
    "pull_request_review_id": 467989179,
    "id": 470996615,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk5NjYxNQ==",
    "diff_hunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_TXMEMPOOL_H\n+#define BITCOIN_INTERFACES_TXMEMPOOL_H\n+\n+#include <primitives/transaction.h> // For CTransactionRef\n+#include <sync.h>                   // For RecursiveMutex\n+#include <util/check.h>             // For Assert\n+\n+#include <memory>\n+#include <vector>\n+\n+class CTxMemPool;\n+class CCoinsViewCache;\n+\n+namespace interfaces {\n+\n+//! Interface for accessing a txmempool.\n+class TxMempool\n+{\n+public:\n+    explicit TxMempool(RecursiveMutex* mutex)\n+        : m_mutex{mutex} {}\n+    virtual ~TxMempool() {}\n+\n+    //! A transaction was updated\n+    virtual void transactionUpdated() = 0;\n+\n+    //! Run consistency check\n+    virtual void check(const CCoinsViewCache& coins) = 0;\n+\n+    //! Remove txs after block has been connected\n+    virtual void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int block_height) = 0;\n+\n+    //! Alias for the txmempool mutex or nullptr if no txmempool was passed in\n+    RecursiveMutex* const m_mutex;\n+\n+    //! Return pointer to internal txmempool class\n+    virtual CTxMemPool* txmempool() { return nullptr; }\n+};\n+\n+class NoTxMempool final : public TxMempool\n+{\n+public:\n+    explicit NoTxMempool()\n+        : TxMempool{nullptr} {}\n+\n+    void transactionUpdated() override { invalidCall(); }\n+    void check(const CCoinsViewCache& coins) override { invalidCall(); }\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int block_height) override { invalidCall(); }\n+\n+private:\n+    void invalidCall() { Assert(false); }",
    "path": "src/interfaces/txmempool.h",
    "position": null,
    "original_position": 55,
    "commit_id": "fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d",
    "original_commit_id": "face16170176c83d04c68454c91eaf42c80e6ec7",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "face16170176c83d04c68454c91eaf42c80e6ec7\r\nnit: custom `Assert` has no benefits in this case\r\n```suggestion\r\n    void invalidCall() { assert(false); }\r\n```",
    "created_at": "2020-08-15T14:38:57Z",
    "updated_at": "2020-08-16T06:26:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r470996615",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470996615"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r470996615"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470996615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 55,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471000159",
    "pull_request_review_id": 467991728,
    "id": 471000159,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAwMDE1OQ==",
    "diff_hunk": "@@ -0,0 +1,57 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/txmempool.h>\n+\n+#include <primitives/transaction.h>\n+#include <sync.h>\n+#include <txmempool.h>\n+#include <util/memory.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+namespace interfaces {\n+namespace {\n+\n+class TxMempoolImpl final : public TxMempool\n+{\n+public:\n+    explicit TxMempoolImpl(CTxMemPool& txmempool)\n+        : TxMempool{&txmempool.cs},\n+          m_txmempool(txmempool) {}\n+\n+    void transactionUpdated() override\n+    {\n+        m_txmempool.AddTransactionsUpdated(1);\n+    }\n+\n+    void check(const CCoinsViewCache& coins) override\n+    {\n+        m_txmempool.check(&coins);\n+    }\n+\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int block_height) override EXCLUSIVE_LOCKS_REQUIRED(m_mutex)",
    "path": "src/interfaces/txmempool.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d",
    "original_commit_id": "face16170176c83d04c68454c91eaf42c80e6ec7",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int block_height) override EXCLUSIVE_LOCKS_REQUIRED(m_txmempool.cs)\r\n```",
    "created_at": "2020-08-15T15:23:32Z",
    "updated_at": "2020-08-16T06:26:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r471000159",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471000159"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r471000159"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471000159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 35,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471072267",
    "pull_request_review_id": 468037190,
    "id": 471072267,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA3MjI2Nw==",
    "diff_hunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_TXMEMPOOL_H\n+#define BITCOIN_INTERFACES_TXMEMPOOL_H\n+\n+#include <primitives/transaction.h> // For CTransactionRef\n+#include <sync.h>                   // For RecursiveMutex\n+#include <util/check.h>             // For Assert\n+\n+#include <memory>\n+#include <vector>\n+\n+class CTxMemPool;\n+class CCoinsViewCache;\n+\n+namespace interfaces {\n+\n+//! Interface for accessing a txmempool.\n+class TxMempool\n+{\n+public:\n+    explicit TxMempool(RecursiveMutex* mutex)\n+        : m_mutex{mutex} {}\n+    virtual ~TxMempool() {}\n+\n+    //! A transaction was updated\n+    virtual void transactionUpdated() = 0;\n+\n+    //! Run consistency check\n+    virtual void check(const CCoinsViewCache& coins) = 0;\n+\n+    //! Remove txs after block has been connected\n+    virtual void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int block_height) = 0;\n+\n+    //! Alias for the txmempool mutex or nullptr if no txmempool was passed in\n+    RecursiveMutex* const m_mutex;\n+\n+    //! Return pointer to internal txmempool class\n+    virtual CTxMemPool* txmempool() { return nullptr; }\n+};\n+\n+class NoTxMempool final : public TxMempool\n+{\n+public:\n+    explicit NoTxMempool()\n+        : TxMempool{nullptr} {}\n+\n+    void transactionUpdated() override { invalidCall(); }\n+    void check(const CCoinsViewCache& coins) override { invalidCall(); }\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int block_height) override { invalidCall(); }\n+\n+private:\n+    void invalidCall() { Assert(false); }\n+};",
    "path": "src/interfaces/txmempool.h",
    "position": null,
    "original_position": 56,
    "commit_id": "fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d",
    "original_commit_id": "face16170176c83d04c68454c91eaf42c80e6ec7",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thx, moved to cpp file",
    "created_at": "2020-08-16T06:25:46Z",
    "updated_at": "2020-08-16T06:26:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r471072267",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471072267"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r471072267"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471072267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 44,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 56,
    "side": "RIGHT",
    "in_reply_to_id": 470996408
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471072437",
    "pull_request_review_id": 468037310,
    "id": 471072437,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA3MjQzNw==",
    "diff_hunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_TXMEMPOOL_H\n+#define BITCOIN_INTERFACES_TXMEMPOOL_H\n+\n+#include <primitives/transaction.h> // For CTransactionRef\n+#include <sync.h>                   // For RecursiveMutex\n+#include <util/check.h>             // For Assert\n+\n+#include <memory>\n+#include <vector>\n+\n+class CTxMemPool;\n+class CCoinsViewCache;\n+\n+namespace interfaces {\n+\n+//! Interface for accessing a txmempool.\n+class TxMempool\n+{\n+public:\n+    explicit TxMempool(RecursiveMutex* mutex)\n+        : m_mutex{mutex} {}\n+    virtual ~TxMempool() {}\n+\n+    //! A transaction was updated\n+    virtual void transactionUpdated() = 0;\n+\n+    //! Run consistency check\n+    virtual void check(const CCoinsViewCache& coins) = 0;\n+\n+    //! Remove txs after block has been connected\n+    virtual void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int block_height) = 0;\n+\n+    //! Alias for the txmempool mutex or nullptr if no txmempool was passed in\n+    RecursiveMutex* const m_mutex;\n+\n+    //! Return pointer to internal txmempool class\n+    virtual CTxMemPool* txmempool() { return nullptr; }\n+};\n+\n+class NoTxMempool final : public TxMempool\n+{\n+public:\n+    explicit NoTxMempool()\n+        : TxMempool{nullptr} {}\n+\n+    void transactionUpdated() override { invalidCall(); }\n+    void check(const CCoinsViewCache& coins) override { invalidCall(); }\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int block_height) override { invalidCall(); }\n+\n+private:\n+    void invalidCall() { Assert(false); }",
    "path": "src/interfaces/txmempool.h",
    "position": null,
    "original_position": 55,
    "commit_id": "fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d",
    "original_commit_id": "face16170176c83d04c68454c91eaf42c80e6ec7",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I prefer `Assert` over `assert` because it comes with the following benefits:\r\n\r\n* Can not accidentally be disabled via NDEBUG\r\n* No need to update the code if more features get added to `Assert`, which are not part of `assert`",
    "created_at": "2020-08-16T06:27:57Z",
    "updated_at": "2020-08-16T06:27:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r471072437",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471072437"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r471072437"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471072437/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 55,
    "side": "RIGHT",
    "in_reply_to_id": 470996615
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471072528",
    "pull_request_review_id": 468037376,
    "id": 471072528,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA3MjUyOA==",
    "diff_hunk": "@@ -0,0 +1,57 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/txmempool.h>\n+\n+#include <primitives/transaction.h>\n+#include <sync.h>\n+#include <txmempool.h>\n+#include <util/memory.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+namespace interfaces {\n+namespace {\n+\n+class TxMempoolImpl final : public TxMempool\n+{\n+public:\n+    explicit TxMempoolImpl(CTxMemPool& txmempool)\n+        : TxMempool{&txmempool.cs},\n+          m_txmempool(txmempool) {}\n+\n+    void transactionUpdated() override\n+    {\n+        m_txmempool.AddTransactionsUpdated(1);\n+    }\n+\n+    void check(const CCoinsViewCache& coins) override\n+    {\n+        m_txmempool.check(&coins);\n+    }\n+\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int block_height) override EXCLUSIVE_LOCKS_REQUIRED(m_mutex)",
    "path": "src/interfaces/txmempool.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d",
    "original_commit_id": "face16170176c83d04c68454c91eaf42c80e6ec7",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Annotation can not be added to cpp files (or at least they will be ignored). Moved annotation to header file.",
    "created_at": "2020-08-16T06:28:53Z",
    "updated_at": "2020-08-16T06:28:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r471072528",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471072528"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r471072528"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471072528/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 35,
    "side": "RIGHT",
    "in_reply_to_id": 471000159
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471072621",
    "pull_request_review_id": 468037440,
    "id": 471072621,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA3MjYyMQ==",
    "diff_hunk": "@@ -0,0 +1,63 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_TXMEMPOOL_H\n+#define BITCOIN_INTERFACES_TXMEMPOOL_H\n+\n+#include <primitives/transaction.h> // For CTransactionRef\n+#include <sync.h>                   // For RecursiveMutex\n+#include <util/check.h>             // For Assert\n+\n+#include <memory>\n+#include <vector>\n+\n+class CTxMemPool;\n+class CCoinsViewCache;\n+\n+namespace interfaces {\n+\n+//! Interface for accessing a txmempool.\n+class TxMempool\n+{\n+public:\n+    explicit TxMempool(RecursiveMutex* mutex)\n+        : m_mutex{mutex} {}\n+    virtual ~TxMempool() {}\n+\n+    //! A transaction was updated\n+    virtual void transactionUpdated() = 0;\n+\n+    //! Run consistency check\n+    virtual void check(const CCoinsViewCache& coins) = 0;\n+\n+    //! Remove txs after block has been connected\n+    virtual void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int block_height) = 0;\n+\n+    //! Alias for the txmempool mutex or nullptr if no txmempool was passed in\n+    RecursiveMutex* const m_mutex;\n+\n+    //! Return pointer to internal txmempool class\n+    virtual CTxMemPool* txmempool() { return nullptr; }\n+};\n+\n+class NoTxMempool final : public TxMempool\n+{\n+public:\n+    explicit NoTxMempool()\n+        : TxMempool{nullptr} {}\n+\n+    void transactionUpdated() override { invalidCall(); }\n+    void check(const CCoinsViewCache& coins) override { invalidCall(); }\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int block_height) override { invalidCall(); }\n+\n+private:\n+    void invalidCall() { Assert(false); }",
    "path": "src/interfaces/txmempool.h",
    "position": null,
    "original_position": 55,
    "commit_id": "fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d",
    "original_commit_id": "face16170176c83d04c68454c91eaf42c80e6ec7",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Probably, it is worth to update [Developer Notes](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md) :)",
    "created_at": "2020-08-16T06:30:04Z",
    "updated_at": "2020-08-16T06:30:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r471072621",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471072621"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r471072621"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471072621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 55,
    "side": "RIGHT",
    "in_reply_to_id": 470996615
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471073043",
    "pull_request_review_id": 468037713,
    "id": 471073043,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA3MzA0Mw==",
    "diff_hunk": "@@ -0,0 +1,57 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/txmempool.h>\n+\n+#include <primitives/transaction.h>\n+#include <sync.h>\n+#include <txmempool.h>\n+#include <util/memory.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+namespace interfaces {\n+namespace {\n+\n+class TxMempoolImpl final : public TxMempool\n+{\n+public:\n+    explicit TxMempoolImpl(CTxMemPool& txmempool)\n+        : TxMempool{&txmempool.cs},\n+          m_txmempool(txmempool) {}\n+\n+    void transactionUpdated() override\n+    {\n+        m_txmempool.AddTransactionsUpdated(1);\n+    }\n+\n+    void check(const CCoinsViewCache& coins) override\n+    {\n+        m_txmempool.check(&coins);\n+    }\n+\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int block_height) override EXCLUSIVE_LOCKS_REQUIRED(m_mutex)",
    "path": "src/interfaces/txmempool.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d",
    "original_commit_id": "face16170176c83d04c68454c91eaf42c80e6ec7",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Annotation can not be added to cpp files (or at least they will be ignored).\r\n\r\nI don't think so.\r\nhttps://clang.llvm.org/docs/ThreadSafetyAnalysis.html:\r\n> Attributes must be attached to named declarations, such as classes, methods, and data members.",
    "created_at": "2020-08-16T06:35:06Z",
    "updated_at": "2020-08-16T06:35:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r471073043",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471073043"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r471073043"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471073043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 35,
    "side": "RIGHT",
    "in_reply_to_id": 471000159
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471075403",
    "pull_request_review_id": 468039248,
    "id": 471075403,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA3NTQwMw==",
    "diff_hunk": "@@ -0,0 +1,57 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/txmempool.h>\n+\n+#include <primitives/transaction.h>\n+#include <sync.h>\n+#include <txmempool.h>\n+#include <util/memory.h>\n+\n+#include <memory>\n+#include <vector>\n+\n+namespace interfaces {\n+namespace {\n+\n+class TxMempoolImpl final : public TxMempool\n+{\n+public:\n+    explicit TxMempoolImpl(CTxMemPool& txmempool)\n+        : TxMempool{&txmempool.cs},\n+          m_txmempool(txmempool) {}\n+\n+    void transactionUpdated() override\n+    {\n+        m_txmempool.AddTransactionsUpdated(1);\n+    }\n+\n+    void check(const CCoinsViewCache& coins) override\n+    {\n+        m_txmempool.check(&coins);\n+    }\n+\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int block_height) override EXCLUSIVE_LOCKS_REQUIRED(m_mutex)",
    "path": "src/interfaces/txmempool.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "fa1d3da12e6d0712bf6934d6df9e6d5d0e43801d",
    "original_commit_id": "face16170176c83d04c68454c91eaf42c80e6ec7",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Just logically, if validation does not include the txmempool.cpp file, how would it know about the annotation?\r\n\r\nAnd practically you observed that it didn't work: https://github.com/bitcoin/bitcoin/pull/19629#issuecomment-674423662",
    "created_at": "2020-08-16T07:02:12Z",
    "updated_at": "2020-08-16T07:02:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r471075403",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471075403"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19629#discussion_r471075403"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/471075403/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 35,
    "side": "RIGHT",
    "in_reply_to_id": 471000159
  }
]