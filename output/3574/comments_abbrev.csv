laanwj,2014-01-23T08:23:24Z,"@aalness Removed the offtopic replies here, sorry for continuing them. I was lost in a maze of twisty github issues all alike...\n\nEdit: I also took the liberty to clarify your pull request title somewhat.\n",https://github.com/bitcoin/bitcoin/pull/3574#issuecomment-33104927,33104927,
Diapolo,2014-01-23T20:40:55Z,Does this change require any changes in the GUI coin-control code or do we directly benefit from this change?\n,https://github.com/bitcoin/bitcoin/pull/3574#issuecomment-33166076,33166076,
aalness,2014-01-23T20:55:41Z,"Good question. At first read, it looks like the coin-control GUI could theoretically by-pass this new check and lock an unlockable coin. This could be confusing to an RPC user. eg. GUI user locks an unlockable coin, RPC user sees it in the output for listlockunspent and when they try to unlock it via lockunspent it fails due to the coin being unlockable.\n",https://github.com/bitcoin/bitcoin/pull/3574#issuecomment-33167469,33167469,
laanwj,2014-01-24T09:17:37Z,"But does the GUI allow it? I think it's pretty locked down in that regard, showing only coins that can be spent (and thus locked). But I may be wrong.\n",https://github.com/bitcoin/bitcoin/pull/3574#issuecomment-33207808,33207808,
cozz,2014-01-24T17:25:41Z,"Havent tested, but I agree with @laanwj. You check 4 conditions (mapwallet output.n !ispent ismine), coin control calls AvailableCoins, checking the same but even more conditions.\nSo it should never be possible to lock an unlockable coin in the GUI.\n\nI also suggest:\n- The condition when unlocking a coin could simply be, if it is already locked or not. It should always be possible to unlock a c",https://github.com/bitcoin/bitcoin/pull/3574#issuecomment-33242899,33242899,
aalness,2014-01-24T21:01:59Z,"Ah, good feedback @cozz. Will make those changes. Thanks.\n",https://github.com/bitcoin/bitcoin/pull/3574#issuecomment-33260409,33260409,
aalness,2014-01-25T00:51:47Z,"@cozz I incorporated your feedback but note the semantic implication:\n\nlockunspent lock=true for an already locked coin would now throw an error.\nlockunspent unlock=true for an already unlocked coin would now throw an error.\n\nPreviously, the behavior was:\n\nlockunspent lock=true for an already locked coin returns true.\nlockunspent unlock=true for an already unlocked coin would return true.\",https://github.com/bitcoin/bitcoin/pull/3574#issuecomment-33275793,33275793,
cozz,2014-01-25T02:42:06Z,"@aalness yes, maybe in the case ""lockunspent lock=true for an already locked coin"",\nshow a different error message like ""coin already locked"". But throw an error is fine with me.\n\nCode looks good, not sure what the core devs opinion is on this. So lets wait for another opinion here...\n",https://github.com/bitcoin/bitcoin/pull/3574#issuecomment-33279151,33279151,
cozz,2014-01-25T18:25:12Z,"@laanwj yes, so maybe not touch AvailableCoins at all. And just introduce 1 new function IsAvailableCoin, duplicating all the necessary logic. Just like IsLockableCoin before. Thats what I meant initially. Would also be easier to review and to compare. What do you think?\n",https://github.com/bitcoin/bitcoin/pull/3574#issuecomment-33295871,33295871,
aalness,2014-01-25T22:35:48Z,"@laanwj yeah, that's fair. It bothered me slightly too, although, it seemed to be a bit of an existing convention to call a CWalletTx a ""coin"" or ""pcoin"". Do you think it would be less confusing to simply change the variable to ""wtx""? Can you think of a better way to describe a transaction in this state, as opposed to ""available""? Or would you just prefer that I remove the method altogether?\n\n@c",https://github.com/bitcoin/bitcoin/pull/3574#issuecomment-33302797,33302797,
luke-jr,2014-02-21T17:05:20Z,@aalness Needs rebase\n,https://github.com/bitcoin/bitcoin/pull/3574#issuecomment-35750507,35750507,
BitcoinPullTester,2014-06-23T16:18:42Z,"Automatic sanity-testing: FAILED MERGE, see http://jenkins.bluematt.me/pull-tester/p3574_74ad5868245790c1f6c712c6afaa0d76398d2d7d/ for test log.\n\nThis pull does not merge cleanly onto current master\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.lo",https://github.com/bitcoin/bitcoin/pull/3574#issuecomment-46866912,46866912,
laanwj,2014-06-24T14:45:55Z,"Closing this pull as it appears to be inactive. If you intend to resume working on this, let me know.\n",https://github.com/bitcoin/bitcoin/pull/3574#issuecomment-46980317,46980317,
Diapolo,2014-01-23T08:42:45Z,Can you use 4-space indentation here also below `throw` please.\n,https://github.com/bitcoin/bitcoin/pull/3574#discussion_r9105833,9105833,src/rpcwallet.cpp
laanwj,2014-01-25T11:39:33Z,So now we have coin.IsAvailable as well as CWallet::IsAvailableCoin? I think that's a bit confusing.\n,https://github.com/bitcoin/bitcoin/pull/3574#discussion_r9171174,9171174,src/wallet.cpp
