jnewbery,2019-05-02 13:50:35,Does it make sense to add an `AssertLockNotHeld(cs_main)` to those functions?,https://github.com/bitcoin/bitcoin/pull/15932#issuecomment-488681107,488681107,
promag,2019-05-02 14:10:05,"For reference https://github.com/bitcoin/bitcoin/pull/12153#issuecomment-452087924.\n\nConcept ACK.\n\n> Does it make sense to add an `AssertLockNotHeld(cs_main)` to those functions?\n\nMaybe `EXCLUDES` annotation instead?",https://github.com/bitcoin/bitcoin/pull/15932#issuecomment-488688403,488688403,
laanwj,2019-05-02 14:20:42,Concept ACK. The whole point of moving the lock of `cs_main` inside the individual RPC functions was to allow optimizations such as this.,https://github.com/bitcoin/bitcoin/pull/15932#issuecomment-488692400,488692400,
MarcoFalke,2019-05-02 18:33:56,Added lock annotations as requested by @promag and @jnewbery ,https://github.com/bitcoin/bitcoin/pull/15932#issuecomment-488782663,488782663,
DrahtBot,2019-05-02 18:45:54,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14802](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14802.html) (rpc: faster getblockstats using BlockUndo d",https://github.com/bitcoin/bitcoin/pull/15932#issuecomment-488786879,488786879,
jnewbery,2019-05-02 19:00:44,utACK faea56400d5578023133cf4d1c761cdeb0c3e3da,https://github.com/bitcoin/bitcoin/pull/15932#issuecomment-488791830,488791830,
fanatid,2019-05-03 05:27:48,Why not use `ENTER_CRITICAL_SECTION` & `LEAVE_CRITICAL_SECTION` instead `LOCK`?,https://github.com/bitcoin/bitcoin/pull/15932#issuecomment-488943112,488943112,
promag,2019-05-03 06:20:04,"Because a scoped lock is more clear and ""secure"".",https://github.com/bitcoin/bitcoin/pull/15932#issuecomment-488959255,488959255,
jonasschnelli,2019-05-03 06:48:47,utACK faea56400d5578023133cf4d1c761cdeb0c3e3da,https://github.com/bitcoin/bitcoin/pull/15932#issuecomment-488968983,488968983,
elichai,2020-01-07 11:15:47,@MarcoFalke Do you use `RecursiveMutex` instead of `CCriticalSection` on purpose?,https://github.com/bitcoin/bitcoin/pull/15932#discussion_r363701817,363701817,src/rpc/blockchain.h
