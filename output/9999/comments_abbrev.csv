laanwj,2017-03-15T10:07:06Z,Nice! utACK https://github.com/bitcoin/bitcoin/pull/9999/commits/9d21779d9e18546c027d6fe7064289d0e7491efa,https://github.com/bitcoin/bitcoin/pull/9999#issuecomment-286696659,286696659,
NicolasDorier,2017-03-15T10:25:11Z,Added some comments about the ugly vsprintf.  Bridging varargs to use `strprintf` is difficult and error prone. I do not think it is worth it.,https://github.com/bitcoin/bitcoin/pull/9999#issuecomment-286700903,286700903,
NicolasDorier,2017-03-15T14:24:13Z,Renamed. Can Travis be restarted ? I do not think the error is related to this PR.,https://github.com/bitcoin/bitcoin/pull/9999#issuecomment-286757008,286757008,
NicolasDorier,2017-03-16T02:15:44Z,fixed nits,https://github.com/bitcoin/bitcoin/pull/9999#issuecomment-286937900,286937900,
laanwj,2017-03-15T10:10:17Z,"nit: I'd prefer not to use `vsnprintf` here. We've purged this from the code when introducing tinyformat. Wonder if we can do something based on our `strprintf`. Though bridging between C varargs and C++ is likely going to be difficult, and this solution as-taken-from LevelDB should be fine. It's just fairly ugly code and should not be taken as a hint to contributors that using system v?s?n?printf",https://github.com/bitcoin/bitcoin/pull/9999#discussion_r106126911,106126911,src/dbwrapper.cpp
laanwj,2017-03-15T10:10:53Z,"Maybe just add a comment in that regard, mentioning where the code comes from and why and explaining the above.",https://github.com/bitcoin/bitcoin/pull/9999#discussion_r106127055,106127055,src/dbwrapper.cpp
laanwj,2017-03-15T11:00:23Z,"CBitcoinLevelDBLogger maybe? The name is too general otherwise, we should reserve this class name for ourselves.",https://github.com/bitcoin/bitcoin/pull/9999#discussion_r106137386,106137386,src/dbwrapper.h
sipa,2017-03-15T14:26:53Z,Why is this class in the .h file? It seems to be only used internally in dbwrapper.cpp.,https://github.com/bitcoin/bitcoin/pull/9999#discussion_r106178329,106178329,src/dbwrapper.h
NicolasDorier,2017-03-15T15:22:34Z,"well, h for declaration and cpp for implementation, at least that is what I always thought. You mean just putting the class directly in the cpp ?",https://github.com/bitcoin/bitcoin/pull/9999#discussion_r106194558,106194558,src/dbwrapper.h
sipa,2017-03-15T15:44:32Z,".h is for the externally accessible parts of a cpp file. This class doesn't need to be exposed to anything, so it can just go inside the cpp file.",https://github.com/bitcoin/bitcoin/pull/9999#discussion_r106201266,106201266,src/dbwrapper.h
jnewbery,2017-03-15T17:04:38Z,Please retain alphabetical ordering (leveldb should be between http and libevent),https://github.com/bitcoin/bitcoin/pull/9999#discussion_r106224307,106224307,src/init.cpp
laanwj,2017-03-15T18:36:57Z,"Right, .h is for *interface* declaration. Although with C++ it's not always clear what should be part of the interface and what not (especially when tests are involved), this one could just as well be private to the .cpp.",https://github.com/bitcoin/bitcoin/pull/9999#discussion_r106249444,106249444,src/dbwrapper.h
