[
  {
    "sha": "cfce581d111ee5724f98388dbef834f26171761e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZmNlNTgxZDExMWVlNTcyNGY5ODM4OGRiZWY4MzRmMjYxNzE3NjFl",
    "commit": {
      "author": {
        "name": "NicolasDorier",
        "email": "nicolas.dorier@gmail.com",
        "date": "2017-03-15T09:43:00Z"
      },
      "committer": {
        "name": "NicolasDorier",
        "email": "nicolas.dorier@gmail.com",
        "date": "2017-03-16T02:14:27Z"
      },
      "message": "[LevelDB] Plug leveldb logs to bitcoin logs",
      "tree": {
        "sha": "b745213d2e11660180caca17dd09b9368770d5fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b745213d2e11660180caca17dd09b9368770d5fb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cfce581d111ee5724f98388dbef834f26171761e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfce581d111ee5724f98388dbef834f26171761e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cfce581d111ee5724f98388dbef834f26171761e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfce581d111ee5724f98388dbef834f26171761e/comments",
    "author": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "NicolasDorier",
      "id": 3020646,
      "node_id": "MDQ6VXNlcjMwMjA2NDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NicolasDorier",
      "html_url": "https://github.com/NicolasDorier",
      "followers_url": "https://api.github.com/users/NicolasDorier/followers",
      "following_url": "https://api.github.com/users/NicolasDorier/following{/other_user}",
      "gists_url": "https://api.github.com/users/NicolasDorier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NicolasDorier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
      "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
      "repos_url": "https://api.github.com/users/NicolasDorier/repos",
      "events_url": "https://api.github.com/users/NicolasDorier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ce01e6226ce52b88c644b0cb89852278edbdf33b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce01e6226ce52b88c644b0cb89852278edbdf33b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce01e6226ce52b88c644b0cb89852278edbdf33b"
      }
    ],
    "stats": {
      "total": 63,
      "additions": 62,
      "deletions": 1
    },
    "files": [
      {
        "sha": "cd441add4bb7a8217226c458e70eeacde6249fb8",
        "filename": "src/dbwrapper.cpp",
        "status": "modified",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfce581d111ee5724f98388dbef834f26171761e/src/dbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfce581d111ee5724f98388dbef834f26171761e/src/dbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.cpp?ref=cfce581d111ee5724f98388dbef834f26171761e",
        "patch": "@@ -14,6 +14,64 @@\n #include <leveldb/filter_policy.h>\n #include <memenv.h>\n #include <stdint.h>\n+#include <algorithm>\n+\n+class CBitcoinLevelDBLogger : public leveldb::Logger {\n+public:\n+    // This code is adapted from posix_logger.h, which is why it is using vsprintf.\n+    // Please do not do this in normal code\n+    virtual void Logv(const char * format, va_list ap) override {\n+            if (!LogAcceptCategory(\"leveldb\"))\n+                return;\n+            char buffer[500];\n+            for (int iter = 0; iter < 2; iter++) {\n+                char* base;\n+                int bufsize;\n+                if (iter == 0) {\n+                    bufsize = sizeof(buffer);\n+                    base = buffer;\n+                }\n+                else {\n+                    bufsize = 30000;\n+                    base = new char[bufsize];\n+                }\n+                char* p = base;\n+                char* limit = base + bufsize;\n+\n+                // Print the message\n+                if (p < limit) {\n+                    va_list backup_ap;\n+                    va_copy(backup_ap, ap);\n+                    // Do not use vsnprintf elsewhere in bitcoin source code, see above.\n+                    p += vsnprintf(p, limit - p, format, backup_ap);\n+                    va_end(backup_ap);\n+                }\n+\n+                // Truncate to available space if necessary\n+                if (p >= limit) {\n+                    if (iter == 0) {\n+                        continue;       // Try again with larger buffer\n+                    }\n+                    else {\n+                        p = limit - 1;\n+                    }\n+                }\n+\n+                // Add newline if necessary\n+                if (p == base || p[-1] != '\\n') {\n+                    *p++ = '\\n';\n+                }\n+\n+                assert(p <= limit);\n+                base[std::min(bufsize - 1, (int)(p - base))] = '\\0';\n+                LogPrintStr(base);\n+                if (base != buffer) {\n+                    delete[] base;\n+                }\n+                break;\n+            }\n+    }\n+};\n \n static leveldb::Options GetOptions(size_t nCacheSize)\n {\n@@ -23,6 +81,7 @@ static leveldb::Options GetOptions(size_t nCacheSize)\n     options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n     options.compression = leveldb::kNoCompression;\n     options.max_open_files = 64;\n+    options.info_log = new CBitcoinLevelDBLogger();\n     if (leveldb::kMajorVersion > 1 || (leveldb::kMajorVersion == 1 && leveldb::kMinorVersion >= 16)) {\n         // LevelDB versions before 1.16 consider short writes to be corruption. Only trigger error\n         // on corruption in later versions.\n@@ -82,6 +141,8 @@ CDBWrapper::~CDBWrapper()\n     pdb = NULL;\n     delete options.filter_policy;\n     options.filter_policy = NULL;\n+    delete options.info_log;\n+    options.info_log = NULL;\n     delete options.block_cache;\n     options.block_cache = NULL;\n     delete penv;"
      },
      {
        "sha": "246d5f340a1a553bec2f475a6c84891680d0db9b",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfce581d111ee5724f98388dbef834f26171761e/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfce581d111ee5724f98388dbef834f26171761e/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=cfce581d111ee5724f98388dbef834f26171761e",
        "patch": "@@ -430,7 +430,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT));\n         strUsage += HelpMessageOpt(\"-bip9params=deployment:start:end\", \"Use given start/end times for specified BIP9 deployment (regtest-only)\");\n     }\n-    std::string debugCategories = \"addrman, alert, bench, cmpctblock, coindb, db, http, libevent, lock, mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc, selectcoins, tor, zmq\"; // Don't translate these and qt below\n+    std::string debugCategories = \"addrman, alert, bench, cmpctblock, coindb, db, http, leveldb, libevent, lock, mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc, selectcoins, tor, zmq\"; // Don't translate these and qt below\n     if (mode == HMM_BITCOIN_QT)\n         debugCategories += \", qt\";\n     strUsage += HelpMessageOpt(\"-debug=<category>\", strprintf(_(\"Output debugging information (default: %u, supplying <category> is optional)\"), 0) + \". \" +"
      }
    ]
  }
]