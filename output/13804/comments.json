[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408949300",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#issuecomment-408949300",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13804",
    "id": 408949300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODk0OTMwMA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T17:42:21Z",
    "updated_at": "2019-07-10T21:20:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15681](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15681.html) ([mempool] Allow one extra single-ancestor transaction per package by TheBlueMatt)\n* [#15192](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15192.html) (Add missing cs_main locks in ThreadImport(...)/Shutdown(...)/gettxoutsetinfo(...)/InitScriptExecutionCache(). Add missing locking annotations. by practicalswift)\n* [#15169](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15169.html) (Parallelize CheckInputs() in AcceptToMemoryPool() by sdaftuar)\n* [#10443](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10443.html) (Add fee_est tool for debugging fee estimation code by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408949300/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421953374",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#issuecomment-421953374",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13804",
    "id": 421953374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTk1MzM3NA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-17T10:06:25Z",
    "updated_at": "2018-09-17T10:06:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "This PR fails to compile with thread safety analysis enabled when rebased on `master`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421953374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422199222",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#issuecomment-422199222",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13804",
    "id": 422199222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjE5OTIyMg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-17T23:01:43Z",
    "updated_at": "2018-09-17T23:01:43Z",
    "author_association": "MEMBER",
    "body": "@practicalswift I think clang doesn't understand \"recursive\" annotations. I am happy to be proven wrong, but I think this just doesn't compile with annotations for now.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422199222/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445455642",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#issuecomment-445455642",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13804",
    "id": 445455642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTQ1NTY0Mg==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-08T12:28:27Z",
    "updated_at": "2018-12-08T12:28:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "This PR doesn't compile due to missing locks",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445455642/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/206541409",
    "pull_request_review_id": 141971067,
    "id": 206541409,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjU0MTQwOQ==",
    "diff_hunk": "@@ -23,6 +23,6 @@ bool SignalsOptInRBF(const CTransaction &tx);\n // according to BIP 125\n // This involves checking sequence numbers of the transaction, as well\n // as the sequence numbers of all in-mempool ancestors.\n-RBFTransactionState IsRBFOptIn(const CTransaction &tx, CTxMemPool &pool) EXCLUSIVE_LOCKS_REQUIRED(pool.cs);\n+RBFTransactionState IsRBFOptIn(const CTransaction &tx,const CTxMemPool &pool) EXCLUSIVE_LOCKS_REQUIRED(pool.cs);",
    "path": "src/policy/rbf.h",
    "position": null,
    "original_position": 5,
    "commit_id": "421de16e9ca017f5aa4fa600f15b156300ac0c75",
    "original_commit_id": "fa7a9de343c689b8c6a83da8a014a825076f7583",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Commit \"Stacked Transaction Pool\"\r\n\r\nnit, add space after `,`.",
    "created_at": "2018-07-31T14:05:34Z",
    "updated_at": "2019-07-13T17:23:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r206541409",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/206541409"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r206541409"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/206541409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 26,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/206541787",
    "pull_request_review_id": 141971067,
    "id": 206541787,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjU0MTc4Nw==",
    "diff_hunk": "@@ -289,19 +332,27 @@ void CTxMemPool::UpdateForRemoveFromMempool(const setEntries &entriesToRemove, b\n         // differ from the set of mempool parents we'd calculate by searching,\n         // and it's important that we use the mapLinks[] notion of ancestor\n         // transactions as the set of things to update for removal.\n-        CalculateMemPoolAncestors(removeIt, setAncestors, nNoLimit, nNoLimit, nNoLimit, nNoLimit, dummy);\n+        pool.CalculateMemPoolAncestors(removeIt, setAncestors, nNoLimit, nNoLimit, nNoLimit, nNoLimit, dummy);\n         // Note that UpdateAncestorsOf severs the child links that point to\n         // removeIt in the entries for the parents of removeIt.\n-        UpdateAncestorsOf(false, removeIt, setAncestors);\n+        pool.UpdateAncestorsOf(false, removeIt, setAncestors);\n     }\n     // After updating all the ancestor sizes, we can now sever the link between each\n     // transaction being removed and any mempool children (ie, update setMemPoolParents\n     // for each direct child of a transaction being removed).\n-    for (txiter removeIt : entriesToRemove) {\n-        UpdateChildrenForRemoval(removeIt);\n+    for (const auto& removeIt : entriesToRemove) {\n+        pool.UpdateChildrenForRemoval(removeIt);\n     }\n }\n+void CTxMemPool::UpdateForRemoveFromMempool(const setEntries& entriesToRemove, bool updateDescendants)\n+{\n+    return ::UpdateForRemoveFromMempool(*this, entriesToRemove, updateDescendants);\n+}\n \n+void CTxMemPool::Layer::  UpdateForRemoveFromMempool(const setEntries&entriesToRemove, bool updateDescendants)",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 239,
    "commit_id": "421de16e9ca017f5aa4fa600f15b156300ac0c75",
    "original_commit_id": "fa7a9de343c689b8c6a83da8a014a825076f7583",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Commit \"Stacked Transaction Pool\"\r\n\r\nnit, remove extra spaces.",
    "created_at": "2018-07-31T14:06:36Z",
    "updated_at": "2019-07-13T17:23:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r206541787",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/206541787"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r206541787"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/206541787/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 353,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217764910",
    "pull_request_review_id": 155563229,
    "id": 217764910,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzc2NDkxMA==",
    "diff_hunk": "@@ -865,38 +993,96 @@ const CTransaction* CTxMemPool::GetConflictTx(const COutPoint& prevout) const\n     return it == mapNextTx.end() ? nullptr : it->second;\n }\n \n+const CTransaction* CTxMemPool::Layer::GetConflictTx(const COutPoint& prevout) const\n+{\n+    auto it_add = m_map_next_tx_added.find(prevout);\n+    if (it_add != m_map_next_tx_added.end()) return it_add->second;\n+    if (m_map_next_tx_removed.find(prevout) != m_map_next_tx_removed.end()) return nullptr;\n+\n+    return m_tx_pool.GetConflictTx(prevout);\n+}\n+\n boost::optional<CTxMemPool::txiter> CTxMemPool::GetIter(const uint256& txid) const\n {\n     auto it = mapTx.find(txid);\n     if (it != mapTx.end()) return it;\n     return boost::optional<txiter>{};\n }\n \n-CTxMemPool::setEntries CTxMemPool::GetIterSet(const std::set<uint256>& hashes) const\n+boost::optional<CTxMemPool::Layer::txiter> CTxMemPool::Layer::GetIter(const uint256& txid) const\n {\n-    CTxMemPool::setEntries ret;\n+    const auto& it_cache = m_cache_added.find(txid);\n+    if (it_cache != m_cache_added.end()) {\n+        CTxMemPool::Layer::txiter{it_cache};",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 521,
    "commit_id": "421de16e9ca017f5aa4fa600f15b156300ac0c75",
    "original_commit_id": "7bbdcd3a04470c5c4ab6ef7d946a29d7504f7b16",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ownerless expression?",
    "created_at": "2018-09-14T16:10:01Z",
    "updated_at": "2019-07-13T17:23:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r217764910",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217764910"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r217764910"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217764910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1011,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691487",
    "pull_request_review_id": 157932097,
    "id": 219691487,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTQ4Nw==",
    "diff_hunk": "@@ -575,6 +575,9 @@ class CTxMemPool\n     /** Translate a set of hashes into a set of pool iterators to avoid repeated lookups */\n     setEntries GetIterSet(const std::set<uint256>& hashes) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n+    /** Dereference the txiter */\n+    static const CTxMemPoolEntry& GetEntry(txiter it) { return *it; };",
    "path": "src/txmempool.h",
    "position": null,
    "original_position": 57,
    "commit_id": "421de16e9ca017f5aa4fa600f15b156300ac0c75",
    "original_commit_id": "554c3b8592a007f3776e260d6ad4b4a6511b30d7",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n2018-09-22 21:49:48 cpplint(pr=13804): src/txmempool.h:579:  You don't need a ; after a }  [readability/braces] [4]\r\n```",
    "created_at": "2018-09-23T08:11:32Z",
    "updated_at": "2019-07-13T17:23:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r219691487",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691487"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r219691487"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 607,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691495",
    "pull_request_review_id": 157932105,
    "id": 219691495,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTQ5NQ==",
    "diff_hunk": "@@ -699,6 +713,115 @@ class CTxMemPool\n      *  removal.\n      */\n     void removeUnchecked(txiter entry, MemPoolRemovalReason reason = MemPoolRemovalReason::UNKNOWN) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+public:\n+    class Layer\n+    {\n+    public:\n+        /**\n+         * The lock of the underlying tx pool.\n+         * The caller must acquire this lock for the whole life-time of this layer.\n+         */\n+        CCriticalSection& cs;\n+\n+        struct txiter_nested {\n+            CTxMemPool::txiter _i;\n+            explicit txiter_nested(CTxMemPool::txiter val) : _i(val){};",
    "path": "src/txmempool.h",
    "position": null,
    "original_position": 154,
    "commit_id": "421de16e9ca017f5aa4fa600f15b156300ac0c75",
    "original_commit_id": "554c3b8592a007f3776e260d6ad4b4a6511b30d7",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n2018-09-22 21:49:48 cpplint(pr=13804): src/txmempool.h:729:  You don't need a ; after a }  [readability/braces] [4]\r\n```",
    "created_at": "2018-09-23T08:11:54Z",
    "updated_at": "2019-07-13T17:23:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r219691495",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691495"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r219691495"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691495/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 757,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691499",
    "pull_request_review_id": 157932107,
    "id": 219691499,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTQ5OQ==",
    "diff_hunk": "@@ -699,6 +713,115 @@ class CTxMemPool\n      *  removal.\n      */\n     void removeUnchecked(txiter entry, MemPoolRemovalReason reason = MemPoolRemovalReason::UNKNOWN) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+public:\n+    class Layer\n+    {\n+    public:\n+        /**\n+         * The lock of the underlying tx pool.\n+         * The caller must acquire this lock for the whole life-time of this layer.\n+         */\n+        CCriticalSection& cs;\n+\n+        struct txiter_nested {\n+            CTxMemPool::txiter _i;\n+            explicit txiter_nested(CTxMemPool::txiter val) : _i(val){};\n+            txiter_nested() : _i(){};",
    "path": "src/txmempool.h",
    "position": null,
    "original_position": 155,
    "commit_id": "421de16e9ca017f5aa4fa600f15b156300ac0c75",
    "original_commit_id": "554c3b8592a007f3776e260d6ad4b4a6511b30d7",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n2018-09-22 21:49:48 cpplint(pr=13804): src/txmempool.h:730:  You don't need a ; after a }  [readability/braces] [4]\r\n```",
    "created_at": "2018-09-23T08:12:10Z",
    "updated_at": "2019-07-13T17:23:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r219691499",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691499"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r219691499"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691499/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 758,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691511",
    "pull_request_review_id": 157932121,
    "id": 219691511,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTUxMQ==",
    "diff_hunk": "@@ -699,6 +713,115 @@ class CTxMemPool\n      *  removal.\n      */\n     void removeUnchecked(txiter entry, MemPoolRemovalReason reason = MemPoolRemovalReason::UNKNOWN) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+public:\n+    class Layer\n+    {\n+    public:\n+        /**\n+         * The lock of the underlying tx pool.\n+         * The caller must acquire this lock for the whole life-time of this layer.\n+         */\n+        CCriticalSection& cs;\n+\n+        struct txiter_nested {\n+            CTxMemPool::txiter _i;\n+            explicit txiter_nested(CTxMemPool::txiter val) : _i(val){};\n+            txiter_nested() : _i(){};\n+        };\n+        /**\n+         * The txiter of this layer is a pair.\n+         * The first element is a const iterator of this layer's m_cache_added,\n+         * the second element is a fallback to the underlying txiter (only present when first is missing)\n+         */\n+        using txiter = boost::variant<\n+            txiter_nested, // Can always use this one, since all entries might be created in the cache??\n+            CTxMemPool::txiter>;\n+\n+        struct CompareIteratorByHash {\n+            bool operator()(const txiter& a, const txiter& b) const\n+            {\n+                return GetEntry(a).GetTx().GetHash() < GetEntry(b).GetTx().GetHash();\n+            }\n+        };\n+\n+        using setEntries = std::set<CTxMemPool::Layer::txiter, CompareIteratorByHash>;\n+\n+        struct TxLinks {\n+            CTxMemPool::Layer::setEntries parents;\n+            CTxMemPool::Layer::setEntries children;\n+        };\n+        using txlinksMap = std::map<CTxMemPool::Layer::txiter, CTxMemPool::Layer::TxLinks, CompareIteratorByHash>;\n+        /**\n+         * Construct a Layer based on an existing tx pool.\n+         * The caller must acquire the lock for the whole life-time of this layer.\n+         */\n+        Layer(const CTxMemPool& p) EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs)",
    "path": "src/txmempool.h",
    "position": null,
    "original_position": 184,
    "commit_id": "421de16e9ca017f5aa4fa600f15b156300ac0c75",
    "original_commit_id": "554c3b8592a007f3776e260d6ad4b4a6511b30d7",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n2018-09-22 21:49:48 cpplint(pr=13804): src/txmempool.h:759:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]\r\n```",
    "created_at": "2018-09-23T08:12:36Z",
    "updated_at": "2019-07-13T17:23:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r219691511",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691511"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r219691511"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 759,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691518",
    "pull_request_review_id": 157932128,
    "id": 219691518,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTUxOA==",
    "diff_hunk": "@@ -699,6 +713,115 @@ class CTxMemPool\n      *  removal.\n      */\n     void removeUnchecked(txiter entry, MemPoolRemovalReason reason = MemPoolRemovalReason::UNKNOWN) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+\n+public:\n+    class Layer\n+    {\n+    public:\n+        /**\n+         * The lock of the underlying tx pool.\n+         * The caller must acquire this lock for the whole life-time of this layer.\n+         */\n+        CCriticalSection& cs;\n+\n+        struct txiter_nested {\n+            CTxMemPool::txiter _i;\n+            explicit txiter_nested(CTxMemPool::txiter val) : _i(val){};\n+            txiter_nested() : _i(){};\n+        };\n+        /**\n+         * The txiter of this layer is a pair.\n+         * The first element is a const iterator of this layer's m_cache_added,\n+         * the second element is a fallback to the underlying txiter (only present when first is missing)\n+         */\n+        using txiter = boost::variant<\n+            txiter_nested, // Can always use this one, since all entries might be created in the cache??\n+            CTxMemPool::txiter>;\n+\n+        struct CompareIteratorByHash {\n+            bool operator()(const txiter& a, const txiter& b) const\n+            {\n+                return GetEntry(a).GetTx().GetHash() < GetEntry(b).GetTx().GetHash();\n+            }\n+        };\n+\n+        using setEntries = std::set<CTxMemPool::Layer::txiter, CompareIteratorByHash>;\n+\n+        struct TxLinks {\n+            CTxMemPool::Layer::setEntries parents;\n+            CTxMemPool::Layer::setEntries children;\n+        };\n+        using txlinksMap = std::map<CTxMemPool::Layer::txiter, CTxMemPool::Layer::TxLinks, CompareIteratorByHash>;\n+        /**\n+         * Construct a Layer based on an existing tx pool.\n+         * The caller must acquire the lock for the whole life-time of this layer.\n+         */\n+        Layer(const CTxMemPool& p) EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs)\n+            : cs(p.cs), m_tx_pool(p) {}\n+\n+        /// Methods that have identical signatures in the underlying tx pool:\n+        bool exists(const uint256& hash) const EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+        boost::optional<txiter> GetIter(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+        CTxMemPool::Layer::setEntries GetIterSet(const std::set<uint256>& hashes) const EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+        template <typename UpdateStruct>\n+        void Modify(txiter it, const UpdateStruct& update_object);\n+        std::pair<txiter, bool> Insert(const CTxMemPoolEntry& entry) EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs)\n+        {\n+            auto ins = m_cache_added.insert(entry);\n+            assert(ins.second);\n+            return {txiter_nested{ins.first}, ins.second};\n+        }\n+        void EraseTx(CTxMemPool::Layer::txiter it) EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+        void InsertLinks(txiter newit) EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs) { m_cache_map_links.emplace(newit, TxLinks{}); }\n+        void EraseLinks(txiter it) EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs) { m_cache_map_links.erase(it); }\n+        void InsertNextTx(std::pair<const COutPoint*, const CTransaction*> next_tx) EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs) { m_map_next_tx_added.insert(next_tx); }\n+        void EraseNextTx(const COutPoint& out) EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs)\n+        {\n+            m_map_next_tx_added.erase(out);\n+            m_map_next_tx_removed.emplace(out);\n+        }\n+        static const CTxMemPoolEntry& GetEntry(const CTxMemPool::Layer::txiter& it);\n+        const CTransaction* GetConflictTx(const COutPoint& prevout) const EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+        CTransactionRef get(const uint256& hash) const EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+        void ApplyDelta(const uint256& hash, CAmount& fee_delta) const EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+        CFeeRate GetMinFee(size_t sizelimit) const EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+        bool CalculateMemPoolAncestors(txiter it, CTxMemPool::Layer::setEntries& setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string& errString, const CTxMemPoolEntry* search_parents_for_entry = nullptr) EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+        void CalculateDescendants(const CTxMemPool::Layer::txiter& it, CTxMemPool::Layer::setEntries& setDescendants) EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+        void RemoveStaged(CTxMemPool::Layer::setEntries& stage, bool updateDescendants, MemPoolRemovalReason reason = MemPoolRemovalReason::UNKNOWN) EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+        bool HasNoInputsOf(const CTransaction& tx) const EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+        void addUnchecked(const CTxMemPoolEntry& entry, bool /* validFeeEstimate */ ignore) EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+        CTxMemPool::Layer::setEntries GetMemPoolParents(const CTxMemPool::Layer::txiter& entry) const EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+        int Expire(int64_t time) EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+        void TrimToSize(size_t sizelimit, std::vector<COutPoint>* pvNoSpendsRemaining = nullptr) EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+\n+        void addUnchecked(const CTxMemPoolEntry& entry, const CTxMemPool::Layer::setEntries& setAncestors, bool /* validFeeEstimate */ ignore) EXCLUSIVE_LOCKS_REQUIRED(m_tx_pool.cs);\n+        void UpdateAncestorsOf(bool add, const CTxMemPool::Layer::txiter& it, const setEntries& setAncestors);\n+        void UpdateParent(const CTxMemPool::Layer::txiter& entry, const CTxMemPool::Layer::txiter& parent, bool add);\n+        void UpdateChild(const CTxMemPool::Layer::txiter& entry, const CTxMemPool::Layer::txiter& child, bool add);\n+        void UpdateEntryForAncestors(const CTxMemPool::Layer::txiter& it, const setEntries& setAncestors);\n+        void UpdateForRemoveFromMempool(const setEntries& entriesToRemove, bool updateDescendants);\n+        void UpdateChildrenForRemoval(txiter it);\n+        const setEntries& GetMemPoolChildren(txiter entry) const;\n+        void removeUnchecked(txiter it, MemPoolRemovalReason reason);\n+\n+    private:\n+",
    "path": "src/txmempool.h",
    "position": null,
    "original_position": 233,
    "commit_id": "421de16e9ca017f5aa4fa600f15b156300ac0c75",
    "original_commit_id": "554c3b8592a007f3776e260d6ad4b4a6511b30d7",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\n2018-09-22 21:49:48 cpplint(pr=13804): src/txmempool.h:808:  Do not leave a blank line after \"private:\"  [whitespace/blank_line] [3]\r\n```",
    "created_at": "2018-09-23T08:13:02Z",
    "updated_at": "2019-07-13T17:23:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r219691518",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691518"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r219691518"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 808,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220428297",
    "pull_request_review_id": 158833472,
    "id": 220428297,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDQyODI5Nw==",
    "diff_hunk": "@@ -389,26 +438,52 @@ void CTxMemPool::addUnchecked(const CTxMemPoolEntry &entry, setEntries &setAnces\n     // to clean up the mess we're leaving here.\n \n     // Update ancestors with information about this tx\n-    for (const auto& pit : GetIterSet(setParentTransactions)) {\n-            UpdateParent(newit, pit, true);\n+    for (const auto& pit : pool.GetIterSet(setParentTransactions)) {\n+        pool.UpdateParent(newit, pit, true);\n     }\n-    UpdateAncestorsOf(true, newit, setAncestors);\n-    UpdateEntryForAncestors(newit, setAncestors);\n+    pool.UpdateAncestorsOf(true, newit, setAncestors);\n+    pool.UpdateEntryForAncestors(newit, setAncestors);\n+\n+    return newit;\n+}\n+\n+void CTxMemPool::addUnchecked(const CTxMemPoolEntry& entry, const setEntries& setAncestors, bool validFeeEstimate)\n+{\n+    NotifyEntryAdded(entry.GetSharedTx());\n+\n+    cachedInnerUsage += entry.DynamicMemoryUsage();\n+\n+    txiter newit = ::addUnchecked(*this, entry, setAncestors);\n \n     nTransactionsUpdated++;\n     totalTxSize += entry.GetTxSize();\n-    if (minerPolicyEstimator) {minerPolicyEstimator->processTransaction(entry, validFeeEstimate);}\n+    if (minerPolicyEstimator) {\n+        minerPolicyEstimator->processTransaction(entry, validFeeEstimate);\n+    }\n \n-    vTxHashes.emplace_back(tx.GetWitnessHash(), newit);\n+    vTxHashes.emplace_back(entry.GetTx().GetWitnessHash(), newit);\n     newit->vTxHashesIdx = vTxHashes.size() - 1;\n }\n \n+void CTxMemPool::Layer::addUnchecked(const CTxMemPoolEntry& entry, const CTxMemPool::Layer::setEntries& setAncestors, bool /* validFeeEstimate */ ignore)",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 321,
    "commit_id": "421de16e9ca017f5aa4fa600f15b156300ac0c75",
    "original_commit_id": "554c3b8592a007f3776e260d6ad4b4a6511b30d7",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Use an unnamed parameter instead of `ignore`.",
    "created_at": "2018-09-26T05:13:09Z",
    "updated_at": "2019-07-13T17:23:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r220428297",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220428297"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r220428297"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220428297/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 468,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220428346",
    "pull_request_review_id": 158833527,
    "id": 220428346,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDQyODM0Ng==",
    "diff_hunk": "@@ -389,26 +438,52 @@ void CTxMemPool::addUnchecked(const CTxMemPoolEntry &entry, setEntries &setAnces\n     // to clean up the mess we're leaving here.\n \n     // Update ancestors with information about this tx\n-    for (const auto& pit : GetIterSet(setParentTransactions)) {\n-            UpdateParent(newit, pit, true);\n+    for (const auto& pit : pool.GetIterSet(setParentTransactions)) {\n+        pool.UpdateParent(newit, pit, true);\n     }\n-    UpdateAncestorsOf(true, newit, setAncestors);\n-    UpdateEntryForAncestors(newit, setAncestors);\n+    pool.UpdateAncestorsOf(true, newit, setAncestors);\n+    pool.UpdateEntryForAncestors(newit, setAncestors);\n+\n+    return newit;\n+}\n+\n+void CTxMemPool::addUnchecked(const CTxMemPoolEntry& entry, const setEntries& setAncestors, bool validFeeEstimate)\n+{\n+    NotifyEntryAdded(entry.GetSharedTx());\n+\n+    cachedInnerUsage += entry.DynamicMemoryUsage();\n+\n+    txiter newit = ::addUnchecked(*this, entry, setAncestors);\n \n     nTransactionsUpdated++;\n     totalTxSize += entry.GetTxSize();\n-    if (minerPolicyEstimator) {minerPolicyEstimator->processTransaction(entry, validFeeEstimate);}\n+    if (minerPolicyEstimator) {\n+        minerPolicyEstimator->processTransaction(entry, validFeeEstimate);\n+    }\n \n-    vTxHashes.emplace_back(tx.GetWitnessHash(), newit);\n+    vTxHashes.emplace_back(entry.GetTx().GetWitnessHash(), newit);\n     newit->vTxHashesIdx = vTxHashes.size() - 1;\n }\n \n+void CTxMemPool::Layer::addUnchecked(const CTxMemPoolEntry& entry, const CTxMemPool::Layer::setEntries& setAncestors, bool /* validFeeEstimate */ ignore)\n+{\n+    ::addUnchecked(*this, entry, setAncestors);\n+}\n+\n+template <typename P>\n+static void removeUnchecked(P& pool, typename P::txiter it, MemPoolRemovalReason reason)",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 327,
    "commit_id": "421de16e9ca017f5aa4fa600f15b156300ac0c75",
    "original_commit_id": "554c3b8592a007f3776e260d6ad4b4a6511b30d7",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Make `MemPoolRemovalReason` an unnamed parameter.",
    "created_at": "2018-09-26T05:13:35Z",
    "updated_at": "2019-07-13T17:23:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r220428346",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220428346"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r220428346"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220428346/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 474,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220428475",
    "pull_request_review_id": 158833691,
    "id": 220428475,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDQyODQ3NQ==",
    "diff_hunk": "@@ -804,6 +898,17 @@ CTransactionRef CTxMemPool::get(const uint256& hash) const\n     return i->GetSharedTx();\n }\n \n+CTransactionRef CTxMemPool::Layer::get(const uint256& hash) const\n+{\n+    auto it = m_cache_added.find(hash);\n+    if (it == m_cache_added.end())\n+        return nullptr;\n+    else\n+        return it->GetSharedTx();\n+    if (m_cache_removed.find(hash) != m_cache_removed.end()) return nullptr;",
    "path": "src/txmempool.cpp",
    "position": 428,
    "original_position": 442,
    "commit_id": "421de16e9ca017f5aa4fa600f15b156300ac0c75",
    "original_commit_id": "554c3b8592a007f3776e260d6ad4b4a6511b30d7",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This code will never get executed.",
    "created_at": "2018-09-26T05:14:43Z",
    "updated_at": "2019-07-13T17:23:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r220428475",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220428475"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r220428475"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220428475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 898,
    "original_line": 898,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220428612",
    "pull_request_review_id": 158833848,
    "id": 220428612,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDQyODYxMg==",
    "diff_hunk": "@@ -937,14 +1136,31 @@ int CTxMemPool::Expire(int64_t time) {\n     RemoveStaged(stage, false, MemPoolRemovalReason::EXPIRY);\n     return stage.size();\n }\n+int CTxMemPool::Layer::Expire(int64_t time)",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 644,
    "commit_id": "421de16e9ca017f5aa4fa600f15b156300ac0c75",
    "original_commit_id": "554c3b8592a007f3776e260d6ad4b4a6511b30d7",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Make `time` an unnamed parameter.",
    "created_at": "2018-09-26T05:15:49Z",
    "updated_at": "2019-07-13T17:23:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r220428612",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220428612"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r220428612"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220428612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1139,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220428663",
    "pull_request_review_id": 158833928,
    "id": 220428663,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDQyODY2Mw==",
    "diff_hunk": "@@ -1058,6 +1316,13 @@ void CTxMemPool::TrimToSize(size_t sizelimit, std::vector<COutPoint>* pvNoSpends\n     }\n }\n \n+void CTxMemPool::Layer::TrimToSize(size_t sizelimit, std::vector<COutPoint>* pvNoSpendsRemaining)",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 757,
    "commit_id": "421de16e9ca017f5aa4fa600f15b156300ac0c75",
    "original_commit_id": "554c3b8592a007f3776e260d6ad4b4a6511b30d7",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Make `sizelimit` and `pvNoSpendsRemaining` unnamed parameters.",
    "created_at": "2018-09-26T05:16:18Z",
    "updated_at": "2019-07-13T17:23:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r220428663",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220428663"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r220428663"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220428663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1319,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240003460",
    "pull_request_review_id": 182942759,
    "id": 240003460,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDAwMzQ2MA==",
    "diff_hunk": "@@ -865,38 +990,96 @@ const CTransaction* CTxMemPool::GetConflictTx(const COutPoint& prevout) const\n     return it == mapNextTx.end() ? nullptr : it->second;\n }\n \n+const CTransaction* CTxMemPool::Layer::GetConflictTx(const COutPoint& prevout) const\n+{\n+    auto it_add = m_map_next_tx_added.find(prevout);\n+    if (it_add != m_map_next_tx_added.end()) return it_add->second;\n+    if (m_map_next_tx_removed.find(prevout) != m_map_next_tx_removed.end()) return nullptr;\n+\n+    return m_tx_pool.GetConflictTx(prevout);",
    "path": "src/txmempool.cpp",
    "position": 499,
    "original_position": 493,
    "commit_id": "421de16e9ca017f5aa4fa600f15b156300ac0c75",
    "original_commit_id": "f1d3f1b93af73195fcb74ad46cb3e2794726da96",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Calling `GetConflictTx ` requires holding the mutex `m_tx_pool.cs`",
    "created_at": "2018-12-08T12:25:25Z",
    "updated_at": "2019-07-13T17:23:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r240003460",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240003460"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r240003460"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240003460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1000,
    "original_line": 1000,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240003480",
    "pull_request_review_id": 182942786,
    "id": 240003480,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDAwMzQ4MA==",
    "diff_hunk": "@@ -865,38 +990,96 @@ const CTransaction* CTxMemPool::GetConflictTx(const COutPoint& prevout) const\n     return it == mapNextTx.end() ? nullptr : it->second;\n }\n \n+const CTransaction* CTxMemPool::Layer::GetConflictTx(const COutPoint& prevout) const\n+{\n+    auto it_add = m_map_next_tx_added.find(prevout);\n+    if (it_add != m_map_next_tx_added.end()) return it_add->second;\n+    if (m_map_next_tx_removed.find(prevout) != m_map_next_tx_removed.end()) return nullptr;\n+\n+    return m_tx_pool.GetConflictTx(prevout);\n+}\n+\n boost::optional<CTxMemPool::txiter> CTxMemPool::GetIter(const uint256& txid) const\n {\n     auto it = mapTx.find(txid);\n     if (it != mapTx.end()) return it;\n     return boost::optional<txiter>{};\n }\n \n-CTxMemPool::setEntries CTxMemPool::GetIterSet(const std::set<uint256>& hashes) const\n+boost::optional<CTxMemPool::Layer::txiter> CTxMemPool::Layer::GetIter(const uint256& txid) const\n {\n-    CTxMemPool::setEntries ret;\n+    const auto& it_cache = m_cache_added.find(txid);\n+    if (it_cache != m_cache_added.end()) {\n+        CTxMemPool::Layer::txiter{it_cache};\n+    }\n+    if (m_cache_removed.find(txid) != m_cache_removed.end()) {\n+        return boost::optional<CTxMemPool::Layer::txiter>{};\n+    }\n+\n+    // Nothing found in the cache, fall back to the inner layer:\n+    const auto it_inner = m_tx_pool.GetIter(txid);",
    "path": "src/txmempool.cpp",
    "position": 521,
    "original_position": 516,
    "commit_id": "421de16e9ca017f5aa4fa600f15b156300ac0c75",
    "original_commit_id": "f1d3f1b93af73195fcb74ad46cb3e2794726da96",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`m_tx_pool.cs` must be held when calling `GetIter`",
    "created_at": "2018-12-08T12:26:17Z",
    "updated_at": "2019-07-13T17:23:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r240003480",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240003480"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r240003480"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240003480/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1021,
    "original_line": 1021,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240003492",
    "pull_request_review_id": 182942799,
    "id": 240003492,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MDAwMzQ5Mg==",
    "diff_hunk": "@@ -975,6 +1206,18 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolParents(txiter entry) const\n     return it->second.parents;\n }\n \n+CTxMemPool::Layer::setEntries CTxMemPool::Layer::GetMemPoolParents(const CTxMemPool::Layer::txiter& entry) const\n+{\n+    const auto it = m_cache_map_links.find(entry);\n+    if (it != m_cache_map_links.end()) return it->second.parents;\n+\n+    CTxMemPool::Layer::setEntries ret;\n+    for (const auto& parent : m_tx_pool.GetMemPoolParents(boost::get<CTxMemPool::txiter>(entry))) {",
    "path": "src/txmempool.cpp",
    "position": 718,
    "original_position": 706,
    "commit_id": "421de16e9ca017f5aa4fa600f15b156300ac0c75",
    "original_commit_id": "f1d3f1b93af73195fcb74ad46cb3e2794726da96",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`m_tx_pool.cs` must be held here",
    "created_at": "2018-12-08T12:26:51Z",
    "updated_at": "2019-07-13T17:23:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r240003492",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240003492"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13804#discussion_r240003492"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/240003492/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1222,
    "original_line": 1222,
    "side": "RIGHT"
  }
]