hebasto,2018-10-13T16:11:40Z,utACK 25ae1a1,https://github.com/bitcoin/bitcoin/pull/14475#issuecomment-429553929,429553929,
practicalswift,2018-10-14T11:35:01Z,@hebasto Updated. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/14475#issuecomment-429619088,429619088,
hebasto,2018-10-14T14:45:16Z,"Let's assume a platform with `sizeof(short) > 2` or `sizeof(int) > 4`.\nWithout `static_assert` statement the logic will remain correct if\n`nSize <= std::numeric_limits<unsigned short>::max()` replace with `nSize <= 0xffff`\nand\n`nSize <= std::numeric_limits<unsigned int>::max()` replace with `nSize <= 0xffffffff`",https://github.com/bitcoin/bitcoin/pull/14475#issuecomment-429632171,429632171,
practicalswift,2018-10-14T16:43:28Z,"@hebasto As I read the code more adjustments would be needed to the serialisation code to make it work properly under such a platform. I don't think changing `GetSizeOfCompactSize` and `WriteCompactSize` would be enough?\n\nFWIW I think the platform requirements are reasonable. My goal with this PR is just making the platform requirements explicit and immediately obvious to compilers, humans and",https://github.com/bitcoin/bitcoin/pull/14475#issuecomment-429641620,429641620,
hebasto,2018-10-15T16:02:38Z,"> FWIW I think the platform requirements are reasonable. My goal with this PR is just making the platform requirements explicit and immediately obvious to compilers, humans and static analysers :-)\n> \n> I think a compile time check is the most elegant and non-intrusive way to achieve that goal.\n\nAgree. ACK 4486f2a ",https://github.com/bitcoin/bitcoin/pull/14475#issuecomment-429913502,429913502,
