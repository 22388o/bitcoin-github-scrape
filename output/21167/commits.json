[
  {
    "sha": "24bda56c29800502953c6a8cd69248e60ff9a0a0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNGJkYTU2YzI5ODAwNTAyOTUzYzZhOGNkNjkyNDhlNjBmZjlhMGEw",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-26T21:08:28Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-02-12T21:23:15Z"
      },
      "message": "net: make CNode::m_inbound_onion public, drop getter, update tests",
      "tree": {
        "sha": "a738e46a31f939eb36697becc9d0854d6e1f25c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a738e46a31f939eb36697becc9d0854d6e1f25c8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24bda56c29800502953c6a8cd69248e60ff9a0a0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmAm8ckACgkQT1chs9Dj\nkh1fpRAAumf5KOT90DHABax4HihxqHHBqoejAcnDKMg76EmkXArvIxZWWU6JQiKS\nbfcz+n+38QTz/cQpDnYxf8UevAUDUMDoqDlcCKA9SU8BchKmf61qii4ZpEHdsKpV\n4nSVfj3GaJ1MUHNvTxmOBqmX0tWAG/pcwpGaZE7uc8WTPqLaezhpExgK+oCYQ3cA\nYMH0KnyvD1hMxNePqXTgEw7H8U1YmVe7tG1r2i9+cwgd2OPuX73g8Xln3D7hASBu\ni+9hIcnV+P/M1oQY1VEELTGPh3GfmqupvvgyRzlgH/w+AGZ7LhoDzL61jAsBk45J\ngjcLfp3QrCQ2LdvM3f9jqdS1nIERsFS9nPBGTgL3goUQn38CVEAtvvHELgpO/Kip\ngwx39Mi7wOKQwLWgQnEpIXb9KHgJELyLghNw6zIX9/rCAix8CzMx3m5ao6wZcIFN\nm5N/qcEgAB3YZAWz/Av4ACpHhpyFkFw59V4SsGQk82laanvJQS/yUyws5Bm23cSh\nQobrRL4imFbCgESM+llOtYr0TiV8cOKhsOOqhCeW0QryOZrfEQ5VoLeKob2+Ogp6\nEA+NiK+Gy7DtvuKVb8h3JVLjbg683NY2itv6/OzeKsffmsWvYZ4SEIsxh1exBcWA\nTW9/lIxwQsUVzC07JwGNDqkcc55YQ562B44xZ7a+hFZk+wruQwc=\n=2bLU\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIF2MRm0Lpgn1mns0Fxq3NDHg7Fgh8T77u03vr72rnprZCP/wECGzkx84m5wm\nuUkcaO1PqYEI8SD5L7qcKspQ9UcQoJVJ5gHtsA/5ure+zeIXORhWkQk/zQjxBGAm\n8crwCFx5RPHZdZhcAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmf/8BBDXRJCIblotjTAtVtiqJuQCPAg7bIPGxGT\nlWrr5q/snIVeHZVPF9vpeDiPeLmRNdHP1acI8SC0RWNpz9P1eO+ya41Ro9JYCE0q\nOGLtTB2/LEmVW7JHPgjxBGAm4/nwCJjOKda7ZLTkAIPf4w0u+QyOKShodHRwczov\nL2Zpbm5leS5jYWxlbmRhci5ldGVybml0eXdhbGwuY29t//AQybaPKYuiTxoKhwV3\nHJ+5IwjxBGAm8cvwCL2yIOTiLeueAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn8BDesGVwUld3Wrr0p+oQtdEzCPEE\nYCbxyvAIqPQ+YGPjJSAAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNh\ndGFsbGF4eS5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree a738e46a31f939eb36697becc9d0854d6e1f25c8\nparent bf3189eda65d269fee6a70681ab390bd7cebf7d7\nauthor Jon Atack <jon@atack.com> 1611695308 +0100\ncommitter Jon Atack <jon@atack.com> 1613164995 +0100\n\nnet: make CNode::m_inbound_onion public, drop getter, update tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24bda56c29800502953c6a8cd69248e60ff9a0a0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/24bda56c29800502953c6a8cd69248e60ff9a0a0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24bda56c29800502953c6a8cd69248e60ff9a0a0/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf3189eda65d269fee6a70681ab390bd7cebf7d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf3189eda65d269fee6a70681ab390bd7cebf7d7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf3189eda65d269fee6a70681ab390bd7cebf7d7"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 8,
      "deletions": 12
    },
    "files": [
      {
        "sha": "fd02c24f4bad71f72c3f6a1421f74dd9bbf2699b",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24bda56c29800502953c6a8cd69248e60ff9a0a0/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24bda56c29800502953c6a8cd69248e60ff9a0a0/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=24bda56c29800502953c6a8cd69248e60ff9a0a0",
        "patch": "@@ -2855,12 +2855,12 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, SOCKET hSocketIn, const\n     : nTimeConnected(GetSystemTimeInSeconds()),\n       addr(addrIn),\n       addrBind(addrBindIn),\n+      m_inbound_onion(inbound_onion),\n       nKeyedNetGroup(nKeyedNetGroupIn),\n       id(idIn),\n       nLocalHostNonce(nLocalHostNonceIn),\n       m_conn_type(conn_type_in),\n-      nLocalServices(nLocalServicesIn),\n-      m_inbound_onion(inbound_onion)\n+      nLocalServices(nLocalServicesIn)\n {\n     if (inbound_onion) assert(conn_type_in == ConnectionType::INBOUND);\n     hSocket = hSocketIn;"
      },
      {
        "sha": "fe44933c6d568fe26c9e453b1ee1971f689f21c1",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24bda56c29800502953c6a8cd69248e60ff9a0a0/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24bda56c29800502953c6a8cd69248e60ff9a0a0/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=24bda56c29800502953c6a8cd69248e60ff9a0a0",
        "patch": "@@ -429,6 +429,8 @@ class CNode\n     const CAddress addr;\n     // Bind address of our side of the connection\n     const CAddress addrBind;\n+    //! Whether this peer is an inbound onion, i.e. connected via our Tor onion service.\n+    const bool m_inbound_onion{false};\n     std::atomic<int> nVersion{0};\n     RecursiveMutex cs_SubVer;\n     /**\n@@ -719,9 +721,6 @@ class CNode\n \n     std::string ConnectionTypeAsString() const { return ::ConnectionTypeAsString(m_conn_type); }\n \n-    /** Whether this peer is an inbound onion, e.g. connected via our Tor onion service. */\n-    bool IsInboundOnion() const { return m_inbound_onion; }\n-\n private:\n     const NodeId id;\n     const uint64_t nLocalHostNonce;\n@@ -754,9 +753,6 @@ class CNode\n     CService addrLocal GUARDED_BY(cs_addrLocal);\n     mutable RecursiveMutex cs_addrLocal;\n \n-    //! Whether this peer is an inbound onion, e.g. connected via our Tor onion service.\n-    const bool m_inbound_onion{false};\n-\n     mapMsgCmdSize mapSendBytesPerMsgCmd GUARDED_BY(cs_vSend);\n     mapMsgCmdSize mapRecvBytesPerMsgCmd GUARDED_BY(cs_vRecv);\n };"
      },
      {
        "sha": "60e22f732fa1e9baa03636b5f05ec3f50b51214f",
        "filename": "src/test/net_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24bda56c29800502953c6a8cd69248e60ff9a0a0/src/test/net_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24bda56c29800502953c6a8cd69248e60ff9a0a0/src/test/net_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_tests.cpp?ref=24bda56c29800502953c6a8cd69248e60ff9a0a0",
        "patch": "@@ -199,7 +199,7 @@ BOOST_AUTO_TEST_CASE(cnode_simple_test)\n     BOOST_CHECK(pnode1->IsFeelerConn() == false);\n     BOOST_CHECK(pnode1->IsAddrFetchConn() == false);\n     BOOST_CHECK(pnode1->IsInboundConn() == false);\n-    BOOST_CHECK(pnode1->IsInboundOnion() == false);\n+    BOOST_CHECK(pnode1->m_inbound_onion == false);\n     BOOST_CHECK_EQUAL(pnode1->ConnectedThroughNetwork(), Network::NET_IPV4);\n \n     std::unique_ptr<CNode> pnode2 = MakeUnique<CNode>(\n@@ -214,7 +214,7 @@ BOOST_AUTO_TEST_CASE(cnode_simple_test)\n     BOOST_CHECK(pnode2->IsFeelerConn() == false);\n     BOOST_CHECK(pnode2->IsAddrFetchConn() == false);\n     BOOST_CHECK(pnode2->IsInboundConn() == true);\n-    BOOST_CHECK(pnode2->IsInboundOnion() == false);\n+    BOOST_CHECK(pnode2->m_inbound_onion == false);\n     BOOST_CHECK_EQUAL(pnode2->ConnectedThroughNetwork(), Network::NET_IPV4);\n \n     std::unique_ptr<CNode> pnode3 = MakeUnique<CNode>(\n@@ -229,7 +229,7 @@ BOOST_AUTO_TEST_CASE(cnode_simple_test)\n     BOOST_CHECK(pnode3->IsFeelerConn() == false);\n     BOOST_CHECK(pnode3->IsAddrFetchConn() == false);\n     BOOST_CHECK(pnode3->IsInboundConn() == false);\n-    BOOST_CHECK(pnode3->IsInboundOnion() == false);\n+    BOOST_CHECK(pnode3->m_inbound_onion == false);\n     BOOST_CHECK_EQUAL(pnode3->ConnectedThroughNetwork(), Network::NET_IPV4);\n \n     std::unique_ptr<CNode> pnode4 = MakeUnique<CNode>(\n@@ -244,7 +244,7 @@ BOOST_AUTO_TEST_CASE(cnode_simple_test)\n     BOOST_CHECK(pnode4->IsFeelerConn() == false);\n     BOOST_CHECK(pnode4->IsAddrFetchConn() == false);\n     BOOST_CHECK(pnode4->IsInboundConn() == true);\n-    BOOST_CHECK(pnode4->IsInboundOnion() == true);\n+    BOOST_CHECK(pnode4->m_inbound_onion == true);\n     BOOST_CHECK_EQUAL(pnode4->ConnectedThroughNetwork(), Network::NET_ONION);\n }\n "
      }
    ]
  },
  {
    "sha": "2ee4a7a9ec68c75094685c06ec793b614f44c4ce",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZWU0YTdhOWVjNjhjNzUwOTQ2ODVjMDZlYzc5M2I2MTRmNDRjNGNl",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-02-12T20:40:19Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-02-12T21:32:08Z"
      },
      "message": "net: remove CNode::m_inbound_onion defaults for explicitness\n\nand to allow the compiler to warn if uninitialized in the ctor\nor omitted in the caller.",
      "tree": {
        "sha": "a5b238b2843ab4eff9765b275e82481fff4133dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a5b238b2843ab4eff9765b275e82481fff4133dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ee4a7a9ec68c75094685c06ec793b614f44c4ce",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmAm8/sACgkQT1chs9Dj\nkh3J0g/8CNwT3Suty1DdM9mwgfuNPdW9fV8szmAyIBBvRRBfjDyAh49ke74faaG+\nvz1xRZYQnRGxOvbbe/OiJ5grg3iz982QK2vRcR0hPPku9HAV+p+q/UU5TECZf+pa\nQLOKPZJTB14JC6tOyPFwI1Vz1evICKIA7gxqg2GlVq6OtFOhuv+l3HUdp1u1OPtu\npr1QE+bNOj952mtGf4CrJ+7ffpGwbXlRpmVFwcvNYkP/So0H5NotZn33Sv4DeEEW\nsvg71aA1tWZfPywIuPt0NZmvoWDW9LZU1EKHj2Y96axpZZQ5iQLf9xa37HyNVZEx\nV0/T5ryUZ39Dmoxc5y1PhItvC2L29EGUrdeUxeWy9rt9D7oWF5Gxdm5iEeMFCqON\nFRBygKDO10NXZoWFAZc7tJ5Zwx6yDE2iQZNuRTv97qUeoBKqMlIKHles7gfiMbZW\nxible7Gfk1Ck8Jk0zFQ8h7IqVSzGam97w3mB3cl2f3EHTYmxLSy4cLdvtkX6V68B\nsQJ4EUXB9UrYnC2SiD7FIIBK3yv+cuOuou2BJkdSH16Hs6ImILLgL2s+PmvmnPqq\n6oHzS4NaVd7qtwl4WI9cAaegfZl3sIi44Jmpd3ii+grBMeyA91sb4K/LlNVP/gEZ\nx/5hoVHQtuoFUyEMZb6AhJ9u18Vhn6CoXHNedHYcJZIOZTlcOCE=\n=CB6G\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwID3YG7HTKUEGz7d6Z7nXdaWJLJkCFjUlcCWmwiaN/Y/ECP/wEHKrE5ryg85N\n5zA5c+13g8wI8QRgJvP88AiON5Gj5BthOwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEHQoxorwtdxcMYVH4pIE6nII8QRgJvP8\n8AjNnKQB8aqXjgCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQepoTm3xXptoVh+UEKQ2EdQjxBGAm5ivwCD7H\nCYCADDiMAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0\neXdhbGwuY29t8BDSIQcBOVuuWatKJ5IL5lhLCPEEYCbz/fAIMWw8CI7Q09IAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree a5b238b2843ab4eff9765b275e82481fff4133dd\nparent 24bda56c29800502953c6a8cd69248e60ff9a0a0\nauthor Jon Atack <jon@atack.com> 1613162419 +0100\ncommitter Jon Atack <jon@atack.com> 1613165528 +0100\n\nnet: remove CNode::m_inbound_onion defaults for explicitness\n\nand to allow the compiler to warn if uninitialized in the ctor\nor omitted in the caller.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ee4a7a9ec68c75094685c06ec793b614f44c4ce",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ee4a7a9ec68c75094685c06ec793b614f44c4ce",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ee4a7a9ec68c75094685c06ec793b614f44c4ce/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "24bda56c29800502953c6a8cd69248e60ff9a0a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24bda56c29800502953c6a8cd69248e60ff9a0a0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/24bda56c29800502953c6a8cd69248e60ff9a0a0"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 11,
      "deletions": 10
    },
    "files": [
      {
        "sha": "68388da09450c4532b39740e4d2d3cea2ba2c3ce",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ee4a7a9ec68c75094685c06ec793b614f44c4ce/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ee4a7a9ec68c75094685c06ec793b614f44c4ce/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=2ee4a7a9ec68c75094685c06ec793b614f44c4ce",
        "patch": "@@ -476,7 +476,7 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n     NodeId id = GetNewNodeId();\n     uint64_t nonce = GetDeterministicRandomizer(RANDOMIZER_ID_LOCALHOSTNONCE).Write(id).Finalize();\n     CAddress addr_bind = GetBindAddress(sock->Get());\n-    CNode* pnode = new CNode(id, nLocalServices, sock->Release(), addrConnect, CalculateKeyedNetGroup(addrConnect), nonce, addr_bind, pszDest ? pszDest : \"\", conn_type);\n+    CNode* pnode = new CNode(id, nLocalServices, sock->Release(), addrConnect, CalculateKeyedNetGroup(addrConnect), nonce, addr_bind, pszDest ? pszDest : \"\", conn_type, /* inbound_onion */ false);\n     pnode->AddRef();\n \n     // We're making a new connection, harvest entropy from the time (and our peer count)"
      },
      {
        "sha": "79efb4a56629e9d0a507608cfcf1f04db989cd25",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ee4a7a9ec68c75094685c06ec793b614f44c4ce/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ee4a7a9ec68c75094685c06ec793b614f44c4ce/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=2ee4a7a9ec68c75094685c06ec793b614f44c4ce",
        "patch": "@@ -430,7 +430,7 @@ class CNode\n     // Bind address of our side of the connection\n     const CAddress addrBind;\n     //! Whether this peer is an inbound onion, i.e. connected via our Tor onion service.\n-    const bool m_inbound_onion{false};\n+    const bool m_inbound_onion;\n     std::atomic<int> nVersion{0};\n     RecursiveMutex cs_SubVer;\n     /**\n@@ -603,7 +603,7 @@ class CNode\n     // Whether a ping is requested.\n     std::atomic<bool> fPingQueued{false};\n \n-    CNode(NodeId id, ServiceFlags nLocalServicesIn, SOCKET hSocketIn, const CAddress& addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn, const CAddress& addrBindIn, const std::string& addrNameIn, ConnectionType conn_type_in, bool inbound_onion = false);\n+    CNode(NodeId id, ServiceFlags nLocalServicesIn, SOCKET hSocketIn, const CAddress& addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn, const CAddress& addrBindIn, const std::string& addrNameIn, ConnectionType conn_type_in, bool inbound_onion);\n     ~CNode();\n     CNode(const CNode&) = delete;\n     CNode& operator=(const CNode&) = delete;"
      },
      {
        "sha": "0d480e35ea11ba7f28b3584de4b51761aae10180",
        "filename": "src/test/denialofservice_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ee4a7a9ec68c75094685c06ec793b614f44c4ce/src/test/denialofservice_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ee4a7a9ec68c75094685c06ec793b614f44c4ce/src/test/denialofservice_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/denialofservice_tests.cpp?ref=2ee4a7a9ec68c75094685c06ec793b614f44c4ce",
        "patch": "@@ -85,7 +85,7 @@ BOOST_AUTO_TEST_CASE(outbound_slow_chain_eviction)\n \n     // Mock an outbound peer\n     CAddress addr1(ip(0xa0b0c001), NODE_NONE);\n-    CNode dummyNode1(id++, ServiceFlags(NODE_NETWORK | NODE_WITNESS), INVALID_SOCKET, addr1, 0, 0, CAddress(), \"\", ConnectionType::OUTBOUND_FULL_RELAY);\n+    CNode dummyNode1(id++, ServiceFlags(NODE_NETWORK | NODE_WITNESS), INVALID_SOCKET, addr1, /* nKeyedNetGroupIn */ 0, /* nLocalHostNonceIn */ 0, CAddress(), /* pszDest */ \"\", ConnectionType::OUTBOUND_FULL_RELAY, /* inbound_onion */ false);\n     dummyNode1.SetCommonVersion(PROTOCOL_VERSION);\n \n     peerLogic->InitializeNode(&dummyNode1);\n@@ -136,7 +136,7 @@ BOOST_AUTO_TEST_CASE(outbound_slow_chain_eviction)\n static void AddRandomOutboundPeer(std::vector<CNode *> &vNodes, PeerManager &peerLogic, CConnmanTest* connman)\n {\n     CAddress addr(ip(g_insecure_rand_ctx.randbits(32)), NODE_NONE);\n-    vNodes.emplace_back(new CNode(id++, ServiceFlags(NODE_NETWORK | NODE_WITNESS), INVALID_SOCKET, addr, 0, 0, CAddress(), \"\", ConnectionType::OUTBOUND_FULL_RELAY));\n+    vNodes.emplace_back(new CNode(id++, ServiceFlags(NODE_NETWORK | NODE_WITNESS), INVALID_SOCKET, addr, /* nKeyedNetGroupIn */ 0, /* nLocalHostNonceIn */ 0, CAddress(), /* pszDest */ \"\", ConnectionType::OUTBOUND_FULL_RELAY, /* inbound_onion */ false));\n     CNode &node = *vNodes.back();\n     node.SetCommonVersion(PROTOCOL_VERSION);\n \n@@ -229,7 +229,7 @@ BOOST_AUTO_TEST_CASE(peer_discouragement)\n \n     banman->ClearBanned();\n     CAddress addr1(ip(0xa0b0c001), NODE_NONE);\n-    CNode dummyNode1(id++, NODE_NETWORK, INVALID_SOCKET, addr1, 0, 0, CAddress(), \"\", ConnectionType::INBOUND);\n+    CNode dummyNode1(id++, NODE_NETWORK, INVALID_SOCKET, addr1, /* nKeyedNetGroupIn */ 0, /* nLocalHostNonceIn */ 0, CAddress(), /* pszDest */ \"\", ConnectionType::INBOUND, /* inbound_onion */ false);\n     dummyNode1.SetCommonVersion(PROTOCOL_VERSION);\n     peerLogic->InitializeNode(&dummyNode1);\n     dummyNode1.fSuccessfullyConnected = true;\n@@ -242,7 +242,7 @@ BOOST_AUTO_TEST_CASE(peer_discouragement)\n     BOOST_CHECK(!banman->IsDiscouraged(ip(0xa0b0c001|0x0000ff00))); // Different IP, not discouraged\n \n     CAddress addr2(ip(0xa0b0c002), NODE_NONE);\n-    CNode dummyNode2(id++, NODE_NETWORK, INVALID_SOCKET, addr2, 1, 1, CAddress(), \"\", ConnectionType::INBOUND);\n+    CNode dummyNode2(id++, NODE_NETWORK, INVALID_SOCKET, addr2, /* nKeyedNetGroupIn */ 1, /* nLocalHostNonceIn */ 1, CAddress(), /* pszDest */ \"\", ConnectionType::INBOUND, /* inbound_onion */ false);\n     dummyNode2.SetCommonVersion(PROTOCOL_VERSION);\n     peerLogic->InitializeNode(&dummyNode2);\n     dummyNode2.fSuccessfullyConnected = true;\n@@ -279,7 +279,7 @@ BOOST_AUTO_TEST_CASE(DoS_bantime)\n     SetMockTime(nStartTime); // Overrides future calls to GetTime()\n \n     CAddress addr(ip(0xa0b0c001), NODE_NONE);\n-    CNode dummyNode(id++, NODE_NETWORK, INVALID_SOCKET, addr, 4, 4, CAddress(), \"\", ConnectionType::INBOUND);\n+    CNode dummyNode(id++, NODE_NETWORK, INVALID_SOCKET, addr, /* nKeyedNetGroupIn */ 4, /* nLocalHostNonceIn */ 4, CAddress(), /* pszDest */ \"\", ConnectionType::INBOUND, /* inbound_onion */ false);\n     dummyNode.SetCommonVersion(PROTOCOL_VERSION);\n     peerLogic->InitializeNode(&dummyNode);\n     dummyNode.fSuccessfullyConnected = true;"
      },
      {
        "sha": "010a3375cfb33163caced1e0a7d9c7eedb10009f",
        "filename": "src/test/net_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ee4a7a9ec68c75094685c06ec793b614f44c4ce/src/test/net_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ee4a7a9ec68c75094685c06ec793b614f44c4ce/src/test/net_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_tests.cpp?ref=2ee4a7a9ec68c75094685c06ec793b614f44c4ce",
        "patch": "@@ -192,7 +192,8 @@ BOOST_AUTO_TEST_CASE(cnode_simple_test)\n         id++, NODE_NETWORK, hSocket, addr,\n         /* nKeyedNetGroupIn = */ 0,\n         /* nLocalHostNonceIn = */ 0,\n-        CAddress(), pszDest, ConnectionType::OUTBOUND_FULL_RELAY);\n+        CAddress(), pszDest, ConnectionType::OUTBOUND_FULL_RELAY,\n+        /* inbound_onion = */ false);\n     BOOST_CHECK(pnode1->IsFullOutboundConn() == true);\n     BOOST_CHECK(pnode1->IsManualConn() == false);\n     BOOST_CHECK(pnode1->IsBlockOnlyConn() == false);\n@@ -679,7 +680,7 @@ BOOST_AUTO_TEST_CASE(ipv4_peer_with_ipv6_addrMe_test)\n     in_addr ipv4AddrPeer;\n     ipv4AddrPeer.s_addr = 0xa0b0c001;\n     CAddress addr = CAddress(CService(ipv4AddrPeer, 7777), NODE_NETWORK);\n-    std::unique_ptr<CNode> pnode = MakeUnique<CNode>(0, NODE_NETWORK, INVALID_SOCKET, addr, 0, 0, CAddress{}, std::string{}, ConnectionType::OUTBOUND_FULL_RELAY);\n+    std::unique_ptr<CNode> pnode = MakeUnique<CNode>(0, NODE_NETWORK, INVALID_SOCKET, addr, /* nKeyedNetGroupIn */ 0, /* nLocalHostNonceIn */ 0, CAddress{}, /* pszDest */ std::string{}, ConnectionType::OUTBOUND_FULL_RELAY, /* inbound_onion */ false);\n     pnode->fSuccessfullyConnected.store(true);\n \n     // the peer claims to be reaching us via IPv6"
      }
    ]
  }
]