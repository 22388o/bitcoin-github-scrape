sipa,2018-08-13T20:46:47Z,Would you mind also just dropping the witness after reading the non-witness UTXO field (and/or before writing)?,https://github.com/bitcoin/bitcoin/pull/13960#issuecomment-412658308,412658308,
achow101,2018-08-13T22:01:48Z,"> Would you mind also just dropping the witness after reading the non-witness UTXO field (and/or before writing)?\n\nDone.",https://github.com/bitcoin/bitcoin/pull/13960#issuecomment-412680169,412680169,
sipa,2018-08-13T22:47:18Z,utACK bd19cc78cfc455cf06e120adb0d12c2f96ba8fca,https://github.com/bitcoin/bitcoin/pull/13960#issuecomment-412691002,412691002,
kallewoof,2018-08-14T05:23:09Z,"Tested ACK bd19cc78cfc455cf06e120adb0d12c2f96ba8fca\n",https://github.com/bitcoin/bitcoin/pull/13960#issuecomment-412757977,412757977,
laanwj,2018-08-14T09:19:17Z,utACK bd19cc78cfc455cf06e120adb0d12c2f96ba8fca,https://github.com/bitcoin/bitcoin/pull/13960#issuecomment-412809178,412809178,
meshcollider,2018-08-14T13:33:47Z,utACK https://github.com/bitcoin/bitcoin/pull/13960/commits/bd19cc78cfc455cf06e120adb0d12c2f96ba8fca,https://github.com/bitcoin/bitcoin/pull/13960#issuecomment-412873125,412873125,
fanquake,2018-08-15T02:04:25Z,Will be backported in #13976,https://github.com/bitcoin/bitcoin/pull/13960#issuecomment-413071794,413071794,
dongcarl,2018-09-09T05:26:18Z,"> When a transaction is serliazed for the non-witness-utxo, it is always a valid network transaction and thus it should be always be deserialized as a witness transaction and the deserialzation flags are set as such.\n\nSurely you mean ""...it should be always be deserialized as a _**non-witness**_ transaction...""?",https://github.com/bitcoin/bitcoin/pull/13960#issuecomment-419692005,419692005,
sipa,2018-09-09T05:30:35Z,"@dongcarl No. ""Deserialized as a witness transaction"" here means ""permit witnesses, and if ambiguous, prefer the interpretation with witness over the one with 0 inputs"". As it's always a valid fully-signed transaction, it can't have 0 inputs, and thus we should indeed prefer the witness version.",https://github.com/bitcoin/bitcoin/pull/13960#issuecomment-419692146,419692146,
dongcarl,2018-09-09T05:36:22Z,@sipa Makes sense!,https://github.com/bitcoin/bitcoin/pull/13960#issuecomment-419692337,419692337,
sipa,2018-08-13T20:40:22Z,"You can instead use `UnserializeFromVector(OverrideStream(&s, s.GetType(), s.GetVersion() & ~SERIALIZE_TRANSACTION_NO_WITNESS);` to avoid permanently changing the flags on `s` (similar below).",https://github.com/bitcoin/bitcoin/pull/13960#discussion_r209751296,209751296,src/script/sign.h
achow101,2018-08-13T22:01:36Z,Done,https://github.com/bitcoin/bitcoin/pull/13960#discussion_r209773811,209773811,src/script/sign.h
Empact,2018-08-14T06:35:59Z,"nit: could use the `WithOrVersion` helper here and elsewhere\nhttps://github.com/bitcoin/bitcoin/blob/ddc3ec92b0e655a3da21ac2e85ec2e7ecb66c65b/src/streams.h#L66-L70",https://github.com/bitcoin/bitcoin/pull/13960#discussion_r209841254,209841254,src/script/sign.h
Empact,2018-08-14T06:39:10Z,"nit: could be nice to put `size` with `read`, `write`, as they are all delegated.",https://github.com/bitcoin/bitcoin/pull/13960#discussion_r209841763,209841763,src/streams.h
