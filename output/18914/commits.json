[
  {
    "sha": "1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTUxY2VhMmQ1MmNhYzQwM2ZmNTA2YTdjYzk1NWQ4ZGU4ZmQ2ZjNl",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-03-14T06:49:59Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-08T07:36:58Z"
      },
      "message": "refactor: Use override for non-final overriders",
      "tree": {
        "sha": "63665a4ab090e2b3c3c27a0a359b71ad492f6c50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/63665a4ab090e2b3c3c27a0a359b71ad492f6c50"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl61DBoACgkQQQEIES5+\nqB98HxAArhRcjrvj/jJASg1Iw1kv70tzymMjSC2hH91Je1amuPAQZPd0AJQdVom0\nwLBIXRxxVerD7csC2IsLMZhOXFnErZIA0N21X+jUBInVesb8AWGtsTItzH09jnB3\njKUTNu/D7T15Or598cLSqdoihi56b2Odf2Wf3LDwUn+XKTdDet6i0CR/CtNDHm76\n4ZTc2NjJKL1xAQr0Pss1wRAAy1MYzq5fLi6jb4ARFxV46ZOC/ISMCPCfxWws1AVp\nkc+dfvVGgry8V27E8uY6IXtlQDq1Xk2yUlGEQHlB3O6ubIb5rcSgKRtxZHTNsR3S\nSniGtTM4PbJXtZuXP1QXDjfoXWIRPKiZyzjobZjrE/crgWcKOz3f/ZUF2mPg1NxC\n7kXd1dH9HsvQeDjN97s2iB01L99EpAb9hDrwXOkGldAZQI0Bf0MopxURh0Yoxt3+\nE1aKeREOlsZQr35/XFRGXo4Yd4ML1bg48JWT0ajlyHVcWy9rbaRtOdJkBQq7Ydsb\n5UlIvd5CfEOAlzWOr3zKvZ6G4wQYkpjMPvKO+scKbJmJ9Yv1wb3IP+X2NC8wFhsK\nPjJlL1jRuQMVgu7ggmkDsqetpb2vCF9cJrgpo4b3GdqPcZdu9fPoM0m0vuHY0nQ7\neZKNcz8qhh3xsBIq4dY4yrztgyTA0iqpjLs8sYtNNug4KLFhL0Q=\n=GwIG\n-----END PGP SIGNATURE-----",
        "payload": "tree 63665a4ab090e2b3c3c27a0a359b71ad492f6c50\nparent f54753293fe7355e4280944d766f22054b560ba1\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1584168599 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1588923418 +0300\n\nrefactor: Use override for non-final overriders\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f54753293fe7355e4280944d766f22054b560ba1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f54753293fe7355e4280944d766f22054b560ba1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f54753293fe7355e4280944d766f22054b560ba1"
      }
    ],
    "stats": {
      "total": 211,
      "additions": 106,
      "deletions": 105
    },
    "files": [
      {
        "sha": "0d3b08fe7daf87eacf58317d5c18f85b40025d51",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -35,7 +35,7 @@ class AddressBookSortFilterProxyModel final : public QSortFilterProxyModel\n     }\n \n protected:\n-    bool filterAcceptsRow(int row, const QModelIndex& parent) const\n+    bool filterAcceptsRow(int row, const QModelIndex& parent) const override\n     {\n         auto model = sourceModel();\n         auto label = model->index(row, AddressTableModel::Label, parent);"
      },
      {
        "sha": "3d303a6f682564a5f2e4ff57e6aeab88fdc9f5f1",
        "filename": "src/qt/addressbookpage.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/addressbookpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/addressbookpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -45,7 +45,7 @@ class AddressBookPage : public QDialog\n     const QString &getReturnValue() const { return returnValue; }\n \n public Q_SLOTS:\n-    void done(int retval);\n+    void done(int retval) override;\n \n private:\n     Ui::AddressBookPage *ui;"
      },
      {
        "sha": "97f673caf1004c258d37a2faae9831470ce58caf",
        "filename": "src/qt/addresstablemodel.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/addresstablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/addresstablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -52,14 +52,14 @@ class AddressTableModel : public QAbstractTableModel\n \n     /** @name Methods overridden from QAbstractTableModel\n         @{*/\n-    int rowCount(const QModelIndex &parent) const;\n-    int columnCount(const QModelIndex &parent) const;\n-    QVariant data(const QModelIndex &index, int role) const;\n-    bool setData(const QModelIndex &index, const QVariant &value, int role);\n-    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n-    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n-    bool removeRows(int row, int count, const QModelIndex &parent = QModelIndex());\n-    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    int rowCount(const QModelIndex &parent) const override;\n+    int columnCount(const QModelIndex &parent) const override;\n+    QVariant data(const QModelIndex &index, int role) const override;\n+    bool setData(const QModelIndex &index, const QVariant &value, int role) override;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const override;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const override;\n+    bool removeRows(int row, int count, const QModelIndex &parent = QModelIndex()) override;\n+    Qt::ItemFlags flags(const QModelIndex &index) const override;\n     /*@}*/\n \n     /* Add an address to the model."
      },
      {
        "sha": "9557e72936e3ab3eeca3e3e1dc9c85fb1955cce8",
        "filename": "src/qt/askpassphrasedialog.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/askpassphrasedialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/askpassphrasedialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -32,7 +32,7 @@ class AskPassphraseDialog : public QDialog\n     explicit AskPassphraseDialog(Mode mode, QWidget *parent, SecureString* passphrase_out = nullptr);\n     ~AskPassphraseDialog();\n \n-    void accept();\n+    void accept() override;\n \n     void setModel(WalletModel *model);\n \n@@ -49,8 +49,8 @@ private Q_SLOTS:\n     void toggleShowPassword(bool);\n \n protected:\n-    bool event(QEvent *event);\n-    bool eventFilter(QObject *object, QEvent *event);\n+    bool event(QEvent *event) override;\n+    bool eventFilter(QObject *object, QEvent *event) override;\n };\n \n #endif // BITCOIN_QT_ASKPASSPHRASEDIALOG_H"
      },
      {
        "sha": "57f559fc14c77c17adf787c0a011c148efe7d0d5",
        "filename": "src/qt/bantablemodel.h",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/bantablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/bantablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -56,16 +56,17 @@ class BanTableModel : public QAbstractTableModel\n \n     /** @name Methods overridden from QAbstractTableModel\n         @{*/\n-    int rowCount(const QModelIndex &parent) const;\n-    int columnCount(const QModelIndex &parent) const;\n-    QVariant data(const QModelIndex &index, int role) const;\n-    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n-    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n-    Qt::ItemFlags flags(const QModelIndex &index) const;\n-    void sort(int column, Qt::SortOrder order);\n-    bool shouldShow();\n+    int rowCount(const QModelIndex &parent) const override;\n+    int columnCount(const QModelIndex &parent) const override;\n+    QVariant data(const QModelIndex &index, int role) const override;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const override;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const override;\n+    Qt::ItemFlags flags(const QModelIndex &index) const override;\n+    void sort(int column, Qt::SortOrder order) override;\n     /*@}*/\n \n+    bool shouldShow();\n+\n public Q_SLOTS:\n     void refresh();\n "
      },
      {
        "sha": "52c06828a3d534f886454b8349741e24732dc48a",
        "filename": "src/qt/bitcoinaddressvalidator.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/bitcoinaddressvalidator.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/bitcoinaddressvalidator.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinaddressvalidator.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -17,7 +17,7 @@ class BitcoinAddressEntryValidator : public QValidator\n public:\n     explicit BitcoinAddressEntryValidator(QObject *parent);\n \n-    State validate(QString &input, int &pos) const;\n+    State validate(QString &input, int &pos) const override;\n };\n \n /** Bitcoin address widget validator, checks for a valid bitcoin address.\n@@ -29,7 +29,7 @@ class BitcoinAddressCheckValidator : public QValidator\n public:\n     explicit BitcoinAddressCheckValidator(QObject *parent);\n \n-    State validate(QString &input, int &pos) const;\n+    State validate(QString &input, int &pos) const override;\n };\n \n #endif // BITCOIN_QT_BITCOINADDRESSVALIDATOR_H"
      },
      {
        "sha": "4c57f1e35240105e6c3c60e875900f572e3fe896",
        "filename": "src/qt/bitcoinamountfield.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/bitcoinamountfield.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/bitcoinamountfield.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.cpp?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -31,7 +31,7 @@ class AmountSpinBox: public QAbstractSpinBox\n         connect(lineEdit(), &QLineEdit::textEdited, this, &AmountSpinBox::valueChanged);\n     }\n \n-    QValidator::State validate(QString &text, int &pos) const\n+    QValidator::State validate(QString &text, int &pos) const override\n     {\n         if(text.isEmpty())\n             return QValidator::Intermediate;\n@@ -41,7 +41,7 @@ class AmountSpinBox: public QAbstractSpinBox\n         return valid ? QValidator::Intermediate : QValidator::Invalid;\n     }\n \n-    void fixup(QString &input) const\n+    void fixup(QString &input) const override\n     {\n         bool valid;\n         CAmount val;\n@@ -87,7 +87,7 @@ class AmountSpinBox: public QAbstractSpinBox\n         m_max_amount = value;\n     }\n \n-    void stepBy(int steps)\n+    void stepBy(int steps) override\n     {\n         bool valid = false;\n         CAmount val = value(&valid);\n@@ -114,7 +114,7 @@ class AmountSpinBox: public QAbstractSpinBox\n         singleStep = step;\n     }\n \n-    QSize minimumSizeHint() const\n+    QSize minimumSizeHint() const override\n     {\n         if(cachedMinimumSizeHint.isEmpty())\n         {\n@@ -175,7 +175,7 @@ class AmountSpinBox: public QAbstractSpinBox\n     }\n \n protected:\n-    bool event(QEvent *event)\n+    bool event(QEvent *event) override\n     {\n         if (event->type() == QEvent::KeyPress || event->type() == QEvent::KeyRelease)\n         {\n@@ -190,7 +190,7 @@ class AmountSpinBox: public QAbstractSpinBox\n         return QAbstractSpinBox::event(event);\n     }\n \n-    StepEnabled stepEnabled() const\n+    StepEnabled stepEnabled() const override\n     {\n         if (isReadOnly()) // Disable steps when AmountSpinBox is read-only\n             return StepNone;"
      },
      {
        "sha": "d3e61aac29386812d71db1952d17e0b1c2b55b8b",
        "filename": "src/qt/bitcoinamountfield.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/bitcoinamountfield.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/bitcoinamountfield.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -70,7 +70,7 @@ class BitcoinAmountField: public QWidget\n \n protected:\n     /** Intercept focus-in event and ',' key presses */\n-    bool eventFilter(QObject *object, QEvent *event);\n+    bool eventFilter(QObject *object, QEvent *event) override;\n \n private:\n     AmountSpinBox *amount;"
      },
      {
        "sha": "9ec6d58d9dde421b2883b2a13687518228232c5b",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -99,12 +99,12 @@ class BitcoinGUI : public QMainWindow\n     void unsubscribeFromCoreSignals();\n \n protected:\n-    void changeEvent(QEvent *e);\n-    void closeEvent(QCloseEvent *event);\n-    void showEvent(QShowEvent *event);\n-    void dragEnterEvent(QDragEnterEvent *event);\n-    void dropEvent(QDropEvent *event);\n-    bool eventFilter(QObject *object, QEvent *event);\n+    void changeEvent(QEvent *e) override;\n+    void closeEvent(QCloseEvent *event) override;\n+    void showEvent(QShowEvent *event) override;\n+    void dragEnterEvent(QDragEnterEvent *event) override;\n+    void dropEvent(QDropEvent *event) override;\n+    bool eventFilter(QObject *object, QEvent *event) override;\n \n private:\n     interfaces::Node& m_node;\n@@ -324,7 +324,7 @@ class UnitDisplayStatusBarControl : public QLabel\n \n protected:\n     /** So that it responds to left-button clicks */\n-    void mousePressEvent(QMouseEvent *event);\n+    void mousePressEvent(QMouseEvent *event) override;\n \n private:\n     OptionsModel *optionsModel;"
      },
      {
        "sha": "1ff4702117333ba16e8f934163d8205bec45e840",
        "filename": "src/qt/bitcoinunits.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/bitcoinunits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/bitcoinunits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -90,8 +90,8 @@ class BitcoinUnits: public QAbstractListModel\n         /** Unit identifier */\n         UnitRole = Qt::UserRole\n     };\n-    int rowCount(const QModelIndex &parent) const;\n-    QVariant data(const QModelIndex &index, int role) const;\n+    int rowCount(const QModelIndex &parent) const override;\n+    QVariant data(const QModelIndex &index, int role) const override;\n     ///@}\n \n     static QString removeSpaces(QString text)"
      },
      {
        "sha": "eebab34a9dbb0699716febcc16e31c3547f02385",
        "filename": "src/qt/coincontroldialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/coincontroldialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/coincontroldialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -34,7 +34,7 @@ class CCoinControlWidgetItem : public QTreeWidgetItem\n     explicit CCoinControlWidgetItem(int type = Type) : QTreeWidgetItem(type) {}\n     explicit CCoinControlWidgetItem(QTreeWidgetItem *parent, int type = Type) : QTreeWidgetItem(parent, type) {}\n \n-    bool operator<(const QTreeWidgetItem &other) const;\n+    bool operator<(const QTreeWidgetItem &other) const override;\n };\n \n "
      },
      {
        "sha": "ac03a409c120987d31ee83cf612cbc0a2a2f8b23",
        "filename": "src/qt/coincontroltreewidget.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/coincontroltreewidget.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/coincontroltreewidget.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroltreewidget.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -16,7 +16,7 @@ class CoinControlTreeWidget : public QTreeWidget\n     explicit CoinControlTreeWidget(QWidget *parent = nullptr);\n \n protected:\n-    virtual void keyPressEvent(QKeyEvent *event);\n+    virtual void keyPressEvent(QKeyEvent *event) override;\n };\n \n #endif // BITCOIN_QT_COINCONTROLTREEWIDGET_H"
      },
      {
        "sha": "3be63156fd06fc7b082b75f224dc322022c0e7b0",
        "filename": "src/qt/editaddressdialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/editaddressdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/editaddressdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/editaddressdialog.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -40,7 +40,7 @@ class EditAddressDialog : public QDialog\n     void setAddress(const QString &address);\n \n public Q_SLOTS:\n-    void accept();\n+    void accept() override;\n \n private:\n     bool saveCurrentRow();"
      },
      {
        "sha": "8b9fca4fb1b5e0044465a7c4efab0e48e2ad3ca6",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -145,7 +145,7 @@ namespace GUIUtil\n         explicit ToolTipToRichTextFilter(int size_threshold, QObject *parent = nullptr);\n \n     protected:\n-        bool eventFilter(QObject *obj, QEvent *evt);\n+        bool eventFilter(QObject *obj, QEvent *evt) override;\n \n     private:\n         int size_threshold;\n@@ -227,7 +227,7 @@ namespace GUIUtil\n          */\n         void clicked(const QPoint& point);\n     protected:\n-        void mouseReleaseEvent(QMouseEvent *event);\n+        void mouseReleaseEvent(QMouseEvent *event) override;\n     };\n \n     class ClickableProgressBar : public QProgressBar\n@@ -240,7 +240,7 @@ namespace GUIUtil\n          */\n         void clicked(const QPoint& point);\n     protected:\n-        void mouseReleaseEvent(QMouseEvent *event);\n+        void mouseReleaseEvent(QMouseEvent *event) override;\n     };\n \n     typedef ClickableProgressBar ProgressBar;\n@@ -255,7 +255,7 @@ namespace GUIUtil\n         void keyEscapePressed();\n \n     private:\n-        bool eventFilter(QObject *object, QEvent *event);\n+        bool eventFilter(QObject *object, QEvent *event) override;\n     };\n \n     // Fix known bugs in QProgressDialog class."
      },
      {
        "sha": "a565d7d8f39434a4cdd423b84ec4f9ea9ac3ffcf",
        "filename": "src/qt/modaloverlay.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/modaloverlay.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/modaloverlay.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/modaloverlay.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -35,8 +35,8 @@ public Q_SLOTS:\n     bool isLayerVisible() const { return layerIsVisible; }\n \n protected:\n-    bool eventFilter(QObject * obj, QEvent * ev);\n-    bool event(QEvent* ev);\n+    bool eventFilter(QObject * obj, QEvent * ev) override;\n+    bool event(QEvent* ev) override;\n \n private:\n     Ui::ModalOverlay *ui;"
      },
      {
        "sha": "667af2ec750c53cb123a699d7c5a7907e4a8f0c6",
        "filename": "src/qt/openuridialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/openuridialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/openuridialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/openuridialog.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -22,7 +22,7 @@ class OpenURIDialog : public QDialog\n     QString getURI();\n \n protected Q_SLOTS:\n-    void accept();\n+    void accept() override;\n \n private:\n     Ui::OpenURIDialog *ui;"
      },
      {
        "sha": "568c8b6fd0f19c994477c32b30b0d2f5a800fe6b",
        "filename": "src/qt/optionsdialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/optionsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/optionsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -28,7 +28,7 @@ class ProxyAddressValidator : public QValidator\n public:\n     explicit ProxyAddressValidator(QObject *parent);\n \n-    State validate(QString &input, int &pos) const;\n+    State validate(QString &input, int &pos) const override;\n };\n \n /** Preferences dialog. */"
      },
      {
        "sha": "6ca5ac9d7534c841c22430219fde0627c0796a4b",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -68,9 +68,9 @@ class OptionsModel : public QAbstractListModel\n     void Init(bool resetSettings = false);\n     void Reset();\n \n-    int rowCount(const QModelIndex & parent = QModelIndex()) const;\n-    QVariant data(const QModelIndex & index, int role = Qt::DisplayRole) const;\n-    bool setData(const QModelIndex & index, const QVariant & value, int role = Qt::EditRole);\n+    int rowCount(const QModelIndex & parent = QModelIndex()) const override;\n+    QVariant data(const QModelIndex & index, int role = Qt::DisplayRole) const override;\n+    bool setData(const QModelIndex & index, const QVariant & value, int role = Qt::EditRole) override;\n     /** Updates current unit in memory, settings and emits displayUnitChanged(newUnit) signal */\n     void setDisplayUnit(const QVariant &value);\n "
      },
      {
        "sha": "e20ec229fc46ab31b4a2c74b7c1ede0589820f7f",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -35,7 +35,7 @@ class TxViewDelegate : public QAbstractItemDelegate\n     }\n \n     inline void paint(QPainter *painter, const QStyleOptionViewItem &option,\n-                      const QModelIndex &index ) const\n+                      const QModelIndex &index ) const override\n     {\n         painter->save();\n \n@@ -99,7 +99,7 @@ class TxViewDelegate : public QAbstractItemDelegate\n         painter->restore();\n     }\n \n-    inline QSize sizeHint(const QStyleOptionViewItem &option, const QModelIndex &index) const\n+    inline QSize sizeHint(const QStyleOptionViewItem &option, const QModelIndex &index) const override\n     {\n         return QSize(DECORATION_SIZE, DECORATION_SIZE);\n     }"
      },
      {
        "sha": "154f4a7ea6dfe3ae0badb6190471c199790afc4d",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -98,7 +98,7 @@ private Q_SLOTS:\n protected:\n     // Constructor registers this on the parent QApplication to\n     // receive QEvent::FileOpen and QEvent:Drop events\n-    bool eventFilter(QObject *object, QEvent *event);\n+    bool eventFilter(QObject *object, QEvent *event) override;\n \n private:\n     bool saveURIs;                      // true during startup"
      },
      {
        "sha": "99de772ac02add209469c348f32db3265c4b9749",
        "filename": "src/qt/peertablemodel.h",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/peertablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/peertablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -68,13 +68,13 @@ class PeerTableModel : public QAbstractTableModel\n \n     /** @name Methods overridden from QAbstractTableModel\n         @{*/\n-    int rowCount(const QModelIndex &parent) const;\n-    int columnCount(const QModelIndex &parent) const;\n-    QVariant data(const QModelIndex &index, int role) const;\n-    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n-    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n-    Qt::ItemFlags flags(const QModelIndex &index) const;\n-    void sort(int column, Qt::SortOrder order);\n+    int rowCount(const QModelIndex &parent) const override;\n+    int columnCount(const QModelIndex &parent) const override;\n+    QVariant data(const QModelIndex &index, int role) const override;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const override;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const override;\n+    Qt::ItemFlags flags(const QModelIndex &index) const override;\n+    void sort(int column, Qt::SortOrder order) override;\n     /*@}*/\n \n public Q_SLOTS:"
      },
      {
        "sha": "cca598c2cef9b0fdb986b90175ac638d9e301b90",
        "filename": "src/qt/qrimagewidget.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/qrimagewidget.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/qrimagewidget.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qrimagewidget.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -35,8 +35,8 @@ public Q_SLOTS:\n     void copyImage();\n \n protected:\n-    virtual void mousePressEvent(QMouseEvent *event);\n-    virtual void contextMenuEvent(QContextMenuEvent *event);\n+    virtual void mousePressEvent(QMouseEvent *event) override;\n+    virtual void contextMenuEvent(QContextMenuEvent *event) override;\n \n private:\n     QMenu *contextMenu;"
      },
      {
        "sha": "2c72b2ecda283530e98d5cc002ff98771419c420",
        "filename": "src/qt/qvalidatedlineedit.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/qvalidatedlineedit.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/qvalidatedlineedit.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qvalidatedlineedit.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -21,8 +21,8 @@ class QValidatedLineEdit : public QLineEdit\n     bool isValid();\n \n protected:\n-    void focusInEvent(QFocusEvent *evt);\n-    void focusOutEvent(QFocusEvent *evt);\n+    void focusInEvent(QFocusEvent *evt) override;\n+    void focusOutEvent(QFocusEvent *evt) override;\n \n private:\n     bool valid;"
      },
      {
        "sha": "2f48cd58f058413e00f9800eb05166d8ffb00cff",
        "filename": "src/qt/receivecoinsdialog.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/receivecoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/receivecoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -46,11 +46,11 @@ class ReceiveCoinsDialog : public QDialog\n \n public Q_SLOTS:\n     void clear();\n-    void reject();\n-    void accept();\n+    void reject() override;\n+    void accept() override;\n \n protected:\n-    virtual void keyPressEvent(QKeyEvent *event);\n+    virtual void keyPressEvent(QKeyEvent *event) override;\n \n private:\n     Ui::ReceiveCoinsDialog *ui;\n@@ -61,7 +61,7 @@ public Q_SLOTS:\n \n     QModelIndex selectedRow();\n     void copyColumnToClipboard(int column);\n-    virtual void resizeEvent(QResizeEvent *event);\n+    virtual void resizeEvent(QResizeEvent *event) override;\n \n private Q_SLOTS:\n     void on_receiveButton_clicked();"
      },
      {
        "sha": "addf5ad0ae77eb1adbb8a10aaa095d06c464e160",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -73,14 +73,15 @@ class RecentRequestsTableModel: public QAbstractTableModel\n \n     /** @name Methods overridden from QAbstractTableModel\n         @{*/\n-    int rowCount(const QModelIndex &parent) const;\n-    int columnCount(const QModelIndex &parent) const;\n-    QVariant data(const QModelIndex &index, int role) const;\n-    bool setData(const QModelIndex &index, const QVariant &value, int role);\n-    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n-    QModelIndex index(int row, int column, const QModelIndex &parent = QModelIndex()) const;\n-    bool removeRows(int row, int count, const QModelIndex &parent = QModelIndex());\n-    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    int rowCount(const QModelIndex &parent) const override;\n+    int columnCount(const QModelIndex &parent) const override;\n+    QVariant data(const QModelIndex &index, int role) const override;\n+    bool setData(const QModelIndex &index, const QVariant &value, int role) override;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const override;\n+    QModelIndex index(int row, int column, const QModelIndex &parent = QModelIndex()) const override;\n+    bool removeRows(int row, int count, const QModelIndex &parent = QModelIndex()) override;\n+    Qt::ItemFlags flags(const QModelIndex &index) const override;\n+    void sort(int column, Qt::SortOrder order = Qt::AscendingOrder) override;\n     /*@}*/\n \n     const RecentRequestEntry &entry(int row) const { return list[row]; }\n@@ -89,7 +90,6 @@ class RecentRequestsTableModel: public QAbstractTableModel\n     void addNewRequest(RecentRequestEntry &recipient);\n \n public Q_SLOTS:\n-    void sort(int column, Qt::SortOrder order = Qt::AscendingOrder);\n     void updateDisplayUnit();\n \n private:"
      },
      {
        "sha": "b7fbca50ac1449625f76f7dc5025dba812bd1d5e",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -115,8 +115,8 @@ class QtRPCTimerInterface: public RPCTimerInterface\n {\n public:\n     ~QtRPCTimerInterface() {}\n-    const char *Name() { return \"Qt\"; }\n-    RPCTimerBase* NewTimer(std::function<void()>& func, int64_t millis)\n+    const char *Name() override { return \"Qt\"; }\n+    RPCTimerBase* NewTimer(std::function<void()>& func, int64_t millis) override\n     {\n         return new QtRPCTimerBase(func, millis);\n     }"
      },
      {
        "sha": "de8e37cca281cc3936636d22d35b169cea1fdfc2",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -71,8 +71,8 @@ class RPCConsole: public QWidget\n     QKeySequence tabShortcut(TabTypes tab_type) const;\n \n protected:\n-    virtual bool eventFilter(QObject* obj, QEvent *event);\n-    void keyPressEvent(QKeyEvent *);\n+    virtual bool eventFilter(QObject* obj, QEvent *event) override;\n+    void keyPressEvent(QKeyEvent *) override;\n \n private Q_SLOTS:\n     void on_lineEdit_returnPressed();\n@@ -83,9 +83,9 @@ private Q_SLOTS:\n     void on_sldGraphRange_valueChanged(int value);\n     /** update traffic statistics */\n     void updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut);\n-    void resizeEvent(QResizeEvent *event);\n-    void showEvent(QShowEvent *event);\n-    void hideEvent(QHideEvent *event);\n+    void resizeEvent(QResizeEvent *event) override;\n+    void showEvent(QShowEvent *event) override;\n+    void hideEvent(QHideEvent *event) override;\n     /** Show custom context menu on Peers tab */\n     void showPeersTableContextMenu(const QPoint& point);\n     /** Show custom context menu on Bans tab */"
      },
      {
        "sha": "b2dc15181d4930d3a35e563da797d6729ddd3cd6",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -47,8 +47,8 @@ class SendCoinsDialog : public QDialog\n \n public Q_SLOTS:\n     void clear();\n-    void reject();\n-    void accept();\n+    void reject() override;\n+    void accept() override;\n     SendCoinsEntry *addEntry();\n     void updateTabsAndLabels();\n     void setBalance(const interfaces::WalletBalances& balances);\n@@ -112,7 +112,7 @@ class SendConfirmationDialog : public QMessageBox\n \n public:\n     SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text = \"\", const QString& detailed_text = \"\", int secDelay = SEND_CONFIRM_DELAY, const QString& confirmText = \"Send\", QWidget* parent = nullptr);\n-    int exec();\n+    int exec() override;\n \n private Q_SLOTS:\n     void countDown();"
      },
      {
        "sha": "d33a2d038dd9a4ea1f1fd22a8073c04033e24ad6",
        "filename": "src/qt/signverifymessagedialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/signverifymessagedialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/signverifymessagedialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -30,7 +30,7 @@ class SignVerifyMessageDialog : public QDialog\n     void showTab_VM(bool fShow);\n \n protected:\n-    bool eventFilter(QObject *object, QEvent *event);\n+    bool eventFilter(QObject *object, QEvent *event) override;\n \n private:\n     Ui::SignVerifyMessageDialog *ui;"
      },
      {
        "sha": "3158524117497f776fb10ce9eaa9e76ed776747a",
        "filename": "src/qt/splashscreen.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/splashscreen.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/splashscreen.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -32,8 +32,8 @@ class SplashScreen : public QWidget\n     ~SplashScreen();\n \n protected:\n-    void paintEvent(QPaintEvent *event);\n-    void closeEvent(QCloseEvent *event);\n+    void paintEvent(QPaintEvent *event) override;\n+    void closeEvent(QCloseEvent *event) override;\n \n public Q_SLOTS:\n     /** Hide the splash screen window and schedule the splash screen object for deletion */\n@@ -43,7 +43,7 @@ public Q_SLOTS:\n     void showMessage(const QString &message, int alignment, const QColor &color);\n \n protected:\n-    bool eventFilter(QObject * obj, QEvent * ev);\n+    bool eventFilter(QObject * obj, QEvent * ev) override;\n \n private:\n     /** Connect core signals to splash screen */"
      },
      {
        "sha": "2d8c825815aa47bd125a31e1d1eaa0a5cdd314bf",
        "filename": "src/qt/trafficgraphwidget.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/trafficgraphwidget.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/trafficgraphwidget.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/trafficgraphwidget.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -25,7 +25,7 @@ class TrafficGraphWidget : public QWidget\n     int getGraphRangeMins() const;\n \n protected:\n-    void paintEvent(QPaintEvent *);\n+    void paintEvent(QPaintEvent *) override;\n \n public Q_SLOTS:\n     void updateRates();"
      },
      {
        "sha": "d6bb84f7e61506dae6e006e2dde44440aca08767",
        "filename": "src/qt/transactionfilterproxy.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/transactionfilterproxy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/transactionfilterproxy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionfilterproxy.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -49,10 +49,10 @@ class TransactionFilterProxy : public QSortFilterProxyModel\n     /** Set whether to show conflicted transactions. */\n     void setShowInactive(bool showInactive);\n \n-    int rowCount(const QModelIndex &parent = QModelIndex()) const;\n+    int rowCount(const QModelIndex &parent = QModelIndex()) const override;\n \n protected:\n-    bool filterAcceptsRow(int source_row, const QModelIndex & source_parent) const;\n+    bool filterAcceptsRow(int source_row, const QModelIndex & source_parent) const override;\n \n private:\n     QDateTime dateFrom;"
      },
      {
        "sha": "f06f0ea15ff13fcda163835af0853308b71410f3",
        "filename": "src/qt/transactiontablemodel.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/transactiontablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/transactiontablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -76,11 +76,11 @@ class TransactionTableModel : public QAbstractTableModel\n         RawDecorationRole,\n     };\n \n-    int rowCount(const QModelIndex &parent) const;\n-    int columnCount(const QModelIndex &parent) const;\n-    QVariant data(const QModelIndex &index, int role) const;\n-    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n-    QModelIndex index(int row, int column, const QModelIndex & parent = QModelIndex()) const;\n+    int rowCount(const QModelIndex &parent) const override;\n+    int columnCount(const QModelIndex &parent) const override;\n+    QVariant data(const QModelIndex &index, int role) const override;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const override;\n+    QModelIndex index(int row, int column, const QModelIndex & parent = QModelIndex()) const override;\n     bool processingQueuedTransactions() const { return fProcessingQueuedTransactions; }\n \n private:"
      },
      {
        "sha": "268e3751b39d6d4256222da7acc196cd191831aa",
        "filename": "src/qt/transactionview.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/transactionview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/transactionview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -82,9 +82,9 @@ class TransactionView : public QWidget\n \n     GUIUtil::TableViewLastColumnResizingFixer *columnResizingFixer;\n \n-    virtual void resizeEvent(QResizeEvent* event);\n+    virtual void resizeEvent(QResizeEvent* event) override;\n \n-    bool eventFilter(QObject *obj, QEvent *event);\n+    bool eventFilter(QObject *obj, QEvent *event) override;\n \n private Q_SLOTS:\n     void contextualMenu(const QPoint &);"
      },
      {
        "sha": "425b468f400b209f217902bede280d78a10d42f7",
        "filename": "src/qt/utilitydialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/utilitydialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1551cea2d52cac403ff506a7cc955d8de8fd6f3e/src/qt/utilitydialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.h?ref=1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "patch": "@@ -51,7 +51,7 @@ class ShutdownWindow : public QWidget\n     static QWidget* showShutdownWindow(QMainWindow* window);\n \n protected:\n-    void closeEvent(QCloseEvent *event);\n+    void closeEvent(QCloseEvent *event) override;\n };\n \n #endif // BITCOIN_QT_UTILITYDIALOG_H"
      }
    ]
  },
  {
    "sha": "d044e0ec7d37bbcdf10bbdb903b9119741c7297d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMDQ0ZTBlYzdkMzdiYmNkZjEwYmJkYjkwM2I5MTE5NzQxYzcyOTdk",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-03-14T06:50:15Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-08T07:37:05Z"
      },
      "message": "refactor: Remove override for final overriders",
      "tree": {
        "sha": "9160779f272d0511e6e5c7c025c8e187c5316c25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9160779f272d0511e6e5c7c025c8e187c5316c25"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d044e0ec7d37bbcdf10bbdb903b9119741c7297d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl61DCEACgkQQQEIES5+\nqB/h/BAAgmBX3iHMabZzrsZgn6562NO9TB0S8OptfZOk5Md22Y5a1ZpzPGm3r7f8\nVvp4wJwLoKlQ4X/OR4ElRc+tuufkykP1ZyQa7nuWpKCZZzlZHeuhPoKRjKx1onSf\nvNgw4e8eXI/cWqHO5LvatslaCuDfanpnBEipMUlIWjNfaES7OJS+dM5kWj/Jt0RD\nXVEuDeFqFdy4IDv1u8Y4fEe8lw3/ySiQcyDilEohzL1xV8zWyaAuY0AULVyocO0D\n10EbAbQiBeVgg76NGiERLbLcxz6d6nF83h4YmdgndPotg/mbvVyKMbqN90nKHB9h\nW3uqFlgBku/u7+pDVZQIisrpdBztmww8Qr5kujDi8jAGCQ6s7egGv4cDElzjVK2y\nqTj+tq/G+recG/lNKLKHNbkQnz1rYgxIZB34iyVBn1o35cRKkpHkRjbHY4A6mcVw\nmZZ8injmt+KHA4Xdzr2jvjQzlsICCQJgYp2NJqV5hRdywh08Lpem2jM6wyHScYBQ\nWZ6mQbMpJPbTpfwkXwrWKh2gyTNctCJeMNt05qWyP1xezgFRaktBgG4vc/Yqm81F\nMPW0z1JRMtel0CJ/fXLFHdkryArrxlZBzlQpM/BhAtfYGu3fnFzfmup9ucrxPGY+\nVIn2qRDzA4N48pXsCNCQ5RU4o0jNplX9qQzsTMLxDIxDS24u7X0=\n=NYA7\n-----END PGP SIGNATURE-----",
        "payload": "tree 9160779f272d0511e6e5c7c025c8e187c5316c25\nparent 1551cea2d52cac403ff506a7cc955d8de8fd6f3e\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1584168615 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1588923425 +0300\n\nrefactor: Remove override for final overriders\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d044e0ec7d37bbcdf10bbdb903b9119741c7297d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d044e0ec7d37bbcdf10bbdb903b9119741c7297d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d044e0ec7d37bbcdf10bbdb903b9119741c7297d/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1551cea2d52cac403ff506a7cc955d8de8fd6f3e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1551cea2d52cac403ff506a7cc955d8de8fd6f3e"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "31dfb4d16a7471f1301c529eecc5e8e77978507c",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d044e0ec7d37bbcdf10bbdb903b9119741c7297d/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d044e0ec7d37bbcdf10bbdb903b9119741c7297d/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=d044e0ec7d37bbcdf10bbdb903b9119741c7297d",
        "patch": "@@ -127,7 +127,7 @@ class RpcHandlerImpl : public Handler\n         ::tableRPC.appendCommand(m_command.name, &m_command);\n     }\n \n-    void disconnect() override final\n+    void disconnect() final\n     {\n         if (m_wrapped_command) {\n             m_wrapped_command = nullptr;"
      },
      {
        "sha": "ed0175bb107cd93f5785e48e103de791f4915388",
        "filename": "src/script/descriptor.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d044e0ec7d37bbcdf10bbdb903b9119741c7297d/src/script/descriptor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d044e0ec7d37bbcdf10bbdb903b9119741c7297d/src/script/descriptor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.cpp?ref=d044e0ec7d37bbcdf10bbdb903b9119741c7297d",
        "patch": "@@ -481,7 +481,7 @@ class DescriptorImpl : public Descriptor\n         return AddChecksum(ret);\n     }\n \n-    bool ToPrivateString(const SigningProvider& arg, std::string& out) const override final\n+    bool ToPrivateString(const SigningProvider& arg, std::string& out) const final\n     {\n         bool ret = ToStringHelper(&arg, out, true);\n         out = AddChecksum(out);"
      }
    ]
  }
]