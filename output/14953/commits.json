[
  {
    "sha": "faead93c6c7e1d27bd2a1b2a9b496fda838c2996",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWVhZDkzYzZjN2UxZDI3YmQyYTFiMmE5YjQ5NmZkYTgzOGMyOTk2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-12-13T19:33:28Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-12-13T19:32:44Z"
      },
      "message": "test: Make g_insecure_rand_ctx thread_local",
      "tree": {
        "sha": "c98d48a195cd410f774ebe3ec55c9c910b876911",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c98d48a195cd410f774ebe3ec55c9c910b876911"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faead93c6c7e1d27bd2a1b2a9b496fda838c2996",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJcErPcAAoJEM4rdWl+aaVIOjEL/3PazlWvPnBwBNDQgEGIpgNy\nXgMCtCOo6ls9rYtnB8yODe6KklHbv0z5XV6GudbCE6LRRLOeRsK3TW+9GgCNLCI8\nSozu7FrQNMSoNid7KLk42Wew3kkPHA0SOUpCwjiIxQJcSoBE2vYmaPtO40ARvEsE\nWofiXfTypEXDwkdrIKzG/6I5cvYn9l/golfZSix/neyGezirbv/4JjhMmrk6uoDQ\niMrXnnayOVqFngi2ypGySpfLLB7raJFY6Pg77Sdymw2Nfv+UkuQqknhyZdZfv1Vj\nydlI8463HnUBXakape3lQzj3KYEwDFfx04n852f0XexAd0KxEDMKgf13/XVyeyG2\nl+tRaAVBgmLUsTajnJjGIoa4imOB+HS/XZCxYm1sw2tqlMpQSXkspKtOcRRJlXi+\noh6jjrAeNtuIVV9hw3Zl8dLhfNqhur5o6eoVI0Li/Jkszv9HHGlC222FbgWaiXSE\npzF94b8vTIKZpxJq3Hed754Vpml/jJI0r+I69/0qgg==\n=1HXm\n-----END PGP SIGNATURE-----",
        "payload": "tree c98d48a195cd410f774ebe3ec55c9c910b876911\nparent 9a4334443085970a42792db3528695585fe7053b\nauthor MarcoFalke <falke.marco@gmail.com> 1544729608 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1544729564 -0500\n\ntest: Make g_insecure_rand_ctx thread_local\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faead93c6c7e1d27bd2a1b2a9b496fda838c2996",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faead93c6c7e1d27bd2a1b2a9b496fda838c2996",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faead93c6c7e1d27bd2a1b2a9b496fda838c2996/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9a4334443085970a42792db3528695585fe7053b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a4334443085970a42792db3528695585fe7053b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9a4334443085970a42792db3528695585fe7053b"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 21,
      "deletions": 23
    },
    "files": [
      {
        "sha": "4fbf8ee0a8f8dd95bccd1565b00f74aebd776c7d",
        "filename": "src/test/denialofservice_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faead93c6c7e1d27bd2a1b2a9b496fda838c2996/src/test/denialofservice_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faead93c6c7e1d27bd2a1b2a9b496fda838c2996/src/test/denialofservice_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/denialofservice_tests.cpp?ref=faead93c6c7e1d27bd2a1b2a9b496fda838c2996",
        "patch": "@@ -111,7 +111,7 @@ BOOST_AUTO_TEST_CASE(outbound_slow_chain_eviction)\n \n static void AddRandomOutboundPeer(std::vector<CNode *> &vNodes, PeerLogicValidation &peerLogic)\n {\n-    CAddress addr(ip(insecure_rand_ctx.randbits(32)), NODE_NONE);\n+    CAddress addr(ip(g_insecure_rand_ctx.randbits(32)), NODE_NONE);\n     vNodes.emplace_back(new CNode(id++, ServiceFlags(NODE_NETWORK|NODE_WITNESS), 0, INVALID_SOCKET, addr, 0, 0, CAddress(), \"\", /*fInboundIn=*/ false));\n     CNode &node = *vNodes.back();\n     node.SetSendVersion(PROTOCOL_VERSION);"
      },
      {
        "sha": "bb8db9fa8dc096cf4fb4008f9395ccb3c2ec9ddc",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 14,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faead93c6c7e1d27bd2a1b2a9b496fda838c2996/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faead93c6c7e1d27bd2a1b2a9b496fda838c2996/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=faead93c6c7e1d27bd2a1b2a9b496fda838c2996",
        "patch": "@@ -11,6 +11,7 @@\n #include <crypto/sha256.h>\n #include <miner.h>\n #include <net_processing.h>\n+#include <noui.h>\n #include <pow.h>\n #include <rpc/register.h>\n #include <rpc/server.h>\n@@ -36,10 +37,7 @@ void CConnmanTest::ClearNodes()\n     g_connman->vNodes.clear();\n }\n \n-FastRandomContext insecure_rand_ctx;\n-\n-extern bool fPrintToConsole;\n-extern void noui_connect();\n+thread_local FastRandomContext g_insecure_rand_ctx;\n \n std::ostream& operator<<(std::ostream& os, const uint256& num)\n {\n@@ -117,16 +115,16 @@ TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(cha\n \n TestingSetup::~TestingSetup()\n {\n-        threadGroup.interrupt_all();\n-        threadGroup.join_all();\n-        GetMainSignals().FlushBackgroundCallbacks();\n-        GetMainSignals().UnregisterBackgroundSignalScheduler();\n-        g_connman.reset();\n-        peerLogic.reset();\n-        UnloadBlockIndex();\n-        pcoinsTip.reset();\n-        pcoinsdbview.reset();\n-        pblocktree.reset();\n+    threadGroup.interrupt_all();\n+    threadGroup.join_all();\n+    GetMainSignals().FlushBackgroundCallbacks();\n+    GetMainSignals().UnregisterBackgroundSignalScheduler();\n+    g_connman.reset();\n+    peerLogic.reset();\n+    UnloadBlockIndex();\n+    pcoinsTip.reset();\n+    pcoinsdbview.reset();\n+    pblocktree.reset();\n }\n \n TestChain100Setup::TestChain100Setup() : TestingSetup(CBaseChainParams::REGTEST)"
      },
      {
        "sha": "71c0379eac8bde48e5eddfc89e38bd4bc1a98419",
        "filename": "src/test/test_bitcoin.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faead93c6c7e1d27bd2a1b2a9b496fda838c2996/src/test/test_bitcoin.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faead93c6c7e1d27bd2a1b2a9b496fda838c2996/src/test/test_bitcoin.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.h?ref=faead93c6c7e1d27bd2a1b2a9b496fda838c2996",
        "patch": "@@ -26,18 +26,18 @@ std::ostream& operator<<(typename std::enable_if<std::is_enum<T>::value, std::os\n     return stream << static_cast<typename std::underlying_type<T>::type>(e);\n }\n \n-extern FastRandomContext insecure_rand_ctx;\n+thread_local extern FastRandomContext g_insecure_rand_ctx;\n \n static inline void SeedInsecureRand(bool deterministic = false)\n {\n-    insecure_rand_ctx = FastRandomContext(deterministic);\n+    g_insecure_rand_ctx = FastRandomContext(deterministic);\n }\n \n-static inline uint32_t InsecureRand32() { return insecure_rand_ctx.rand32(); }\n-static inline uint256 InsecureRand256() { return insecure_rand_ctx.rand256(); }\n-static inline uint64_t InsecureRandBits(int bits) { return insecure_rand_ctx.randbits(bits); }\n-static inline uint64_t InsecureRandRange(uint64_t range) { return insecure_rand_ctx.randrange(range); }\n-static inline bool InsecureRandBool() { return insecure_rand_ctx.randbool(); }\n+static inline uint32_t InsecureRand32() { return g_insecure_rand_ctx.rand32(); }\n+static inline uint256 InsecureRand256() { return g_insecure_rand_ctx.rand256(); }\n+static inline uint64_t InsecureRandBits(int bits) { return g_insecure_rand_ctx.randbits(bits); }\n+static inline uint64_t InsecureRandRange(uint64_t range) { return g_insecure_rand_ctx.randrange(range); }\n+static inline bool InsecureRandBool() { return g_insecure_rand_ctx.randbool(); }\n \n static constexpr CAmount CENT{1000000};\n \n@@ -67,7 +67,7 @@ struct CConnmanTest {\n };\n \n class PeerLogicValidation;\n-struct TestingSetup: public BasicTestingSetup {\n+struct TestingSetup : public BasicTestingSetup {\n     boost::thread_group threadGroup;\n     CConnman* connman;\n     CScheduler scheduler;"
      }
    ]
  }
]