JosuGZ,2019-05-26 11:04:56,I whould say utACK b5476332cb5653552eefe25cc96131f04e2c8d8c,https://github.com/bitcoin/bitcoin/pull/16092#issuecomment-495989911,495989911,
DrahtBot,2019-05-26 12:03:45,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16194](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16194.html) (refactor: share blockmetadata with BlockMan",https://github.com/bitcoin/bitcoin/pull/16092#issuecomment-495994198,495994198,
Empact,2019-05-27 20:20:11,Concept ACK. Could be better to use an anon namespace where possible for these as that will make the variables static and enforce local-only access to the associated class as well.,https://github.com/bitcoin/bitcoin/pull/16092#issuecomment-496298759,496298759,
practicalswift,2019-06-03 11:31:55,"@Empact The end-result would be the same as using `static`, right?\n\n```\n$ cat exporting.cpp\nstatic int _static_int = 1;\nnamespace {\n  int _namespace_int = 1;\n  static int _namespace_static_int = 1;\n}\nint _int = 1;\n$ clang++ -c exporting.cpp\n$ nm exporting.o\n0000000000000000 D _int\n```\n\n\nI don't have any strong preference -- I just want to minimise the diffs and make",https://github.com/bitcoin/bitcoin/pull/16092#issuecomment-498220125,498220125,
Empact,2019-06-03 15:55:19,"Sure, fine as is.",https://github.com/bitcoin/bitcoin/pull/16092#issuecomment-498317059,498317059,
practicalswift,2019-06-06 05:53:05,Rebased!,https://github.com/bitcoin/bitcoin/pull/16092#issuecomment-499358451,499358451,
Empact,2019-06-10 14:06:33,ACK https://github.com/bitcoin/bitcoin/pull/16092/commits/0959d37e3e0f80010a78d175e3846dabf5d35919,https://github.com/bitcoin/bitcoin/pull/16092#issuecomment-500429280,500429280,
MarcoFalke,2019-06-10 19:57:20,ACK 0959d37e3e0f80010a78d175e3846dabf5d35919,https://github.com/bitcoin/bitcoin/pull/16092#issuecomment-500571097,500571097,
hebasto,2019-06-18 12:58:18,"ACK 0959d37e3e0f80010a78d175e3846dabf5d35919\nI have not tested the code, but I have reviewed it and it LGTM.\nRef: https://en.cppreference.com/w/cpp/language/storage_duration#Linkage",https://github.com/bitcoin/bitcoin/pull/16092#issuecomment-503122378,503122378,
promag,2019-06-18 13:16:39,ACK 0959d37.,https://github.com/bitcoin/bitcoin/pull/16092#issuecomment-503130707,503130707,
