[
  {
    "sha": "a2f6b2ff93d1930fd2f6bd60db97315782773bf1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMmY2YjJmZjkzZDE5MzBmZDJmNmJkNjBkYjk3MzE1NzgyNzczYmYx",
    "commit": {
      "author": {
        "name": "Emil Engler",
        "email": "me@emilengler.com",
        "date": "2019-06-30T02:18:38Z"
      },
      "committer": {
        "name": "Emil Engler",
        "email": "me@emilengler.com",
        "date": "2019-06-30T02:18:38Z"
      },
      "message": "Add feature to getblock by using the index",
      "tree": {
        "sha": "bde8c1bd1f430dfa28e72462422e9771caf20249",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bde8c1bd1f430dfa28e72462422e9771caf20249"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a2f6b2ff93d1930fd2f6bd60db97315782773bf1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE82XmVEpcmrEyk0LUL21BRcVfx8cFAl0YG/4ACgkQL21BRcVf\nx8esSA//cDvSZ7zOcICfhzBVYrOec9TayQYo7vuS9pxg57ENZEsoAh1d50LHWqwR\nUITzeIZOSZoPCRG7Tbu9gUEqGbhJQVAuffkz2qm0HZ5xEu+JezXCKtJ7wgteopcN\ngF2vQ68TDUEbHAKv+9T757S/f1F5A33XeWoU3/KT5F9hxylOAfevdDmsYfz9lSej\n/HYSPgVySLfm5xEpl7mcq5MnkZA0s+VWPji5/B+T57bceHgS6Nqdk+C/GpcXBZew\nIJ8N6Ud8QUBZnDHCaX5nbS3F3111OQXMkR6aG5wqPFnlQJkb7TRJ/PYL74KT1ape\ngtyhxAzorfaNjq28GEVRbrrmO5ImtAiMSzD1r+CLqIEV+kHyaU2B7rqu85ytX3Oq\n5l+KX9V2/E2MCsMEgwDiVdraOPXgFDSORxyMFADdZ7H5rtwjqAL+/7ZS6w5brWzI\nqJ1TP4LtpHlnDxu86lukrju/fr5YKUXQDBDzjzmvEm2iQ7UZ7N8oJ+Z/a8OZoxIf\nDYNvmbuhZkW8HXaPh3vgPDs30M6xZn4ECwehAELSJFj1ZIS0jnHrNXpWHS9zdeEI\nrSCuUHsXtta9TfD76QI10pk+dFGQP268wrwKWpWWRkOv7QzZ5rMxV4IIXO3uVwvF\nf1VtrHrn5PXCzf/4zOaqAkVCyCtnyVpPrw3fAJxH/AIug043yB4=\n=MVRT\n-----END PGP SIGNATURE-----",
        "payload": "tree bde8c1bd1f430dfa28e72462422e9771caf20249\nparent fd925e9b1cca6807b0b2bdbf77d64a25d95692b7\nauthor Emil Engler <me@emilengler.com> 1561861118 +0200\ncommitter Emil Engler <me@emilengler.com> 1561861118 +0200\n\nAdd feature to getblock by using the index\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2f6b2ff93d1930fd2f6bd60db97315782773bf1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a2f6b2ff93d1930fd2f6bd60db97315782773bf1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2f6b2ff93d1930fd2f6bd60db97315782773bf1/comments",
    "author": {
      "login": "emilengler",
      "id": 12272949,
      "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilengler",
      "html_url": "https://github.com/emilengler",
      "followers_url": "https://api.github.com/users/emilengler/followers",
      "following_url": "https://api.github.com/users/emilengler/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilengler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
      "organizations_url": "https://api.github.com/users/emilengler/orgs",
      "repos_url": "https://api.github.com/users/emilengler/repos",
      "events_url": "https://api.github.com/users/emilengler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilengler/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "emilengler",
      "id": 12272949,
      "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilengler",
      "html_url": "https://github.com/emilengler",
      "followers_url": "https://api.github.com/users/emilengler/followers",
      "following_url": "https://api.github.com/users/emilengler/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilengler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
      "organizations_url": "https://api.github.com/users/emilengler/orgs",
      "repos_url": "https://api.github.com/users/emilengler/repos",
      "events_url": "https://api.github.com/users/emilengler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilengler/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd925e9b1cca6807b0b2bdbf77d64a25d95692b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd925e9b1cca6807b0b2bdbf77d64a25d95692b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd925e9b1cca6807b0b2bdbf77d64a25d95692b7"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 13,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c7234a08c2f52abd0f1d2af9c9e7021741fa95ff",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a2f6b2ff93d1930fd2f6bd60db97315782773bf1/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a2f6b2ff93d1930fd2f6bd60db97315782773bf1/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=a2f6b2ff93d1930fd2f6bd60db97315782773bf1",
        "patch": "@@ -851,7 +851,7 @@ static UniValue getblock(const JSONRPCRequest& request)\n                 \"If verbosity is 1, returns an Object with information about block <hash>.\\n\"\n                 \"If verbosity is 2, returns an Object with information about block <hash> and information about each transaction. \\n\",\n                 {\n-                    {\"blockhash\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The block hash\"},\n+                    {\"blockhash\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The block hash or the block index\"},\n                     {\"verbosity\", RPCArg::Type::NUM, /* default */ \"1\", \"0 for hex-encoded data, 1 for a json object, and 2 for json object with transaction data\"},\n                 },\n                 {\n@@ -897,14 +897,25 @@ static UniValue getblock(const JSONRPCRequest& request)\n                 RPCExamples{\n                     HelpExampleCli(\"getblock\", \"\\\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\\\"\")\n             + HelpExampleRpc(\"getblock\", \"\\\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\\\"\")\n+            + HelpExampleRpc(\"getblock\", \"\\\"42\\\"\")\n                 },\n     };\n \n     if (request.fHelp || !help.IsValidNumArgs(request.params.size())) {\n         throw std::runtime_error(help.ToString());\n     }\n+    UniValue blockhash;\n+    // Check if the first parameter is an index or a hash or invalid\n+    if(request.params[0].get_str().length() < 64 && request.params[0].get_str().find_first_not_of(\"0123456789\") == std::string::npos) {\n+        int nHeight = atoi(request.params[0].get_str().c_str());\n+        CBlockIndex* pblockindex = ::ChainActive()[nHeight];\n+        blockhash = pblockindex->GetBlockHash().GetHex();\n+    }\n+    else {\n+        blockhash = request.params[0];\n+    }\n \n-    uint256 hash(ParseHashV(request.params[0], \"blockhash\"));\n+    uint256 hash(ParseHashV(blockhash, \"blockhash\"));\n \n     int verbosity = 1;\n     if (!request.params[1].isNull()) {"
      }
    ]
  }
]