[
  {
    "sha": "57d59188d554d7b9cd3ad50f5b073f46bb131ed2",
    "node_id": "C_kwDOABII59oAKDU3ZDU5MTg4ZDU1NGQ3YjljZDNhZDUwZjViMDczZjQ2YmIxMzFlZDI",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-10-05T09:39:41Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:42Z"
      },
      "message": "tests: Use test utils each time that it is possible\n\nAlso this commit introduce another utils function to tests assert_not_equal\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "da77bae324df71910e90d478e502171d63ce1d32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da77bae324df71910e90d478e502171d63ce1d32"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57d59188d554d7b9cd3ad50f5b073f46bb131ed2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6EAACgkQi23CuHC4\nDV90IhAA0I52usOcT4sDpxVIEl5pyq9Xmt/m3PnjPijsP0tHuX53HeN8bXAlQDKA\nnXklu/YhGmj9D1bAopU51TzsMHpHx4JVcZyoQqYu0ymybzi6fMPGsfcDAtH949CD\nmRXBGxr7Ac5XtZpAzoQIE+RX9Sr7LdQXjDXaR2+D381JodUY0i8qHyh8/WE3XSS4\ntM2R64r8oz8dFPRDeddmmJfG06Uf+T1KMpcXoHRC3BEAdVYNtw1fHh1PQoDtsoXw\nm14u9nKIr77yuK4Q8DPDKsmquJ7xyXiHYHxBxXhPFHI07Y1kY0hU5kFGU8gD+m0C\ns2aUQ+v4+sq6YldCzG9JH5lu+0d+IEE/RL0l5EuiluIeGca+hTgYv32TQO8dRJTD\nJPXPUO62msEmATLVrZc/l5kFf8GgPic5iC8s7BCK2wLWT5+Ks8QEG65kOS5YgVhP\nAapGVndq7at2v8TEiyn/ITN5+395SUB4vB79TVxzJICfqY0DOwW5uAGAWRZWnMGe\nEFVlSWHUhUwPJJFZRHmBLqvXa1JY1b7tmmUy+TiLK5euvVYy2T5t6+PIMAjVUxt9\nLumF2CZhC/i94HsiX4DEbx0gd9YCsSxzOg6DavZQ8UenZ+3Ct6oW5VR1m+N3pTC2\nlzL1uqqeFwz1qBxOhmfyv+6/d1HU8ZvAhmdg/JPE8lGe5YcoQfY=\n=TiPf\n-----END PGP SIGNATURE-----",
        "payload": "tree da77bae324df71910e90d478e502171d63ce1d32\nparent 111c3e06b35b7867f2e0f740e988f648ac6c325d\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1633426781 +0200\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000702 +0100\n\ntests: Use test utils each time that it is possible\n\nAlso this commit introduce another utils function to tests assert_not_equal\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57d59188d554d7b9cd3ad50f5b073f46bb131ed2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/57d59188d554d7b9cd3ad50f5b073f46bb131ed2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57d59188d554d7b9cd3ad50f5b073f46bb131ed2/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "111c3e06b35b7867f2e0f740e988f648ac6c325d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/111c3e06b35b7867f2e0f740e988f648ac6c325d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/111c3e06b35b7867f2e0f740e988f648ac6c325d"
      }
    ],
    "stats": {
      "total": 107,
      "additions": 62,
      "deletions": 45
    },
    "files": [
      {
        "sha": "27a91e0ce3a258b41c400c32ce42cacce502cc39",
        "filename": "test/functional/feature_backwards_compatibility.py",
        "status": "modified",
        "additions": 28,
        "deletions": 27,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57d59188d554d7b9cd3ad50f5b073f46bb131ed2/test/functional/feature_backwards_compatibility.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57d59188d554d7b9cd3ad50f5b073f46bb131ed2/test/functional/feature_backwards_compatibility.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_backwards_compatibility.py?ref=57d59188d554d7b9cd3ad50f5b073f46bb131ed2",
        "patch": "@@ -27,6 +27,7 @@\n \n from test_framework.util import (\n     assert_equal,\n+    assert_greater_than,\n     assert_raises_rpc_error,\n )\n \n@@ -85,7 +86,7 @@ def run_test(self):\n         wallet = node_master.get_wallet_rpc(\"w1\")\n         info = wallet.getwalletinfo()\n         assert info['private_keys_enabled']\n-        assert info['keypoolsize'] > 0\n+        assert_greater_than(info['keypoolsize'], 0)\n         # Create a confirmed transaction, receiving coins\n         address = wallet.getnewaddress()\n         self.nodes[0].sendtoaddress(address, 10)\n@@ -109,7 +110,7 @@ def run_test(self):\n         wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n         info = wallet.getwalletinfo()\n         assert info['private_keys_enabled']\n-        assert info['keypoolsize'] > 0\n+        assert_greater_than(info['keypoolsize'], 0)\n         # Use addmultisigaddress (see #18075)\n         address_18075 = wallet.rpc.addmultisigaddress(1, [\"0296b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52\", \"037211a824f55b505228e4c3d5194c1fcfaa15a456abdf37f9b9d97a4040afc073\"], \"\", \"legacy\")[\"address\"]\n         assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n@@ -119,52 +120,52 @@ def run_test(self):\n         wallet = node_v18.get_wallet_rpc(\"w1_v18\")\n         info = wallet.getwalletinfo()\n         assert info['private_keys_enabled']\n-        assert info['keypoolsize'] > 0\n+        assert_greater_than(info['keypoolsize'], 0)\n \n         # w2: wallet with private keys disabled, created on master: update this\n         #     test when default wallets private keys disabled can no longer be\n         #     opened by older versions.\n         node_master.createwallet(wallet_name=\"w2\", disable_private_keys=True)\n         wallet = node_master.get_wallet_rpc(\"w2\")\n         info = wallet.getwalletinfo()\n-        assert info['private_keys_enabled'] == False\n-        assert info['keypoolsize'] == 0\n+        assert_equal(info['private_keys_enabled'], False)\n+        assert_equal(info['keypoolsize'], 0)\n \n         # w2_v19: wallet with private keys disabled, created with v0.19\n         node_v19.rpc.createwallet(wallet_name=\"w2_v19\", disable_private_keys=True)\n         wallet = node_v19.get_wallet_rpc(\"w2_v19\")\n         info = wallet.getwalletinfo()\n-        assert info['private_keys_enabled'] == False\n-        assert info['keypoolsize'] == 0\n+        assert_equal(info['private_keys_enabled'], False)\n+        assert_equal(info['keypoolsize'], 0)\n \n         # w2_v18: wallet with private keys disabled, created with v0.18\n         node_v18.rpc.createwallet(wallet_name=\"w2_v18\", disable_private_keys=True)\n         wallet = node_v18.get_wallet_rpc(\"w2_v18\")\n         info = wallet.getwalletinfo()\n-        assert info['private_keys_enabled'] == False\n-        assert info['keypoolsize'] == 0\n+        assert_equal(info['private_keys_enabled'], False)\n+        assert_equal(info['keypoolsize'], 0)\n \n         # w3: blank wallet, created on master: update this\n         #     test when default blank wallets can no longer be opened by older versions.\n         node_master.createwallet(wallet_name=\"w3\", blank=True)\n         wallet = node_master.get_wallet_rpc(\"w3\")\n         info = wallet.getwalletinfo()\n         assert info['private_keys_enabled']\n-        assert info['keypoolsize'] == 0\n+        assert_equal(info['keypoolsize'], 0)\n \n         # w3_v19: blank wallet, created with v0.19\n         node_v19.rpc.createwallet(wallet_name=\"w3_v19\", blank=True)\n         wallet = node_v19.get_wallet_rpc(\"w3_v19\")\n         info = wallet.getwalletinfo()\n         assert info['private_keys_enabled']\n-        assert info['keypoolsize'] == 0\n+        assert_equal(info['keypoolsize'], 0)\n \n         # w3_v18: blank wallet, created with v0.18\n         node_v18.rpc.createwallet(wallet_name=\"w3_v18\", blank=True)\n         wallet = node_v18.get_wallet_rpc(\"w3_v18\")\n         info = wallet.getwalletinfo()\n         assert info['private_keys_enabled']\n-        assert info['keypoolsize'] == 0\n+        assert_equal(info['keypoolsize'], 0)\n \n         # Copy the wallets to older nodes:\n         node_master_wallets_dir = os.path.join(node_master.datadir, \"regtest/wallets\")\n@@ -219,7 +220,7 @@ def run_test(self):\n             wallet = node_v19.get_wallet_rpc(\"w1\")\n             info = wallet.getwalletinfo()\n             assert info['private_keys_enabled']\n-            assert info['keypoolsize'] > 0\n+            assert_greater_than(info['keypoolsize'], 0)\n             txs = wallet.listtransactions()\n             assert_equal(len(txs), 5)\n             assert_equal(txs[1][\"txid\"], tx1_id)\n@@ -236,21 +237,21 @@ def run_test(self):\n             node_v19.loadwallet(\"w2\")\n             wallet = node_v19.get_wallet_rpc(\"w2\")\n             info = wallet.getwalletinfo()\n-            assert info['private_keys_enabled'] == False\n-            assert info['keypoolsize'] == 0\n+            assert_equal(info['private_keys_enabled'], False)\n+            assert_equal(info['keypoolsize'], 0)\n \n             node_v19.loadwallet(\"w3\")\n             wallet = node_v19.get_wallet_rpc(\"w3\")\n             info = wallet.getwalletinfo()\n             assert info['private_keys_enabled']\n-            assert info['keypoolsize'] == 0\n+            assert_equal(info['keypoolsize'], 0)\n \n             # Open the wallets in v0.18\n             node_v18.loadwallet(\"w1\")\n             wallet = node_v18.get_wallet_rpc(\"w1\")\n             info = wallet.getwalletinfo()\n             assert info['private_keys_enabled']\n-            assert info['keypoolsize'] > 0\n+            assert_greater_than(info['keypoolsize'], 0)\n             txs = wallet.listtransactions()\n             assert_equal(len(txs), 5)\n             assert_equal(txs[1][\"txid\"], tx1_id)\n@@ -267,26 +268,26 @@ def run_test(self):\n             node_v18.loadwallet(\"w2\")\n             wallet = node_v18.get_wallet_rpc(\"w2\")\n             info = wallet.getwalletinfo()\n-            assert info['private_keys_enabled'] == False\n-            assert info['keypoolsize'] == 0\n+            assert_equal(info['private_keys_enabled'], False)\n+            assert_equal(info['keypoolsize'], 0)\n \n             node_v18.loadwallet(\"w3\")\n             wallet = node_v18.get_wallet_rpc(\"w3\")\n             info = wallet.getwalletinfo()\n             assert info['private_keys_enabled']\n-            assert info['keypoolsize'] == 0\n+            assert_equal(info['keypoolsize'], 0)\n \n             node_v17.loadwallet(\"w1\")\n             wallet = node_v17.get_wallet_rpc(\"w1\")\n             info = wallet.getwalletinfo()\n             assert info['private_keys_enabled']\n-            assert info['keypoolsize'] > 0\n+            assert_greater_than(info['keypoolsize'], 0)\n \n             node_v17.loadwallet(\"w2\")\n             wallet = node_v17.get_wallet_rpc(\"w2\")\n             info = wallet.getwalletinfo()\n-            assert info['private_keys_enabled'] == False\n-            assert info['keypoolsize'] == 0\n+            assert_equal(info['private_keys_enabled'], False)\n+            assert_equal(info['keypoolsize'], 0)\n         else:\n             # Descriptor wallets appear to be corrupted wallets to old software\n             assert_raises_rpc_error(-4, \"Wallet file verification failed: wallet.dat corrupt, salvage failed\", node_v19.loadwallet, \"w1\")\n@@ -301,13 +302,13 @@ def run_test(self):\n         wallet = node_v17.get_wallet_rpc(\"w1_v18\")\n         info = wallet.getwalletinfo()\n         assert info['private_keys_enabled']\n-        assert info['keypoolsize'] > 0\n+        assert_greater_than(info['keypoolsize'], 0)\n \n         node_v17.loadwallet(\"w2_v18\")\n         wallet = node_v17.get_wallet_rpc(\"w2_v18\")\n         info = wallet.getwalletinfo()\n-        assert info['private_keys_enabled'] == False\n-        assert info['keypoolsize'] == 0\n+        assert_equal(info['private_keys_enabled'], False)\n+        assert_equal(info['keypoolsize'], 0)\n \n         # RPC loadwallet failure causes bitcoind to exit, in addition to the RPC\n         # call failure, so the following test won't work:\n@@ -331,7 +332,7 @@ def run_test(self):\n             self.restart_node(5, extra_args=[\"-wallet=w2\"])\n             wallet = node_v16.get_wallet_rpc(\"w2\")\n             info = wallet.getwalletinfo()\n-            assert info['keypoolsize'] == 1\n+            assert_equal(info['keypoolsize'], 1)\n \n         # Create upgrade wallet in v0.16\n         self.restart_node(-1, extra_args=[\"-wallet=u1_v16\"])"
      },
      {
        "sha": "a59a081852376628e0e364d7585f60a2faacda3a",
        "filename": "test/functional/feature_bip68_sequence.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57d59188d554d7b9cd3ad50f5b073f46bb131ed2/test/functional/feature_bip68_sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57d59188d554d7b9cd3ad50f5b073f46bb131ed2/test/functional/feature_bip68_sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_bip68_sequence.py?ref=57d59188d554d7b9cd3ad50f5b073f46bb131ed2",
        "patch": "@@ -88,7 +88,7 @@ def test_disable_flag(self):\n         self.nodes[0].sendtoaddress(new_addr, 2) # send 2 BTC\n \n         utxos = self.nodes[0].listunspent(0, 0)\n-        assert len(utxos) > 0\n+        assert_greater_than(len(utxos), 0)\n \n         utxo = utxos[0]\n "
      },
      {
        "sha": "ffad5c8a555020d46729eeff3d9deda74432f031",
        "filename": "test/functional/feature_pruning.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57d59188d554d7b9cd3ad50f5b073f46bb131ed2/test/functional/feature_pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57d59188d554d7b9cd3ad50f5b073f46bb131ed2/test/functional/feature_pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_pruning.py?ref=57d59188d554d7b9cd3ad50f5b073f46bb131ed2",
        "patch": "@@ -202,7 +202,7 @@ def reorg_test(self):\n             self.nodes[1].invalidateblock(curhash)\n             curhash = self.nodes[1].getblockhash(self.forkheight - 1)\n \n-        assert self.nodes[1].getblockcount() == self.forkheight - 1\n+        assert_equal(self.nodes[1].getblockcount(), self.forkheight - 1)\n         self.log.info(f\"New best height: {self.nodes[1].getblockcount()}\")\n \n         # Disconnect node1 and generate the new chain"
      },
      {
        "sha": "38c1bb58cc98e1ca393272aff57d12d30df53aa3",
        "filename": "test/functional/feature_segwit.py",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57d59188d554d7b9cd3ad50f5b073f46bb131ed2/test/functional/feature_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57d59188d554d7b9cd3ad50f5b073f46bb131ed2/test/functional/feature_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_segwit.py?ref=57d59188d554d7b9cd3ad50f5b073f46bb131ed2",
        "patch": "@@ -44,6 +44,7 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n+    assert_not_equal,\n     assert_greater_than_or_equal,\n     assert_is_hex_string,\n     assert_raises_rpc_error,\n@@ -229,16 +230,16 @@ def run_test(self):\n         self.fail_accept(self.nodes[0], \"non-mandatory-script-verify-flag (Witness program was passed an empty witness)\", p2sh_ids[NODE_0][P2WSH][0], sign=False, redeem_script=witness_script(True, self.pubkey[0]))\n \n         self.log.info(\"Verify block and transaction serialization rpcs return differing serializations depending on rpc serialization flag\")\n-        assert self.nodes[2].getblock(blockhash, False) != self.nodes[0].getblock(blockhash, False)\n-        assert self.nodes[1].getblock(blockhash, False) == self.nodes[2].getblock(blockhash, False)\n+        assert_not_equal(self.nodes[2].getblock(blockhash, False), self.nodes[0].getblock(blockhash, False))\n+        assert_equal(self.nodes[1].getblock(blockhash, False), self.nodes[2].getblock(blockhash, False))\n \n         for tx_id in segwit_tx_list:\n             tx = tx_from_hex(self.nodes[2].gettransaction(tx_id)[\"hex\"])\n-            assert self.nodes[2].getrawtransaction(tx_id, False, blockhash) != self.nodes[0].getrawtransaction(tx_id, False, blockhash)\n-            assert self.nodes[1].getrawtransaction(tx_id, False, blockhash) == self.nodes[2].getrawtransaction(tx_id, False, blockhash)\n-            assert self.nodes[0].getrawtransaction(tx_id, False, blockhash) != self.nodes[2].gettransaction(tx_id)[\"hex\"]\n-            assert self.nodes[1].getrawtransaction(tx_id, False, blockhash) == self.nodes[2].gettransaction(tx_id)[\"hex\"]\n-            assert self.nodes[0].getrawtransaction(tx_id, False, blockhash) == tx.serialize_without_witness().hex()\n+            assert_not_equal(self.nodes[2].getrawtransaction(tx_id, False, blockhash), self.nodes[0].getrawtransaction(tx_id, False, blockhash))\n+            assert_equal(self.nodes[1].getrawtransaction(tx_id, False, blockhash), self.nodes[2].getrawtransaction(tx_id, False, blockhash))\n+            assert_not_equal(self.nodes[0].getrawtransaction(tx_id, False, blockhash), self.nodes[2].gettransaction(tx_id)[\"hex\"])\n+            assert_equal(self.nodes[1].getrawtransaction(tx_id, False, blockhash), self.nodes[2].gettransaction(tx_id)[\"hex\"])\n+            assert_equal(self.nodes[0].getrawtransaction(tx_id, False, blockhash), tx.serialize_without_witness().hex())\n \n         # Coinbase contains the witness commitment nonce, check that RPC shows us\n         coinbase_txid = self.nodes[2].getblock(blockhash)['tx'][0]"
      },
      {
        "sha": "c11eba4e8bf641c880935f4d5291047a0bda7d44",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 19,
        "deletions": 9,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57d59188d554d7b9cd3ad50f5b073f46bb131ed2/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57d59188d554d7b9cd3ad50f5b073f46bb131ed2/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=57d59188d554d7b9cd3ad50f5b073f46bb131ed2",
        "patch": "@@ -91,7 +91,12 @@\n     script_to_p2wsh_script,\n )\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_raises_rpc_error, assert_equal\n+from test_framework.util import (\n+    assert_raises_rpc_error,\n+    assert_equal,\n+    assert_greater_than,\n+    assert_greater_than_or_equal,\n+)\n from test_framework.key import generate_privkey, compute_xonly_pubkey, sign_schnorr, tweak_add_privkey, ECKey\n from test_framework.address import (\n     hash160,\n@@ -780,7 +785,7 @@ def spenders_taproot_active():\n             for witlen in [20, 31, 32, 33]:\n                 def mutate(spk):\n                     prog = spk[2:]\n-                    assert len(prog) == 32\n+                    assert_equal(len(prog), 32)\n                     if witlen < 32:\n                         prog = prog[0:witlen]\n                     elif witlen > 32:\n@@ -1284,8 +1289,10 @@ def block_submit(self, node, txs, msg, err_msg, cb_pubkey=None, fees=0, sigops_w\n         block.solve()\n         block_response = node.submitblock(block.serialize().hex())\n         if err_msg is not None:\n+            # Use assert instead of assert_equal, because it contains a custom message\n             assert block_response is not None and err_msg in block_response, \"Missing error message '%s' from block response '%s': %s\" % (err_msg, \"(None)\" if block_response is None else block_response, msg)\n         if accept:\n+            # Use assert instead of assert_equal, because it contains a custom message\n             assert node.getbestblockhash() == block.hash, \"Failed to accept: %s (response: %s)\" % (msg, block_response)\n             self.tip = block.sha256\n             self.lastblockhash = block.hash\n@@ -1388,7 +1395,7 @@ def test_spenders(self, node, spenders, input_counts):\n         self.log.info(\"- Running %i spending tests\" % done)\n         random.shuffle(normal_utxos)\n         random.shuffle(mismatching_utxos)\n-        assert done == len(normal_utxos) + len(mismatching_utxos)\n+        assert_equal(done, len(normal_utxos) + len(mismatching_utxos))\n \n         left = done\n         while left:\n@@ -1427,7 +1434,9 @@ def test_spenders(self, node, spenders, input_counts):\n             for i in range(len(input_utxos)):\n                 if input_utxos[i].spender.need_vin_vout_mismatch:\n                     first_mismatch_input = i\n-            assert first_mismatch_input is None or first_mismatch_input > 0\n+\n+            if first_mismatch_input is not None:\n+                assert_greater_than(first_mismatch_input, 0)\n \n             # Decide fee, and add CTxIns to tx.\n             amount = sum(utxo.output.nValue for utxo in input_utxos)\n@@ -1440,7 +1449,8 @@ def test_spenders(self, node, spenders, input_counts):\n \n             # Add 1 to 4 random outputs (but constrained by inputs that require mismatching outputs)\n             num_outputs = random.choice(range(1, 1 + min(4, 4 if first_mismatch_input is None else first_mismatch_input)))\n-            assert in_value >= 0 and fee - num_outputs * DUST_LIMIT >= MIN_FEE\n+            assert_greater_than_or_equal(in_value, 0)\n+            assert_greater_than_or_equal(fee - num_outputs * DUST_LIMIT, MIN_FEE)\n             for i in range(num_outputs):\n                 tx.vout.append(CTxOut())\n                 if in_value <= DUST_LIMIT:\n@@ -1453,7 +1463,7 @@ def test_spenders(self, node, spenders, input_counts):\n                 tx.vout[-1].scriptPubKey = random.choice(host_spks)\n                 sigops_weight += CScript(tx.vout[-1].scriptPubKey).GetSigOpCount(False) * WITNESS_SCALE_FACTOR\n             fee += in_value\n-            assert fee >= 0\n+            assert_greater_than_or_equal(fee, 0)\n \n             # Select coinbase pubkey\n             cb_pubkey = random.choice(host_pubkeys)\n@@ -1502,9 +1512,9 @@ def test_spenders(self, node, spenders, input_counts):\n             if (len(spenders) - left) // 200 > (len(spenders) - left - len(input_utxos)) // 200:\n                 self.log.info(\"  - %i tests done\" % (len(spenders) - left))\n \n-        assert left == 0\n-        assert len(normal_utxos) == 0\n-        assert len(mismatching_utxos) == 0\n+        assert_equal(left, 0)\n+        assert_equal(len(normal_utxos), 0)\n+        assert_equal(len(mismatching_utxos), 0)\n         self.log.info(\"  - Done\")\n \n     def gen_test_vectors(self):"
      },
      {
        "sha": "91f04afa155f67c74f9360c90967835abcdf2620",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57d59188d554d7b9cd3ad50f5b073f46bb131ed2/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57d59188d554d7b9cd3ad50f5b073f46bb131ed2/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=57d59188d554d7b9cd3ad50f5b073f46bb131ed2",
        "patch": "@@ -50,6 +50,11 @@ def assert_equal(thing1, thing2, *args):\n         raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n \n \n+def assert_not_equal(thing1, thing2, *args):\n+    if thing1 == thing2 or any(thing1 == arg for arg in args):\n+        raise AssertionError(\"%s\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+\n+\n def assert_greater_than(thing1, thing2):\n     if thing1 <= thing2:\n         raise AssertionError(\"%s <= %s\" % (str(thing1), str(thing2)))"
      }
    ]
  },
  {
    "sha": "06b5ab463635d8fa21ceefd9feb9c7c8ae818a63",
    "node_id": "C_kwDOABII59oAKDA2YjVhYjQ2MzYzNWQ4ZmEyMWNlZWZkOWZlYjljN2M4YWU4MThhNjM",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-10-05T09:57:15Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "feature_taproot: Introduce another assert called assert_true. \n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "4ceba7f699e1d4adba476bee970c5d1097a1faaa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ceba7f699e1d4adba476bee970c5d1097a1faaa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06b5ab463635d8fa21ceefd9feb9c7c8ae818a63",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6E4ACgkQi23CuHC4\nDV/nnBAAmlY2NZQGnjKp2TN6aDT6Nnqk+jSWbyXs1fpLfOwwDLUOdf4ySp0O6Oo3\nfu6Y70C7MIPvQ5nN7z2qL+OOc3pQ+8CJm+fDMQszLRkJkwPTQ7GynytBqNSS6p5x\nvYVY6S2pLH9mIKsxh8EJEeyY14SCsa1O02mpHavvo/8ZPL5/9nUkc/j8FVGq9Tvk\nRrboZkzUf2G6drcIYPZpCp1cNRXp4l/jXhl03xId+a4E7KoYTtWZ/Bx+lD/GhGtl\nCKK7DGEK+eLTKU0eluaWtj3BAfS4hpPfIKsiNLMu9cr0W8yEGzZNMxxAiOiXGu8a\npqKQOeCp4l6Z+1DZsocGI820JIes3HfJ9hbcJ0fq/Hq+oz9oT5lzYeGfOOuj7z2C\nu8y5OkCjY0+Ah9UtjCNBPB9Y/CSE3o+A2nNaYu7moprxOdKfpzlcjCNsh1Cyzvdz\nOOjcRKfZsxchpoRxGyBuKxpL06CQrA0vVwWrGERHbeW4hddTKZ+vjK7VaLQLvHhy\nk9yQc/zMMvQPdf6SaXoOeoC3h96cMtwcHfecWxQsdgIJJgXyP+SZS7mhVCReNW3L\nsul8oEDTIFoUwDYdloZd/cHxStmVoMILlGrYuLAxfvLYysbhT7UkWK+7Q0jYuXbW\nLKYwaZb8eAxdnv/H/iPQTTAE4JHNdaz0oNGGdUh8lgYaIznU+Zw=\n=qsJl\n-----END PGP SIGNATURE-----",
        "payload": "tree 4ceba7f699e1d4adba476bee970c5d1097a1faaa\nparent 57d59188d554d7b9cd3ad50f5b073f46bb131ed2\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1633427835 +0200\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nfeature_taproot: Introduce another assert called assert_true. \n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06b5ab463635d8fa21ceefd9feb9c7c8ae818a63",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06b5ab463635d8fa21ceefd9feb9c7c8ae818a63",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06b5ab463635d8fa21ceefd9feb9c7c8ae818a63/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "57d59188d554d7b9cd3ad50f5b073f46bb131ed2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57d59188d554d7b9cd3ad50f5b073f46bb131ed2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57d59188d554d7b9cd3ad50f5b073f46bb131ed2"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 12,
      "deletions": 6
    },
    "files": [
      {
        "sha": "1d5678293e43f5af1c5023905c544cc777bac952",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06b5ab463635d8fa21ceefd9feb9c7c8ae818a63/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06b5ab463635d8fa21ceefd9feb9c7c8ae818a63/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=06b5ab463635d8fa21ceefd9feb9c7c8ae818a63",
        "patch": "@@ -94,6 +94,7 @@\n from test_framework.util import (\n     assert_raises_rpc_error,\n     assert_equal,\n+    assert_true,\n     assert_greater_than,\n     assert_greater_than_or_equal,\n )\n@@ -507,11 +508,11 @@ def make_spender(comment, *, tap=None, witv0=False, script=None, pkh=None, p2sh=\n \n     # Compute scriptPubKey and set useful defaults based on the inputs.\n     if witv0:\n-        assert tap is None\n+        assert_equal(tap, None)\n         conf[\"mode\"] = \"witv0\"\n         if pkh is not None:\n             # P2WPKH\n-            assert script is None\n+            assert_equal(script, None)\n             pubkeyhash = hash160(pkh)\n             spk = key_to_p2wpkh_script(pkh)\n             conf[\"scriptcode\"] = keyhash_to_p2pkh_script(pubkeyhash)\n@@ -528,7 +529,7 @@ def make_spender(comment, *, tap=None, witv0=False, script=None, pkh=None, p2sh=\n         conf[\"mode\"] = \"legacy\"\n         if pkh is not None:\n             # P2PKH\n-            assert script is None\n+            assert_equal(script, None)\n             pubkeyhash = hash160(pkh)\n             spk = keyhash_to_p2pkh_script(pubkeyhash)\n             conf[\"scriptcode\"] = spk\n@@ -540,7 +541,7 @@ def make_spender(comment, *, tap=None, witv0=False, script=None, pkh=None, p2sh=\n         else:\n             assert False\n     else:\n-        assert script is None\n+        assert_equal(script, None)\n         conf[\"mode\"] = \"taproot\"\n         conf[\"tap\"] = tap\n         spk = tap.scriptPubKey\n@@ -559,7 +560,7 @@ def sat_fn(tx, idx, utxos, valid):\n         if valid:\n             return spend(tx, idx, utxos, **conf)\n         else:\n-            assert failure is not None\n+            assert_not_equal(failure, None)\n             return spend(tx, idx, utxos, **{**conf, **failure})\n \n     return Spender(script=spk, comment=comment, is_standard=standard, sat_function=sat_fn, err_msg=err_msg, sigops_weight=sigops_weight, no_fail=failure is None, need_vin_vout_mismatch=need_vin_vout_mismatch)\n@@ -590,7 +591,7 @@ def bitflipper(expr):\n     \"\"\"Return a callable that evaluates expr and returns it with a random bitflip.\"\"\"\n     def fn(ctx):\n         sub = deep_eval(ctx, expr)\n-        assert isinstance(sub, bytes)\n+        assert_true(isinstance(sub, bytes), message=\"It is not a bytes instance\")\n         return (int.from_bytes(sub, 'little') ^ (1 << random.randrange(len(sub) * 8))).to_bytes(len(sub), 'little')\n     return fn\n "
      },
      {
        "sha": "660800edfd24c3eb622205f80b2aeaed7ebd3dcb",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06b5ab463635d8fa21ceefd9feb9c7c8ae818a63/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06b5ab463635d8fa21ceefd9feb9c7c8ae818a63/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=06b5ab463635d8fa21ceefd9feb9c7c8ae818a63",
        "patch": "@@ -65,6 +65,11 @@ def assert_greater_than_or_equal(thing1, thing2):\n         raise AssertionError(\"%s < %s\" % (str(thing1), str(thing2)))\n \n \n+def assert_true(thing, message = None):\n+    if thing is not True:\n+        msg = \"%s it is not True\" if message is None else message\n+        raise AssertionError(msg)\n+\n def assert_raises(exc, fun, *args, **kwds):\n     assert_raises_message(exc, None, fun, *args, **kwds)\n "
      }
    ]
  },
  {
    "sha": "b58894033dab90b7f0dcea3e4f88effbc1fa6ebd",
    "node_id": "C_kwDOABII59oAKGI1ODg5NDAzM2RhYjkwYjdmMGRjZWEzZTRmODhlZmZiYzFmYTZlYmQ",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-10-05T10:09:21Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "interface_zmq.py: Remove assert in favor of test utils functions\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "f9d5cab9a945421c6088d2aad02950ec45df05d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f9d5cab9a945421c6088d2aad02950ec45df05d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b58894033dab90b7f0dcea3e4f88effbc1fa6ebd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6E8ACgkQi23CuHC4\nDV/ttQ/+Nh4s+8WmOdr7Q8ilhiYVC/OMenjvKQ0R+KYNpUi/VgSE7r7pcza1+jpb\nX0hYBxN4doLsCma7h1G/yERzCs5OMh9ujYnFhHQ4DbLb52GKXN1iO+Jkx/qSDmmG\n9IjuHYGLhdCCIoMSehPuQd4hsZL4z3VAEiG3INaMqa5dlJ1+yYvsHgPMMmKo47Wl\n5+hOFDH8SZYYYmKc6rUWKR3q83fxoTRNDOUA4mEDjCYxOjdNx4PG4EWSO7eIxkY2\n4ug8cJBGoKHd932QA+qncqeEwZGTGOtPDbfhIgKNU3/IvNELbOuxtWVUTK4SHAcV\ngy+Y4iyRQfmq17gBdkOpaLYV5axdBKEb5YQ6Rh076Pc+mh9iX4a39026ikrClG1F\nYb8b/Fh8KDcjskVM3BI1vSSjX2DyMYfSBubOvkVcYpHCruXdXnrni4XwLxKXzJaZ\n6X5ttddouE+ZcdlVb4tiMt6LhfNaQMX5PvLNRGQpCXPD+6ypR2u/XMNQ4oRglu6x\nvvUosQf3lDp3adneuU8W9TSTOMssdhJ64n6Qy3JgDk8As9K4mtpajVU/q6cSO+e5\ntyMiACtfYC50CKwlIRbwE12Yszt7vjdz26bH+VnHuPhAjzNFVTfkxW4+BEIlMc6L\njiA5iUvVE+PHKnJfcozTEzZxOEKlMBf6DdgBs+hxtMvLHkwe4m8=\n=hWbl\n-----END PGP SIGNATURE-----",
        "payload": "tree f9d5cab9a945421c6088d2aad02950ec45df05d4\nparent 06b5ab463635d8fa21ceefd9feb9c7c8ae818a63\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1633428561 +0200\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\ninterface_zmq.py: Remove assert in favor of test utils functions\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b58894033dab90b7f0dcea3e4f88effbc1fa6ebd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b58894033dab90b7f0dcea3e4f88effbc1fa6ebd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b58894033dab90b7f0dcea3e4f88effbc1fa6ebd/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "06b5ab463635d8fa21ceefd9feb9c7c8ae818a63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06b5ab463635d8fa21ceefd9feb9c7c8ae818a63",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06b5ab463635d8fa21ceefd9feb9c7c8ae818a63"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 12,
      "deletions": 11
    },
    "files": [
      {
        "sha": "0af997fcbd7c092387268dcb48476723f0cdbe7e",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 12,
        "deletions": 11,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b58894033dab90b7f0dcea3e4f88effbc1fa6ebd/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b58894033dab90b7f0dcea3e4f88effbc1fa6ebd/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=b58894033dab90b7f0dcea3e4f88effbc1fa6ebd",
        "patch": "@@ -21,6 +21,7 @@\n )\n from test_framework.util import (\n     assert_equal,\n+    assert_true,\n     assert_raises_rpc_error,\n )\n from test_framework.netutil import test_ipv6_local\n@@ -67,9 +68,9 @@ def receive_sequence(self):\n         label = chr(body[32])\n         mempool_sequence = None if len(body) != 32+1+8 else struct.unpack(\"<Q\", body[32+1:])[0]\n         if mempool_sequence is not None:\n-            assert label == \"A\" or label == \"R\"\n+            assert_true(label == \"A\" or label == \"R\", message=\"{} different from A or C\".format(label))\n         else:\n-            assert label == \"D\" or label == \"C\"\n+            assert_true(label == \"D\" or label == \"C\", message=\"{} different from D or C\".format(label)\n         return (hash, label, mempool_sequence)\n \n \n@@ -361,9 +362,9 @@ def test_sequence(self):\n             seq_num += 1\n \n             # Spot check getrawmempool results that they only show up when asked for\n-            assert type(self.nodes[0].getrawmempool()) is list\n-            assert type(self.nodes[0].getrawmempool(mempool_sequence=False)) is list\n-            assert \"mempool_sequence\" not in self.nodes[0].getrawmempool(verbose=True)\n+            assert_true(type(self.nodes[0].getrawmempool()) is list)\n+            assert_true(type(self.nodes[0].getrawmempool(mempool_sequence=False)) is list)\n+            assert_true(\"mempool_sequence\" not in self.nodes[0].getrawmempool(verbose=True))\n             assert_raises_rpc_error(-8, \"Verbose results cannot contain mempool sequence values.\", self.nodes[0].getrawmempool, True, True)\n             assert_equal(self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"], seq_num)\n \n@@ -380,7 +381,7 @@ def test_sequence(self):\n \n             # Make sure getrawmempool mempool_sequence results aren't \"queued\" but immediately reflective\n             # of the time they were gathered.\n-            assert self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"] > seq_num\n+            assert_assert_greater_than(self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"], seq_num)\n \n             assert_equal((best_hash, \"D\", None), seq.receive_sequence())\n             assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())\n@@ -466,8 +467,8 @@ def test_mempool_sync(self):\n         while zmq_mem_seq is None:\n             (hash_str, label, zmq_mem_seq) = seq.receive_sequence()\n \n-        assert label == \"A\" or label == \"R\"\n-        assert hash_str is not None\n+        assert_true(label == \"A\" or label == \"R\", message=\"{} is different from A or R\")\n+        assert_true(hash_str is not None)\n \n         # 2) We need to \"seed\" our view of the mempool\n         mempool_snapshot = self.nodes[0].getrawmempool(mempool_sequence=True)\n@@ -511,16 +512,16 @@ def test_mempool_sync(self):\n                     # Detected \"R\" gap, means this a conflict eviction, and mempool tx are being evicted before its\n                     # position in the incoming block message \"C\"\n                     if label == \"R\":\n-                        assert mempool_sequence > expected_sequence\n+                        assert_greater_than(mempool_sequence, expected_sequence)\n                         r_gap += mempool_sequence - expected_sequence\n                     else:\n                         raise Exception(f\"WARNING: txhash has unexpected mempool sequence value: {mempool_sequence} vs expected {expected_sequence}\")\n             if label == \"A\":\n-                assert hash_str not in mempool_view\n+                assert_true(hash_str not in mempool_view)\n                 mempool_view.add(hash_str)\n                 expected_sequence = mempool_sequence + 1\n             elif label == \"R\":\n-                assert hash_str in mempool_view\n+                assert_true(hash_str in mempool_view)\n                 mempool_view.remove(hash_str)\n                 expected_sequence = mempool_sequence + 1\n             elif label == \"C\":"
      }
    ]
  },
  {
    "sha": "0eeabddfda698cec8f840bc0f005b19df3afb238",
    "node_id": "C_kwDOABII59oAKDBlZWFiZGRmZGE2OThjZWM4Zjg0MGJjMGYwMDViMTlkZjNhZmIyMzg",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-10-05T10:36:33Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "feature_taproot: Fixed imports\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n\n# Title: \n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n\n# Title: \n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "7e9c2a3b983f18b22fa1e33bc0f217eb432150e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e9c2a3b983f18b22fa1e33bc0f217eb432150e6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0eeabddfda698cec8f840bc0f005b19df3afb238",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6FAACgkQi23CuHC4\nDV9ZOA//YY4RN9HsZn1Ls4hID2Ge1NbHYbTO75AMPkH5RVQ6A3XsM5SMJ7pmsptu\nDpBtXwJLJQ/WDEF9zfGbS8QyUC4naC9UDG0ZXpSk18n5gHLdYNHoXWaZ/EaLbeaw\nxHiFwo3izGXAig9JX35YRI92Ehcyf7X9cfYG/do/7+kkAQaDZrBCZ3pHwhS/dySL\n6PsmQwKiG/H/HE+S+iSTkGP+jnnTwLTzKiQlZIwxGLvbRLDI2uvmAAUsg8+RKVQR\nr7/KKQwNk90B2N0BRIqGlyvnEICSZfz5jkDAPtq6Io2sOgYkG9TrqpftLjQ36P6c\n3U2MVfPuetBIf3e47e9GrWGZVE9dEraWcbhO9cBhMOCiBxmwF5RMuMHB6nPIYw+P\nKkHHGjawbuNq00ri1gd4SjU2wHdnC0SvmwZpUwLmlhBScPgsa68zUBKDZaD7s68c\nwP5AHnthcAAMq7RyQz2KzC3UVc2rHPOV1PMorTkV+VLu21hBXh2gisTF8HPg2Znn\nLcPO8/tiIWzx6C8D+w61DD2AYNWQzPBpLokcQfdO04y3/od31cFaBDbqnczkfj//\nYfwh4iFKxs/nh2yqBJtWvZcg+5vzw6D3JCVVhgZC7Lf29oHhqh5YbXu1oPWK07jy\nrKU2xlXUeFvjtlZGmp8d7/gOL9pU234eu/9aEYE3TssPXDZEcE4=\n=2mdR\n-----END PGP SIGNATURE-----",
        "payload": "tree 7e9c2a3b983f18b22fa1e33bc0f217eb432150e6\nparent b58894033dab90b7f0dcea3e4f88effbc1fa6ebd\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1633430193 +0200\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nfeature_taproot: Fixed imports\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n\n# Title: \n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n\n# Title: \n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0eeabddfda698cec8f840bc0f005b19df3afb238",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0eeabddfda698cec8f840bc0f005b19df3afb238",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0eeabddfda698cec8f840bc0f005b19df3afb238/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b58894033dab90b7f0dcea3e4f88effbc1fa6ebd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b58894033dab90b7f0dcea3e4f88effbc1fa6ebd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b58894033dab90b7f0dcea3e4f88effbc1fa6ebd"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "4f09b06f20e394dd6ae769778ac41e92256bbee1",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eeabddfda698cec8f840bc0f005b19df3afb238/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eeabddfda698cec8f840bc0f005b19df3afb238/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=0eeabddfda698cec8f840bc0f005b19df3afb238",
        "patch": "@@ -94,6 +94,7 @@\n from test_framework.util import (\n     assert_raises_rpc_error,\n     assert_equal,\n+    assert_not_equal,\n     assert_true,\n     assert_greater_than,\n     assert_greater_than_or_equal,"
      },
      {
        "sha": "bd51bcfc4978e361451c6817615ec854e94cb420",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eeabddfda698cec8f840bc0f005b19df3afb238/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eeabddfda698cec8f840bc0f005b19df3afb238/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=0eeabddfda698cec8f840bc0f005b19df3afb238",
        "patch": "@@ -22,6 +22,7 @@\n from test_framework.util import (\n     assert_equal,\n     assert_true,\n+    assert_greater_than,\n     assert_raises_rpc_error,\n )\n from test_framework.netutil import test_ipv6_local\n@@ -70,7 +71,7 @@ def receive_sequence(self):\n         if mempool_sequence is not None:\n             assert_true(label == \"A\" or label == \"R\", message=\"{} different from A or C\".format(label))\n         else:\n-            assert_true(label == \"D\" or label == \"C\", message=\"{} different from D or C\".format(label)\n+            assert_true(label == \"D\" or label == \"C\", message=\"{} different from D or C\".format(label))\n         return (hash, label, mempool_sequence)\n \n \n@@ -381,7 +382,7 @@ def test_sequence(self):\n \n             # Make sure getrawmempool mempool_sequence results aren't \"queued\" but immediately reflective\n             # of the time they were gathered.\n-            assert_assert_greater_than(self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"], seq_num)\n+            assert_greater_than(self.nodes[0].getrawmempool(mempool_sequence=True)[\"mempool_sequence\"], seq_num)\n \n             assert_equal((best_hash, \"D\", None), seq.receive_sequence())\n             assert_equal((rbf_info[\"txid\"], \"A\", seq_num), seq.receive_sequence())"
      }
    ]
  },
  {
    "sha": "5598cf5d598167731c20e8cd2aaea7bf88763eb8",
    "node_id": "C_kwDOABII59oAKDU1OThjZjVkNTk4MTY3NzMxYzIwZThjZDJhYWVhN2JmODg3NjNlYjg",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-10-10T13:53:12Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "freature_fee_estimation.py: Replace assert with assert_equal.\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "dbde8bf9d5d49b1600ec987867ccb6b15c09bee4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dbde8bf9d5d49b1600ec987867ccb6b15c09bee4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5598cf5d598167731c20e8cd2aaea7bf88763eb8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6FEACgkQi23CuHC4\nDV9new/+Mq77KUjZuW/tN1yNzlgpg1x4V+JzXQRpcanaV80mgcfo4qpj69pHWmWO\nJ6+Pm5e5Soo3/IG69Vt18U8BFOr1ijNXwbfhZnEqi/GkCXavbeRyD4pNlJOUGvKW\nPbV1djGVwGjdXbwnM1q7PNmTfB6Qy0OP6mziRBh4vKAcuKUInN6vOutjYcf2OE4f\no28c+ZFxfGdU09Z23StPNeuhPluBPFAkIJ6QoMrLkcb6yOK81S2YHTxDtIZQ2Wez\nwX9ZkqKE3jYXhxDHlotXBEoZUX1ubI2KjAAtIhr1JmsnWZRSLBJRe9Ok+TUmt/Do\nfKzS7NiVPHRr2u2wk+H3fNsds6tPkaKUUbAFH3cPO/kr7sveJZxuhm2Y4aoy6Bdy\nlVf3WeNILo4kgEDICjFG9iSNbUrO1h+39s6UsMA4KUfMskdwyXQleo928ff+QK60\nCZUzU8WkOTSiTOkpm/clrjfHqQnO0qkqUDK491A9edVwl+RxrwZxOLeUkclZoByX\nfMoEDdfuZJJxlx/GhfDnZc17IsGfDwNnHoq+/bbRgY1TcAHhltt2/AnNeRzSdljx\nKQlrdiNTZ1eEKtpTe6WFAFEKOGm/0zXZKsaMyqlmcBNLVAptJpTkl7rRK550S2HB\n408mtAwNw87zWtyIEC4ydT6USHh/cOJteyZMh1ucejzjw50UY7w=\n=kTIZ\n-----END PGP SIGNATURE-----",
        "payload": "tree dbde8bf9d5d49b1600ec987867ccb6b15c09bee4\nparent 0eeabddfda698cec8f840bc0f005b19df3afb238\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1633873992 +0200\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nfreature_fee_estimation.py: Replace assert with assert_equal.\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5598cf5d598167731c20e8cd2aaea7bf88763eb8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5598cf5d598167731c20e8cd2aaea7bf88763eb8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5598cf5d598167731c20e8cd2aaea7bf88763eb8/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0eeabddfda698cec8f840bc0f005b19df3afb238",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0eeabddfda698cec8f840bc0f005b19df3afb238",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0eeabddfda698cec8f840bc0f005b19df3afb238"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "faf99a9f72ac374cda1561d90a030f107b6f029d",
        "filename": "test/functional/feature_fee_estimation.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5598cf5d598167731c20e8cd2aaea7bf88763eb8/test/functional/feature_fee_estimation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5598cf5d598167731c20e8cd2aaea7bf88763eb8/test/functional/feature_fee_estimation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_fee_estimation.py?ref=5598cf5d598167731c20e8cd2aaea7bf88763eb8",
        "patch": "@@ -335,7 +335,7 @@ def sanity_check_rbf_estimates(self, utxos):\n         # the rest needed to be RBF'd. We must return the 90% conf rate feerate.\n         high_feerate_kvb = Decimal(high_feerate) / COIN * 10**3\n         est_feerate = node.estimatesmartfee(2)[\"feerate\"]\n-        assert est_feerate == high_feerate_kvb\n+        assert_equal(est_feerate, high_feerate_kvb)\n \n     def run_test(self):\n         self.log.info(\"This test is time consuming, please be patient\")"
      }
    ]
  },
  {
    "sha": "592a4e4d0e39addfc67cfdba2bb7018d11f7987c",
    "node_id": "C_kwDOABII59oAKDU5MmE0ZTRkMGUzOWFkZGZjNjdjZmRiYTJiYjcwMThkMTFmNzk4N2M",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-10-10T13:54:30Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "mining_getblocktemplate_longpoll.py: Replace assert with assert_equal\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "e55848ee9da5fa80dff0da846997d80ef1bd0c74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e55848ee9da5fa80dff0da846997d80ef1bd0c74"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/592a4e4d0e39addfc67cfdba2bb7018d11f7987c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6FIACgkQi23CuHC4\nDV883A/9FvUnEYJtmEZGtzwmzqNiqcmLjhtvlMwO1oLCd7vZM61wq3tpkbSdmjLo\nAbfibUtb+vxaTHykZwy+tYIDFT3r1fuvg8DlAd1RQInb6l8pxzcWOwYDXIkbcYoK\nZU54uaB2eFRrDIiCsUfRCEYlBql7HB2/ZhcqBv8RmJ0QWMAG60qK3cn6+9Gpm34M\nigdbD3E41g7bxdq0TgZTCCCyBImaRmyGJtd0DmT2xIW+zKaHnh6DLB+ylN01TfTJ\n0ujGvLPKmirZGVeYfweqGjxPZqzbKTAY9vuAGbxFuP8avlYyVWuLx+rRXqd9rEjw\n7Bp1QRs1lugkaanJ/h1bkUTcUraoRd9nBueT3FTgAu5017lmL+QBgHZj8B5EL2ya\n2WnAC5rXvrvVhTwK6NAX8GUrtKR7FPdS8kENCZZJrMGm9qTzofnmA71pR64MiznW\n4JP3zmITLryfeW/ExDMafu/V3pD0euz/3xqXce1quLzp0Qy64XuRa9wrDYLN1F+w\nS/ylqvSKNMAGV0HL48Zv1sj2adebaU9QgBAJPRDmBB9gz4slaQF4VZsCFMsAOzX9\nuNLcz+hTqTULPrtu/gN0+AqIw/Nyq+ltq/Fs/L0vrtGp58o38avOjUi48fV/Fc13\nACwXheMpXBxtOKvCt6rK7c28df7bml7zj89Vv6+jRGx6ANBnW+k=\n=3YLJ\n-----END PGP SIGNATURE-----",
        "payload": "tree e55848ee9da5fa80dff0da846997d80ef1bd0c74\nparent 5598cf5d598167731c20e8cd2aaea7bf88763eb8\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1633874070 +0200\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nmining_getblocktemplate_longpoll.py: Replace assert with assert_equal\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/592a4e4d0e39addfc67cfdba2bb7018d11f7987c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/592a4e4d0e39addfc67cfdba2bb7018d11f7987c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/592a4e4d0e39addfc67cfdba2bb7018d11f7987c/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5598cf5d598167731c20e8cd2aaea7bf88763eb8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5598cf5d598167731c20e8cd2aaea7bf88763eb8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5598cf5d598167731c20e8cd2aaea7bf88763eb8"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7b1e8147fd4c201b34259575f3fc1458d8f6e6ed",
        "filename": "test/functional/mining_getblocktemplate_longpoll.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/592a4e4d0e39addfc67cfdba2bb7018d11f7987c/test/functional/mining_getblocktemplate_longpoll.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/592a4e4d0e39addfc67cfdba2bb7018d11f7987c/test/functional/mining_getblocktemplate_longpoll.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mining_getblocktemplate_longpoll.py?ref=592a4e4d0e39addfc67cfdba2bb7018d11f7987c",
        "patch": "@@ -10,7 +10,7 @@\n \n from test_framework.blocktools import COINBASE_MATURITY\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import get_rpc_proxy\n+from test_framework.util import get_rpc_proxy, assert_true\n from test_framework.wallet import MiniWallet\n \n \n@@ -39,7 +39,7 @@ def run_test(self):\n         template = self.nodes[0].getblocktemplate({'rules': ['segwit']})\n         longpollid = template['longpollid']\n         template2 = self.nodes[0].getblocktemplate({'rules': ['segwit']})\n-        assert template2['longpollid'] == longpollid\n+        assert_equal(template2['longpollid'], longpollid)\n \n         self.log.info(\"Test that longpoll waits if we do nothing\")\n         thr = LongpollThread(self.nodes[0])"
      }
    ]
  },
  {
    "sha": "45158fb3a6fb75d294e1567b206a3a96c86f1d95",
    "node_id": "C_kwDOABII59oAKDQ1MTU4ZmIzYTZmYjc1ZDI5NGUxNTY3YjIwNmEzYTk2Yzg2ZjFkOTU",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-10-10T13:58:12Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "p2p_addrfetch.py: Replace assert with assert_equal\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "8984e11d24db71306bc1ec5996dfcb5afb1bdcb7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8984e11d24db71306bc1ec5996dfcb5afb1bdcb7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/45158fb3a6fb75d294e1567b206a3a96c86f1d95",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6FMACgkQi23CuHC4\nDV+9Bg//QNCdE4BnjYJjkE9p6f68V6jyxfc8VqMnT+r7yMh2a60ItRWnzMenKmlx\nkfZTwTA9hhSHGPlDSFL7yXewelpuwgD5mzn+TQojZXFJVbaheuMBz8Hmgbq/Qutc\niVJd0QouZquRKvRggOw+pqa/9Xf1bsUbiTz7HCbvgrSfo5cI5cYCO39dkHk0mRbW\nWOM7CWdJR979Y5+aKK3rX1kCHpgWRTpT4Fx8hH4vL+3Hjw1kSPD0+0P/PLUxokpi\ntrJT4XB5TeqdN5oxPQ8I0SYa6Z0Yq/zDdqbUWwd7gn7z6ghX2mP6qnNfdM/toFDA\nd+A0V4TkCSgInYrezic5L5KjY84Q7SNzfvIhrwh4tk9vhmk/J7gzn28t0ca7NLv4\nZhp+pxKG88/ixoN1mFT3ib8CG6D7ckKIkF55dlz2HiSpNeeiotsW/INNw3L7w3ai\nJny3CbTvG3UHUQlD1BaIF+CRAZeFva3uRv9jR0kxm4DpUMfAJ4kDgGakXcvlxgCr\nX62BP4t/3aVmaQlIR0MKXn15++t3W9P85iJmTc1oK0lgGGRV/nh/771lLCgsr7Qr\nMFo0aQKnhzKPn7hms2A58Egb1nZ9RrysLyaLXWPBI9IJHpLn4wXprAxTxlbCvwKB\nk6nOERW30ybDKSB7K0FuqEtg07kbz5/w6hIxyb23GNcfPYIhbls=\n=5FEI\n-----END PGP SIGNATURE-----",
        "payload": "tree 8984e11d24db71306bc1ec5996dfcb5afb1bdcb7\nparent 592a4e4d0e39addfc67cfdba2bb7018d11f7987c\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1633874292 +0200\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\np2p_addrfetch.py: Replace assert with assert_equal\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45158fb3a6fb75d294e1567b206a3a96c86f1d95",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/45158fb3a6fb75d294e1567b206a3a96c86f1d95",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45158fb3a6fb75d294e1567b206a3a96c86f1d95/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "592a4e4d0e39addfc67cfdba2bb7018d11f7987c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/592a4e4d0e39addfc67cfdba2bb7018d11f7987c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/592a4e4d0e39addfc67cfdba2bb7018d11f7987c"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8a0f1c8b796df324018dbc2a4bc0306338e35576",
        "filename": "test/functional/p2p_addrfetch.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45158fb3a6fb75d294e1567b206a3a96c86f1d95/test/functional/p2p_addrfetch.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45158fb3a6fb75d294e1567b206a3a96c86f1d95/test/functional/p2p_addrfetch.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addrfetch.py?ref=45158fb3a6fb75d294e1567b206a3a96c86f1d95",
        "patch": "@@ -50,8 +50,8 @@ def run_test(self):\n         self.log.info(\"Check that we send getaddr but don't try to sync headers with the addr-fetch peer\")\n         peer.sync_send_with_ping()\n         with p2p_lock:\n-            assert peer.message_count['getaddr'] == 1\n-            assert peer.message_count['getheaders'] == 0\n+            assert_equal(peer.message_count['getaddr'], 1)\n+            assert_equal(peer.message_count['getheaders'], 0)\n \n         self.log.info(\"Check that answering the getaddr with a single address does not lead to disconnect\")\n         # This prevents disconnecting on self-announcements"
      }
    ]
  },
  {
    "sha": "1d3f27a9a8e57e36eb120f424a01240e6e90bc74",
    "node_id": "C_kwDOABII59oAKDFkM2YyN2E5YThlNTdlMzZlYjEyMGY0MjRhMDEyNDBlNmU5MGJjNzQ",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-10-10T14:10:16Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "p2p_blockfilters.py: Replace assert with test utils function\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "4667f152385f68955eaad18445d415a3f5d4b179",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4667f152385f68955eaad18445d415a3f5d4b179"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d3f27a9a8e57e36eb120f424a01240e6e90bc74",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6FQACgkQi23CuHC4\nDV/ZGQ/+ObO/95LFeKcEUzHCgKg1StsPKAVaI1mI76lTa4zzHtEplqGEPLXo37qE\n6X8x3ObZRoGn/9Mw7GoneajFVbuPN8GjSjnaeyMZciL/nYdRg/Ohr2WLGRV2tMZj\nylwmDBQZ2n98EU/m/LocuT7N8+sTM/Anpomqn2SzeFp7wCo9UsTyk0f+YWUtUcfq\ntqDVEIUO6jeMQ/5R0zD1ch3DY0An0hN43srUepl1FJmS5SQ47JVfuibcgc7ZDs2n\nnNNB1zmAZ5vYeme44JDHnhj4o7npREUd+udKcRsSAd5Q7T9U6sLKVuYMjy9aA5kj\nhr2nYSkk5uCWUpRvNqVt44TRGpm9fUfsQJBz/XB4wd0/JACLCb+LWLFUUxXSCoG6\ntTjgzOA6JWRkyZDEhkCYzGdZOnRNwJyKhNrOMxA/4uRxl0PpvBheKx68T6FBfanK\n9TORkspWqRhUnMs27apoxqMPKAtqSDdSu6vPRT1hJ02TqLs13qkmU8f4jHdcOeSy\nTDH1DnASzmvZXi5c1HJPTREAEmC1woK2Lw46Ie6jJloZkkl87U+OHtGS4Dj3pehi\npkvX1F4sTAnTZ0loHaTa1A0Jpo26h44TLON0d70+arltYv3DTMhmhGJpD9o+KSkn\nQcil0rmLZZuaaP4CJH3ytKX4VG+jjQFLvtHD6NBVn2qW8dXZHBM=\n=+r6U\n-----END PGP SIGNATURE-----",
        "payload": "tree 4667f152385f68955eaad18445d415a3f5d4b179\nparent 45158fb3a6fb75d294e1567b206a3a96c86f1d95\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1633875016 +0200\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\np2p_blockfilters.py: Replace assert with test utils function\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d3f27a9a8e57e36eb120f424a01240e6e90bc74",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d3f27a9a8e57e36eb120f424a01240e6e90bc74",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d3f27a9a8e57e36eb120f424a01240e6e90bc74/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "45158fb3a6fb75d294e1567b206a3a96c86f1d95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45158fb3a6fb75d294e1567b206a3a96c86f1d95",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/45158fb3a6fb75d294e1567b206a3a96c86f1d95"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 6,
      "deletions": 5
    },
    "files": [
      {
        "sha": "2c3daee752129cea9ec8e10fe2a7d9ca9caea2c1",
        "filename": "test/functional/mining_getblocktemplate_longpoll.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d3f27a9a8e57e36eb120f424a01240e6e90bc74/test/functional/mining_getblocktemplate_longpoll.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d3f27a9a8e57e36eb120f424a01240e6e90bc74/test/functional/mining_getblocktemplate_longpoll.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mining_getblocktemplate_longpoll.py?ref=1d3f27a9a8e57e36eb120f424a01240e6e90bc74",
        "patch": "@@ -10,7 +10,7 @@\n \n from test_framework.blocktools import COINBASE_MATURITY\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import get_rpc_proxy, assert_true\n+from test_framework.util import get_rpc_proxy, assert_equal\n from test_framework.wallet import MiniWallet\n \n "
      },
      {
        "sha": "a229b646c2aa63ab14e56c6c230ac3cecb1a502d",
        "filename": "test/functional/p2p_blockfilters.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d3f27a9a8e57e36eb120f424a01240e6e90bc74/test/functional/p2p_blockfilters.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d3f27a9a8e57e36eb120f424a01240e6e90bc74/test/functional/p2p_blockfilters.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_blockfilters.py?ref=1d3f27a9a8e57e36eb120f424a01240e6e90bc74",
        "patch": "@@ -22,6 +22,7 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n+    assert_not_equal,\n )\n \n class FiltersClient(P2PInterface):\n@@ -69,12 +70,12 @@ def run_test(self):\n         assert_equal(self.nodes[1].getblockcount(), 2000)\n \n         # Check that nodes have signalled NODE_COMPACT_FILTERS correctly.\n-        assert peer_0.nServices & NODE_COMPACT_FILTERS != 0\n-        assert peer_1.nServices & NODE_COMPACT_FILTERS == 0\n+        assert_not_equal(peer_0.nServices & NODE_COMPACT_FILTERS, 0)\n+        assert_equal(peer_1.nServices & NODE_COMPACT_FILTERS, 0)\n \n         # Check that the localservices is as expected.\n-        assert int(self.nodes[0].getnetworkinfo()['localservices'], 16) & NODE_COMPACT_FILTERS != 0\n-        assert int(self.nodes[1].getnetworkinfo()['localservices'], 16) & NODE_COMPACT_FILTERS == 0\n+        assert_not_equal(int(self.nodes[0].getnetworkinfo()['localservices'], 16) & NODE_COMPACT_FILTERS, 0)\n+        assert_equal(int(self.nodes[1].getnetworkinfo()['localservices'], 16) & NODE_COMPACT_FILTERS, 0)\n \n         self.log.info(\"get cfcheckpt on chain to be re-orged out.\")\n         request = msg_getcfcheckpt("
      }
    ]
  },
  {
    "sha": "d8a35ac4f44098f5123133b6f1c0761a00203a43",
    "node_id": "C_kwDOABII59oAKGQ4YTM1YWM0ZjQ0MDk4ZjUxMjMxMzNiNmYxYzA3NjFhMDAyMDNhNDM",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-02T05:56:48Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "test framework: Adding possibility to specify messages in the assert functions\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "0c882d3df0b5adee3e709d6bd733930c7972dc58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c882d3df0b5adee3e709d6bd733930c7972dc58"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d8a35ac4f44098f5123133b6f1c0761a00203a43",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6FYACgkQi23CuHC4\nDV8jog//X9KN3UmF3eV67lVMTWuF3UTp8Y3bedjvLEgbgce5YYN28QUHlrOPLbTY\nE6I1raSYegzK7T2CZGj1ew+3RMcGYYSpqUZS/k9TfHAODTSeuQaS2+sr8GsneQJq\nxGql0MweUOzFU4XNwdzqxC6q9MNKngS8QGJm74NXQsxk9zv9ontNwksza6xN/XLL\n2TFUapbTzL8DeN5mz+qeaZePGYj7MKZKCcDFYMc06QyqZH4dkXweXv7wK15SxsPa\nPNowufu1pzGTBz0U6ajDiYqbu+WahREBMIvVP8kIwa1t/1zaiA5iUYZMxZT1O7eI\nCXcQzb9Lg/VWxokUIn+1EUrebnry764nbGow5cncqEFvo19UbWZ9cILWJ6NgS2q3\nNM1VIuzLDkFv0tnwgEAekFseNJU/PBOKYfyru3pJBYOxkJZ2yN9BhWZybY7bZiIv\n0U9RYaBIQxpfpi5BHAbA6SW8X1cOLAokuszU1y/LF5D+HpZUDt93QtB02dwoRb1d\nIg9j/KDjhWt132unB1JljnHLUPaA+nMa+tB+0ryKUyryiEto0K1A3XBCQ9YtYoKc\ns+5RZDxrFgEx0CFD7aOtNjx9TiGn4Q4RuMc0BpuvprZ9h/cfLmLjmKjlawbjhwgy\n1rUZIm5Vjw26rFcRDQ3ARrt6VUWElJyBoi8/UQn7uA7Fr+vSDOQ=\n=xaZ1\n-----END PGP SIGNATURE-----",
        "payload": "tree 0c882d3df0b5adee3e709d6bd733930c7972dc58\nparent 1d3f27a9a8e57e36eb120f424a01240e6e90bc74\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1635832608 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\ntest framework: Adding possibility to specify messages in the assert functions\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8a35ac4f44098f5123133b6f1c0761a00203a43",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d8a35ac4f44098f5123133b6f1c0761a00203a43",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8a35ac4f44098f5123133b6f1c0761a00203a43/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d3f27a9a8e57e36eb120f424a01240e6e90bc74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d3f27a9a8e57e36eb120f424a01240e6e90bc74",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d3f27a9a8e57e36eb120f424a01240e6e90bc74"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 20,
      "deletions": 8
    },
    "files": [
      {
        "sha": "b17a56df3788a290390572e3ed54fec5fcb0c81e",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 20,
        "deletions": 8,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8a35ac4f44098f5123133b6f1c0761a00203a43/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8a35ac4f44098f5123133b6f1c0761a00203a43/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=d8a35ac4f44098f5123133b6f1c0761a00203a43",
        "patch": "@@ -45,24 +45,36 @@ def assert_fee_amount(fee, tx_size, feerate_BTC_kvB):\n         raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n \n \n-def assert_equal(thing1, thing2, *args):\n+def assert_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n-        raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        msg = \"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n \n-def assert_not_equal(thing1, thing2, *args):\n+def assert_not_equal(thing1, thing2, *args, err_msg=None):\n     if thing1 == thing2 or any(thing1 == arg for arg in args):\n-        raise AssertionError(\"%s\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n+        msg = \"%s\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args)\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n \n-def assert_greater_than(thing1, thing2):\n+def assert_greater_than(thing1, thing2, err_msg=None):\n     if thing1 <= thing2:\n-        raise AssertionError(\"%s <= %s\" % (str(thing1), str(thing2)))\n+        msg = \"%s <= %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n \n-def assert_greater_than_or_equal(thing1, thing2):\n+def assert_greater_than_or_equal(thing1, thing2, err_msg=None):\n     if thing1 < thing2:\n-        raise AssertionError(\"%s < %s\" % (str(thing1), str(thing2)))\n+        msg = \"%s < %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n \n \n def assert_true(thing, message = None):"
      }
    ]
  },
  {
    "sha": "3c7db539844ab0232643e2d91e905c06b1133ad8",
    "node_id": "C_kwDOABII59oAKDNjN2RiNTM5ODQ0YWIwMjMyNjQzZTJkOTFlOTA1YzA2YjExMzNhZDg",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-02T07:01:01Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "feature_taproot.py: Use the err_msg introduced in the assert framework.\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "4e025b4bae7e2d37fa74afbbc7be73231a9989d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e025b4bae7e2d37fa74afbbc7be73231a9989d5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c7db539844ab0232643e2d91e905c06b1133ad8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6FcACgkQi23CuHC4\nDV+/2A/5AYg7rFhghdeNQi2+Uk4KTDWbxcXSAbtE4lXOknebiYe7L92yexHHBe7x\nrB3OFYN18jdr9+FFhKnEegXVAIzChanoX1owBfGFlfrO6fKKxINUc4AEOf5O+gZT\nMdA84Gf0cE2x+1KWCoeBBwNWRVQvvFqAmWt0MveL2ih5GItxiNXyBUqMNJJ0tXQm\nQLqm7B7yI7C91XLupFHtoYPihfi4mbRFvz8n14BA6BJnGrY0hlsPmFsux6peoRKb\nTdeYzKXC7pWRAlR41D6eB2zzAaaOzBjH2w06AwNSaQ6330Gqcq7NeJabd7IIcuGc\nNblaWf9jbQ0A94flHxtibu2iZJEbapu/WeKLUMC7n/dBQLUJL1lfo+6aAIPwXzk5\nO1xTtnY0c8pnRIapVfACQRNjzgnXlqGJUExcwa+kSc0r7hzn/LpJYdCJWYOeQC3b\nPUyvymYmbeMGG5hd+RPzJ1KZu95MhDBZVIoys+we+Z8s4Ff2IPeNmtFWKYzG73ae\nF9zAfOkY9LWDfFXgSM1fEJHj0923bUdwGV/RVsAgqZPcV65RlWbmMFxQHrr3arFq\ngOs3gU1RKn5XiugnUTiiOD4OYAg6VZYyBoNJPxSV4KcC83ULGvCkG/tP+vn1m3pX\nq9Gc47+yDdhHEQnqCc1l7vPPcuOl32iYpaVWp+Kk9BUAI4YiVcU=\n=upkD\n-----END PGP SIGNATURE-----",
        "payload": "tree 4e025b4bae7e2d37fa74afbbc7be73231a9989d5\nparent d8a35ac4f44098f5123133b6f1c0761a00203a43\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1635836461 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nfeature_taproot.py: Use the err_msg introduced in the assert framework.\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c7db539844ab0232643e2d91e905c06b1133ad8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3c7db539844ab0232643e2d91e905c06b1133ad8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c7db539844ab0232643e2d91e905c06b1133ad8/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d8a35ac4f44098f5123133b6f1c0761a00203a43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8a35ac4f44098f5123133b6f1c0761a00203a43",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d8a35ac4f44098f5123133b6f1c0761a00203a43"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "111a59e2b9a9aa69a4598d858a5e5816679d65fa",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c7db539844ab0232643e2d91e905c06b1133ad8/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c7db539844ab0232643e2d91e905c06b1133ad8/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=3c7db539844ab0232643e2d91e905c06b1133ad8",
        "patch": "@@ -160,7 +160,7 @@ def deep_eval(ctx, expr):\n \n def get(ctx, name):\n     \"\"\"Evaluate name in context ctx.\"\"\"\n-    assert name in ctx, \"Missing '%s' in context\" % name\n+    assert_true(name in ctx, err_msg=\"Missing '%s' in context\" % name)\n     expr = ctx[name]\n     if not isinstance(expr, Final):\n         # Evaluate and cache the result.\n@@ -1291,17 +1291,17 @@ def block_submit(self, node, txs, msg, err_msg, cb_pubkey=None, fees=0, sigops_w\n         block.solve()\n         block_response = node.submitblock(block.serialize().hex())\n         if err_msg is not None:\n-            # Use assert instead of assert_equal, because it contains a custom message\n-            assert block_response is not None and err_msg in block_response, \"Missing error message '%s' from block response '%s': %s\" % (err_msg, \"(None)\" if block_response is None else block_response, msg)\n+e\n+            assert_true(block_response is not None and err_msg in block_response,\n+                        err_msg= \"Missing error message '%s' from block response '%s': %s\" % (err_msg, \"(None)\" if block_response is None else block_response, msg))\n         if accept:\n-            # Use assert instead of assert_equal, because it contains a custom message\n-            assert node.getbestblockhash() == block.hash, \"Failed to accept: %s (response: %s)\" % (msg, block_response)\n+            assert_equal(node.getbestblockhash() == block.hash, err_msg=\"Failed to accept: %s (response: %s)\" % (msg, block_response))\n             self.tip = block.sha256\n             self.lastblockhash = block.hash\n             self.lastblocktime += 1\n             self.lastblockheight += 1\n         else:\n-            assert node.getbestblockhash() == self.lastblockhash, \"Failed to reject: \" + msg\n+            assert_equal(node.getbestblockhash() == self.lastblockhash, err_msg=\"Failed to reject: \" + msg)\n \n     def init_blockinfo(self, node):\n         # Initialize variables used by block_submit()."
      },
      {
        "sha": "56fd9e52b83f3ec8c0465fa69f572b7855e1c5fc",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c7db539844ab0232643e2d91e905c06b1133ad8/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c7db539844ab0232643e2d91e905c06b1133ad8/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=3c7db539844ab0232643e2d91e905c06b1133ad8",
        "patch": "@@ -77,9 +77,9 @@ def assert_greater_than_or_equal(thing1, thing2, err_msg=None):\n         raise AssertionError(msg)\n \n \n-def assert_true(thing, message = None):\n+def assert_true(thing, err_msg=None):\n     if thing is not True:\n-        msg = \"%s it is not True\" if message is None else message\n+        msg = \"%s it is not True\" if err_msg is None else err_msg\n         raise AssertionError(msg)\n \n def assert_raises(exc, fun, *args, **kwds):"
      }
    ]
  },
  {
    "sha": "86978afd29dae0011fb1c21c4535ab5d7c7374c5",
    "node_id": "C_kwDOABII59oAKDg2OTc4YWZkMjlkYWUwMDExZmIxYzIxYzQ1MzVhYjVkN2M3Mzc0YzU",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-02T10:12:14Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "feature_taproot.py: Use the err_msg introduced in the assert framework.\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "5fa831b81c20c8565be324f24bb8393539906191",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5fa831b81c20c8565be324f24bb8393539906191"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86978afd29dae0011fb1c21c4535ab5d7c7374c5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6FgACgkQi23CuHC4\nDV9zqQ//ew2P0GlEg4wt2OEDPGekLBRY5WDJ4TmAK6kjWqHpbY+Uy5k0whTcRGpx\nP4UvyIphvdHKNtO9LMBYsjLHynYaze8AEPOTGcdkkxx8ilAxw3PYbppGapnquDun\nnNXrBZkXzX0eebNbA307hc7+loV7zp7J1xrgAy9duqqkdmD/HmGIRhvNgpzdXcwW\n0HN2uYTqJd/mdtZ1nj51qhb7AkqQ6DmygsjmhTFVzTleIjpPc6KtoS0BZNRM13Va\nGYZMpGfOeH3RIFM6/wN312mGYnUskW9IJcNDpw3laAyTbgjXkTaTTwMldS9F3fnD\nDH/q3QyexVaJGkTtnzLal1G/ZJLzxxoA3X7f12XITByrpUeWmVrJ2caAQqOJV3Kt\n/0kf/TKxWuzuIk82lWAX+nnHOxUAl+9j4A1diPcfVcRr+cJCEu4hgN/2NHh/Pitb\ntKOX64lHaifGwgGvau0nvtlBXo+quSFw6/t1KAFcyXz+Ei3LYxKmNEpEfenyjhQK\nNfLc2r/d2k/GgchBl+bK6nOEHr/PWjwAMTKcZ3oN9qyMxQsT55UVnDICIB6v+epU\nQQQWIe6+ErcBBY3xyAt06N77EenaUoVoPaugc8XubDEp04nODpLzWdI6fYNdoWBP\nblL9jm/UUibMWPOhK0fPfQyUgTt5DVW8QrtIk0Mx8KdkxHTZHfc=\n=NPRF\n-----END PGP SIGNATURE-----",
        "payload": "tree 5fa831b81c20c8565be324f24bb8393539906191\nparent 3c7db539844ab0232643e2d91e905c06b1133ad8\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1635847934 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nfeature_taproot.py: Use the err_msg introduced in the assert framework.\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86978afd29dae0011fb1c21c4535ab5d7c7374c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/86978afd29dae0011fb1c21c4535ab5d7c7374c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86978afd29dae0011fb1c21c4535ab5d7c7374c5/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c7db539844ab0232643e2d91e905c06b1133ad8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c7db539844ab0232643e2d91e905c06b1133ad8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c7db539844ab0232643e2d91e905c06b1133ad8"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "62852c5951d9d7e1bea716dfaf19ec836acb7b10",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/86978afd29dae0011fb1c21c4535ab5d7c7374c5/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/86978afd29dae0011fb1c21c4535ab5d7c7374c5/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=86978afd29dae0011fb1c21c4535ab5d7c7374c5",
        "patch": "@@ -1291,17 +1291,16 @@ def block_submit(self, node, txs, msg, err_msg, cb_pubkey=None, fees=0, sigops_w\n         block.solve()\n         block_response = node.submitblock(block.serialize().hex())\n         if err_msg is not None:\n-e\n             assert_true(block_response is not None and err_msg in block_response,\n                         err_msg= \"Missing error message '%s' from block response '%s': %s\" % (err_msg, \"(None)\" if block_response is None else block_response, msg))\n         if accept:\n-            assert_equal(node.getbestblockhash() == block.hash, err_msg=\"Failed to accept: %s (response: %s)\" % (msg, block_response))\n+            assert_equal(node.getbestblockhash(), block.hash, err_msg=\"Failed to accept: %s (response: %s)\" % (msg, block_response))\n             self.tip = block.sha256\n             self.lastblockhash = block.hash\n             self.lastblocktime += 1\n             self.lastblockheight += 1\n         else:\n-            assert_equal(node.getbestblockhash() == self.lastblockhash, err_msg=\"Failed to reject: \" + msg)\n+            assert_equal(node.getbestblockhash(), self.lastblockhash, err_msg=\"Failed to reject: \" + msg)\n \n     def init_blockinfo(self, node):\n         # Initialize variables used by block_submit()."
      }
    ]
  },
  {
    "sha": "6808a9e58387a2bb454c156b6ce0e35344ab21a6",
    "node_id": "C_kwDOABII59oAKDY4MDhhOWU1ODM4N2EyYmI0NTRjMTU2YjZjZTBlMzUzNDRhYjIxYTY",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-02T14:02:48Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "feature_taproot.py: Use the err_msg introduced in the assert framework.\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "f533acf548650b85f7b648120dced8e9aff7b550",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f533acf548650b85f7b648120dced8e9aff7b550"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6808a9e58387a2bb454c156b6ce0e35344ab21a6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6FkACgkQi23CuHC4\nDV+UcA/+Kd36kZuiTPetdy6S8+oZOp5N0zp2UhVkcfztIlkodPpLU6UZIOyf8nwW\nZuk3D/QQ3kWHZEZ1WmQBNcGa9kYZJ1ftLRdHElizEIakq0i7lyrCPauegUFCKOIc\nvH/UlxNxBrQlBinuoGQ3PdzFzd2J6ltMH3zMbY+KCmsmNJ2xAAMRzEZvDws++IA0\nyyh0/OmK6RBjDNODy2ndwjiVmK5iz1X/4VzWZryniLR0Yic43182LcOolvdAsnV0\nitGzTcgomHRDGUgSM2GH70NLD2VzJnS1/5Hs1fMIhU4f1bmdqxg26NxNNllBW5EM\n8dzlwsrAcsyZNZ7z9CuDWwlgEEJ2w53UFtck8NQgp7yGO6iNEVJcz3Msc0jlY+Ib\nIs3vOG6SbIW7pUUYvc2+9vbghi+WivYUFOBUBVUhMKB8WzzArbm98EtldW9DlOhx\nESadCb5pz68Gl+kR/QyudSvs+yWiUg0gmu6NUwJz14SuRByx6K8RDNWk7E3EZIQX\nSBsQesGBb3CTKAFY92zQqMOmZn18UxgSYMNrZPmu9gFGb8+xp8pPudLmbZ4H4bJh\nc1ARjBxrcSsSW/+KRVe0HEPyL8KWpeIqW7eZ7xSIRdpocnMidPulVE0r3MdXAuFJ\nLE6MceWChBY92v3uI1boUudhdpeK0pwVgyLLK2xEuyXMYDI9vJ4=\n=uV3H\n-----END PGP SIGNATURE-----",
        "payload": "tree f533acf548650b85f7b648120dced8e9aff7b550\nparent 86978afd29dae0011fb1c21c4535ab5d7c7374c5\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1635861768 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nfeature_taproot.py: Use the err_msg introduced in the assert framework.\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6808a9e58387a2bb454c156b6ce0e35344ab21a6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6808a9e58387a2bb454c156b6ce0e35344ab21a6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6808a9e58387a2bb454c156b6ce0e35344ab21a6/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "86978afd29dae0011fb1c21c4535ab5d7c7374c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86978afd29dae0011fb1c21c4535ab5d7c7374c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/86978afd29dae0011fb1c21c4535ab5d7c7374c5"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a757105eb1769be1cf1e61cae5aa8ba1199966dc",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6808a9e58387a2bb454c156b6ce0e35344ab21a6/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6808a9e58387a2bb454c156b6ce0e35344ab21a6/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=6808a9e58387a2bb454c156b6ce0e35344ab21a6",
        "patch": "@@ -592,7 +592,7 @@ def bitflipper(expr):\n     \"\"\"Return a callable that evaluates expr and returns it with a random bitflip.\"\"\"\n     def fn(ctx):\n         sub = deep_eval(ctx, expr)\n-        assert_true(isinstance(sub, bytes), message=\"It is not a bytes instance\")\n+        assert_true(isinstance(sub, bytes), err_msg=\"It is not a bytes instance\")\n         return (int.from_bytes(sub, 'little') ^ (1 << random.randrange(len(sub) * 8))).to_bytes(len(sub), 'little')\n     return fn\n "
      },
      {
        "sha": "a9322e28cf227e538af5287a2a86f8834617882b",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6808a9e58387a2bb454c156b6ce0e35344ab21a6/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6808a9e58387a2bb454c156b6ce0e35344ab21a6/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=6808a9e58387a2bb454c156b6ce0e35344ab21a6",
        "patch": "@@ -79,7 +79,9 @@ def assert_greater_than_or_equal(thing1, thing2, err_msg=None):\n \n def assert_true(thing, err_msg=None):\n     if thing is not True:\n-        msg = \"%s it is not True\" if err_msg is None else err_msg\n+        msg = \"%s it is not True\" % str(thing)\n+        if err_msg is not None:\n+            msg = err_msg\n         raise AssertionError(msg)\n \n def assert_raises(exc, fun, *args, **kwds):"
      }
    ]
  },
  {
    "sha": "78cb5ac0ea54c8a137b1a8af392448f58d369a8a",
    "node_id": "C_kwDOABII59oAKDc4Y2I1YWMwZWE1NGM4YTEzN2IxYThhZjM5MjQ0OGY1OGQzNjlhOGE",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-02T14:03:04Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "interface_zmq.py: Refactoring message parameter with err_msg\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "f016a350663deb2f50197aec57946cdc1bb18f47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f016a350663deb2f50197aec57946cdc1bb18f47"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78cb5ac0ea54c8a137b1a8af392448f58d369a8a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6FoACgkQi23CuHC4\nDV/yWg//WjTL9gPBpK0TGJtZZ5RtAHOQ9def8i2yE+LBwrfGlrmiICJsktZ4xgza\nJMW0s/FIpzBwgIKFLC4vNTidCpSUDkem9yJKBxlIDOYdwPpI0nX837HCmllvEQ+Y\n/vhfU5Qw2isG1+JItXlTooGq9+1LnnfCFB70O0YUCgp1P2zC9l8/GIg5Ys8ldCCN\nRG+tTAPtBOh7Dz2ajfQgv4UjXzbds3HX+KTSlwVcazmeTx+2DOEaBChvzeythZk1\nvwO75/R77C+a/ZkwnLCpsm1Vqc3qmW5tkvB8Jc9HBqtg1my0u4SQjoTOlBjC0Ude\nE/qcxabq6KxdSGBvGHPQXU3jv++SC4UnBNsEbwsdmtG2v4pYFeiD4dRdiXSPSCS9\ncAykOyOnDfmaa84niRvFeCMdH154ZFEEAvEOScbi3i7s36b0Y1/nYAMokl51p09o\n2C/KFq9BCDQv6vf7VdfT4sqFZcXZmpVqTmxL9W84R9tYhN5IaTmdHV0dL9fYpH+Z\nRT4NKwXRolsS1bOjhfn1LSd7co22DZEBVPsQh3OB4uJlxiHYSswbcpe54H4TXStV\n4ciogg68dW9bZZpEH+bywbcpCMs66CcqivyZMu+Ma/tKlLPDVUjRmAyJlnF1Xn6M\nZMSA9ccsqnG9Eag/9JxthLmduvpAmH+IWEXpaucF/8Gs3IRwEKE=\n=pF9B\n-----END PGP SIGNATURE-----",
        "payload": "tree f016a350663deb2f50197aec57946cdc1bb18f47\nparent 6808a9e58387a2bb454c156b6ce0e35344ab21a6\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1635861784 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\ninterface_zmq.py: Refactoring message parameter with err_msg\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78cb5ac0ea54c8a137b1a8af392448f58d369a8a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78cb5ac0ea54c8a137b1a8af392448f58d369a8a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78cb5ac0ea54c8a137b1a8af392448f58d369a8a/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6808a9e58387a2bb454c156b6ce0e35344ab21a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6808a9e58387a2bb454c156b6ce0e35344ab21a6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6808a9e58387a2bb454c156b6ce0e35344ab21a6"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "f04ac01bb4ef7f9955560b06d8fc99bbc97f408c",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78cb5ac0ea54c8a137b1a8af392448f58d369a8a/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78cb5ac0ea54c8a137b1a8af392448f58d369a8a/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=78cb5ac0ea54c8a137b1a8af392448f58d369a8a",
        "patch": "@@ -69,9 +69,9 @@ def receive_sequence(self):\n         label = chr(body[32])\n         mempool_sequence = None if len(body) != 32+1+8 else struct.unpack(\"<Q\", body[32+1:])[0]\n         if mempool_sequence is not None:\n-            assert_true(label == \"A\" or label == \"R\", message=\"{} different from A or C\".format(label))\n+            assert_true(label == \"A\" or label == \"R\", err_msg=\"{} different from A or C\".format(label))\n         else:\n-            assert_true(label == \"D\" or label == \"C\", message=\"{} different from D or C\".format(label))\n+            assert_true(label == \"D\" or label == \"C\", err_msg=\"{} different from D or C\".format(label))\n         return (hash, label, mempool_sequence)\n \n \n@@ -468,7 +468,7 @@ def test_mempool_sync(self):\n         while zmq_mem_seq is None:\n             (hash_str, label, zmq_mem_seq) = seq.receive_sequence()\n \n-        assert_true(label == \"A\" or label == \"R\", message=\"{} is different from A or R\")\n+        assert_true(label == \"A\" or label == \"R\", err_msg=\"{} is different from A or R\")\n         assert_true(hash_str is not None)\n \n         # 2) We need to \"seed\" our view of the mempool"
      }
    ]
  },
  {
    "sha": "d360cbcebfabf8a625a462f3e28db9a6563677eb",
    "node_id": "C_kwDOABII59oAKGQzNjBjYmNlYmZhYmY4YTYyNWE0NjJmM2UyOGRiOWE2NTYzNjc3ZWI",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-02T14:03:16Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "p2p_compactblocks.py: Using test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "b710ef1ef6df98070cff10d2b6596d1311397dd5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b710ef1ef6df98070cff10d2b6596d1311397dd5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d360cbcebfabf8a625a462f3e28db9a6563677eb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6FsACgkQi23CuHC4\nDV+oCA/9EOj+RkfQuDTkcfU+xS7wqiYhDHhHyq1drnm4/sCkfLYtl7IKltXCySMb\nNGkQ1Jex28BxruCRoGUxJaeJNfZhhrT+Y4zbA+GXqscwuRkyRvYMCz0Mo+RKhZoh\ndJZEm2fSqoHF5j2A6qz+BgpT7md9Cr58DlOliUNhqWEra+W7YE9V0i/yn3y5fsHQ\nm5Z0K+4JpNbbbWckTwktG7ue+IsMkFHVu+byYl6Rr9OjlmobHhSlkOi1qfiQrunp\nHjtc3xSXmKuPEh1dagaqD0cdK6MNqBGohFZTMqW8lO5GUb44dlO1xk4mSAsUBBbA\ng0AQAWCiAoAYGS02u/skGm9fv8cKQ/5h34csO6Rlv+BPv1GO8VBRJrgRbRj28D18\nQOjkv0Bit8x8ZDIyzfOmm7Q27OsXiXp9VYQNXWlsryKQRCcy0D/7Ix22uhspAyCN\nbDnt2JO+ohSuokjd10LyU/8uzd79IMkSvOLJRNAvSJJx1vVYQ4Y3WeOg7Eb2FiQu\nVeRIOH/BhWncqSWXeO9NxHD/pz99XlQsUS+70Ytdy/YvzNyOIx0hFxcOKLwzE9YZ\n2e7HdrX0cx/fE+k/XZJzl1kO1fFp68VEBGl+PB7DwajE7Fx01uKLxFEZXNCxGYTw\nYgNv6HQnBT4FUwo8kRVdtBnzHrenAcYth6IeIX/cX1J3dB6kKRU=\n=SaAg\n-----END PGP SIGNATURE-----",
        "payload": "tree b710ef1ef6df98070cff10d2b6596d1311397dd5\nparent 78cb5ac0ea54c8a137b1a8af392448f58d369a8a\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1635861796 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\np2p_compactblocks.py: Using test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d360cbcebfabf8a625a462f3e28db9a6563677eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d360cbcebfabf8a625a462f3e28db9a6563677eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d360cbcebfabf8a625a462f3e28db9a6563677eb/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "78cb5ac0ea54c8a137b1a8af392448f58d369a8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78cb5ac0ea54c8a137b1a8af392448f58d369a8a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/78cb5ac0ea54c8a137b1a8af392448f58d369a8a"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 29,
      "deletions": 27
    },
    "files": [
      {
        "sha": "bebc249914ecddcefd477217ec4bc47b4b8c1bb4",
        "filename": "test/functional/p2p_compactblocks.py",
        "status": "modified",
        "additions": 29,
        "deletions": 27,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d360cbcebfabf8a625a462f3e28db9a6563677eb/test/functional/p2p_compactblocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d360cbcebfabf8a625a462f3e28db9a6563677eb/test/functional/p2p_compactblocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_compactblocks.py?ref=d360cbcebfabf8a625a462f3e28db9a6563677eb",
        "patch": "@@ -63,6 +63,8 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n+    assert_true,\n+    assert_greater_than_or_equal,\n     softfork_active,\n )\n \n@@ -164,7 +166,7 @@ def build_block_on_tip(self, node, segwit=False):\n     def make_utxos(self):\n         block = self.build_block_on_tip(self.nodes[0])\n         self.segwit_node.send_and_ping(msg_no_witness_block(block))\n-        assert int(self.nodes[0].getbestblockhash(), 16) == block.sha256\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), block.sha256)\n         self.generatetoaddress(self.nodes[0], COINBASE_MATURITY, self.nodes[0].getnewaddress(address_type=\"bech32\"))\n \n         total_value = block.vtx[0].vout[0].nValue\n@@ -214,12 +216,12 @@ def check_announcement_of_new_block(node, peer, predicate):\n             peer.clear_block_announcement()\n             block_hash = int(self.generate(node, 1)[0], 16)\n             peer.wait_for_block_announcement(block_hash, timeout=30)\n-            assert peer.block_announced\n+            assert_true(peer.block_announced)\n \n             with p2p_lock:\n-                assert predicate(peer), (\n+                assert_true(predicate(peer), err_msg=(\n                     \"block_hash={!r}, cmpctblock={!r}, inv={!r}\".format(\n-                        block_hash, peer.last_message.get(\"cmpctblock\", None), peer.last_message.get(\"inv\", None)))\n+                        block_hash, peer.last_message.get(\"cmpctblock\", None), peer.last_message.get(\"inv\", None))))\n \n         # We shouldn't get any block announcements via cmpctblock yet.\n         check_announcement_of_new_block(node, test_node, lambda p: \"cmpctblock\" not in p.last_message)\n@@ -307,7 +309,7 @@ def test_compactblock_construction(self, test_node, use_witness_address=True):\n                 segwit_tx_generated = True\n \n         if use_witness_address:\n-            assert segwit_tx_generated  # check that our test is not broken\n+            assert_true(segwit_tx_generated)  # check that our test is not broken\n \n         # Wait until we've seen the block announcement for the resulting tip\n         tip = int(node.getbestblockhash(), 16)\n@@ -356,7 +358,7 @@ def check_compactblock_construction_from_block(self, version, header_and_shortid\n         assert_equal(header_and_shortids.header.sha256, block_hash)\n \n         # Make sure the prefilled_txn appears to have included the coinbase\n-        assert len(header_and_shortids.prefilled_txn) >= 1\n+        assert_greater_than_or_equal(len(header_and_shortids.prefilled_txn), 1)\n         assert_equal(header_and_shortids.prefilled_txn[0].index, 0)\n \n         # Check that all prefilled_txn entries match what's in the block.\n@@ -371,7 +373,7 @@ def check_compactblock_construction_from_block(self, version, header_and_shortid\n                 assert_equal(wtxid, block.vtx[entry.index].calc_sha256(True))\n             else:\n                 # Shouldn't have received a witness\n-                assert entry.tx.wit.is_null()\n+                assert_true(entry.tx.wit.is_null())\n \n         # Check that the cmpctblock message announced all the transactions.\n         assert_equal(len(header_and_shortids.prefilled_txn) + len(header_and_shortids.shortids), len(block.vtx))\n@@ -431,7 +433,7 @@ def test_compactblock_requests(self, test_node, segwit=True):\n             assert_equal(int(node.getbestblockhash(), 16), block.hashPrevBlock)\n             # Expect a getblocktxn message.\n             with p2p_lock:\n-                assert \"getblocktxn\" in test_node.last_message\n+                assert_true(\"getblocktxn\" in test_node.last_message)\n                 absolute_indexes = test_node.last_message[\"getblocktxn\"].block_txn_request.to_absolute()\n             assert_equal(absolute_indexes, [0])  # should be a coinbase request\n \n@@ -473,7 +475,7 @@ def test_getblocktxn_response(compact_block, peer, expected_result):\n             msg = msg_cmpctblock(compact_block.to_p2p())\n             peer.send_and_ping(msg)\n             with p2p_lock:\n-                assert \"getblocktxn\" in peer.last_message\n+                assert_true(\"getblocktxn\" in peer.last_message)\n                 absolute_indexes = peer.last_message[\"getblocktxn\"].block_txn_request.to_absolute()\n             assert_equal(absolute_indexes, expected_result)\n \n@@ -513,7 +515,7 @@ def test_tip_after_message(node, peer, msg, tip):\n         block = self.build_block_with_transactions(node, utxo, 5)\n         self.utxos.append([block.vtx[-1].sha256, 0, block.vtx[-1].vout[0].nValue])\n         test_node.send_and_ping(msg_tx(block.vtx[1]))\n-        assert block.vtx[1].hash in node.getrawmempool()\n+        assert_true(block.vtx[1].hash in node.getrawmempool())\n \n         # Prefill 4 out of the 6 transactions, and verify that only the one\n         # that was not in the mempool is requested.\n@@ -534,7 +536,7 @@ def test_tip_after_message(node, peer, msg, tip):\n         # Make sure all transactions were accepted.\n         mempool = node.getrawmempool()\n         for tx in block.vtx[1:]:\n-            assert tx.hash in mempool\n+            assert_true(tx.hash in mempool)\n \n         # Clear out last request.\n         with p2p_lock:\n@@ -545,7 +547,7 @@ def test_tip_after_message(node, peer, msg, tip):\n         test_tip_after_message(node, test_node, msg_cmpctblock(comp_block.to_p2p()), block.sha256)\n         with p2p_lock:\n             # Shouldn't have gotten a request for any transaction\n-            assert \"getblocktxn\" not in test_node.last_message\n+            assert_true(\"getblocktxn\" not in test_node.last_message)\n \n     # Incorrectly responding to a getblocktxn shouldn't cause the block to be\n     # permanently failed.\n@@ -563,15 +565,15 @@ def test_incorrect_blocktxn_response(self, test_node):\n         # Make sure all transactions were accepted.\n         mempool = node.getrawmempool()\n         for tx in block.vtx[1:6]:\n-            assert tx.hash in mempool\n+            assert_true(tx.hash in mempool)\n \n         # Send compact block\n         comp_block = HeaderAndShortIDs()\n         comp_block.initialize_from_block(block, prefill_list=[0], use_witness=(version == 2))\n         test_node.send_and_ping(msg_cmpctblock(comp_block.to_p2p()))\n         absolute_indexes = []\n         with p2p_lock:\n-            assert \"getblocktxn\" in test_node.last_message\n+            assert_true(\"getblocktxn\" in test_node.last_message)\n             absolute_indexes = test_node.last_message[\"getblocktxn\"].block_txn_request.to_absolute()\n         assert_equal(absolute_indexes, [6, 7, 8, 9, 10])\n \n@@ -594,8 +596,8 @@ def test_incorrect_blocktxn_response(self, test_node):\n \n         # We should receive a getdata request\n         test_node.wait_for_getdata([block.sha256], timeout=10)\n-        assert test_node.last_message[\"getdata\"].inv[0].type == MSG_BLOCK or \\\n-               test_node.last_message[\"getdata\"].inv[0].type == MSG_BLOCK | MSG_WITNESS_FLAG\n+        assert_true(test_node.last_message[\"getdata\"].inv[0].type == MSG_BLOCK or\n+               test_node.last_message[\"getdata\"].inv[0].type == MSG_BLOCK | MSG_WITNESS_FLAG)\n \n         # Deliver the block\n         if version == 2:\n@@ -633,7 +635,7 @@ def test_getblocktxn_handler(self, test_node):\n                     assert_equal(tx.sha256, block.vtx[index].sha256)\n                     if version == 1:\n                         # Witnesses should have been stripped\n-                        assert tx.wit.is_null()\n+                        assert_true(tx.wit.is_null())\n                     else:\n                         # Check that the witness matches\n                         assert_equal(tx.calc_sha256(True), block.vtx[index].calc_sha256(True))\n@@ -651,7 +653,7 @@ def test_getblocktxn_handler(self, test_node):\n         with p2p_lock:\n             test_node.last_message[\"block\"].block.calc_sha256()\n             assert_equal(test_node.last_message[\"block\"].block.sha256, int(block_hash, 16))\n-            assert \"blocktxn\" not in test_node.last_message\n+            assert_true(\"blocktxn\" not in test_node.last_message)\n \n     def test_compactblocks_not_at_tip(self, test_node):\n         node = self.nodes[0]\n@@ -697,7 +699,7 @@ def test_compactblocks_not_at_tip(self, test_node):\n                 assert_equal(x[\"status\"], \"headers-only\")\n                 found = True\n                 break\n-        assert found\n+        assert_true(found)\n \n         # Requesting this block via getblocktxn should silently fail\n         # (to avoid fingerprinting attacks).\n@@ -707,7 +709,7 @@ def test_compactblocks_not_at_tip(self, test_node):\n             test_node.last_message.pop(\"blocktxn\", None)\n         test_node.send_and_ping(msg)\n         with p2p_lock:\n-            assert \"blocktxn\" not in test_node.last_message\n+            assert_true(\"blocktxn\" not in test_node.last_message)\n \n     def test_end_to_end_block_relay(self, listeners):\n         node = self.nodes[0]\n@@ -732,7 +734,7 @@ def test_end_to_end_block_relay(self, listeners):\n     # but invalid transactions.\n     def test_invalid_tx_in_compactblock(self, test_node, use_segwit=True):\n         node = self.nodes[0]\n-        assert len(self.utxos)\n+        assert_true(len(self.utxos) > 0)\n         utxo = self.utxos[0]\n \n         block = self.build_block_with_transactions(node, utxo, 5)\n@@ -753,7 +755,7 @@ def test_invalid_tx_in_compactblock(self, test_node, use_segwit=True):\n         test_node.send_and_ping(msg)\n \n         # Check that the tip didn't advance\n-        assert int(node.getbestblockhash(), 16) is not block.sha256\n+        assert_true(int(node.getbestblockhash(), 16) is not block.sha256)\n         test_node.sync_with_ping()\n \n     # Helper for enabling cb announcements\n@@ -766,7 +768,7 @@ def request_cb_announcements(self, peer):\n \n     def test_compactblock_reconstruction_multiple_peers(self, stalling_peer, delivery_peer):\n         node = self.nodes[0]\n-        assert len(self.utxos)\n+        assert_true(len(self.utxos) > 0)\n \n         def announce_cmpct_block(node, peer):\n             utxo = self.utxos.pop(0)\n@@ -777,7 +779,7 @@ def announce_cmpct_block(node, peer):\n             msg = msg_cmpctblock(cmpct_block.to_p2p())\n             peer.send_and_ping(msg)\n             with p2p_lock:\n-                assert \"getblocktxn\" in peer.last_message\n+                assert_true(\"getblocktxn\" in peer.last_message)\n             return block, cmpct_block\n \n         block, cmpct_block = announce_cmpct_block(node, stalling_peer)\n@@ -787,7 +789,7 @@ def announce_cmpct_block(node, peer):\n         delivery_peer.sync_with_ping()\n         mempool = node.getrawmempool()\n         for tx in block.vtx[1:]:\n-            assert tx.hash in mempool\n+            assert_true(tx.hash in mempool)\n \n         delivery_peer.send_and_ping(msg_cmpctblock(cmpct_block.to_p2p()))\n         assert_equal(int(node.getbestblockhash(), 16), block.sha256)\n@@ -806,7 +808,7 @@ def announce_cmpct_block(node, peer):\n \n         cmpct_block.use_witness = True\n         delivery_peer.send_and_ping(msg_cmpctblock(cmpct_block.to_p2p()))\n-        assert int(node.getbestblockhash(), 16) != block.sha256\n+        assert_true(int(node.getbestblockhash(), 16) != block.sha256)\n \n         msg = msg_no_witness_blocktxn()\n         msg.block_transactions.blockhash = block.sha256\n@@ -854,7 +856,7 @@ def run_test(self):\n         # We will need UTXOs to construct transactions in later tests.\n         self.make_utxos()\n \n-        assert softfork_active(self.nodes[0], \"segwit\")\n+        assert_true(softfork_active(self.nodes[0], \"segwit\"))\n \n         self.log.info(\"Testing SENDCMPCT p2p message... \")\n         self.test_sendcmpct(self.segwit_node, old_node=self.old_node)"
      }
    ]
  },
  {
    "sha": "6837c8a408d1dd73941bf2828ab4363649c7098a",
    "node_id": "C_kwDOABII59oAKDY4MzdjOGE0MDhkMWRkNzM5NDFiZjI4MjhhYjQzNjM2NDljNzA5OGE",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-02T14:03:25Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "p2p_getaddr_caching.py: Using test framework utils\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "cd5f9f039b1d21ce8f1cd90d6cdf94c2273db9a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd5f9f039b1d21ce8f1cd90d6cdf94c2273db9a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6837c8a408d1dd73941bf2828ab4363649c7098a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6FwACgkQi23CuHC4\nDV9IyA//ZwMwMupxD1ZpfgajVXPej+LFJWJuRA3jQegGpFnU/XFj3sBSumpQxA/W\nv1ofrCQh2wyzeouAXlFSlJKC60cA0Cf0Ncgsjpp1JrKO8PAY+CCgRho2X4v9kAR1\nhC7cYCu8Q53NombZfGHDo2jq2xY6VtrsOEUtz0K14vHcQCCJfTI9ukzzElOWFZh0\n3QfNSDYiPR86Lxx4a5ohPT1kVqU+TQHGaQyK23Rpf4PUCmNiZibpkbkpe+LMIs9I\nnOkm/6K04lBgtjWwYN7qQ1ENFWzWSMm/CrPhTm21OWeaSh+UYS3Al8o2cLot3Hgy\nRpsaJ5m1jXy4iQHzlePfMnaLRT3C+G0Tsh+BiS8o+GSLy4UQflm2SfXryDnC+ahi\nuxZgdKxY5hx+VY5v0eK/25HrL7u3RpK8XavjZLsd6uc1i4jQsVN2H+AKIOi1m/7M\nsH8mjCrZL/FX0hwiPCSijZSSuA97aKk/h3I0PKyn0zinjAfImbwgEUvE3LGuKDAc\nDpkiMDuEsiAbutPrPhaBrHyyg93yK3IFdMrUBR/QUxB7yp+4ZSv+mT9k7dvaU3z2\nF1/WXe+o56htcdYc6a+2bmf+8qS4j/oote2Gyi9MOB6XwWOiQ3qe1OuIyXiEWV27\nMWo6Ll1MWZywYU9VDDn+ilqRXlRCuDHl2RYj1nJk3aUS26nooMQ=\n=1Iq4\n-----END PGP SIGNATURE-----",
        "payload": "tree cd5f9f039b1d21ce8f1cd90d6cdf94c2273db9a5\nparent d360cbcebfabf8a625a462f3e28db9a6563677eb\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1635861805 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\np2p_getaddr_caching.py: Using test framework utils\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6837c8a408d1dd73941bf2828ab4363649c7098a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6837c8a408d1dd73941bf2828ab4363649c7098a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6837c8a408d1dd73941bf2828ab4363649c7098a/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d360cbcebfabf8a625a462f3e28db9a6563677eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d360cbcebfabf8a625a462f3e28db9a6563677eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d360cbcebfabf8a625a462f3e28db9a6563677eb"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8dff800e5262488d400f67ca509604048714c6cc",
        "filename": "test/functional/p2p_getaddr_caching.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6837c8a408d1dd73941bf2828ab4363649c7098a/test/functional/p2p_getaddr_caching.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6837c8a408d1dd73941bf2828ab4363649c7098a/test/functional/p2p_getaddr_caching.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_getaddr_caching.py?ref=6837c8a408d1dd73941bf2828ab4363649c7098a",
        "patch": "@@ -14,6 +14,7 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n+    assert_greater_than,\n )\n \n # As defined in net_processing.\n@@ -53,7 +54,7 @@ def run_test(self):\n \n         # Need to make sure we hit MAX_ADDR_TO_SEND records in the addr response later because\n         # only a fraction of all known addresses can be cached and returned.\n-        assert(len(self.nodes[0].getnodeaddresses(0)) > int(MAX_ADDR_TO_SEND / (MAX_PCT_ADDR_TO_SEND / 100)))\n+        assert_greater_than(len(self.nodes[0].getnodeaddresses(0)), int(MAX_ADDR_TO_SEND / (MAX_PCT_ADDR_TO_SEND / 100)))\n \n         responses = []\n         self.log.info('Send many addr requests within short time to receive same response')\n@@ -69,7 +70,7 @@ def run_test(self):\n             responses.append(addr_receiver.get_received_addrs())\n         for response in responses[1:]:\n             assert_equal(response, responses[0])\n-        assert(len(response) == MAX_ADDR_TO_SEND)\n+        assert_equal(len(response), MAX_ADDR_TO_SEND)\n \n         cur_mock_time += 3 * 24 * 60 * 60\n         self.nodes[0].setmocktime(cur_mock_time)"
      }
    ]
  },
  {
    "sha": "bae2a2a7bc23757eb70b392654979411ae8e01de",
    "node_id": "C_kwDOABII59oAKGJhZTJhMmE3YmMyMzc1N2ViNzBiMzkyNjU0OTc5NDExYWU4ZTAxZGU",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-04T05:59:40Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "p2p_disconnect_ban.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "24b98917bb193b20e1207b04fe6e38feffa4a61b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/24b98917bb193b20e1207b04fe6e38feffa4a61b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bae2a2a7bc23757eb70b392654979411ae8e01de",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6F0ACgkQi23CuHC4\nDV+79w/+NnNWR4kT2yT1fe/eoqC50/juVyMnMXlGSu10K5M4oR31i77qFkxOvjex\nAEVGJj5EATpTdB+2S6y1M1+M/IImqtKiHmnOu/0Pg359nYCbmKXzYNDlwScUecV0\nqtX1wqAx3CPmOUixAM9qm423gRndnwKa2G5ixo8D+7PqB1QPrOG9wVzjjAdZ/lgr\nWTRw7BBVsz1+dlJQ+/cGvBtCUhfKHx2cepbJIbnpi8XtWMH0ZrTLyjfuAd2eNGCX\np0HxwbNMU9Em8Psd5ym8ZXD1Y83Zbw+j0UtyLw84/hDRkiLpSwykNVWkhXLe024C\nXgPPdFll4akvZbYyLRUBisXhlmJrpjDyaP/dauGPxlhbqe0iIQwLC25D8HN9A1rB\nlVfgk1WXZr8Yw0+ShXB4x0xbX5Os7wvCrrZGMHrhtGxAjFocmbOTJObG0L2RBWkA\nLBR2wdvLKT5VmdGItZ8wcwO8CX4Yd+y8XZKEkBqSCyMZR6ourH9X4cp+WOwDojcW\njvJVP0QXcpxxI20VRzoboMNrX1LhNu31AE7yX1Qk8on1Bgio2padbkS0erHRe1lp\nYdvgeieMyK/Z3APSDc2nvUtAC0AHhf+69Pzfqnnm6GkAgmeU7u01BQ7mJTx6H3HO\nhrSQlZJeONobC/wMeWIOEZU70DGCXcODc0w8aXrMilnc3p48vig=\n=15xL\n-----END PGP SIGNATURE-----",
        "payload": "tree 24b98917bb193b20e1207b04fe6e38feffa4a61b\nparent 6837c8a408d1dd73941bf2828ab4363649c7098a\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636005580 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\np2p_disconnect_ban.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bae2a2a7bc23757eb70b392654979411ae8e01de",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bae2a2a7bc23757eb70b392654979411ae8e01de",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bae2a2a7bc23757eb70b392654979411ae8e01de/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6837c8a408d1dd73941bf2828ab4363649c7098a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6837c8a408d1dd73941bf2828ab4363649c7098a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6837c8a408d1dd73941bf2828ab4363649c7098a"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "00316f3b9f15ea08ca53a61ca27c65a95fa551cc",
        "filename": "test/functional/p2p_disconnect_ban.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bae2a2a7bc23757eb70b392654979411ae8e01de/test/functional/p2p_disconnect_ban.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bae2a2a7bc23757eb70b392654979411ae8e01de/test/functional/p2p_disconnect_ban.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_disconnect_ban.py?ref=bae2a2a7bc23757eb70b392654979411ae8e01de",
        "patch": "@@ -8,6 +8,7 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n+    assert_true,\n     assert_raises_rpc_error,\n )\n \n@@ -97,7 +98,7 @@ def run_test(self):\n         address1 = self.nodes[0].getpeerinfo()[0]['addr']\n         self.nodes[0].disconnectnode(address=address1)\n         self.wait_until(lambda: len(self.nodes[0].getpeerinfo()) == 1, timeout=10)\n-        assert not [node for node in self.nodes[0].getpeerinfo() if node['addr'] == address1]\n+        assert_true(not [node for node in self.nodes[0].getpeerinfo() if node['addr'] == address1])\n \n         self.log.info(\"disconnectnode: successfully reconnect node\")\n         self.connect_nodes(0, 1)  # reconnect the node\n@@ -108,7 +109,7 @@ def run_test(self):\n         id1 = self.nodes[0].getpeerinfo()[0]['id']\n         self.nodes[0].disconnectnode(nodeid=id1)\n         self.wait_until(lambda: len(self.nodes[0].getpeerinfo()) == 1, timeout=10)\n-        assert not [node for node in self.nodes[0].getpeerinfo() if node['id'] == id1]\n+        assert_true(not [node for node in self.nodes[0].getpeerinfo() if node['id'] == id1])\n \n if __name__ == '__main__':\n     DisconnectBanTest().main()"
      }
    ]
  },
  {
    "sha": "ea9d19089260ad6234d15cfbd9ff22f2fa219ecb",
    "node_id": "C_kwDOABII59oAKGVhOWQxOTA4OTI2MGFkNjIzNGQxNWNmYmQ5ZmYyMmYyZmEyMTllY2I",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-04T06:02:13Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "p2p_invalid_messages.py: Use test framwork\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "846b71ad99ced4cdf55c14f491b83d8a57132c44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/846b71ad99ced4cdf55c14f491b83d8a57132c44"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea9d19089260ad6234d15cfbd9ff22f2fa219ecb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6F4ACgkQi23CuHC4\nDV/O0Q//ac/bFVu24hmiSdWw7gYmMhQIWvCKRZtloAg+dGKHx9ho+1MpPZ7REdpD\n+mlsnaKWoSCkoeoxtMQLO3gmHf93LycGTa4TEQ2iBMbE7jzYjvQ0Us3s4c8SJdZU\nbSx8T7hQBX3Jj0ThK75rWNx15oVywjj7GgPoNBf8ITsZq47LK03z2XrnZfre0o6A\nah5k7Dm8AAcL/TA9pFHZ/u66TTeVyTxzFE3l9N4CMcA991U8ERPAUzVJQs7Kd15B\nzWvFiTgmnrFZ01ptcVXKvSVF6jEMbP0n3NCX9wkVYzsqcesbbg7toFmk/2X4JYb4\n8DOygvCzis8/osSUbc66zfcH0AYm+Abh7uFj20DIXuSYoYm+S3UslpIPvkujZUKI\nSonVJUuNrAKmfMRmRM0uachHbO3Ds2NGS2MeiBD0froDLEweIihCdwDdr44Pu4sT\n8tsIQ5hjBMTjuGtPquPWrk4KdG19dlGuvqcQaL5nApP0/3hR6qKTtJIjxTypwgdr\nbkynlGgaLaVYWz5HnmlBxdpxKcyqRDb7z2NuqSOECKF1WoOofS6OJUdAm5yJ6nVz\nKN64Po5SCgpWshmvEj9HpPYNBnNHpjRHW/aY5Vc170fHyubJfgLd423whGlZ1kG/\nrgeBeNgqwYlDcA0tNH4tK709hvJKUZJBe52lDxBMp25AFZUeG4U=\n=2WAm\n-----END PGP SIGNATURE-----",
        "payload": "tree 846b71ad99ced4cdf55c14f491b83d8a57132c44\nparent bae2a2a7bc23757eb70b392654979411ae8e01de\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636005733 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\np2p_invalid_messages.py: Use test framwork\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea9d19089260ad6234d15cfbd9ff22f2fa219ecb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea9d19089260ad6234d15cfbd9ff22f2fa219ecb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea9d19089260ad6234d15cfbd9ff22f2fa219ecb/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bae2a2a7bc23757eb70b392654979411ae8e01de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bae2a2a7bc23757eb70b392654979411ae8e01de",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bae2a2a7bc23757eb70b392654979411ae8e01de"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "4d29ac10b7c12b33770b9be5449813930b5e22ab",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea9d19089260ad6234d15cfbd9ff22f2fa219ecb/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea9d19089260ad6234d15cfbd9ff22f2fa219ecb/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=ea9d19089260ad6234d15cfbd9ff22f2fa219ecb",
        "patch": "@@ -253,7 +253,7 @@ def test_resource_exhaustion(self):\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         conn2 = self.nodes[0].add_p2p_connection(P2PDataStore())\n         msg_at_size = msg_unrecognized(str_data=\"b\" * VALID_DATA_LIMIT)\n-        assert len(msg_at_size.serialize()) == MAX_PROTOCOL_MESSAGE_LENGTH\n+        assert_equal(len(msg_at_size.serialize()), MAX_PROTOCOL_MESSAGE_LENGTH)\n \n         self.log.info(\"(a) Send 80 messages, each of maximum valid data size (4MB)\")\n         for _ in range(80):"
      }
    ]
  },
  {
    "sha": "a16a5fd941b3454e8a3d6d1e2cf81f4866fc288c",
    "node_id": "C_kwDOABII59oAKGExNmE1ZmQ5NDFiMzQ1NGU4YTNkNmQxZTJjZjgxZjQ4NjZmYzI4OGM",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-05T10:51:43Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "p2p_segwit.py: Including Test Framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "842caef4810255a0ea2f9a6b8ccb032ab6e4b8f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/842caef4810255a0ea2f9a6b8ccb032ab6e4b8f5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a16a5fd941b3454e8a3d6d1e2cf81f4866fc288c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6F8ACgkQi23CuHC4\nDV/A5A/9HyW022XREe3Ds0aE4KSAsqMsVz3GQ8uikrznEOAP6UN0zVEoCkf6kle5\ntcKPEVlPFTbJUQcxV9xegHL5tVgJxH+B+l3Lp7nLCDTIOR/0ye9rVS0nIgK6+jiw\n6CPIfv4g0ymCZ18PYNTU5P6fJg1oeubSxHoEqlceQxfGVItaRfc1kWpEJgxWuApd\nIfsgS+OPqOGJK1Wi4lg0u0R2xCUWrTMAodzchg71JRkgLkENEcMZXyDdOg3bm1hF\npwblMyLvKFVkUlsIdnIeGFgzD+Gl715oWrSGHjV+BXLq6VJnZmQ14h5ImzPzu9PG\nC8GqsIVhlTRzKHjmVKr6eoU2ipCUUUCuF3VxpoPwM93MdVwlwfgdplBbqgWL0SpS\nxz5KfOMxk+un/kwaAl7IfcgcF+V7v0uv63VgrWTh3lda7km7jMhnRRZNDZYkjrlr\nfFi7hBPQKu51VorbqzfiF/re/j/TWnBezwuAOkYN86vTS0SyezKZwBu2y3ul1jvK\n7csIch/lyN1mas1FlwMRnHVyDWfyddn4ZXCB8Ae5WBxn/pSUvTcD7htOALyjQ4OS\nGwjPhOadtYK5uK0kCVSc+cUPjRmNijB8pyDF2mn6poq+S3k5TIRn6PMgc6tovXqS\nbU085v938UoEdQHNofr2WMaJaJQCUX3TCvMD3MV3IJUgX42jN1M=\n=foSC\n-----END PGP SIGNATURE-----",
        "payload": "tree 842caef4810255a0ea2f9a6b8ccb032ab6e4b8f5\nparent ea9d19089260ad6234d15cfbd9ff22f2fa219ecb\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636109503 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\np2p_segwit.py: Including Test Framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a16a5fd941b3454e8a3d6d1e2cf81f4866fc288c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a16a5fd941b3454e8a3d6d1e2cf81f4866fc288c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a16a5fd941b3454e8a3d6d1e2cf81f4866fc288c/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ea9d19089260ad6234d15cfbd9ff22f2fa219ecb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea9d19089260ad6234d15cfbd9ff22f2fa219ecb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea9d19089260ad6234d15cfbd9ff22f2fa219ecb"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 32,
      "deletions": 20
    },
    "files": [
      {
        "sha": "09a14fbf2837239f6c7a1796f9b828e8a98c922c",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 24,
        "deletions": 20,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a16a5fd941b3454e8a3d6d1e2cf81f4866fc288c/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a16a5fd941b3454e8a3d6d1e2cf81f4866fc288c/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=a16a5fd941b3454e8a3d6d1e2cf81f4866fc288c",
        "patch": "@@ -86,6 +86,10 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n+    assert_true,\n+    assert_less_than,\n+    assert_greater_than,\n+    assert_greater_than_or_equal,\n     softfork_active,\n     assert_raises_rpc_error,\n )\n@@ -252,7 +256,7 @@ def run_test(self):\n         # self.std_wtx_node is for testing node1 with wtxid relay\n         self.std_wtx_node = self.nodes[1].add_p2p_connection(TestP2PConn(wtxidrelay=True), services=P2P_SERVICES)\n \n-        assert self.test_node.nServices & NODE_WITNESS != 0\n+        assert_true(self.test_node.nServices & NODE_WITNESS != 0)\n \n         # Keep a place to store utxo's that can be used in later tests\n         self.utxo = []\n@@ -373,14 +377,14 @@ def test_block_relay(self):\n         block1.solve()\n \n         self.test_node.announce_block_and_wait_for_getdata(block1, use_header=False)\n-        assert self.test_node.last_message[\"getdata\"].inv[0].type == blocktype\n+        assert_equal(self.test_node.last_message[\"getdata\"].inv[0].type, blocktype)\n         test_witness_block(self.nodes[0], self.test_node, block1, True)\n \n         block2 = self.build_next_block()\n         block2.solve()\n \n         self.test_node.announce_block_and_wait_for_getdata(block2, use_header=True)\n-        assert self.test_node.last_message[\"getdata\"].inv[0].type == blocktype\n+        assert_equal(self.test_node.last_message[\"getdata\"].inv[0].type, blocktype)\n         test_witness_block(self.nodes[0], self.test_node, block2, True)\n \n         # Check that we can getdata for witness blocks or regular blocks,\n@@ -409,8 +413,8 @@ def test_block_relay(self):\n             block = self.build_next_block()\n             self.update_witness_block_with_transactions(block, [])\n             # This gives us a witness commitment.\n-            assert len(block.vtx[0].wit.vtxinwit) == 1\n-            assert len(block.vtx[0].wit.vtxinwit[0].scriptWitness.stack) == 1\n+            assert_equal(len(block.vtx[0].wit.vtxinwit), 1)\n+            assert_equal(len(block.vtx[0].wit.vtxinwit[0].scriptWitness.stack), 1)\n             test_witness_block(self.nodes[0], self.test_node, block, accepted=True)\n             # Now try to retrieve it...\n             rpc_block = self.nodes[0].getblock(block.hash, False)\n@@ -536,7 +540,7 @@ def test_witness_tx_relay_before_segwit_activation(self):\n         # Verify that if a peer doesn't set nServices to include NODE_WITNESS,\n         # the getdata is just for the non-witness portion.\n         self.old_node.announce_tx_and_wait_for_getdata(tx)\n-        assert self.old_node.last_message[\"getdata\"].inv[0].type == MSG_TX\n+        assert_equal(self.old_node.last_message[\"getdata\"].inv[0].type, MSG_TX)\n \n         # Since we haven't delivered the tx yet, inv'ing the same tx from\n         # a witness transaction ought not result in a getdata.\n@@ -800,7 +804,7 @@ def test_witness_commitments(self):\n         block_3.vtx[0].vout[-1].nValue += 1\n         block_3.vtx[0].rehash()\n         block_3.hashMerkleRoot = block_3.calc_merkle_root()\n-        assert len(block_3.vtx[0].vout) == 4  # 3 OP_returns\n+        assert_equal(len(block_3.vtx[0].vout), 4)  # 3 OP_returns\n         block_3.solve()\n         test_witness_block(self.nodes[0], self.test_node, block_3, accepted=True)\n \n@@ -831,7 +835,7 @@ def test_block_malleability(self):\n         block.solve()\n \n         block.vtx[0].wit.vtxinwit[0].scriptWitness.stack.append(b'a' * 5000000)\n-        assert block.get_weight() > MAX_BLOCK_WEIGHT\n+        assert_greater_than(block.get_weight(), MAX_BLOCK_WEIGHT)\n \n         # We can't send over the p2p network, because this is too big to relay\n         # TODO: repeat this test with a block that can be relayed\n@@ -840,10 +844,10 @@ def test_block_malleability(self):\n         assert self.nodes[0].getbestblockhash() != block.hash\n \n         block.vtx[0].wit.vtxinwit[0].scriptWitness.stack.pop()\n-        assert block.get_weight() < MAX_BLOCK_WEIGHT\n+        assert_less_than(block.get_weight(), MAX_BLOCK_WEIGHT)\n         assert_equal(None, self.nodes[0].submitblock(block.serialize().hex()))\n \n-        assert self.nodes[0].getbestblockhash() == block.hash\n+        assert_equal(self.nodes[0].getbestblockhash(), block.hash)\n \n         # Now make sure that malleating the witness reserved value doesn't\n         # result in a block permanently marked bad.\n@@ -868,7 +872,7 @@ def test_witness_block_size(self):\n         # Test that witness-bearing blocks are limited at ceil(base + wit/4) <= 1MB.\n         block = self.build_next_block()\n \n-        assert len(self.utxo) > 0\n+        assert_greater_than(len(self.utxo), 0)\n \n         # Create a P2WSH transaction.\n         # The witness script will be a bunch of OP_2DROP's, followed by OP_TRUE.\n@@ -889,7 +893,7 @@ def test_witness_block_size(self):\n         for _ in range(NUM_OUTPUTS):\n             parent_tx.vout.append(CTxOut(child_value, script_pubkey))\n         parent_tx.vout[0].nValue -= 50000\n-        assert parent_tx.vout[0].nValue > 0\n+        assert_greater_than(parent_tx.vout[0].nValue, 0)\n         parent_tx.rehash()\n \n         child_tx = CTransaction()\n@@ -917,7 +921,7 @@ def test_witness_block_size(self):\n         assert_equal(block.get_weight(), MAX_BLOCK_WEIGHT + 1)\n         # Make sure that our test case would exceed the old max-network-message\n         # limit\n-        assert len(block.serialize()) > 2 * 1024 * 1024\n+        assert_greater_than(len(block.serialize()), 2 * 1024 * 1024)\n \n         test_witness_block(self.nodes[0], self.test_node, block, accepted=False, reason='bad-blk-weight')\n \n@@ -927,7 +931,7 @@ def test_witness_block_size(self):\n         block.vtx[0].vout.pop()\n         add_witness_commitment(block)\n         block.solve()\n-        assert block.get_weight() == MAX_BLOCK_WEIGHT\n+        assert_equal(block.get_weight(), MAX_BLOCK_WEIGHT)\n \n         test_witness_block(self.nodes[0], self.test_node, block, accepted=True)\n \n@@ -1091,7 +1095,7 @@ def test_max_witness_script_length(self):\n \n         # This script is 19 max pushes (9937 bytes), then 64 more opcode-bytes.\n         long_witness_script = CScript([b'a' * MAX_SCRIPT_ELEMENT_SIZE] * 19 + [OP_DROP] * 63 + [OP_TRUE])\n-        assert len(long_witness_script) == MAX_WITNESS_SCRIPT_LENGTH + 1\n+        assert_equal(len(long_witness_script), MAX_WITNESS_SCRIPT_LENGTH + 1)\n         long_script_pubkey = script_to_p2wsh_script(long_witness_script)\n \n         block = self.build_next_block()\n@@ -1115,7 +1119,7 @@ def test_max_witness_script_length(self):\n \n         # Try again with one less byte in the witness script\n         witness_script = CScript([b'a' * MAX_SCRIPT_ELEMENT_SIZE] * 19 + [OP_DROP] * 62 + [OP_TRUE])\n-        assert len(witness_script) == MAX_WITNESS_SCRIPT_LENGTH\n+        assert_equal(len(witness_script), MAX_WITNESS_SCRIPT_LENGTH)\n         script_pubkey = script_to_p2wsh_script(witness_script)\n \n         tx.vout[0] = CTxOut(tx.vout[0].nValue, script_pubkey)\n@@ -1144,7 +1148,7 @@ def test_witness_input_length(self):\n         for _ in range(10):\n             tx.vout.append(CTxOut(int(value / 10), script_pubkey))\n         tx.vout[0].nValue -= 1000\n-        assert tx.vout[0].nValue >= 0\n+        assert_greater_than_or_equal(tx.vout[0].nValue, 0)\n \n         block = self.build_next_block()\n         self.update_witness_block_with_transactions(block, [tx])\n@@ -1351,7 +1355,7 @@ def test_segwit_versions(self):\n             temp_utxo.append(UTXO(tx.sha256, 0, tx.vout[0].nValue))\n \n         self.generate(self.nodes[0], 1)  # Mine all the transactions\n-        assert len(self.nodes[0].getrawmempool()) == 0\n+        assert_equal(len(self.nodes[0].getrawmempool()), 0)\n \n         # Finally, verify that version 0 -> version 2 transactions\n         # are standard\n@@ -1625,7 +1629,7 @@ def test_signature_version_1(self):\n             # Create a slight bias for producing more utxos\n             num_outputs = random.randint(1, 11)\n             random.shuffle(temp_utxos)\n-            assert len(temp_utxos) > num_inputs\n+            assert_greater_than(len(temp_utxos), num_inputs)\n             tx = CTransaction()\n             total_value = 0\n             for i in range(num_inputs):\n@@ -1886,7 +1890,7 @@ def test_witness_sigops(self):\n         extra_sigops_available = MAX_SIGOP_COST % sigops_per_script\n \n         # We chose the number of checkmultisigs/checksigs to make this work:\n-        assert extra_sigops_available < 100  # steer clear of MAX_OPS_PER_SCRIPT\n+        assert_less_than(extra_sigops_available, 100)  # steer clear of MAX_OPS_PER_SCRIPT\n \n         # This script, when spent with the first\n         # N(=MAX_SIGOP_COST//sigops_per_script) outputs of our transaction,"
      },
      {
        "sha": "5d7d8f000f742ed232328794dcaa503545a10b4b",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a16a5fd941b3454e8a3d6d1e2cf81f4866fc288c/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a16a5fd941b3454e8a3d6d1e2cf81f4866fc288c/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=a16a5fd941b3454e8a3d6d1e2cf81f4866fc288c",
        "patch": "@@ -69,6 +69,14 @@ def assert_greater_than(thing1, thing2, err_msg=None):\n         raise AssertionError(msg)\n \n \n+def assert_less_than(thing1, thing2, err_msg=None):\n+    if thing1 <= thing2:\n+        msg = \"%s >= %s\" % (str(thing1), str(thing2))\n+        if err_msg is not None:\n+            msg = err_msg\n+        raise AssertionError(msg)\n+\n+\n def assert_greater_than_or_equal(thing1, thing2, err_msg=None):\n     if thing1 < thing2:\n         msg = \"%s < %s\" % (str(thing1), str(thing2))"
      }
    ]
  },
  {
    "sha": "fb6911a6f9599829eed4c76d65884a356d2d4025",
    "node_id": "C_kwDOABII59oAKGZiNjkxMWE2Zjk1OTk4MjllZWQ0Yzc2ZDY1ODg0YTM1NmQyZDQwMjU",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-05T12:36:28Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "p2p_tx_download.py: Use test framework.\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n\n# Title: \n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "f402ec0ae18cbcee44bfbd65ac4f35fb96c1674a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f402ec0ae18cbcee44bfbd65ac4f35fb96c1674a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb6911a6f9599829eed4c76d65884a356d2d4025",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6GAACgkQi23CuHC4\nDV+hbQ//ShxZiH/ynnTcKvEvX7qwl1Ke5zi7QJuR+TCioKPbiIhESLDBJONz67lD\nWo2pbHaGWL6KlhJPJHTsJ9Dbv/ThOHIqEtmPWIVdn+ODPhkMOtp5mxNCLLQ9mpO2\nTK4Nmsu7Cl5V7RkYkAvJkt0YiaSc63ZRWFhaeN6JAi0YvShVEPleNoeuvhPFCYzK\ndIS04U6GxY0Q7Kp/qmINUXSBybXwFytDUnFXWLS620UL2eE9e9Xl3Fp546ys1izi\nRmTzme8iNvAqAjbRsYJfSe6Wz/H1lFkZ7nG5reLS9sIHhTDAytHaBmliZREeGn9g\nS3tX/oaHjzV3D/jNNqRC0h3JlZLI1ZBv2w95JAlEbE8hcZFD0aVeyKXxZDNRPPyB\nl4Z9BfbdzN/qDGxXNIU3lMemMuLwPY51pMD6FSHqsomtF1kbVqQ8uxD0yZNH2vDr\nhDSestlYKvm/tWjJZQ+6oPb8/Rh3huSZMb6+FH+U5NmGq+0Lc/EbT6AbBONVzKP3\nPd3exaGfkQlJNC4f8t0dNG9ANAur2UvVY04QXjcE+HuydLK3ur3l89HHdL05ax0W\ndAp+QG2ZXGd72z9HuQFBWjfeeOAYdPvdYfhxzd56Bc4JhNv0EY1RSU5S3FCq2l5V\nDL3XnHEqMfQqVAYIup9cRZdENGJIRHmb1rL5ybnDAXLezc70N14=\n=QyJY\n-----END PGP SIGNATURE-----",
        "payload": "tree f402ec0ae18cbcee44bfbd65ac4f35fb96c1674a\nparent a16a5fd941b3454e8a3d6d1e2cf81f4866fc288c\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636115788 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\np2p_tx_download.py: Use test framework.\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n\n# Title: \n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb6911a6f9599829eed4c76d65884a356d2d4025",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb6911a6f9599829eed4c76d65884a356d2d4025",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb6911a6f9599829eed4c76d65884a356d2d4025/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a16a5fd941b3454e8a3d6d1e2cf81f4866fc288c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a16a5fd941b3454e8a3d6d1e2cf81f4866fc288c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a16a5fd941b3454e8a3d6d1e2cf81f4866fc288c"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9af78771d07555403377f47502df2c1a06bcb3c3",
        "filename": "test/functional/p2p_tx_download.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb6911a6f9599829eed4c76d65884a356d2d4025/test/functional/p2p_tx_download.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb6911a6f9599829eed4c76d65884a356d2d4025/test/functional/p2p_tx_download.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_tx_download.py?ref=fb6911a6f9599829eed4c76d65884a356d2d4025",
        "patch": "@@ -119,7 +119,7 @@ def test_inv_block(self):\n         #   peer, plus\n         # * the first time it is re-requested from the outbound peer, plus\n         # * 2 seconds to avoid races\n-        assert self.nodes[1].getpeerinfo()[0]['inbound'] == False\n+        assert_equal(self.nodes[1].getpeerinfo()[0]['inbound'], False)\n         timeout = 2 + INBOUND_PEER_TX_DELAY + GETDATA_TX_INTERVAL\n         self.log.info(\"Tx should be received at node 1 after {} seconds\".format(timeout))\n         self.sync_mempools(timeout=timeout)"
      },
      {
        "sha": "9a74111068456e9dbe39e9232ddda763dde17ea6",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb6911a6f9599829eed4c76d65884a356d2d4025/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb6911a6f9599829eed4c76d65884a356d2d4025/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=fb6911a6f9599829eed4c76d65884a356d2d4025",
        "patch": "@@ -70,7 +70,7 @@ def assert_greater_than(thing1, thing2, err_msg=None):\n \n \n def assert_less_than(thing1, thing2, err_msg=None):\n-    if thing1 <= thing2:\n+    if thing1 >= thing2:\n         msg = \"%s >= %s\" % (str(thing1), str(thing2))\n         if err_msg is not None:\n             msg = err_msg"
      }
    ]
  },
  {
    "sha": "28153ee0682df1321c3f82f6e2a2468b1b631b21",
    "node_id": "C_kwDOABII59oAKDI4MTUzZWUwNjgyZGYxMzIxYzNmODJmNmUyYTI0NjhiMWI2MzFiMjE",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-06T07:48:36Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "rpc_createmultisig.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "b852322bd381b40472959fd38a198897a384f7ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b852322bd381b40472959fd38a198897a384f7ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/28153ee0682df1321c3f82f6e2a2468b1b631b21",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6GEACgkQi23CuHC4\nDV84Ag/9HVgNIyqUNUgX2JTnQ4hmv6t4GsbJJR5xJeCr7K0a6bVqYAfneJEbmoAA\nOw5AtKspJ1HJfWjP1z2oD75xxXmxutbCZfJaAB+SnB6t33MESkuU5rPOUvE4wyps\n8MIm5iTev4UEpgj364/kNVkKDf5LcCnej6zB00oleGnicYHVvdMlxMwfCvgJduZh\nu5Cq63//JCWUKbfQY/AcMxGC3wFxLv8jg5CRWOOh2IJGh6y0bwL766N1YdSpwSck\n5fNV3hQ0kDNN1RP4A9UIkxiuI884TlnNgQt8wI55NN7woYMF7VEpi4GlTAAx44op\nL6Ix1ewphkXlUg2PmKtHu/Nf2WdYDTIrfC7pwKEr9YBPPK9vc9XIh3ZxIy3SFbVs\nvccYxWfFpTMdanH8mHOK9ihXJxpNBr5NKjT4V+hdlNRIua1b90vuPCVyI10XqUYQ\ncVprILM73pMT9RhLlVN/0nb5QI3TUjjN5kkNQ96S0Zi098ML3hEp6nBHplyQ0EVs\nwB6R+uINadZj23MGzmRYU2E6EO4ZTgaN6g1bk4O9rdg78D/Uaeyb69iUeJ3mTZPi\nrTn9y0CD21ti05J/+qKbpYGl5BeSfrMh9/0P+bQWH6E0FN5Jl58UpkJ/ZzLWmgAY\nGX1Ik8Y3NdbSfm3K38FhPpx/J8NvsJYdMOF0pXnDCtT0cOkKPZI=\n=ib77\n-----END PGP SIGNATURE-----",
        "payload": "tree b852322bd381b40472959fd38a198897a384f7ce\nparent fb6911a6f9599829eed4c76d65884a356d2d4025\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636184916 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nrpc_createmultisig.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28153ee0682df1321c3f82f6e2a2468b1b631b21",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/28153ee0682df1321c3f82f6e2a2468b1b631b21",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28153ee0682df1321c3f82f6e2a2468b1b631b21/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb6911a6f9599829eed4c76d65884a356d2d4025",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb6911a6f9599829eed4c76d65884a356d2d4025",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb6911a6f9599829eed4c76d65884a356d2d4025"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 9,
      "deletions": 8
    },
    "files": [
      {
        "sha": "661d022a76a9df2f2fbd802b56c9a82e19d7497b",
        "filename": "test/functional/rpc_createmultisig.py",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28153ee0682df1321c3f82f6e2a2468b1b631b21/test/functional/rpc_createmultisig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28153ee0682df1321c3f82f6e2a2468b1b631b21/test/functional/rpc_createmultisig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_createmultisig.py?ref=28153ee0682df1321c3f82f6e2a2468b1b631b21",
        "patch": "@@ -16,6 +16,7 @@\n from test_framework.util import (\n     assert_raises_rpc_error,\n     assert_equal,\n+    assert_true,\n )\n from test_framework.wallet_util import bytes_to_wif\n \n@@ -122,11 +123,11 @@ def checkbalances(self):\n         bal2 = node2.getbalance()\n \n         height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n+        assert_true(150 < height < 350)\n         total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert bal0 + bal1 + bal2 == total\n+        assert_equal(bal1, 0)\n+        assert_equal(bal2, self.moved)\n+        assert_equal(bal0 + bal1 + bal2, total)\n \n     def do_multisig(self):\n         node0, node1, node2 = self.nodes\n@@ -156,22 +157,22 @@ def do_multisig(self):\n         mredeem = msig[\"redeemScript\"]\n         assert_equal(desc, msig['descriptor'])\n         if self.output_type == 'bech32':\n-            assert madd[0:4] == \"bcrt\"  # actually a bech32 address\n+            assert_equal(madd[0:4], \"bcrt\")  # actually a bech32 address\n \n         # compare against addmultisigaddress\n         msigw = wmulti.addmultisigaddress(self.nsigs, self.pub, None, self.output_type)\n         maddw = msigw[\"address\"]\n         mredeemw = msigw[\"redeemScript\"]\n         assert_equal(desc, drop_origins(msigw['descriptor']))\n         # addmultisigiaddress and createmultisig work the same\n-        assert maddw == madd\n-        assert mredeemw == mredeem\n+        assert_equal(maddw, madd)\n+        assert_equal(mredeemw, mredeem)\n \n         txid = node0.sendtoaddress(madd, 40)\n \n         tx = node0.getrawtransaction(txid, True)\n         vout = [v[\"n\"] for v in tx[\"vout\"] if madd == v[\"scriptPubKey\"][\"address\"]]\n-        assert len(vout) == 1\n+        assert_equal(len(vout), 1)\n         vout = vout[0]\n         scriptPubKey = tx[\"vout\"][vout][\"scriptPubKey\"][\"hex\"]\n         value = tx[\"vout\"][vout][\"value\"]"
      }
    ]
  },
  {
    "sha": "7ceebc1dd518dfadef2448cbd0480f92e4f57da1",
    "node_id": "C_kwDOABII59oAKDdjZWViYzFkZDUxOGRmYWRlZjI0NDhjYmQwNDgwZjkyZTRmNTdkYTE",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-06T08:15:20Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "rpc_fundrawtransaction.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "847a68ffbfd2e1e7a2bea228d5149390270fc7ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/847a68ffbfd2e1e7a2bea228d5149390270fc7ae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7ceebc1dd518dfadef2448cbd0480f92e4f57da1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6GIACgkQi23CuHC4\nDV/usQ/+JrW8S4M+Yr7WenWM1saH07wPbBbLWT3Hid3XP/vdm0lfh4QfdkTgmUql\nyLzq9mSpgePMvQRuLO6uABFP4O2cQb7P5FSBY1Y0+ICqItFGA4HhW2NSB1Tg06Tw\n9GkswbN5XN0f2y76SOaNhLSCi77wAnWJJnlFcDIBsh6fXXPmbdIUa6HqsvSrc9WC\nKQAB0yWvgGxQfQuaxbwVUFnT9e1fo7JuZ6FYE47V5S5v9j+uch352wgVQy+dY4Z3\n0KueSehQ65HO/YYD7aGxBTBrECD9sE89eFjE1KWWzti3XZ5oKPTvrfy1W16St1b4\noBTuJF1SIFzJkxXHToNUoge945m1JXrihN/VYcsAimPZrXdhj4pYZyvCUXcsWKef\npuRau1EXjPrICBj7zb9FlEew8duv5FseZu9AfEbZv1tE5jAyr8NtGX1aZ1xyKAi0\nZSWzaZMS7inr+iBhBovgi6XpPR3jvXR2PFdq5u5V9TOCCha7J+gkmOGaYlnU+6wO\nlzPq7EFfKLrt1w+sqm6qknip89llg78UhTQjphFNPtH9FUSkAYpaxVBaaTacEflJ\nCj/3wmRlH8MO6ipHV7RPkezmafvOXTbVWBgiZK0LGJ2LrEffzT5g+lX2FtF776UY\nGwunDUCxnsL9kPRgzQb3Cx2Ib0aAUKFbFVUzVmzNWa7TfaBPoI8=\n=D+Kh\n-----END PGP SIGNATURE-----",
        "payload": "tree 847a68ffbfd2e1e7a2bea228d5149390270fc7ae\nparent 28153ee0682df1321c3f82f6e2a2468b1b631b21\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636186520 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nrpc_fundrawtransaction.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ceebc1dd518dfadef2448cbd0480f92e4f57da1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7ceebc1dd518dfadef2448cbd0480f92e4f57da1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ceebc1dd518dfadef2448cbd0480f92e4f57da1/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "28153ee0682df1321c3f82f6e2a2468b1b631b21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28153ee0682df1321c3f82f6e2a2468b1b631b21",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/28153ee0682df1321c3f82f6e2a2468b1b631b21"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 17,
      "deletions": 10
    },
    "files": [
      {
        "sha": "4cddfb2687513adfadfb6e67a4c58fccf4252e14",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 12,
        "deletions": 10,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7ceebc1dd518dfadef2448cbd0480f92e4f57da1/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7ceebc1dd518dfadef2448cbd0480f92e4f57da1/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=7ceebc1dd518dfadef2448cbd0480f92e4f57da1",
        "patch": "@@ -17,6 +17,8 @@\n     assert_greater_than,\n     assert_greater_than_or_equal,\n     assert_raises_rpc_error,\n+    assert_true,\n+    fail,\n     count_bytes,\n     find_vout_for_address,\n )\n@@ -60,7 +62,7 @@ def lock_outputs_type(self, wallet, outputtype):\n         elif outputtype in [\"bech32\", \"wpkh\"]:\n             prefixes = [\"wpkh(\", \"wsh(\"]\n         else:\n-            assert False, f\"Unknown output type {outputtype}\"\n+            fail(f\"Unknown output type {outputtype}\")\n \n         to_lock = []\n         for utxo in wallet.listunspent():\n@@ -173,7 +175,7 @@ def test_simple(self):\n         dec_tx  = self.nodes[2].decoderawtransaction(rawtx)\n         rawtxfund = self.nodes[2].fundrawtransaction(rawtx)\n         dec_tx  = self.nodes[2].decoderawtransaction(rawtxfund['hex'])\n-        assert len(dec_tx['vin']) > 0  #test that we have enough inputs\n+        assert_greater_than(len(dec_tx['vin']), 0)  #test that we have enough inputs\n \n     def test_simple_two_coins(self):\n         self.log.info(\"Test fundrawtxn with 2 coins\")\n@@ -184,7 +186,7 @@ def test_simple_two_coins(self):\n \n         rawtxfund = self.nodes[2].fundrawtransaction(rawtx)\n         dec_tx  = self.nodes[2].decoderawtransaction(rawtxfund['hex'])\n-        assert len(dec_tx['vin']) > 0  #test if we have enough inputs\n+        assert_greater_than(len(dec_tx['vin']), 0)  #test if we have enough inputs\n         assert_equal(dec_tx['vin'][0]['scriptSig']['hex'], '')\n \n     def test_simple_two_outputs(self):\n@@ -201,7 +203,7 @@ def test_simple_two_outputs(self):\n         for out in dec_tx['vout']:\n             totalOut += out['value']\n \n-        assert len(dec_tx['vin']) > 0\n+        assert_greater_than(len(dec_tx['vin']), 0)\n         assert_equal(dec_tx['vin'][0]['scriptSig']['hex'], '')\n \n     def test_change(self):\n@@ -419,7 +421,7 @@ def test_fee_p2pkh(self):\n \n         # Compare fee.\n         feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee)\n-        assert feeDelta >= 0 and feeDelta <= self.fee_tolerance\n+        assert_true(feeDelta >= 0 and feeDelta <= self.fee_tolerance)\n \n         self.unlock_utxos(self.nodes[0])\n \n@@ -445,7 +447,7 @@ def test_fee_p2pkh_multi_out(self):\n \n         # Compare fee.\n         feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee)\n-        assert feeDelta >= 0 and feeDelta <= self.fee_tolerance\n+        assert_true(feeDelta >= 0 and feeDelta <= self.fee_tolerance)\n \n         self.unlock_utxos(self.nodes[0])\n \n@@ -472,7 +474,7 @@ def test_fee_p2sh(self):\n \n         # Compare fee.\n         feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee)\n-        assert feeDelta >= 0 and feeDelta <= self.fee_tolerance\n+        assert_true(feeDelta >= 0 and feeDelta <= self.fee_tolerance)\n \n         self.unlock_utxos(self.nodes[0])\n \n@@ -516,7 +518,7 @@ def test_fee_4of5(self):\n \n         # Compare fee.\n         feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee)\n-        assert feeDelta >= 0 and feeDelta <= self.fee_tolerance\n+        assert_true(feeDelta >= 0 and feeDelta <= self.fee_tolerance)\n \n         self.unlock_utxos(self.nodes[0])\n \n@@ -648,7 +650,7 @@ def test_many_inputs_fee(self):\n \n         # Compare fee.\n         feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee)\n-        assert feeDelta >= 0 and feeDelta <= self.fee_tolerance * 19  #~19 inputs\n+        assert_true(feeDelta >= 0 and feeDelta <= self.fee_tolerance * 19)  #~19 inputs\n \n     def test_many_inputs_send(self):\n         \"\"\"Multiple (~19) inputs tx test | sign/send.\"\"\"\n@@ -737,7 +739,7 @@ def test_all_watched_funds(self):\n         result = wwatch.fundrawtransaction(rawtx, {'includeWatching': True, 'changeAddress': w3.getrawchangeaddress(), 'subtractFeeFromOutputs': [0]})\n         res_dec = self.nodes[0].decoderawtransaction(result[\"hex\"])\n         assert_equal(len(res_dec[\"vin\"]), 1)\n-        assert res_dec[\"vin\"][0][\"txid\"] == self.watchonly_txid\n+        assert_equal(res_dec[\"vin\"][0][\"txid\"], self.watchonly_txid)\n \n         assert_greater_than(result[\"fee\"], 0)\n         assert_equal(result[\"changepos\"], -1)"
      },
      {
        "sha": "9f422b88bebe0dc04bca4d5ecf2403b1474c1a6d",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7ceebc1dd518dfadef2448cbd0480f92e4f57da1/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7ceebc1dd518dfadef2448cbd0480f92e4f57da1/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=7ceebc1dd518dfadef2448cbd0480f92e4f57da1",
        "patch": "@@ -92,6 +92,7 @@ def assert_true(thing, err_msg=None):\n             msg = err_msg\n         raise AssertionError(msg)\n \n+\n def assert_raises(exc, fun, *args, **kwds):\n     assert_raises_message(exc, None, fun, *args, **kwds)\n \n@@ -224,6 +225,10 @@ def assert_array_result(object_array, to_match, expected, should_not_find=False)\n         raise AssertionError(\"Objects were found %s\" % (str(to_match)))\n \n \n+def fail(message):\n+    raise AssertionError(message)\n+\n+\n # Utility functions\n ###################\n "
      }
    ]
  },
  {
    "sha": "53196b3499b6bef90b90e3494199e100ad9a9d90",
    "node_id": "C_kwDOABII59oAKDUzMTk2YjM0OTliNmJlZjkwYjkwZTM0OTQxOTllMTAwYWQ5YTlkOTA",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-06T08:15:36Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "rpc_help.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "fa8724d56e08d76470431dd2a79ee153ac1cf71d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa8724d56e08d76470431dd2a79ee153ac1cf71d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53196b3499b6bef90b90e3494199e100ad9a9d90",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6GMACgkQi23CuHC4\nDV+o2hAAzzQ+2K01EZ3Bj7+av73RfYPioYphyiz6Ny6vybiHtiGOydiWX5GO1IUb\ntJI7HnRL4gRojZ7yBROfKSJVHWAdr0ME6uJM/cMBqKbWM6MMcITFXJ5mlLVZ6+bI\nFBdrKVEfOSr0nLXfA6yThThSrXsV5Ir3O5c/fyQdrlJY++vV/qWP4ftRpSxWgF3J\nC9YJzc51Sck+T9XZhmV50cBmw9/dAOv1AhWK2tbTAq50XvGBzW1j+kmVm68Rxu0D\nSIvgxFwcHNcUnBq/Vjq4ShEeo7+09rGfhpyCDP3JkJ5exak2LO0tHs2kLZI4rN/2\nJN2g1F0MGDwRvgEcYHlfb4+AFb9aJr+cbuQxbWL2l0nnxH2sndsZHJtoDkoBaVxc\nMNQszWfK9MLffV1OrBzqEtcLrY36gmLjCQjWbsO7GM+xlC/6ogbHh894iGoDNfVU\nLTSeCB4akrTqsVobLKE54KABIAeReV3DUDiBx3+e2g4bRLu4DbJYi6tpjqlz4IVI\njfrS+f1ZfkM6DPJeURKkEFzlzm3HDG6cQvylpII69VSPKUVD0tVTM3q2/HfK9aqP\ntprLO6UzkYeNnC06lbOrIiXTa6RpwD/Khm5In2CEcNsEhgxt5lYBdLpX1Mg4Nzof\np4s9idvxW2toaxPauDc7/1NsPrRM5en9QBfy8/a2XdxpLrzXq74=\n=pf/c\n-----END PGP SIGNATURE-----",
        "payload": "tree fa8724d56e08d76470431dd2a79ee153ac1cf71d\nparent 7ceebc1dd518dfadef2448cbd0480f92e4f57da1\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636186536 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nrpc_help.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53196b3499b6bef90b90e3494199e100ad9a9d90",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/53196b3499b6bef90b90e3494199e100ad9a9d90",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53196b3499b6bef90b90e3494199e100ad9a9d90/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7ceebc1dd518dfadef2448cbd0480f92e4f57da1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ceebc1dd518dfadef2448cbd0480f92e4f57da1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7ceebc1dd518dfadef2448cbd0480f92e4f57da1"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "c45b4432df396a6ab72adba8df80cec2b5d780fb",
        "filename": "test/functional/rpc_help.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53196b3499b6bef90b90e3494199e100ad9a9d90/test/functional/rpc_help.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53196b3499b6bef90b90e3494199e100ad9a9d90/test/functional/rpc_help.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_help.py?ref=53196b3499b6bef90b90e3494199e100ad9a9d90",
        "patch": "@@ -13,8 +13,8 @@\n \n \n def parse_string(s):\n-    assert s[0] == '\"'\n-    assert s[-1] == '\"'\n+    assert_equal(s[0], '\"')\n+    assert_equal(s[-1], '\"')\n     return s[1:-1]\n \n \n@@ -83,7 +83,7 @@ def test_client_conversion_table(self):\n         for argname, convert in converts_by_argname.items():\n             if all(convert) != any(convert):\n                 # Only allow dummy to fail consistency check\n-                assert argname == 'dummy', ('WARNING: conversion mismatch for argument named %s (%s)' % (argname, list(zip(all_methods_by_argname[argname], converts_by_argname[argname]))))\n+                assert_equal(argname, 'dummy', err_msg=('WARNING: conversion mismatch for argument named %s (%s)' % (argname, list(zip(all_methods_by_argname[argname], converts_by_argname[argname])))))\n \n     def test_categories(self):\n         node = self.nodes[0]"
      }
    ]
  },
  {
    "sha": "f1e5715d71e5075b239a651c3e72360489f063dc",
    "node_id": "C_kwDOABII59oAKGYxZTU3MTVkNzFlNTA3NWIyMzlhNjUxYzNlNzIzNjA0ODlmMDYzZGM",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-08T22:22:34Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "rpc_net.py: Using test frameowork\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "72fce941531f6f7975ace7f63234325f08a8b1fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/72fce941531f6f7975ace7f63234325f08a8b1fd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f1e5715d71e5075b239a651c3e72360489f063dc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6GQACgkQi23CuHC4\nDV/tZxAAiu0Cf6R+exrIG+8mYuNFxx4V6oJoAUYVOJeqpnr2SC9HLz+q81sPIVkb\ngx4Nlz+fSEnBno4LFWFsIkNKaDZFzX/RjIuCddUK1z5FkEVhhI62ykNsKDXw96yl\ndz/RwulB9WxGgtubep7QN58hOh2r/yYYqfPsTlEQII2M+jfnjfGPrLD7qYmVC3wL\n/faVKQAGIkqm3eEznvpqG93yBq6HVrsy8KwsTaTUJy8K7n65wX/ptpV+xjaa7X/+\nkqO1zM/QlRWelzsWNiGOytqXMDtoXsq2hxuI8Y2VeXj8CmGb+7Bh8CdkXQmt6N8o\n/09g/3PYb+PNYZ1b7YvnTmGr0KI8kVV+i6aTwnIH0Dy44b+1/qoTR+YtlTqxF71z\nqqTbix/1q5wcm/Ue/6QfT4p/eZRtsYa7H+/b3IIrBKSwAuYq3XL43Ay9z70rcDmz\nsIA5Q4Uqm/9kiOAsubRLO16TiM1dQ/JT6fvmxiceHekHBQIv7K238edMNg6HAybZ\nu25HPuq/2QN0TAJk7C3E6FYDOBt3SspWXGaS8ICQOOHrt0hOnnTqy2E8vL0nZb8a\n6Tj5/rczoh9wP9kwNyuEq6gETCAy7sJSpPbOvg6TJwE7NYRtyVNnC9MqUPPhYNr8\nIf7UEK9XKWMi6s2XsDfgMPyR0sVM8PRQj12IvST+sHfTZY7tXIQ=\n=5QoQ\n-----END PGP SIGNATURE-----",
        "payload": "tree 72fce941531f6f7975ace7f63234325f08a8b1fd\nparent 53196b3499b6bef90b90e3494199e100ad9a9d90\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636410154 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nrpc_net.py: Using test frameowork\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1e5715d71e5075b239a651c3e72360489f063dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f1e5715d71e5075b239a651c3e72360489f063dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1e5715d71e5075b239a651c3e72360489f063dc/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "53196b3499b6bef90b90e3494199e100ad9a9d90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53196b3499b6bef90b90e3494199e100ad9a9d90",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53196b3499b6bef90b90e3494199e100ad9a9d90"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6793e13294f6ab9eb30b40f174758346af7de4a6",
        "filename": "test/functional/rpc_net.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f1e5715d71e5075b239a651c3e72360489f063dc/test/functional/rpc_net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f1e5715d71e5075b239a651c3e72360489f063dc/test/functional/rpc_net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_net.py?ref=f1e5715d71e5075b239a651c3e72360489f063dc",
        "patch": "@@ -38,7 +38,7 @@ def assert_net_servicesnames(servicesflag, servicenames):\n     servicesflag_generated = 0\n     for servicename in servicenames:\n         servicesflag_generated |= getattr(test_framework.messages, 'NODE_' + servicename)\n-    assert servicesflag_generated == servicesflag\n+    assert_equal(servicesflag_generated, servicesflag)\n \n \n class NetTest(BitcoinTestFramework):"
      }
    ]
  },
  {
    "sha": "ae841b28a022042cde7a67a01f61f15cdd9ced68",
    "node_id": "C_kwDOABII59oAKGFlODQxYjI4YTAyMjA0MmNkZTdhNjdhMDFmNjFmMTVjZGQ5Y2VkNjg",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-08T22:27:28Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "tool_wallet.py: Using test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "85e40ffaf8ce5e8544329693f13c256040ef55b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85e40ffaf8ce5e8544329693f13c256040ef55b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae841b28a022042cde7a67a01f61f15cdd9ced68",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6GUACgkQi23CuHC4\nDV8e4A//VdImsB8DLIwCW106g/aderpVtLc9t+yxY78L0ewTUvE3b3c0pEocoBCP\nFsjt4l5Kl4BAlTMMr3Z0mFUvK8ucW3V/TDe9PtJs+bsnokSwUsm8j3A3c/oG19QB\nnXTzBo2yZfv6dvJFW2SlOw70CJzbA73VIinELLP6boNCBjXY4qWJ/oRaMEZDR6aq\nVpk+kamocUMtQGFfFU2O+4icd5witDa1LqYA/hYGJkOF4TR8zDUuPa7HSZwoqtWL\nuxRZtIOF53E2GVFF3nYQIEoRTm+GFfORr8Wo1jgH+nnv8lYuHSlOgEUFyEoek4rY\nxg7SFLUU5XgPX2+Pd2auYAP2RKnfhCu071CPM4YP1yWRXxTRec8Enpw1GhbM05nM\nlgtgORx80sTjbdjYd+sshpuDBLoyzKjZ0L6cN1nuHARI8j7bpQsxi+JGIn+ushzO\n0xx2vidIbznTj2hOe/SU8aUBhY4SXrjCqpTLxvUfUlTpXUreh6HUCIrpIB0z2yjN\nLmsWOWphCKrOEHaZ04gqiqfUvrt1wu0zAmwWdNpAZM89++TbuHNc6SXVOfy+ln73\niT9Rsxm9WiIrYEatpY81ZJlPzBrFjMny6pESppH1sKu92scIor+0TkOWnIBu9VvF\nrXD/dvmkr90/FMHm1CvvEysnfXwTI6psKdk3H9lYEaxfOuu2d4A=\n=b1eI\n-----END PGP SIGNATURE-----",
        "payload": "tree 85e40ffaf8ce5e8544329693f13c256040ef55b2\nparent f1e5715d71e5075b239a651c3e72360489f063dc\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636410448 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\ntool_wallet.py: Using test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae841b28a022042cde7a67a01f61f15cdd9ced68",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ae841b28a022042cde7a67a01f61f15cdd9ced68",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae841b28a022042cde7a67a01f61f15cdd9ced68/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f1e5715d71e5075b239a651c3e72360489f063dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1e5715d71e5075b239a651c3e72360489f063dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f1e5715d71e5075b239a651c3e72360489f063dc"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "36062b81a363780040f054028cc09caf4dd2f2b9",
        "filename": "test/functional/tool_wallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae841b28a022042cde7a67a01f61f15cdd9ced68/test/functional/tool_wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae841b28a022042cde7a67a01f61f15cdd9ced68/test/functional/tool_wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/tool_wallet.py?ref=ae841b28a022042cde7a67a01f61f15cdd9ced68",
        "patch": "@@ -111,7 +111,7 @@ def read_dump(self, filename):\n     def assert_is_sqlite(self, filename):\n         with open(filename, 'rb') as f:\n             file_magic = f.read(16)\n-            assert file_magic == b'SQLite format 3\\x00'\n+            assert_equal(file_magic, b'SQLite format 3\\x00')\n \n     def assert_is_bdb(self, filename):\n         with open(filename, 'rb') as f:"
      }
    ]
  },
  {
    "sha": "16cdcfa9e244b3fb2c2b614ffed731c950817f52",
    "node_id": "C_kwDOABII59oAKDE2Y2RjZmE5ZTI0NGIzZmIyYzJiNjE0ZmZlZDczMWM5NTA4MTdmNTI",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-08T22:32:52Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "wallet_address_types.py: using test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "f70822e9bb64f91eed7df5440ac6c2ac3ab617a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f70822e9bb64f91eed7df5440ac6c2ac3ab617a2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16cdcfa9e244b3fb2c2b614ffed731c950817f52",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6GYACgkQi23CuHC4\nDV8l0g/9ErZz81zEhwxLXtdtBG10U7/q92qyjyDZ4uUkIojj+FQ08+wj+5QZjdcF\n66aigUr6V4g4phOKR5is0XmYcL8JYUd6NUaRuOOOTZb///Pi5lYhwa2gpiY2aZlt\nCIavByB//OmHtJu/ZwNIKl65zo+LaATNMFlq6OTTy0WHIa51/w4view1126xL7S0\nKo4QKJF4IpBRJZ4U+U2FdQfHeAoo/1Ni5wZy7axxbd0AJWcMzC09SnX9g2yvtLwd\nH+k0IgigMUbUJAOIKWyOh97JGp/eVijsjG2fejUTjr7kHPD+oUyjCPENmCsP717F\nAxDA0dB0AmMJE2vF6XzHbhPVeMpl/T99IXWcJQUFZl+cuVg+N9ZqMm+ICIveEqm0\nYGeUUjQLzGuvfS5HHFsBctnFnHl55bgoob26gECNr6Y77u3sgLb7ZspFTBKyAwz/\nGi8vx+MNRFz4I65sZza+QsedUI0JyxnbXEZQ8LEmfwJO0Tht9XTUSaz2eUNfUowm\n1LRFitxL+urb3n8k3b2htDKH2+WOwWGgHSgfVAEQoIa1zkXO5gQW5WzCY0u2hurN\nk1VIC6GIeVJRGxXgQjc75B7yctRulrqpOLX0edR2QxbqFsvvhZWnIqglNlsV7Rgi\nsdlsXVBOuRJtrtfwZsGpC1AeZgofokS7NmGghAey57xPdV2DjUY=\n=qSdw\n-----END PGP SIGNATURE-----",
        "payload": "tree f70822e9bb64f91eed7df5440ac6c2ac3ab617a2\nparent ae841b28a022042cde7a67a01f61f15cdd9ced68\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636410772 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nwallet_address_types.py: using test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16cdcfa9e244b3fb2c2b614ffed731c950817f52",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/16cdcfa9e244b3fb2c2b614ffed731c950817f52",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16cdcfa9e244b3fb2c2b614ffed731c950817f52/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae841b28a022042cde7a67a01f61f15cdd9ced68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae841b28a022042cde7a67a01f61f15cdd9ced68",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae841b28a022042cde7a67a01f61f15cdd9ced68"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "bdcedd3dbad107bf79aa898f9e46cc7bafd9e24f",
        "filename": "test/functional/wallet_address_types.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16cdcfa9e244b3fb2c2b614ffed731c950817f52/test/functional/wallet_address_types.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16cdcfa9e244b3fb2c2b614ffed731c950817f52/test/functional/wallet_address_types.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_address_types.py?ref=16cdcfa9e244b3fb2c2b614ffed731c950817f52",
        "patch": "@@ -63,6 +63,7 @@\n     assert_equal,\n     assert_greater_than,\n     assert_raises_rpc_error,\n+    fail,\n )\n \n class AddressTypeTest(BitcoinTestFramework):\n@@ -178,12 +179,12 @@ def test_desc(self, node, address, multisig, typ, utxo):\n         # Verify the descriptor checksum against the Python implementation\n         assert descsum_check(info['desc'])\n         # Verify that stripping the checksum and recreating it using Python roundtrips\n-        assert info['desc'] == descsum_create(info['desc'][:-9])\n+        assert_equal(info['desc'], descsum_create(info['desc'][:-9]))\n         # Verify that stripping the checksum and feeding it to getdescriptorinfo roundtrips\n-        assert info['desc'] == self.nodes[0].getdescriptorinfo(info['desc'][:-9])['descriptor']\n+        assert_equal(info['desc'], self.nodes[0].getdescriptorinfo(info['desc'][:-9])['descriptor'])\n         assert_equal(info['desc'][-8:], self.nodes[0].getdescriptorinfo(info['desc'][:-9])['checksum'])\n         # Verify that keeping the checksum and feeding it to getdescriptorinfo roundtrips\n-        assert info['desc'] == self.nodes[0].getdescriptorinfo(info['desc'])['descriptor']\n+        assert_equal(info['desc'], self.nodes[0].getdescriptorinfo(info['desc'])['descriptor'])\n         assert_equal(info['desc'][-8:], self.nodes[0].getdescriptorinfo(info['desc'])['checksum'])\n \n         if not multisig and typ == 'legacy':\n@@ -206,7 +207,7 @@ def test_desc(self, node, address, multisig, typ, utxo):\n             assert_equal(info['desc'], descsum_create(\"wsh(multi(2,%s,%s))\" % (key_descs[info['pubkeys'][0]], key_descs[info['pubkeys'][1]])))\n         else:\n             # Unknown type\n-            assert False\n+            fail(\"Unknown type\")\n \n     def test_change_output_type(self, node_sender, destinations, expected_type):\n         txid = self.nodes[node_sender].sendmany(dummy=\"\", amounts=dict.fromkeys(destinations, 0.001))"
      }
    ]
  },
  {
    "sha": "c637b1db42c7bfd97646d513e280331e1fad582f",
    "node_id": "C_kwDOABII59oAKGM2MzdiMWRiNDJjN2JmZDk3NjQ2ZDUxM2UyODAzMzFlMWZhZDU4MmY",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-09T07:36:57Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "wallet_disable.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "f4dc44474cde72c33cb0a7dfe4d7fcdeae1a04f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f4dc44474cde72c33cb0a7dfe4d7fcdeae1a04f6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c637b1db42c7bfd97646d513e280331e1fad582f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6GcACgkQi23CuHC4\nDV9mlA//fnYqe57bsplvnwVoFtfPMeplGxreaKxIR64a+LNp8S1zBFUzsE9ITU/1\nz8NonSM7GoI7/VsvhVaftWLyWR2tYjHVS0GNOo96/AF7LmX6JW4iHAltJFpDMICd\n8GXyXpe6aLfSv0FuWJrIbN6oRLcKlknUm/wGePGg4hlAvm31t2Gtcy72JdTDyVmk\nlQX3OHi3lDdF9W454LEg56dqUEAIUyW0FIg/9XYqvk8HqadoXh4QqZ3Zhds67+DF\nAh0wRK5prMUij9girdFx4mL1Sz8hfqlyW1/qabJ/Wfs9ilRKWkvZCv1SVDTTMi1a\n2kfjYK3bjFDJGnSOVYlGJvrvlgnB1Sp2tt8QVwVkzCMQo32612rMoSZiqDucm+wL\ntFawHhX1ZVR8ba9EszrkWlRg2MFn7+dAQa29dyUa464eidOUnSpVYaT5p7PMGCqs\nsRFSrczIOuUpsOG+rPHlS8lY0tEpopI7vXBieh/xx+oVCqGvtG5yRqfJTzNf5ryB\nWJY0LdGgfi5/QDxiu0wotYW1z+n4xaofIRVmhKWAX1KqzUyQom/OkPq2biEEuQo6\nmgeep5vXtWRm9CDBg4fab22XQML/OuOfcFh9D+3ml73/SMYk0iSTdWxGmpS9qeQC\nQeOaZHZ0BUCHMpMuaiCpQCOapnHfkJ+1wEVuvHErDXgfyv0mn/c=\n=hf1k\n-----END PGP SIGNATURE-----",
        "payload": "tree f4dc44474cde72c33cb0a7dfe4d7fcdeae1a04f6\nparent 16cdcfa9e244b3fb2c2b614ffed731c950817f52\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636443417 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nwallet_disable.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c637b1db42c7bfd97646d513e280331e1fad582f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c637b1db42c7bfd97646d513e280331e1fad582f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c637b1db42c7bfd97646d513e280331e1fad582f/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "16cdcfa9e244b3fb2c2b614ffed731c950817f52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16cdcfa9e244b3fb2c2b614ffed731c950817f52",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16cdcfa9e244b3fb2c2b614ffed731c950817f52"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 6,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d589f9255ae1b3f60299ae34681e91b3e9dbbbfe",
        "filename": "test/functional/wallet_disable.py",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c637b1db42c7bfd97646d513e280331e1fad582f/test/functional/wallet_disable.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c637b1db42c7bfd97646d513e280331e1fad582f/test/functional/wallet_disable.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_disable.py?ref=c637b1db42c7bfd97646d513e280331e1fad582f",
        "patch": "@@ -9,7 +9,10 @@\n \"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_raises_rpc_error\n+from test_framework.util import (\n+    assert_raises_rpc_error,\n+    assert_equal,\n+)\n \n class DisableWalletTest (BitcoinTestFramework):\n     def set_test_params(self):\n@@ -22,9 +25,9 @@ def run_test (self):\n         # Make sure wallet is really disabled\n         assert_raises_rpc_error(-32601, 'Method not found', self.nodes[0].getwalletinfo)\n         x = self.nodes[0].validateaddress('3J98t1WpEZ73CNmQviecrnyiWrnqRhWNLy')\n-        assert x['isvalid'] == False\n+        assert_equal(x['isvalid'], False)\n         x = self.nodes[0].validateaddress('mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ')\n-        assert x['isvalid'] == True\n+        assert_equal(x['isvalid'], True)\n \n         # Checking mining to an address without a wallet. Generating to a valid address should succeed\n         # but generating to an invalid address will fail."
      }
    ]
  },
  {
    "sha": "935f90b2bc5dc2ad82a8b1865e5b5cf4b53cdc8a",
    "node_id": "C_kwDOABII59oAKDkzNWY5MGIyYmM1ZGMyYWQ4MmE4YjE4NjVlNWI1Y2Y0YjUzY2RjOGE",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-09T07:38:04Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "wallet_dump.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "dcd1fcfb91a09d317cdd925ad7eff93b4bd84cd6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dcd1fcfb91a09d317cdd925ad7eff93b4bd84cd6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/935f90b2bc5dc2ad82a8b1865e5b5cf4b53cdc8a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6GgACgkQi23CuHC4\nDV8eVRAAzMJidtTHn9FVf2OowDvgbQcz/1YLBu2K+31wiTFJX3mKIEV+HuAU6qBi\nQO/Jr1AdxSm0A3rjtJ/b2A4OhR2l6Syl3It2VHg5iJ3+wZAIftikacie7KT015UO\nQPfD1v9sxdUpf+ilMs1Dxrp0Wq6yAQvnRQzLizFIwmv0sZXV5TS76uIF3PIgVEHH\nOoJH48ImHwfvUs5P+sWjz8VINJBW4BT5BQrS6WPX6OP4x//RLD0Kh3v+WwJ4pUZ+\nb4DBLEJoOlG8REkWAjiQXeOA6NA27TPPl21hIUZPWOXM0WtDHUWDqif1NCUWyFH6\npHZDU0XYMRjgZ1r0XwdYY3gxnMqCwVNjgdSbo1HW6itBjClMPlEb0W3UbbXuf5B1\noT9IG0zhJROL9cWfgOY8urxGbH+8fdJop/gPz20KnTXgJX6N6JdGooO7pfhaHnYn\nAAW+Qo7APVGCCEngbIxIOXWkuSSn/ycTaHRPKwVlQsLnyvdRnLZynxuGYXEOwohS\nLI+XiWGzIVfEshiFFBw2+NEWZWPI9avCzcgLJWk0u8zKwwkfRk4FvrFGnZMyx6mc\nEDgKSOKkySJyrZE8ej8CuiL5432DsJ7KUWobnqPRVMt6j9CqY7XwG34WYr3/OpQ8\ntlA3zd2TN4wOYIThIHjRAnv7wMihQHkk9YJqr51yWCX6VO2qRLg=\n=xufw\n-----END PGP SIGNATURE-----",
        "payload": "tree dcd1fcfb91a09d317cdd925ad7eff93b4bd84cd6\nparent c637b1db42c7bfd97646d513e280331e1fad582f\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636443484 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nwallet_dump.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/935f90b2bc5dc2ad82a8b1865e5b5cf4b53cdc8a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/935f90b2bc5dc2ad82a8b1865e5b5cf4b53cdc8a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/935f90b2bc5dc2ad82a8b1865e5b5cf4b53cdc8a/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c637b1db42c7bfd97646d513e280331e1fad582f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c637b1db42c7bfd97646d513e280331e1fad582f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c637b1db42c7bfd97646d513e280331e1fad582f"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "174865eeaf0c2f111b152c33d471b71265c620e2",
        "filename": "test/functional/wallet_dump.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/935f90b2bc5dc2ad82a8b1865e5b5cf4b53cdc8a/test/functional/wallet_dump.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/935f90b2bc5dc2ad82a8b1865e5b5cf4b53cdc8a/test/functional/wallet_dump.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_dump.py?ref=935f90b2bc5dc2ad82a8b1865e5b5cf4b53cdc8a",
        "patch": "@@ -53,7 +53,7 @@ def read_dump(file_name, addrs, script_addrs, hd_master_addr_old):\n                 keypath = None\n                 if keytype == \"inactivehdseed=1\":\n                     # ensure the old master is still available\n-                    assert hd_master_addr_old == addr\n+                    assert_equal(hd_master_addr_old, addr)\n                 elif keytype == \"hdseed=1\":\n                     # ensure we have generated a new hd master key\n                     assert hd_master_addr_old != addr"
      }
    ]
  },
  {
    "sha": "c914978f7c08e24b9e477595bd07032e4cc4ab89",
    "node_id": "C_kwDOABII59oAKGM5MTQ5NzhmN2MwOGUyNGI5ZTQ3NzU5NWJkMDcwMzJlNGNjNGFiODk",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-09T07:40:00Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "wallet_keypool.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "8c3dd9135e110c4388e75c3144db376c01f5cf92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c3dd9135e110c4388e75c3144db376c01f5cf92"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c914978f7c08e24b9e477595bd07032e4cc4ab89",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6GkACgkQi23CuHC4\nDV8hoRAAyVaEbBhTL2Ri2qQgrvXXKBx4ae1FiZ/6yDZFlfUyCcrewIkXK8gPQ2w1\nYGhawUX6uWnNwJeZpXpG49S6wFBmxCKrCE8r7PnCPmhJDCekd1D072htj3M+2M9d\nB2ka+rpnn7GNeDGo6VVQ9IJhrAfXnQLNgdltuptJZeduGu1zzWnbk9zWvaiulSmU\np4bH3d7s4KB7TXE/eAumUoRTxlJd4HU5c7mIuoyrDUZ9TDXVe+MZoAKvpyEWiB4y\nlHx3xMJ2HohlJrYrqLOD3gOySEqbT+lcQM8ZLL9fwdrmd2+mgfpVaCaG7ysCzGZX\nAGKhhMv8a5/8x0KSm0p0ciD4+ro0vFJHCCnZcOebRo8xb8ziAk/mBFKNEky1bsIw\nJx4kF4LWBIymQYbMZevi/6IgCRw4T/H151T50TlvqJkfb0xYWPKvtkEmVaqPZUdW\n4oKHYLCpp6hR9HZhc1casTvCEHVHAf6YDFk4IOQvEmQ/ttOyMJQqkhktvAMtErOZ\nbMlGARSWUusUyFnBsdnmttNWe1Gp1FMWLjzdG8mMGfwLul/GxntbdVKzuA4Tk4uq\njwfTR4H28kBv2tQEpaE8+R9CGCpRalbI+bqXwda733cy37VRa3DI5Sylkw4SALcm\nMwZew+9z1YQoPCJxMkZfKNLEclFvvaiNhCIbXcto3GyAE/KJHGs=\n=Rsra\n-----END PGP SIGNATURE-----",
        "payload": "tree 8c3dd9135e110c4388e75c3144db376c01f5cf92\nparent 935f90b2bc5dc2ad82a8b1865e5b5cf4b53cdc8a\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636443600 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nwallet_keypool.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c914978f7c08e24b9e477595bd07032e4cc4ab89",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c914978f7c08e24b9e477595bd07032e4cc4ab89",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c914978f7c08e24b9e477595bd07032e4cc4ab89/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "935f90b2bc5dc2ad82a8b1865e5b5cf4b53cdc8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/935f90b2bc5dc2ad82a8b1865e5b5cf4b53cdc8a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/935f90b2bc5dc2ad82a8b1865e5b5cf4b53cdc8a"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d48c0722a46913f226114cb806627fbbf3167371",
        "filename": "test/functional/wallet_keypool.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c914978f7c08e24b9e477595bd07032e4cc4ab89/test/functional/wallet_keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c914978f7c08e24b9e477595bd07032e4cc4ab89/test/functional/wallet_keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_keypool.py?ref=c914978f7c08e24b9e477595bd07032e4cc4ab89",
        "patch": "@@ -23,7 +23,7 @@ def run_test(self):\n         addr_before_encrypting_data = nodes[0].getaddressinfo(addr_before_encrypting)\n         wallet_info_old = nodes[0].getwalletinfo()\n         if not self.options.descriptors:\n-            assert addr_before_encrypting_data['hdseedid'] == wallet_info_old['hdseedid']\n+            assert_equal(addr_before_encrypting_data['hdseedid'], wallet_info_old['hdseedid'])\n \n         # Encrypt wallet and wait to terminate\n         nodes[0].encryptwallet('test')\n@@ -78,7 +78,7 @@ def run_test(self):\n         wallet_info = nodes[0].getwalletinfo()\n         assert addr_before_encrypting_data['hdmasterfingerprint'] != addr_data['hdmasterfingerprint']\n         if not self.options.descriptors:\n-            assert addr_data['hdseedid'] == wallet_info['hdseedid']\n+            assert_equal(addr_data['hdseedid'], wallet_info['hdseedid'])\n         assert_raises_rpc_error(-12, \"Error: Keypool ran out, please call keypoolrefill first\", nodes[0].getnewaddress)\n \n         # put six (plus 2) new keys in the keypool (100% external-, +100% internal-keys, 1 in min)\n@@ -111,7 +111,7 @@ def run_test(self):\n         addr.add(nodes[0].getnewaddress(address_type=\"bech32\"))\n         addr.add(nodes[0].getnewaddress(address_type=\"bech32\"))\n         addr.add(nodes[0].getnewaddress(address_type=\"bech32\"))\n-        assert len(addr) == 6\n+        assert_equal(len(addr), 6)\n         # the next one should fail\n         assert_raises_rpc_error(-12, \"Error: Keypool ran out, please call keypoolrefill first\", nodes[0].getnewaddress)\n "
      }
    ]
  },
  {
    "sha": "1346c11926e40f5851de37407b1d13bd17f3622c",
    "node_id": "C_kwDOABII59oAKDEzNDZjMTE5MjZlNDBmNTg1MWRlMzc0MDdiMWQxM2JkMTdmMzYyMmM",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-09T07:41:29Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "wallet_listdescriptors.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "46accc52504498946dcc861b3e5e89b18d609ec2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46accc52504498946dcc861b3e5e89b18d609ec2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1346c11926e40f5851de37407b1d13bd17f3622c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6GoACgkQi23CuHC4\nDV/8xQ//VuWSlP2RSes0nbgWC1e/tuyqIGEpPs69Ej+gAPhl5zsqQ/k9e0jQHlpd\nhh/4etzTqY6boMGa6sQZ4s+sYOkHr7i5Z873XYw6d6Mm/zENR50O3Wom9IDTDpez\nT269/UcuG0yvS5Tnv5fhbeFCreY3Z4i+DiCEGTQHyjoJ7/6is4yAULlR7fTbXJar\nIOJOaoRCc8RniJzRvpE8uAZOUwjRqB928NeJCZ9J9P6yRCHCVkBo90LUVFzKBKz/\nCutOobL1z2ASs5czpntE7djKRZtEc+g0iYq/nII5Jnri5SpR8lUjF91kmLbKZP03\neiYiAwqes4d16u7mTIURTaatKKtwancMTv84vU+FRZcgS6sInwYaRL6hGPku5/w9\nMYXG8M6Bu/+dPYi0BqW5qkDsr8/fehWxpapwm1ySvlw/hgGMeZrcGTr7n0iudO4X\nJl+Kzd+DCbEYVr9dHkgXeuWhgzkSp7rPydE1y2pWAZPljjptS3Oqb1sH/VdybVhn\nCX5aekfgTy7CdBr1jMZ3adNJxeAIFiufmV51Es4hABt+YZ98Ue7S0j/MoAxViqQK\n+ImioeM4A3bciF4wAjb7HlsDPT7kxskE3ydm3d12Mz1ZCvY60x9dEIKGv4sInnNE\nyWL5Q3Gjk76wykhjqmddYNGrj+CajL7mSdeLuwsOespXeClYTvQ=\n=wRua\n-----END PGP SIGNATURE-----",
        "payload": "tree 46accc52504498946dcc861b3e5e89b18d609ec2\nparent c914978f7c08e24b9e477595bd07032e4cc4ab89\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636443689 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nwallet_listdescriptors.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1346c11926e40f5851de37407b1d13bd17f3622c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1346c11926e40f5851de37407b1d13bd17f3622c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1346c11926e40f5851de37407b1d13bd17f3622c/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c914978f7c08e24b9e477595bd07032e4cc4ab89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c914978f7c08e24b9e477595bd07032e4cc4ab89",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c914978f7c08e24b9e477595bd07032e4cc4ab89"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "08c9eec5056c085a95e5bd0bd914b31ec1ef0c16",
        "filename": "test/functional/wallet_listdescriptors.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1346c11926e40f5851de37407b1d13bd17f3622c/test/functional/wallet_listdescriptors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1346c11926e40f5851de37407b1d13bd17f3622c/test/functional/wallet_listdescriptors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listdescriptors.py?ref=1346c11926e40f5851de37407b1d13bd17f3622c",
        "patch": "@@ -48,8 +48,8 @@ def run_test(self):\n         assert_equal(4, len([d for d in result['descriptors'] if d['internal']]))\n         for item in result['descriptors']:\n             assert item['desc'] != ''\n-            assert item['next'] == 0\n-            assert item['range'] == [0, 0]\n+            assert_equal(item['next'], 0)\n+            assert_equal(item['range'], [0, 0])\n             assert item['timestamp'] is not None\n \n         self.log.info('Test descriptors with hardened derivations are listed in importable form.')"
      }
    ]
  },
  {
    "sha": "e7f1cde660545fd53d9410ca5d2e809b9c88ede2",
    "node_id": "C_kwDOABII59oAKGU3ZjFjZGU2NjA1NDVmZDUzZDk0MTBjYTVkMmU4MDliOWM4OGVkZTI",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-09T07:42:48Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "wallet_listsinceblock.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "35a485ea6a35f132639cbdaa047e29f066e27ab2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/35a485ea6a35f132639cbdaa047e29f066e27ab2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7f1cde660545fd53d9410ca5d2e809b9c88ede2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6GsACgkQi23CuHC4\nDV9WkA/+LCRZ70cIn2miRJDpqXfb+PpHI+3mUcd5FjdL7omWLzU34Byg+YLAXryo\nwqei6JDdGwt762jCl9djLwUX4wMbqwNXmiCq6/RLBGazb+Ns6ZO/opSPjCddXEU9\nSk+kHPBV4+9Gjc/9UbZVFS2oHIkgOA0NgK8q6GGyl0bxx42SM9TZ5zhuOjrR4jnF\nH1LYt6Fpb5ZUhRd64Ll3FyQhnw+aE74YbkqK2+yCZ+0mje5dgKbpRVpEh9MNzJ08\nFvXsgndAFFk32TyujI22W78R9spiACitzRSvhXPeZMXADxnP9tfGJTp3bd5AwE6K\nuGLMzAn0mjKc4gJBMHX54YxBhIVLvfXgvhoUGJi11UJAvbRFtIGL5jAMGqn+QRaU\nho0mx/zQNK28QBcT5WHZTaq4ehpj8fLBGpmMe4FYo3XmIkNF1WIG6HY3t+YelpX6\nmKmVCXBK18ZNU7nO98khSvW/ZGXemrqX0YTyIIBWmz/J1qmZ+ZOvA5R55NIuY6sZ\nu4wQq1tKlOLhKN0EYDFgWnbmaxZ5qeskLI0g/N+1JF9kifnEoAcjbJ/AU1tjpTKk\nJi5bWS+1e5DruaBc07pCVBhKgZ1Zl8cZnQRvzzfUbpPGxWHZN/Ag9TVR4aIiZDVq\nyp7QGtEAUc2RDYiDW7SXwMVJJxcoNUSofpYQNb7P623JcWyevbc=\n=55Sv\n-----END PGP SIGNATURE-----",
        "payload": "tree 35a485ea6a35f132639cbdaa047e29f066e27ab2\nparent 1346c11926e40f5851de37407b1d13bd17f3622c\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636443768 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nwallet_listsinceblock.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7f1cde660545fd53d9410ca5d2e809b9c88ede2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e7f1cde660545fd53d9410ca5d2e809b9c88ede2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7f1cde660545fd53d9410ca5d2e809b9c88ede2/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1346c11926e40f5851de37407b1d13bd17f3622c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1346c11926e40f5851de37407b1d13bd17f3622c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1346c11926e40f5851de37407b1d13bd17f3622c"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "be5654238210dd6a447c7ed53aecffbd1070628c",
        "filename": "test/functional/wallet_listsinceblock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7f1cde660545fd53d9410ca5d2e809b9c88ede2/test/functional/wallet_listsinceblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7f1cde660545fd53d9410ca5d2e809b9c88ede2/test/functional/wallet_listsinceblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listsinceblock.py?ref=e7f1cde660545fd53d9410ca5d2e809b9c88ede2",
        "patch": "@@ -237,7 +237,7 @@ def test_double_spend(self):\n         self.sync_all()\n \n         # gettransaction should work for txid1\n-        assert self.nodes[0].gettransaction(txid1)['txid'] == txid1, \"gettransaction failed to find txid1\"\n+        assert_equal(self.nodes[0].gettransaction(txid1)['txid'], txid1, err_msg=\"gettransaction failed to find txid1\")\n \n         # listsinceblock(lastblockhash) should now include txid1, as seen from nodes[0]\n         lsbres = self.nodes[0].listsinceblock(lastblockhash)"
      }
    ]
  },
  {
    "sha": "5a1e9f0951226fb94ef3bf98786df9b2d142cda0",
    "node_id": "C_kwDOABII59oAKDVhMWU5ZjA5NTEyMjZmYjk0ZWYzYmY5ODc4NmRmOWIyZDE0MmNkYTA",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-09T07:44:20Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:11:58Z"
      },
      "message": "wallet_listtransactions.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "5dc05312957e22aeb4618f3cf345f723a670320c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5dc05312957e22aeb4618f3cf345f723a670320c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a1e9f0951226fb94ef3bf98786df9b2d142cda0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6GwACgkQi23CuHC4\nDV+lwg//QEI4UjQ+IoxBXl4w8SWis7k4FtMOQaNaj2YWbF2yZlz3vUUrU/6PIx8y\nTM4GOIjuSKCYLwECP9c13SzlGKjwYElGfjy7WaHp5DvFlJOJvaICHKi06P20aLTp\nE+Q1b2+12WmpOMX/Z9rjQosDNKq7kDcWIAdBRCFf6Mwh7a3qFx0l5T0r96QytZ+l\naILYvisPejYwKlfdp1vw35o2jhxCaaZngmrMiUI37AI9/yzeg/7GpUyZfNY6AhPJ\nUF/lY/9dGMVlk96g5IxUhbr3pm4mrkiISVk4MWQWa/DcTc3BQDlk9H/MyiQ3/wbq\ny2yAjFwtRQh1XqtDaiym4nA4zMgbMwoXmSCdZGfcrNwMjc7BDzZF4ducluiDByvh\n0Fx6Dt8ZTeyak67K9ObqU5O5FZxndYtkgknzISV9r8bKiwN5AecpZxvfO5bNHC6A\nDymKUgIEGW7WZmfwJECljpDU+Pl61mPvst/cPh2CattLzbKG9K5TDSVTpeg7sHve\nVQLh89UGQ/HfP7H1wcCgKWXufo3hY+z9qRtPnOiAXXnH1/OFGbdF3Kj4bcq6RnJn\nBA4qrhoulTb4tKQpjrpGNf0h3rhHODcUyOOLuJII9qHPL6JsSJorLHfrFCFNnDfR\nPCn/mFciiXUFcwRKIvNbBwNdXpgtWT/Z+8q5LdZ1kGtN2FCQ7RI=\n=f+a/\n-----END PGP SIGNATURE-----",
        "payload": "tree 5dc05312957e22aeb4618f3cf345f723a670320c\nparent e7f1cde660545fd53d9410ca5d2e809b9c88ede2\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636443860 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000718 +0100\n\nwallet_listtransactions.py: Use test framework\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a1e9f0951226fb94ef3bf98786df9b2d142cda0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a1e9f0951226fb94ef3bf98786df9b2d142cda0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a1e9f0951226fb94ef3bf98786df9b2d142cda0/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e7f1cde660545fd53d9410ca5d2e809b9c88ede2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7f1cde660545fd53d9410ca5d2e809b9c88ede2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e7f1cde660545fd53d9410ca5d2e809b9c88ede2"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "be1450d1c19a7d1f2275d70d8aac997fa1ccccba",
        "filename": "test/functional/wallet_listtransactions.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a1e9f0951226fb94ef3bf98786df9b2d142cda0/test/functional/wallet_listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a1e9f0951226fb94ef3bf98786df9b2d142cda0/test/functional/wallet_listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listtransactions.py?ref=5a1e9f0951226fb94ef3bf98786df9b2d142cda0",
        "patch": "@@ -96,7 +96,7 @@ def run_test(self):\n             self.generate(self.nodes[1], 1)\n             assert_equal(len(self.nodes[0].listtransactions(label=\"watchonly\", include_watchonly=True)), 1)\n             assert_equal(len(self.nodes[0].listtransactions(dummy=\"watchonly\", include_watchonly=True)), 1)\n-            assert len(self.nodes[0].listtransactions(label=\"watchonly\", count=100, include_watchonly=False)) == 0\n+            assert_equal(len(self.nodes[0].listtransactions(label=\"watchonly\", count=100, include_watchonly=False)), 0)\n             assert_array_result(self.nodes[0].listtransactions(label=\"watchonly\", count=100, include_watchonly=True),\n                                 {\"category\": \"receive\", \"amount\": Decimal(\"0.1\")},\n                                 {\"txid\": txid, \"label\": \"watchonly\"})"
      }
    ]
  },
  {
    "sha": "dddc97a10bf245f707c78ad78dcd6b3df729a4d2",
    "node_id": "C_kwDOABII59oAKGRkZGM5N2ExMGJmMjQ1ZjcwN2M3OGFkNzhkY2Q2YjNkZjcyOWE0ZDI",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-09T07:46:12Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:13:09Z"
      },
      "message": "wallet_taproot.py: Use test framwork\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "b9005cf71772fc1dce518abff6dba0e49b56efd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b9005cf71772fc1dce518abff6dba0e49b56efd7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dddc97a10bf245f707c78ad78dcd6b3df729a4d2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6JYACgkQi23CuHC4\nDV8Svw//a9zt5A1pxZZvT9FA2jmTE59dMjaDxHufaOARMQGIuIbGrtKcnZyNOOn+\nX/ZrjaBdGrxqb9SMz6Nc3R6DZP+4PkYTl4NHKDiumHytQEBLcapyidWrVvrJDDLo\n/LklXwG2GeWdIiBhW/5ydcfY7x1t1WfKaDtBppGQmE0ZqUVQp+BSfozBr5F7l/M8\nFHUBNgGka2dxlmhWwdWZIWmqus6oJwNKCIpxFqTvT739mqbZl43Lau0y2GjQ5kpa\nJHUqSHa23/kzYWUhBWGR7OqjqzJCJ+t6yVFsuZjr7cclYWlcG4AlKvfHFU+sp85/\nS655QN/KPXHp4s2e6AaYyzWbKSi40smd3rEYYzjceNX8lmvLQoj4ppsbnmP8ntOc\nmSzhc0V2B+4MVqNdZ/Uavdx+qz+PPU6AjrOaCjHMsnU3xqHdpVNMyeY888/xab5q\nbJ1PKIBeAQlrUuOzfr+SD9wgSgJtcainHUpsKZ6Vg9rgULw0PGWqcbhijO5i+7qG\nPwyRuD3p2ZT6cH6zbgNJdpJIAOuqLMfnwH0hMBDDakb8W2qJBAOYG0Bu5fkSV6Fk\nlrJm1TgTEOc8WvIXklYSXP9xuRMvUo7EfsPQJ2v4ABJjj1Vbfl7h/n61OgK90Jol\n3i8U8c0Qsvvm0mnax96albnaSH5YuAL3v7hbeOdNpaNVH3CauRo=\n=c+DZ\n-----END PGP SIGNATURE-----",
        "payload": "tree b9005cf71772fc1dce518abff6dba0e49b56efd7\nparent 5a1e9f0951226fb94ef3bf98786df9b2d142cda0\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636443972 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000789 +0100\n\nwallet_taproot.py: Use test framwork\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dddc97a10bf245f707c78ad78dcd6b3df729a4d2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dddc97a10bf245f707c78ad78dcd6b3df729a4d2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dddc97a10bf245f707c78ad78dcd6b3df729a4d2/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5a1e9f0951226fb94ef3bf98786df9b2d142cda0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a1e9f0951226fb94ef3bf98786df9b2d142cda0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5a1e9f0951226fb94ef3bf98786df9b2d142cda0"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "3faa03c8398cf38b19849e8e700d27452f7c9a1d",
        "filename": "test/functional/wallet_taproot.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dddc97a10bf245f707c78ad78dcd6b3df729a4d2/test/functional/wallet_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dddc97a10bf245f707c78ad78dcd6b3df729a4d2/test/functional/wallet_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_taproot.py?ref=dddc97a10bf245f707c78ad78dcd6b3df729a4d2",
        "patch": "@@ -170,8 +170,8 @@ def pk(hex_key):\n def compute_taproot_address(pubkey, scripts):\n     \"\"\"Compute the address for a taproot output with given inner key and scripts.\"\"\"\n     tap = taproot_construct(pubkey, scripts)\n-    assert tap.scriptPubKey[0] == OP_1\n-    assert tap.scriptPubKey[1] == 0x20\n+    assert_equal(tap.scriptPubKey[0], OP_1)\n+    assert_equal(tap.scriptPubKey[1], 0x20)\n     return encode_segwit_address(\"bcrt\", 1, tap.scriptPubKey[2:])\n \n class WalletTaprootTest(BitcoinTestFramework):"
      }
    ]
  },
  {
    "sha": "d6f15d77157504372e45b88cba70010a6f2b5029",
    "node_id": "C_kwDOABII59oAKGQ2ZjE1ZDc3MTU3NTA0MzcyZTQ1Yjg4Y2JhNzAwMTBhNmYyYjUwMjk",
    "commit": {
      "author": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-09T07:47:12Z"
      },
      "committer": {
        "name": "Vincenzo Palazzo",
        "email": "vincenzopalazzodev@gmail.com",
        "date": "2021-11-27T08:13:09Z"
      },
      "message": "wallet_txn_doublespend.py: Use test framwork\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>",
      "tree": {
        "sha": "37a875ef8ee067db81fbbf6fbd58b3b931f1a298",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37a875ef8ee067db81fbbf6fbd58b3b931f1a298"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6f15d77157504372e45b88cba70010a6f2b5029",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE3eMWwQll8j3M3QQgi23CuHC4DV8FAmGh6JgACgkQi23CuHC4\nDV/e7xAA00UxotcQA5y8N9DtkIvDo+AFeznIZac8sfVPcvFnWflqeM/4bbiSzL2Q\nedNg0h9RMpBPdEChWPtETd47EDHNhWRsFn/Ef8rJPGxT/CKmRuoLtIPrnIy3mRia\n3WRqta4KlBVrzmlwC2qjDVvoEI1muHxTXYJc61bqcx2f+4TPiyMbOqtlKcH/tGJ9\nP7GK+orwpTKX4mQNKQb276zyDiljBPrgYnOYlbIjxRrtE1i6TN962BTbVdd//Q3M\nhAxYl2xdU3Pn7Qm36i1Q40WqUP0vjTw9hT92txUeZW9ddZ4GsWLc29TVq98lEaxq\nedwjsTqvJpUXoAudxeYwMT94ucbAHvl9Xb+vHngxoP67FTmK9z6OLXqc3+RNYO8i\n7SVLsbOpwYmd+8+J/8gj21u4ORs5l1EgwXHQmfACZfEJb3d4aKdDg/YS6ky7fxCz\nTlzNtsOoFdZUQU3Zwi//QxaQYGCm2kHz4csBjKTYdFjKtJbc6mBhABKoGUG/iDE3\nTIRbgFQ5HKNmWZVA7/IweU6aud9z0INVrfef7D5e+guEWAb+IIWKldSh4ioKToe7\nHldXYGRoL/Xb+ZMX5PmWJs65YxE19WhklbsQcyeXzuuSorug+qQxfo9Rdze3GiLZ\n/RI75Du9+PADdhUTswcHC1JkRd/i84qbk++kd6P9OMTMA0g6eBY=\n=1w9M\n-----END PGP SIGNATURE-----",
        "payload": "tree 37a875ef8ee067db81fbbf6fbd58b3b931f1a298\nparent dddc97a10bf245f707c78ad78dcd6b3df729a4d2\nauthor Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1636444032 +0100\ncommitter Vincenzo Palazzo <vincenzopalazzodev@gmail.com> 1638000789 +0100\n\nwallet_txn_doublespend.py: Use test framwork\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6f15d77157504372e45b88cba70010a6f2b5029",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d6f15d77157504372e45b88cba70010a6f2b5029",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6f15d77157504372e45b88cba70010a6f2b5029/comments",
    "author": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dddc97a10bf245f707c78ad78dcd6b3df729a4d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dddc97a10bf245f707c78ad78dcd6b3df729a4d2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dddc97a10bf245f707c78ad78dcd6b3df729a4d2"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ac53d947b765d4fb0519a7788865780080c4b49f",
        "filename": "test/functional/wallet_txn_doublespend.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6f15d77157504372e45b88cba70010a6f2b5029/test/functional/wallet_txn_doublespend.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6f15d77157504372e45b88cba70010a6f2b5029/test/functional/wallet_txn_doublespend.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_txn_doublespend.py?ref=d6f15d77157504372e45b88cba70010a6f2b5029",
        "patch": "@@ -46,7 +46,7 @@ def run_test(self):\n         # blockchain sync later in the test when nodes are connected, due to\n         # timing issues.\n         for n in self.nodes:\n-            assert n.getblockchaininfo()[\"initialblockdownload\"] == False\n+            assert_equal(n.getblockchaininfo()[\"initialblockdownload\"], False)\n \n         for i in range(3):\n             assert_equal(self.nodes[i].getbalance(), starting_balance)"
      }
    ]
  }
]