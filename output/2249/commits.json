[
  {
    "sha": "386037615ae02f972287a958d22a5bd2760626a7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODYwMzc2MTVhZTAyZjk3MjI4N2E5NThkMjJhNWJkMjc2MDYyNmE3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-01-30T20:43:36Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-02-01T22:29:59Z"
      },
      "message": "Make sure the genesis block is present after reindex",
      "tree": {
        "sha": "308156e618b67b34bd7eb07b1338f16e41729d10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/308156e618b67b34bd7eb07b1338f16e41729d10"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/386037615ae02f972287a958d22a5bd2760626a7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/386037615ae02f972287a958d22a5bd2760626a7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/386037615ae02f972287a958d22a5bd2760626a7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/386037615ae02f972287a958d22a5bd2760626a7/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3d29d5d623c03a26177176a9b422cb00dedd9108",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d29d5d623c03a26177176a9b422cb00dedd9108",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3d29d5d623c03a26177176a9b422cb00dedd9108"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 36,
      "deletions": 20
    },
    "files": [
      {
        "sha": "15a46946fa6653734ae856d66f070df3f537b7e5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/386037615ae02f972287a958d22a5bd2760626a7/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/386037615ae02f972287a958d22a5bd2760626a7/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=386037615ae02f972287a958d22a5bd2760626a7",
        "patch": "@@ -365,6 +365,8 @@ void ThreadImport(void *data) {\n             pblocktree->WriteReindexing(false);\n             fReindex = false;\n             printf(\"Reindexing finished\\n\");\n+            // To avoid ending up in a situation without genesis block, re-try initializing (no-op if reindexing worked):\n+            InitBlockIndex();\n         }\n     }\n \n@@ -802,6 +804,10 @@ bool AppInit2()\n     if (!LoadBlockIndex())\n         return InitError(_(\"Error loading block database\"));\n \n+    // Initialize the block index (no-op if non-empty database was already loaded)\n+    if (!InitBlockIndex())\n+        return InitError(_(\"Error initializing block database\"));\n+\n     uiInterface.InitMessage(_(\"Verifying block database integrity...\"));\n \n     if (!VerifyDB())"
      },
      {
        "sha": "ee1d23c3373cc7b536d504e36eb130337d799f67",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 19,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/386037615ae02f972287a958d22a5bd2760626a7/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/386037615ae02f972287a958d22a5bd2760626a7/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=386037615ae02f972287a958d22a5bd2760626a7",
        "patch": "@@ -2661,18 +2661,22 @@ bool LoadBlockIndex()\n     if (!fReindex && !LoadBlockIndexDB())\n         return false;\n \n-    //\n-    // Init with genesis block\n-    //\n-    if (mapBlockIndex.empty())\n-    {\n-        fTxIndex = GetBoolArg(\"-txindex\", false);\n-        pblocktree->WriteFlag(\"txindex\", fTxIndex);\n-        printf(\"Initializing databases...\\n\");\n+    return true;\n+}\n \n-        if (fReindex)\n-            return true;\n \n+bool InitBlockIndex() {\n+    // Check whether we're already initialized\n+    if (pindexGenesisBlock != NULL)\n+        return true;\n+\n+    // Use the provided setting for -txindex in the new database\n+    fTxIndex = GetBoolArg(\"-txindex\", false);\n+    pblocktree->WriteFlag(\"txindex\", fTxIndex);\n+    printf(\"Initializing databases...\\n\");\n+\n+    // Only add the genesis block if not reindexing (in which case we reuse the one already on disk)\n+    if (!fReindex) {\n         // Genesis Block:\n         // CBlock(hash=000000000019d6, ver=1, hashPrevBlock=00000000000000, hashMerkleRoot=4a5e1e, nTime=1231006505, nBits=1d00ffff, nNonce=2083236893, vtx=1)\n         //   CTransaction(hash=4a5e1e, ver=1, vin.size=1, vout.size=1, nLockTime=0)\n@@ -2713,15 +2717,19 @@ bool LoadBlockIndex()\n         assert(hash == hashGenesisBlock);\n \n         // Start new block file\n-        unsigned int nBlockSize = ::GetSerializeSize(block, SER_DISK, CLIENT_VERSION);\n-        CDiskBlockPos blockPos;\n-        CValidationState state;\n-        if (!FindBlockPos(state, blockPos, nBlockSize+8, 0, block.nTime))\n-            return error(\"AcceptBlock() : FindBlockPos failed\");\n-        if (!block.WriteToDisk(blockPos))\n-            return error(\"LoadBlockIndex() : writing genesis block to disk failed\");\n-        if (!block.AddToBlockIndex(state, blockPos))\n-            return error(\"LoadBlockIndex() : genesis block not accepted\");\n+        try {\n+            unsigned int nBlockSize = ::GetSerializeSize(block, SER_DISK, CLIENT_VERSION);\n+            CDiskBlockPos blockPos;\n+            CValidationState state;\n+            if (!FindBlockPos(state, blockPos, nBlockSize+8, 0, block.nTime))\n+                return error(\"AcceptBlock() : FindBlockPos failed\");\n+            if (!block.WriteToDisk(blockPos))\n+                return error(\"LoadBlockIndex() : writing genesis block to disk failed\");\n+            if (!block.AddToBlockIndex(state, blockPos))\n+                return error(\"LoadBlockIndex() : genesis block not accepted\");\n+        } catch(std::runtime_error &e) {\n+            return error(\"LoadBlockIndex() : failed to initialize block database: %s\", e.what());\n+        }\n     }\n \n     return true;"
      },
      {
        "sha": "3c7e4e1005487e4ea6c7e61b435b319bf99a580a",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/386037615ae02f972287a958d22a5bd2760626a7/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/386037615ae02f972287a958d22a5bd2760626a7/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=386037615ae02f972287a958d22a5bd2760626a7",
        "patch": "@@ -133,6 +133,8 @@ FILE* OpenBlockFile(const CDiskBlockPos &pos, bool fReadOnly = false);\n FILE* OpenUndoFile(const CDiskBlockPos &pos, bool fReadOnly = false);\n /** Import blocks from an external file */\n bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp = NULL);\n+/** Initialize a new block tree database + block data on disk */\n+bool InitBlockIndex();\n /** Load the block tree and coins database from disk */\n bool LoadBlockIndex();\n /** Verify consistency of the block and coin databases */"
      },
      {
        "sha": "1116507a34fc1672a3fc73e0762bfbf69547d60d",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/386037615ae02f972287a958d22a5bd2760626a7/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/386037615ae02f972287a958d22a5bd2760626a7/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=386037615ae02f972287a958d22a5bd2760626a7",
        "patch": "@@ -28,7 +28,7 @@ struct TestingSetup {\n         pblocktree = new CBlockTreeDB(1 << 20, true);\n         pcoinsdbview = new CCoinsViewDB(1 << 23, true);\n         pcoinsTip = new CCoinsViewCache(*pcoinsdbview);\n-        LoadBlockIndex();\n+        InitBlockIndex();\n         bool fFirstRun;\n         pwalletMain = new CWallet(\"wallet.dat\");\n         pwalletMain->LoadWallet(fFirstRun);"
      }
    ]
  }
]