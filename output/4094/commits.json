[
  {
    "sha": "3ab1664594def04471fbeef27ddd45ae6264306b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYWIxNjY0NTk0ZGVmMDQ0NzFmYmVlZjI3ZGRkNDVhZTYyNjQzMDZi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-04-25T18:29:05Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-04-30T13:30:39Z"
      },
      "message": "gitian: build against Qt 4.6\n\nShould make it possible to run the resulting GUI executable on\nLinux distributions that use Qt 4.6, such as Debian Wheezy and Tails.\n\nBuilds a mini-SDK for building against Qt 4.6. This includes the headers\nas well as host utilities such as `lrelease`, `qrc` and `moc`.\n\nThis speeds up the gitian build a bit - libqt4-dev pulled in a lot of packages,\nand is no longer needed as this provides a replacement of our own.\n\nNote: This does not replace the Qt build with at static library. After this\ncommit we still build dynamically against the system Qt library. The only\ndifference is that compatibility with an older version is maintained. This\nloses minor GUI functionality (such as setPlaceholderText) but still\nallows integration into the window management of the host OS, unlike\nwhen statically linking.",
      "tree": {
        "sha": "3d441a4bb85b2236031fb352f2069754fd4664e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d441a4bb85b2236031fb352f2069754fd4664e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ab1664594def04471fbeef27ddd45ae6264306b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ab1664594def04471fbeef27ddd45ae6264306b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3ab1664594def04471fbeef27ddd45ae6264306b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ab1664594def04471fbeef27ddd45ae6264306b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "48be9ceaa0746ba7ba7f1b9fedeb1d10dc0a5f99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48be9ceaa0746ba7ba7f1b9fedeb1d10dc0a5f99",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/48be9ceaa0746ba7ba7f1b9fedeb1d10dc0a5f99"
      }
    ],
    "stats": {
      "total": 278,
      "additions": 277,
      "deletions": 1
    },
    "files": [
      {
        "sha": "94b50998bc26bea09b9cecb482efadd3ea14fd23",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ab1664594def04471fbeef27ddd45ae6264306b/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ab1664594def04471fbeef27ddd45ae6264306b/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=3ab1664594def04471fbeef27ddd45ae6264306b",
        "patch": "@@ -7,7 +7,6 @@ architectures:\n - \"amd64\"\n packages: \n - \"g++\"\n-- \"libqt4-dev\"\n - \"git-core\"\n - \"unzip\"\n - \"pkg-config\"\n@@ -16,6 +15,11 @@ packages:\n - \"automake\"\n - \"faketime\"\n - \"bsdmainutils\"\n+- \"libqt4-core\"\n+- \"libqt4-gui\"\n+- \"libqt4-dbus\"\n+- \"libqt4-network\"\n+- \"libqt4-test\"\n reference_datetime: \"2013-06-01 00:00:00\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n@@ -25,19 +29,23 @@ files:\n - \"bitcoin-deps-linux64-gitian-r5.zip\"\n - \"boost-linux32-1.55.0-gitian-r1.zip\"\n - \"boost-linux64-1.55.0-gitian-r1.zip\"\n+- \"qt-linux32-4.6.4-gitian-r1.tar.gz\"\n+- \"qt-linux64-4.6.4-gitian-r1.tar.gz\"\n script: |\n   STAGING=\"$HOME/install\"\n   OPTFLAGS='-O2'\n   BINDIR=\"${OUTDIR}/bin/${GBUILD_BITS}\" # 32/64 bit build specific output directory\n   TEMPDIR=\"$HOME/tempdir\"\n   export TZ=UTC\n   export LIBRARY_PATH=\"$STAGING/lib\"\n+  export PATH=\"$STAGING/bin:$PATH\"\n   mkdir -p ${BINDIR}\n   #\n   mkdir -p $STAGING\n   cd $STAGING\n   unzip ../build/bitcoin-deps-linux${GBUILD_BITS}-gitian-r5.zip\n   unzip ../build/boost-linux${GBUILD_BITS}-1.55.0-gitian-r1.zip\n+  tar -zxf ../build/qt-linux${GBUILD_BITS}-4.6.4-gitian-r1.tar.gz\n   cd ../build\n \n   function do_configure {"
      },
      {
        "sha": "1462df32890dc106b5ab457c29282824649de2bb",
        "filename": "contrib/gitian-descriptors/qt-linux.yml",
        "status": "added",
        "additions": 263,
        "deletions": 0,
        "changes": 263,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ab1664594def04471fbeef27ddd45ae6264306b/contrib/gitian-descriptors/qt-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ab1664594def04471fbeef27ddd45ae6264306b/contrib/gitian-descriptors/qt-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-linux.yml?ref=3ab1664594def04471fbeef27ddd45ae6264306b",
        "patch": "@@ -0,0 +1,263 @@\n+---\n+name: \"qt-linux\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"i386\"\n+- \"amd64\"\n+packages:\n+- \"zip\"\n+- \"unzip\"\n+- \"faketime\"\n+- \"unzip\"\n+- \"libxext-dev\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes: []\n+files:\n+- \"qt-everywhere-opensource-src-4.6.4.tar.gz\"\n+script: |\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  if [ \"$GBUILD_BITS\" == \"32\" ]; then\n+    ARCH='i386-linux-gnu'\n+  else\n+    ARCH='x86_64-linux-gnu'\n+  fi\n+  # The purpose of this gitian build is not to actually build Qt, but to export\n+  # the headers as well as pkgconfig files in a useable format so that we can\n+  # pretend to link against an older version. The goal is to link to the\n+  # system version of Qt 4.\n+  # Also build development tools.\n+  INSTALLPREFIX=\"$HOME/install\"\n+  # Integrity Check\n+  echo \"9ad4d46c721b53a429ed5a2eecfd3c239a9ab566562f183f99d3125f1a234250  qt-everywhere-opensource-src-4.6.4.tar.gz\" | sha256sum -c\n+  # Make install directories\n+  mkdir -p $INSTALLPREFIX\n+  mkdir -p $INSTALLPREFIX/include\n+  PKGCONFIGDIR=$INSTALLPREFIX/lib/pkgconfig\n+  mkdir -p $PKGCONFIGDIR\n+  #\n+  tar xzf qt-everywhere-opensource-src-4.6.4.tar.gz\n+  cd qt-everywhere-opensource-src-4.6.4\n+  QTBUILDDIR=$(pwd)\n+\n+  # Need to build 4.6-versioned host utilities as well (lrelease/qrc/lupdate/...)\n+  ./configure -prefix $INSTALLPREFIX -confirm-license -release -opensource -no-qt3support -no-multimedia -no-audio-backend -no-phonon -no-phonon-backend -no-declarative -no-script -no-scripttools -no-javascript-jit -no-webkit -no-svg -no-xmlpatterns -no-sql-sqlite -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-libtiff -no-opengl -nomake examples -nomake demos -nomake docs\n+  #\n+  make $MAKEOPTS -C src/tools install  # (rcc, uic, moc)\n+  make $MAKEOPTS -C tools/linguist/lrelease install  # (lrelease)\n+  # install includes and pkgconfig files\n+  for DIR in src/corelib src/gui src/testlib src/dbus src/network; do\n+    (\n+    cd $DIR\n+    # extract module (QtCore/QtNetwork/...) from Makefile\n+    MODULE=$(grep \"QMAKE_TARGET *=\" Makefile | cut -d = -f 2 | xargs)\n+    # patch makefile so that not everything is build first\n+    sed -i 's/first: all/first:/g' Makefile\n+    make install_flat_headers install_class_headers install_targ_headers\n+    # create and install pkgconfig descriptor\n+    make ../../lib/pkgconfig/$MODULE.pc\n+    sed -e \"s,$QTBUILDDIR,$INSTALLPREFIX,g\" ../../lib/pkgconfig/$MODULE.pc > $PKGCONFIGDIR/$MODULE.pc\n+    # create links to existing Qt libraries\n+    ln -sf /usr/lib/${ARCH}/lib${MODULE}.so.4 ${INSTALLPREFIX}/lib/lib${MODULE}.so\n+    )\n+  done\n+\n+  # Write our own configuration header, same as Ubuntu\n+  # When we don't do this, the configuration will be without STL support (the QString from/to stdString methods)\n+  QCONFIG=$INSTALLPREFIX/include/Qt/qconfig.h\n+  echo '\n+  /* Qt Edition */\n+  #ifndef QT_EDITION\n+  #  define QT_EDITION QT_EDITION_OPENSOURCE\n+  #endif\n+  ' > $QCONFIG\n+\n+  if [ \"$GBUILD_BITS\" == \"32\" ]; then\n+    echo '\n+  /* Machine byte-order */\n+  #define Q_BIG_ENDIAN 4321\n+  #define Q_LITTLE_ENDIAN 1234\n+  #define QT_BUILD_KEY \"i386 linux g++-4 full-config\"\n+  #define QT_BUILD_KEY_COMPAT \"i686 Linux g++-4 full-config\"\n+\n+  #ifdef QT_BOOTSTRAPPED\n+  #define Q_BYTE_ORDER Q_LITTLE_ENDIAN\n+  #else\n+  #define Q_BYTE_ORDER Q_LITTLE_ENDIAN\n+  #endif\n+  /* Machine Architecture */\n+  #ifndef QT_BOOTSTRAPPED\n+  # define QT_ARCH_I386\n+  #else\n+  # define QT_ARCH_I386\n+  #endif\n+  /* Compile time features */\n+  #define QT_LARGEFILE_SUPPORT 64\n+  #define QT_POINTER_SIZE 4\n+  ' >> $QCONFIG\n+  else\n+    echo '\n+  /* Machine byte-order */\n+  #define Q_BIG_ENDIAN 4321\n+  #define Q_LITTLE_ENDIAN 1234\n+  #define QT_BUILD_KEY \"x86_64 linux g++-4 full-config\"\n+  #define QT_BUILD_KEY_COMPAT \"x86_64 Linux g++-4 full-config\"\n+\n+  #ifdef QT_BOOTSTRAPPED\n+  #define Q_BYTE_ORDER Q_LITTLE_ENDIAN\n+  #else\n+  #define Q_BYTE_ORDER Q_LITTLE_ENDIAN\n+  #endif\n+  /* Machine Architecture */\n+  #ifndef QT_BOOTSTRAPPED\n+  # define QT_ARCH_X86_64\n+  #else\n+  # define QT_ARCH_X86_64\n+  #endif\n+  /* Compile time features */\n+  #define QT_LARGEFILE_SUPPORT 64\n+  #define QT_POINTER_SIZE 8\n+  ' >> $QCONFIG\n+  fi\n+\n+  echo '\n+  #ifndef QT_BOOTSTRAPPED\n+\n+  #if defined(QT_NO_EGL) && defined(QT_EGL)\n+  # undef QT_NO_EGL\n+  #elif !defined(QT_NO_EGL) && !defined(QT_EGL)\n+  # define QT_NO_EGL\n+  #endif\n+\n+  #if defined(QT_NO_GSTREAMER) && defined(QT_GSTREAMER)\n+  # undef QT_NO_GSTREAMER\n+  #elif !defined(QT_NO_GSTREAMER) && !defined(QT_GSTREAMER)\n+  # define QT_NO_GSTREAMER\n+  #endif\n+\n+  #if defined(QT_NO_ICD) && defined(QT_ICD)\n+  # undef QT_NO_ICD\n+  #elif !defined(QT_NO_ICD) && !defined(QT_ICD)\n+  # define QT_NO_ICD\n+  #endif\n+\n+  #if defined(QT_NO_IMAGEFORMAT_JPEG) && defined(QT_IMAGEFORMAT_JPEG)\n+  # undef QT_NO_IMAGEFORMAT_JPEG\n+  #elif !defined(QT_NO_IMAGEFORMAT_JPEG) && !defined(QT_IMAGEFORMAT_JPEG)\n+  # define QT_NO_IMAGEFORMAT_JPEG\n+  #endif\n+\n+  #if defined(QT_NO_IMAGEFORMAT_MNG) && defined(QT_IMAGEFORMAT_MNG)\n+  # undef QT_NO_IMAGEFORMAT_MNG\n+  #elif !defined(QT_NO_IMAGEFORMAT_MNG) && !defined(QT_IMAGEFORMAT_MNG)\n+  # define QT_NO_IMAGEFORMAT_MNG\n+  #endif\n+\n+  #if defined(QT_NO_IMAGEFORMAT_TIFF) && defined(QT_IMAGEFORMAT_TIFF)\n+  # undef QT_NO_IMAGEFORMAT_TIFF\n+  #elif !defined(QT_NO_IMAGEFORMAT_TIFF) && !defined(QT_IMAGEFORMAT_TIFF)\n+  # define QT_NO_IMAGEFORMAT_TIFF\n+  #endif\n+\n+  #if defined(QT_NO_MULTIMEDIA) && defined(QT_MULTIMEDIA)\n+  # undef QT_NO_MULTIMEDIA\n+  #elif !defined(QT_NO_MULTIMEDIA) && !defined(QT_MULTIMEDIA)\n+  # define QT_NO_MULTIMEDIA\n+  #endif\n+\n+  #if defined(QT_NO_OPENVG) && defined(QT_OPENVG)\n+  # undef QT_NO_OPENVG\n+  #elif !defined(QT_NO_OPENVG) && !defined(QT_OPENVG)\n+  # define QT_NO_OPENVG\n+  #endif\n+\n+  #if defined(QT_NO_PHONON) && defined(QT_PHONON)\n+  # undef QT_NO_PHONON\n+  #elif !defined(QT_NO_PHONON) && !defined(QT_PHONON)\n+  # define QT_NO_PHONON\n+  #endif\n+\n+  #if defined(QT_NO_PULSEAUDIO) && defined(QT_PULSEAUDIO)\n+  # undef QT_NO_PULSEAUDIO\n+  #elif !defined(QT_NO_PULSEAUDIO) && !defined(QT_PULSEAUDIO)\n+  # define QT_NO_PULSEAUDIO\n+  #endif\n+\n+  #if defined(QT_NO_S60) && defined(QT_S60)\n+  # undef QT_NO_S60\n+  #elif !defined(QT_NO_S60) && !defined(QT_S60)\n+  # define QT_NO_S60\n+  #endif\n+\n+  #if defined(QT_NO_STYLE_S60) && defined(QT_STYLE_S60)\n+  # undef QT_NO_STYLE_S60\n+  #elif !defined(QT_NO_STYLE_S60) && !defined(QT_STYLE_S60)\n+  # define QT_NO_STYLE_S60\n+  #endif\n+\n+  #if defined(QT_NO_SXE) && defined(QT_SXE)\n+  # undef QT_NO_SXE\n+  #elif !defined(QT_NO_SXE) && !defined(QT_SXE)\n+  # define QT_NO_SXE\n+  #endif\n+\n+  #if defined(QT_NO_WEBKIT) && defined(QT_WEBKIT)\n+  # undef QT_NO_WEBKIT\n+  #elif !defined(QT_NO_WEBKIT) && !defined(QT_WEBKIT)\n+  # define QT_NO_WEBKIT\n+  #endif\n+\n+  #if defined(QT_NO_ZLIB) && defined(QT_ZLIB)\n+  # undef QT_NO_ZLIB\n+  #elif !defined(QT_NO_ZLIB) && !defined(QT_ZLIB)\n+  # define QT_NO_ZLIB\n+  #endif\n+\n+  #if defined(QT_RUNTIME_XCURSOR) && defined(QT_NO_RUNTIME_XCURSOR)\n+  # undef QT_RUNTIME_XCURSOR\n+  #elif !defined(QT_RUNTIME_XCURSOR) && !defined(QT_NO_RUNTIME_XCURSOR)\n+  # define QT_RUNTIME_XCURSOR\n+  #endif\n+\n+  #if defined(QT_RUNTIME_XFIXES) && defined(QT_NO_RUNTIME_XFIXES)\n+  # undef QT_RUNTIME_XFIXES\n+  #elif !defined(QT_RUNTIME_XFIXES) && !defined(QT_NO_RUNTIME_XFIXES)\n+  # define QT_RUNTIME_XFIXES\n+  #endif\n+\n+  #if defined(QT_RUNTIME_XINERAMA) && defined(QT_NO_RUNTIME_XINERAMA)\n+  # undef QT_RUNTIME_XINERAMA\n+  #elif !defined(QT_RUNTIME_XINERAMA) && !defined(QT_NO_RUNTIME_XINERAMA)\n+  # define QT_RUNTIME_XINERAMA\n+  #endif\n+\n+  #if defined(QT_RUNTIME_XINPUT) && defined(QT_NO_RUNTIME_XINPUT)\n+  # undef QT_RUNTIME_XINPUT\n+  #elif !defined(QT_RUNTIME_XINPUT) && !defined(QT_NO_RUNTIME_XINPUT)\n+  # define QT_RUNTIME_XINPUT\n+  #endif\n+\n+  #if defined(QT_RUNTIME_XRANDR) && defined(QT_NO_RUNTIME_XRANDR)\n+  # undef QT_RUNTIME_XRANDR\n+  #elif !defined(QT_RUNTIME_XRANDR) && !defined(QT_NO_RUNTIME_XRANDR)\n+  # define QT_RUNTIME_XRANDR\n+  #endif\n+\n+  #if defined(QT_USE_MATH_H_FLOATS) && defined(QT_NO_USE_MATH_H_FLOATS)\n+  # undef QT_USE_MATH_H_FLOATS\n+  #elif !defined(QT_USE_MATH_H_FLOATS) && !defined(QT_NO_USE_MATH_H_FLOATS)\n+  # define QT_USE_MATH_H_FLOATS\n+  #endif\n+\n+  #endif // QT_BOOTSTRAPPED\n+\n+  #define QT_VISIBILITY_AVAILABLE\n+  ' >> $QCONFIG\n+  cp $QCONFIG $INSTALLPREFIX/include/QtCore/qconfig.h\n+\n+  cd $INSTALLPREFIX\n+  # as zip stores file timestamps, use faketime to intercept stat calls to set dates for all files to reference date\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  # Create a .tar.gz because .zip has problems with symbolic links\n+  find | sort | tar --no-recursion -cT /dev/stdin --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 --mtime=\"$REFERENCE_DATETIME\" | gzip -n > $OUTDIR/qt-linux${GBUILD_BITS}-4.6.4-gitian-r1.tar.gz"
      },
      {
        "sha": "b93c1637486f5ae45c32ceb1680e7c470c569eee",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ab1664594def04471fbeef27ddd45ae6264306b/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ab1664594def04471fbeef27ddd45ae6264306b/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=3ab1664594def04471fbeef27ddd45ae6264306b",
        "patch": "@@ -47,12 +47,15 @@ Release Process\n \twget 'https://svn.boost.org/trac/boost/raw-attachment/ticket/7262/boost-mingw.patch' -O \\ \n \t     boost-mingw-gas-cross-compile-2013-03-03.patch\n \twget 'https://download.qt-project.org/official_releases/qt/5.2/5.2.0/single/qt-everywhere-opensource-src-5.2.0.tar.gz'\n+\twget 'https://download.qt-project.org/archive/qt/4.6/qt-everywhere-opensource-src-4.6.4.tar.gz'\n \twget 'https://protobuf.googlecode.com/files/protobuf-2.5.0.tar.bz2'\n \tcd ..\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/boost-linux.yml\n \tmv build/out/boost-*.zip inputs/\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/deps-linux.yml\n \tmv build/out/bitcoin-deps-*.zip inputs/\n+\t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/qt-linux.yml\n+\tmv build/out/qt-*.tar.gz inputs/\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/boost-win.yml\n \tmv build/out/boost-*.zip inputs/\n \t./bin/gbuild ../bitcoin/contrib/gitian-descriptors/deps-win.yml\n@@ -68,6 +71,8 @@ Release Process\n     571789867d172500fa96d63d0ba8c5b1e1a3d6f44f720eddf2f93665affc88b3  bitcoin-deps-linux64-gitian-r5.zip\n     f29b7d9577417333fb56e023c2977f5726a7c297f320b175a4108cf7cd4c2d29  boost-linux32-1.55.0-gitian-r1.zip\n     88232451c4104f7eb16e469ac6474fd1231bd485687253f7b2bdf46c0781d535  boost-linux64-1.55.0-gitian-r1.zip\n+    74ec2d301cf1a9d03b194153f545102ba45dad02b390485212fe6717de486361  qt-linux32-4.6.4-gitian-r1.tar.gz\n+    01d0477e299467f09280f15424781154e2b1ea4072c5edb16e044c234954fd9a  qt-linux64-4.6.4-gitian-r1.tar.gz\n     60dc2d3b61e9c7d5dbe2f90d5955772ad748a47918ff2d8b74e8db9b1b91c909  boost-win32-1.55.0-gitian-r6.zip\n     f65fcaf346bc7b73bc8db3a8614f4f6bee2f61fcbe495e9881133a7c2612a167  boost-win64-1.55.0-gitian-r6.zip\n     97e62002d338885336bb24e7cbb9471491294bd8857af7a83d18c0961f864ec0  bitcoin-deps-win32-gitian-r11.zip"
      }
    ]
  },
  {
    "sha": "92e3022f888a2e090a91c1f097ecc27e9601354b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MmUzMDIyZjg4OGEyZTA5MGE5MWMxZjA5N2VjYzI3ZTk2MDEzNTRi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-04-30T06:17:22Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-04-30T13:30:39Z"
      },
      "message": "gitian: don't export any symbols from executable\n\nThis avoids conflicts between the libraries statically linked into bitcoin and any\nlibraries we may link dynamically (such as Qt and OpenSSL, see issue #4094).\nIt also avoids start-up overhead to not export any unnecessary symbols.\nTo do this, build a linker script that marks all symbols as local.",
      "tree": {
        "sha": "e9be5782c13046207330999bad910dcc8db2e839",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9be5782c13046207330999bad910dcc8db2e839"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/92e3022f888a2e090a91c1f097ecc27e9601354b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92e3022f888a2e090a91c1f097ecc27e9601354b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/92e3022f888a2e090a91c1f097ecc27e9601354b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92e3022f888a2e090a91c1f097ecc27e9601354b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3ab1664594def04471fbeef27ddd45ae6264306b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ab1664594def04471fbeef27ddd45ae6264306b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ab1664594def04471fbeef27ddd45ae6264306b"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 11,
      "deletions": 1
    },
    "files": [
      {
        "sha": "692e9b358df92492b889f87563fa0d75a7e35778",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/92e3022f888a2e090a91c1f097ecc27e9601354b/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/92e3022f888a2e090a91c1f097ecc27e9601354b/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=92e3022f888a2e090a91c1f097ecc27e9601354b",
        "patch": "@@ -48,8 +48,18 @@ script: |\n   tar -zxf ../build/qt-linux${GBUILD_BITS}-4.6.4-gitian-r1.tar.gz\n   cd ../build\n \n+  # Avoid exporting *any* symbols from the executable\n+  # This avoids conflicts between the libraries statically linked into bitcoin and any\n+  # libraries we may link dynamically (such as Qt and OpenSSL, see issue #4094).\n+  # It also avoids start-up overhead to not export any unnecessary symbols.\n+  # To do this, build a linker script that marks all symbols as local.\n+  LINKER_SCRIPT=$HOME/build/linker_version_script\n+  echo '\n+  {\n+    local: *;\n+  };' > $LINKER_SCRIPT\n   function do_configure {\n-    ./configure \"$@\" --enable-upnp-default --prefix=$STAGING --with-protoc-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\" BOOST_CHRONO_EXTRALIBS=\"-lrt\" --enable-glibc-back-compat\n+      ./configure \"$@\" --enable-upnp-default --prefix=$STAGING --with-protoc-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib -Wl,--version-script=$LINKER_SCRIPT ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\" BOOST_CHRONO_EXTRALIBS=\"-lrt\" --enable-glibc-back-compat\n   }\n   #\n   cd bitcoin"
      }
    ]
  },
  {
    "sha": "202c95c216ac193fc8ea0f668f1b26f7ddc2907e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMDJjOTVjMjE2YWMxOTNmYzhlYTBmNjY4ZjFiMjZmN2RkYzI5MDdl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-04-30T13:26:36Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-04-30T13:30:39Z"
      },
      "message": "devtools: have symbol check script check for exported symbols\n\nAfter last commit, our executables should export no symbols anymore.  To\nmake sure that this stays the case, verify this in the symbol checker\nscript.",
      "tree": {
        "sha": "966767fb0addc866da93f55cf8672f7e0437a9d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/966767fb0addc866da93f55cf8672f7e0437a9d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/202c95c216ac193fc8ea0f668f1b26f7ddc2907e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/202c95c216ac193fc8ea0f668f1b26f7ddc2907e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/202c95c216ac193fc8ea0f668f1b26f7ddc2907e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/202c95c216ac193fc8ea0f668f1b26f7ddc2907e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "92e3022f888a2e090a91c1f097ecc27e9601354b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92e3022f888a2e090a91c1f097ecc27e9601354b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/92e3022f888a2e090a91c1f097ecc27e9601354b"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8dd6d8f037d9bdfe141890e0fa1f701fb4bcf4ed",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/202c95c216ac193fc8ea0f668f1b26f7ddc2907e/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/202c95c216ac193fc8ea0f668f1b26f7ddc2907e/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=202c95c216ac193fc8ea0f668f1b26f7ddc2907e",
        "patch": "@@ -98,10 +98,15 @@ def check_version(max_versions, version):\n     cppfilt = CPPFilt()\n     retval = 0\n     for filename in sys.argv[1:]:\n+        # Check imported symbols\n         for sym,version in read_symbols(filename, True):\n             if version and not check_version(MAX_VERSIONS, version):\n                 print('%s: symbol %s from unsupported version %s' % (filename, cppfilt(sym), version))\n                 retval = 1\n+        # Check exported symbols\n+        for sym,version in read_symbols(filename, False):\n+            print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym)))\n+            retval = 1\n \n     exit(retval)\n "
      }
    ]
  }
]