[
  {
    "sha": "ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYTRjYzNhN2IzNmE5Yzc3ZGJmMGFmZjQzOWRhM2VmMGVhNThlNmU0",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2019-08-01T20:39:46Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2019-10-02T16:10:07Z"
      },
      "message": "Truly decouple wallet from chainparams for -fallbackfee\n\nBefore it was 0 by default for main and 20000 for test and regtest.\nNow it is 0 by default for all chains, thus there's no need to call Params().\n\nAlso now the default for main is properly documented",
      "tree": {
        "sha": "222e89e3f52b551ee3817989fd048236475728b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/222e89e3f52b551ee3817989fd048236475728b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEIuvzCd8AbOwfprXViGbBjqHJRKIFAl2Uy98ACgkQiGbBjqHJ\nRKLs/Q/9FKInjjgZpPNbrYuDEovTIPN8VMQaDyCmBIKnrQH4Q6fgMUmM2OPgwPNv\nNVOcgpmC7khIMXbxPZ8L1rIhtH3weUMNK752qjlB8BAIz3PYH7Fs+sjV2dQEG6Ep\ne7By1RtfHuz2aN+F/n3/JgklRDuFzesY8YSeU/lgF0WiFogktY8KQvscilTj3/p2\nqsv1pdyL5lY50qumgZTu0wWt+SHJnNj2lU3r3rIOrdbFDlubYv574O7dNqhqym6j\nOb8wYjl1dmWYxljFsrpqsSfQ/PuKcVuiToGtLDHv9z1/C5FyR7Vv4RgUrGAZmv1B\nlkcsorHpr477qn88mkf3NlAR2Yc0VO4mf+gfhxnLflf32dVcvSN8SUASzdURRmbA\nQuXmPngKOPPuOHFRynElgVfZxjVKf6XcHrYyilEcn5lnfUaI5hCZo5wIAUUCSjJH\ngzDXS4tSiV8K4bh4wPxILMzvYa6PBkywi8kS3T2bK5z7Hn2i6jN4pq10S5Yco6Xo\nvpn+B3FNAiWd6fyFTfSoQXEuSAOl51PNk4IkdhkQNKh3Mho9g/LWBSvlGAvoG9SO\nz3xTddIXSoZZsBajbAF906ngB/nOTIIGWIKewJb802ttWreEyymTpn5oPxH3C7bZ\nyb4hEObX8uJkvMmehZSuR6Ip2qIeUfklzQHP2yTbdfHgzZ/tqzA=\n=9x02\n-----END PGP SIGNATURE-----",
        "payload": "tree 222e89e3f52b551ee3817989fd048236475728b8\nparent 884f7cc81b478b599ed8d43ebe80578ea9cdb279\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1564691986 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1570032607 +0200\n\nTruly decouple wallet from chainparams for -fallbackfee\n\nBefore it was 0 by default for main and 20000 for test and regtest.\nNow it is 0 by default for all chains, thus there's no need to call Params().\n\nAlso now the default for main is properly documented\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "884f7cc81b478b599ed8d43ebe80578ea9cdb279",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/884f7cc81b478b599ed8d43ebe80578ea9cdb279",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/884f7cc81b478b599ed8d43ebe80578ea9cdb279"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 16,
      "deletions": 5
    },
    "files": [
      {
        "sha": "11c2f60c383f057eecaf6fdae46f9246ea072c27",
        "filename": "doc/release-notes-16524.md",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4/doc/release-notes-16524.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4/doc/release-notes-16524.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-16524.md?ref=ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4",
        "patch": "@@ -0,0 +1,8 @@\n+\n+Low-level changes\n+=================\n+\n+Tests\n+---\n+\n+- `-fallbackfee` was 0 (disabled) by default for the main chain, but 20000 by default for the test chains. Now it is 0 by default for all chains. Testnet and regtest users will have to add fallbackfee=20000 to their configuration if they weren't setting it and they want it to keep working like before. (#16524)"
      },
      {
        "sha": "43b6ead0285916e5ca1d7406c7a22d909f6f3906",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4",
        "patch": "@@ -41,7 +41,8 @@ void WalletInit::AddWalletOptions() const\n     gArgs.AddArg(\"-discardfee=<amt>\", strprintf(\"The fee rate (in %s/kB) that indicates your tolerance for discarding change by adding it to the fee (default: %s). \"\n                                                                 \"Note: An output is discarded if it is dust at this rate, but we will always discard up to the dust relay fee and a discard fee above that is limited by the fee estimate for the longest target\",\n                                                               CURRENCY_UNIT, FormatMoney(DEFAULT_DISCARD_FEE)), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n-    gArgs.AddArg(\"-fallbackfee=<amt>\", strprintf(\"A fee rate (in %s/kB) that will be used when fee estimation has insufficient data (default: %s)\",\n+\n+    gArgs.AddArg(\"-fallbackfee=<amt>\", strprintf(\"A fee rate (in %s/kB) that will be used when fee estimation has insufficient data. 0 to entirely disable the fallbackfee feature. (default: %s)\",\n                                                                CURRENCY_UNIT, FormatMoney(DEFAULT_FALLBACK_FEE)), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-keypool=<n>\", strprintf(\"Set key pool size to <n> (default: %u)\", DEFAULT_KEYPOOL_SIZE), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-maxtxfee=<amt>\", strprintf(\"Maximum total fees (in %s) to use in a single wallet transaction; setting this too low may abort large transactions (default: %s)\","
      },
      {
        "sha": "c131250d9ffdefcb8e71129eb914001b6febf022",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4",
        "patch": "@@ -4420,7 +4420,6 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         walletInstance->m_min_fee = CFeeRate(n);\n     }\n \n-    walletInstance->m_allow_fallback_fee = Params().IsTestChain();\n     if (gArgs.IsArgSet(\"-fallbackfee\")) {\n         CAmount nFeePerK = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-fallbackfee\", \"\"), nFeePerK)) {\n@@ -4432,8 +4431,10 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n                               _(\"This is the transaction fee you may pay when fee estimates are not available.\").translated);\n         }\n         walletInstance->m_fallback_fee = CFeeRate(nFeePerK);\n-        walletInstance->m_allow_fallback_fee = nFeePerK != 0; //disable fallback fee in case value was set to 0, enable if non-null value\n     }\n+    // Disable fallback fee in case value was set to 0, enable if non-null value\n+    walletInstance->m_allow_fallback_fee = walletInstance->m_fallback_fee.GetFeePerK() != 0;\n+\n     if (gArgs.IsArgSet(\"-discardfee\")) {\n         CAmount nFeePerK = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-discardfee\", \"\"), nFeePerK)) {"
      },
      {
        "sha": "7d14e2ab80f729fb304019de767008f634dc3bde",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4",
        "patch": "@@ -63,7 +63,7 @@ static const unsigned int DEFAULT_KEYPOOL_SIZE = 1000;\n //! -paytxfee default\n constexpr CAmount DEFAULT_PAY_TX_FEE = 0;\n //! -fallbackfee default\n-static const CAmount DEFAULT_FALLBACK_FEE = 20000;\n+static const CAmount DEFAULT_FALLBACK_FEE = 0;\n //! -discardfee default\n static const CAmount DEFAULT_DISCARD_FEE = 10000;\n //! -mintxfee default\n@@ -1167,7 +1167,7 @@ class CWallet final : public FillableSigningProvider, private interfaces::Chain:\n     unsigned int m_confirm_target{DEFAULT_TX_CONFIRM_TARGET};\n     bool m_spend_zero_conf_change{DEFAULT_SPEND_ZEROCONF_CHANGE};\n     bool m_signal_rbf{DEFAULT_WALLET_RBF};\n-    bool m_allow_fallback_fee{true}; //!< will be defined via chainparams\n+    bool m_allow_fallback_fee{true}; //!< will be false if -fallbackfee=0\n     CFeeRate m_min_fee{DEFAULT_TRANSACTION_MINFEE}; //!< Override with -mintxfee\n     /**\n      * If fee estimation does not have enough data to provide estimates, use this fee instead."
      },
      {
        "sha": "ebd7e5d51a8d5f4cce40b4bb80d33b244d16a44f",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=ea4cc3a7b36a9c77dbf0aff439da3ef0ea58e6e4",
        "patch": "@@ -299,6 +299,7 @@ def initialize_datadir(dirname, n, chain):\n         f.write(\"[{}]\\n\".format(chain_name_conf_section))\n         f.write(\"port=\" + str(p2p_port(n)) + \"\\n\")\n         f.write(\"rpcport=\" + str(rpc_port(n)) + \"\\n\")\n+        f.write(\"fallbackfee=0.0002\\n\")\n         f.write(\"server=1\\n\")\n         f.write(\"keypool=1\\n\")\n         f.write(\"discover=0\\n\")"
      }
    ]
  }
]