DrahtBot,2019-11-11 19:38:18,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19069 (refactor: replace pointers by references within tx_verify.{h,cpp} by theStack)\n* #18096 (doc: IsFinalTx comment a",https://github.com/bitcoin/bitcoin/pull/17443#issuecomment-552584176,552584176,
ariard,2019-12-18 00:49:41,"@ryanofsky Thanks for review!\n\nI went ahead on replaced `checkFinalTx` by `CheckFinalWalletTx` which itself calls `IsFinalTx` by caching median time past in the wallet.\n\nAbout testing, I think a bit about it, it's quite hard because contrary to the consensus code where finality enforcement is going to change after softfork activation, wallet is always using current finality consensus rules",https://github.com/bitcoin/bitcoin/pull/17443#issuecomment-566816288,566816288,
ariard,2019-12-18 18:28:25,"01377a5\n\nMoved `IsFinalTx` from `consensus/tx_verify.h` to `consensus/tx_check.h` as it's context-independent and so let wallet code called it without linking against server one. Should fix travis build failure.",https://github.com/bitcoin/bitcoin/pull/17443#issuecomment-567153538,567153538,
ariard,2020-01-03 23:32:49,"Updated bbdc8b5, extended both `IsTrusted` declarations with NO_THREAD_SAFETY_ANALYSIS to pass static analysis on macOS and so remove travis failure.",https://github.com/bitcoin/bitcoin/pull/17443#issuecomment-570729250,570729250,
ariard,2020-05-13 06:03:34,"@fjahr @ryanofsky it has been rebased after #16426 merged, they shouldn't have any substantial changes since your last ACK but let me know if you find any issue.",https://github.com/bitcoin/bitcoin/pull/17443#issuecomment-627765493,627765493,
ariard,2020-05-19 08:16:49,"Thanks @ryanofsky and @jonatack for reviews, took most of your suggestion, specially with better comment for top message commit.",https://github.com/bitcoin/bitcoin/pull/17443#issuecomment-630662766,630662766,
jonatack,2020-05-19 12:51:43,re-almost ACK 808dc17 the changes per `git diff b14e07b 808dc17` look good (thanks!); building locally with Clang is raising as mentioned above.,https://github.com/bitcoin/bitcoin/pull/17443#issuecomment-630796103,630796103,
fjahr,2020-05-23 12:12:55,I also see the build error locally (I use clang by default). Code looks good but will wait with a full review until the fix is up.,https://github.com/bitcoin/bitcoin/pull/17443#issuecomment-633040289,633040289,
ariard,2020-06-04 02:07:14,Rebased and updated with fix at d55ba31. Thanks for your patience!,https://github.com/bitcoin/bitcoin/pull/17443#issuecomment-638557606,638557606,
DrahtBot,2020-06-08 16:34:30,<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/17443#issuecomment-640738686,640738686,
jonatack,2019-11-11 18:47:04,"Here it seems should be either ""Setting-appropriate flags select"" or ""Setting appropriate flags selects"". \n\nI think it's the latter but it's not clear from the sentence.\n\nSuggest: s/would/will/",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r344854791,344854791,src/validation.cpp
jonatack,2019-11-11 18:49:38,"s/i.e/i.e./\n\nIt looks like ""softfork"" should be plural.",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r344855824,344855824,src/validation.cpp
ryanofsky,2019-12-16 16:22:58,"Maybe drop this sentence about CSV/LOCKTIME_MEDIAN_TIME_PAST. It seems only slightly relevant, and already pretty clear by looking at the code below. This sentence could also become out of date if the code below changes.",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r358329218,358329218,src/validation.cpp
ryanofsky,2019-12-16 16:32:53,"I understand correcting ""negative value for flags indicates that _the current network-enforced consensus rules_ should be used"" to ""negative value for flags indicates that _no soft-forked consensus rules_ should be used"".\n\nBut I think the other changes to this comment make it less clear. I'm wondering if something about the following removed section is inaccurate or if it was shortened and rew",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r358335066,358335066,src/validation.cpp
ariard,2019-12-18 00:55:46,"I think the comment was written when BIP113 code was merged but no yet activated and scheduled for activation. It's right we don't have soft-forks scheduled now, but it's false there is no flag to set (LOCKTIME_MEDIAN_TIME_PAST)",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r359105468,359105468,src/validation.cpp
ryanofsky,2019-12-18 18:32:25,"re: https://github.com/bitcoin/bitcoin/pull/17443#discussion_r359105468\n\nI don't understand ""it's false there is no flag to set (LOCKTIME_MEDIAN_TIME_PAST)."" since this code isn't setting LOCKTIME_MEDIAN_TIME_PAST, it's setting 0...\n\nBut more broadly, I don't understand why there would be a reason to keep this code if it isn't going to serve a function in a future soft fork. Why not simpli",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r359502232,359502232,src/validation.cpp
ryanofsky,2019-12-18 18:44:02,"In commit ""Replace Chain::checkFinal by CWallet::CheckFinalWalletTx"" (0ef43cef24b837367a90c97a31470e0f19f18552)\n\nI see this comment is copied from [existing code](https://github.com/bitcoin/bitcoin/blob/6fef85bfa3cd7f76e83b8b57f9e4acd63eb664ec/src/validation.cpp#L200-L205), but the part about this function being called from `CBlock::AcceptBlock` doesn't apply here, right? Would it be ok to dro",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r359507613,359507613,src/wallet/wallet.cpp
ariard,2019-12-19 00:25:32,"CheckFinalTx is called with STANDARD_LOCKTIME_VERIFY_FLAGS in `PreChecks` and `removeForReorg`. Given it's only mempool I think you'e right, you can hardcode that you always want to use the most recent consensus rules but I would prefer to do that as a follow-up to avoid missing something.",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r359635222,359635222,src/validation.cpp
ariard,2019-12-19 00:29:18,"The comment is about that we want to call `IsFinalTx` the same way it's called in `AcceptBlock`, i.e with `nBlockHeight` set to tip+1 to evaluate the consensus rule identically in both wallet and node. You don't want discrepancies between them. I think the last sentence is expressing that ""if a transaction can be part of the *next* block"", and speaking of `m_last_block_processed_height` is verbose",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r359636084,359636084,src/wallet/wallet.cpp
ryanofsky,2020-01-08 22:28:26,"In commit ""Replace Chain::checkFinal by CWallet::CheckFinalWalletTx"" (1f479751b2eaf6f17ae76334b72ebc5fd76d8956)\n\nI think it'd be safer to just add `AssertLockHeld` statements if the compiler can't determine that a particular lock is held, than to disable safety analysis altogether. On my system, the following changes seem to work:\n\n```diff\ndiff --git a/src/wallet/wallet.cpp b/src/wallet/",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r364474972,364474972,src/wallet/wallet.h
ariard,2020-01-16 22:59:48,Did you test on a Linux ? IIRC clang static analysis only work on MacOS. `AssertLockHeld` is lock checking at runtime,https://github.com/bitcoin/bitcoin/pull/17443#discussion_r367693585,367693585,src/wallet/wallet.h
ryanofsky,2020-01-16 23:21:20,"> Did you test on a Linux ? IIRC clang static analysis only work on MacOS. `AssertLockHeld` is lock checking at runtime\n\nAssertLockHeld does affect static analysis, because it sets the `assert_exclusive_lock` attribute, see https://clang.llvm.org/docs/ThreadSafetyAnalysis.html. I am testing on linux, and I am using clang and have static analysis enabled. The following change works fine for me ",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r367700050,367700050,src/wallet/wallet.h
fjahr,2020-01-18 21:39:14,"nit: some grammar improvement on this paragraph\n\n```\n    // The wallet is not doing historical validation work, it's only\n    // interested in the nLocktime evaluation as enforced on\n    // the current chain tip (BIP 113). If there are forks changing\n    // this in the future, the wallet should be updated.\n```",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r368250007,368250007,src/wallet/wallet.cpp
ariard,2020-01-29 21:30:18,"Thanks for review, will take them if I have to update PR!",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r372640391,372640391,src/wallet/wallet.cpp
ryanofsky,2020-05-13 19:58:56,"In commit ""Add m_last_block_mediam_time_past in CWallet"" (46744a2998ee196bd366b49fa14036ab7acec30b)\n\nWould seem better to handle failure, drop temporary variable, and use m_last_block_processed consistently here:\n\n```c++\nCHECK_NONFATAL(chain.findBlock(walletInstance->m_last_block_processed, FoundBlock().mtpTime(walletInstance->m_last_block_median_time_past)));\n``` ",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r424696041,424696041,src/wallet/wallet.cpp
jonatack,2020-05-15 08:04:57,"a20187d suggestion while moving this code \n```diff\n-bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+bool IsFinalTx(const CTransaction& tx, int nBlockHeight, int64_t nBlockTime)\n```\n",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r425634319,425634319,src/consensus/tx_check.cpp
jonatack,2020-05-15 08:16:59,"46744a2 I agree with @ryanofsky's suggestion above.\n\nIf you do keep the tempvar, please move it to the local scope where it is used:\n```diff\n-    int64_t mtp_time;\n     if (tip_height) {\n         walletInstance->m_last_block_processed = chain.getBlockHash(*tip_height);\n         walletInstance->m_last_block_processed_height = *tip_height;\n+        int64_t mtp_time;\n```",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r425640362,425640362,src/wallet/wallet.cpp
jonatack,2020-05-15 08:47:06,"36ab1db7 Why not resolve the issue and get rid of this (and the TODO), rather than taking on technical debt?",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r425656746,425656746,src/wallet/wallet.h
jonatack,2020-05-15 08:58:26,It would be good to fix this. I started rewriting it as well before seeing @fjahr's suggestion. It's costing multiple reviewers time already (and future readers trying to parse it) when it could be fixed easily.,https://github.com/bitcoin/bitcoin/pull/17443#discussion_r425662971,425662971,src/wallet/wallet.cpp
jonatack,2020-05-15 09:13:37,Nice improvement here!,https://github.com/bitcoin/bitcoin/pull/17443#discussion_r425671493,425671493,src/wallet/rpcwallet.cpp
ariard,2020-05-19 08:14:01,"Solved, note I don't think using `m_last_block_processed` or `GetBlockHash` changes something on the consistency level but did so for code clarity",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r427112533,427112533,src/wallet/wallet.cpp
ariard,2020-05-19 08:14:54,"Yes thanks for the call, in fact issue was solved since. Removed.",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r427113087,427113087,src/wallet/wallet.h
ariard,2020-05-19 08:15:06,"Thanks, took comment.",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r427113212,427113212,src/wallet/wallet.cpp
ryanofsky,2020-05-19 12:05:30,"In commit ""[wallet] Replace Chain::checkFinal by CWallet::CheckFinalWalletTx"" (03870881969b12d8023716897ff674ec6ec3568e)\n\nTravis error here:\n\n```\nIn file included from interfaces/wallet.cpp:24:\n./wallet/wallet.h:558:51: error: use of undeclared identifier 'cs_wallet'; did you mean 'pwallet'?\n    bool isFinal() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n                             ",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r427249004,427249004,src/wallet/wallet.h
jonatack,2020-05-19 12:34:47,"Seeing the same messages while building locally, the gcc 8.3 build is fine but the clang 6.0 debug/werror build errors.",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r427266096,427266096,src/wallet/wallet.h
jonatack,2020-05-19 12:47:49,"Building with `pwallet->cs_wallet` halts with\n```\n./wallet/wallet.h:558:58: error: member access into incomplete type 'const CWallet'\n    bool isFinal() const EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet);\n                                                         ^\n./wallet/fees.h:13:7: note: forward declaration of 'CWallet'\nclass CWallet;\n      ^\n```",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r427274230,427274230,src/wallet/wallet.h
ariard,2020-05-19 22:39:44,"@jonatack @ryanofsky You right I didn't the warning at first, was compiling with gcc locally. Okay in fact the issue hasn't been solved wrt to `NO_THREAD_SAFETY_ANALYSIS`. \n\nIsn't the way to solve it cleanly would be to get `CWalletTx` its own lock instead of requiring `CWallet` one ? I don't see a better way to solve dependency declaration..",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r427640395,427640395,src/wallet/wallet.h
ariard,2020-06-04 02:06:31,Updated dropping `isFinal` accessor on the advice of @ryanofsky ,https://github.com/bitcoin/bitcoin/pull/17443#discussion_r434951570,434951570,src/wallet/wallet.h
ryanofsky,2020-06-12 02:25:23,"In commit ""[wallet] Add m_last_block_mediam_time_past in CWallet"" (1d2345b31f638cfd1f581a4cf67d3a5624e4d036)\n\nSuggest using CHECK_NONFATAL(chain.findBlock...) to catch a failure early if chain.findBlock returns not found for some reason",https://github.com/bitcoin/bitcoin/pull/17443#discussion_r439173261,439173261,src/wallet/wallet.cpp
