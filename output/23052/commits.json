[
  {
    "sha": "74c0d81b46150923f9af9631f4e3ecf80213cca2",
    "node_id": "C_kwDOABII59oAKDc0YzBkODFiNDYxNTA5MjNmOWFmOTYzMWY0ZTNlY2Y4MDIxM2NjYTI",
    "commit": {
      "author": {
        "name": "Shubhankar",
        "email": "Shubhankargambhir013@gmail.com",
        "date": "2021-09-21T09:51:53Z"
      },
      "committer": {
        "name": "Shubhankar",
        "email": "Shubhankargambhir013@gmail.com",
        "date": "2021-09-29T15:13:45Z"
      },
      "message": "test: use miniwallet in test_rpc() function in feature_rbf.py",
      "tree": {
        "sha": "182973f3adca545f61f77e63bcdad89d15b6f6f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/182973f3adca545f61f77e63bcdad89d15b6f6f8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74c0d81b46150923f9af9631f4e3ecf80213cca2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74c0d81b46150923f9af9631f4e3ecf80213cca2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/74c0d81b46150923f9af9631f4e3ecf80213cca2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74c0d81b46150923f9af9631f4e3ecf80213cca2/comments",
    "author": {
      "login": "Shubhankar-Gambhir",
      "id": 58947326,
      "node_id": "MDQ6VXNlcjU4OTQ3MzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/58947326?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Shubhankar-Gambhir",
      "html_url": "https://github.com/Shubhankar-Gambhir",
      "followers_url": "https://api.github.com/users/Shubhankar-Gambhir/followers",
      "following_url": "https://api.github.com/users/Shubhankar-Gambhir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Shubhankar-Gambhir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Shubhankar-Gambhir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Shubhankar-Gambhir/subscriptions",
      "organizations_url": "https://api.github.com/users/Shubhankar-Gambhir/orgs",
      "repos_url": "https://api.github.com/users/Shubhankar-Gambhir/repos",
      "events_url": "https://api.github.com/users/Shubhankar-Gambhir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Shubhankar-Gambhir/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Shubhankar-Gambhir",
      "id": 58947326,
      "node_id": "MDQ6VXNlcjU4OTQ3MzI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/58947326?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Shubhankar-Gambhir",
      "html_url": "https://github.com/Shubhankar-Gambhir",
      "followers_url": "https://api.github.com/users/Shubhankar-Gambhir/followers",
      "following_url": "https://api.github.com/users/Shubhankar-Gambhir/following{/other_user}",
      "gists_url": "https://api.github.com/users/Shubhankar-Gambhir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Shubhankar-Gambhir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Shubhankar-Gambhir/subscriptions",
      "organizations_url": "https://api.github.com/users/Shubhankar-Gambhir/orgs",
      "repos_url": "https://api.github.com/users/Shubhankar-Gambhir/repos",
      "events_url": "https://api.github.com/users/Shubhankar-Gambhir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Shubhankar-Gambhir/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8d83f9c1d19d9e701291b9906723dfb548d3dc5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d83f9c1d19d9e701291b9906723dfb548d3dc5f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8d83f9c1d19d9e701291b9906723dfb548d3dc5f"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 12,
      "deletions": 13
    },
    "files": [
      {
        "sha": "4eaaf46454858e5a4ada5b883de243ef80b55975",
        "filename": "test/functional/feature_rbf.py",
        "status": "modified",
        "additions": 12,
        "deletions": 13,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74c0d81b46150923f9af9631f4e3ecf80213cca2/test/functional/feature_rbf.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74c0d81b46150923f9af9631f4e3ecf80213cca2/test/functional/feature_rbf.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_rbf.py?ref=74c0d81b46150923f9af9631f4e3ecf80213cca2",
        "patch": "@@ -26,7 +26,7 @@\n     DUMMY_2_P2WPKH_SCRIPT,\n )\n from test_framework.wallet import MiniWallet\n-\n+from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE\n \n MAX_REPLACEMENT_LIMIT = 100\n class ReplaceByFeeTest(BitcoinTestFramework):\n@@ -44,9 +44,6 @@ def set_test_params(self):\n         ]\n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         self.wallet = MiniWallet(self.nodes[0])\n         # the pre-mined test framework chain contains coinbase outputs to the\n@@ -531,24 +528,26 @@ def test_prioritised_transactions(self):\n         assert tx2b_txid in self.nodes[0].getrawmempool()\n \n     def test_rpc(self):\n-        us0 = self.nodes[0].listunspent()[0]\n+        us0 = self.wallet.get_utxo()\n         ins = [us0]\n-        outs = {self.nodes[0].getnewaddress(): Decimal(1.0000000)}\n+        outs = {ADDRESS_BCRT1_UNSPENDABLE: Decimal(1.0000000)}\n         rawtx0 = self.nodes[0].createrawtransaction(ins, outs, 0, True)\n         rawtx1 = self.nodes[0].createrawtransaction(ins, outs, 0, False)\n         json0 = self.nodes[0].decoderawtransaction(rawtx0)\n         json1 = self.nodes[0].decoderawtransaction(rawtx1)\n         assert_equal(json0[\"vin\"][0][\"sequence\"], 4294967293)\n         assert_equal(json1[\"vin\"][0][\"sequence\"], 4294967295)\n \n-        rawtx2 = self.nodes[0].createrawtransaction([], outs)\n-        frawtx2a = self.nodes[0].fundrawtransaction(rawtx2, {\"replaceable\": True})\n-        frawtx2b = self.nodes[0].fundrawtransaction(rawtx2, {\"replaceable\": False})\n+        if self.is_wallet_compiled():\n+            self.init_wallet(0)\n+            rawtx2 = self.nodes[0].createrawtransaction([], outs)\n+            frawtx2a = self.nodes[0].fundrawtransaction(rawtx2, {\"replaceable\": True})\n+            frawtx2b = self.nodes[0].fundrawtransaction(rawtx2, {\"replaceable\": False})\n \n-        json0 = self.nodes[0].decoderawtransaction(frawtx2a['hex'])\n-        json1 = self.nodes[0].decoderawtransaction(frawtx2b['hex'])\n-        assert_equal(json0[\"vin\"][0][\"sequence\"], 4294967293)\n-        assert_equal(json1[\"vin\"][0][\"sequence\"], 4294967294)\n+            json0 = self.nodes[0].decoderawtransaction(frawtx2a['hex'])\n+            json1 = self.nodes[0].decoderawtransaction(frawtx2b['hex'])\n+            assert_equal(json0[\"vin\"][0][\"sequence\"], 4294967293)\n+            assert_equal(json1[\"vin\"][0][\"sequence\"], 4294967294)\n \n     def test_no_inherited_signaling(self):\n         confirmed_utxo = self.wallet.get_utxo()"
      }
    ]
  }
]