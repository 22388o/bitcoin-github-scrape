MarcoFalke,2020-04-06 20:49:30,Could add a test for the disconnect?,https://github.com/bitcoin/bitcoin/pull/18544#issuecomment-610029250,610029250,
theStack,2020-04-06 21:55:27,"> Could add a test for the disconnect?\n\nIndeed, I added a test checking that sending `filteradd` is treated as misbehavior by the node through getting the peer's `banscore` via RPC `getpeerinfo` before and after (As the node is started with `noban` on localhost, no disconnect/ban happens).",https://github.com/bitcoin/bitcoin/pull/18544#issuecomment-610057607,610057607,
theStack,2020-04-09 09:29:17,"Rebased, after https://github.com/bitcoin/bitcoin/pull/18533 has been merged.",https://github.com/bitcoin/bitcoin/pull/18544#issuecomment-611429868,611429868,
theStack,2020-04-13 15:59:28,"Updated the functional test commit to also check for the `inv`/`getdata` exchange via `assert_debug_log`, as [suggested by MarcoFalke above](https://github.com/bitcoin/bitcoin/pull/18544#discussion_r407539041). Also added the check that no tx is received on a request for filtered blocks if no filter is set.",https://github.com/bitcoin/bitcoin/pull/18544#issuecomment-612961698,612961698,
theStack,2020-04-14 12:39:07,"Updated with @MarcoFalke's suggestion of explicitely waiting for an `inv` with specified blockhash via `wait_for_inv(...)`, and checking that `getdata` was received by the node via `assert_debug_log(...)`.",https://github.com/bitcoin/bitcoin/pull/18544#issuecomment-613418267,613418267,
theStack,2020-04-14 14:45:45,"Force-pushed again, now also fixes the bug described in https://github.com/bitcoin/bitcoin/pull/18544#discussion_r408152806. Updated the commit message to also describe the bugfix and include MarcoFalke as co-author.",https://github.com/bitcoin/bitcoin/pull/18544#issuecomment-613485884,613485884,
MarcoFalke,2020-04-14 14:47:49,"re-ACK a9ecbdfcaa, only change is in test code ðŸ•™\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nre-ACK a9ecbdfcaa, only change is in test code ðŸ•™\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjCSAwAw+tbTLrCHbMLnWn1DS/3VJnGEQ1JQzbznwQP2Cc0B99cHG",https://github.com/bitcoin/bitcoin/pull/18544#issuecomment-613487038,613487038,
DrahtBot,2020-04-16 23:24:17,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18672 (test: add further BIP37 size limit checks to p2p_filter.py by theStack)\n\nIf you consider this pull request impor",https://github.com/bitcoin/bitcoin/pull/18544#issuecomment-614946686,614946686,
jonasschnelli,2020-04-21 08:03:56,"This merge broke the master build on [bitcoinbuilds.org](https://bitcoinbuilds.org).\np2p_filter.py seems to fail always since this merge.\n\nSee: https://bitcoinbuilds.org/index.php?ansilog=b3d4f4bf-5d4b-4957-9bf3-91ffe4a799fb.log#l2935\nOr build 2509: https://bitcoinbuilds.org/index.php?build=2509",https://github.com/bitcoin/bitcoin/pull/18544#issuecomment-617022092,617022092,
MarcoFalke,2020-04-21 12:00:14,"Yes, it was a silent merge conflict on the test script. Should be fixed now.",https://github.com/bitcoin/bitcoin/pull/18544#issuecomment-617136115,617136115,
hebasto,2020-04-21 12:03:40,"> Yes, it was a silent merge conflict on the test script. Should be fixed now.\n\nSee #18721",https://github.com/bitcoin/bitcoin/pull/18544#issuecomment-617137564,617137564,
chanhosuh,2020-04-13 02:19:49,"I see Marco's ""wait enough pings"" approach is becoming a pattern now.. ;) .  Might I suggest wrapping this up into a nicely-named method?  Not only will this help future contributors understand intent but if anyone ever comes up with a better approach, they can easily replace all the right instances of multiple `sync_with_pings`.",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r407287749,407287749,test/functional/p2p_filter.py
MarcoFalke,2020-04-13 14:11:37,"Why is this calling `sync_with_ping`? Shouldn't it send a getdata(blockhash, MSG_FILTERED_BLOCK)?",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r407497982,407497982,test/functional/p2p_filter.py
theStack,2020-04-13 15:21:24,"Sending of `getdata` happens in the `on_inv()` callback method, i.e. as reply to an received `inv` message from the node. The `sync_with_ping`s are there to have some implicit delay to ensure there was enough time for the `inv`/`getdata` exchange and a (in this case, fictive) `merkleblock` message to arrive, so that the assert below has a value. (If you remember, we discussed in PR https://github.",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r407534906,407534906,test/functional/p2p_filter.py
MarcoFalke,2020-04-13 15:29:05,"Oh, I didn't realize that inv's and getdata's are already sent back and forth. Maybe clarify this with an `assert_debug_log`?",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r407539041,407539041,test/functional/p2p_filter.py
theStack,2020-04-13 15:29:26,"Hi chanhosuh, thanks for reviewing and the suggestion! Seems like you have followed the discussion in PR #18334 where this pattern first appeared :) I like the idea of a method, but don't have an idea of a good descriptive name. I anyways think it would be too much stuffing this also in this PR. May you want to come up with a follow-up PR?",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r407539265,407539265,test/functional/p2p_filter.py
theStack,2020-04-13 15:55:59,"That's a good idea. I haven't used `assert_debug_log` before but from what I can see it _waits_ for the expected messages, i.e. after such an debug-log-assert block with the expected messages of `'sending inv'` and `'received getdata'` we have the guarantee that the node has already received the `getdata` request and one following `sync_with_ping` should be enough. :tada: ",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r407553380,407553380,test/functional/p2p_filter.py
MarcoFalke,2020-04-13 16:23:38,"Yeah, it happens to wait for it to appear, but we shouldn't rely on that when possible. This has been added only as an ""emergency measure"" for `rpc_setban.py`. ;)",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r407568262,407568262,test/functional/p2p_filter.py
MarcoFalke,2020-04-13 16:31:38,"```suggestion\n        with self.nodes[0].assert_debug_log(expected_msgs=['sending inv', 'received getdata']):\n```\n\nI don't really like having the debug log as a synchronisation mechanism when we have proper mininode methods like `wait_for_inv` to achieve the same.",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r407572790,407572790,test/functional/p2p_filter.py
MarcoFalke,2020-04-13 18:07:52,"I know I suggested to use `assert_debug_log` for the inv and getdata, but a better solution would be to use `wait_for_inv`, which also checks the hash:\n\n```diff\ndiff --git a/test/functional/p2p_filter.py b/test/functional/p2p_filter.py\nindex 0b338caa9a..6a8f54e376 100755\n--- a/test/functional/p2p_filter.py\n+++ b/test/functional/p2p_filter.py\n@@ -7,12 +7,13 @@ Test BIP 37\n """"""\n \",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r407626007,407626007,test/functional/p2p_filter.py
theStack,2020-04-13 21:02:48,Alright :+1: The `assert_debug_log` can then be removed completely? I force-pushed an update.,https://github.com/bitcoin/bitcoin/pull/18544#discussion_r407719499,407719499,test/functional/p2p_filter.py
MarcoFalke,2020-04-13 21:37:32,"I'd say to keep it for the 'received getdata', but no strong opinion",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r407736457,407736457,test/functional/p2p_filter.py
chanhosuh,2020-04-13 23:25:30,"I don't have an idea for a good name either :).  Anyway, the recent changes have seemingly deprecated this topic.",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r407776086,407776086,test/functional/p2p_filter.py
theStack,2020-04-14 12:40:57,Done.,https://github.com/bitcoin/bitcoin/pull/18544#discussion_r408103717,408103717,test/functional/p2p_filter.py
MarcoFalke,2020-04-14 13:52:11,"Sorry, I found a bug in my test code.\n\n```diff\ndiff --git a/test/functional/p2p_filter.py b/test/functional/p2p_filter.py\nindex 39050d98dd..7f8da2ba90 100755\n--- a/test/functional/p2p_filter.py\n+++ b/test/functional/p2p_filter.py\n@@ -37,8 +37,9 @@ class FilterNode(P2PInterface):\n         for i in message.inv:\n             # inv messages can only contain TX or BLOCK, so translate ",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r408152806,408152806,test/functional/p2p_filter.py
MarcoFalke,2020-04-14 13:53:56,"Reason is that invs are only allowed to be BLOCK or TX, nothing else",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r408154219,408154219,test/functional/p2p_filter.py
theStack,2020-04-14 14:34:13,"Oh, that's true. But I'm a bit confused on why it was still possible that the test passed? Was the code in `on_inv()` directly modifying the object that was stored in the `last_message` dictionary?",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r408185320,408185320,test/functional/p2p_filter.py
MarcoFalke,2020-04-14 14:39:42,"Yes, in python everything is a reference (like a shared pointer, but as a reference). So when modifying a member variable or an element in a list or so, it is going to modify all other instances that point to that list or object.",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r408189639,408189639,test/functional/p2p_filter.py
MarcoFalke,2020-04-14 14:40:41,"The test passed because it checked for `MSG_FILTERED_BLOCK`, whereas it should have tested for `MSG_BLOCK`",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r408190412,408190412,test/functional/p2p_filter.py
theStack,2020-04-14 14:58:40,"Thanks for the explanation, that makes sense. I didn't consider that in Python every name is a reference :see_no_evil: ",https://github.com/bitcoin/bitcoin/pull/18544#discussion_r408205315,408205315,test/functional/p2p_filter.py
