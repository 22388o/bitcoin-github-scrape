[
  {
    "sha": "beb36e800c393da3c5857a8f1e5959748ac0f96b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZWIzNmU4MDBjMzkzZGEzYzU4NTdhOGYxZTU5NTk3NDhhYzBmOTZi",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2014-07-29T14:53:38Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2014-08-14T16:19:54Z"
      },
      "message": "ui_interface: remove unused NotifyBlocksChanged signal",
      "tree": {
        "sha": "41e4ff78f9adc6fd5eb7867247a6de81015d355d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41e4ff78f9adc6fd5eb7867247a6de81015d355d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/beb36e800c393da3c5857a8f1e5959748ac0f96b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/beb36e800c393da3c5857a8f1e5959748ac0f96b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/beb36e800c393da3c5857a8f1e5959748ac0f96b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/beb36e800c393da3c5857a8f1e5959748ac0f96b/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "7accb7dbad6bef0c98dc436d164f27189294eaf5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7accb7dbad6bef0c98dc436d164f27189294eaf5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7accb7dbad6bef0c98dc436d164f27189294eaf5"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 1,
      "deletions": 15
    },
    "files": [
      {
        "sha": "e73942d7e0041648d78f3f088fc868b13abfa6bc",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/beb36e800c393da3c5857a8f1e5959748ac0f96b/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/beb36e800c393da3c5857a8f1e5959748ac0f96b/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=beb36e800c393da3c5857a8f1e5959748ac0f96b",
        "patch": "@@ -1386,10 +1386,8 @@ void Misbehaving(NodeId pnode, int howmuch)\n void static InvalidChainFound(CBlockIndex* pindexNew)\n {\n     if (!pindexBestInvalid || pindexNew->nChainWork > pindexBestInvalid->nChainWork)\n-    {\n         pindexBestInvalid = pindexNew;\n-        uiInterface.NotifyBlocksChanged();\n-    }\n+\n     LogPrintf(\"InvalidChainFound: invalid block=%s  height=%d  log2_work=%.8g  date=%s\\n\",\n       pindexNew->GetBlockHash().ToString(), pindexNew->nHeight,\n       log(pindexNew->nChainWork.getdouble())/log(2.0), DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\",\n@@ -2175,7 +2173,6 @@ bool ActivateBestChain(CValidationState &state) {\n                 boost::thread t(runCommand, strCmd); // thread runs free\n             }\n         }\n-        uiInterface.NotifyBlocksChanged();\n     } while(pindexMostWork != chainActive.Tip());\n \n     return true;"
      },
      {
        "sha": "fea99bfd93790aad092b97cac160d54e1535bf96",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/beb36e800c393da3c5857a8f1e5959748ac0f96b/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/beb36e800c393da3c5857a8f1e5959748ac0f96b/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=beb36e800c393da3c5857a8f1e5959748ac0f96b",
        "patch": "@@ -208,12 +208,6 @@ static void ShowProgress(ClientModel *clientmodel, const std::string &title, int\n                               Q_ARG(int, nProgress));\n }\n \n-static void NotifyBlocksChanged(ClientModel *clientmodel)\n-{\n-    // This notification is too frequent. Don't trigger a signal.\n-    // Don't remove it, though, as it might be useful later.\n-}\n-\n static void NotifyNumConnectionsChanged(ClientModel *clientmodel, int newNumConnections)\n {\n     // Too noisy: qDebug() << \"NotifyNumConnectionsChanged : \" + QString::number(newNumConnections);\n@@ -233,7 +227,6 @@ void ClientModel::subscribeToCoreSignals()\n {\n     // Connect signals to client\n     uiInterface.ShowProgress.connect(boost::bind(ShowProgress, this, _1, _2));\n-    uiInterface.NotifyBlocksChanged.connect(boost::bind(NotifyBlocksChanged, this));\n     uiInterface.NotifyNumConnectionsChanged.connect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n     uiInterface.NotifyAlertChanged.connect(boost::bind(NotifyAlertChanged, this, _1, _2));\n }\n@@ -242,7 +235,6 @@ void ClientModel::unsubscribeFromCoreSignals()\n {\n     // Disconnect signals from client\n     uiInterface.ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));\n-    uiInterface.NotifyBlocksChanged.disconnect(boost::bind(NotifyBlocksChanged, this));\n     uiInterface.NotifyNumConnectionsChanged.disconnect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n     uiInterface.NotifyAlertChanged.disconnect(boost::bind(NotifyAlertChanged, this, _1, _2));\n }"
      },
      {
        "sha": "a073a32828ffa00a9a393efb15814d5beebe5d71",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/beb36e800c393da3c5857a8f1e5959748ac0f96b/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/beb36e800c393da3c5857a8f1e5959748ac0f96b/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=beb36e800c393da3c5857a8f1e5959748ac0f96b",
        "patch": "@@ -78,9 +78,6 @@ class CClientUIInterface\n     /** Translate a message to the native language of the user. */\n     boost::signals2::signal<std::string (const char* psz)> Translate;\n \n-    /** Block chain changed. */\n-    boost::signals2::signal<void ()> NotifyBlocksChanged;\n-\n     /** Number of network connections changed. */\n     boost::signals2::signal<void (int newNumConnections)> NotifyNumConnectionsChanged;\n "
      }
    ]
  },
  {
    "sha": "ca1b40d6ddcfa5d42539fc98b580a3d815a8ef57",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYTFiNDBkNmRkY2ZhNWQ0MjUzOWZjOThiNTgwYTNkODE1YThlZjU3",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2014-08-25T18:53:45Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2014-08-25T18:53:45Z"
      },
      "message": "Create new signal for notification of new blocks.  Use w/ -blocknotify",
      "tree": {
        "sha": "cd61234d9abb7aacc36ce92adbabcfad781c41a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd61234d9abb7aacc36ce92adbabcfad781c41a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca1b40d6ddcfa5d42539fc98b580a3d815a8ef57",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca1b40d6ddcfa5d42539fc98b580a3d815a8ef57",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ca1b40d6ddcfa5d42539fc98b580a3d815a8ef57",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca1b40d6ddcfa5d42539fc98b580a3d815a8ef57/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "beb36e800c393da3c5857a8f1e5959748ac0f96b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/beb36e800c393da3c5857a8f1e5959748ac0f96b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/beb36e800c393da3c5857a8f1e5959748ac0f96b"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 18,
      "deletions": 5
    },
    "files": [
      {
        "sha": "c1a2041224fc83405dcc40dbbc2dd4b6d5e1882d",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca1b40d6ddcfa5d42539fc98b580a3d815a8ef57/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca1b40d6ddcfa5d42539fc98b580a3d815a8ef57/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ca1b40d6ddcfa5d42539fc98b580a3d815a8ef57",
        "patch": "@@ -33,6 +33,7 @@\n #endif\n #include \"compat/sanity.h\"\n \n+#include <boost/algorithm/string/replace.hpp>\n #include <boost/algorithm/string/predicate.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/interprocess/sync/file_lock.hpp>\n@@ -367,6 +368,14 @@ std::string LicenseInfo()\n            \"\\n\";\n }\n \n+static void BlockNotifyCallback(const uint256& hashNewTip)\n+{\n+    std::string strCmd = GetArg(\"-blocknotify\", \"\");\n+\n+    boost::replace_all(strCmd, \"%s\", hashNewTip.GetHex());\n+    boost::thread t(runCommand, strCmd); // thread runs free\n+}\n+\n struct CImportingNow\n {\n     CImportingNow() {\n@@ -1184,6 +1193,9 @@ bool AppInit2(boost::thread_group& threadGroup)\n #endif // !ENABLE_WALLET\n     // ********************************************************* Step 9: import blocks\n \n+    if (mapArgs.count(\"-blocknotify\"))\n+        uiInterface.NotifyBlockTip.connect(BlockNotifyCallback);\n+\n     // scan for better chains in the block chain database, that are not yet connected in the active best chain\n     CValidationState state;\n     if (!ActivateBestChain(state))"
      },
      {
        "sha": "841cc1952f7dc0142daf5e8eb0c4178f665d12a9",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca1b40d6ddcfa5d42539fc98b580a3d815a8ef57/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca1b40d6ddcfa5d42539fc98b580a3d815a8ef57/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ca1b40d6ddcfa5d42539fc98b580a3d815a8ef57",
        "patch": "@@ -2162,16 +2162,14 @@ bool ActivateBestChain(CValidationState &state) {\n             uint256 hashNewTip = pindexNewTip->GetBlockHash();\n             // Relay inventory, but don't relay old inventory during initial block download.\n             int nBlockEstimate = Checkpoints::GetTotalBlocksEstimate();\n+            {\n             LOCK(cs_vNodes);\n             BOOST_FOREACH(CNode* pnode, vNodes)\n                 if (chainActive.Height() > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : nBlockEstimate))\n                     pnode->PushInventory(CInv(MSG_BLOCK, hashNewTip));\n-\n-            std::string strCmd = GetArg(\"-blocknotify\", \"\");\n-            if (!strCmd.empty()) {\n-                boost::replace_all(strCmd, \"%s\", hashNewTip.GetHex());\n-                boost::thread t(runCommand, strCmd); // thread runs free\n             }\n+\n+            uiInterface.NotifyBlockTip(hashNewTip);\n         }\n     } while(pindexMostWork != chainActive.Tip());\n "
      },
      {
        "sha": "bbc8a203c9343e2fa27f7c6086ac0650e9ca23d5",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca1b40d6ddcfa5d42539fc98b580a3d815a8ef57/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca1b40d6ddcfa5d42539fc98b580a3d815a8ef57/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=ca1b40d6ddcfa5d42539fc98b580a3d815a8ef57",
        "patch": "@@ -92,6 +92,9 @@ class CClientUIInterface\n \n     /** Show progress e.g. for verifychain */\n     boost::signals2::signal<void (const std::string &title, int nProgress)> ShowProgress;\n+\n+    /** New block has been accepted */\n+    boost::signals2::signal<void (const uint256& hash)> NotifyBlockTip;\n };\n \n extern CClientUIInterface uiInterface;"
      }
    ]
  }
]