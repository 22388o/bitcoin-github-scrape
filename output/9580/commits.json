[
  {
    "sha": "b9d95bd9a1b3e8613373ecd228805518f2852985",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOWQ5NWJkOWExYjNlODYxMzM3M2VjZDIyODgwNTUxOGYyODUyOTg1",
    "commit": {
      "author": {
        "name": "Douglas Roark",
        "email": "doug@bloq.com",
        "date": "2017-01-19T06:22:46Z"
      },
      "committer": {
        "name": "Douglas Roark",
        "email": "doug@bloq.com",
        "date": "2017-01-25T21:12:03Z"
      },
      "message": "Fix various minor linearization script issues\n\n- The last-timestamp-encountered variable wasn\u2019t being used properly. Rewrite code to properly allow for new blockchain files to be written when split by month.\n- Properly set a blockchain file\u2019s access and modify times.\n- Add a \u201cdebug output\u201d option to quiet certain output that might not always be desirable.\n- Update the README.",
      "tree": {
        "sha": "f6de99345ffce71288c6347bde1ba1879bb290dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6de99345ffce71288c6347bde1ba1879bb290dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b9d95bd9a1b3e8613373ecd228805518f2852985",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9d95bd9a1b3e8613373ecd228805518f2852985",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b9d95bd9a1b3e8613373ecd228805518f2852985",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9d95bd9a1b3e8613373ecd228805518f2852985/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b68f898efa095dce03533be8ac015c1faef23053",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b68f898efa095dce03533be8ac015c1faef23053",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b68f898efa095dce03533be8ac015c1faef23053"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 41,
      "deletions": 18
    },
    "files": [
      {
        "sha": "0971e7816b48f62a3881368f7e5f0503b692a3d7",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b9d95bd9a1b3e8613373ecd228805518f2852985/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b9d95bd9a1b3e8613373ecd228805518f2852985/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=b9d95bd9a1b3e8613373ecd228805518f2852985",
        "patch": "@@ -32,15 +32,21 @@ Required configuration file settings:\n * `output`: Output directory for linearized `blocks/blkNNNNN.dat` output.\n \n Optional config file setting for linearize-data:\n-* `file_timestamp`: Set each file's last-modified time to that of the most\n-recent block in that file.\n+* `debug_output`: Some printouts may not always be desired. If true, such output\n+will be printed.\n+* `file_timestamp`: Set each file's last-accessed and last-modified times,\n+respectively, to the current time and to the timestamp of the most recent block\n+written to the script's blockchain.\n * `genesis`: The hash of the genesis block in the blockchain.\n * `input`: bitcoind blocks/ directory containing blkNNNNN.dat\n * `hashlist`: text file containing list of block hashes created by\n linearize-hashes.py.\n * `max_out_sz`: Maximum size for files created by the `output_file` option.\n (Default: `1000*1000*1000 bytes`)\n * `netmagic`: Network magic number.\n+* `out_of_order_cache_sz`: If out-of-order blocks are being read, the block can\n+be written to a cache so that the blockchain doesn't have to be seeked again.\n+This option specifies the cache size. (Default: `100*1000*1000 bytes`)\n * `rev_hash_bytes`: If true, the block hash list written by linearize-hashes.py\n will be byte-reversed when read by linearize-data.py. See the linearize-hashes\n entry for more information."
      },
      {
        "sha": "db53dc0ef69ebd4b3842be8ce307babc44a9f04b",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b9d95bd9a1b3e8613373ecd228805518f2852985/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b9d95bd9a1b3e8613373ecd228805518f2852985/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=b9d95bd9a1b3e8613373ecd228805518f2852985",
        "patch": "@@ -1,4 +1,3 @@\n-\n # bitcoind RPC settings (linearize-hashes)\n rpcuser=someuser\n rpcpassword=somepassword\n@@ -21,6 +20,9 @@ input=/home/example/.bitcoin/blocks\n #genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n #input=/home/example/.bitcoin/testnet3/blocks\n \n+# \"output\" option causes blockchain files to be written to the given location,\n+# with \"output_file\" ignored. If not used, \"output_file\" is used instead.\n+# output=/home/example/blockchain_directory\n output_file=/home/example/Downloads/bootstrap.dat\n hashlist=hashlist.txt\n \n@@ -29,3 +31,12 @@ out_of_order_cache_sz = 100000000\n \n # Do we want the reverse the hash bytes coming from getblockhash?\n rev_hash_bytes = False\n+\n+# On a new month, do we want to set the access and modify times of the new\n+# blockchain file?\n+file_timestamp = 0\n+# Do we want to split the blockchain files given a new month or specific height?\n+split_timestamp = 0\n+\n+# Do we want debug printouts?\n+debug_output = False"
      },
      {
        "sha": "afcec2b60ae4f5d4ceae805bc076dbf39c982c62",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 21,
        "deletions": 15,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b9d95bd9a1b3e8613373ecd228805518f2852985/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b9d95bd9a1b3e8613373ecd228805518f2852985/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=b9d95bd9a1b3e8613373ecd228805518f2852985",
        "patch": "@@ -134,32 +134,32 @@ def writeBlock(self, inhdr, blk_hdr, rawblock):\n \t\tif not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n \t\t\tself.outF.close()\n \t\t\tif self.setFileTime:\n-\t\t\t\tos.utime(outFname, (int(time.time()), highTS))\n+\t\t\t\tos.utime(self.outFname, (int(time.time()), self.highTS))\n \t\t\tself.outF = None\n \t\t\tself.outFname = None\n \t\t\tself.outFn = self.outFn + 1\n \t\t\tself.outsz = 0\n \n \t\t(blkDate, blkTS) = get_blk_dt(blk_hdr)\n \t\tif self.timestampSplit and (blkDate > self.lastDate):\n-\t\t\tprint(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + hash_str)\n-\t\t\tlastDate = blkDate\n-\t\t\tif outF:\n-\t\t\t\toutF.close()\n-\t\t\t\tif setFileTime:\n-\t\t\t\t\tos.utime(outFname, (int(time.time()), highTS))\n+\t\t\tprint(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + self.hash_str)\n+\t\t\tself.lastDate = blkDate\n+\t\t\tif self.outF:\n+\t\t\t\tself.outF.close()\n+\t\t\t\tif self.setFileTime:\n+\t\t\t\t\tos.utime(self.outFname, (int(time.time()), self.highTS))\n \t\t\t\tself.outF = None\n \t\t\t\tself.outFname = None\n \t\t\t\tself.outFn = self.outFn + 1\n \t\t\t\tself.outsz = 0\n \n \t\tif not self.outF:\n \t\t\tif self.fileOutput:\n-\t\t\t\toutFname = self.settings['output_file']\n+\t\t\t\tself.outFname = self.settings['output_file']\n \t\t\telse:\n-\t\t\t\toutFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n-\t\t\tprint(\"Output file \" + outFname)\n-\t\t\tself.outF = open(outFname, \"wb\")\n+\t\t\t\tself.outFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n+\t\t\tprint(\"Output file \" + self.outFname)\n+\t\t\tself.outF = open(self.outFname, \"wb\")\n \n \t\tself.outF.write(inhdr)\n \t\tself.outF.write(blk_hdr)\n@@ -223,13 +223,16 @@ def run(self):\n \t\t\tblk_hdr = self.inF.read(80)\n \t\t\tinExtent = BlockExtent(self.inFn, self.inF.tell(), inhdr, blk_hdr, inLen)\n \n-\t\t\thash_str = calc_hash_str(blk_hdr)\n-\t\t\tif not hash_str in blkmap:\n-\t\t\t\tprint(\"Skipping unknown block \" + hash_str)\n+\t\t\tself.hash_str = calc_hash_str(blk_hdr)\n+\t\t\tif not self.hash_str in blkmap:\n+\t\t\t\t# Because blocks can be written to files out-of-order as of 0.10, the script\n+\t\t\t\t# may encounter blocks it doesn't know about. Treat as debug output.\n+\t\t\t\tif settings['debug_output'] == 'true':\n+\t\t\t\t\tprint(\"Skipping unknown block \" + self.hash_str)\n \t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n \t\t\t\tcontinue\n \n-\t\t\tblkHeight = self.blkmap[hash_str]\n+\t\t\tblkHeight = self.blkmap[self.hash_str]\n \t\t\tself.blkCountIn += 1\n \n \t\t\tif self.blkCountOut == blkHeight:\n@@ -295,12 +298,15 @@ def run(self):\n \t\tsettings['max_out_sz'] = 1000 * 1000 * 1000\n \tif 'out_of_order_cache_sz' not in settings:\n \t\tsettings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n+\tif 'debug_output' not in settings:\n+\t\tsettings['debug_output'] = 'false'\n \n \tsettings['max_out_sz'] = int(settings['max_out_sz'])\n \tsettings['split_timestamp'] = int(settings['split_timestamp'])\n \tsettings['file_timestamp'] = int(settings['file_timestamp'])\n \tsettings['netmagic'] = unhexlify(settings['netmagic'].encode('utf-8'))\n \tsettings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n+\tsettings['debug_output'] = settings['debug_output'].lower()\n \n \tif 'output_file' not in settings and 'output' not in settings:\n \t\tprint(\"Missing output file / directory\")"
      }
    ]
  }
]