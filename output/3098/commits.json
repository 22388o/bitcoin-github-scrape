[
  {
    "sha": "27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyN2UyZDhiZmI1Njc4ZTc5ZDk1NmI5ZjFhYTUwYzFiMTQxNzdkNzQ4",
    "commit": {
      "author": {
        "name": "super3",
        "email": "me@super3.org",
        "date": "2013-10-16T03:14:30Z"
      },
      "committer": {
        "name": "super3",
        "email": "me@super3.org",
        "date": "2013-10-16T03:37:30Z"
      },
      "message": "Finished /Contrib Index. Standardized READMEs.\n\nFile and Link Fix.",
      "tree": {
        "sha": "a5eb2108ca9cc82af6f5e393608db80a456544cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a5eb2108ca9cc82af6f5e393608db80a456544cf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/comments",
    "author": {
      "login": "super3",
      "id": 60975,
      "node_id": "MDQ6VXNlcjYwOTc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/60975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/super3",
      "html_url": "https://github.com/super3",
      "followers_url": "https://api.github.com/users/super3/followers",
      "following_url": "https://api.github.com/users/super3/following{/other_user}",
      "gists_url": "https://api.github.com/users/super3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/super3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/super3/subscriptions",
      "organizations_url": "https://api.github.com/users/super3/orgs",
      "repos_url": "https://api.github.com/users/super3/repos",
      "events_url": "https://api.github.com/users/super3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/super3/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "super3",
      "id": 60975,
      "node_id": "MDQ6VXNlcjYwOTc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/60975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/super3",
      "html_url": "https://github.com/super3",
      "followers_url": "https://api.github.com/users/super3/followers",
      "following_url": "https://api.github.com/users/super3/following{/other_user}",
      "gists_url": "https://api.github.com/users/super3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/super3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/super3/subscriptions",
      "organizations_url": "https://api.github.com/users/super3/orgs",
      "repos_url": "https://api.github.com/users/super3/repos",
      "events_url": "https://api.github.com/users/super3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/super3/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dd9bd863cfc52c17753c75a983ea49870e9b1c53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd9bd863cfc52c17753c75a983ea49870e9b1c53",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dd9bd863cfc52c17753c75a983ea49870e9b1c53"
      }
    ],
    "stats": {
      "total": 151,
      "additions": 102,
      "deletions": 49
    },
    "files": [
      {
        "sha": "7128fd5eb067713598bb38ff909e3d01e4215a64",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 18,
        "deletions": 2,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
        "patch": "@@ -1,6 +1,9 @@\n Contrib Index\n ---------------------\n \n+### [BitRPC](/contrib/bitrpc) ###\n+Added bitrpc.py which allows for sending of all standard Bitcoin commands via RPC rather than as command line args.\n+\n ### [Debian](/contrib/debian) ###\n Contains files used to package bitcoind/bitcoin-qt\n for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n@@ -11,7 +14,10 @@ Gavin's notes on getting gitian builds up and running using KVM.\n ### [Gitian-downloader](/contrib/gitian-downloader)\n Various PGP files of core developers. \n \n-### [Macdeploy](/contrib/macdeploy) ###\n+### [Linearize](/contrib/linearize) ###\n+Construct a linear, no-fork, best version of the blockchain.\n+\n+### [MacDeploy](/contrib/macdeploy) ###\n Scripts and notes for Mac builds. \n \n ### [PyMiner](/contrib/pyminer) ###\n@@ -31,4 +37,14 @@ Use the raw transactions API to send coins received on a particular\n address (or addresses).\n \n ### [TestGen](/contrib/testgen) ###\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n\\ No newline at end of file\n+Utilities to generate test vectors for the data-driven Bitcoin tests.\n+\n+### [Test Patches](/contrib/test-patches) ###\n+These patches are applied when the automated pull-tester\n+tests each pull and when master is tested using jenkins.\n+\n+### [Verify SF Binaries](/contrib/verifysfbinaries) ###\n+This script attempts to download and verify the signature file SHA256SUMS.asc from SourceForge.\n+\n+### [Wallet Tools](/contrib/wallettools) ###\n+Contains a wallet change password and unlock script."
      },
      {
        "sha": "2dde60a08ebbcf9ee33229dec95bc1144b44710a",
        "filename": "contrib/bitrpc/README.md",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/bitrpc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/bitrpc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitrpc/README.md?ref=27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
        "patch": "@@ -0,0 +1,2 @@\n+### BitRPC ###\n+Allows for sending of all standard Bitcoin commands via RPC rather than as command line args.\n\\ No newline at end of file"
      },
      {
        "sha": "40bdbd8e32a45000619b261ff573d6ca4fb3c35a",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "renamed",
        "additions": 23,
        "deletions": 21,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
        "patch": "@@ -1,19 +1,21 @@\n-Gavin's notes on getting gitian builds up and running using KVM:\n+### Gavin's notes on getting gitian builds up and running using KVM:###\n \n These instructions distilled from:\n-  https://help.ubuntu.com/community/KVM/Installation\n+[  https://help.ubuntu.com/community/KVM/Installation](  https://help.ubuntu.com/community/KVM/Installation)\n ... see there for complete details.\n \n You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n \n You probably need to enable hardware virtualization in your machine's BIOS.\n \n You need to be running a recent version of 64-bit-Ubuntu, and you need to install several prerequisites:\n-  sudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm\n+\n+\tsudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm\n \n Sanity checks:\n-  sudo service apt-cacher-ng status   # Should return apt-cacher-ng is running\n-  ls -l /dev/kvm   # Should show a /dev/kvm device\n+\n+\tsudo service apt-cacher-ng status  # Should return apt-cacher-ng is running\n+\tls -l /dev/kvm   # Should show a /dev/kvm device\n \n \n Once you've got the right hardware and software:\n@@ -22,10 +24,12 @@ Once you've got the right hardware and software:\n     git clone git://github.com/devrandom/gitian-builder.git\n     mkdir gitian-builder/inputs\n     cd gitian-builder/inputs\n+\n     # Inputs for Linux and Win32:\n     wget -O miniupnpc-1.6.tar.gz 'http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.6.tar.gz'\n     wget 'http://fukuchi.org/works/qrencode/qrencode-3.2.0.tar.bz2'\n-    # Inputs for Win32: (Linux has packages for these)\n+    \n+\t# Inputs for Win32: (Linux has packages for these)\n     wget 'https://downloads.sourceforge.net/project/boost/boost/1.50.0/boost_1_50_0.tar.bz2'\n     wget 'http://www.openssl.org/source/openssl-1.0.1c.tar.gz'\n     wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n@@ -58,31 +62,29 @@ Once you've got the right hardware and software:\n \n ---------------------\n \n-gitian-builder now also supports building using LXC. See\n-  https://help.ubuntu.com/12.04/serverguide/lxc.html\n+`gitian-builder` now also supports building using LXC. See\n+[  https://help.ubuntu.com/12.04/serverguide/lxc.html](  https://help.ubuntu.com/12.04/serverguide/lxc.html)\n ... for how to get LXC up and running under Ubuntu.\n \n If your main machine is a 64-bit Mac or PC with a few gigabytes of memory\n-and at least 10 gigabytes of free disk space, you can gitian-build using\n+and at least 10 gigabytes of free disk space, you can `gitian-build` using\n LXC running inside a virtual machine.\n \n Here's a description of Gavin's setup on OSX 10.6:\n \n-1. Download and install VirtualBox from https://www.virtualbox.org/\n+1. Download and install VirtualBox from [https://www.virtualbox.org/](https://www.virtualbox.org/)\n \n 2. Download the 64-bit Ubuntu Desktop 12.04 LTS .iso CD image from\n-  http://www.ubuntu.com/\n+   [http://www.ubuntu.com/](http://www.ubuntu.com/)\n \n-3. Run VirtualBox and create a new virtual machine, using the\n-  Ubuntu .iso (see the VirtualBox documentation for details).\n-  Create it with at least 2 gigabytes of memory and a disk\n-  that is at least 20 gigabytes big.\n+3. Run VirtualBox and create a new virtual machine, using the Ubuntu .iso (see the [VirtualBox documentation](https://www.virtualbox.org/wiki/Documentation) for details). Create it with at least 2 gigabytes of memory and a disk that is at least 20 gigabytes big.\n \n 4. Inside the running Ubuntu desktop, install:\n-  sudo apt-get install debootstrap lxc ruby apache2 git apt-cacher-ng python-vm-builder\n \n-5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the \"Once you've got the right\n-  hardware and software\" instructions above:\n-  export USE_LXC=1\n-  git clone git://github.com/bitcoin/bitcoin.git\n-  ... etc\n+\tsudo apt-get install debootstrap lxc ruby apache2 git apt-cacher-ng python-vm-builder\n+\n+5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the \"Once you've got the right hardware and software\" instructions above:\n+\n+\texport USE_LXC=1\n+\tgit clone git://github.com/bitcoin/bitcoin.git\n+\t... etc\n\\ No newline at end of file",
        "previous_filename": "contrib/gitian-descriptors/README"
      },
      {
        "sha": "70b9f034cdf05e8f08fe8eb5ef5f27fd9d394a5c",
        "filename": "contrib/linearize/README.md",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
        "patch": "@@ -0,0 +1,2 @@\n+### Linearize ###\n+Construct a linear, no-fork, best version of the blockchain.\n\\ No newline at end of file"
      },
      {
        "sha": "9e5aa404c27aaa16152de579529c9352d26485ba",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
        "previous_filename": "contrib/misc/example-linearize.cfg"
      },
      {
        "sha": "2d8509f83c1c30a3368ae8432d472a22ba340201",
        "filename": "contrib/linearize/linearize.py",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/linearize/linearize.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/linearize/linearize.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize.py?ref=27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
        "previous_filename": "contrib/misc/linearize.py"
      },
      {
        "sha": "5f0611f20cd599a6a9da6ab4e491d62078593b69",
        "filename": "contrib/macdeploy/README.md",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
        "patch": "@@ -0,0 +1,19 @@\n+### MacDeploy ###\n+\n+You will need the appscript package for the fancy disk image creation to work:\n+\n+\tsudo easy_install appscript\n+\n+For Snow Leopard (which uses [Python 2.6](http://www.python.org/download/releases/2.6/)), you will need the param_parser package:\n+\t\n+\tsudo easy_install argparse\n+\n+This script should not be run manually, instead, after building as usual:\n+\n+\tmake deploy\n+\n+During the process, the disk image window will pop up briefly where the fancy\n+settings are applied. This is normal, please do not interfere.\n+\n+When finished, it will produce `Bitcoin-Qt.dmg`.\n+"
      },
      {
        "sha": "e7f62c4a3964d98741c036a0dde2983c556801c7",
        "filename": "contrib/macdeploy/notes.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd9bd863cfc52c17753c75a983ea49870e9b1c53/contrib/macdeploy/notes.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd9bd863cfc52c17753c75a983ea49870e9b1c53/contrib/macdeploy/notes.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/notes.txt?ref=dd9bd863cfc52c17753c75a983ea49870e9b1c53",
        "patch": "@@ -1,14 +0,0 @@\n-You will need the appscript package for the fancy disk image creation to work.\n-Install it by invoking \"sudo easy_install appscript\".\n-\n-For Snow Leopard (which uses Python 2.6), you will need the param_parser package.\n-Install it by invoking \"sudo easy_install argparse\"\n-\n-This script should not be run manually, instead, after building as usual:\n-\"make deploy\"\n-\n-During the process, the disk image window will pop up briefly where the fancy\n-settings are applied. This is normal, please do not interfere.\n-\n-When finished, it will produce Bitcoin-Qt.dmg.\n-"
      },
      {
        "sha": "119d51bdc71d57a56c1e3c45f11893ef36cc2072",
        "filename": "contrib/pyminer/README.md",
        "status": "renamed",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/pyminer/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/pyminer/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/pyminer/README.md?ref=27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
        "patch": "@@ -1,5 +1,6 @@\n+### PyMiner ###\n \n-This is a 'getwork' CPU mining client for bitcoin.\n+This is a 'getwork' CPU mining client for Bitcoin.\n \n It is pure-python, and therefore very, very slow.  The purpose is to\n provide a reference implementation of a miner, for study.",
        "previous_filename": "contrib/pyminer/README"
      },
      {
        "sha": "5e0a975fc64ff27b67c62efdf5f6996a8ee12cc4",
        "filename": "contrib/qos/README.md",
        "status": "renamed",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
        "patch": "@@ -1,3 +1,5 @@\n+### Qos ###\n+\n This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN (defined as 192.168.x.x).\n \n This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.",
        "previous_filename": "contrib/qos/README"
      },
      {
        "sha": "f9a0c277e2e7f63276a4f5a3a4f27763aab9cd25",
        "filename": "contrib/seeds/README.md",
        "status": "renamed",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
        "patch": "@@ -1,9 +1,11 @@\n+### Seeds ###\n+\n Utility to generate the pnSeed[] array that is compiled into the client\n-(see src/net.cpp).\n+(see [src/net.cpp](/src/net.cpp)).\n \n The 600 seeds compiled into the 0.8 release were created from sipa's DNS seed data, like this:\n \n-curl -s http://bitcoin.sipa.be/seeds.txt | head -1000 | makeseeds.py\n+\tcurl -s http://bitcoin.sipa.be/seeds.txt | head -1000 | makeseeds.py\n \n The input to makeseeds.py is assumed to be approximately sorted from most-reliable to least-reliable,\n with IP:port first on each line (lines that don't match IPv4:port are ignored).",
        "previous_filename": "contrib/seeds/README"
      },
      {
        "sha": "bc4def5f748c0f73d394b9a30d320917a6102a3a",
        "filename": "contrib/spendfrom/README.md",
        "status": "renamed",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/spendfrom/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/spendfrom/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/README.md?ref=27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
        "patch": "@@ -1,28 +1,30 @@\n+### SpendFrom ###\n+\n Use the raw transactions API to send coins received on a particular\n address (or addresses).\n \n-Depends on jsonrpc\n+Depends on `jsonrpc`\n \n Usage:\n \n-spendfrom.py --from=FROMADDRESS1[,FROMADDRESS2] --to=TOADDRESS --amount=amount \\\n-             --fee=fee --datadir=/path/to/.bitcoin --testnet --dry_run\n+\tspendfrom.py --from=FROMADDRESS1[,FROMADDRESS2] --to=TOADDRESS --amount=amount \\\n+\t             --fee=fee --datadir=/path/to/.bitcoin --testnet --dry_run\n \n With no arguments, outputs a list of amounts associated with addresses.\n \n-With arguments, sends coins received by the FROMADDRESS addresses to the TOADDRESS.\n+With arguments, sends coins received by the `FROMADDRESS` addresses to the `TOADDRESS`.\n \n You may explictly specify how much fee to pay (a fee more than 1% of the amount\n will fail,  though, to prevent bitcoin-losing accidents). Spendfrom may fail if\n it thinks the transaction would never be confirmed (if the amount being sent is\n too small, or if the transaction is too many bytes for the fee).\n \n If a change output needs to be created, the change will be sent to the last\n-FROMADDRESS (if you specify just one FROMADDRESS, change will go back to it).\n+`FROMADDRESS` (if you specify just one `FROMADDRESS`, change will go back to it).\n \n-If --datadir is not specified, the default datadir is used.\n+If `--datadir` is not specified, the default datadir is used.\n \n-The --dry_run option will just create and sign the the transaction and print\n+The `--dry_run` option will just create and sign the the transaction and print\n the transaction data (as hexadecimal), instead of broadcasting it.\n \n If the transaction is created and broadcast successfully, a transaction id",
        "previous_filename": "contrib/spendfrom/README"
      },
      {
        "sha": "def40b0d6c2a5459ce26df10258a0485ecdb5bd1",
        "filename": "contrib/test-patches/README.md",
        "status": "renamed",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/test-patches/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/test-patches/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/test-patches/README.md?ref=27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
        "patch": "@@ -1,4 +1,7 @@\n+### Test Patches ###\n+\n These patches are applied when the automated pull-tester\n tests each pull and when master is tested using jenkins.\n You can find more information about the tests run at\n-http://jenkins.bluematt.me/pull-tester/files/\n+[http://jenkins.bluematt.me/pull-tester/files/\n+](http://jenkins.bluematt.me/pull-tester/files/)\n\\ No newline at end of file",
        "previous_filename": "contrib/test-patches/README"
      },
      {
        "sha": "65a6db1c7cdf36005d81b5b6d6b181baf2243074",
        "filename": "contrib/testgen/README",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd9bd863cfc52c17753c75a983ea49870e9b1c53/contrib/testgen/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd9bd863cfc52c17753c75a983ea49870e9b1c53/contrib/testgen/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README?ref=dd9bd863cfc52c17753c75a983ea49870e9b1c53",
        "patch": "@@ -1 +0,0 @@\n-Utilities to generate test vectors for the data-driven Bitcoin tests."
      },
      {
        "sha": "83624f443a7f9f71ba2a1f1c2dbc3d3a8297bc7d",
        "filename": "contrib/testgen/README.md",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
        "patch": "@@ -0,0 +1,8 @@\n+### TestGen ###\n+\n+Utilities to generate test vectors for the data-driven Bitcoin tests.\n+\n+Usage: \n+\n+    gen_base58_test_vectors.py valid 50 > ../../src/test/data/base58_keys_valid.json\n+    gen_base58_test_vectors.py invalid 50 > ../../src/test/data/base58_keys_invalid.json\n\\ No newline at end of file"
      },
      {
        "sha": "caa4073605e2f171913cb476783d21f5663b1818",
        "filename": "contrib/verifysfbinaries/README.md",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/verifysfbinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/verifysfbinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifysfbinaries/README.md?ref=27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
        "patch": "@@ -0,0 +1,7 @@\n+### Verify SF Binaries ###\n+This script attempts to download the signature file `SHA256SUMS.asc` from SourceForge.\n+\n+It first checks if the signature passes, and then downloads the files specified in\n+the file, and checks if the hashes of these files match those that are specified\n+in the signature file. The script returns 0 if everything passes the checks. It returns 1 if either the\n+signature check or the hash check doesn't pass. If an error occurs the return value is 2\n\\ No newline at end of file"
      },
      {
        "sha": "358f52569e17c8d9e6effd0112171f508cf9cc41",
        "filename": "contrib/wallettools/README.md",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/wallettools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e2d8bfb5678e79d956b9f1aa50c1b14177d748/contrib/wallettools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/README.md?ref=27e2d8bfb5678e79d956b9f1aa50c1b14177d748",
        "patch": "@@ -0,0 +1,2 @@\n+### Wallet Tools ###\n+Contains a wallet change password and unlock script."
      }
    ]
  }
]