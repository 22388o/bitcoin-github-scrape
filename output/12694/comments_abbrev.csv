eklitzke,2018-03-15T06:47:23Z,Dare I ask if you can write a test for this?,https://github.com/bitcoin/bitcoin/pull/12694#issuecomment-373277663,373277663,
achow101,2018-03-15T15:26:22Z,Added a test,https://github.com/bitcoin/bitcoin/pull/12694#issuecomment-373415965,373415965,
gmaxwell,2018-09-14T17:10:14Z,"@achow101  Are you keeping a coinselection todo someplace?  The ability to bnb with preset inputs (less than the demanded amount) would be nice, it shouldn't be forgotten.",https://github.com/bitcoin/bitcoin/pull/12694#issuecomment-421424142,421424142,
achow101,2018-09-14T18:27:48Z,"@gmaxwell I think everything that really needs to be done is done in #13307. I haven't been working on it recently, partially because SRD does not seem to do as well with regards to the number of UTXOs in the wallet.\n\nBut otherwise, I don't have a todo tracking coin selection things.",https://github.com/bitcoin/bitcoin/pull/12694#issuecomment-421445372,421445372,
ryanofsky,2018-03-15T18:56:40Z,"In commit ""Actually disable BnB when there are preset inputs""\n\nSorry to repeat my comment from the other PR, but I do think it'd be clearer to add explicit non-reference `bool disable_bnb` parameters to SelectCoins methods, so the `CoinSelectionParams` struct can remain const and not be changing on the fly. The current bug seems like evidence to me that controlling bnb through the struct is no",https://github.com/bitcoin/bitcoin/pull/12694#discussion_r174895100,174895100,src/wallet/wallet.cpp
ryanofsky,2018-03-15T18:59:33Z,"In commit ""Test that BnB is not used when there are preset inputs""\n\nMight want to split this up into two `BOOST_CHECK` statements, so if one condition fails, the output shows which one is failing.",https://github.com/bitcoin/bitcoin/pull/12694#discussion_r174895880,174895880,src/wallet/test/coinselector_tests.cpp
achow101,2018-03-15T19:18:23Z,"I agree that it isn't ideal, but having the caller control whether BnB should be used is just a temporary shim to work with the current coin selection. I intend for it to go away when the replacement fallback strategy is implemented (which I have already started doing so). I don't think changing it now is worth the additional review effort required when the parameter will be removed later.",https://github.com/bitcoin/bitcoin/pull/12694#discussion_r174902125,174902125,src/wallet/wallet.cpp
achow101,2018-03-15T19:22:44Z,Done,https://github.com/bitcoin/bitcoin/pull/12694#discussion_r174903301,174903301,src/wallet/test/coinselector_tests.cpp
eklitzke,2018-03-16T22:13:13Z,"I guess the code was like this when you started, but it seems kind of dangerous to be mutating global variables in the test suite like this, because it can cause errors to propagate from one test to another. It looks like it would be pretty straightforward to change the code in the test to not use globals. Consider making these variables local to each method (maybe in a future PR?).",https://github.com/bitcoin/bitcoin/pull/12694#discussion_r175226317,175226317,src/wallet/test/coinselector_tests.cpp
eklitzke,2018-03-16T22:19:22Z,"Since this is just temporary code anyway, keep the parameter const and make a copy:\n\n```c++\nauto params = coin_selection_params;\nparams.use_bnb = false;\n```\n\nThat way this diff doesn't have to change the function signature, you don't need to change the header file, and you can have more const. Considering all of the other work this method is doing, the overhead of the copy won't even",https://github.com/bitcoin/bitcoin/pull/12694#discussion_r175227239,175227239,src/wallet/wallet.cpp
achow101,2018-03-18T04:21:36Z,"`testWallet` isn't actually used for anything in the tests except for a way to call `SelectCoins` and `SelectCoinsMinConf`. Furthermore the coins in the wallet are never actually used by either of those two functions, the only reason it is needed here so that we can pre-select some coins for the test that was just added. And that test is also temporary, so I think it is fine as is as this change d",https://github.com/bitcoin/bitcoin/pull/12694#discussion_r175276881,175276881,src/wallet/test/coinselector_tests.cpp
achow101,2018-03-18T04:22:06Z,Implemented @eklitzke's suggestion.,https://github.com/bitcoin/bitcoin/pull/12694#discussion_r175276888,175276888,src/wallet/wallet.cpp
achow101,2018-03-18T04:29:01Z,"Actually, I reverted that change. It makes this untestable.",https://github.com/bitcoin/bitcoin/pull/12694#discussion_r175276977,175276977,src/wallet/wallet.cpp
eklitzke,2018-03-19T07:17:15Z,"Agree that it's fine as is, but boy scout mentality (""leave you camp site cleaner than it was before"") is helpful, especially in code bases that have a lot of existing style violations (like Bitcoin).",https://github.com/bitcoin/bitcoin/pull/12694#discussion_r175346039,175346039,src/wallet/test/coinselector_tests.cpp
instagibbs,2018-03-21T18:57:34Z,"I'd also like to see a little cleanup here, if it's not much trouble.",https://github.com/bitcoin/bitcoin/pull/12694#discussion_r176201905,176201905,src/wallet/test/coinselector_tests.cpp
achow101,2018-03-21T19:11:31Z,It's a lot of trouble to clean this up. The diff would be quite large and out of scope for this PR IMO. I think this is partially why `SelectCoins` itself is never actually tested; instead all of the tests focus on `SelectCoinsMinConf`.,https://github.com/bitcoin/bitcoin/pull/12694#discussion_r176205796,176205796,src/wallet/test/coinselector_tests.cpp
