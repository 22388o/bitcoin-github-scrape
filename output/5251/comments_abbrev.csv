theuni,2014-11-12T00:05:58Z,"ut ACK on this part, but please consider that as long as CKey is used in the interface(ish) class, it's still dependent on app-state and cannot be used for libs. Any suggestions there?\n",https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-62645119,62645119,
theuni,2014-11-12T00:06:51Z,"Not verified move-only yet, btw.\n",https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-62645221,62645221,
sipa,2014-11-12T12:06:01Z,"@theuni what do you mean by ""app state""?\n",https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-62708716,62708716,
sipa,2014-11-12T12:45:45Z,"utACK, verified move-only. This is an improvement regardless of what we do with #5208 and @theuni's suggestions.\n",https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-62712718,62712718,
jtimon,2014-11-15T13:59:08Z,"Thanks for the acks, I don't think this really needs any testing at all besides compiling.\nAs for using Ckey in the abstract class, @theuni, I don't really have any suggestions but I would like to understand the problem better. Can you elaborate a little bit on that?\nIs it the problem that key depends on allocators.h (and thus boost/thread/mutex.hpp and boost/thread/once.hpp? \nIf so, the only t",https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-63173211,63173211,
theuni,2014-11-17T18:11:54Z,"Sorry for the delay. As @sipa mentioned on the other PR, by ""app state"", I mean that the allocators pull in the global singleton which is fine for bitcoind and friends, but I'd very much like to avoid that for libs.\n\nYea, a base class beneath CKey would solve the problem I should think. Imo, it'd be nice to have it somewhat storage-agnostic, so that a lib could potentially pass in its own backin",https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-63348208,63348208,
sipa,2014-11-17T18:28:54Z,"Sounds all good, but out of scope here :)\n",https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-63350818,63350818,
theuni,2014-11-17T18:35:31Z,"Sure, I've ACK'd this change, I only mentioned the app state in case there was a chance of solving both issues at once here. Looks like there's not, so I have no problem with doing that later.\n",https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-63351888,63351888,
jtimon,2014-11-17T22:14:47Z,"@sipa @theuni Yes, solving that belongs to another PR but there's no harm starting to discussing it here.\nI'm not sure I fully understand the solution with the pointer.\n",https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-63386270,63386270,
theuni,2014-11-18T01:17:48Z,@jtimon  I think it's basically:\n- Remove CPrivKey from key.h\n- Remove LockObject/UnlockObject from key.h/cpp\n- Teach CKey Load()/GetPrivKey()/etc to use pointers rather than CPrivKey\n- Teach CKey to use a passed-in buffer rather than its internal vch[32]\n\nAt that point it's up to the caller (app-level) to lock the data before sending it into CKey and to maintain its backing store. I'm sure ,https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-63407206,63407206,
sipa,2014-11-19T10:06:06Z,"@theuni @jtimon here is an alternative: https://github.com/sipa/bitcoin/commits/keynoalloc\n\nI'm not entirely happy with it, and I'm not sure how much it solves, but it sounds like what you were aiming to do?\n",https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-63616815,63616815,
theuni,2014-11-20T03:58:33Z,"@sipa After discussing on IRC, yes, very much so. Most of what remains will be worked out by #5227. Thanks!\n",https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-63757968,63757968,
jtimon,2014-11-20T12:48:11Z,Fixed @Diapolo 's nit.\n,https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-63802800,63802800,
jtimon,2014-12-27T18:17:54Z,Needed rebase.\nSquashed nit commit.\n,https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-68185875,68185875,
jtimon,2015-03-26T16:29:36Z,Needs rebase but @theuni was working on a better alternative. Should I rebase it or not?\n,https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-86605182,86605182,
theuni,2015-03-27T11:21:14Z,I have something but I'm not sure if it's worth using. I'm away until\nMonday so don't hold on me if this blocks further work.\n,https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-86905603,86905603,
sipa,2015-03-27T18:15:45Z,I think CBasicKeyStore can actually just go in script/sign; it's basically the interface that users of script/sign need to implement to enable arbitrary-key signing.\n,https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-87038519,87038519,
jtimon,2015-04-08T23:57:17Z,"@sipa that makes sense to me. Anyway, it already needs rebase and I would probably close this in favor of @theuni 's improved proposal once it's ready, so I'm closing for now.\n",https://github.com/bitcoin/bitcoin/pull/5251#issuecomment-91071675,91071675,
Diapolo,2014-11-17T18:57:19Z,"Nit: Should be BITCOIN_BASIC_KEYSTORE_H, if you want to use the new naming that was recently introduced in all other headers (not by me ^^).\n",https://github.com/bitcoin/bitcoin/pull/5251#discussion_r20455602,20455602,src/basic_keystore.h
jtimon,2014-11-17T22:11:36Z,"When was that introduced? I've seen many other files with the H at the beginning instead of the end, which I find much more convenient when creating new files (just copy from an old file, and replace the end). \n",https://github.com/bitcoin/bitcoin/pull/5251#discussion_r20469490,20469490,src/basic_keystore.h
fanquake,2014-11-18T00:21:16Z,@jtimon In #5196\n,https://github.com/bitcoin/bitcoin/pull/5251#discussion_r20477204,20477204,src/basic_keystore.h
laanwj,2015-01-20T16:17:46Z,"If the new keystore is meant to be a simple private key store for e.g. raw transaction API usage, then do `*WatchOnly` methods still belong on it?\n",https://github.com/bitcoin/bitcoin/pull/5251#discussion_r23233094,23233094,src/keystore.h
jtimon,2015-02-04T02:11:03Z,"Sorry for not answering earlier. If you comment those methods you'll get this errors:\n\n```\nwallet_ismine.cpp: In function ‘isminetype IsMine(const CKeyStore&, const CScript&)’:\nwallet_ismine.cpp:42:22: error: ‘const class CKeyStore’ has no member named ‘HaveWatchOnly’\n         if (keystore.HaveWatchOnly(scriptPubKey))\n                      ^\nwallet_ismine.cpp:88:18: error: ‘const class CKey",https://github.com/bitcoin/bitcoin/pull/5251#discussion_r24058275,24058275,src/keystore.h
