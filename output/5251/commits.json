[
  {
    "sha": "461456386f00f2d04c8d519d07f9d3582bdb0281",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NjE0NTYzODZmMDBmMmQwNGM4ZDUxOWQwN2Y5ZDM1ODJiZGIwMjgx",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-09T15:54:23Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-12-27T18:09:23Z"
      },
      "message": "MOVEONLY: Separate CKeyStore interface from its basic implementation",
      "tree": {
        "sha": "4180372eef7e0c05d738e4dad01321084e31a47b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4180372eef7e0c05d738e4dad01321084e31a47b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/461456386f00f2d04c8d519d07f9d3582bdb0281",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/461456386f00f2d04c8d519d07f9d3582bdb0281",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/461456386f00f2d04c8d519d07f9d3582bdb0281",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/461456386f00f2d04c8d519d07f9d3582bdb0281/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0f2308cf7cfffe13b0206802622cad4d9e009aa1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f2308cf7cfffe13b0206802622cad4d9e009aa1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0f2308cf7cfffe13b0206802622cad4d9e009aa1"
      }
    ],
    "stats": {
      "total": 195,
      "additions": 104,
      "deletions": 91
    },
    "files": [
      {
        "sha": "ed6c4d3cc2bc42fe710a3f9d76f410087bf24f4e",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/461456386f00f2d04c8d519d07f9d3582bdb0281/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/461456386f00f2d04c8d519d07f9d3582bdb0281/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=461456386f00f2d04c8d519d07f9d3582bdb0281",
        "patch": "@@ -75,6 +75,7 @@ BITCOIN_CORE_H = \\\n   allocators.h \\\n   amount.h \\\n   base58.h \\\n+  basic_keystore.h \\\n   bloom.h \\\n   chain.h \\\n   chainparams.h \\\n@@ -234,6 +235,7 @@ libbitcoin_common_a_SOURCES = \\\n   allocators.cpp \\\n   amount.cpp \\\n   base58.cpp \\\n+  basic_keystore.cpp \\\n   chainparams.cpp \\\n   coins.cpp \\\n   compressor.cpp \\\n@@ -245,7 +247,6 @@ libbitcoin_common_a_SOURCES = \\\n   ecwrapper.cpp \\\n   hash.cpp \\\n   key.cpp \\\n-  keystore.cpp \\\n   netbase.cpp \\\n   protocol.cpp \\\n   pubkey.cpp \\"
      },
      {
        "sha": "81a707fafbc8c95c0326d75649ceb8c345ad03dd",
        "filename": "src/basic_keystore.cpp",
        "status": "renamed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/461456386f00f2d04c8d519d07f9d3582bdb0281/src/basic_keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/461456386f00f2d04c8d519d07f9d3582bdb0281/src/basic_keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/basic_keystore.cpp?ref=461456386f00f2d04c8d519d07f9d3582bdb0281",
        "patch": "@@ -13,19 +13,6 @@\n \n #include <boost/foreach.hpp>\n \n-bool CKeyStore::GetPubKey(const CKeyID &address, CPubKey &vchPubKeyOut) const\n-{\n-    CKey key;\n-    if (!GetKey(address, key))\n-        return false;\n-    vchPubKeyOut = key.GetPubKey();\n-    return true;\n-}\n-\n-bool CKeyStore::AddKey(const CKey &key) {\n-    return AddKeyPubKey(key, key.GetPubKey());\n-}\n-\n bool CBasicKeyStore::AddKeyPubKey(const CKey& key, const CPubKey &pubkey)\n {\n     LOCK(cs_KeyStore);",
        "previous_filename": "src/keystore.cpp"
      },
      {
        "sha": "b26e6a988e04c56e52025321dcae4ff5da8e1351",
        "filename": "src/basic_keystore.h",
        "status": "added",
        "additions": 82,
        "deletions": 0,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/461456386f00f2d04c8d519d07f9d3582bdb0281/src/basic_keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/461456386f00f2d04c8d519d07f9d3582bdb0281/src/basic_keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/basic_keystore.h?ref=461456386f00f2d04c8d519d07f9d3582bdb0281",
        "patch": "@@ -0,0 +1,82 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BASIC_KEYSTORE_H\n+#define BITCOIN_BASIC_KEYSTORE_H\n+\n+#include \"key.h\"\n+#include \"keystore.h\"\n+#include \"pubkey.h\"\n+#include \"sync.h\"\n+\n+#include <boost/signals2/signal.hpp>\n+#include <boost/variant.hpp>\n+\n+class CScript;\n+class CScriptID;\n+\n+typedef std::map<CKeyID, CKey> KeyMap;\n+typedef std::map<CScriptID, CScript > ScriptMap;\n+typedef std::set<CScript> WatchOnlySet;\n+\n+/** Basic key store, that keeps keys in an address->secret map */\n+class CBasicKeyStore : public CKeyStore\n+{\n+protected:\n+    KeyMap mapKeys;\n+    ScriptMap mapScripts;\n+    WatchOnlySet setWatchOnly;\n+\n+public:\n+    bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey);\n+    bool HaveKey(const CKeyID &address) const\n+    {\n+        bool result;\n+        {\n+            LOCK(cs_KeyStore);\n+            result = (mapKeys.count(address) > 0);\n+        }\n+        return result;\n+    }\n+    void GetKeys(std::set<CKeyID> &setAddress) const\n+    {\n+        setAddress.clear();\n+        {\n+            LOCK(cs_KeyStore);\n+            KeyMap::const_iterator mi = mapKeys.begin();\n+            while (mi != mapKeys.end())\n+            {\n+                setAddress.insert((*mi).first);\n+                mi++;\n+            }\n+        }\n+    }\n+    bool GetKey(const CKeyID &address, CKey &keyOut) const\n+    {\n+        {\n+            LOCK(cs_KeyStore);\n+            KeyMap::const_iterator mi = mapKeys.find(address);\n+            if (mi != mapKeys.end())\n+            {\n+                keyOut = mi->second;\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+    virtual bool AddCScript(const CScript& redeemScript);\n+    virtual bool HaveCScript(const CScriptID &hash) const;\n+    virtual bool GetCScript(const CScriptID &hash, CScript& redeemScriptOut) const;\n+\n+    virtual bool AddWatchOnly(const CScript &dest);\n+    virtual bool RemoveWatchOnly(const CScript &dest);\n+    virtual bool HaveWatchOnly(const CScript &dest) const;\n+    virtual bool HaveWatchOnly() const;\n+};\n+\n+typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;\n+typedef std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char> > > CryptedKeyMap;\n+\n+#endif // BITCOIN_BASIC_KEYSTORE_H"
      },
      {
        "sha": "beb9f98700355c342bb56a1bce0e9c2b4fa1fbc7",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/461456386f00f2d04c8d519d07f9d3582bdb0281/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/461456386f00f2d04c8d519d07f9d3582bdb0281/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=461456386f00f2d04c8d519d07f9d3582bdb0281",
        "patch": "@@ -3,12 +3,12 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"base58.h\"\n+#include \"basic_keystore.h\"\n #include \"clientversion.h\"\n #include \"primitives/block.h\" // for MAX_BLOCK_SIZE\n #include \"primitives/transaction.h\"\n #include \"core_io.h\"\n #include \"coins.h\"\n-#include \"keystore.h\"\n #include \"script/script.h\"\n #include \"script/sign.h\"\n #include \"ui_interface.h\" // for _(...)"
      },
      {
        "sha": "e651e68442f34b215ce4b5f830828fba8ea9d30d",
        "filename": "src/crypter.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/461456386f00f2d04c8d519d07f9d3582bdb0281/src/crypter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/461456386f00f2d04c8d519d07f9d3582bdb0281/src/crypter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypter.h?ref=461456386f00f2d04c8d519d07f9d3582bdb0281",
        "patch": "@@ -6,7 +6,7 @@\n #define BITCOIN_CRYPTER_H\n \n #include \"allocators.h\"\n-#include \"keystore.h\"\n+#include \"basic_keystore.h\"\n #include \"serialize.h\"\n \n class uint256;"
      },
      {
        "sha": "b7768eb3b04a6adaa31fa170f6982864d14cf074",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 12,
        "deletions": 67,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/461456386f00f2d04c8d519d07f9d3582bdb0281/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/461456386f00f2d04c8d519d07f9d3582bdb0281/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=461456386f00f2d04c8d519d07f9d3582bdb0281",
        "patch": "@@ -10,9 +10,6 @@\n #include \"pubkey.h\"\n #include \"sync.h\"\n \n-#include <boost/signals2/signal.hpp>\n-#include <boost/variant.hpp>\n-\n class CScript;\n class CScriptID;\n \n@@ -27,13 +24,23 @@ class CKeyStore\n \n     //! Add a key to the store.\n     virtual bool AddKeyPubKey(const CKey &key, const CPubKey &pubkey) =0;\n-    virtual bool AddKey(const CKey &key);\n+    bool AddKey(const CKey &key) \n+    {\n+        return AddKeyPubKey(key, key.GetPubKey());\n+    }\n \n     //! Check whether a key corresponding to a given address is present in the store.\n     virtual bool HaveKey(const CKeyID &address) const =0;\n     virtual bool GetKey(const CKeyID &address, CKey& keyOut) const =0;\n     virtual void GetKeys(std::set<CKeyID> &setAddress) const =0;\n-    virtual bool GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const;\n+    bool GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const\n+    {\n+        CKey key;\n+        if (!GetKey(address, key))\n+            return false;\n+        vchPubKeyOut = key.GetPubKey();\n+        return true;\n+    }\n \n     //! Support for BIP 0013 : see https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki\n     virtual bool AddCScript(const CScript& redeemScript) =0;\n@@ -47,66 +54,4 @@ class CKeyStore\n     virtual bool HaveWatchOnly() const =0;\n };\n \n-typedef std::map<CKeyID, CKey> KeyMap;\n-typedef std::map<CScriptID, CScript > ScriptMap;\n-typedef std::set<CScript> WatchOnlySet;\n-\n-/** Basic key store, that keeps keys in an address->secret map */\n-class CBasicKeyStore : public CKeyStore\n-{\n-protected:\n-    KeyMap mapKeys;\n-    ScriptMap mapScripts;\n-    WatchOnlySet setWatchOnly;\n-\n-public:\n-    bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey);\n-    bool HaveKey(const CKeyID &address) const\n-    {\n-        bool result;\n-        {\n-            LOCK(cs_KeyStore);\n-            result = (mapKeys.count(address) > 0);\n-        }\n-        return result;\n-    }\n-    void GetKeys(std::set<CKeyID> &setAddress) const\n-    {\n-        setAddress.clear();\n-        {\n-            LOCK(cs_KeyStore);\n-            KeyMap::const_iterator mi = mapKeys.begin();\n-            while (mi != mapKeys.end())\n-            {\n-                setAddress.insert((*mi).first);\n-                mi++;\n-            }\n-        }\n-    }\n-    bool GetKey(const CKeyID &address, CKey &keyOut) const\n-    {\n-        {\n-            LOCK(cs_KeyStore);\n-            KeyMap::const_iterator mi = mapKeys.find(address);\n-            if (mi != mapKeys.end())\n-            {\n-                keyOut = mi->second;\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-    virtual bool AddCScript(const CScript& redeemScript);\n-    virtual bool HaveCScript(const CScriptID &hash) const;\n-    virtual bool GetCScript(const CScriptID &hash, CScript& redeemScriptOut) const;\n-\n-    virtual bool AddWatchOnly(const CScript &dest);\n-    virtual bool RemoveWatchOnly(const CScript &dest);\n-    virtual bool HaveWatchOnly(const CScript &dest) const;\n-    virtual bool HaveWatchOnly() const;\n-};\n-\n-typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;\n-typedef std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char> > > CryptedKeyMap;\n-\n #endif // BITCOIN_KEYSTORE_H"
      },
      {
        "sha": "7bf519c585220c822f1910f9362cd7053de1a823",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/461456386f00f2d04c8d519d07f9d3582bdb0281/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/461456386f00f2d04c8d519d07f9d3582bdb0281/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=461456386f00f2d04c8d519d07f9d3582bdb0281",
        "patch": "@@ -7,7 +7,7 @@\n #include \"primitives/transaction.h\"\n #include \"core_io.h\"\n #include \"init.h\"\n-#include \"keystore.h\"\n+#include \"basic_keystore.h\"\n #include \"main.h\"\n #include \"net.h\"\n #include \"rpcserver.h\""
      },
      {
        "sha": "8d8d363d18bc23f29f9e92a83af2fd16dc50c983",
        "filename": "src/test/DoS_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/461456386f00f2d04c8d519d07f9d3582bdb0281/src/test/DoS_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/461456386f00f2d04c8d519d07f9d3582bdb0281/src/test/DoS_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/DoS_tests.cpp?ref=461456386f00f2d04c8d519d07f9d3582bdb0281",
        "patch": "@@ -6,9 +6,7 @@\n // Unit tests for denial-of-service detection/prevention code\n //\n \n-\n-\n-#include \"keystore.h\"\n+#include \"basic_keystore.h\"\n #include \"main.h\"\n #include \"net.h\"\n #include \"pow.h\""
      },
      {
        "sha": "552a661017330ccec1033497d9389dbf6ddfcfab",
        "filename": "src/test/multisig_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/461456386f00f2d04c8d519d07f9d3582bdb0281/src/test/multisig_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/461456386f00f2d04c8d519d07f9d3582bdb0281/src/test/multisig_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/multisig_tests.cpp?ref=461456386f00f2d04c8d519d07f9d3582bdb0281",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"basic_keystore.h\"\n #include \"key.h\"\n-#include \"keystore.h\"\n #include \"main.h\"\n #include \"script/script.h\"\n #include \"script/script_error.h\""
      },
      {
        "sha": "f40a4cb8e449946e991b72f11c22a9e35a7ceda4",
        "filename": "src/test/script_P2SH_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/461456386f00f2d04c8d519d07f9d3582bdb0281/src/test/script_P2SH_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/461456386f00f2d04c8d519d07f9d3582bdb0281/src/test/script_P2SH_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_P2SH_tests.cpp?ref=461456386f00f2d04c8d519d07f9d3582bdb0281",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"basic_keystore.h\"\n #include \"key.h\"\n-#include \"keystore.h\"\n #include \"main.h\"\n #include \"script/script.h\"\n #include \"script/script_error.h\""
      },
      {
        "sha": "990d6eccc97114ffbe7408dc41eba66283f8e49c",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/461456386f00f2d04c8d519d07f9d3582bdb0281/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/461456386f00f2d04c8d519d07f9d3582bdb0281/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=461456386f00f2d04c8d519d07f9d3582bdb0281",
        "patch": "@@ -5,9 +5,9 @@\n #include \"data/script_invalid.json.h\"\n #include \"data/script_valid.json.h\"\n \n+#include \"basic_keystore.h\"\n #include \"core_io.h\"\n #include \"key.h\"\n-#include \"keystore.h\"\n #include \"main.h\"\n #include \"script/script.h\"\n #include \"script/script_error.h\""
      },
      {
        "sha": "73e125b71328b8672964c46bccf5592a4f9020cd",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/461456386f00f2d04c8d519d07f9d3582bdb0281/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/461456386f00f2d04c8d519d07f9d3582bdb0281/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=461456386f00f2d04c8d519d07f9d3582bdb0281",
        "patch": "@@ -5,9 +5,9 @@\n #include \"data/tx_invalid.json.h\"\n #include \"data/tx_valid.json.h\"\n \n+#include \"basic_keystore.h\"\n #include \"clientversion.h\"\n #include \"key.h\"\n-#include \"keystore.h\"\n #include \"main.h\"\n #include \"script/script.h\"\n #include \"script/script_error.h\""
      }
    ]
  },
  {
    "sha": "df2a149721b2cc1171f25a57f0b8313a6ae5f251",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjJhMTQ5NzIxYjJjYzExNzFmMjVhNTdmMGI4MzEzYTZhZTVmMjUx",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-09T16:10:10Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-12-27T18:09:23Z"
      },
      "message": "Move CCriticalSection cs_KeyStore up from CKeyStore to CBasicKeyStore\n(also cleanup some dependencies)",
      "tree": {
        "sha": "2e41ad37cc981815bedf8cd1fc8c61160d1517db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e41ad37cc981815bedf8cd1fc8c61160d1517db"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df2a149721b2cc1171f25a57f0b8313a6ae5f251",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df2a149721b2cc1171f25a57f0b8313a6ae5f251",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/df2a149721b2cc1171f25a57f0b8313a6ae5f251",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df2a149721b2cc1171f25a57f0b8313a6ae5f251/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "461456386f00f2d04c8d519d07f9d3582bdb0281",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/461456386f00f2d04c8d519d07f9d3582bdb0281",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/461456386f00f2d04c8d519d07f9d3582bdb0281"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 3,
      "deletions": 7
    },
    "files": [
      {
        "sha": "00dcce119ad790f1081f3d5ff4680cf343c8d5d8",
        "filename": "src/basic_keystore.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df2a149721b2cc1171f25a57f0b8313a6ae5f251/src/basic_keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df2a149721b2cc1171f25a57f0b8313a6ae5f251/src/basic_keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/basic_keystore.h?ref=df2a149721b2cc1171f25a57f0b8313a6ae5f251",
        "patch": "@@ -11,9 +11,6 @@\n #include \"pubkey.h\"\n #include \"sync.h\"\n \n-#include <boost/signals2/signal.hpp>\n-#include <boost/variant.hpp>\n-\n class CScript;\n class CScriptID;\n \n@@ -25,6 +22,7 @@ typedef std::set<CScript> WatchOnlySet;\n class CBasicKeyStore : public CKeyStore\n {\n protected:\n+    mutable CCriticalSection cs_KeyStore;\n     KeyMap mapKeys;\n     ScriptMap mapScripts;\n     WatchOnlySet setWatchOnly;"
      },
      {
        "sha": "878799ae97636bad4b58f182270caf0b7d5d8d4c",
        "filename": "src/crypter.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df2a149721b2cc1171f25a57f0b8313a6ae5f251/src/crypter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df2a149721b2cc1171f25a57f0b8313a6ae5f251/src/crypter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypter.h?ref=df2a149721b2cc1171f25a57f0b8313a6ae5f251",
        "patch": "@@ -9,6 +9,8 @@\n #include \"basic_keystore.h\"\n #include \"serialize.h\"\n \n+#include <boost/signals2/signal.hpp>\n+\n class uint256;\n \n const unsigned int WALLET_CRYPTO_KEY_SIZE = 32;"
      },
      {
        "sha": "093d0ff39aa487813d9d21c8aca32e46fc3adeda",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df2a149721b2cc1171f25a57f0b8313a6ae5f251/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df2a149721b2cc1171f25a57f0b8313a6ae5f251/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=df2a149721b2cc1171f25a57f0b8313a6ae5f251",
        "patch": "@@ -8,17 +8,13 @@\n \n #include \"key.h\"\n #include \"pubkey.h\"\n-#include \"sync.h\"\n \n class CScript;\n class CScriptID;\n \n /** A virtual base class for key stores */\n class CKeyStore\n {\n-protected:\n-    mutable CCriticalSection cs_KeyStore;\n-\n public:\n     virtual ~CKeyStore() {}\n "
      }
    ]
  },
  {
    "sha": "6192efb02b4af73912bf6b7eaf50677a53a14ae2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTkyZWZiMDJiNGFmNzM5MTJiZjZiN2VhZjUwNjc3YTUzYTE0YWUy",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-10T15:04:14Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-12-27T18:09:23Z"
      },
      "message": "MOVEONLY: Move CBasicKeyStore method implementations to cpp file",
      "tree": {
        "sha": "2f908739870f4dd2b8903549b59fcfc775b7b8f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f908739870f4dd2b8903549b59fcfc775b7b8f4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6192efb02b4af73912bf6b7eaf50677a53a14ae2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6192efb02b4af73912bf6b7eaf50677a53a14ae2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6192efb02b4af73912bf6b7eaf50677a53a14ae2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6192efb02b4af73912bf6b7eaf50677a53a14ae2/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "df2a149721b2cc1171f25a57f0b8313a6ae5f251",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df2a149721b2cc1171f25a57f0b8313a6ae5f251",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/df2a149721b2cc1171f25a57f0b8313a6ae5f251"
      }
    ],
    "stats": {
      "total": 75,
      "additions": 40,
      "deletions": 35
    },
    "files": [
      {
        "sha": "d8c95965c6f17ca8e8e14f05f9c956123ac6befc",
        "filename": "src/basic_keystore.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6192efb02b4af73912bf6b7eaf50677a53a14ae2/src/basic_keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6192efb02b4af73912bf6b7eaf50677a53a14ae2/src/basic_keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/basic_keystore.cpp?ref=6192efb02b4af73912bf6b7eaf50677a53a14ae2",
        "patch": "@@ -20,6 +20,42 @@ bool CBasicKeyStore::AddKeyPubKey(const CKey& key, const CPubKey &pubkey)\n     return true;\n }\n \n+bool CBasicKeyStore::HaveKey(const CKeyID &address) const\n+{\n+    bool result;\n+    {\n+        LOCK(cs_KeyStore);\n+        result = (mapKeys.count(address) > 0);\n+    }\n+    return result;\n+}\n+\n+void CBasicKeyStore::GetKeys(std::set<CKeyID> &setAddress) const\n+{\n+    setAddress.clear();\n+    {\n+        LOCK(cs_KeyStore);\n+        KeyMap::const_iterator mi = mapKeys.begin();\n+        while (mi != mapKeys.end()) {\n+            setAddress.insert((*mi).first);\n+            mi++;\n+        }\n+    }\n+}\n+\n+bool CBasicKeyStore::GetKey(const CKeyID &address, CKey &keyOut) const\n+{\n+    {\n+        LOCK(cs_KeyStore);\n+        KeyMap::const_iterator mi = mapKeys.find(address);\n+        if (mi != mapKeys.end()) {\n+            keyOut = mi->second;\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n bool CBasicKeyStore::AddCScript(const CScript& redeemScript)\n {\n     if (redeemScript.size() > MAX_SCRIPT_ELEMENT_SIZE)"
      },
      {
        "sha": "45c40140cdaab3d6ca3544600321fccf2f9f1237",
        "filename": "src/basic_keystore.h",
        "status": "modified",
        "additions": 4,
        "deletions": 35,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6192efb02b4af73912bf6b7eaf50677a53a14ae2/src/basic_keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6192efb02b4af73912bf6b7eaf50677a53a14ae2/src/basic_keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/basic_keystore.h?ref=6192efb02b4af73912bf6b7eaf50677a53a14ae2",
        "patch": "@@ -29,41 +29,10 @@ class CBasicKeyStore : public CKeyStore\n \n public:\n     bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey);\n-    bool HaveKey(const CKeyID &address) const\n-    {\n-        bool result;\n-        {\n-            LOCK(cs_KeyStore);\n-            result = (mapKeys.count(address) > 0);\n-        }\n-        return result;\n-    }\n-    void GetKeys(std::set<CKeyID> &setAddress) const\n-    {\n-        setAddress.clear();\n-        {\n-            LOCK(cs_KeyStore);\n-            KeyMap::const_iterator mi = mapKeys.begin();\n-            while (mi != mapKeys.end())\n-            {\n-                setAddress.insert((*mi).first);\n-                mi++;\n-            }\n-        }\n-    }\n-    bool GetKey(const CKeyID &address, CKey &keyOut) const\n-    {\n-        {\n-            LOCK(cs_KeyStore);\n-            KeyMap::const_iterator mi = mapKeys.find(address);\n-            if (mi != mapKeys.end())\n-            {\n-                keyOut = mi->second;\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n+    bool HaveKey(const CKeyID &address) const;\n+    void GetKeys(std::set<CKeyID> &setAddress) const;\n+    bool GetKey(const CKeyID &address, CKey &keyOut) const;\n+\n     virtual bool AddCScript(const CScript& redeemScript);\n     virtual bool HaveCScript(const CScriptID &hash) const;\n     virtual bool GetCScript(const CScriptID &hash, CScript& redeemScriptOut) const;"
      }
    ]
  }
]