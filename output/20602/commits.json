[
  {
    "sha": "fa11110bff6288f63e0c487e2e4b4079fb0f4569",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTExMTEwYmZmNjI4OGY2M2UwYzQ4N2UyZTRiNDA3OWZiMGY0NTY5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-08T15:49:33Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-12-08T15:47:36Z"
      },
      "message": "util: Allow use of C++14 chrono literals",
      "tree": {
        "sha": "3d93598c38ba1b34be157fefb14a38bb24ee940a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d93598c38ba1b34be157fefb14a38bb24ee940a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa11110bff6288f63e0c487e2e4b4079fb0f4569",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjZPQv/XUfOXaMkx++fflefSv4lPFnMeq92EeifR6EIaDThTKf5FDqojv/Ectw1\n+CiSbncZZNvwOHA0fb5EO4RelcIyyPDNmqAx2ezdURddufEWUiHY5nbZW0CTJLjj\ng+2CeBvwWqKYXAkJQTX3+csccbX7IKWeICj2YLlPjVOFySmDYKhqCuolL0vCooxs\nkUPmkWaomGARSDuWR60JTSyoCTCOi/iscuaYESCGLjmVhxgqUdUuZCH+KBOBdUzq\nBun3xFFj8pYFcQKDuSPLFAfzSHDFYqfJ0g2KamPYwsovm30fDnxChJuuY+sQGrg1\nFerxpaw+znV3WRf7hxV0aNOuiLr3KGe9dKKIPZQGQLj2eNBTveuv2wdVLLqFmd98\nXCoXUvXaQl1Y6kE+qKU4k62Vlo/XcaCKCLel+PvyipwT9c4mwKFp3wQODozmxnSF\nv+0V/gZ52TSS3b+Cxddms+2CcaCn2iPCTlro0Tq6wPxGm9cAI0s44m5yWzbGcSBc\nBY5pnL5a\n=a3CG\n-----END PGP SIGNATURE-----",
        "payload": "tree 3d93598c38ba1b34be157fefb14a38bb24ee940a\nparent 16b31cc4c516cdcaf6d2eb2dd1255cc3e6973ba1\nauthor MarcoFalke <falke.marco@gmail.com> 1607442573 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1607442456 +0100\n\nutil: Allow use of C++14 chrono literals\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa11110bff6288f63e0c487e2e4b4079fb0f4569",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa11110bff6288f63e0c487e2e4b4079fb0f4569",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa11110bff6288f63e0c487e2e4b4079fb0f4569/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "16b31cc4c516cdcaf6d2eb2dd1255cc3e6973ba1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16b31cc4c516cdcaf6d2eb2dd1255cc3e6973ba1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16b31cc4c516cdcaf6d2eb2dd1255cc3e6973ba1"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 7,
      "deletions": 5
    },
    "files": [
      {
        "sha": "2fed49540dbb9183cca3b1ec94159a19d1fff23b",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa11110bff6288f63e0c487e2e4b4079fb0f4569/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa11110bff6288f63e0c487e2e4b4079fb0f4569/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=fa11110bff6288f63e0c487e2e4b4079fb0f4569",
        "patch": "@@ -1016,7 +1016,7 @@ class CNode\n         // Used for BIP35 mempool sending\n         bool fSendMempool GUARDED_BY(cs_tx_inventory){false};\n         // Last time a \"MEMPOOL\" request was serviced.\n-        std::atomic<std::chrono::seconds> m_last_mempool_req{std::chrono::seconds{0}};\n+        std::atomic<std::chrono::seconds> m_last_mempool_req{0s};\n         std::chrono::microseconds nNextInvSend{0};\n \n         RecursiveMutex cs_feeFilter;\n@@ -1049,7 +1049,7 @@ class CNode\n     // The pong reply we're expecting, or 0 if no pong expected.\n     std::atomic<uint64_t> nPingNonceSent{0};\n     /** When the last ping was sent, or 0 if no ping was ever sent */\n-    std::atomic<std::chrono::microseconds> m_ping_start{std::chrono::microseconds{0}};\n+    std::atomic<std::chrono::microseconds> m_ping_start{0us};\n     // Last measured round-trip time.\n     std::atomic<int64_t> nPingUsecTime{0};\n     // Best measured round-trip time."
      },
      {
        "sha": "c46d7d0e61707cc6766953fd5d5fffc3f19ea260",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa11110bff6288f63e0c487e2e4b4079fb0f4569/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa11110bff6288f63e0c487e2e4b4079fb0f4569/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=fa11110bff6288f63e0c487e2e4b4079fb0f4569",
        "patch": "@@ -4080,7 +4080,7 @@ bool PeerManager::SendMessages(CNode* pto)\n             // over since our last self-announcement, but there is only a small\n             // bandwidth cost that we can incur by doing this (which happens\n             // once a day on average).\n-            if (pto->m_next_local_addr_send != std::chrono::microseconds::zero()) {\n+            if (pto->m_next_local_addr_send != 0us) {\n                 pto->m_addr_known->reset();\n             }\n             AdvertiseLocal(pto);"
      },
      {
        "sha": "9248db1539c5e4a782cd5e3f4ba03c95f9133e95",
        "filename": "src/randomenv.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa11110bff6288f63e0c487e2e4b4079fb0f4569/src/randomenv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa11110bff6288f63e0c487e2e4b4079fb0f4569/src/randomenv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.cpp?ref=fa11110bff6288f63e0c487e2e4b4079fb0f4569",
        "patch": "@@ -69,7 +69,7 @@ void RandAddSeedPerfmon(CSHA512& hasher)\n \n     // This can take up to 2 seconds, so only do it every 10 minutes.\n     // Initialize last_perfmon to 0 seconds, we don't skip the first call.\n-    static std::atomic<std::chrono::seconds> last_perfmon{std::chrono::seconds{0}};\n+    static std::atomic<std::chrono::seconds> last_perfmon{0s};\n     auto last_time = last_perfmon.load();\n     auto current_time = GetTime<std::chrono::seconds>();\n     if (current_time < last_time + std::chrono::minutes{10}) return;"
      },
      {
        "sha": "c69f604dc62ff48eb2d750c7418e8f2d423c5d3a",
        "filename": "src/util/time.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa11110bff6288f63e0c487e2e4b4079fb0f4569/src/util/time.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa11110bff6288f63e0c487e2e4b4079fb0f4569/src/util/time.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/time.h?ref=fa11110bff6288f63e0c487e2e4b4079fb0f4569",
        "patch": "@@ -6,9 +6,11 @@\n #ifndef BITCOIN_UTIL_TIME_H\n #define BITCOIN_UTIL_TIME_H\n \n+#include <chrono>\n #include <stdint.h>\n #include <string>\n-#include <chrono>\n+\n+using namespace std::chrono_literals;\n \n void UninterruptibleSleep(const std::chrono::microseconds& n);\n "
      }
    ]
  }
]