[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/884040142",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#issuecomment-884040142",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22509",
    "id": 884040142,
    "node_id": "IC_kwDOABII5840sWHO",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-21T09:29:55Z",
    "updated_at": "2021-07-21T09:29:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/884040142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/884087015",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#issuecomment-884087015",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22509",
    "id": 884087015,
    "node_id": "IC_kwDOABII5840shjn",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-21T10:39:51Z",
    "updated_at": "2021-09-03T03:28:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22788](https://github.com/bitcoin/bitcoin/pull/22788) (scripted-diff: Use generate* from TestFramework by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/884087015/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/884147783",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#issuecomment-884147783",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22509",
    "id": 884147783,
    "node_id": "IC_kwDOABII5840swZH",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-21T12:23:11Z",
    "updated_at": "2021-07-21T12:23:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sriramdvt: Your PR was fine as it is -- #22378 is not merged into master yet, so there is no need to resolve a conflict by now; you can remove the second commit. The DrahtBot conflict message above just says that whenever either your PR or #22378 is merged, the other one very likely has to be rebased.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/884147783/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/884189215",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#issuecomment-884189215",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22509",
    "id": 884189215,
    "node_id": "IC_kwDOABII5840s6gf",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-21T13:27:00Z",
    "updated_at": "2021-07-21T13:27:00Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.\r\n\r\nIn the commit message, the `Co-authored-by:` needs to be a trailer (last line of the message).\r\n( https://docs.github.com/en/github/committing-changes-to-your-project/creating-and-editing-commits/creating-a-commit-with-multiple-authors )",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/884189215/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/886104147",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#issuecomment-886104147",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22509",
    "id": 886104147,
    "node_id": "IC_kwDOABII58400OBT",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-24T19:54:51Z",
    "updated_at": "2021-07-24T19:54:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nMore MiniWallet is better.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/886104147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/910067587",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#issuecomment-910067587",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22509",
    "id": 910067587,
    "node_id": "IC_kwDOABII5842PoeD",
    "user": {
      "login": "sriramdvt",
      "id": 41079588,
      "node_id": "MDQ6VXNlcjQxMDc5NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41079588?u=70fe6fee3efb3d1d564d807f6f2f08dce664a575&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sriramdvt",
      "html_url": "https://github.com/sriramdvt",
      "followers_url": "https://api.github.com/users/sriramdvt/followers",
      "following_url": "https://api.github.com/users/sriramdvt/following{/other_user}",
      "gists_url": "https://api.github.com/users/sriramdvt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sriramdvt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sriramdvt/subscriptions",
      "organizations_url": "https://api.github.com/users/sriramdvt/orgs",
      "repos_url": "https://api.github.com/users/sriramdvt/repos",
      "events_url": "https://api.github.com/users/sriramdvt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sriramdvt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-01T08:37:37Z",
    "updated_at": "2021-09-01T08:37:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased and updated with the suggestions",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/910067587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916073080",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#issuecomment-916073080",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22509",
    "id": 916073080,
    "node_id": "IC_kwDOABII5842mip4",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-09T13:05:07Z",
    "updated_at": "2021-09-09T13:05:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n\ud83d\udc19 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/916073080/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674102062",
    "pull_request_review_id": 711864844,
    "id": 674102062,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDEwMjA2Mg==",
    "diff_hunk": "@@ -72,85 +69,71 @@ def run_test(self):\n         assert_raises_rpc_error(-22, 'TX decode failed', lambda: node.testmempoolaccept(rawtxs=['ff00baar']))\n \n         self.log.info('A transaction already in the blockchain')\n-        coin = coins.pop()  # Pick a random coin(base) to spend\n-        raw_tx_in_block = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': coin['txid'], 'vout': coin['vout']}],\n-            outputs=[{node.getnewaddress(): 0.3}, {node.getnewaddress(): 49}],\n-        ))['hex']\n-        txid_in_block = node.sendrawtransaction(hexstring=raw_tx_in_block, maxfeerate=0)\n+        raw_tx_in_block = miniwallet.send_self_transfer(from_node=node)",
    "path": "test/functional/mempool_accept.py",
    "position": null,
    "original_position": 52,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "936f56bb2ae760e076acccf53e247b7c509f3c34",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Naming: since the mini-wallet methods `{create,send}_self_transfer()` return more than just the raw transaction, I'd remove the `raw_` prefix in those cases.",
    "created_at": "2021-07-21T15:44:29Z",
    "updated_at": "2021-07-21T16:19:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674102062",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674102062"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674102062"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674102062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 72,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674102872",
    "pull_request_review_id": 711864844,
    "id": 674102872,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDEwMjg3Mg==",
    "diff_hunk": "@@ -72,85 +69,71 @@ def run_test(self):\n         assert_raises_rpc_error(-22, 'TX decode failed', lambda: node.testmempoolaccept(rawtxs=['ff00baar']))\n \n         self.log.info('A transaction already in the blockchain')\n-        coin = coins.pop()  # Pick a random coin(base) to spend\n-        raw_tx_in_block = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': coin['txid'], 'vout': coin['vout']}],\n-            outputs=[{node.getnewaddress(): 0.3}, {node.getnewaddress(): 49}],\n-        ))['hex']\n-        txid_in_block = node.sendrawtransaction(hexstring=raw_tx_in_block, maxfeerate=0)\n+        raw_tx_in_block = miniwallet.send_self_transfer(from_node=node)\n         node.generate(1)\n         self.mempool_size = 0\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_in_block, 'allowed': False, 'reject-reason': 'txn-already-known'}],\n-            rawtxs=[raw_tx_in_block],\n+            result_expected=[{'txid': raw_tx_in_block['txid'], 'allowed': False, 'reject-reason': 'txn-already-known'}],\n+            rawtxs=[raw_tx_in_block['hex']],\n         )\n \n         self.log.info('A transaction not in the mempool')\n-        fee = Decimal('0.000007')\n-        raw_tx_0 = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{\"txid\": txid_in_block, \"vout\": 0, \"sequence\": BIP125_SEQUENCE_NUMBER}],  # RBF is used later\n-            outputs=[{node.getnewaddress(): Decimal('0.3') - fee}],\n-        ))['hex']\n-        tx = tx_from_hex(raw_tx_0)\n+        fee = Decimal(\"0.003\")  # The default fee_rate in MiniWallet",
    "path": "test/functional/mempool_accept.py",
    "position": null,
    "original_position": 69,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "936f56bb2ae760e076acccf53e247b7c509f3c34",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Naming: as this is not an absolute fee, I'd suggest calling the variable `fee_rate` instead.",
    "created_at": "2021-07-21T15:45:17Z",
    "updated_at": "2021-07-21T16:19:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674102872",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674102872"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674102872"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674102872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 81,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674109263",
    "pull_request_review_id": 711864844,
    "id": 674109263,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDEwOTI2Mw==",
    "diff_hunk": "@@ -72,85 +69,71 @@ def run_test(self):\n         assert_raises_rpc_error(-22, 'TX decode failed', lambda: node.testmempoolaccept(rawtxs=['ff00baar']))\n \n         self.log.info('A transaction already in the blockchain')\n-        coin = coins.pop()  # Pick a random coin(base) to spend\n-        raw_tx_in_block = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': coin['txid'], 'vout': coin['vout']}],\n-            outputs=[{node.getnewaddress(): 0.3}, {node.getnewaddress(): 49}],\n-        ))['hex']\n-        txid_in_block = node.sendrawtransaction(hexstring=raw_tx_in_block, maxfeerate=0)\n+        raw_tx_in_block = miniwallet.send_self_transfer(from_node=node)\n         node.generate(1)\n         self.mempool_size = 0\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_in_block, 'allowed': False, 'reject-reason': 'txn-already-known'}],\n-            rawtxs=[raw_tx_in_block],\n+            result_expected=[{'txid': raw_tx_in_block['txid'], 'allowed': False, 'reject-reason': 'txn-already-known'}],\n+            rawtxs=[raw_tx_in_block['hex']],\n         )\n \n         self.log.info('A transaction not in the mempool')\n-        fee = Decimal('0.000007')\n-        raw_tx_0 = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{\"txid\": txid_in_block, \"vout\": 0, \"sequence\": BIP125_SEQUENCE_NUMBER}],  # RBF is used later\n-            outputs=[{node.getnewaddress(): Decimal('0.3') - fee}],\n-        ))['hex']\n-        tx = tx_from_hex(raw_tx_0)\n+        fee = Decimal(\"0.003\")  # The default fee_rate in MiniWallet\n+        coin = miniwallet.get_utxo()  # Get a utxo and store it for later\n+        raw_tx_0 = miniwallet.create_self_transfer(fee_rate=fee, from_node=node, utxo_to_spend=coin, sequence=BIP125_SEQUENCE_NUMBER) # RBF is used later\n+        tx = tx_from_hex(raw_tx_0['hex'])",
    "path": "test/functional/mempool_accept.py",
    "position": null,
    "original_position": 72,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "936f56bb2ae760e076acccf53e247b7c509f3c34",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Calling the `tx_from_hex` helper is not needed here (and in many more similar instances below), since the `{create,send}self_transfer()` method already provides the `CTransaction` instance in the result via dict field `tx`:\r\n\r\n```suggestion\r\n        tx = raw_tx_0['tx']\r\n```",
    "created_at": "2021-07-21T15:51:25Z",
    "updated_at": "2021-07-21T16:19:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674109263",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674109263"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674109263"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674109263/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 84,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674120853",
    "pull_request_review_id": 711864844,
    "id": 674120853,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDEyMDg1Mw==",
    "diff_hunk": "@@ -72,85 +69,71 @@ def run_test(self):\n         assert_raises_rpc_error(-22, 'TX decode failed', lambda: node.testmempoolaccept(rawtxs=['ff00baar']))\n \n         self.log.info('A transaction already in the blockchain')\n-        coin = coins.pop()  # Pick a random coin(base) to spend\n-        raw_tx_in_block = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': coin['txid'], 'vout': coin['vout']}],\n-            outputs=[{node.getnewaddress(): 0.3}, {node.getnewaddress(): 49}],\n-        ))['hex']\n-        txid_in_block = node.sendrawtransaction(hexstring=raw_tx_in_block, maxfeerate=0)\n+        raw_tx_in_block = miniwallet.send_self_transfer(from_node=node)\n         node.generate(1)\n         self.mempool_size = 0\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_in_block, 'allowed': False, 'reject-reason': 'txn-already-known'}],\n-            rawtxs=[raw_tx_in_block],\n+            result_expected=[{'txid': raw_tx_in_block['txid'], 'allowed': False, 'reject-reason': 'txn-already-known'}],\n+            rawtxs=[raw_tx_in_block['hex']],\n         )\n \n         self.log.info('A transaction not in the mempool')\n-        fee = Decimal('0.000007')\n-        raw_tx_0 = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{\"txid\": txid_in_block, \"vout\": 0, \"sequence\": BIP125_SEQUENCE_NUMBER}],  # RBF is used later\n-            outputs=[{node.getnewaddress(): Decimal('0.3') - fee}],\n-        ))['hex']\n-        tx = tx_from_hex(raw_tx_0)\n+        fee = Decimal(\"0.003\")  # The default fee_rate in MiniWallet\n+        coin = miniwallet.get_utxo()  # Get a utxo and store it for later\n+        raw_tx_0 = miniwallet.create_self_transfer(fee_rate=fee, from_node=node, utxo_to_spend=coin, sequence=BIP125_SEQUENCE_NUMBER) # RBF is used later\n+        tx = tx_from_hex(raw_tx_0['hex'])\n         txid_0 = tx.rehash()",
    "path": "test/functional/mempool_accept.py",
    "position": null,
    "original_position": 73,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "936f56bb2ae760e076acccf53e247b7c509f3c34",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: I think the txid can simpy be obtained by accessing the dict field `txid` of the self-transfer method's result (rehashing shouldn't be needed here).",
    "created_at": "2021-07-21T16:00:44Z",
    "updated_at": "2021-07-21T16:19:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674120853",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674120853"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674120853"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674120853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 85,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674125317",
    "pull_request_review_id": 711864844,
    "id": 674125317,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDEyNTMxNw==",
    "diff_hunk": "@@ -72,85 +69,71 @@ def run_test(self):\n         assert_raises_rpc_error(-22, 'TX decode failed', lambda: node.testmempoolaccept(rawtxs=['ff00baar']))\n \n         self.log.info('A transaction already in the blockchain')\n-        coin = coins.pop()  # Pick a random coin(base) to spend\n-        raw_tx_in_block = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': coin['txid'], 'vout': coin['vout']}],\n-            outputs=[{node.getnewaddress(): 0.3}, {node.getnewaddress(): 49}],\n-        ))['hex']\n-        txid_in_block = node.sendrawtransaction(hexstring=raw_tx_in_block, maxfeerate=0)\n+        raw_tx_in_block = miniwallet.send_self_transfer(from_node=node)\n         node.generate(1)\n         self.mempool_size = 0\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_in_block, 'allowed': False, 'reject-reason': 'txn-already-known'}],\n-            rawtxs=[raw_tx_in_block],\n+            result_expected=[{'txid': raw_tx_in_block['txid'], 'allowed': False, 'reject-reason': 'txn-already-known'}],\n+            rawtxs=[raw_tx_in_block['hex']],\n         )\n \n         self.log.info('A transaction not in the mempool')\n-        fee = Decimal('0.000007')\n-        raw_tx_0 = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{\"txid\": txid_in_block, \"vout\": 0, \"sequence\": BIP125_SEQUENCE_NUMBER}],  # RBF is used later\n-            outputs=[{node.getnewaddress(): Decimal('0.3') - fee}],\n-        ))['hex']\n-        tx = tx_from_hex(raw_tx_0)\n+        fee = Decimal(\"0.003\")  # The default fee_rate in MiniWallet\n+        coin = miniwallet.get_utxo()  # Get a utxo and store it for later\n+        raw_tx_0 = miniwallet.create_self_transfer(fee_rate=fee, from_node=node, utxo_to_spend=coin, sequence=BIP125_SEQUENCE_NUMBER) # RBF is used later\n+        tx = tx_from_hex(raw_tx_0['hex'])\n         txid_0 = tx.rehash()\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_0, 'allowed': True, 'vsize': tx.get_vsize(), 'fees': {'base': fee}}],\n-            rawtxs=[raw_tx_0],\n+            result_expected=[{'txid': txid_0, 'allowed': True, 'vsize': tx.get_vsize(), 'fees': {'base': raw_tx_0['fees']}}],\n+            rawtxs=[raw_tx_0['hex']],\n         )\n \n         self.log.info('A final transaction not in the mempool')\n-        coin = coins.pop()  # Pick a random coin(base) to spend\n-        output_amount = Decimal('0.025')\n-        raw_tx_final = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': coin['txid'], 'vout': coin['vout'], \"sequence\": 0xffffffff}],  # SEQUENCE_FINAL\n-            outputs=[{node.getnewaddress(): output_amount}],\n-            locktime=node.getblockcount() + 2000,  # Can be anything\n-        ))['hex']\n-        tx = tx_from_hex(raw_tx_final)\n-        fee_expected = coin['amount'] - output_amount\n+        raw_tx_final = miniwallet.create_self_transfer(from_node=node, sequence=0xffffffff, locktime=node.getblockcount()+2000) # SEQUENCE_FINAL, locktime can be anything",
    "path": "test/functional/mempool_accept.py",
    "position": null,
    "original_position": 91,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "936f56bb2ae760e076acccf53e247b7c509f3c34",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "stylistic nit, to better match comments to parameters:\r\n```suggestion\r\n        raw_tx_final = miniwallet.create_self_transfer(\r\n            from_node=node,\r\n            sequence=0xffffffff,  # SEQUENCE_FINAL\r\n            locktime=node.getblockcount()+2000),  # locktime can be anything\r\n        )\r\n```\r\n",
    "created_at": "2021-07-21T16:04:19Z",
    "updated_at": "2021-07-21T16:21:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674125317",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674125317"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674125317"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674125317/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 92,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674224725",
    "pull_request_review_id": 712010818,
    "id": 674224725,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDIyNDcyNQ==",
    "diff_hunk": "@@ -72,85 +69,71 @@ def run_test(self):\n         assert_raises_rpc_error(-22, 'TX decode failed', lambda: node.testmempoolaccept(rawtxs=['ff00baar']))\n \n         self.log.info('A transaction already in the blockchain')\n-        coin = coins.pop()  # Pick a random coin(base) to spend\n-        raw_tx_in_block = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': coin['txid'], 'vout': coin['vout']}],\n-            outputs=[{node.getnewaddress(): 0.3}, {node.getnewaddress(): 49}],\n-        ))['hex']\n-        txid_in_block = node.sendrawtransaction(hexstring=raw_tx_in_block, maxfeerate=0)\n+        raw_tx_in_block = miniwallet.send_self_transfer(from_node=node)",
    "path": "test/functional/mempool_accept.py",
    "position": null,
    "original_position": 52,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "936f56bb2ae760e076acccf53e247b7c509f3c34",
    "user": {
      "login": "sriramdvt",
      "id": 41079588,
      "node_id": "MDQ6VXNlcjQxMDc5NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41079588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sriramdvt",
      "html_url": "https://github.com/sriramdvt",
      "followers_url": "https://api.github.com/users/sriramdvt/followers",
      "following_url": "https://api.github.com/users/sriramdvt/following{/other_user}",
      "gists_url": "https://api.github.com/users/sriramdvt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sriramdvt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sriramdvt/subscriptions",
      "organizations_url": "https://api.github.com/users/sriramdvt/orgs",
      "repos_url": "https://api.github.com/users/sriramdvt/repos",
      "events_url": "https://api.github.com/users/sriramdvt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sriramdvt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Removed all instances where having a `raw_` prefix is misleading. There is one instance where `raw_tx_coinbase_spent` gets a raw transaction from `node.getrawtransaction()`. This is the only transaction variable that has a `raw_` prefix now.",
    "created_at": "2021-07-21T18:21:11Z",
    "updated_at": "2021-07-21T18:21:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674224725",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674224725"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674224725"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674224725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 72,
    "side": "RIGHT",
    "in_reply_to_id": 674102062
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674225457",
    "pull_request_review_id": 712011794,
    "id": 674225457,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDIyNTQ1Nw==",
    "diff_hunk": "@@ -72,85 +69,71 @@ def run_test(self):\n         assert_raises_rpc_error(-22, 'TX decode failed', lambda: node.testmempoolaccept(rawtxs=['ff00baar']))\n \n         self.log.info('A transaction already in the blockchain')\n-        coin = coins.pop()  # Pick a random coin(base) to spend\n-        raw_tx_in_block = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': coin['txid'], 'vout': coin['vout']}],\n-            outputs=[{node.getnewaddress(): 0.3}, {node.getnewaddress(): 49}],\n-        ))['hex']\n-        txid_in_block = node.sendrawtransaction(hexstring=raw_tx_in_block, maxfeerate=0)\n+        raw_tx_in_block = miniwallet.send_self_transfer(from_node=node)\n         node.generate(1)\n         self.mempool_size = 0\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_in_block, 'allowed': False, 'reject-reason': 'txn-already-known'}],\n-            rawtxs=[raw_tx_in_block],\n+            result_expected=[{'txid': raw_tx_in_block['txid'], 'allowed': False, 'reject-reason': 'txn-already-known'}],\n+            rawtxs=[raw_tx_in_block['hex']],\n         )\n \n         self.log.info('A transaction not in the mempool')\n-        fee = Decimal('0.000007')\n-        raw_tx_0 = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{\"txid\": txid_in_block, \"vout\": 0, \"sequence\": BIP125_SEQUENCE_NUMBER}],  # RBF is used later\n-            outputs=[{node.getnewaddress(): Decimal('0.3') - fee}],\n-        ))['hex']\n-        tx = tx_from_hex(raw_tx_0)\n+        fee = Decimal(\"0.003\")  # The default fee_rate in MiniWallet",
    "path": "test/functional/mempool_accept.py",
    "position": null,
    "original_position": 69,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "936f56bb2ae760e076acccf53e247b7c509f3c34",
    "user": {
      "login": "sriramdvt",
      "id": 41079588,
      "node_id": "MDQ6VXNlcjQxMDc5NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41079588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sriramdvt",
      "html_url": "https://github.com/sriramdvt",
      "followers_url": "https://api.github.com/users/sriramdvt/followers",
      "following_url": "https://api.github.com/users/sriramdvt/following{/other_user}",
      "gists_url": "https://api.github.com/users/sriramdvt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sriramdvt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sriramdvt/subscriptions",
      "organizations_url": "https://api.github.com/users/sriramdvt/orgs",
      "repos_url": "https://api.github.com/users/sriramdvt/repos",
      "events_url": "https://api.github.com/users/sriramdvt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sriramdvt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changed `fee` to `fee_rate`, thank you!",
    "created_at": "2021-07-21T18:22:21Z",
    "updated_at": "2021-07-21T18:22:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674225457",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674225457"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674225457"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674225457/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 81,
    "side": "RIGHT",
    "in_reply_to_id": 674102872
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674228032",
    "pull_request_review_id": 712015075,
    "id": 674228032,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDIyODAzMg==",
    "diff_hunk": "@@ -72,85 +69,71 @@ def run_test(self):\n         assert_raises_rpc_error(-22, 'TX decode failed', lambda: node.testmempoolaccept(rawtxs=['ff00baar']))\n \n         self.log.info('A transaction already in the blockchain')\n-        coin = coins.pop()  # Pick a random coin(base) to spend\n-        raw_tx_in_block = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': coin['txid'], 'vout': coin['vout']}],\n-            outputs=[{node.getnewaddress(): 0.3}, {node.getnewaddress(): 49}],\n-        ))['hex']\n-        txid_in_block = node.sendrawtransaction(hexstring=raw_tx_in_block, maxfeerate=0)\n+        raw_tx_in_block = miniwallet.send_self_transfer(from_node=node)\n         node.generate(1)\n         self.mempool_size = 0\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_in_block, 'allowed': False, 'reject-reason': 'txn-already-known'}],\n-            rawtxs=[raw_tx_in_block],\n+            result_expected=[{'txid': raw_tx_in_block['txid'], 'allowed': False, 'reject-reason': 'txn-already-known'}],\n+            rawtxs=[raw_tx_in_block['hex']],\n         )\n \n         self.log.info('A transaction not in the mempool')\n-        fee = Decimal('0.000007')\n-        raw_tx_0 = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{\"txid\": txid_in_block, \"vout\": 0, \"sequence\": BIP125_SEQUENCE_NUMBER}],  # RBF is used later\n-            outputs=[{node.getnewaddress(): Decimal('0.3') - fee}],\n-        ))['hex']\n-        tx = tx_from_hex(raw_tx_0)\n+        fee = Decimal(\"0.003\")  # The default fee_rate in MiniWallet\n+        coin = miniwallet.get_utxo()  # Get a utxo and store it for later\n+        raw_tx_0 = miniwallet.create_self_transfer(fee_rate=fee, from_node=node, utxo_to_spend=coin, sequence=BIP125_SEQUENCE_NUMBER) # RBF is used later\n+        tx = tx_from_hex(raw_tx_0['hex'])",
    "path": "test/functional/mempool_accept.py",
    "position": null,
    "original_position": 72,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "936f56bb2ae760e076acccf53e247b7c509f3c34",
    "user": {
      "login": "sriramdvt",
      "id": 41079588,
      "node_id": "MDQ6VXNlcjQxMDc5NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41079588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sriramdvt",
      "html_url": "https://github.com/sriramdvt",
      "followers_url": "https://api.github.com/users/sriramdvt/followers",
      "following_url": "https://api.github.com/users/sriramdvt/following{/other_user}",
      "gists_url": "https://api.github.com/users/sriramdvt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sriramdvt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sriramdvt/subscriptions",
      "organizations_url": "https://api.github.com/users/sriramdvt/orgs",
      "repos_url": "https://api.github.com/users/sriramdvt/repos",
      "events_url": "https://api.github.com/users/sriramdvt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sriramdvt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`tx_from_hex` is now used only when the previous transaction from `{create,send}_self_transfer()` has been modified, or when the test needs to construct a transaction from the raw transaction from `node.getrawtransaction()`.",
    "created_at": "2021-07-21T18:26:12Z",
    "updated_at": "2021-07-21T18:26:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674228032",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674228032"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674228032"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674228032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 84,
    "side": "RIGHT",
    "in_reply_to_id": 674109263
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674230074",
    "pull_request_review_id": 712017732,
    "id": 674230074,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDIzMDA3NA==",
    "diff_hunk": "@@ -72,85 +69,71 @@ def run_test(self):\n         assert_raises_rpc_error(-22, 'TX decode failed', lambda: node.testmempoolaccept(rawtxs=['ff00baar']))\n \n         self.log.info('A transaction already in the blockchain')\n-        coin = coins.pop()  # Pick a random coin(base) to spend\n-        raw_tx_in_block = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': coin['txid'], 'vout': coin['vout']}],\n-            outputs=[{node.getnewaddress(): 0.3}, {node.getnewaddress(): 49}],\n-        ))['hex']\n-        txid_in_block = node.sendrawtransaction(hexstring=raw_tx_in_block, maxfeerate=0)\n+        raw_tx_in_block = miniwallet.send_self_transfer(from_node=node)\n         node.generate(1)\n         self.mempool_size = 0\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_in_block, 'allowed': False, 'reject-reason': 'txn-already-known'}],\n-            rawtxs=[raw_tx_in_block],\n+            result_expected=[{'txid': raw_tx_in_block['txid'], 'allowed': False, 'reject-reason': 'txn-already-known'}],\n+            rawtxs=[raw_tx_in_block['hex']],\n         )\n \n         self.log.info('A transaction not in the mempool')\n-        fee = Decimal('0.000007')\n-        raw_tx_0 = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{\"txid\": txid_in_block, \"vout\": 0, \"sequence\": BIP125_SEQUENCE_NUMBER}],  # RBF is used later\n-            outputs=[{node.getnewaddress(): Decimal('0.3') - fee}],\n-        ))['hex']\n-        tx = tx_from_hex(raw_tx_0)\n+        fee = Decimal(\"0.003\")  # The default fee_rate in MiniWallet\n+        coin = miniwallet.get_utxo()  # Get a utxo and store it for later\n+        raw_tx_0 = miniwallet.create_self_transfer(fee_rate=fee, from_node=node, utxo_to_spend=coin, sequence=BIP125_SEQUENCE_NUMBER) # RBF is used later\n+        tx = tx_from_hex(raw_tx_0['hex'])\n         txid_0 = tx.rehash()",
    "path": "test/functional/mempool_accept.py",
    "position": null,
    "original_position": 73,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "936f56bb2ae760e076acccf53e247b7c509f3c34",
    "user": {
      "login": "sriramdvt",
      "id": 41079588,
      "node_id": "MDQ6VXNlcjQxMDc5NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41079588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sriramdvt",
      "html_url": "https://github.com/sriramdvt",
      "followers_url": "https://api.github.com/users/sriramdvt/followers",
      "following_url": "https://api.github.com/users/sriramdvt/following{/other_user}",
      "gists_url": "https://api.github.com/users/sriramdvt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sriramdvt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sriramdvt/subscriptions",
      "organizations_url": "https://api.github.com/users/sriramdvt/orgs",
      "repos_url": "https://api.github.com/users/sriramdvt/repos",
      "events_url": "https://api.github.com/users/sriramdvt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sriramdvt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Removed multiple instances where rehashing the transaction was not required. `tx.rehash()` is now used only when a `CTransaction()` object is changed.",
    "created_at": "2021-07-21T18:29:22Z",
    "updated_at": "2021-07-21T18:29:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674230074",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674230074"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674230074"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674230074/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 85,
    "side": "RIGHT",
    "in_reply_to_id": 674120853
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674232163",
    "pull_request_review_id": 712020635,
    "id": 674232163,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NDIzMjE2Mw==",
    "diff_hunk": "@@ -72,85 +69,71 @@ def run_test(self):\n         assert_raises_rpc_error(-22, 'TX decode failed', lambda: node.testmempoolaccept(rawtxs=['ff00baar']))\n \n         self.log.info('A transaction already in the blockchain')\n-        coin = coins.pop()  # Pick a random coin(base) to spend\n-        raw_tx_in_block = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': coin['txid'], 'vout': coin['vout']}],\n-            outputs=[{node.getnewaddress(): 0.3}, {node.getnewaddress(): 49}],\n-        ))['hex']\n-        txid_in_block = node.sendrawtransaction(hexstring=raw_tx_in_block, maxfeerate=0)\n+        raw_tx_in_block = miniwallet.send_self_transfer(from_node=node)\n         node.generate(1)\n         self.mempool_size = 0\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_in_block, 'allowed': False, 'reject-reason': 'txn-already-known'}],\n-            rawtxs=[raw_tx_in_block],\n+            result_expected=[{'txid': raw_tx_in_block['txid'], 'allowed': False, 'reject-reason': 'txn-already-known'}],\n+            rawtxs=[raw_tx_in_block['hex']],\n         )\n \n         self.log.info('A transaction not in the mempool')\n-        fee = Decimal('0.000007')\n-        raw_tx_0 = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{\"txid\": txid_in_block, \"vout\": 0, \"sequence\": BIP125_SEQUENCE_NUMBER}],  # RBF is used later\n-            outputs=[{node.getnewaddress(): Decimal('0.3') - fee}],\n-        ))['hex']\n-        tx = tx_from_hex(raw_tx_0)\n+        fee = Decimal(\"0.003\")  # The default fee_rate in MiniWallet\n+        coin = miniwallet.get_utxo()  # Get a utxo and store it for later\n+        raw_tx_0 = miniwallet.create_self_transfer(fee_rate=fee, from_node=node, utxo_to_spend=coin, sequence=BIP125_SEQUENCE_NUMBER) # RBF is used later\n+        tx = tx_from_hex(raw_tx_0['hex'])\n         txid_0 = tx.rehash()\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_0, 'allowed': True, 'vsize': tx.get_vsize(), 'fees': {'base': fee}}],\n-            rawtxs=[raw_tx_0],\n+            result_expected=[{'txid': txid_0, 'allowed': True, 'vsize': tx.get_vsize(), 'fees': {'base': raw_tx_0['fees']}}],\n+            rawtxs=[raw_tx_0['hex']],\n         )\n \n         self.log.info('A final transaction not in the mempool')\n-        coin = coins.pop()  # Pick a random coin(base) to spend\n-        output_amount = Decimal('0.025')\n-        raw_tx_final = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': coin['txid'], 'vout': coin['vout'], \"sequence\": 0xffffffff}],  # SEQUENCE_FINAL\n-            outputs=[{node.getnewaddress(): output_amount}],\n-            locktime=node.getblockcount() + 2000,  # Can be anything\n-        ))['hex']\n-        tx = tx_from_hex(raw_tx_final)\n-        fee_expected = coin['amount'] - output_amount\n+        raw_tx_final = miniwallet.create_self_transfer(from_node=node, sequence=0xffffffff, locktime=node.getblockcount()+2000) # SEQUENCE_FINAL, locktime can be anything",
    "path": "test/functional/mempool_accept.py",
    "position": null,
    "original_position": 91,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "936f56bb2ae760e076acccf53e247b7c509f3c34",
    "user": {
      "login": "sriramdvt",
      "id": 41079588,
      "node_id": "MDQ6VXNlcjQxMDc5NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41079588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sriramdvt",
      "html_url": "https://github.com/sriramdvt",
      "followers_url": "https://api.github.com/users/sriramdvt/followers",
      "following_url": "https://api.github.com/users/sriramdvt/following{/other_user}",
      "gists_url": "https://api.github.com/users/sriramdvt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sriramdvt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sriramdvt/subscriptions",
      "organizations_url": "https://api.github.com/users/sriramdvt/orgs",
      "repos_url": "https://api.github.com/users/sriramdvt/repos",
      "events_url": "https://api.github.com/users/sriramdvt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sriramdvt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This was indeed how the first commit (aa068ad397cfe5766dccfd45c0f4ba846e7abd22) had it, but I think I missed it in later force pushes. Thank you!",
    "created_at": "2021-07-21T18:32:46Z",
    "updated_at": "2021-07-21T18:32:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674232163",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674232163"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674232163"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/674232163/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 92,
    "side": "RIGHT",
    "in_reply_to_id": 674125317
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679854811",
    "pull_request_review_id": 718983729,
    "id": 679854811,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTg1NDgxMQ==",
    "diff_hunk": "@@ -159,64 +139,53 @@ def run_test(self):\n         )\n \n         self.log.info('A transaction with missing inputs, that existed once in the past')\n-        tx = tx_from_hex(raw_tx_0)\n-        tx.vin[0].prevout.n = 1  # Set vout to 1, to spend the other outpoint (49 coins) of the in-chain-tx we want to double spend\n-        raw_tx_1 = node.signrawtransactionwithwallet(tx.serialize().hex())['hex']\n-        txid_1 = node.sendrawtransaction(hexstring=raw_tx_1, maxfeerate=0)\n-        # Now spend both to \"clearly hide\" the outputs, ie. remove the coins from the utxo set by spending them\n-        raw_tx_spend_both = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[\n-                {'txid': txid_0, 'vout': 0},\n-                {'txid': txid_1, 'vout': 0},\n-            ],\n-            outputs=[{node.getnewaddress(): 0.1}]\n-        ))['hex']\n-        txid_spend_both = node.sendrawtransaction(hexstring=raw_tx_spend_both, maxfeerate=0)\n+        node.sendrawtransaction(hexstring=tx_0['hex'], maxfeerate=0) # spend the tx_0\n+        self.mempool_size += 1\n+        tx_1 = miniwallet.send_self_transfer(fee_rate=4*fee_rate,from_node=node)\n+        utxo_1 = miniwallet.get_utxo()\n+        miniwallet.send_self_transfer(from_node=node, utxo_to_spend=utxo_1)['txid']",
    "path": "test/functional/mempool_accept.py",
    "position": null,
    "original_position": 180,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "7cd06b3c9b47dcbd48c94aa8decac9e676a2d13b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n        miniwallet.send_self_transfer(from_node=node)['txid']\r\n```\r\n\r\nshould be identical",
    "created_at": "2021-07-30T11:30:56Z",
    "updated_at": "2021-07-30T11:40:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r679854811",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679854811"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r679854811"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679854811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 145,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 146,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679854963",
    "pull_request_review_id": 718983729,
    "id": 679854963,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTg1NDk2Mw==",
    "diff_hunk": "@@ -159,64 +139,53 @@ def run_test(self):\n         )\n \n         self.log.info('A transaction with missing inputs, that existed once in the past')\n-        tx = tx_from_hex(raw_tx_0)\n-        tx.vin[0].prevout.n = 1  # Set vout to 1, to spend the other outpoint (49 coins) of the in-chain-tx we want to double spend\n-        raw_tx_1 = node.signrawtransactionwithwallet(tx.serialize().hex())['hex']\n-        txid_1 = node.sendrawtransaction(hexstring=raw_tx_1, maxfeerate=0)\n-        # Now spend both to \"clearly hide\" the outputs, ie. remove the coins from the utxo set by spending them\n-        raw_tx_spend_both = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[\n-                {'txid': txid_0, 'vout': 0},\n-                {'txid': txid_1, 'vout': 0},\n-            ],\n-            outputs=[{node.getnewaddress(): 0.1}]\n-        ))['hex']\n-        txid_spend_both = node.sendrawtransaction(hexstring=raw_tx_spend_both, maxfeerate=0)\n+        node.sendrawtransaction(hexstring=tx_0['hex'], maxfeerate=0) # spend the tx_0\n+        self.mempool_size += 1\n+        tx_1 = miniwallet.send_self_transfer(fee_rate=4*fee_rate,from_node=node)\n+        utxo_1 = miniwallet.get_utxo()\n+        miniwallet.send_self_transfer(from_node=node, utxo_to_spend=utxo_1)['txid']\n         node.generate(1)\n         self.mempool_size = 0\n+\n         # Now see if we can add the coins back to the utxo set by sending the exact txs again\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_0, 'allowed': False, 'reject-reason': 'missing-inputs'}],\n-            rawtxs=[raw_tx_0],\n+            result_expected=[{'txid': tx.rehash(), 'allowed': False, 'reject-reason': 'missing-inputs'}],\n+            rawtxs=[tx.serialize().hex()],\n         )\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_1, 'allowed': False, 'reject-reason': 'missing-inputs'}],\n-            rawtxs=[raw_tx_1],\n+            result_expected=[{'txid': tx_1['txid'], 'allowed': False, 'reject-reason': 'missing-inputs'}],\n+            rawtxs=[tx_1['hex']],\n         )\n \n         self.log.info('Create a signed \"reference\" tx for later use')\n-        raw_tx_reference = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': txid_spend_both, 'vout': 0}],\n-            outputs=[{node.getnewaddress(): 0.05}],\n-        ))['hex']\n-        tx = tx_from_hex(raw_tx_reference)\n+        utxo_2 = miniwallet.get_utxo()\n+        tx_reference = miniwallet.create_self_transfer(from_node=node, utxo_to_spend=utxo_2)",
    "path": "test/functional/mempool_accept.py",
    "position": 206,
    "original_position": 205,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "7cd06b3c9b47dcbd48c94aa8decac9e676a2d13b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "same",
    "created_at": "2021-07-30T11:31:14Z",
    "updated_at": "2021-07-30T11:40:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r679854963",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679854963"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r679854963"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679854963/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 163,
    "original_line": 163,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679855377",
    "pull_request_review_id": 718983729,
    "id": 679855377,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTg1NTM3Nw==",
    "diff_hunk": "@@ -159,64 +139,53 @@ def run_test(self):\n         )\n \n         self.log.info('A transaction with missing inputs, that existed once in the past')\n-        tx = tx_from_hex(raw_tx_0)\n-        tx.vin[0].prevout.n = 1  # Set vout to 1, to spend the other outpoint (49 coins) of the in-chain-tx we want to double spend\n-        raw_tx_1 = node.signrawtransactionwithwallet(tx.serialize().hex())['hex']\n-        txid_1 = node.sendrawtransaction(hexstring=raw_tx_1, maxfeerate=0)\n-        # Now spend both to \"clearly hide\" the outputs, ie. remove the coins from the utxo set by spending them\n-        raw_tx_spend_both = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[\n-                {'txid': txid_0, 'vout': 0},\n-                {'txid': txid_1, 'vout': 0},\n-            ],\n-            outputs=[{node.getnewaddress(): 0.1}]\n-        ))['hex']\n-        txid_spend_both = node.sendrawtransaction(hexstring=raw_tx_spend_both, maxfeerate=0)\n+        node.sendrawtransaction(hexstring=tx_0['hex'], maxfeerate=0) # spend the tx_0\n+        self.mempool_size += 1\n+        tx_1 = miniwallet.send_self_transfer(fee_rate=4*fee_rate,from_node=node)\n+        utxo_1 = miniwallet.get_utxo()\n+        miniwallet.send_self_transfer(from_node=node, utxo_to_spend=utxo_1)['txid']",
    "path": "test/functional/mempool_accept.py",
    "position": null,
    "original_position": 180,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "7cd06b3c9b47dcbd48c94aa8decac9e676a2d13b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Also, why the `['txid']` in the end?",
    "created_at": "2021-07-30T11:32:04Z",
    "updated_at": "2021-07-30T11:40:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r679855377",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679855377"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r679855377"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679855377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 145,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 146,
    "side": "RIGHT",
    "in_reply_to_id": 679854811
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679858119",
    "pull_request_review_id": 718983729,
    "id": 679858119,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTg1ODExOQ==",
    "diff_hunk": "@@ -159,64 +139,53 @@ def run_test(self):\n         )\n \n         self.log.info('A transaction with missing inputs, that existed once in the past')\n-        tx = tx_from_hex(raw_tx_0)\n-        tx.vin[0].prevout.n = 1  # Set vout to 1, to spend the other outpoint (49 coins) of the in-chain-tx we want to double spend\n-        raw_tx_1 = node.signrawtransactionwithwallet(tx.serialize().hex())['hex']\n-        txid_1 = node.sendrawtransaction(hexstring=raw_tx_1, maxfeerate=0)\n-        # Now spend both to \"clearly hide\" the outputs, ie. remove the coins from the utxo set by spending them\n-        raw_tx_spend_both = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[\n-                {'txid': txid_0, 'vout': 0},\n-                {'txid': txid_1, 'vout': 0},\n-            ],\n-            outputs=[{node.getnewaddress(): 0.1}]\n-        ))['hex']\n-        txid_spend_both = node.sendrawtransaction(hexstring=raw_tx_spend_both, maxfeerate=0)\n+        node.sendrawtransaction(hexstring=tx_0['hex'], maxfeerate=0) # spend the tx_0\n+        self.mempool_size += 1\n+        tx_1 = miniwallet.send_self_transfer(fee_rate=4*fee_rate,from_node=node)\n+        utxo_1 = miniwallet.get_utxo()\n+        miniwallet.send_self_transfer(from_node=node, utxo_to_spend=utxo_1)['txid']\n         node.generate(1)\n         self.mempool_size = 0\n+\n         # Now see if we can add the coins back to the utxo set by sending the exact txs again\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_0, 'allowed': False, 'reject-reason': 'missing-inputs'}],\n-            rawtxs=[raw_tx_0],\n+            result_expected=[{'txid': tx.rehash(), 'allowed': False, 'reject-reason': 'missing-inputs'}],\n+            rawtxs=[tx.serialize().hex()],\n         )\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_1, 'allowed': False, 'reject-reason': 'missing-inputs'}],\n-            rawtxs=[raw_tx_1],\n+            result_expected=[{'txid': tx_1['txid'], 'allowed': False, 'reject-reason': 'missing-inputs'}],\n+            rawtxs=[tx_1['hex']],\n         )\n \n         self.log.info('Create a signed \"reference\" tx for later use')\n-        raw_tx_reference = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': txid_spend_both, 'vout': 0}],\n-            outputs=[{node.getnewaddress(): 0.05}],\n-        ))['hex']\n-        tx = tx_from_hex(raw_tx_reference)\n+        utxo_2 = miniwallet.get_utxo()\n+        tx_reference = miniwallet.create_self_transfer(from_node=node, utxo_to_spend=utxo_2)\n         # Reference tx should be valid on itself\n         self.check_mempool_result(\n-            result_expected=[{'txid': tx.rehash(), 'allowed': True, 'vsize': tx.get_vsize(), 'fees': { 'base': Decimal('0.1') - Decimal('0.05')}}],\n-            rawtxs=[tx.serialize().hex()],\n+            result_expected=[{'txid': tx_reference['txid'], 'allowed': True, 'vsize': tx_reference['tx'].get_vsize(), 'fees': {'base': tx_reference['fees']}}],\n+            rawtxs=[tx_reference['hex']],\n             maxfeerate=0,\n         )\n \n         self.log.info('A transaction with no outputs')\n-        tx = tx_from_hex(raw_tx_reference)\n+        tx = tx_from_hex(tx_reference['hex'])\n         tx.vout = []\n         # Skip re-signing the transaction for context independent checks from now on",
    "path": "test/functional/mempool_accept.py",
    "position": 220,
    "original_position": 219,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "7cd06b3c9b47dcbd48c94aa8decac9e676a2d13b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can also remove this line, because there are no signatures",
    "created_at": "2021-07-30T11:37:32Z",
    "updated_at": "2021-07-30T11:40:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r679858119",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679858119"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r679858119"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679858119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 175,
    "original_line": 175,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679859441",
    "pull_request_review_id": 718983729,
    "id": 679859441,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTg1OTQ0MQ==",
    "diff_hunk": "@@ -159,64 +139,53 @@ def run_test(self):\n         )\n \n         self.log.info('A transaction with missing inputs, that existed once in the past')\n-        tx = tx_from_hex(raw_tx_0)\n-        tx.vin[0].prevout.n = 1  # Set vout to 1, to spend the other outpoint (49 coins) of the in-chain-tx we want to double spend\n-        raw_tx_1 = node.signrawtransactionwithwallet(tx.serialize().hex())['hex']\n-        txid_1 = node.sendrawtransaction(hexstring=raw_tx_1, maxfeerate=0)\n-        # Now spend both to \"clearly hide\" the outputs, ie. remove the coins from the utxo set by spending them\n-        raw_tx_spend_both = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[\n-                {'txid': txid_0, 'vout': 0},\n-                {'txid': txid_1, 'vout': 0},\n-            ],\n-            outputs=[{node.getnewaddress(): 0.1}]\n-        ))['hex']\n-        txid_spend_both = node.sendrawtransaction(hexstring=raw_tx_spend_both, maxfeerate=0)\n+        node.sendrawtransaction(hexstring=tx_0['hex'], maxfeerate=0) # spend the tx_0\n+        self.mempool_size += 1\n+        tx_1 = miniwallet.send_self_transfer(fee_rate=4*fee_rate,from_node=node)\n+        utxo_1 = miniwallet.get_utxo()\n+        miniwallet.send_self_transfer(from_node=node, utxo_to_spend=utxo_1)['txid']\n         node.generate(1)\n         self.mempool_size = 0\n+\n         # Now see if we can add the coins back to the utxo set by sending the exact txs again\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_0, 'allowed': False, 'reject-reason': 'missing-inputs'}],\n-            rawtxs=[raw_tx_0],\n+            result_expected=[{'txid': tx.rehash(), 'allowed': False, 'reject-reason': 'missing-inputs'}],\n+            rawtxs=[tx.serialize().hex()],\n         )\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_1, 'allowed': False, 'reject-reason': 'missing-inputs'}],\n-            rawtxs=[raw_tx_1],\n+            result_expected=[{'txid': tx_1['txid'], 'allowed': False, 'reject-reason': 'missing-inputs'}],\n+            rawtxs=[tx_1['hex']],\n         )\n \n         self.log.info('Create a signed \"reference\" tx for later use')\n-        raw_tx_reference = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': txid_spend_both, 'vout': 0}],\n-            outputs=[{node.getnewaddress(): 0.05}],\n-        ))['hex']\n-        tx = tx_from_hex(raw_tx_reference)\n+        utxo_2 = miniwallet.get_utxo()\n+        tx_reference = miniwallet.create_self_transfer(from_node=node, utxo_to_spend=utxo_2)\n         # Reference tx should be valid on itself\n         self.check_mempool_result(\n-            result_expected=[{'txid': tx.rehash(), 'allowed': True, 'vsize': tx.get_vsize(), 'fees': { 'base': Decimal('0.1') - Decimal('0.05')}}],\n-            rawtxs=[tx.serialize().hex()],\n+            result_expected=[{'txid': tx_reference['txid'], 'allowed': True, 'vsize': tx_reference['tx'].get_vsize(), 'fees': {'base': tx_reference['fees']}}],\n+            rawtxs=[tx_reference['hex']],\n             maxfeerate=0,\n         )\n \n         self.log.info('A transaction with no outputs')\n-        tx = tx_from_hex(raw_tx_reference)\n+        tx = tx_from_hex(tx_reference['hex'])",
    "path": "test/functional/mempool_accept.py",
    "position": null,
    "original_position": 217,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "7cd06b3c9b47dcbd48c94aa8decac9e676a2d13b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "wouldn't the diff be smaller if the `raw_tx_reference` symbol was kept?",
    "created_at": "2021-07-30T11:39:59Z",
    "updated_at": "2021-07-30T11:40:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r679859441",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679859441"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r679859441"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679859441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 171,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699998660",
    "pull_request_review_id": 743634867,
    "id": 699998660,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTk5ODY2MA==",
    "diff_hunk": "@@ -159,64 +139,53 @@ def run_test(self):\n         )\n \n         self.log.info('A transaction with missing inputs, that existed once in the past')\n-        tx = tx_from_hex(raw_tx_0)\n-        tx.vin[0].prevout.n = 1  # Set vout to 1, to spend the other outpoint (49 coins) of the in-chain-tx we want to double spend\n-        raw_tx_1 = node.signrawtransactionwithwallet(tx.serialize().hex())['hex']\n-        txid_1 = node.sendrawtransaction(hexstring=raw_tx_1, maxfeerate=0)\n-        # Now spend both to \"clearly hide\" the outputs, ie. remove the coins from the utxo set by spending them\n-        raw_tx_spend_both = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[\n-                {'txid': txid_0, 'vout': 0},\n-                {'txid': txid_1, 'vout': 0},\n-            ],\n-            outputs=[{node.getnewaddress(): 0.1}]\n-        ))['hex']\n-        txid_spend_both = node.sendrawtransaction(hexstring=raw_tx_spend_both, maxfeerate=0)\n+        node.sendrawtransaction(hexstring=tx_0['hex'], maxfeerate=0) # spend the tx_0\n+        self.mempool_size += 1\n+        tx_1 = miniwallet.send_self_transfer(fee_rate=4*fee_rate,from_node=node)\n+        utxo_1 = miniwallet.get_utxo()\n+        miniwallet.send_self_transfer(from_node=node, utxo_to_spend=utxo_1)['txid']",
    "path": "test/functional/mempool_accept.py",
    "position": null,
    "original_position": 180,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "7cd06b3c9b47dcbd48c94aa8decac9e676a2d13b",
    "user": {
      "login": "sriramdvt",
      "id": 41079588,
      "node_id": "MDQ6VXNlcjQxMDc5NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41079588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sriramdvt",
      "html_url": "https://github.com/sriramdvt",
      "followers_url": "https://api.github.com/users/sriramdvt/followers",
      "following_url": "https://api.github.com/users/sriramdvt/following{/other_user}",
      "gists_url": "https://api.github.com/users/sriramdvt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sriramdvt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sriramdvt/subscriptions",
      "organizations_url": "https://api.github.com/users/sriramdvt/orgs",
      "repos_url": "https://api.github.com/users/sriramdvt/repos",
      "events_url": "https://api.github.com/users/sriramdvt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sriramdvt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Removed the unnecessary `['txid']`. The suggestion is not identical, since `miniwallet.send_self_transfer` sorts the utxo set by the value, before choosing a transaction.",
    "created_at": "2021-09-01T08:30:59Z",
    "updated_at": "2021-09-01T08:30:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r699998660",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699998660"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r699998660"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699998660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 145,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 146,
    "side": "RIGHT",
    "in_reply_to_id": 679854811
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699999655",
    "pull_request_review_id": 743636209,
    "id": 699999655,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTk5OTY1NQ==",
    "diff_hunk": "@@ -159,64 +139,53 @@ def run_test(self):\n         )\n \n         self.log.info('A transaction with missing inputs, that existed once in the past')\n-        tx = tx_from_hex(raw_tx_0)\n-        tx.vin[0].prevout.n = 1  # Set vout to 1, to spend the other outpoint (49 coins) of the in-chain-tx we want to double spend\n-        raw_tx_1 = node.signrawtransactionwithwallet(tx.serialize().hex())['hex']\n-        txid_1 = node.sendrawtransaction(hexstring=raw_tx_1, maxfeerate=0)\n-        # Now spend both to \"clearly hide\" the outputs, ie. remove the coins from the utxo set by spending them\n-        raw_tx_spend_both = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[\n-                {'txid': txid_0, 'vout': 0},\n-                {'txid': txid_1, 'vout': 0},\n-            ],\n-            outputs=[{node.getnewaddress(): 0.1}]\n-        ))['hex']\n-        txid_spend_both = node.sendrawtransaction(hexstring=raw_tx_spend_both, maxfeerate=0)\n+        node.sendrawtransaction(hexstring=tx_0['hex'], maxfeerate=0) # spend the tx_0\n+        self.mempool_size += 1\n+        tx_1 = miniwallet.send_self_transfer(fee_rate=4*fee_rate,from_node=node)\n+        utxo_1 = miniwallet.get_utxo()\n+        miniwallet.send_self_transfer(from_node=node, utxo_to_spend=utxo_1)['txid']\n         node.generate(1)\n         self.mempool_size = 0\n+\n         # Now see if we can add the coins back to the utxo set by sending the exact txs again\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_0, 'allowed': False, 'reject-reason': 'missing-inputs'}],\n-            rawtxs=[raw_tx_0],\n+            result_expected=[{'txid': tx.rehash(), 'allowed': False, 'reject-reason': 'missing-inputs'}],\n+            rawtxs=[tx.serialize().hex()],\n         )\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_1, 'allowed': False, 'reject-reason': 'missing-inputs'}],\n-            rawtxs=[raw_tx_1],\n+            result_expected=[{'txid': tx_1['txid'], 'allowed': False, 'reject-reason': 'missing-inputs'}],\n+            rawtxs=[tx_1['hex']],\n         )\n \n         self.log.info('Create a signed \"reference\" tx for later use')\n-        raw_tx_reference = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': txid_spend_both, 'vout': 0}],\n-            outputs=[{node.getnewaddress(): 0.05}],\n-        ))['hex']\n-        tx = tx_from_hex(raw_tx_reference)\n+        utxo_2 = miniwallet.get_utxo()\n+        tx_reference = miniwallet.create_self_transfer(from_node=node, utxo_to_spend=utxo_2)\n         # Reference tx should be valid on itself\n         self.check_mempool_result(\n-            result_expected=[{'txid': tx.rehash(), 'allowed': True, 'vsize': tx.get_vsize(), 'fees': { 'base': Decimal('0.1') - Decimal('0.05')}}],\n-            rawtxs=[tx.serialize().hex()],\n+            result_expected=[{'txid': tx_reference['txid'], 'allowed': True, 'vsize': tx_reference['tx'].get_vsize(), 'fees': {'base': tx_reference['fees']}}],\n+            rawtxs=[tx_reference['hex']],\n             maxfeerate=0,\n         )\n \n         self.log.info('A transaction with no outputs')\n-        tx = tx_from_hex(raw_tx_reference)\n+        tx = tx_from_hex(tx_reference['hex'])",
    "path": "test/functional/mempool_accept.py",
    "position": null,
    "original_position": 217,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "7cd06b3c9b47dcbd48c94aa8decac9e676a2d13b",
    "user": {
      "login": "sriramdvt",
      "id": 41079588,
      "node_id": "MDQ6VXNlcjQxMDc5NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41079588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sriramdvt",
      "html_url": "https://github.com/sriramdvt",
      "followers_url": "https://api.github.com/users/sriramdvt/followers",
      "following_url": "https://api.github.com/users/sriramdvt/following{/other_user}",
      "gists_url": "https://api.github.com/users/sriramdvt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sriramdvt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sriramdvt/subscriptions",
      "organizations_url": "https://api.github.com/users/sriramdvt/orgs",
      "repos_url": "https://api.github.com/users/sriramdvt/repos",
      "events_url": "https://api.github.com/users/sriramdvt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sriramdvt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agreed! Added a `raw_tx_reference` symbol and the diff is much smaller now.",
    "created_at": "2021-09-01T08:32:18Z",
    "updated_at": "2021-09-01T08:32:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r699999655",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699999655"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r699999655"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699999655/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 171,
    "side": "RIGHT",
    "in_reply_to_id": 679859441
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700003064",
    "pull_request_review_id": 743640828,
    "id": 700003064,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMDAwMzA2NA==",
    "diff_hunk": "@@ -159,64 +139,53 @@ def run_test(self):\n         )\n \n         self.log.info('A transaction with missing inputs, that existed once in the past')\n-        tx = tx_from_hex(raw_tx_0)\n-        tx.vin[0].prevout.n = 1  # Set vout to 1, to spend the other outpoint (49 coins) of the in-chain-tx we want to double spend\n-        raw_tx_1 = node.signrawtransactionwithwallet(tx.serialize().hex())['hex']\n-        txid_1 = node.sendrawtransaction(hexstring=raw_tx_1, maxfeerate=0)\n-        # Now spend both to \"clearly hide\" the outputs, ie. remove the coins from the utxo set by spending them\n-        raw_tx_spend_both = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[\n-                {'txid': txid_0, 'vout': 0},\n-                {'txid': txid_1, 'vout': 0},\n-            ],\n-            outputs=[{node.getnewaddress(): 0.1}]\n-        ))['hex']\n-        txid_spend_both = node.sendrawtransaction(hexstring=raw_tx_spend_both, maxfeerate=0)\n+        node.sendrawtransaction(hexstring=tx_0['hex'], maxfeerate=0) # spend the tx_0\n+        self.mempool_size += 1\n+        tx_1 = miniwallet.send_self_transfer(fee_rate=4*fee_rate,from_node=node)\n+        utxo_1 = miniwallet.get_utxo()\n+        miniwallet.send_self_transfer(from_node=node, utxo_to_spend=utxo_1)['txid']\n         node.generate(1)\n         self.mempool_size = 0\n+\n         # Now see if we can add the coins back to the utxo set by sending the exact txs again\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_0, 'allowed': False, 'reject-reason': 'missing-inputs'}],\n-            rawtxs=[raw_tx_0],\n+            result_expected=[{'txid': tx.rehash(), 'allowed': False, 'reject-reason': 'missing-inputs'}],\n+            rawtxs=[tx.serialize().hex()],\n         )\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_1, 'allowed': False, 'reject-reason': 'missing-inputs'}],\n-            rawtxs=[raw_tx_1],\n+            result_expected=[{'txid': tx_1['txid'], 'allowed': False, 'reject-reason': 'missing-inputs'}],\n+            rawtxs=[tx_1['hex']],\n         )\n \n         self.log.info('Create a signed \"reference\" tx for later use')\n-        raw_tx_reference = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': txid_spend_both, 'vout': 0}],\n-            outputs=[{node.getnewaddress(): 0.05}],\n-        ))['hex']\n-        tx = tx_from_hex(raw_tx_reference)\n+        utxo_2 = miniwallet.get_utxo()\n+        tx_reference = miniwallet.create_self_transfer(from_node=node, utxo_to_spend=utxo_2)\n         # Reference tx should be valid on itself\n         self.check_mempool_result(\n-            result_expected=[{'txid': tx.rehash(), 'allowed': True, 'vsize': tx.get_vsize(), 'fees': { 'base': Decimal('0.1') - Decimal('0.05')}}],\n-            rawtxs=[tx.serialize().hex()],\n+            result_expected=[{'txid': tx_reference['txid'], 'allowed': True, 'vsize': tx_reference['tx'].get_vsize(), 'fees': {'base': tx_reference['fees']}}],\n+            rawtxs=[tx_reference['hex']],\n             maxfeerate=0,\n         )\n \n         self.log.info('A transaction with no outputs')\n-        tx = tx_from_hex(raw_tx_reference)\n+        tx = tx_from_hex(tx_reference['hex'])\n         tx.vout = []\n         # Skip re-signing the transaction for context independent checks from now on",
    "path": "test/functional/mempool_accept.py",
    "position": 220,
    "original_position": 219,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "7cd06b3c9b47dcbd48c94aa8decac9e676a2d13b",
    "user": {
      "login": "sriramdvt",
      "id": 41079588,
      "node_id": "MDQ6VXNlcjQxMDc5NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41079588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sriramdvt",
      "html_url": "https://github.com/sriramdvt",
      "followers_url": "https://api.github.com/users/sriramdvt/followers",
      "following_url": "https://api.github.com/users/sriramdvt/following{/other_user}",
      "gists_url": "https://api.github.com/users/sriramdvt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sriramdvt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sriramdvt/subscriptions",
      "organizations_url": "https://api.github.com/users/sriramdvt/orgs",
      "repos_url": "https://api.github.com/users/sriramdvt/repos",
      "events_url": "https://api.github.com/users/sriramdvt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sriramdvt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`tx.vout = []` is necessary since the transaction is serialized in `check_mempool_result`. Without this, the transaction does not get rejected for the right reasons. Please let me know if I misunderstood the suggestion.",
    "created_at": "2021-09-01T08:36:53Z",
    "updated_at": "2021-09-01T08:36:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r700003064",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700003064"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r700003064"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700003064/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 175,
    "original_line": 175,
    "side": "RIGHT",
    "in_reply_to_id": 679858119
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700277346",
    "pull_request_review_id": 744015373,
    "id": 700277346,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMDI3NzM0Ng==",
    "diff_hunk": "@@ -159,64 +139,53 @@ def run_test(self):\n         )\n \n         self.log.info('A transaction with missing inputs, that existed once in the past')\n-        tx = tx_from_hex(raw_tx_0)\n-        tx.vin[0].prevout.n = 1  # Set vout to 1, to spend the other outpoint (49 coins) of the in-chain-tx we want to double spend\n-        raw_tx_1 = node.signrawtransactionwithwallet(tx.serialize().hex())['hex']\n-        txid_1 = node.sendrawtransaction(hexstring=raw_tx_1, maxfeerate=0)\n-        # Now spend both to \"clearly hide\" the outputs, ie. remove the coins from the utxo set by spending them\n-        raw_tx_spend_both = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[\n-                {'txid': txid_0, 'vout': 0},\n-                {'txid': txid_1, 'vout': 0},\n-            ],\n-            outputs=[{node.getnewaddress(): 0.1}]\n-        ))['hex']\n-        txid_spend_both = node.sendrawtransaction(hexstring=raw_tx_spend_both, maxfeerate=0)\n+        node.sendrawtransaction(hexstring=tx_0['hex'], maxfeerate=0) # spend the tx_0\n+        self.mempool_size += 1\n+        tx_1 = miniwallet.send_self_transfer(fee_rate=4*fee_rate,from_node=node)\n+        utxo_1 = miniwallet.get_utxo()\n+        miniwallet.send_self_transfer(from_node=node, utxo_to_spend=utxo_1)['txid']\n         node.generate(1)\n         self.mempool_size = 0\n+\n         # Now see if we can add the coins back to the utxo set by sending the exact txs again\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_0, 'allowed': False, 'reject-reason': 'missing-inputs'}],\n-            rawtxs=[raw_tx_0],\n+            result_expected=[{'txid': tx.rehash(), 'allowed': False, 'reject-reason': 'missing-inputs'}],\n+            rawtxs=[tx.serialize().hex()],\n         )\n         self.check_mempool_result(\n-            result_expected=[{'txid': txid_1, 'allowed': False, 'reject-reason': 'missing-inputs'}],\n-            rawtxs=[raw_tx_1],\n+            result_expected=[{'txid': tx_1['txid'], 'allowed': False, 'reject-reason': 'missing-inputs'}],\n+            rawtxs=[tx_1['hex']],\n         )\n \n         self.log.info('Create a signed \"reference\" tx for later use')\n-        raw_tx_reference = node.signrawtransactionwithwallet(node.createrawtransaction(\n-            inputs=[{'txid': txid_spend_both, 'vout': 0}],\n-            outputs=[{node.getnewaddress(): 0.05}],\n-        ))['hex']\n-        tx = tx_from_hex(raw_tx_reference)\n+        utxo_2 = miniwallet.get_utxo()\n+        tx_reference = miniwallet.create_self_transfer(from_node=node, utxo_to_spend=utxo_2)\n         # Reference tx should be valid on itself\n         self.check_mempool_result(\n-            result_expected=[{'txid': tx.rehash(), 'allowed': True, 'vsize': tx.get_vsize(), 'fees': { 'base': Decimal('0.1') - Decimal('0.05')}}],\n-            rawtxs=[tx.serialize().hex()],\n+            result_expected=[{'txid': tx_reference['txid'], 'allowed': True, 'vsize': tx_reference['tx'].get_vsize(), 'fees': {'base': tx_reference['fees']}}],\n+            rawtxs=[tx_reference['hex']],\n             maxfeerate=0,\n         )\n \n         self.log.info('A transaction with no outputs')\n-        tx = tx_from_hex(raw_tx_reference)\n+        tx = tx_from_hex(tx_reference['hex'])\n         tx.vout = []\n         # Skip re-signing the transaction for context independent checks from now on",
    "path": "test/functional/mempool_accept.py",
    "position": 220,
    "original_position": 219,
    "commit_id": "69dda69bf671533824651b979c8bec4551d78b17",
    "original_commit_id": "7cd06b3c9b47dcbd48c94aa8decac9e676a2d13b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I meant the comment line :sweat_smile: ",
    "created_at": "2021-09-01T14:36:13Z",
    "updated_at": "2021-09-01T14:36:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r700277346",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700277346"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22509#discussion_r700277346"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22509"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/700277346/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 175,
    "original_line": 175,
    "side": "RIGHT",
    "in_reply_to_id": 679858119
  }
]