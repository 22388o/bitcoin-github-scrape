theStack,2021-07-21 09:29:55,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22509#issuecomment-884040142,884040142,
DrahtBot,2021-07-21 10:39:51,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22788](https://github.com/bitcoin/bitcoin/pull/22788) (scripted-diff: Use generate* from TestFramework by MarcoFalke)\n\",https://github.com/bitcoin/bitcoin/pull/22509#issuecomment-884087015,884087015,
theStack,2021-07-21 12:23:11,"@sriramdvt: Your PR was fine as it is -- #22378 is not merged into master yet, so there is no need to resolve a conflict by now; you can remove the second commit. The DrahtBot conflict message above just says that whenever either your PR or #22378 is merged, the other one very likely has to be rebased.",https://github.com/bitcoin/bitcoin/pull/22509#issuecomment-884147783,884147783,
MarcoFalke,2021-07-21 13:27:00,"Concept ACK.\n\nIn the commit message, the `Co-authored-by:` needs to be a trailer (last line of the message).\n( https://docs.github.com/en/github/committing-changes-to-your-project/creating-and-editing-commits/creating-a-commit-with-multiple-authors )",https://github.com/bitcoin/bitcoin/pull/22509#issuecomment-884189215,884189215,
practicalswift,2021-07-24 19:54:51,"Concept ACK\n\nMore MiniWallet is better.",https://github.com/bitcoin/bitcoin/pull/22509#issuecomment-886104147,886104147,
sriramdvt,2021-09-01 08:37:37,Rebased and updated with the suggestions,https://github.com/bitcoin/bitcoin/pull/22509#issuecomment-910067587,910067587,
DrahtBot,2021-09-09 13:05:07,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/22509#issuecomment-916073080,916073080,
theStack,2021-07-21 15:44:29,"Naming: since the mini-wallet methods `{create,send}_self_transfer()` return more than just the raw transaction, I'd remove the `raw_` prefix in those cases.",https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674102062,674102062,test/functional/mempool_accept.py
theStack,2021-07-21 15:45:17,"Naming: as this is not an absolute fee, I'd suggest calling the variable `fee_rate` instead.",https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674102872,674102872,test/functional/mempool_accept.py
theStack,2021-07-21 15:51:25,"Calling the `tx_from_hex` helper is not needed here (and in many more similar instances below), since the `{create,send}self_transfer()` method already provides the `CTransaction` instance in the result via dict field `tx`:\n\n```suggestion\n        tx = raw_tx_0['tx']\n```",https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674109263,674109263,test/functional/mempool_accept.py
theStack,2021-07-21 16:00:44,nit: I think the txid can simpy be obtained by accessing the dict field `txid` of the self-transfer method's result (rehashing shouldn't be needed here).,https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674120853,674120853,test/functional/mempool_accept.py
theStack,2021-07-21 16:04:19,"stylistic nit, to better match comments to parameters:\n```suggestion\n        raw_tx_final = miniwallet.create_self_transfer(\n            from_node=node,\n            sequence=0xffffffff,  # SEQUENCE_FINAL\n            locktime=node.getblockcount()+2000),  # locktime can be anything\n        )\n```\n",https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674125317,674125317,test/functional/mempool_accept.py
sriramdvt,2021-07-21 18:21:11,Removed all instances where having a `raw_` prefix is misleading. There is one instance where `raw_tx_coinbase_spent` gets a raw transaction from `node.getrawtransaction()`. This is the only transaction variable that has a `raw_` prefix now.,https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674224725,674224725,test/functional/mempool_accept.py
sriramdvt,2021-07-21 18:22:21,"Changed `fee` to `fee_rate`, thank you!",https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674225457,674225457,test/functional/mempool_accept.py
sriramdvt,2021-07-21 18:26:12,"`tx_from_hex` is now used only when the previous transaction from `{create,send}_self_transfer()` has been modified, or when the test needs to construct a transaction from the raw transaction from `node.getrawtransaction()`.",https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674228032,674228032,test/functional/mempool_accept.py
sriramdvt,2021-07-21 18:29:22,Removed multiple instances where rehashing the transaction was not required. `tx.rehash()` is now used only when a `CTransaction()` object is changed.,https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674230074,674230074,test/functional/mempool_accept.py
sriramdvt,2021-07-21 18:32:46,"This was indeed how the first commit (aa068ad397cfe5766dccfd45c0f4ba846e7abd22) had it, but I think I missed it in later force pushes. Thank you!",https://github.com/bitcoin/bitcoin/pull/22509#discussion_r674232163,674232163,test/functional/mempool_accept.py
MarcoFalke,2021-07-30 11:30:56,"```suggestion\n        miniwallet.send_self_transfer(from_node=node)['txid']\n```\n\nshould be identical",https://github.com/bitcoin/bitcoin/pull/22509#discussion_r679854811,679854811,test/functional/mempool_accept.py
MarcoFalke,2021-07-30 11:31:14,same,https://github.com/bitcoin/bitcoin/pull/22509#discussion_r679854963,679854963,test/functional/mempool_accept.py
MarcoFalke,2021-07-30 11:32:04,"Also, why the `['txid']` in the end?",https://github.com/bitcoin/bitcoin/pull/22509#discussion_r679855377,679855377,test/functional/mempool_accept.py
MarcoFalke,2021-07-30 11:37:32,"Can also remove this line, because there are no signatures",https://github.com/bitcoin/bitcoin/pull/22509#discussion_r679858119,679858119,test/functional/mempool_accept.py
MarcoFalke,2021-07-30 11:39:59,wouldn't the diff be smaller if the `raw_tx_reference` symbol was kept?,https://github.com/bitcoin/bitcoin/pull/22509#discussion_r679859441,679859441,test/functional/mempool_accept.py
sriramdvt,2021-09-01 08:30:59,"Removed the unnecessary `['txid']`. The suggestion is not identical, since `miniwallet.send_self_transfer` sorts the utxo set by the value, before choosing a transaction.",https://github.com/bitcoin/bitcoin/pull/22509#discussion_r699998660,699998660,test/functional/mempool_accept.py
sriramdvt,2021-09-01 08:32:18,Agreed! Added a `raw_tx_reference` symbol and the diff is much smaller now.,https://github.com/bitcoin/bitcoin/pull/22509#discussion_r699999655,699999655,test/functional/mempool_accept.py
sriramdvt,2021-09-01 08:36:53,"`tx.vout = []` is necessary since the transaction is serialized in `check_mempool_result`. Without this, the transaction does not get rejected for the right reasons. Please let me know if I misunderstood the suggestion.",https://github.com/bitcoin/bitcoin/pull/22509#discussion_r700003064,700003064,test/functional/mempool_accept.py
MarcoFalke,2021-09-01 14:36:13,I meant the comment line :sweat_smile: ,https://github.com/bitcoin/bitcoin/pull/22509#discussion_r700277346,700277346,test/functional/mempool_accept.py
