jgarzik,2013-12-02T05:30:38Z,Drool.  Very nice.\n,https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-29595498,29595498,
pstratem,2013-12-02T06:29:21Z,"fdatasync is defined as fcntl(fd, F_FULLFSYNC, 0) on os x\n\nhttps://github.com/bitcoin/bitcoin/blob/master/src/leveldb/port/port_posix.h#L72\n",https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-29597117,29597117,
laanwj,2013-12-02T06:33:41Z,Good!\n\nBTW: I suppose not using mmap here also reduces virtual memory requirements for leveldb?\n,https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-29597247,29597247,
pstratem,2013-12-02T07:00:03Z,"possibly, i haven't checked.\n",https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-29597998,29597998,
jgarzik,2013-12-02T07:01:47Z,"@laanwj Correct, it should.  Even though leveldb's mmap'd pages are file-backed and discardable by the OS at any time [after writeout, if dirty], they still require virtual address space to be allocated -- which is in limited supply on 32-bit platforms.\n",https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-29598049,29598049,
wtogami,2013-12-02T07:49:32Z,https://bitcointalk.org/index.php?topic=337294.msg3718821#msg3718821\nThe 0.8.5-OMG7-no-mmap variant build includes this patch.  @toffoo and @coblee are testing it.\n,https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-29599679,29599679,
laanwj,2013-12-02T08:50:26Z,Can you please squash this into a single commit? That makes cherry-picking it to 0.8.6 more straightforward as the second commit is a fix for the first one not an independent change.\n,https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-29602125,29602125,
mikehearn,2013-12-02T17:25:07Z,"Do we really want to disable mmap outside of OS X? The issues if any are _not_ in LevelDB, they are in MacOS X. If it's a loss then I'm not sure it makes sense to hurt performance on platforms that work correctly.\n",https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-29638137,29638137,
pstratem,2013-12-02T19:05:10Z,"@mikehearn there is pretty clearly a problem with the way os x handles the interaction of mmap and normal io; however given that this is change has effectively no negative impact on performance and is considerably simpler logic than the mmap version, i think it should be used on all posix platforms.\n\n(indeed I've been advocating for replacing leveldb entirely with a BitcoinKVDB but who has time ",https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-29646991,29646991,
jgarzik,2013-12-02T19:36:43Z,"@mikehearn Agreed that Linux probably has a sane mmap :)  However, besides OSX, no-mmap should hopefully extend the lifetime of Windows/32-bit by reducing virtual address space usage.\n",https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-29649821,29649821,
pstratem,2013-12-02T20:20:41Z,I went back and ran initial block sync to block 200k.\n\nmmap took 622 seconds\nwrite took 646 seconds\n\nthat's ~4%\n\n@jgarzik this patch only addresses mmap on posix however something very similar could be done there (i have no idea what the performance impact would be)\n,https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-29653731,29653731,
madthanu,2013-12-02T21:47:21Z,@pstratem The PosixWriteableFile class should be fixed to do SyncDirIfManifest (similar to PosixMmapFile) before this goes into production ...\n,https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-29661097,29661097,
sipa,2013-12-02T22:49:33Z,"On the issue tracker, Sanjay comments that he experimented with a no-mmap approach as well, and it seems they're considering it.\n",https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-29666441,29666441,
pstratem,2013-12-03T00:56:38Z,call SyncDirIfManifest as @madthanu pointed out\n,https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-29674190,29674190,
wtogami,2013-12-03T06:48:02Z,https://bitcointalk.org/index.php?topic=337294.msg3718821#msg3718821\nTwo separate Bitcoin builds are available for testing.\n- mactest1 build contains @rescrv's #3327 and follows https://github.com/bitcoin/bitcoin/commits/0.8.6\n- OMG8 contains #3340 and follows https://github.com/litecoin-project/bitcoinomg/commits/0.8.5-OMG8\n,https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-29687177,29687177,
laanwj,2013-12-05T08:11:57Z,"Are we going to do the mmap change for all platforms, or just for MacOSX?\n(see https://github.com/litecoin-project/bitcoinomg/commit/71eb4af for a patch that makes this OSX-only)\nI think there's something to be said for both;\n\nAdvantages to merge it for all Posix platforms:\n- Total virtual memory usage goes down, giving 32-bit architectures some breathing room\n- Consistency\n\nAdvantages to ",https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-29878606,29878606,
laanwj,2013-12-11T16:01:47Z,This is included in a leveldb upgrade to 1.15\n- switched from mmap based writing to simpler stdio based writing. Has\n  a minor impact (0.5 microseconds) on microbenchmarks for asynchronous\n  writes. Synchronous writes speed up from 30ms to 10ms on linux/ext4.\n  Should be much more reliable on diverse platforms.\n,https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-30332934,30332934,
sipa,2013-12-11T17:27:10Z,"Well, the implementation in leveldb 1.15 is by Sanjay (one of LevelDB's primary authors), not the one from this PR.\n",https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-30341606,30341606,
laanwj,2013-12-11T17:30:58Z,"Yes, I just thought I'd mention it, it probably doesn't make sense to merge both...\n",https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-30341970,30341970,
rescrv,2013-12-11T22:24:51Z,"I'd recommend using Sanjay's implementation because it uses userspace-buffered I/O, which will give higher performance than this PR.  If it matters, it'll also minimize drift between upstream and the carried LevelDB code.\n",https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-30370680,30370680,
pstratem,2013-12-11T22:27:21Z,"I actually had a version of this that had an internal cache, the performance improvement was surprisingly small.\n",https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-30370899,30370899,
pstratem,2013-12-11T23:11:21Z,"I've added a 1 MB buffer (I have not extensively reviewed it for correctness!)\n\nI could not measure any performance difference for a single thread, which is the only test I tried (or really care about)\n",https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-30374377,30374377,
sipa,2013-12-11T23:27:57Z,"I don't really care about write performance, and I certainly prefer keeping a small diff with upstream.\n",https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-30375524,30375524,
BitcoinPullTester,2013-12-11T23:34:46Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/b1a4f7e75864dafdf5be8eda20bbabeb5788150c for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-30375942,30375942,
gavinandresen,2013-12-11T23:44:19Z,+1 for tracking upstream as closely as we can.\n,https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-30376522,30376522,
wtogami,2013-12-12T06:13:44Z,"I'm pleased that we have a seemingly working implementation in 0.8.6.  Please take due care in validating the long-term 0.9 solution.\n\nFWIW, as 1.15 is favored, Bitcoin OMG's next build will expose that to users for early real-world testing.\n",https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-30391772,30391772,
sipa,2013-12-12T21:25:30Z,See #3405 for LevelDB 1.15.\n,https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-30463343,30463343,
jgarzik,2013-12-13T00:03:08Z,Superceded by #3405 \n,https://github.com/bitcoin/bitcoin/pull/3340#issuecomment-30474968,30474968,
