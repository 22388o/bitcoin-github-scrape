MarcoFalke,2020-05-22 16:27:44,"Concept ACK for the reasons you mention.\n\nReview should be easy, but this might conflict with some other work in net processing which is going on right now. Let's wait for DrahtBot to list the conflicts to get a better idea when a change like this is least disruptive.",https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-632783713,632783713,
instagibbs,2020-05-22 16:46:07,concept ACK(boo pointers) and agree this should be fairly simple to review. ,https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-632795986,632795986,
jnewbery,2020-05-22 18:07:46,Very mild concept ACK. Pass-by-reference makes sense for `CNode` since we can't call `ProcessMessages()` with a null `CNode` and we never rebind the node reference when we're in net processing. Passing by reference should generally be the preferred way to pass in-out params (https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rf-inout),https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-632834452,632834452,
practicalswift,2020-05-22 21:51:40,Strong concept ACK,https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-632922332,632922332,
DrahtBot,2020-05-22 22:36:19,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19109 (Only allow getdata of recently announced invs by sipa)\n* #19107 (p2p: Refactor, move all header verification into",https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-632934146,632934146,
MarcoFalke,2020-05-22 22:40:15,Hm. Let's wait until a bunch of those conflicts are in first.,https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-632934735,632934735,
practicalswift,2020-05-23 06:51:18,"@theStack Thanks for doing this! If you want to investigate other cases where we are currently using raw pointer arguments without any reason doing so these commands might be helpful:\n\nTop list of types passed as raw pointer arguments:\n\n```\n$ git grep -E '^[a-zA-Z].* [a-zA-Z:]+\([^()]*\*[^()]*\)' -- ""src/**.cpp"" ""src/**.h"" \n      "":(exclude)src/bench/"" "":(exclude)src/compat/"" "":(exclud",https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-632997002,632997002,
MarcoFalke,2020-05-23 12:21:29,@practicalswift This seems off-topic here. They need a case-by-case evaluation. I suggest you create a brainstorming issue to discuss this.,https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-633042081,633042081,
practicalswift,2020-05-23 15:09:08,"@MarcoFalke Yes, that these need case-by-case evaluation goes without saying: the lists are showing potential candidates only -- sorry if that was unclear :)",https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-633072729,633072729,
theStack,2020-05-24 10:48:43,"Thanks to all for the quick conceptual reviews! Will rebase every once in a while to get an updated list of conflicts by Drahtbot. @practicalswift: Nice, that's for sure helpful commands for finding more replace-pointers-by-references candidates (always impressed by your mega-grep-sed-etc..-chains ;-)). I agree with MarcoFalke though that opening an issue would make sense here, also to potentially",https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-633212303,633212303,
theStack,2020-05-26 16:59:50,Rebased.,https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-634150801,634150801,
MarcoFalke,2020-05-30 16:32:51,"* #19044 (net processing: Add support for getcfilters by jnewbery)\n\nhas three acks already, so let's get that in before this one.",https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-636354539,636354539,
jnewbery,2020-05-30 23:51:27,"Review comment from #19044 (https://github.com/bitcoin/bitcoin/pull/19044#discussion_r432204149): since the parameters are no longer pointers, they shouldn't be called `pnode`, `pfrom` and `pto`. I think the variable name `peer` makes sense in all cases, but there's plenty of opportunity to bikeshed that.",https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-636399492,636399492,
MarcoFalke,2020-05-30 23:54:56,Doesn't `p` in `pfrom` already mean `peer`? :thinking: ,https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-636399719,636399719,
sipa,2020-05-31 00:12:56,"No, see https://github.com/bitcoin/bitcoin/blob/v0.3.17/coding.txt#L35.",https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-636401258,636401258,
MarcoFalke,2020-05-31 22:24:11,Will review after rebase,https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-636539290,636539290,
theStack,2020-06-02 11:20:28,"Rebased.\n\n\n> \n> \n> Review comment from #19044 ([#19044 (comment)](https://github.com/bitcoin/bitcoin/pull/19044#discussion_r432204149)): since the parameters are no longer pointers, they shouldn't be called `pnode`, `pfrom` and `pto`. I think the variable name `peer` makes sense in all cases, but there's plenty of opportunity to bikeshed that.\n\nThanks, good point! Before I start rena",https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-637472659,637472659,
MarcoFalke,2020-06-02 12:12:49,"ACK 8b3136bd307123a255b9166aa42a497a44bcce70 ðŸ”»\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK 8b3136bd307123a255b9166aa42a497a44bcce70 ðŸ”»\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgYLwv/c9bS0cnJ+GOBDdUcgtKm/Ppzag390mFQ/y1/buwrd+uPlTUMxr",https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-637501079,637501079,
MarcoFalke,2020-06-02 12:35:40,"I like that the only changes are `foo->` to `foo.`, which wouldn't compile if `foo` was a raw pointer. I also like that it keeps all symbol names as they were before. If they were changed, that would make review harder because generic names such as `peer` could be shadowed by similarly named symbols from outer or global scopes. And while `p` used to mean `pointer`, I don't see why it can be change",https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-637513048,637513048,
practicalswift,2020-06-02 12:37:06,"ACK 8b3136bd307123a255b9166aa42a497a44bcce70\n\nChecked that set of inserted/deleted characters appear to be limited to `*&>.-` (as expected when changing from `->` to `.`, and from `*` to `&`) and the string `""const""` (which was added for `GetFetchFlags` and `UpdatePreferredDownload`) by doing the following quick sanity check:\n\n```\n$ curl -s https://patch-diff.githubusercontent.com/raw/bi",https://github.com/bitcoin/bitcoin/pull/19053#issuecomment-637513794,637513794,
