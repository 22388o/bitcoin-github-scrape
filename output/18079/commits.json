[
  {
    "sha": "1cf77a2dc36c81b80a2f9af52ed99bd426061de8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxY2Y3N2EyZGMzNmM4MWI4MGEyZjlhZjUyZWQ5OWJkNDI2MDYxZGU4",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-10-15T21:15:22Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-02-05T22:55:25Z"
      },
      "message": "Don't calculate tx fees for PSBTs with invalid money values\n\nIn decodepsbt if an invalid amount is seen, don't calculate the fee\nbut still show the invalid value in the decode.\n\nIn analyze psbt, if an invalid amount is seen, set the next step to\nbe the creator as the creator needs to remake the transaction so that\nit is valid.\n\nGithub-Pull: #17156\nRebased-From: f1ef7f0aa46338f4cd8de79696027a1bf868f359",
      "tree": {
        "sha": "61d8a7b9af20ef40f88b058639535c8cfabae708",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/61d8a7b9af20ef40f88b058639535c8cfabae708"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1cf77a2dc36c81b80a2f9af52ed99bd426061de8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cf77a2dc36c81b80a2f9af52ed99bd426061de8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1cf77a2dc36c81b80a2f9af52ed99bd426061de8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cf77a2dc36c81b80a2f9af52ed99bd426061de8/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "178a8346871e17d621ac780a5c47be65508ce176",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/178a8346871e17d621ac780a5c47be65508ce176",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/178a8346871e17d621ac780a5c47be65508ce176"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 40,
      "deletions": 3
    },
    "files": [
      {
        "sha": "69fb1a28a93298e5b067a84a0df6a04c72a0b5dd",
        "filename": "src/node/psbt.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cf77a2dc36c81b80a2f9af52ed99bd426061de8/src/node/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cf77a2dc36c81b80a2f9af52ed99bd426061de8/src/node/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/psbt.cpp?ref=1cf77a2dc36c81b80a2f9af52ed99bd426061de8",
        "patch": "@@ -2,6 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <amount.h>\n #include <coins.h>\n #include <consensus/tx_verify.h>\n #include <node/psbt.h>\n@@ -31,6 +32,10 @@ PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n         // Check for a UTXO\n         CTxOut utxo;\n         if (psbtx.GetInputUTXO(utxo, i)) {\n+            if (!MoneyRange(utxo.nValue) || !MoneyRange(in_amt + utxo.nValue)) {\n+                result.SetInvalid(strprintf(\"PSBT is not valid. Input %u has invalid value\", i));\n+                return result;\n+            }\n             in_amt += utxo.nValue;\n             input_analysis.has_utxo = true;\n         } else {\n@@ -85,9 +90,16 @@ PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n         // Get the output amount\n         CAmount out_amt = std::accumulate(psbtx.tx->vout.begin(), psbtx.tx->vout.end(), CAmount(0),\n             [](CAmount a, const CTxOut& b) {\n+                if (!MoneyRange(a) || !MoneyRange(b.nValue) || !MoneyRange(a + b.nValue)) {\n+                    return CAmount(-1);\n+                }\n                 return a += b.nValue;\n             }\n         );\n+        if (!MoneyRange(out_amt)) {\n+            result.SetInvalid(strprintf(\"PSBT is not valid. Output amount invalid\"));\n+            return result;\n+        }\n \n         // Get the fee\n         CAmount fee = in_amt - out_amt;"
      },
      {
        "sha": "3b202d65380a4de3e5475718e7549825dfc6a31c",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 3,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cf77a2dc36c81b80a2f9af52ed99bd426061de8/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cf77a2dc36c81b80a2f9af52ed99bd426061de8/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=1cf77a2dc36c81b80a2f9af52ed99bd426061de8",
        "patch": "@@ -1074,7 +1074,12 @@ UniValue decodepsbt(const JSONRPCRequest& request)\n             UniValue out(UniValue::VOBJ);\n \n             out.pushKV(\"amount\", ValueFromAmount(txout.nValue));\n-            total_in += txout.nValue;\n+            if (MoneyRange(txout.nValue) && MoneyRange(total_in + txout.nValue)) {\n+                total_in += txout.nValue;\n+            } else {\n+                // Hack to just not show fee later\n+                have_all_utxos = false;\n+            }\n \n             UniValue o(UniValue::VOBJ);\n             ScriptToUniv(txout.scriptPubKey, o, true);\n@@ -1084,7 +1089,13 @@ UniValue decodepsbt(const JSONRPCRequest& request)\n             UniValue non_wit(UniValue::VOBJ);\n             TxToUniv(*input.non_witness_utxo, uint256(), non_wit, false);\n             in.pushKV(\"non_witness_utxo\", non_wit);\n-            total_in += input.non_witness_utxo->vout[psbtx.tx->vin[i].prevout.n].nValue;\n+            CAmount utxo_val = input.non_witness_utxo->vout[psbtx.tx->vin[i].prevout.n].nValue;\n+            if (MoneyRange(utxo_val) && MoneyRange(total_in + utxo_val)) {\n+                total_in += utxo_val;\n+            } else {\n+                // Hack to just not show fee later\n+                have_all_utxos = false;\n+            }\n         } else {\n             have_all_utxos = false;\n         }\n@@ -1200,7 +1211,12 @@ UniValue decodepsbt(const JSONRPCRequest& request)\n         outputs.push_back(out);\n \n         // Fee calculation\n-        output_value += psbtx.tx->vout[i].nValue;\n+        if (MoneyRange(psbtx.tx->vout[i].nValue) && MoneyRange(output_value + psbtx.tx->vout[i].nValue)) {\n+            output_value += psbtx.tx->vout[i].nValue;\n+        } else {\n+            // Hack to just not show fee later\n+            have_all_utxos = false;\n+        }\n     }\n     result.pushKV(\"outputs\", outputs);\n     if (have_all_utxos) {"
      },
      {
        "sha": "7c72c3e8728886993efbf29e14735249d07edb0b",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1cf77a2dc36c81b80a2f9af52ed99bd426061de8/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1cf77a2dc36c81b80a2f9af52ed99bd426061de8/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=1cf77a2dc36c81b80a2f9af52ed99bd426061de8",
        "patch": "@@ -421,5 +421,14 @@ def test_psbt_input_keys(psbt_input, keys):\n         assert_equal(analysis['next'], 'creator')\n         assert_equal(analysis['error'], 'PSBT is not valid. Input 0 spends unspendable output')\n \n+        self.log.info(\"PSBT with invalid values should have error message and Creator as next\")\n+        analysis = self.nodes[0].analyzepsbt('cHNidP8BAHECAAAAAfA00BFgAm6tp86RowwH6BMImQNL5zXUcTT97XoLGz0BAAAAAAD/////AgD5ApUAAAAAFgAUKNw0x8HRctAgmvoevm4u1SbN7XL87QKVAAAAABYAFPck4gF7iL4NL4wtfRAKgQbghiTUAAAAAAABAR8AgIFq49AHABYAFJUDtxf2PHo641HEOBOAIvFMNTr2AAAA')\n+        assert_equal(analysis['next'], 'creator')\n+        assert_equal(analysis['error'], 'PSBT is not valid. Input 0 has invalid value')\n+\n+        analysis = self.nodes[0].analyzepsbt('cHNidP8BAHECAAAAAfA00BFgAm6tp86RowwH6BMImQNL5zXUcTT97XoLGz0BAAAAAAD/////AgCAgWrj0AcAFgAUKNw0x8HRctAgmvoevm4u1SbN7XL87QKVAAAAABYAFPck4gF7iL4NL4wtfRAKgQbghiTUAAAAAAABAR8A8gUqAQAAABYAFJUDtxf2PHo641HEOBOAIvFMNTr2AAAA')\n+        assert_equal(analysis['next'], 'creator')\n+        assert_equal(analysis['error'], 'PSBT is not valid. Output amount invalid')\n+\n if __name__ == '__main__':\n     PSBTTest().main()"
      }
    ]
  },
  {
    "sha": "f5fb7fca969cd43318384bec46bb7687b1a529fd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNWZiN2ZjYTk2OWNkNDMzMTgzODRiZWM0NmJiNzY4N2IxYTUyOWZk",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-10-15T21:26:46Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-02-06T23:22:30Z"
      },
      "message": "psbt: check output index is within bounds before accessing\n\nGithub-Pull: #17156\nRebased-From: deaa6dd144f5650b385658a0c4f9a014aff8dde2",
      "tree": {
        "sha": "c33541bb633d97a5ab6e1c2383e6e9c377a4eefe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c33541bb633d97a5ab6e1c2383e6e9c377a4eefe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f5fb7fca969cd43318384bec46bb7687b1a529fd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5fb7fca969cd43318384bec46bb7687b1a529fd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f5fb7fca969cd43318384bec46bb7687b1a529fd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5fb7fca969cd43318384bec46bb7687b1a529fd/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1cf77a2dc36c81b80a2f9af52ed99bd426061de8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1cf77a2dc36c81b80a2f9af52ed99bd426061de8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1cf77a2dc36c81b80a2f9af52ed99bd426061de8"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 32,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ff7a38e40d56c97ce1bb9b4663b4475f54552133",
        "filename": "src/node/psbt.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5fb7fca969cd43318384bec46bb7687b1a529fd/src/node/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5fb7fca969cd43318384bec46bb7687b1a529fd/src/node/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/psbt.cpp?ref=f5fb7fca969cd43318384bec46bb7687b1a529fd",
        "patch": "@@ -39,6 +39,10 @@ PSBTAnalysis AnalyzePSBT(PartiallySignedTransaction psbtx)\n             in_amt += utxo.nValue;\n             input_analysis.has_utxo = true;\n         } else {\n+            if (input.non_witness_utxo && psbtx.tx->vin[i].prevout.n >= input.non_witness_utxo->vout.size()) {\n+                result.SetInvalid(strprintf(\"PSBT is not valid. Input %u specifies invalid prevout\", i));\n+                return result;\n+            }\n             input_analysis.has_utxo = false;\n             input_analysis.is_final = false;\n             input_analysis.next = PSBTRole::UPDATER;"
      },
      {
        "sha": "76783e968e61f323f5c221fd6a5fe300e40a89a4",
        "filename": "src/psbt.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5fb7fca969cd43318384bec46bb7687b1a529fd/src/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5fb7fca969cd43318384bec46bb7687b1a529fd/src/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/psbt.cpp?ref=f5fb7fca969cd43318384bec46bb7687b1a529fd",
        "patch": "@@ -67,8 +67,11 @@ bool PartiallySignedTransaction::AddOutput(const CTxOut& txout, const PSBTOutput\n bool PartiallySignedTransaction::GetInputUTXO(CTxOut& utxo, int input_index) const\n {\n     PSBTInput input = inputs[input_index];\n-    int prevout_index = tx->vin[input_index].prevout.n;\n+    uint32_t prevout_index = tx->vin[input_index].prevout.n;\n     if (input.non_witness_utxo) {\n+        if (prevout_index >= input.non_witness_utxo->vout.size()) {\n+            return false;\n+        }\n         utxo = input.non_witness_utxo->vout[prevout_index];\n     } else if (!input.witness_utxo.IsNull()) {\n         utxo = input.witness_utxo;\n@@ -256,6 +259,9 @@ bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction&\n     if (input.non_witness_utxo) {\n         // If we're taking our information from a non-witness UTXO, verify that it matches the prevout.\n         COutPoint prevout = tx.vin[index].prevout;\n+        if (prevout.n >= input.non_witness_utxo->vout.size()) {\n+            return false;\n+        }\n         if (input.non_witness_utxo->GetHash() != prevout.hash) {\n             return false;\n         }"
      },
      {
        "sha": "88740ef4a46f753c50fce6deec6f58535db0b173",
        "filename": "src/wallet/psbtwallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5fb7fca969cd43318384bec46bb7687b1a529fd/src/wallet/psbtwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5fb7fca969cd43318384bec46bb7687b1a529fd/src/wallet/psbtwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/psbtwallet.cpp?ref=f5fb7fca969cd43318384bec46bb7687b1a529fd",
        "patch": "@@ -39,6 +39,13 @@ TransactionError FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& ps\n             return TransactionError::SIGHASH_MISMATCH;\n         }\n \n+        // Backport of #17156 fix, without #17371 refactor\n+        if (input.witness_utxo.IsNull() && input.non_witness_utxo) {\n+            if (txin.prevout.n >= input.non_witness_utxo->vout.size()) {\n+                return TransactionError::MISSING_INPUTS;\n+            }\n+        }\n+\n         complete &= SignPSBTInput(HidingSigningProvider(pwallet, !sign, !bip32derivs), psbtx, i, sighash_type);\n     }\n "
      },
      {
        "sha": "7a489d4ff257fa061e4ce48e6c21730798fdf0bc",
        "filename": "src/wallet/test/psbt_wallet_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5fb7fca969cd43318384bec46bb7687b1a529fd/src/wallet/test/psbt_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5fb7fca969cd43318384bec46bb7687b1a529fd/src/wallet/test/psbt_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/psbt_wallet_tests.cpp?ref=f5fb7fca969cd43318384bec46bb7687b1a529fd",
        "patch": "@@ -67,6 +67,14 @@ BOOST_AUTO_TEST_CASE(psbt_updater_test)\n     ssTx << psbtx;\n     std::string final_hex = HexStr(ssTx.begin(), ssTx.end());\n     BOOST_CHECK_EQUAL(final_hex, \"70736274ff01009a020000000258e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff838d0427d0ec650a68aa46bb0b098aea4422c071b2ca78352a077959d07cea1d0100000000ffffffff0270aaf00800000000160014d85c2b71d0060b09c9886aeb815e50991dda124d00e1f5050000000016001400aea9a2e5f0f876a588df5546e8742d1d87008f00000000000100bb0200000001aad73931018bd25f84ae400b68848be09db706eac2ac18298babee71ab656f8b0000000048473044022058f6fc7c6a33e1b31548d481c826c015bd30135aad42cd67790dab66d2ad243b02204a1ced2604c6735b6393e5b41691dd78b00f0c5942fb9f751856faa938157dba01feffffff0280f0fa020000000017a9140fb9463421696b82c833af241c78c17ddbde493487d0f20a270100000017a91429ca74f8a08f81999428185c97b5d852e4063f6187650000000104475221029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f2102dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d752ae2206029583bf39ae0a609747ad199addd634fa6108559d6c5cd39b4c2183f1ab96e07f10d90c6a4f000000800000008000000080220602dab61ff49a14db6a7d02b0cd1fbb78fc4b18312b5b4e54dae4dba2fbfef536d710d90c6a4f0000008000000080010000800001012000c2eb0b0000000017a914b7f5faf40e3d40a5a459b1db3535f2b72fa921e88701042200208c2353173743b595dfb4a07b72ba8e42e3797da74e87fe7d9d7497e3b2028903010547522103089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc21023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7352ae2206023add904f3d6dcf59ddb906b0dee23529b7ffb9ed50e5e86151926860221f0e7310d90c6a4f000000800000008003000080220603089dc10c7ac6db54f91329af617333db388cead0c231f723379d1b99030b02dc10d90c6a4f00000080000000800200008000220203a9a4c37f5996d3aa25dbac6b570af0650394492942460b354753ed9eeca5877110d90c6a4f000000800000008004000080002202027f6399757d2eff55a136ad02c684b1838b6556e5f1b6b34282a94b6b5005109610d90c6a4f00000080000000800500008000\");\n+\n+    // Mutate the transaction so that one of the inputs is invalid\n+    psbtx.tx->vin[0].prevout.n = 2;\n+\n+    // Try to sign the mutated input\n+    SignatureData sigdata;\n+    psbtx.inputs[0].FillSignatureData(sigdata);\n+    BOOST_CHECK(!SignPSBTInput(m_wallet, psbtx, 0, SIGHASH_ALL));\n }\n \n BOOST_AUTO_TEST_CASE(parse_hd_keypath)"
      },
      {
        "sha": "2f214702bc8fd8d7296b2983a8be669a50f5d877",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5fb7fca969cd43318384bec46bb7687b1a529fd/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5fb7fca969cd43318384bec46bb7687b1a529fd/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=f5fb7fca969cd43318384bec46bb7687b1a529fd",
        "patch": "@@ -430,5 +430,11 @@ def test_psbt_input_keys(psbt_input, keys):\n         assert_equal(analysis['next'], 'creator')\n         assert_equal(analysis['error'], 'PSBT is not valid. Output amount invalid')\n \n+        analysis = self.nodes[0].analyzepsbt('cHNidP8BAJoCAAAAAkvEW8NnDtdNtDpsmze+Ht2LH35IJcKv00jKAlUs21RrAwAAAAD/////S8Rbw2cO1020OmybN74e3Ysffkglwq/TSMoCVSzbVGsBAAAAAP7///8CwLYClQAAAAAWABSNJKzjaUb3uOxixsvh1GGE3fW7zQD5ApUAAAAAFgAUKNw0x8HRctAgmvoevm4u1SbN7XIAAAAAAAEAnQIAAAACczMa321tVHuN4GKWKRncycI22aX3uXgwSFUKM2orjRsBAAAAAP7///9zMxrfbW1Ue43gYpYpGdzJwjbZpfe5eDBIVQozaiuNGwAAAAAA/v///wIA+QKVAAAAABl2qRT9zXUVA8Ls5iVqynLHe5/vSe1XyYisQM0ClQAAAAAWABRmWQUcjSjghQ8/uH4Bn/zkakwLtAAAAAAAAQEfQM0ClQAAAAAWABRmWQUcjSjghQ8/uH4Bn/zkakwLtAAAAA==')\n+        assert_equal(analysis['next'], 'creator')\n+        assert_equal(analysis['error'], 'PSBT is not valid. Input 0 specifies invalid prevout')\n+\n+        assert_raises_rpc_error(-25, 'Missing inputs', self.nodes[0].walletprocesspsbt, 'cHNidP8BAJoCAAAAAkvEW8NnDtdNtDpsmze+Ht2LH35IJcKv00jKAlUs21RrAwAAAAD/////S8Rbw2cO1020OmybN74e3Ysffkglwq/TSMoCVSzbVGsBAAAAAP7///8CwLYClQAAAAAWABSNJKzjaUb3uOxixsvh1GGE3fW7zQD5ApUAAAAAFgAUKNw0x8HRctAgmvoevm4u1SbN7XIAAAAAAAEAnQIAAAACczMa321tVHuN4GKWKRncycI22aX3uXgwSFUKM2orjRsBAAAAAP7///9zMxrfbW1Ue43gYpYpGdzJwjbZpfe5eDBIVQozaiuNGwAAAAAA/v///wIA+QKVAAAAABl2qRT9zXUVA8Ls5iVqynLHe5/vSe1XyYisQM0ClQAAAAAWABRmWQUcjSjghQ8/uH4Bn/zkakwLtAAAAAAAAQEfQM0ClQAAAAAWABRmWQUcjSjghQ8/uH4Bn/zkakwLtAAAAA==')\n+\n if __name__ == '__main__':\n     PSBTTest().main()"
      }
    ]
  }
]