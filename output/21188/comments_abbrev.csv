MarcoFalke,2021-02-15 12:44:34,Fixes https://github.com/bitcoin/bitcoin/pull/20942#discussion_r576105248,https://github.com/bitcoin/bitcoin/pull/21188#issuecomment-779200326,779200326,
MarcoFalke,2021-02-15 12:45:22,Too bad the compiler can't error on those by itself,https://github.com/bitcoin/bitcoin/pull/21188#issuecomment-779200740,779200740,
MarcoFalke,2021-02-15 15:19:01,"I don't think so. This is all my hacky grep could find.\n\n```\n$ git grep --extended-regexp --ignore-case  ' [a-z0-9]+::[a-z0-9]+\([^()]*\).*LOCKS_'\nsrc/net_processing.cpp:bool PeerManagerImpl::MarkBlockAsReceived(const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\nsrc/net_processing.cpp:bool PeerManagerImpl::MarkBlockAsInFlight(NodeId nodeid, const uint256& hash, const CBlockIndex* pin",https://github.com/bitcoin/bitcoin/pull/21188#issuecomment-779288047,779288047,
amitiuttarwar,2021-02-16 00:22:17,"I don't understand the issue. How can I reproduce it? \n\nI interpreted the issue to be that we would _not_ get a compiler warning under the following circumstance: \n- header declaration of function FooBar has annotation EXCLUSIVE_LOCKS_REQUIRED(lock1, lock2)\n- FooBar definition has annotation EXCLUSIVE_LOCKS_REQUIRED(lock1)\n- call site acquires lock1 then calls FooBar\n- issue: we do not",https://github.com/bitcoin/bitcoin/pull/21188#issuecomment-779506757,779506757,
MarcoFalke,2021-02-16 07:27:00,"Ah good catch. Looks like it is not shadowing. Though, I still think the patch is correct. You can test by adding `cs_other` to the `TipMayBeStale` implementation. Then move a function that calls `TipMayBeStale` to before its implementation. Compilation won't print any warning. The diff I used:\n\n\n```diff\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\nindex c782498e14..bb538",https://github.com/bitcoin/bitcoin/pull/21188#issuecomment-779643430,779643430,
MarcoFalke,2021-02-16 07:32:14,(Clarified OP and title a bit),https://github.com/bitcoin/bitcoin/pull/21188#issuecomment-779645660,779645660,
amitiuttarwar,2021-02-16 19:29:03,"ok, I understand now- \nif the declaration annotates `EXCLUSIVE_LOCKS_REQUIRED(lock1)`, then the caller invokes, then the implementation annotates `EXCLUSIVE_LOCKS_REQUIRED(lock1, lock2)`, we won't get the compiler warnings about lock2. I was able to see this with your diff, @MarcoFalke. thanks!\n\nACK `fafddfadda`, confirmed that the annotations removed were all redundant. confirmed the claim ",https://github.com/bitcoin/bitcoin/pull/21188#issuecomment-780066283,780066283,
