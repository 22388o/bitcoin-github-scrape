[
  {
    "sha": "fafddfadda0c77876ba764c5b65ee5fa8e53a5e0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWZkZGZhZGRhMGM3Nzg3NmJhNzY0YzViNjVlZTVmYThlNTNhNWUw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-02-15T11:51:46Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-02-15T11:52:04Z"
      },
      "message": "scripted-diff: Remove shadowing lock annotations\n\nCan be reviewed with --word-diff-regex=.\n\n-BEGIN VERIFY SCRIPT-\nsed -i --regexp-extended 's/(PeerManagerImpl::.*\\)).*LOCKS_.*\\)/\\1/g' ./src/net_processing.cpp\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "0f96420cc1ee0babde6424716161719867b6bd0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f96420cc1ee0babde6424716161719867b6bd0a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fafddfadda0c77876ba764c5b65ee5fa8e53a5e0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhSAQwAp64+NIflwegQHOV8niN7naAkAWdMjNrBfbFVEtrl/L6sT0PZ8m2NEv4F\nBZQdpJ2h0GyC3wv2EZhcoXqmMisWF5aseZ6CiiAtYDqZZT80zVq7Cr7tjs2QR2uc\nHt0XsNZC7jVq+NzuNvh5Q44v/l6KIdptfbyZFzCvx2t/rs80gJ+0hOMb7USmNz38\nVQ8tkmEjbYclN35W34J1uPgyaoDXrXbjBJy2MVqMrvv/E+07uvk1zhXT7frdVtw6\nyLmx/ZkVtLzmX9dpj9qIUWLsGxt195vaK5DhiQz0q5jTD0IfLXc+TRdt7V7T7Tpt\nbtgOW3V1KQPxXZuDqfBWqxgB1zBD4enAUueZ2aMrC/CjiynT+paWMlxuCzCLcwXq\n/cw5Ojo2hQCwmaM60THSE7zcgOrYicrGxaPMQ/hK4A2A2CtilD5OF4gnTsS7YlI6\nLGTX2dvqpQ8JHArrijp63DmMULD5zIHC2d4KoHqFeEracXX99JhSG8TG94qr153I\n/ACrJeCN\n=EF3f\n-----END PGP SIGNATURE-----",
        "payload": "tree 0f96420cc1ee0babde6424716161719867b6bd0a\nparent 8d6994f93d3297cd8a84e73e8696bf21ff7da903\nauthor MarcoFalke <falke.marco@gmail.com> 1613389906 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1613389924 +0100\n\nscripted-diff: Remove shadowing lock annotations\n\nCan be reviewed with --word-diff-regex=.\n\n-BEGIN VERIFY SCRIPT-\nsed -i --regexp-extended 's/(PeerManagerImpl::.*\\)).*LOCKS_.*\\)/\\1/g' ./src/net_processing.cpp\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fafddfadda0c77876ba764c5b65ee5fa8e53a5e0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fafddfadda0c77876ba764c5b65ee5fa8e53a5e0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fafddfadda0c77876ba764c5b65ee5fa8e53a5e0/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8d6994f93d3297cd8a84e73e8696bf21ff7da903",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d6994f93d3297cd8a84e73e8696bf21ff7da903",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8d6994f93d3297cd8a84e73e8696bf21ff7da903"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "5b941c6182209357381516cab45e256f78872ae6",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafddfadda0c77876ba764c5b65ee5fa8e53a5e0/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafddfadda0c77876ba764c5b65ee5fa8e53a5e0/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=fafddfadda0c77876ba764c5b65ee5fa8e53a5e0",
        "patch": "@@ -646,7 +646,7 @@ static void UpdatePreferredDownload(const CNode& node, CNodeState* state) EXCLUS\n     nPreferredDownload += state->fPreferredDownload;\n }\n \n-bool PeerManagerImpl::MarkBlockAsReceived(const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+bool PeerManagerImpl::MarkBlockAsReceived(const uint256& hash)\n {\n     std::map<uint256, std::pair<NodeId, std::list<QueuedBlock>::iterator> >::iterator itInFlight = mapBlocksInFlight.find(hash);\n     if (itInFlight != mapBlocksInFlight.end()) {\n@@ -670,7 +670,7 @@ bool PeerManagerImpl::MarkBlockAsReceived(const uint256& hash) EXCLUSIVE_LOCKS_R\n     return false;\n }\n \n-bool PeerManagerImpl::MarkBlockAsInFlight(NodeId nodeid, const uint256& hash, const CBlockIndex* pindex, std::list<QueuedBlock>::iterator** pit) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+bool PeerManagerImpl::MarkBlockAsInFlight(NodeId nodeid, const uint256& hash, const CBlockIndex* pindex, std::list<QueuedBlock>::iterator** pit)\n {\n     CNodeState *state = State(nodeid);\n     assert(state != nullptr);\n@@ -739,7 +739,7 @@ static void UpdateBlockAvailability(NodeId nodeid, const uint256 &hash) EXCLUSIV\n     }\n }\n \n-void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n {\n     AssertLockHeld(cs_main);\n     CNodeState* nodestate = State(nodeid);\n@@ -778,7 +778,7 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid) EXCLUS\n     }\n }\n \n-bool PeerManagerImpl::TipMayBeStale() EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+bool PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n@@ -802,7 +802,7 @@ static bool PeerHasHeader(CNodeState *state, const CBlockIndex *pindex) EXCLUSIV\n     return false;\n }\n \n-void PeerManagerImpl::FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, NodeId& nodeStaller) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+void PeerManagerImpl::FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, NodeId& nodeStaller)\n {\n     if (count == 0)\n         return;\n@@ -1591,7 +1591,7 @@ void PeerManagerImpl::BlockChecked(const CBlock& block, const BlockValidationSta\n //\n \n \n-bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid)\n {\n     assert(recentRejects);\n     if (::ChainActive().Tip()->GetBlockHash() != hashRecentRejectsChainTip) {\n@@ -1853,7 +1853,7 @@ void static ProcessGetBlockData(CNode& pfrom, Peer& peer, const CChainParams& ch\n     }\n }\n \n-CTransactionRef PeerManagerImpl::FindTxForGetData(const CNode& peer, const GenTxid& gtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds now) LOCKS_EXCLUDED(cs_main)\n+CTransactionRef PeerManagerImpl::FindTxForGetData(const CNode& peer, const GenTxid& gtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds now)\n {\n     auto txinfo = m_mempool.info(gtxid);\n     if (txinfo.tx) {\n@@ -1880,7 +1880,7 @@ CTransactionRef PeerManagerImpl::FindTxForGetData(const CNode& peer, const GenTx\n     return {};\n }\n \n-void PeerManagerImpl::ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic<bool>& interruptMsgProc) EXCLUSIVE_LOCKS_REQUIRED(!cs_main, peer.m_getdata_requests_mutex)\n+void PeerManagerImpl::ProcessGetData(CNode& pfrom, Peer& peer, const std::atomic<bool>& interruptMsgProc)\n {\n     AssertLockNotHeld(cs_main);\n "
      }
    ]
  }
]