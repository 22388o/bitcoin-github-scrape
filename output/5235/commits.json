[
  {
    "sha": "e0077de5de538dd51b5dbd04e05c998d40b20b30",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMDA3N2RlNWRlNTM4ZGQ1MWI1ZGJkMDRlMDVjOTk4ZDQwYjIwYjMw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-14T22:03:52Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T03:08:27Z"
      },
      "message": "build: make a distinction between static app ldflags and static lib ldflags\n\nFor windows builds, exe's are always static, but libs should still conform to\n--enabled-shared and --enable-static.",
      "tree": {
        "sha": "f533576846b475f5104ab0ee6d00807021c7b614",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f533576846b475f5104ab0ee6d00807021c7b614"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0077de5de538dd51b5dbd04e05c998d40b20b30",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0077de5de538dd51b5dbd04e05c998d40b20b30",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e0077de5de538dd51b5dbd04e05c998d40b20b30",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0077de5de538dd51b5dbd04e05c998d40b20b30/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b5d1b1092998bc95313856d535c632ea5a8f9104",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5d1b1092998bc95313856d535c632ea5a8f9104",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b5d1b1092998bc95313856d535c632ea5a8f9104"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 8,
      "deletions": 11
    },
    "files": [
      {
        "sha": "765b39892510bdbe527b5427be30d6bc36bce36a",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0077de5de538dd51b5dbd04e05c998d40b20b30/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0077de5de538dd51b5dbd04e05c998d40b20b30/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=e0077de5de538dd51b5dbd04e05c998d40b20b30",
        "patch": "@@ -201,12 +201,9 @@ case $host in\n      AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(lib missing))\n      AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(lib missing))\n \n-     AX_CHECK_LINK_FLAG([[-static-libgcc]],[LDFLAGS=\"$LDFLAGS -static-libgcc\"])\n-     AX_CHECK_LINK_FLAG([[-static-libstdc++]],[LDFLAGS=\"$LDFLAGS -static-libstdc++\"])\n-\n      # -static is interpreted by libtool, where it has a different meaning.\n      # In libtool-speak, it's -all-static.\n-     AX_CHECK_LINK_FLAG([[-static]],[LDFLAGS=\"$LDFLAGS -static\"; LIBTOOL_LDFLAGS=\"$LIBTOOL_LDFLAGS -all-static\"])\n+     AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"])\n \n      AC_PATH_PROG([MAKENSIS], [makensis], none)\n      if test x$MAKENSIS = xnone; then\n@@ -801,7 +798,7 @@ AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n \n AC_SUBST(RELDFLAGS)\n-AC_SUBST(LIBTOOL_LDFLAGS)\n+AC_SUBST(LIBTOOL_APP_LDFLAGS)\n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)\n AC_SUBST(BOOST_LIBS)"
      },
      {
        "sha": "83dcaeed7998e5408158744db6f797e31b8f2184",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0077de5de538dd51b5dbd04e05c998d40b20b30/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0077de5de538dd51b5dbd04e05c998d40b20b30/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=e0077de5de538dd51b5dbd04e05c998d40b20b30",
        "patch": "@@ -295,7 +295,7 @@ endif\n \n bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n bitcoind_CPPFLAGS = $(BITCOIN_INCLUDES)\n-bitcoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS)\n+bitcoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n # bitcoin-cli binary #\n bitcoin_cli_LDADD = \\\n@@ -324,12 +324,12 @@ bitcoin_tx_LDADD = \\\n bitcoin_tx_SOURCES = bitcoin-tx.cpp\n bitcoin_tx_CPPFLAGS = $(BITCOIN_INCLUDES)\n #\n-bitcoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS)\n+bitcoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n bitcoin_cli_SOURCES += bitcoin-cli-res.rc\n endif\n-bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS)\n+bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a *.gcda *.gcno\n "
      },
      {
        "sha": "898337ad6fe37f1fda4e9acd00a238f3e7bac9dd",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0077de5de538dd51b5dbd04e05c998d40b20b30/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0077de5de538dd51b5dbd04e05c998d40b20b30/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=e0077de5de538dd51b5dbd04e05c998d40b20b30",
        "patch": "@@ -361,7 +361,7 @@ qt_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n endif\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1)\n-qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS)\n+qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n qt_bitcoin_qt_LIBTOOLFLAGS = --tag CXX\n \n #locale/foo.ts -> locale/foo.qm"
      },
      {
        "sha": "c5392cf307a5fe035ff34478ebb0f1769eecfc50",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0077de5de538dd51b5dbd04e05c998d40b20b30/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0077de5de538dd51b5dbd04e05c998d40b20b30/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=e0077de5de538dd51b5dbd04e05c998d40b20b30",
        "patch": "@@ -33,7 +33,7 @@ endif\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UNIVALUE) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1)\n-qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS)\n+qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno\n "
      },
      {
        "sha": "c3cd7db1434cba00c7ebfc322327fade87d36c94",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0077de5de538dd51b5dbd04e05c998d40b20b30/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0077de5de538dd51b5dbd04e05c998d40b20b30/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=e0077de5de538dd51b5dbd04e05c998d40b20b30",
        "patch": "@@ -86,7 +86,7 @@ test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n endif\n \n test_test_bitcoin_LDADD += $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n-test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS)\n+test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n "
      }
    ]
  },
  {
    "sha": "811a765bef5701b167ce51a047745140df9bd04f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MTFhNzY1YmVmNTcwMWIxNjdjZTUxYTA0Nzc0NTE0MGRmOWJkMDRm",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-14T22:24:25Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T03:08:27Z"
      },
      "message": "build: mingw needs libssp for hardening with dlls",
      "tree": {
        "sha": "5af32f899e291f54cfa6483ce2a7597775bf8722",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5af32f899e291f54cfa6483ce2a7597775bf8722"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/811a765bef5701b167ce51a047745140df9bd04f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/811a765bef5701b167ce51a047745140df9bd04f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/811a765bef5701b167ce51a047745140df9bd04f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/811a765bef5701b167ce51a047745140df9bd04f/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e0077de5de538dd51b5dbd04e05c998d40b20b30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0077de5de538dd51b5dbd04e05c998d40b20b30",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e0077de5de538dd51b5dbd04e05c998d40b20b30"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ef759a44b4121a6ff5f2ae4cc657b8f3a344de01",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/811a765bef5701b167ce51a047745140df9bd04f/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/811a765bef5701b167ce51a047745140df9bd04f/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=811a765bef5701b167ce51a047745140df9bd04f",
        "patch": "@@ -386,6 +386,12 @@ if test x$use_hardening != xno; then\n     AX_CHECK_LINK_FLAG([[-pie]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"])\n   fi\n \n+  case $host in\n+    *mingw*)\n+       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(lib missing))\n+    ;;\n+  esac\n+\n   CXXFLAGS=\"$CXXFLAGS $HARDENED_CXXFLAGS\"\n   CPPFLAGS=\"$CPPFLAGS $HARDENED_CPPFLAGS\"\n   LDFLAGS=\"$LDFLAGS $HARDENED_LDFLAGS\""
      }
    ]
  },
  {
    "sha": "f36a40f7fd948781656e730338a1ae647e7c4928",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMzZhNDBmN2ZkOTQ4NzgxNjU2ZTczMDMzOGExYWU2NDdlN2M0OTI4",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-14T21:31:16Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T03:08:27Z"
      },
      "message": "build: check visibility attributes",
      "tree": {
        "sha": "a292ea5a4f6d21e4ce17b6dc1db2531cb91b5403",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a292ea5a4f6d21e4ce17b6dc1db2531cb91b5403"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f36a40f7fd948781656e730338a1ae647e7c4928",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f36a40f7fd948781656e730338a1ae647e7c4928",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f36a40f7fd948781656e730338a1ae647e7c4928",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f36a40f7fd948781656e730338a1ae647e7c4928/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "811a765bef5701b167ce51a047745140df9bd04f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/811a765bef5701b167ce51a047745140df9bd04f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/811a765bef5701b167ce51a047745140df9bd04f"
      }
    ],
    "stats": {
      "total": 223,
      "additions": 223,
      "deletions": 0
    },
    "files": [
      {
        "sha": "de11303e7b61f1be8203aad575cd828965849565",
        "filename": "build-aux/m4/ax_gcc_func_attribute.m4",
        "status": "added",
        "additions": 219,
        "deletions": 0,
        "changes": 219,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f36a40f7fd948781656e730338a1ae647e7c4928/build-aux/m4/ax_gcc_func_attribute.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f36a40f7fd948781656e730338a1ae647e7c4928/build-aux/m4/ax_gcc_func_attribute.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_gcc_func_attribute.m4?ref=f36a40f7fd948781656e730338a1ae647e7c4928",
        "patch": "@@ -0,0 +1,219 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_gcc_func_attribute.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_GCC_FUNC_ATTRIBUTE(ATTRIBUTE)\n+#\n+# DESCRIPTION\n+#\n+#   This macro checks if the compiler supports one of GCC's function\n+#   attributes; many other compilers also provide function attributes with\n+#   the same syntax. Compiler warnings are used to detect supported\n+#   attributes as unsupported ones are ignored by default so quieting\n+#   warnings when using this macro will yield false positives.\n+#\n+#   The ATTRIBUTE parameter holds the name of the attribute to be checked.\n+#\n+#   If ATTRIBUTE is supported define HAVE_FUNC_ATTRIBUTE_<ATTRIBUTE>.\n+#\n+#   The macro caches its result in the ax_cv_have_func_attribute_<attribute>\n+#   variable.\n+#\n+#   The macro currently supports the following function attributes:\n+#\n+#    alias\n+#    aligned\n+#    alloc_size\n+#    always_inline\n+#    artificial\n+#    cold\n+#    const\n+#    constructor\n+#    deprecated\n+#    destructor\n+#    dllexport\n+#    dllimport\n+#    error\n+#    externally_visible\n+#    flatten\n+#    format\n+#    format_arg\n+#    gnu_inline\n+#    hot\n+#    ifunc\n+#    leaf\n+#    malloc\n+#    noclone\n+#    noinline\n+#    nonnull\n+#    noreturn\n+#    nothrow\n+#    optimize\n+#    pure\n+#    unused\n+#    used\n+#    visibility\n+#    warning\n+#    warn_unused_result\n+#    weak\n+#    weakref\n+#\n+#   Unsuppored function attributes will be tested with a prototype returning\n+#   an int and not accepting any arguments and the result of the check might\n+#   be wrong or meaningless so use with care.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2013 Gabriele Svelto <gabriele.svelto@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved.  This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n+    AS_VAR_PUSHDEF([ac_var], [ax_cv_have_func_attribute_$1])\n+\n+    AC_CACHE_CHECK([for __attribute__(($1))], [ac_var], [\n+        AC_LINK_IFELSE([AC_LANG_PROGRAM([\n+            m4_case([$1],\n+                [alias], [\n+                    int foo( void ) { return 0; }\n+                    int bar( void ) __attribute__(($1(\"foo\")));\n+                ],\n+                [aligned], [\n+                    int foo( void ) __attribute__(($1(32)));\n+                ],\n+                [alloc_size], [\n+                    void *foo(int a) __attribute__(($1(1)));\n+                ],\n+                [always_inline], [\n+                    inline __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [artificial], [\n+                    inline __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [cold], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [const], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [constructor], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [deprecated], [\n+                    int foo( void ) __attribute__(($1(\"\")));\n+                ],\n+                [destructor], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [dllexport], [\n+                    __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [dllimport], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [error], [\n+                    int foo( void ) __attribute__(($1(\"\")));\n+                ],\n+                [externally_visible], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [flatten], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [format], [\n+                    int foo(const char *p, ...) __attribute__(($1(printf, 1, 2)));\n+                ],\n+                [format_arg], [\n+                    char *foo(const char *p) __attribute__(($1(1)));\n+                ],\n+                [gnu_inline], [\n+                    inline __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [hot], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [ifunc], [\n+                    int my_foo( void ) { return 0; }\n+                    static int (*resolve_foo(void))(void) { return my_foo; }\n+                    int foo( void ) __attribute__(($1(\"resolve_foo\")));\n+                ],\n+                [leaf], [\n+                    __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [malloc], [\n+                    void *foo( void ) __attribute__(($1));\n+                ],\n+                [noclone], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [noinline], [\n+                    __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [nonnull], [\n+                    int foo(char *p) __attribute__(($1(1)));\n+                ],\n+                [noreturn], [\n+                    void foo( void ) __attribute__(($1));\n+                ],\n+                [nothrow], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [optimize], [\n+                    __attribute__(($1(3))) int foo( void ) { return 0; }\n+                ],\n+                [pure], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [unused], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [used], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [visibility], [\n+                    int foo_def( void ) __attribute__(($1(\"default\")));\n+                    int foo_hid( void ) __attribute__(($1(\"hidden\")));\n+                    int foo_int( void ) __attribute__(($1(\"internal\")));\n+                    int foo_pro( void ) __attribute__(($1(\"protected\")));\n+                ],\n+                [warning], [\n+                    int foo( void ) __attribute__(($1(\"\")));\n+                ],\n+                [warn_unused_result], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [weak], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [weakref], [\n+                    static int foo( void ) { return 0; }\n+                    static int bar( void ) __attribute__(($1(\"foo\")));\n+                ],\n+                [\n+                 m4_warn([syntax], [Unsupported attribute $1, the test may fail])\n+                 int foo( void ) __attribute__(($1));\n+                ]\n+            )], [])\n+            ],\n+            dnl GCC doesn't exit with an error if an unknown attribute is\n+            dnl provided but only outputs a warning, so accept the attribute\n+            dnl only if no warning were issued.\n+            [AS_IF([test -s conftest.err],\n+                [AS_VAR_SET([ac_var], [no])],\n+                [AS_VAR_SET([ac_var], [yes])])],\n+            [AS_VAR_SET([ac_var], [no])])\n+    ])\n+\n+    AS_IF([test yes = AS_VAR_GET([ac_var])],\n+        [AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_FUNC_ATTRIBUTE_$1), 1,\n+            [Define to 1 if the system has the `$1' function attribute])], [])\n+\n+    AS_VAR_POPDEF([ac_var])\n+])"
      },
      {
        "sha": "e2efdf203b6331199536b4fcfc56bcb38e11e9d0",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f36a40f7fd948781656e730338a1ae647e7c4928/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f36a40f7fd948781656e730338a1ae647e7c4928/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=f36a40f7fd948781656e730338a1ae647e7c4928",
        "patch": "@@ -346,6 +346,10 @@ fi\n \n AX_CHECK_LINK_FLAG([[-Wl,--large-address-aware]], [LDFLAGS=\"$LDFLAGS -Wl,--large-address-aware\"])\n \n+AX_GCC_FUNC_ATTRIBUTE([visibility])\n+AX_GCC_FUNC_ATTRIBUTE([dllexport])\n+AX_GCC_FUNC_ATTRIBUTE([dllimport])\n+\n if test x$use_glibc_compat != xno; then\n \n   #__fdelt_chk's params and return type have changed from long unsigned int to long int."
      }
    ]
  },
  {
    "sha": "ee64c53c1fdcadf00138b7e6fdf44a1c433db9f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZTY0YzUzYzFmZGNhZGYwMDEzOGI3ZTZmZGY0NGExYzQzM2RiOWY4",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-07T03:18:08Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T03:08:27Z"
      },
      "message": "build: remove internal/protected build attribute checks\n\nThey're not necessary, and not always supported. We only need to know about\nhidden and default.",
      "tree": {
        "sha": "1958ef329d644d52fe719f0fce2707ef62cb00a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1958ef329d644d52fe719f0fce2707ef62cb00a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee64c53c1fdcadf00138b7e6fdf44a1c433db9f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee64c53c1fdcadf00138b7e6fdf44a1c433db9f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ee64c53c1fdcadf00138b7e6fdf44a1c433db9f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee64c53c1fdcadf00138b7e6fdf44a1c433db9f8/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f36a40f7fd948781656e730338a1ae647e7c4928",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f36a40f7fd948781656e730338a1ae647e7c4928",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f36a40f7fd948781656e730338a1ae647e7c4928"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "275ca63a2c217cb584e26824e45b96b3d575e2f8",
        "filename": "build-aux/m4/ax_gcc_func_attribute.m4",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee64c53c1fdcadf00138b7e6fdf44a1c433db9f8/build-aux/m4/ax_gcc_func_attribute.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee64c53c1fdcadf00138b7e6fdf44a1c433db9f8/build-aux/m4/ax_gcc_func_attribute.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_gcc_func_attribute.m4?ref=ee64c53c1fdcadf00138b7e6fdf44a1c433db9f8",
        "patch": "@@ -180,8 +180,6 @@ AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n                 [visibility], [\n                     int foo_def( void ) __attribute__(($1(\"default\")));\n                     int foo_hid( void ) __attribute__(($1(\"hidden\")));\n-                    int foo_int( void ) __attribute__(($1(\"internal\")));\n-                    int foo_pro( void ) __attribute__(($1(\"protected\")));\n                 ],\n                 [warning], [\n                     int foo( void ) __attribute__(($1(\"\")));"
      }
    ]
  },
  {
    "sha": "2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyY2Y1ZjE2YzI1YWM4MWVhYzNhMDljNGYxNWRhZDlkMjE1NGMwM2Q0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-14T22:22:55Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T03:31:10Z"
      },
      "message": "build: add libbitcoinconsensus files and hook up the lib build\n\nCredit BlueMatt for libbitcoinsonsensus.h/cpp",
      "tree": {
        "sha": "f4b91114a5f63aa82d88da4adec53ead30b40b08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f4b91114a5f63aa82d88da4adec53ead30b40b08"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ee64c53c1fdcadf00138b7e6fdf44a1c433db9f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee64c53c1fdcadf00138b7e6fdf44a1c433db9f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ee64c53c1fdcadf00138b7e6fdf44a1c433db9f8"
      }
    ],
    "stats": {
      "total": 196,
      "additions": 195,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7343e722d5c4fd8e8922fd48658805d32368a9b8",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4",
        "patch": "@@ -45,6 +45,7 @@ src/qt/test/moc*.cpp\n \n .deps\n .dirstamp\n+.libs\n .*.swp\n *.*~*\n *.bak\n@@ -66,6 +67,10 @@ src/qt/test/moc*.cpp\n *.json.h\n *.raw.h\n \n+#libtool object files\n+*.lo\n+*.la\n+\n # Compilation and Qt preprocessor part\n *.qm\n Makefile"
      },
      {
        "sha": "63f2375c86d84c89211d96cf486c3a628e92afda",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4",
        "patch": "@@ -49,6 +49,8 @@ BITCOIN_INCLUDES += $(BDB_CPPFLAGS)\n noinst_LIBRARIES += libbitcoin_wallet.a\n endif\n \n+lib_LTLIBRARIES = libbitcoinconsensus.la\n+\n bin_PROGRAMS =\n TESTS =\n \n@@ -331,6 +333,35 @@ bitcoin_cli_SOURCES += bitcoin-cli-res.rc\n endif\n bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n+if BUILD_BITCOIN_LIBS\n+include_HEADERS = script/bitcoinconsensus.h\n+libbitcoinconsensus_la_SOURCES = \\\n+  core/transaction.cpp \\\n+  crypto/sha1.cpp \\\n+  crypto/sha2.cpp \\\n+  crypto/ripemd160.cpp \\\n+  eccryptoverify.cpp \\\n+  ecwrapper.cpp \\\n+  hash.cpp \\\n+  pubkey.cpp \\\n+  script/script.cpp \\\n+  script/interpreter.cpp \\\n+  script/bitcoinconsensus.cpp \\\n+  uint256.cpp \\\n+  utilstrencodings.cpp\n+\n+if GLIBC_BACK_COMPAT\n+  libbitcoinconsensus_la_SOURCES += compat/glibc_compat.cpp\n+  libbitcoinconsensus_la_SOURCES += compat/glibcxx_compat.cpp\n+endif\n+\n+libbitcoinconsensus_la_LDFLAGS = -no-undefined $(RELDFLAGS)\n+libbitcoinconsensus_la_LIBADD = $(CRYPTO_LIBS)\n+libbitcoinconsensus_la_CPPFLAGS = $(CRYPTO_CFLAGS) -I$(builddir)/obj -DBUILD_BITCOIN_INTERNAL\n+if USE_LIBSECP256K1\n+libbitcoinconsensus_la_LIBADD += secp256k1/libsecp256k1.la\n+endif\n+\n CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a *.gcda *.gcno\n \n DISTCLEANFILES = obj/build.h"
      },
      {
        "sha": "f8711f03876ec9b8a5571b5bd7abb5ddd2322da2",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4",
        "patch": "@@ -86,7 +86,7 @@ test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n endif\n \n test_test_bitcoin_LDADD += $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n-test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static-libtool-libs\n \n nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n "
      },
      {
        "sha": "4faa760ad714d2d1241cbdba487f9c4563c22e5c",
        "filename": "src/script/bitcoinconsensus.cpp",
        "status": "added",
        "additions": 91,
        "deletions": 0,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4/src/script/bitcoinconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4/src/script/bitcoinconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.cpp?ref=2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4",
        "patch": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"bitcoinconsensus.h\"\n+\n+#include \"core/transaction.h\"\n+#include \"script/interpreter.h\"\n+#include \"version.h\"\n+\n+namespace {\n+\n+/** A class that deserializes a single CTransaction one time. */\n+class TxInputStream\n+{\n+public:\n+    TxInputStream(int nTypeIn, int nVersionIn, const unsigned char *txTo, size_t txToLen) :\n+    m_type(nTypeIn),\n+    m_version(nVersionIn),\n+    m_data(txTo),\n+    m_remaining(txToLen)\n+    {}\n+\n+    TxInputStream& read(char* pch, size_t nSize)\n+    {\n+        if (nSize > m_remaining)\n+            throw std::ios_base::failure(std::string(__func__) + \": end of data\");\n+\n+        if (pch == NULL)\n+            throw std::ios_base::failure(std::string(__func__) + \": bad destination buffer\");\n+\n+        if (m_data == NULL)\n+            throw std::ios_base::failure(std::string(__func__) + \": bad source buffer\");\n+\n+        memcpy(pch, m_data, nSize);\n+        m_remaining -= nSize;\n+        m_data += nSize;\n+        return *this;\n+    }\n+\n+    template<typename T>\n+    TxInputStream& operator>>(T& obj)\n+    {\n+        ::Unserialize(*this, obj, m_type, m_version);\n+        return *this;\n+    }\n+\n+private:\n+    const int m_type;\n+    const int m_version;\n+    const unsigned char* m_data;\n+    size_t m_remaining;\n+};\n+\n+inline int set_error(bitcoinconsensus_error* ret, bitcoinconsensus_error serror)\n+{\n+    if (ret)\n+        *ret = serror;\n+    return 0;\n+}\n+\n+} // anon namespace\n+\n+int bitcoinconsensus_verify_script(const unsigned char *scriptPubKey, unsigned int scriptPubKeyLen,\n+                                    const unsigned char *txTo        , unsigned int txToLen,\n+                                    unsigned int nIn, unsigned int flags, bitcoinconsensus_error* err)\n+{\n+    try {\n+        TxInputStream stream(SER_NETWORK, PROTOCOL_VERSION, txTo, txToLen);\n+        CTransaction tx;\n+        stream >> tx;\n+        if (nIn >= tx.vin.size())\n+            return set_error(err, bitcoinconsensus_ERR_TX_INDEX);\n+        if (tx.GetSerializeSize(SER_NETWORK, PROTOCOL_VERSION) != txToLen)\n+            return set_error(err, bitcoinconsensus_ERR_TX_SIZE_MISMATCH);\n+\n+         // Regardless of the verification result, the tx did not error.\n+         set_error(err, bitcoinconsensus_ERR_OK);\n+\n+        return VerifyScript(tx.vin[nIn].scriptSig, CScript(scriptPubKey, scriptPubKey + scriptPubKeyLen), flags, SignatureChecker(tx, nIn), NULL);\n+    } catch (std::exception &e) {\n+        return set_error(err, bitcoinconsensus_ERR_TX_DESERIALIZE); // Error deserializing\n+    }\n+}\n+\n+unsigned int bitcoinconsensus_version()\n+{\n+    // Just use the API version for now\n+    return BITCOINCONSENSUS_API_VER;\n+}"
      },
      {
        "sha": "15e3337a8dedcdd3728759b821ced318d7f8f8c2",
        "filename": "src/script/bitcoinconsensus.h",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4/src/script/bitcoinconsensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4/src/script/bitcoinconsensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.h?ref=2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4",
        "patch": "@@ -0,0 +1,67 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BITCOINCONSENSUS_H\n+#define BITCOIN_BITCOINCONSENSUS_H\n+\n+#if defined(BUILD_BITCOIN_INTERNAL) && defined(HAVE_CONFIG_H)\n+#include \"config/bitcoin-config.h\"\n+  #if defined(_WIN32)\n+    #if defined(DLL_EXPORT)\n+      #if defined(HAVE_FUNC_ATTRIBUTE_DLLEXPORT)\n+        #define EXPORT_SYMBOL __declspec(dllexport)\n+      #else\n+        #define EXPORT_SYMBOL\n+      #endif\n+    #endif\n+  #elif defined(HAVE_FUNC_ATTRIBUTE_VISIBILITY)\n+    #define EXPORT_SYMBOL __attribute__ ((visibility (\"default\")))\n+  #endif\n+#elif defined(MSC_VER) && !defined(STATIC_LIBBITCOINCONSENSUS)\n+  #define EXPORT_SYMBOL __declspec(dllimport)\n+#endif\n+\n+#ifndef EXPORT_SYMBOL\n+  #define EXPORT_SYMBOL\n+#endif\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+#define BITCOINCONSENSUS_API_VER 0\n+\n+typedef enum bitcoinconsensus_error_t\n+{\n+    bitcoinconsensus_ERR_OK = 0,\n+    bitcoinconsensus_ERR_TX_INDEX,\n+    bitcoinconsensus_ERR_TX_SIZE_MISMATCH,\n+    bitcoinconsensus_ERR_TX_DESERIALIZE,\n+} bitcoinconsensus_error;\n+\n+/** Script verification flags */\n+enum\n+{\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE      = 0,\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH      = (1U << 0), // evaluate P2SH (BIP16) subscripts\n+};\n+\n+/// Returns 1 if the input nIn of the serialized transaction pointed to by\n+/// txTo correctly spends the scriptPubKey pointed to by scriptPubKey under\n+/// the additional constraints specified by flags.\n+/// If not NULL, err will contain an error/success code for the operation\n+EXPORT_SYMBOL int bitcoinconsensus_verify_script(const unsigned char *scriptPubKey, unsigned int scriptPubKeyLen,\n+                                    const unsigned char *txTo        , unsigned int txToLen,\n+                                    unsigned int nIn, unsigned int flags, bitcoinconsensus_error* err);\n+\n+EXPORT_SYMBOL unsigned int bitcoinconsensus_version();\n+\n+#ifdef __cplusplus\n+} // extern \"C\"\n+#endif\n+\n+#undef EXPORT_SYMBOL\n+\n+#endif // BITCOIN_BITCOINCONSENSUS_H"
      }
    ]
  },
  {
    "sha": "cdd36c6c5cc309d98f941a4c78d9642c92c1e46f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZGQzNmM2YzVjYzMwOWQ5OGY5NDFhNGM3OGQ5NjQyYzkyYzFlNDZm",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-07T03:43:19Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T03:31:10Z"
      },
      "message": "build: add --with-libs so that libs are optional",
      "tree": {
        "sha": "c9353c4c25f1ea004c70af2d2d5fe70c34fb3b81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9353c4c25f1ea004c70af2d2d5fe70c34fb3b81"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cdd36c6c5cc309d98f941a4c78d9642c92c1e46f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdd36c6c5cc309d98f941a4c78d9642c92c1e46f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cdd36c6c5cc309d98f941a4c78d9642c92c1e46f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdd36c6c5cc309d98f941a4c78d9642c92c1e46f/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2cf5f16c25ac81eac3a09c4f15dad9d2154c03d4"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 22,
      "deletions": 3
    },
    "files": [
      {
        "sha": "7a00d57ae933e4d4a0741cf0d9a157ed1b4bd321",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 15,
        "deletions": 2,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd36c6c5cc309d98f941a4c78d9642c92c1e46f/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd36c6c5cc309d98f941a4c78d9642c92c1e46f/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=cdd36c6c5cc309d98f941a4c78d9642c92c1e46f",
        "patch": "@@ -610,6 +610,12 @@ AC_ARG_WITH([utils],\n   [build_bitcoin_utils=$withval],\n   [build_bitcoin_utils=yes])\n \n+AC_ARG_WITH([libs],\n+  [AS_HELP_STRING([--with-libs],\n+  [build libraries (default=yes)])],\n+  [build_bitcoin_libs=$withval],\n+  [build_bitcoin_libs=yes])\n+\n AC_ARG_WITH([daemon],\n   [AS_HELP_STRING([--with-daemon],\n   [build bitcoind daemon (default=yes)])],\n@@ -660,6 +666,13 @@ AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])\n AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n AC_MSG_RESULT($build_bitcoin_utils)\n \n+AC_MSG_CHECKING([whether to build libraries])\n+AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n+if test x$build_bitcoin_libs = xyes; then\n+  AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\n+fi\n+AC_MSG_RESULT($build_bitcoin_libs)\n+\n dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt4])\n \n@@ -776,8 +789,8 @@ else\n   AC_MSG_RESULT([no])\n fi\n \n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests = xnononono; then\n-  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-daemon --with-gui or --enable-tests])\n+if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_tests = xnononono; then\n+  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui or --enable-tests])\n fi\n \n AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])"
      },
      {
        "sha": "0d45203c9005c9e49824bce157dc227d46d40601",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd36c6c5cc309d98f941a4c78d9642c92c1e46f/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd36c6c5cc309d98f941a4c78d9642c92c1e46f/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=cdd36c6c5cc309d98f941a4c78d9642c92c1e46f",
        "patch": "@@ -49,7 +49,12 @@ BITCOIN_INCLUDES += $(BDB_CPPFLAGS)\n noinst_LIBRARIES += libbitcoin_wallet.a\n endif\n \n+if BUILD_BITCOIN_LIBS\n lib_LTLIBRARIES = libbitcoinconsensus.la\n+LIBBITCOIN_CONSENSUS=libbitcoinconsensus.la\n+else\n+LIBBITCOIN_CONSENSUS=\n+endif\n \n bin_PROGRAMS =\n TESTS =\n@@ -361,6 +366,7 @@ libbitcoinconsensus_la_CPPFLAGS = $(CRYPTO_CFLAGS) -I$(builddir)/obj -DBUILD_BIT\n if USE_LIBSECP256K1\n libbitcoinconsensus_la_LIBADD += secp256k1/libsecp256k1.la\n endif\n+endif\n \n CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a *.gcda *.gcno\n "
      },
      {
        "sha": "5fd2afe50d4a33bb13a559e97e5b2cc2459bb049",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdd36c6c5cc309d98f941a4c78d9642c92c1e46f/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdd36c6c5cc309d98f941a4c78d9642c92c1e46f/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=cdd36c6c5cc309d98f941a4c78d9642c92c1e46f",
        "patch": "@@ -85,7 +85,7 @@ if ENABLE_WALLET\n test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n endif\n \n-test_test_bitcoin_LDADD += $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n+test_test_bitcoin_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static-libtool-libs\n \n nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)"
      }
    ]
  },
  {
    "sha": "269efa30ed57feb5dd7d4d30c64b98fa7aad4267",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjllZmEzMGVkNTdmZWI1ZGQ3ZDRkMzBjNjRiOThmYTdhYWQ0MjY3",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-14T22:23:46Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T03:31:10Z"
      },
      "message": "build: add quick consensus lib tests\n\nThey should be hooked up in other places as well, but this is a start.",
      "tree": {
        "sha": "0061b028c86dc987e8c9fa448bfd12d9908226bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0061b028c86dc987e8c9fa448bfd12d9908226bd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/269efa30ed57feb5dd7d4d30c64b98fa7aad4267",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/269efa30ed57feb5dd7d4d30c64b98fa7aad4267",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/269efa30ed57feb5dd7d4d30c64b98fa7aad4267",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/269efa30ed57feb5dd7d4d30c64b98fa7aad4267/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cdd36c6c5cc309d98f941a4c78d9642c92c1e46f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdd36c6c5cc309d98f941a4c78d9642c92c1e46f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cdd36c6c5cc309d98f941a4c78d9642c92c1e46f"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 12,
      "deletions": 1
    },
    "files": [
      {
        "sha": "36aaa6903f4d7b092a646abe141ee1ed9e9dc5e6",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/269efa30ed57feb5dd7d4d30c64b98fa7aad4267/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/269efa30ed57feb5dd7d4d30c64b98fa7aad4267/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=269efa30ed57feb5dd7d4d30c64b98fa7aad4267",
        "patch": "@@ -14,6 +14,10 @@\n #include \"script/sign.h\"\n #include \"util.h\"\n \n+#if defined(HAVE_CONSENSUS_LIB)\n+#include \"script/bitcoinconsensus.h\"\n+#endif\n+\n #include <fstream>\n #include <stdint.h>\n #include <string>\n@@ -94,8 +98,15 @@ CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CMu\n void DoTest(const CScript& scriptPubKey, const CScript& scriptSig, int flags, bool expect, const std::string& message)\n {\n     ScriptError err;\n-    BOOST_CHECK_MESSAGE(VerifyScript(scriptSig, scriptPubKey, flags, SignatureChecker(BuildSpendingTransaction(scriptSig, BuildCreditingTransaction(scriptPubKey)), 0), &err) == expect, message);\n+    CMutableTransaction tx = BuildSpendingTransaction(scriptSig, BuildCreditingTransaction(scriptPubKey));\n+    CMutableTransaction tx2 = tx;\n+    BOOST_CHECK_MESSAGE(VerifyScript(scriptSig, scriptPubKey, flags, SignatureChecker(tx, 0), &err) == expect, message);\n     BOOST_CHECK_MESSAGE(expect == (err == SCRIPT_ERR_OK), std::string(ScriptErrorString(err)) + \": \" + message);\n+#if defined(HAVE_CONSENSUS_LIB)\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << tx2;\n+    BOOST_CHECK_MESSAGE(bitcoinconsensus_verify_script(begin_ptr(scriptPubKey), scriptPubKey.size(), (const unsigned char*)&stream[0], stream.size(), 0, flags, NULL) == expect,message);\n+#endif\n }\n \n void static NegateSignatureS(std::vector<unsigned char>& vchSig) {"
      }
    ]
  },
  {
    "sha": "19df238a7ba7a6cdfbf48bc663c39ddbf9f6c7d0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOWRmMjM4YTdiYTdhNmNkZmJmNDhiYzY2M2MzOWRkYmY5ZjZjN2Qw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-10-14T22:25:35Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T03:31:10Z"
      },
      "message": "build: shared lib build should work reasonably well now",
      "tree": {
        "sha": "21c67b47f7d34375a2b1e4cc5638718c3199625c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21c67b47f7d34375a2b1e4cc5638718c3199625c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19df238a7ba7a6cdfbf48bc663c39ddbf9f6c7d0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19df238a7ba7a6cdfbf48bc663c39ddbf9f6c7d0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/19df238a7ba7a6cdfbf48bc663c39ddbf9f6c7d0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19df238a7ba7a6cdfbf48bc663c39ddbf9f6c7d0/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "269efa30ed57feb5dd7d4d30c64b98fa7aad4267",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/269efa30ed57feb5dd7d4d30c64b98fa7aad4267",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/269efa30ed57feb5dd7d4d30c64b98fa7aad4267"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "70a9c15ffb5b2f8082934d3da969de494813cc8c",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19df238a7ba7a6cdfbf48bc663c39ddbf9f6c7d0/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19df238a7ba7a6cdfbf48bc663c39ddbf9f6c7d0/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=19df238a7ba7a6cdfbf48bc663c39ddbf9f6c7d0",
        "patch": "@@ -49,7 +49,7 @@ case $host in\n   ;;\n esac\n dnl Libtool init checks.\n-LT_INIT([disable-shared])\n+LT_INIT([pic-only])\n \n dnl Check/return PATH for base programs.\n AC_PATH_TOOL(AR, ar)"
      }
    ]
  },
  {
    "sha": "9ed8979e294fb7a42e26a6b6541f614554663bea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZWQ4OTc5ZTI5NGZiN2E0MmUyNmE2YjY1NDFmNjE0NTU0NjYzYmVh",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-18T20:49:56Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T03:31:11Z"
      },
      "message": "build: fix static dll link for mingw\n\ndll's are no longer dynamically linked to libgcc/libstdc++/libssp",
      "tree": {
        "sha": "bd81e18106d0eed2b947786e875372f70d69009d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd81e18106d0eed2b947786e875372f70d69009d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ed8979e294fb7a42e26a6b6541f614554663bea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ed8979e294fb7a42e26a6b6541f614554663bea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9ed8979e294fb7a42e26a6b6541f614554663bea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ed8979e294fb7a42e26a6b6541f614554663bea/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19df238a7ba7a6cdfbf48bc663c39ddbf9f6c7d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19df238a7ba7a6cdfbf48bc663c39ddbf9f6c7d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19df238a7ba7a6cdfbf48bc663c39ddbf9f6c7d0"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "77ab5eb03c4ad30c5cc181cb283933db00df8a81",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ed8979e294fb7a42e26a6b6541f614554663bea/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ed8979e294fb7a42e26a6b6541f614554663bea/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=9ed8979e294fb7a42e26a6b6541f614554663bea",
        "patch": "@@ -226,6 +226,15 @@ case $host in\n        *) AC_MSG_ERROR(\"Could not determine win32/win64 for installer\") ;;\n      esac\n      AC_SUBST(WINDOWS_BITS)\n+\n+     dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.\n+     dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override\n+     dnl its command here, with the predeps/postdeps removed, and -static inserted. Postdeps are\n+     dnl also overridden to prevent their insertion later.\n+     dnl This should only affect dll's.\n+     archive_cmds_CXX=\"\\$CC -shared \\$libobjs \\$deplibs \\$compiler_flags -static -o \\$output_objdir/\\$soname \\${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker \\$lib\"\n+     postdeps_CXX=\n+\n      ;;\n   *darwin*)\n      TARGET_OS=darwin"
      }
    ]
  },
  {
    "sha": "9eb5a5fbef5270fda10c15c60a297b4cd19b681e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZWI1YTVmYmVmNTI3MGZkYTEwYzE1YzYwYTI5N2I0Y2QxOWI2ODFl",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-18T22:06:23Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2014-11-20T03:31:11Z"
      },
      "message": "build: pad header for osx libs\n\nThis ensures that users of the lib will be able to mangle the paths to work\nin their bundles.",
      "tree": {
        "sha": "f51866e12e89d6176294dc48c4c4ea3da39b714b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f51866e12e89d6176294dc48c4c4ea3da39b714b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9eb5a5fbef5270fda10c15c60a297b4cd19b681e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9eb5a5fbef5270fda10c15c60a297b4cd19b681e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9eb5a5fbef5270fda10c15c60a297b4cd19b681e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9eb5a5fbef5270fda10c15c60a297b4cd19b681e/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9ed8979e294fb7a42e26a6b6541f614554663bea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ed8979e294fb7a42e26a6b6541f614554663bea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ed8979e294fb7a42e26a6b6541f614554663bea"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6784521d818a8cc8b1fe6a5bbb81e1934381f05e",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9eb5a5fbef5270fda10c15c60a297b4cd19b681e/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9eb5a5fbef5270fda10c15c60a297b4cd19b681e/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=9eb5a5fbef5270fda10c15c60a297b4cd19b681e",
        "patch": "@@ -285,6 +285,7 @@ case $host in\n        esac\n      fi\n \n+     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\n      CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n      ;;\n    *linux*)"
      }
    ]
  }
]