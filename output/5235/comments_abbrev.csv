sipa,2014-11-07T08:18:25Z,"```\n./autogen.sh\n./configure --disable-wallet --without-gui\n...\nchecking whether to build libraries... ./configure: line 23562: ],: command not found\nyes\n...\n```\n",https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-62111670,62111670,
theuni,2014-11-07T08:24:09Z,"Er, sorry for the busted c/p. Fixed.\n",https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-62112159,62112159,
laanwj,2014-11-17T17:21:21Z,This needs some additions to `.gitignore`:\n\n```\n?? src/.libs/\n?? src/core/libbitcoinconsensus_la-transaction.lo\n?? src/crypto/libbitcoinconsensus_la-ripemd160.lo\n?? src/crypto/libbitcoinconsensus_la-sha1.lo\n?? src/crypto/libbitcoinconsensus_la-sha2.lo\n?? src/libbitcoinconsensus.la\n?? src/libbitcoinconsensus_la-eccryptoverify.lo\n?? src/libbitcoinconsensus_la-ecwrapper.lo\n?? src/libbitcoi,https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63340206,63340206,
laanwj,2014-11-17T19:49:17Z,"Works for me.\n\nI patched main.cpp to write out script verification operations\n\n``` patch\ndiff --git a/src/main.cpp b/src/main.cpp\nindex 2bff781..80433d8 100644\n--- a/src/main.cpp\n+++ b/src/main.cpp\n@@ -1359,8 +1359,16 @@ void UpdateCoins(const CTransaction& tx, CValidationState &state, CCoinsViewCach\n\n bool CScriptCheck::operator()() const {\n     const CScript &scriptSig = ptxTo->vin[n",https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63364052,63364052,
theuni,2014-11-17T20:24:45Z,"@laanwj Thanks for testing!\n\nIt sounds like a good idea to fail if the entire input isn't consumed. That can be reflected in a new error (error codes still need to be hooked up here, I'll do that once that PR is merged).\n",https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63369438,63369438,
theuni,2014-11-17T20:25:26Z,hah! I suppose I'll do that now :)\n,https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63369551,63369551,
theuni,2014-11-17T23:59:03Z,"Rebased and updated for the comments above. Fixed the missing copyright, wrong name for include guard, and unnecessary const arguments, and squashed those into the original commits.\n\nThe last new commit adds error codes for busted txto's, though it's not very graceful. The errors aren't related to the script, but to the tx.. so the codes are shoe-horned into the existing enum. Suggestions for a ",https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63399854,63399854,
laanwj,2014-11-18T13:46:49Z,"@theuni I'm not against a more-detailed failure reason in the API, but the current way is inconsistent. `bitcoinconsensus.h` should not depend on `script_error.h` which is an internal header.\n\nIMO if we're going to do this we need a ScriptError just for external consumption, just like we did for the flags. This keeps `bitcoinconsensus.h` self-contained.\n",https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63472641,63472641,
sipa,2014-11-18T13:48:54Z,"I think @theuni's purpose with script_error was to be able to use it as both an internal and external header.\n\nHowever, I agree with @laanwj to keep the internal and external definitions completely separate - even if that means duplicating some code.\n",https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63472910,63472910,
laanwj,2014-11-18T13:54:46Z,"I prefer have our API, at least at version 0, to be defined by one header. \n\nAnd yes - keeping the internal and external definitions completely separate is better, not least because they have diverged already: the new codes `SCRIPT_ERR_TX_*` errors are only used externally.\n\nBTW: _If_ `script_error.h` is supposed to be an external header, it should not define the internal, non-API function `co",https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63473669,63473669,
jtimon,2014-11-18T14:06:28Z,"Currently libconsensus only has script verification, but since we plan to add more things in the future, I don't think it should be in script/, maybe have its own dir?\n",https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63475186,63475186,
sipa,2014-11-18T14:09:30Z,@jtimon agree\n,https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63475597,63475597,
theuni,2014-11-18T17:26:03Z,Updated after discussion on IRC. I went ahead and squashed it down since it was impossible to review commit-by-commit with things changing back and forth. Probably easier to review the new files wholly anyway. Sorry if that complicates at all.\n,https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63509541,63509541,
theuni,2014-11-18T17:33:14Z,"@laanwj I missed your comment above about api version before pushing. Agreed. I'll add that with the next changes pending review.\n\n@jtimon Agreed, but ok to change that as we go as more functionality is added?\n",https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63510868,63510868,
theuni,2014-11-19T00:51:24Z,"Briefly tested the .dll and .dylib enough to verify that they actually load and bitcoinconsensus_version() works, so presumably the objects themselves are in working order.\n",https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63574491,63574491,
laanwj,2014-11-19T08:21:10Z,API looks good to me now.\n\n@theuni `objdump -p` output for the dll looks good to me; http://paste.ubuntu.com/9090362/ . Only dependence is on system DLLs\n- DLL Name: ADVAPI32.dll\n- DLL Name: GDI32.dll\n- DLL Name: KERNEL32.dll\n- DLL Name: msvcrt.dll\n- DLL Name: USER32.dll\n\nOnly exported symbols are those two that we want:\n\n```\nExport Address Table -- Ordinal Base 1\n    [   0] +base[   ,https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63606020,63606020,
laanwj,2014-11-19T08:54:51Z,ACK commithash ae6bb2f7ff016df27456d544842ec6bc5f5c7cfa https://dev.visucore.com/bitcoin/acks/5235\n,https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63609080,63609080,
sipa,2014-11-19T10:41:30Z,"ACK.\n\nCompiling with -O2 -flto, and stripping results in an 83 kbyte .so file. Nice.\n\nIt would be nice to have some proof of concept command-line tool that shows how to use the library.\n",https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63621332,63621332,
laanwj,2014-11-19T10:46:21Z,"@sipa Yes, now that we're going to export libraries, we're also going to need library documentation and examples. No need to do in this pull though. Created an issue #5311.\n",https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63621879,63621879,
jtimon,2014-11-19T11:02:46Z,"Well, I don't see any reason not to do it now, specially when you had to squash anyway.\n",https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63623803,63623803,
jtimon,2014-11-19T11:37:49Z,"@laanwj ""Appending arbitrary data to txTo did not cause verification to fail: is this expected? Should it check whether the entire input is consumed?""\nThe txTo is only used for signature verification (ie if there weren't different hashtypes we could just pass a hash and the script instead of txTo and nIn).\nSo if the script contains script sigs and you change the txTo without updating the signatu",https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63627533,63627533,
sipa,2014-11-19T11:39:06Z,@jtimon That's changed now; a check was added that the passed transaction is deserialized completely.\n,https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63627655,63627655,
sipa,2014-11-19T22:09:43Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63723442,63723442,
theuni,2014-11-20T03:29:48Z,"rebased, squashed down some, and addressed @laanwj's points.\n\n@jtimon I'd like to move around later to avoid any bikeshedding wrt naming. There are still a few things left to handle (docs/tests/samples), so let's do it along with those.\n",https://github.com/bitcoin/bitcoin/pull/5235#issuecomment-63756312,63756312,
laanwj,2014-11-17T17:41:01Z,What is the reason for having `const` here on basic types like `unsigned int`?\n,https://github.com/bitcoin/bitcoin/pull/5235#discussion_r20450767,20450767,src/script/bitcoinconsensus.h
laanwj,2014-11-17T18:08:46Z,"Should we be using 'bool' here? That is C99. As we know, some platforms _cough_ MSVC _cough_ still don't implement that, so it may be better to just return a 0/1 int.\n",https://github.com/bitcoin/bitcoin/pull/5235#discussion_r20452558,20452558,src/script/bitcoinconsensus.h
theuni,2014-11-17T18:13:13Z,"No reason, will change. ACK on not using bool as well.\n",https://github.com/bitcoin/bitcoin/pull/5235#discussion_r20452798,20452798,src/script/bitcoinconsensus.h
Diapolo,2014-11-17T18:24:06Z,Missing license header.\n,https://github.com/bitcoin/bitcoin/pull/5235#discussion_r20453420,20453420,src/script/bitcoinconsensus.cpp
Diapolo,2014-11-17T18:24:26Z,Also missing license header.\nNit: Also should be BITCOIN_SCRIPT_BITCOINCONSENSUS_H.\n,https://github.com/bitcoin/bitcoin/pull/5235#discussion_r20453439,20453439,src/script/bitcoinconsensus.h
Diapolo,2014-11-17T18:24:46Z,Some weird indentation here?\n,https://github.com/bitcoin/bitcoin/pull/5235#discussion_r20453459,20453459,src/script/bitcoinconsensus.h
Diapolo,2014-11-17T18:26:50Z,"Nit: If we use what we recently had as some form of policy this should read BITCON_SCRIPT_ERROR_H, right? Also the file should be named just error.h then? Just saying :)...\n",https://github.com/bitcoin/bitcoin/pull/5235#discussion_r20453575,20453575,src/script/script_error.h
theuni,2014-11-17T18:37:22Z,"@Diapolo This is going to be an installed header, so asking a 3rd-party application to `#include <error.h>` is a no-go. If anything, it should probably be renamed to bitcoinconsensus_error.h.\n",https://github.com/bitcoin/bitcoin/pull/5235#discussion_r20454238,20454238,src/script/script_error.h
makhmet,2014-11-17T18:47:01Z,"СПАСИБО!\n\n2014-11-17 21:37 GMT+03:00 Cory Fields notifications@github.com:\n\n> In src/script/script_error.h:\n> \n> > @@ -0,0 +1,53 @@\n> > +// Copyright (c) 2009-2010 Satoshi Nakamoto\n> > +// Copyright (c) 2009-2014 The Bitcoin developers\n> > +// Distributed under the MIT software license, see the accompanying\n> > +// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n> > ",https://github.com/bitcoin/bitcoin/pull/5235#discussion_r20454853,20454853,src/script/script_error.h
Diapolo,2014-11-17T18:48:20Z,"@theuni Alright, didn't take that into consideration, when suggesting that :).\n",https://github.com/bitcoin/bitcoin/pull/5235#discussion_r20454924,20454924,src/script/script_error.h
laanwj,2014-11-19T10:06:01Z,Thinking about it IMO this OK should be generic: `bitcoinconsensus_ERR_OK = 0`. It doesn't really matter whether this is a transaction OK or another error OK :-)\n,https://github.com/bitcoin/bitcoin/pull/5235#discussion_r20566179,20566179,src/script/bitcoinconsensus.h
laanwj,2014-11-19T10:06:41Z,s/bitcoinconsensus_txerror_t/bitcoinconsensus_error_t/\n,https://github.com/bitcoin/bitcoin/pull/5235#discussion_r20566204,20566204,src/script/bitcoinconsensus.h
theuni,2014-11-20T03:21:40Z,"This was meant to imply that the tx was accepted by the api, whether or not the verification succeeded. bitcoinconsensus_ERR_OK is a bit hazy, as it could imply that bitcoinconsensus_verify_script() itself succeeded.\n\nUltimately I think you're right, we just need to make it clear in the docs that it means ""verification was attempted"".\n",https://github.com/bitcoin/bitcoin/pull/5235#discussion_r20625575,20625575,src/script/bitcoinconsensus.h
