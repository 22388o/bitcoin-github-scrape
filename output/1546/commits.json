[
  {
    "sha": "19521acfa4499bb50105e13b5ffd63bfd43c73aa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOTUyMWFjZmE0NDk5YmI1MDEwNWUxM2I1ZmZkNjNiZmQ0M2M3M2Fh",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2012-07-02T00:23:26Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2012-07-02T00:42:47Z"
      },
      "message": "Do not consider inbound peers for outbound network group exclusion.\n\nBitcoin will not make an outbound connection to a network group\n(/16 for IPv4) that it is already connected to. This means that\nif an attacker wants good odds of capturing all a nodes outbound\nconnections he must have hosts on a a large number of distinct\ngroups.\n\nPreviously both inbound and outbound connections were used to\nfeed this exclusion. The use of inbound connections, which can be\ncontrolled by the attacker, actually has the potential of making\nsibyl attacks _easier_: An attacker can start up hosts in groups\nwhich house many honest nodes and make outbound connections to\nthe victim to exclude big swaths of honest nodes. Because the\nattacker chooses to make the outbound connection he can always\nbeat out honest nodes for the consumption of inbound slots.\n\nAt _best_ the old behavior increases attacker costs by a single\ngroup (e.g. one distinct group to use to fill up all your inbound\nslots), but at worst it allows the attacker to select whole\nnetworks you won't connect to.\n\nThis commit makes the nodes use only outbound links to exclude\nnetwork groups for outbound connections. Fancier things could\nbe done, like weaker exclusion for inbound groups... but\nsimplicity is good and I don't believe more complexity is\ncurrently needed.",
      "tree": {
        "sha": "0a5cfa10d2b13dfba749920e383ee830b916e8c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a5cfa10d2b13dfba749920e383ee830b916e8c3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19521acfa4499bb50105e13b5ffd63bfd43c73aa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19521acfa4499bb50105e13b5ffd63bfd43c73aa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/19521acfa4499bb50105e13b5ffd63bfd43c73aa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19521acfa4499bb50105e13b5ffd63bfd43c73aa/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "18e8e43715b0704b0e94d60f51bce28d6510ed0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18e8e43715b0704b0e94d60f51bce28d6510ed0d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/18e8e43715b0704b0e94d60f51bce28d6510ed0d"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "2d1f708edc7c554d4eca93917e01508332d9cf4f",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19521acfa4499bb50105e13b5ffd63bfd43c73aa/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19521acfa4499bb50105e13b5ffd63bfd43c73aa/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=19521acfa4499bb50105e13b5ffd63bfd43c73aa",
        "patch": "@@ -1432,16 +1432,17 @@ void ThreadOpenConnections2(void* parg)\n         //\n         CAddress addrConnect;\n \n-        // Only connect to one address per a.b.?.? range.\n+        // Only connect out to one peer per network group (/16 for IPv4).\n         // Do this here so we don't have to critsect vNodes inside mapAddresses critsect.\n         int nOutbound = 0;\n         set<vector<unsigned char> > setConnected;\n         {\n             LOCK(cs_vNodes);\n             BOOST_FOREACH(CNode* pnode, vNodes) {\n-                setConnected.insert(pnode->addr.GetGroup());\n-                if (!pnode->fInbound)\n+                if (!pnode->fInbound) {\n+                    setConnected.insert(pnode->addr.GetGroup());\n                     nOutbound++;\n+                }\n             }\n         }\n "
      }
    ]
  }
]