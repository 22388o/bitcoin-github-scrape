[
  {
    "sha": "4dca7d0a98d619c0aea572b181a7c5b95b2f62e5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZGNhN2QwYTk4ZDYxOWMwYWVhNTcyYjE4MWE3YzViOTViMmY2MmU1",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-10-24T04:38:04Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-10-24T15:44:34Z"
      },
      "message": "appveyor: Enable multiwallet test",
      "tree": {
        "sha": "4a7fa60c4d5593c3c1427967abc60a47dd0c9a7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a7fa60c4d5593c3c1427967abc60a47dd0c9a7f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4dca7d0a98d619c0aea572b181a7c5b95b2f62e5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4dca7d0a98d619c0aea572b181a7c5b95b2f62e5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4dca7d0a98d619c0aea572b181a7c5b95b2f62e5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4dca7d0a98d619c0aea572b181a7c5b95b2f62e5/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2b88f67e0bccbc23f30bf65f944f5cadad88f221",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b88f67e0bccbc23f30bf65f944f5cadad88f221",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2b88f67e0bccbc23f30bf65f944f5cadad88f221"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 9,
      "deletions": 14
    },
    "files": [
      {
        "sha": "8dad9c4f9dff90e95ee9fe5025bce8652a28408c",
        "filename": ".appveyor.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dca7d0a98d619c0aea572b181a7c5b95b2f62e5/.appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dca7d0a98d619c0aea572b181a7c5b95b2f62e5/.appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.appveyor.yml?ref=4dca7d0a98d619c0aea572b181a7c5b95b2f62e5",
        "patch": "@@ -61,5 +61,5 @@ test_script:\n - ps:  src\\bench_bitcoin.exe -evals=1 -scaling=0\n - ps:  python test\\util\\bitcoin-util-test.py\n - cmd: python test\\util\\rpcauth-test.py\n-- cmd: python test\\functional\\test_runner.py --force --quiet --combinedlogslen=4000 --exclude wallet_multiwallet\n+- cmd: python test\\functional\\test_runner.py --force --quiet --combinedlogslen=4000\n deploy: off"
      },
      {
        "sha": "6a95ca4321a79649698543d6f758e94535ad28a6",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 8,
        "deletions": 13,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4dca7d0a98d619c0aea572b181a7c5b95b2f62e5/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4dca7d0a98d619c0aea572b181a7c5b95b2f62e5/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=4dca7d0a98d619c0aea572b181a7c5b95b2f62e5",
        "patch": "@@ -47,9 +47,8 @@ def wallet_file(name):\n \n         # create symlink to verify wallet directory path can be referenced\n         # through symlink\n-        if os.name != 'nt':\n-            os.mkdir(wallet_dir('w7'))\n-            os.symlink('w7', wallet_dir('w7_symlink'))\n+        os.mkdir(wallet_dir('w7'))\n+        os.symlink('w7', wallet_dir('w7_symlink'))\n \n         # rename wallet.dat to make sure plain wallet file paths (as opposed to\n         # directory paths) can be loaded\n@@ -70,11 +69,9 @@ def wallet_file(name):\n         #   w8         - to verify existing wallet file is loaded correctly\n         #   ''         - to verify default wallet file is created correctly\n         wallet_names = ['w1', 'w2', 'w3', 'w', 'sub/w5', os.path.join(self.options.tmpdir, 'extern/w6'), 'w7_symlink', 'w8', '']\n-        if os.name == 'nt':\n-            wallet_names.remove('w7_symlink')\n         extra_args = ['-wallet={}'.format(n) for n in wallet_names]\n         self.start_node(0, extra_args)\n-        assert_equal(set(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), set(['', 'w3', 'w2', 'sub/w5', 'w7', 'w7', 'w1', 'w8', 'w']))\n+        assert_equal(set(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), set(['', 'w3', 'w2', os.path.join('sub', 'w5'), 'w7', 'w7', 'w1', 'w8', 'w']))\n \n         assert_equal(set(node.listwallets()), set(wallet_names))\n \n@@ -100,9 +97,8 @@ def wallet_file(name):\n         self.nodes[0].assert_start_raises_init_error(['-wallet=w8', '-wallet=w8_copy'], exp_stderr, match=ErrorMatch.PARTIAL_REGEX)\n \n         # should not initialize if wallet file is a symlink\n-        if os.name != 'nt':\n-            os.symlink('w8', wallet_dir('w8_symlink'))\n-            self.nodes[0].assert_start_raises_init_error(['-wallet=w8_symlink'], 'Error: Invalid -wallet path \\'w8_symlink\\'\\. .*', match=ErrorMatch.FULL_REGEX)\n+        os.symlink('w8', wallet_dir('w8_symlink'))\n+        self.nodes[0].assert_start_raises_init_error(['-wallet=w8_symlink'], 'Error: Invalid -wallet path \\'w8_symlink\\'\\. .*', match=ErrorMatch.FULL_REGEX)\n \n         # should not initialize if the specified walletdir does not exist\n         self.nodes[0].assert_start_raises_init_error(['-walletdir=bad'], 'Error: Specified -walletdir \"bad\" does not exist')\n@@ -148,7 +144,7 @@ def wallet_file(name):\n \n         self.restart_node(0, extra_args)\n \n-        assert_equal(set(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), set(['', 'w3', 'w2', 'sub/w5', 'w7', 'w7', 'w8_copy', 'w1', 'w8', 'w']))\n+        assert_equal(set(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), set(['', 'w3', 'w2', os.path.join('sub', 'w5'), 'w7', 'w7', 'w8_copy', 'w1', 'w8', 'w']))\n \n         wallets = [wallet(w) for w in wallet_names]\n         wallet_bad = wallet(\"bad\")\n@@ -235,8 +231,7 @@ def wallet_file(name):\n \n \n         # Fail to load if wallet file is a symlink\n-        if os.name != 'nt':\n-            assert_raises_rpc_error(-4, \"Wallet file verification failed: Invalid -wallet path 'w8_symlink'\", self.nodes[0].loadwallet, 'w8_symlink')\n+        assert_raises_rpc_error(-4, \"Wallet file verification failed: Invalid -wallet path 'w8_symlink'\", self.nodes[0].loadwallet, 'w8_symlink')\n \n         # Fail to load if a directory is specified that doesn't contain a wallet\n         os.mkdir(wallet_dir('empty_wallet_dir'))\n@@ -296,7 +291,7 @@ def wallet_file(name):\n         assert_equal(self.nodes[0].listwallets(), ['w1'])\n         assert_equal(w1.getwalletinfo()['walletname'], 'w1')\n \n-        assert_equal(set(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), set(['', 'w3', 'w2', 'sub/w5', 'w7', 'w9', 'w7', 'w8_copy', 'w1', 'w8', 'w']))\n+        assert_equal(set(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), set(['', 'w3', 'w2', os.path.join('sub', 'w5'), 'w7', 'w9', 'w7', 'w8_copy', 'w1', 'w8', 'w']))\n \n         # Test backing up and restoring wallets\n         self.log.info(\"Test wallet backup\")"
      }
    ]
  }
]