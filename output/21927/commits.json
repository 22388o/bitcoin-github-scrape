[
  {
    "sha": "fa74bfc8601cd2b749deb38388e2a4636d8b86ea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTc0YmZjODYwMWNkMmI3NDlkZWIzODM4OGUyYTQ2MzZkOGI4NmVh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-12T08:24:23Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-12T08:20:59Z"
      },
      "message": "fuzz: Run const CScript member functions only once",
      "tree": {
        "sha": "aae37d64a68a43331260230dab1f379e6b744e8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aae37d64a68a43331260230dab1f379e6b744e8c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa74bfc8601cd2b749deb38388e2a4636d8b86ea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjDowwAsjF570EcfgkY3ZZitYs4uE0iaP6AHjvW+6m+Tswu35WXPFLM+KCv4bYa\n3AR0eFkNKH4marj3AZurxyG56SnBuw+NUQXmP1LWvaXbACppdSP5/Bam2emXeSLY\nVZEWRSBxnTj8va55j58wAAaabQKUFCbJtk+fVDrqVJyeVaoTrZyTtbRfj1m+nMPX\nARgQihzjjTBjTjmpfEzdtPmB08acUvpwmnx8wGZUjpGU1OHrFloSoe6As4H7xmu2\nGYQm2vR+D6avmmQaTn1zu7fppqovXgjgluij15I6eSOIWh19TXcajRes4tkLQxaY\nDzIZ6bbtPtvmSoyfFhsLFijNs+fagDPC3reRJYBQIbAB3BYDmN+7uCDlUcy+ZBAV\n9LdvKvL6Ov+6xImRTGEliXTD+VwSLPrJ/6DiaN2HKttxgimLlM1yyYbbff8p8QVo\nodw11IoUTGEW6qEzjOw5ml9Bs6HUbTMAaWKar+uyDXB0yyx9NmiwzLk62eqIkelW\nixL6dB3r\n=AcfI\n-----END PGP SIGNATURE-----",
        "payload": "tree aae37d64a68a43331260230dab1f379e6b744e8c\nparent 2e30e328a7a46e0405664fd0cb31d971171f71d1\nauthor MarcoFalke <falke.marco@gmail.com> 1620807863 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1620807659 +0200\n\nfuzz: Run const CScript member functions only once\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa74bfc8601cd2b749deb38388e2a4636d8b86ea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa74bfc8601cd2b749deb38388e2a4636d8b86ea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa74bfc8601cd2b749deb38388e2a4636d8b86ea/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2e30e328a7a46e0405664fd0cb31d971171f71d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e30e328a7a46e0405664fd0cb31d971171f71d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2e30e328a7a46e0405664fd0cb31d971171f71d1"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 30,
      "deletions": 31
    },
    "files": [
      {
        "sha": "4bc709ed35a98d6930ecc8c91edd4264421d13f8",
        "filename": "src/test/fuzz/script_ops.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 31,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa74bfc8601cd2b749deb38388e2a4636d8b86ea/src/test/fuzz/script_ops.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa74bfc8601cd2b749deb38388e2a4636d8b86ea/src/test/fuzz/script_ops.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script_ops.cpp?ref=fa74bfc8601cd2b749deb38388e2a4636d8b86ea",
        "patch": "@@ -14,55 +14,54 @@\n FUZZ_TARGET(script_ops)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n-    CScript script = ConsumeScript(fuzzed_data_provider);\n+    CScript script_mut = ConsumeScript(fuzzed_data_provider);\n     while (fuzzed_data_provider.remaining_bytes() > 0) {\n         CallOneOf(\n             fuzzed_data_provider,\n             [&] {\n                 CScript s = ConsumeScript(fuzzed_data_provider);\n-                script = std::move(s);\n+                script_mut = std::move(s);\n             },\n             [&] {\n                 const CScript& s = ConsumeScript(fuzzed_data_provider);\n-                script = s;\n+                script_mut = s;\n             },\n             [&] {\n-                script << fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+                script_mut << fuzzed_data_provider.ConsumeIntegral<int64_t>();\n             },\n             [&] {\n-                script << ConsumeOpcodeType(fuzzed_data_provider);\n+                script_mut << ConsumeOpcodeType(fuzzed_data_provider);\n             },\n             [&] {\n-                script << ConsumeScriptNum(fuzzed_data_provider);\n+                script_mut << ConsumeScriptNum(fuzzed_data_provider);\n             },\n             [&] {\n-                script << ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+                script_mut << ConsumeRandomLengthByteVector(fuzzed_data_provider);\n             },\n             [&] {\n-                script.clear();\n-            },\n-            [&] {\n-                (void)script.GetSigOpCount(false);\n-                (void)script.GetSigOpCount(true);\n-                (void)script.GetSigOpCount(script);\n-                (void)script.HasValidOps();\n-                (void)script.IsPayToScriptHash();\n-                (void)script.IsPayToWitnessScriptHash();\n-                (void)script.IsPushOnly();\n-                (void)script.IsUnspendable();\n-                {\n-                    CScript::const_iterator pc = script.begin();\n-                    opcodetype opcode;\n-                    (void)script.GetOp(pc, opcode);\n-                    std::vector<uint8_t> data;\n-                    (void)script.GetOp(pc, opcode, data);\n-                    (void)script.IsPushOnly(pc);\n-                }\n-                {\n-                    int version;\n-                    std::vector<uint8_t> program;\n-                    (void)script.IsWitnessProgram(version, program);\n-                }\n+                script_mut.clear();\n             });\n     }\n+    const CScript& script = script_mut;\n+    (void)script.GetSigOpCount(false);\n+    (void)script.GetSigOpCount(true);\n+    (void)script.GetSigOpCount(script);\n+    (void)script.HasValidOps();\n+    (void)script.IsPayToScriptHash();\n+    (void)script.IsPayToWitnessScriptHash();\n+    (void)script.IsPushOnly();\n+    (void)script.IsUnspendable();\n+    {\n+        CScript::const_iterator pc = script.begin();\n+        opcodetype opcode;\n+        (void)script.GetOp(pc, opcode);\n+        std::vector<uint8_t> data;\n+        (void)script.GetOp(pc, opcode, data);\n+        (void)script.IsPushOnly(pc);\n+    }\n+    {\n+        int version;\n+        std::vector<uint8_t> program;\n+        (void)script.IsWitnessProgram(version, program);\n+    }\n }"
      }
    ]
  }
]