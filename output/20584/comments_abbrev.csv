DrahtBot,2020-12-09 16:09:35,<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\nüïµÔ∏è @sipa has been requested to review this pull request as specified in the REVIEWERS file.,https://github.com/bitcoin/bitcoin/pull/20584#issuecomment-741874638,741874638,
DrahtBot,2020-12-17 21:02:46,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20864 (net: Move SocketSendData lock annotation to header by MarcoFalke)\n* #20833 (rpc/validation: enable packages throu",https://github.com/bitcoin/bitcoin/pull/20584#issuecomment-747700159,747700159,
ajtowns,2021-01-07 01:35:04,"ACK 31b136e5802e1b1e5f9a9589736afe0652f34da2\n\nDon't double negatives? (""Declare de facto const reference variables/member functions as const"" -- might be worth updating the PR title at least if you don't need to invalidate acks for some other reason)",https://github.com/bitcoin/bitcoin/pull/20584#issuecomment-755827261,755827261,
jonatack,2020-12-07 11:53:53,"1c65c075 not saying it's wrong, but this change to const member function for `net.{h,cpp}::CConnman::InactivityCheck`, in which `pnode->fDisconnect` can be mutated, I find somewhat odd in terms of communicated intent",https://github.com/bitcoin/bitcoin/pull/20584#discussion_r537447677,537447677,src/net.cpp
practicalswift,2020-12-08 10:04:21,"Given `c` of type `CConnman` do we agree that the observable state of `c` is unaffected by `c.InactivityCheck(p)`? :)\n\nThat `p` can be mutated by `c.InactivityCheck(p)` shouldn't be odd since that follows from the signature, no? :)",https://github.com/bitcoin/bitcoin/pull/20584#discussion_r538201877,538201877,src/net.cpp
