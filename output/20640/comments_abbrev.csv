DrahtBot,2020-12-13 06:45:06,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23497](https://github.com/bitcoin/bitcoin/pull/23497) (Add `src/node/` and `src/wallet/` code to `node::` and `wallet::`",https://github.com/bitcoin/bitcoin/pull/20640#issuecomment-743962460,743962460,
theStack,2020-12-27 19:29:22,"Force-pushed with the proposed changes by @pox (see https://github.com/bitcoin/bitcoin/pull/20640#discussion_r546194751), introducing new constants `RANDOM_CHANGE_POSITION` to be used as second parameter for `CWallet::CreateTransaction`.",https://github.com/bitcoin/bitcoin/pull/20640#issuecomment-751506956,751506956,
pox,2020-12-28 05:02:26,"reACK 5865c38\nüôè",https://github.com/bitcoin/bitcoin/pull/20640#issuecomment-751575553,751575553,
theStack,2020-12-30 20:52:30,"Force-pushed with changes [as suggested by practicalswift](https://github.com/bitcoin/bitcoin/pull/20640#discussion_r549173268), using explicit datatype `std::optional<CreatedTransactionalResult>` rather instead of `auto` for storing return values of `CreateTransaction{Internal}()`. Should be straight-forward to re-review, see [range-diff](https://github.com/bitcoin/bitcoin/compare/5865c38c6a3dd6a",https://github.com/bitcoin/bitcoin/pull/20640#issuecomment-752754743,752754743,
theStack,2021-03-01 00:11:11,Rebased on master.,https://github.com/bitcoin/bitcoin/pull/20640#issuecomment-787552800,787552800,
theStack,2021-03-31 18:38:38,"Rebased on master and changed code to return uninitialized values explicitely via `return std::nullopt` rather than `return {}` (see https://github.com/bitcoin/bitcoin/pull/21498, https://github.com/bitcoin/bitcoin/pull/21415#issuecomment-800236640 for further explanation why this is preferred).",https://github.com/bitcoin/bitcoin/pull/20640#issuecomment-811327725,811327725,
theStack,2021-05-29 12:17:43,Rebased on master.,https://github.com/bitcoin/bitcoin/pull/20640#issuecomment-850823401,850823401,
theStack,2021-06-09 15:44:18,"Rebased on master again. (This time it was a bit more complex, as the involved methods have moved from `wallet/wallet.cpp` to `wallet/spend.cpp`).",https://github.com/bitcoin/bitcoin/pull/20640#issuecomment-857817383,857817383,
theStack,2021-09-10 20:31:42,Rebased on master.,https://github.com/bitcoin/bitcoin/pull/20640#issuecomment-917193358,917193358,
theStack,2021-10-29 00:08:02,Rebased on master again.,https://github.com/bitcoin/bitcoin/pull/20640#issuecomment-954310439,954310439,
pox,2020-12-19 05:27:43,"While it's arguably not, strictly speaking, part of the proposed change, the comment about the change position parameter that's being maintained here is a bit misleading. This is a bit nit-picky, so bare with me please, but I think it's more appropriate to:\n1. Use a const instead of inline comment in order to convey the meaning. e.g. `const int RANDOM_CHANGE_POSITION = -1`). This value is used m",https://github.com/bitcoin/bitcoin/pull/20640#discussion_r546194751,546194751,src/wallet/feebumper.cpp
pox,2020-12-19 05:33:54,This is a lot more readable indeed! üëç,https://github.com/bitcoin/bitcoin/pull/20640#discussion_r546195248,546195248,src/wallet/wallet.cpp
theStack,2020-12-27 19:26:21,"Thanks a lot for reviewing, good point! I probably was a bit over-enthusiastic in getting rid of as many variables as possible before the call to `CreateTransaction` ;-) Introducing a `RANDOM_CHANGE_POSITION` constant makes a lot of sense to me, see latest force-push of the second commit. Not sure yet if putting the constant into the header is a good idea, as it is only used for one single method ",https://github.com/bitcoin/bitcoin/pull/20640#discussion_r549154793,549154793,src/wallet/feebumper.cpp
practicalswift,2020-12-27 22:50:30,"Nit: Using `auto` here obscures the fact that `txr` is an optional. I think being explicit about the optionality is better in order to avoid mistakes in the future.\n\nApplies throughout this PR.",https://github.com/bitcoin/bitcoin/pull/20640#discussion_r549173268,549173268,src/wallet/feebumper.cpp
theStack,2020-12-30 20:47:52,Thanks for reviewing! Agree that being explicit is better here. Done.,https://github.com/bitcoin/bitcoin/pull/20640#discussion_r550322819,550322819,src/wallet/feebumper.cpp
