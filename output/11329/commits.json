[
  {
    "sha": "fef5ec5f842a221905591002dd56bbdd4de78d88",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZWY1ZWM1Zjg0MmEyMjE5MDU1OTEwMDJkZDU2YmJkZDRkZTc4ZDg4",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-04-18T07:53:34Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-08-16T05:16:47Z"
      },
      "message": "[test] Test abortrescan command.",
      "tree": {
        "sha": "8301298400a70c116ef40602f083f6634f901b1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8301298400a70c116ef40602f083f6634f901b1a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fef5ec5f842a221905591002dd56bbdd4de78d88",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlmT1T8ACgkQV692LbM1\nMyKtUg//RHp2K2L+l46m6luFAcicQReoRLAaphnWcV8l5E+Iu403iZ9PX5YMznFR\nkwQ2dXn/AZh2CUJmCDBfOcyRD7FiRPTUMOvsolADOZq8wWUBdZHXzbiOgwL2pTUj\nLWgS+pQphHMZVAojTsCeIRfUyeHY/WwVP1GKu3c7RfPibHzLh9xdtGLJwUpQLWV8\n2YR/O/pk+1xuqWD7FCDIGAaAf2OzyRV9+y2gJUrpBTa4fCpVjYYAGtNXpAPOSKH1\nrytBbEEj+rKkTOGUm9d3Hgu3YsuOIxMKh8m/NMNpf32qT+CGtdySgc4cFLJYFd75\niCUCs4ZjLV8YoDApF4NOEM5srptNGEu21ao2bFQ9VAYZgMvICLu1MpbgqW7RgGeD\nnI+HCCctqpKLT9rZEpgrNZEFZrTSGbGxXcZUwHIBNfMFUxURJbc0Tcn/kJ+JnHW1\nx7ksI0bii0z0YhaRFiHoHdNu41s7fcPWzchI9ZnnIZ46+mD0zBj+JVdP/vqrH4K7\nlWjIywUZCZgA2DZIoaVgFTpVsrKvdmHGRCoUmyzTwKM2OQ6MMkCZNdEOFPpum9Cm\nw5Q7esMAFRCbIZ3Rnc3PSD6PGdfHylTpq/STNEyqAtj9LwVfQ1hobqXHuoG0AdW3\nF/+BibWlj+l8zkAtjogAnLdm5tSbLbT9KVOoZ8THxMEaani90Kw=\n=b9j0\n-----END PGP SIGNATURE-----",
        "payload": "tree 8301298400a70c116ef40602f083f6634f901b1a\nparent e526ca6284b9e13be1b912b80dd73a34e739b539\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1492502014 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1502860607 +0900\n\n[test] Test abortrescan command.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fef5ec5f842a221905591002dd56bbdd4de78d88",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fef5ec5f842a221905591002dd56bbdd4de78d88",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fef5ec5f842a221905591002dd56bbdd4de78d88/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e526ca6284b9e13be1b912b80dd73a34e739b539",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e526ca6284b9e13be1b912b80dd73a34e739b539",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e526ca6284b9e13be1b912b80dd73a34e739b539"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 76,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6b5c5430abe325d82d12b4ac71b5fa512feb26c2",
        "filename": "test/functional/import-abort-rescan.py",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fef5ec5f842a221905591002dd56bbdd4de78d88/test/functional/import-abort-rescan.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fef5ec5f842a221905591002dd56bbdd4de78d88/test/functional/import-abort-rescan.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/import-abort-rescan.py?ref=fef5ec5f842a221905591002dd56bbdd4de78d88",
        "patch": "@@ -0,0 +1,75 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test wallet import RPCs.\n+\n+Test rescan behavior of importprivkey when aborted. The test ensures that:\n+1. The abortrescan command indeed stops the rescan process.\n+2. Subsequent rescan catches the aborted address UTXO\n+\"\"\"\n+\n+from decimal import Decimal\n+import threading # for bg importprivkey\n+import time      # for sleep\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (assert_equal, get_rpc_proxy)\n+\n+class ImportAbortRescanTest(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 2\n+\n+    def run_test(self):\n+        # Generate for BTC\n+        self.nodes[0].generate(300)\n+        self.log.info(\"Creating blocks with transactions ...\")\n+        # Make blocks with spam to cause rescan delay\n+        for i in range(200):\n+            if i % 50 == 0:\n+                self.log.info(\"... %2.f%%\", 100.0 / 200.0 * i)\n+            addr = self.nodes[0].getnewaddress()\n+            for j in range(10):\n+                self.nodes[0].sendtoaddress(addr, 0.1)\n+            self.nodes[0].generate(1)\n+        self.log.info(\"Sending to shared address ...\")\n+        addr = self.nodes[0].getnewaddress()\n+        privkey = self.nodes[0].dumpprivkey(addr)\n+        self.nodes[0].sendtoaddress(addr, 0.123)\n+        self.nodes[0].generate(10) # mature tx\n+        self.sync_all()\n+        balances = [n.getbalance() for n in self.nodes]\n+\n+        # Import this address in the background ...\n+        self.log.info(\"Importing address in background thread ...\")\n+        node1ref = get_rpc_proxy(self.nodes[1].url, 1, timeout=600)\n+        importthread = threading.Thread(target=node1ref.importprivkey, args=[privkey])\n+        importthread.start()\n+        # ... then abort rescan; try a bunch until abortres becomes true,\n+        # because we will start checking before above thread starts processing\n+        self.log.info(\"Attempting to abort scan ...\")\n+        for i in range(2000):\n+            time.sleep(0.001)\n+            abortres = self.nodes[1].abortrescan()\n+            if abortres:\n+                break\n+        assert abortres, \"failed to abort rescan within allotted time\"\n+        self.log.info(\"Waiting for import thread to die ...\")\n+        # import should die soon\n+        for i in range(10):\n+            time.sleep(0.1)\n+            deadres = not importthread.isAlive()\n+            if deadres:\n+                break\n+\n+        assert deadres, \"importthread did not die soon enough\"\n+        # Node 1 should not have gained any balance since the start\n+        assert_equal(self.nodes[1].getbalance(), balances[1])\n+\n+        # Import a different address and let it run\n+        self.nodes[1].importprivkey(self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress()))\n+        # Expect original privkey to now also be discovered and added to balance\n+        assert_equal(self.nodes[1].getbalance(), Decimal(\"0.123\") + Decimal(balances[1]))\n+\n+if __name__ == \"__main__\":\n+    ImportAbortRescanTest().main()"
      },
      {
        "sha": "ea8b4254b031574e77dd170452f1f0554024eaf0",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fef5ec5f842a221905591002dd56bbdd4de78d88/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fef5ec5f842a221905591002dd56bbdd4de78d88/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=fef5ec5f842a221905591002dd56bbdd4de78d88",
        "patch": "@@ -130,6 +130,7 @@\n     'maxuploadtarget.py',\n     'mempool_packages.py',\n     'dbcrash.py',\n+    'import-abort-rescan.py',\n     # vv Tests less than 2m vv\n     'bip68-sequence.py',\n     'getblocktemplate_longpoll.py',"
      }
    ]
  },
  {
    "sha": "516944a5755b286b48422e0cd1ed140baffe83b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MTY5NDRhNTc1NWIyODZiNDg0MjJlMGNkMWVkMTQwYmFmZmU4M2I1",
    "commit": {
      "author": {
        "name": "Cristian Mircea Messel",
        "email": "mess110@gmail.com",
        "date": "2017-09-14T16:06:59Z"
      },
      "committer": {
        "name": "Cristian Mircea Messel",
        "email": "mess110@gmail.com",
        "date": "2017-09-14T16:06:59Z"
      },
      "message": "fix mentioned nits and test for False",
      "tree": {
        "sha": "f79e892a6e7c521f0ffc2c067133d64cadee1c58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f79e892a6e7c521f0ffc2c067133d64cadee1c58"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/516944a5755b286b48422e0cd1ed140baffe83b5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/516944a5755b286b48422e0cd1ed140baffe83b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/516944a5755b286b48422e0cd1ed140baffe83b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/516944a5755b286b48422e0cd1ed140baffe83b5/comments",
    "author": {
      "login": "mess110",
      "id": 226170,
      "node_id": "MDQ6VXNlcjIyNjE3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/226170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mess110",
      "html_url": "https://github.com/mess110",
      "followers_url": "https://api.github.com/users/mess110/followers",
      "following_url": "https://api.github.com/users/mess110/following{/other_user}",
      "gists_url": "https://api.github.com/users/mess110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mess110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mess110/subscriptions",
      "organizations_url": "https://api.github.com/users/mess110/orgs",
      "repos_url": "https://api.github.com/users/mess110/repos",
      "events_url": "https://api.github.com/users/mess110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mess110/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mess110",
      "id": 226170,
      "node_id": "MDQ6VXNlcjIyNjE3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/226170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mess110",
      "html_url": "https://github.com/mess110",
      "followers_url": "https://api.github.com/users/mess110/followers",
      "following_url": "https://api.github.com/users/mess110/following{/other_user}",
      "gists_url": "https://api.github.com/users/mess110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mess110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mess110/subscriptions",
      "organizations_url": "https://api.github.com/users/mess110/orgs",
      "repos_url": "https://api.github.com/users/mess110/repos",
      "events_url": "https://api.github.com/users/mess110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mess110/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fef5ec5f842a221905591002dd56bbdd4de78d88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fef5ec5f842a221905591002dd56bbdd4de78d88",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fef5ec5f842a221905591002dd56bbdd4de78d88"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 9,
      "deletions": 8
    },
    "files": [
      {
        "sha": "77e6ffab661af3df9402a093f70a2eee6a16695c",
        "filename": "test/functional/import-abort-rescan.py",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/516944a5755b286b48422e0cd1ed140baffe83b5/test/functional/import-abort-rescan.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/516944a5755b286b48422e0cd1ed140baffe83b5/test/functional/import-abort-rescan.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/import-abort-rescan.py?ref=516944a5755b286b48422e0cd1ed140baffe83b5",
        "patch": "@@ -5,19 +5,19 @@\n \"\"\"Test wallet import RPCs.\n \n Test rescan behavior of importprivkey when aborted. The test ensures that:\n-1. The abortrescan command indeed stops the rescan process.\n-2. Subsequent rescan catches the aborted address UTXO\n+- The abortrescan command indeed stops the rescan process.\n+- Subsequent rescan catches the aborted address UTXO.\n \"\"\"\n \n+import threading\n from decimal import Decimal\n-import threading # for bg importprivkey\n-import time      # for sleep\n+from time import sleep\n+\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (assert_equal, get_rpc_proxy)\n \n class ImportAbortRescanTest(BitcoinTestFramework):\n-    def __init__(self):\n-        super().__init__()\n+    def set_test_params(self):\n         self.num_nodes = 2\n \n     def run_test(self):\n@@ -49,15 +49,16 @@ def run_test(self):\n         # because we will start checking before above thread starts processing\n         self.log.info(\"Attempting to abort scan ...\")\n         for i in range(2000):\n-            time.sleep(0.001)\n+            sleep(0.001)\n             abortres = self.nodes[1].abortrescan()\n             if abortres:\n+                assert(not self.nodes[1].abortrescan())\n                 break\n         assert abortres, \"failed to abort rescan within allotted time\"\n         self.log.info(\"Waiting for import thread to die ...\")\n         # import should die soon\n         for i in range(10):\n-            time.sleep(0.1)\n+            sleep(0.1)\n             deadres = not importthread.isAlive()\n             if deadres:\n                 break"
      }
    ]
  }
]