[
  {
    "sha": "fffc49f7122ec1566e7727b50243f75150d54782",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZmZjNDlmNzEyMmVjMTU2NmU3NzI3YjUwMjQzZjc1MTUwZDU0Nzgy",
    "commit": {
      "author": {
        "name": "CryptoGraphyBTC",
        "email": "62628766+amanciojsilvjr@users.noreply.github.com",
        "date": "2021-06-21T21:21:08Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-06-21T21:21:08Z"
      },
      "message": "Create Bitcoin<>nuclear.defense",
      "tree": {
        "sha": "71cfc4da4922ab4e5e8b31f1bd7fd5d7ee944ff9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/71cfc4da4922ab4e5e8b31f1bd7fd5d7ee944ff9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fffc49f7122ec1566e7727b50243f75150d54782",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg0QLECRBK7hj4Ov3rIwAAqAEIABw3UPxOW8aLqPmzdTJsdTuh\nx1Efx7CsYhcvrEtCyo/xDGChqxr3zb36QLjtcm6Fyt81zBynZCDLUMb9oWj+wlIQ\nnCcgVUB8ZLd3HhJ9tEaaWinhaGLsyq79VTicUZDkLaBbDq+Jh1mbaLVEi/MZyM9W\nqZaE2v2HjC9ISdY78jeoAr8TpF6B/skIvgVjaxCsij2ZcI2f9YhHCzJEjW39yr8Y\nFQeoHTGazAgUZOn3f8xy8kpxCmDqoQK2Wlm+etIcaJBqEqmH8P2bMqdUdNEwOMY9\n8SbLyjEUkOk+C8vC5q/OX38oC6mnrTdYHqJVFUo26ozOsy0/50AVLc8p3JDLinI=\n=ZGCQ\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 71cfc4da4922ab4e5e8b31f1bd7fd5d7ee944ff9\nparent 398dd678338971d2189934713c83c184742f293f\nauthor CryptoGraphyBTC <62628766+amanciojsilvjr@users.noreply.github.com> 1624310468 -0300\ncommitter GitHub <noreply@github.com> 1624310468 -0300\n\nCreate Bitcoin<>nuclear.defense"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fffc49f7122ec1566e7727b50243f75150d54782",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fffc49f7122ec1566e7727b50243f75150d54782",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fffc49f7122ec1566e7727b50243f75150d54782/comments",
    "author": {
      "login": "amanciojsilvjr",
      "id": 62628766,
      "node_id": "MDQ6VXNlcjYyNjI4NzY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/62628766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amanciojsilvjr",
      "html_url": "https://github.com/amanciojsilvjr",
      "followers_url": "https://api.github.com/users/amanciojsilvjr/followers",
      "following_url": "https://api.github.com/users/amanciojsilvjr/following{/other_user}",
      "gists_url": "https://api.github.com/users/amanciojsilvjr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amanciojsilvjr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amanciojsilvjr/subscriptions",
      "organizations_url": "https://api.github.com/users/amanciojsilvjr/orgs",
      "repos_url": "https://api.github.com/users/amanciojsilvjr/repos",
      "events_url": "https://api.github.com/users/amanciojsilvjr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amanciojsilvjr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "398dd678338971d2189934713c83c184742f293f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/398dd678338971d2189934713c83c184742f293f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/398dd678338971d2189934713c83c184742f293f"
      }
    ],
    "stats": {
      "total": 223,
      "additions": 223,
      "deletions": 0
    },
    "files": [
      {
        "sha": "34abf73ba9aad28a9452c40b5d9d3fa332c24a11",
        "filename": "Bitcoin<>nuclear.defense",
        "status": "added",
        "additions": 223,
        "deletions": 0,
        "changes": 223,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fffc49f7122ec1566e7727b50243f75150d54782/Bitcoin%3C%3Enuclear.defense",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fffc49f7122ec1566e7727b50243f75150d54782/Bitcoin%3C%3Enuclear.defense",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Bitcoin%3C%3Enuclear.defense?ref=fffc49f7122ec1566e7727b50243f75150d54782",
        "patch": "@@ -0,0 +1,223 @@\n+\n+\n+Pull requests without a rationale and clear improvement may be closed\n+immediately.\n+\n+GUI-related pull requests should be opened against\n+https://github.com/bitcoin-core/Amanciojsilvjr\n+first. See CONTRIBUTING.md\n+Skip to content\n+chaincodelabs\n+/\n+libmultiprocess\n+Code\n+Issues\n+10\n+Pull requests\n+Actions\n+Projects\n+Wiki\n+Security\n+Insights\n+libmultiprocess/example/CMakeLists.txt\n+@ryanofsky\n+ryanofsky Add standalone example with 3 processes\n+\u2026\n+ 1 contributor\n+164 lines (157 sloc)  5.12 KB\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+add_custom_command(\n+  OUTPUT\n+    init.capnp.h\n+    init.capnp.c++\n+    init.capnp.proxy.h\n+    init.capnp.proxy-server.c++\n+    init.capnp.proxy-client.c++\n+    init.capnp.proxy-types.c++\n+    init.capnp.proxy-types.h\n+  COMMAND mpgen \"${CMAKE_CURRENT_SOURCE_DIR}\" \"${CMAKE_CURRENT_SOURCE_DIR}\" \"${CMAKE_CURRENT_SOURCE_DIR}/init.capnp\" \"${CMAKE_SOURCE_DIR}/include\" \"${capnp_PREFIX}/include\"\n+  DEPENDS init.capnp mpgen\n+)\n+\n+add_custom_command(\n+  OUTPUT\n+    calculator.capnp.h\n+    calculator.capnp.c++\n+    calculator.capnp.proxy.h\n+    calculator.capnp.proxy-server.c++\n+    calculator.capnp.proxy-client.c++\n+    calculator.capnp.proxy-types.c++\n+    calculator.capnp.proxy-types.h\n+  COMMAND mpgen \"${CMAKE_CURRENT_SOURCE_DIR}\" \"${CMAKE_CURRENT_SOURCE_DIR}\" \"${CMAKE_CURRENT_SOURCE_DIR}/calculator.capnp\" \"${CMAKE_SOURCE_DIR}/include\" \"${capnp_PREFIX}/include\"\n+  DEPENDS calculator.capnp mpgen\n+)\n+\n+add_executable(mpcalculator\n+  calculator.capnp.h\n+  calculator.capnp.c++\n+  calculator.capnp.proxy.h\n+  calculator.capnp.proxy-server.c++\n+  calculator.capnp.proxy-client.c++\n+  calculator.capnp.proxy-types.c++\n+  calculator.capnp.proxy-types.h\n+  calculator.cpp\n+  init.capnp.h\n+  init.capnp.c++\n+  init.capnp.proxy.h\n+  init.capnp.proxy-server.c++\n+  init.capnp.proxy-client.c++\n+  init.capnp.proxy-types.c++\n+  init.capnp.proxy-types.h\n+  printer.capnp.h\n+  printer.capnp.c++\n+  printer.capnp.proxy.h\n+  printer.capnp.proxy-server.c++\n+  printer.capnp.proxy-client.c++\n+  printer.capnp.proxy-types.c++\n+  printer.capnp.proxy-types.h\n+)\n+target_include_directories(mpcalculator PUBLIC\n+  ${CAPNP_INCLUDE_DIRECTORY}\n+  ${CMAKE_CURRENT_SOURCE_DIR}\n+  ${CMAKE_CURRENT_BINARY_DIR}\n+)\n+target_link_libraries(mpcalculator PRIVATE CapnProto::capnp)\n+target_link_libraries(mpcalculator PRIVATE CapnProto::capnp-rpc)\n+target_link_libraries(mpcalculator PRIVATE CapnProto::kj)\n+target_link_libraries(mpcalculator PRIVATE CapnProto::kj-async)\n+target_link_libraries(mpcalculator PRIVATE Threads::Threads)\n+target_link_libraries(mpcalculator PRIVATE multiprocess)\n+set_target_properties(mpcalculator PROPERTIES\n+  CXX_STANDARD 17\n+  CXX_STANDARD_REQUIRED YES)\n+\n+add_custom_command(\n+  OUTPUT\n+    printer.capnp.h\n+    printer.capnp.c++\n+    printer.capnp.proxy.h\n+    printer.capnp.proxy-server.c++\n+    printer.capnp.proxy-client.c++\n+    printer.capnp.proxy-types.c++\n+    printer.capnp.proxy-types.h\n+  COMMAND mpgen \"${CMAKE_CURRENT_SOURCE_DIR}\" \"${CMAKE_CURRENT_SOURCE_DIR}\" \"${CMAKE_CURRENT_SOURCE_DIR}/printer.capnp\" \"${CMAKE_SOURCE_DIR}/include\" \"${capnp_PREFIX}/include\"\n+  DEPENDS printer.capnp mpgen\n+)\n+\n+add_executable(mpprinter\n+  calculator.capnp.c++\n+  calculator.capnp.h\n+  calculator.capnp.proxy-client.c++\n+  calculator.capnp.proxy-server.c++\n+  calculator.capnp.proxy-types.c++\n+  calculator.capnp.proxy-types.h\n+  calculator.capnp.proxy.h\n+  init.capnp.h\n+  init.capnp.c++\n+  init.capnp.proxy.h\n+  init.capnp.proxy-server.c++\n+  init.capnp.proxy-client.c++\n+  init.capnp.proxy-types.c++\n+  init.capnp.proxy-types.h\n+  printer.capnp.h\n+  printer.capnp.c++\n+  printer.capnp.proxy.h\n+  printer.capnp.proxy-server.c++\n+  printer.capnp.proxy-client.c++\n+  printer.capnp.proxy-types.c++\n+  printer.capnp.proxy-types.h\n+  printer.cpp\n+)\n+target_include_directories(mpprinter PUBLIC\n+  ${CAPNP_INCLUDE_DIRECTORY}\n+  ${CMAKE_CURRENT_SOURCE_DIR}\n+  ${CMAKE_CURRENT_BINARY_DIR}\n+)\n+target_link_libraries(mpprinter PRIVATE CapnProto::capnp)\n+target_link_libraries(mpprinter PRIVATE CapnProto::capnp-rpc)\n+target_link_libraries(mpprinter PRIVATE CapnProto::kj)\n+target_link_libraries(mpprinter PRIVATE CapnProto::kj-async)\n+target_link_libraries(mpprinter PRIVATE Threads::Threads)\n+target_link_libraries(mpprinter PRIVATE multiprocess)\n+set_target_properties(mpprinter PROPERTIES\n+  CXX_STANDARD 17\n+  CXX_STANDARD_REQUIRED YES)\n+\n+add_executable(mpexample\n+  calculator.capnp.c++\n+  calculator.capnp.h\n+  calculator.capnp.proxy-client.c++\n+  calculator.capnp.proxy-server.c++\n+  calculator.capnp.proxy-types.c++\n+  calculator.capnp.proxy-types.h\n+  calculator.capnp.proxy.h\n+  init.capnp.c++\n+  init.capnp.h\n+  init.capnp.proxy-client.c++\n+  init.capnp.proxy-server.c++\n+  init.capnp.proxy-types.c++\n+  init.capnp.proxy-types.h\n+  init.capnp.proxy.h\n+  printer.capnp.h\n+  printer.capnp.c++\n+  printer.capnp.proxy.h\n+  printer.capnp.proxy-server.c++\n+  printer.capnp.proxy-client.c++\n+  printer.capnp.proxy-types.c++\n+  printer.capnp.proxy-types.h\n+  printer.h\n+  calculator.h\n+  example.cpp\n+)\n+target_include_directories(mpexample PUBLIC\n+  ${CAPNP_INCLUDE_DIRECTORY}\n+  ${CMAKE_CURRENT_SOURCE_DIR}\n+  ${CMAKE_CURRENT_BINARY_DIR}\n+)\n+target_link_libraries(mpexample PRIVATE CapnProto::capnp)\n+target_link_libraries(mpexample PRIVATE CapnProto::capnp-rpc)\n+target_link_libraries(mpexample PRIVATE CapnProto::kj)\n+target_link_libraries(mpexample PRIVATE CapnProto::kj-async)\n+target_link_libraries(mpexample PRIVATE Threads::Threads)\n+target_link_libraries(mpexample PRIVATE multiprocess)\n+target_link_libraries(mpexample PRIVATE stdc++fs)\n+set_target_properties(mpexample PROPERTIES\n+  CXX_STANDARD 17\n+  CXX_STANDARD_REQUIRED YES)\n+\n+\n+<!--\n+Please provide clear motivation for your patch and explain how it improves\n+Bitcoin Core user experience or Bitcoin Core developer experience\n+significantly:\n+\n+* Any test improvements or new tests that improve coverage are always welcome.\n+* All other changes should have accompanying unit tests (see `src/test/`) or\n+  functional tests (see `test/`). Contributors should note which tests cover\n+  modified code. If no tests exist for a region of modified code, new tests\n+  should accompany the change.\n+* Bug fixes are most welcome when they come with steps to reproduce or an\n+  explanation of the potential issue as well as reasoning for the way the bug\n+  was fixed.\n+* Features are welcome, but might be rejected due to design or scope issues.\n+  If a feature is based on a lot of dependencies, contributors should first\n+  consider building the system outside of Bitcoin Core, if possible.\n+* Refactoring changes are only accepted if they are required for a feature or\n+  bug fix or otherwise improve developer experience significantly. For example,\n+  most \"code style\" refactoring changes require a thorough explanation why they\n+  are useful, what downsides they have and why they *significantly* improve\n+  developer experience or avoid serious programming bugs. Note that code style\n+  is often a subjective matter. Unless they are explicitly mentioned to be\n+  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\n+  changes are usually rejected.\n+-->\n+\n+<!--\n+Bitcoin Core has a thorough review process and even the most trivial change\n+needs to pass a lot of eyes and requires non-zero or even substantial time\n+effort to review. There is a huge lack of active reviewers on the project, so\n+patches often sit for a long time.\n+-->"
      }
    ]
  }
]