gwillen,2020-06-23 03:04:46,"(It looks like the use of BDB_CFLAGS for overrides was introduced in #9705, switching from CPPFLAGS. @laanwj, is there a reason you preferred BDB_CFLAGS over BDB_CPPFLAGS here, or that was just how things happened to land?)",https://github.com/bitcoin/bitcoin/pull/19356#issuecomment-647879033,647879033,
DrahtBot,2020-06-23 04:51:07,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/19356#issuecomment-647905888,647905888,
Sjors,2020-06-23 09:02:11,"As suggested by @DrahtBot, #18870 is related, though it goes much further.\n\nYou may also want to rebase now that #19240 landed.\n\nI have both `berkeley-db@4` and `berkeley-db 18.1.32` installed via homebrew. With or without this change, it picks up 4.8. I'm not sure what to test for.",https://github.com/bitcoin/bitcoin/pull/19356#issuecomment-648010475,648010475,
gwillen,2020-06-23 10:05:56,"@Sjors: Thanks, per discussion with @theuni on IRC I'm going to rework the way I am doing this a bit anyway, so I'll rebase (thought it doesn't appear to conflict with #19240, fortunately.) I've been convinced that changing BDB_CFLAGS to BDB_CPPFLAGS, while tantalizing, is not actually correct.\n\nAs for testing -- in my case, I had bdb@4 unlinked, bdb 18 linked, and the result was that anything",https://github.com/bitcoin/bitcoin/pull/19356#issuecomment-648043611,648043611,
gwillen,2020-06-23 11:47:52,"Ok, removed the refactor of `BDB_CFLAGS`, now it's just the tiny change to rearrange the include order so that we pick up the unlinked brew-installed BDB 4 consistently if present.\n\nThis does interact with #18870 a bit, but I think they're mostly orthogonal -- that one affects what we're looking for, whereas this one affects what we do with it if we find it.",https://github.com/bitcoin/bitcoin/pull/19356#issuecomment-648094937,648094937,
gwillen,2020-06-24 05:09:15,@theuni Comments addressed!,https://github.com/bitcoin/bitcoin/pull/19356#issuecomment-648588723,648588723,
laanwj,2020-06-24 13:17:19,"> (It looks like the use of BDB_CFLAGS for overrides was introduced in #9705, switching from CPPFLAGS. @laanwj, is there a reason you preferred BDB_CFLAGS over BDB_CPPFLAGS here, or that was just how things happened to land?)\n\nI based it on some existing conventions in the build sytem. See `./configure --help`. All the additional library-specific flags have `_CFLAGS` and `_LIBS` pairs. None ha",https://github.com/bitcoin/bitcoin/pull/19356#issuecomment-648813801,648813801,
gwillen,2020-06-24 17:14:05,"> > (It looks like the use of BDB_CFLAGS for overrides was introduced in #9705, switching from CPPFLAGS. @laanwj, is there a reason you preferred BDB_CFLAGS over BDB_CPPFLAGS here, or that was just how things happened to land?)\n> \n> I based it on some existing conventions in the build sytem. See `./configure --help`. All the additional library-specific flags have `_CFLAGS` and `_LIBS` pairs. N",https://github.com/bitcoin/bitcoin/pull/19356#issuecomment-648950770,648950770,
theuni,2020-06-23 13:42:43,"This means that the user can't pass in a BDB_CFLAGS and _also_ have the brew path appended. I guess that's fine though, I can't imagine a use-cases that would require both.\n\nThough for completeness, we should make sure that BDB_LIBS is unset as well. Otherwise with something like ""./configure BDB_LIBS=/foo/bar -ldb_cxx-4.8"", the BDB_LIBS is completely ignored.",https://github.com/bitcoin/bitcoin/pull/19356#discussion_r444233478,444233478,configure.ac
theuni,2020-06-23 13:45:09,The AC_SUBST's here shouldn't be necessary. We're switching to BDB_CFLAGS and BDB_LIBS specifically to match the vars in the m4. The AC_ARG_VAR's in there will take care of AC_SUBST.,https://github.com/bitcoin/bitcoin/pull/19356#discussion_r444235289,444235289,configure.ac
gwillen,2020-06-23 21:39:16,"Yeah, that's true re: libs. I think it's incoherent to specify one and not the other, but in that case better for us to not be clever, and let the specified options go through. Will fix.\n\nI _think_ $DEPENDENCY_CFLAGS has no other obvious purpose than specifying include paths, in which case it wouldn't make sense for someone to specify it and _also_ want to pick up the brew path -- you'd want t",https://github.com/bitcoin/bitcoin/pull/19356#discussion_r444523986,444523986,configure.ac
gwillen,2020-06-23 21:39:56,"Good point. I was originally trying to keep this standalone and effectively independent of BITCOIN_FIND_BDB48, but now that this is not possible, the SUBSTs are redundant. Will remove.",https://github.com/bitcoin/bitcoin/pull/19356#discussion_r444524259,444524259,configure.ac
