[
  {
    "sha": "3e38023af724a76972d39cbccfb0bba4c54a0323",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZTM4MDIzYWY3MjRhNzY5NzJkMzljYmNjZmIwYmJhNGM1NGEwMzIz",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-04-13T12:32:19Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-04-23T00:40:24Z"
      },
      "message": "scripts: add PE .reloc section check to security-check.py",
      "tree": {
        "sha": "0c2704053585fd93d6b1c40dc5942a3061f8ab36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c2704053585fd93d6b1c40dc5942a3061f8ab36"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e38023af724a76972d39cbccfb0bba4c54a0323",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl6g4/gACgkQLuufXMCV\nJsFQBRAAsblxmFq/ucJkcxP+R1GBvM3ckRVsAfjaVnBhNXxoPGfSfCr9DN9kfcgs\numFNyGgiDaqQV1jhZCyLiW4F/W7YyzI4dME4HN8xdEi+hRXJagsHbh1PuUuiZZOt\nbj2SKCqQVZ9y2O9e62+rSHq6lzUMM4fNNNVP661KzrLgZ4qpBKCmfFhrpPn+yowx\nQoqU8lbFgXIfOlB2m3sAUmByXuGF4yubqIa8hy0fO4FjyKJosFA38h29WYScJyTr\ng6rO8d1Lx0WzxattYByatEqPuHJ+ODi8AChXGqC3+90aEl9thrm8WJuFlc1KaDiw\nd1fuKwfyEX82GAbCO1LcdefN6O4tWfnsXdOn3K0uC/oHV31flulHahHsw425XTK6\nSCTZ0CAJS3SbxfYT2dAOAo1qOoQZz0v8la+z1D8luXGo5l8CIOgLWzfCXslXaqcM\nFqPe9RczFAUaRbLgbO+DNmT+CQ4Q1nr2JDGNeOjcmNaxIgh3sHMT+k3grjyyXLjg\ndJhJn1b0AyJQ/7xgkZb/p+PXCAr+kg+BS8237dUZIvA2dC0nxwo3vW+K1cn7k0YF\nadahJa9NHKy/ARDnPeJKb1kxUv1k0gyvPeOYzfjDLK0McNj/YGVqpzD5xZ8VIZwa\nda+nHPs3RmJy2dkgkPi5TsHgM1CSyKDmnz2B0KxWsW7yviXhh0Y=\n=WIWU\n-----END PGP SIGNATURE-----",
        "payload": "tree 0c2704053585fd93d6b1c40dc5942a3061f8ab36\nparent 47b94a337e1aad0c347fdfecba999b963ab51006\nauthor fanquake <fanquake@gmail.com> 1586781139 +0800\ncommitter fanquake <fanquake@gmail.com> 1587602424 +0800\n\nscripts: add PE .reloc section check to security-check.py\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e38023af724a76972d39cbccfb0bba4c54a0323",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3e38023af724a76972d39cbccfb0bba4c54a0323",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e38023af724a76972d39cbccfb0bba4c54a0323/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "47b94a337e1aad0c347fdfecba999b963ab51006",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47b94a337e1aad0c347fdfecba999b963ab51006",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/47b94a337e1aad0c347fdfecba999b963ab51006"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 22,
      "deletions": 8
    },
    "files": [
      {
        "sha": "9444271bdce4e20aef4a2fa2e5309e117649e0ab",
        "filename": "contrib/devtools/security-check.py",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e38023af724a76972d39cbccfb0bba4c54a0323/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e38023af724a76972d39cbccfb0bba4c54a0323/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=3e38023af724a76972d39cbccfb0bba4c54a0323",
        "patch": "@@ -158,6 +158,17 @@ def check_PE_HIGH_ENTROPY_VA(executable):\n         reqbits = 0\n     return (bits & reqbits) == reqbits\n \n+def check_PE_RELOC_SECTION(executable) -> bool:\n+    '''Check for a reloc section. This is required for functional ASLR.'''\n+    p = subprocess.Popen([OBJDUMP_CMD, '-h',  executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    for line in stdout.splitlines():\n+        if '.reloc' in line:\n+            return True\n+    return False\n+\n def check_PE_NX(executable):\n     '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n     (arch,bits) = get_PE_dll_characteristics(executable)\n@@ -247,7 +258,8 @@ def check_MACHO_Canary(executable) -> bool:\n 'PE': [\n     ('DYNAMIC_BASE', check_PE_DYNAMIC_BASE),\n     ('HIGH_ENTROPY_VA', check_PE_HIGH_ENTROPY_VA),\n-    ('NX', check_PE_NX)\n+    ('NX', check_PE_NX),\n+    ('RELOC_SECTION', check_PE_RELOC_SECTION)\n ],\n 'MACHO': [\n     ('PIE', check_MACHO_PIE),"
      },
      {
        "sha": "ea70b279418f1e5be2427ec8c2c0736747646f38",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "modified",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e38023af724a76972d39cbccfb0bba4c54a0323/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e38023af724a76972d39cbccfb0bba4c54a0323/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=3e38023af724a76972d39cbccfb0bba4c54a0323",
        "patch": "@@ -49,13 +49,15 @@ def test_PE(self):\n         cc = 'x86_64-w64-mingw32-gcc'\n         write_testcode(source)\n \n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--no-nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va']),\n-            (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA NX'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va']),\n-            (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--no-high-entropy-va']),\n-            (1, executable+': failed HIGH_ENTROPY_VA'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va']),\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--no-nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA NX RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed HIGH_ENTROPY_VA RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va','-no-pie','-fno-PIE']),\n+            (1, executable+': failed RELOC_SECTION'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va','-pie','-fPIE']),\n             (0, ''))\n \n     def test_MACHO(self):"
      }
    ]
  }
]