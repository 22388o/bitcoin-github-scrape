DrahtBot,2020-04-04 06:46:46,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18470 (net: Make stale tip check time type-safe, extend test by MarcoFalke)\n\nIf you consider this pull request importan",https://github.com/bitcoin/bitcoin/pull/18521#issuecomment-608984856,608984856,
practicalswift,2020-04-04 17:27:42,"Concept ACK\n\nVery nice fuzzing harness! Keep them coming! :)",https://github.com/bitcoin/bitcoin/pull/18521#issuecomment-609062123,609062123,
practicalswift,2020-04-06 20:25:31,"Tested ACK fa6a00843447d53a5708ea3a629b9150cfe58be2\n\nThanks for adding a very nice harness!",https://github.com/bitcoin/bitcoin/pull/18521#issuecomment-610018121,610018121,
MarcoFalke,2020-04-06 20:26:34,Thanks for testing. Did you find the CVE after re-introducing it?,https://github.com/bitcoin/bitcoin/pull/18521#issuecomment-610018603,610018603,
practicalswift,2020-04-08 08:31:17,"@MarcoFalke \n\nYes :)\n\nLive demo:\n\n```\n$ mkdir -p process_messages/\n$ src/test/fuzz/process_messages process_messages/\nâ€¦\nbloom.cpp:45:69: runtime error: division by zero\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior bloom.cpp:45:69 in\nAddressSanitizer:DEADLYSIGNAL\n=================================================================\n==17357==ERROR: AddressSanitizer",https://github.com/bitcoin/bitcoin/pull/18521#issuecomment-610826738,610826738,
MarcoFalke,2020-04-08 16:15:34,"Going to go ahead and merge this. If someone has feedback or questions, you are welcome to leave them here.",https://github.com/bitcoin/bitcoin/pull/18521#issuecomment-611051980,611051980,
narula,2020-04-22 16:18:08,"As a data point, I was able to reproduce the CVE. It took about ~5-6 hours running 16 jobs.\n\n```\nbloom.cpp:45:69: runtime error: division by zero\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior bloom.cpp:45:69 in \nAddressSanitizer:DEADLYSIGNAL\n=================================================================\n==40871==ERROR: AddressSanitizer: FPE on unknown address 0x55931bfc0",https://github.com/bitcoin/bitcoin/pull/18521#issuecomment-617880540,617880540,
robot-visions,2020-04-12 05:22:33,"Could the fuzzer check ""interesting"" cases more quickly by choosing a random but valid command, instead of generating a random string of length `COMMAND_SIZE`?",https://github.com/bitcoin/bitcoin/pull/18521#discussion_r407148167,407148167,src/test/fuzz/process_messages.cpp
MarcoFalke,2020-04-12 12:21:25,"Good question. I think there is a trade-off here between giving the fuzz engine as much freedom to explore as possible at a potentially slight cost of performance (citation needed, giving more freedom could also increase efficiency).\n\nYour suggestion would involve enumerating all netmessage types in an array and then having the fuzz engine pick one from it. This is possible, but as soon as you",https://github.com/bitcoin/bitcoin/pull/18521#discussion_r407190532,407190532,src/test/fuzz/process_messages.cpp
robot-visions,2020-04-12 20:12:05,"Thanks for the really thorough explanation!  That tradeoff / your decision makes sense to me, especially since I didn't know that fuzz engines might do better than ""just generate random strings"".",https://github.com/bitcoin/bitcoin/pull/18521#discussion_r407246671,407246671,src/test/fuzz/process_messages.cpp
mzumsande,2020-04-15 00:19:18,"I agree as well that the merged version makes sense, but just out of interest I ran both versions (PR and a version which samples an array with all `NetMsgType`s currently defined in protocol.cpp ) in parallel with libfuzzer and it was the altered version which found the reintroduced CVE first after 2.3M iterations / 2 hours, while the PR version hadn't found it after 10M tries. \nI found it inte",https://github.com/bitcoin/bitcoin/pull/18521#discussion_r408509515,408509515,src/test/fuzz/process_messages.cpp
MarcoFalke,2020-04-15 00:53:18,How many workers did you run in parallel?,https://github.com/bitcoin/bitcoin/pull/18521#discussion_r408518950,408518950,src/test/fuzz/process_messages.cpp
mzumsande,2020-04-15 01:16:37,Just 1 for each version.,https://github.com/bitcoin/bitcoin/pull/18521#discussion_r408525052,408525052,src/test/fuzz/process_messages.cpp
MarcoFalke,2020-04-15 01:23:37,This sounds like a promising speed-up. I wouldn't object either having this one replaced or a new fuzz target with the array version.,https://github.com/bitcoin/bitcoin/pull/18521#discussion_r408526863,408526863,src/test/fuzz/process_messages.cpp
mzumsande,2020-04-15 01:33:40,"I'll do some more runs tomorrow, maybe I was just lucky. I don't have a good feeling for the variance of runtimes yet.",https://github.com/bitcoin/bitcoin/pull/18521#discussion_r408529541,408529541,src/test/fuzz/process_messages.cpp
MarcoFalke,2020-04-15 01:44:12,"I saw it vary by a factor or 5 or 10 in my tests last week, so it could very well be just noise",https://github.com/bitcoin/bitcoin/pull/18521#discussion_r408532343,408532343,src/test/fuzz/process_messages.cpp
