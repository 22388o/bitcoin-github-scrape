[
  {
    "sha": "428ac70095253225f64462ee15c595644747f376",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MjhhYzcwMDk1MjUzMjI1ZjY0NDYyZWUxNWM1OTU2NDQ3NDdmMzc2",
    "commit": {
      "author": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2019-08-21T23:19:51Z"
      },
      "committer": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2020-01-03T18:59:06Z"
      },
      "message": "Add VALIDATION to BCLog::LogFlags\n\nThis flag is for logging from within CValidationInterface (see #12994).\nA separate flag is desirable as the logging can be noisy and thus may\nneed to be disabled without affecting other logging.",
      "tree": {
        "sha": "6a1d87325639ddc58954e10b9603de251d04788b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a1d87325639ddc58954e10b9603de251d04788b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/428ac70095253225f64462ee15c595644747f376",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/428ac70095253225f64462ee15c595644747f376",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/428ac70095253225f64462ee15c595644747f376",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/428ac70095253225f64462ee15c595644747f376/comments",
    "author": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb862d7864cc4889285e1a3713e3864d667cf30a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb862d7864cc4889285e1a3713e3864d667cf30a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb862d7864cc4889285e1a3713e3864d667cf30a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e7cadead8138b5492ad7430ef415cf62f1a7408b",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/428ac70095253225f64462ee15c595644747f376/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/428ac70095253225f64462ee15c595644747f376/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=428ac70095253225f64462ee15c595644747f376",
        "patch": "@@ -162,6 +162,7 @@ const CLogCategoryDesc LogCategories[] =\n     {BCLog::COINDB, \"coindb\"},\n     {BCLog::QT, \"qt\"},\n     {BCLog::LEVELDB, \"leveldb\"},\n+    {BCLog::VALIDATION, \"validation\"},\n     {BCLog::ALL, \"1\"},\n     {BCLog::ALL, \"all\"},\n };"
      },
      {
        "sha": "9004093e4e33a0126e9706626ff0a14fd940972a",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/428ac70095253225f64462ee15c595644747f376/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/428ac70095253225f64462ee15c595644747f376/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=428ac70095253225f64462ee15c595644747f376",
        "patch": "@@ -54,6 +54,7 @@ namespace BCLog {\n         COINDB      = (1 << 18),\n         QT          = (1 << 19),\n         LEVELDB     = (1 << 20),\n+        VALIDATION  = (1 << 21),\n         ALL         = ~(uint32_t)0,\n     };\n "
      }
    ]
  },
  {
    "sha": "72f3227c83810936e7a334304e5fd7c6dab8e91b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MmYzMjI3YzgzODEwOTM2ZTdhMzM0MzA0ZTVmZDdjNmRhYjhlOTFi",
    "commit": {
      "author": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2020-01-03T19:32:22Z"
      },
      "committer": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2020-01-03T19:37:26Z"
      },
      "message": "Format CValidationState properly in all cases\n\nFormatStateMessage does not properly handle the case where\nCValidationState::IsValid() returns true. Use \"Valid\" for the state in\nthis case.",
      "tree": {
        "sha": "a8602fb4ba8ad989b38189b42e78b6eec7c1cfe1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8602fb4ba8ad989b38189b42e78b6eec7c1cfe1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72f3227c83810936e7a334304e5fd7c6dab8e91b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72f3227c83810936e7a334304e5fd7c6dab8e91b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/72f3227c83810936e7a334304e5fd7c6dab8e91b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72f3227c83810936e7a334304e5fd7c6dab8e91b/comments",
    "author": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "428ac70095253225f64462ee15c595644747f376",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/428ac70095253225f64462ee15c595644747f376",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/428ac70095253225f64462ee15c595644747f376"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "603db51d45a5a033bd91449cb81d0fd4eb18ddb8",
        "filename": "src/util/validation.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72f3227c83810936e7a334304e5fd7c6dab8e91b/src/util/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72f3227c83810936e7a334304e5fd7c6dab8e91b/src/util/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/validation.cpp?ref=72f3227c83810936e7a334304e5fd7c6dab8e91b",
        "patch": "@@ -11,6 +11,10 @@\n /** Convert ValidationState to a human-readable message for logging */\n std::string FormatStateMessage(const ValidationState &state)\n {\n+    if (state.IsValid()) {\n+        return \"Valid\";\n+    }\n+\n     return strprintf(\"%s%s\",\n         state.GetRejectReason(),\n         state.GetDebugMessage().empty() ? \"\" : \", \"+state.GetDebugMessage());"
      }
    ]
  },
  {
    "sha": "6edebacb2191373e76d79a4972d6192300976096",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZWRlYmFjYjIxOTEzNzNlNzZkNzlhNDk3MmQ2MTkyMzAwOTc2MDk2",
    "commit": {
      "author": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2020-01-03T19:38:44Z"
      },
      "committer": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2020-01-03T19:38:44Z"
      },
      "message": "Refactor FormatStateMessage for clarity\n\nAll cases of CValidationState were condensed into one strprintf call.\nThis is no longer suitable as more cases are added (e.g., IsValid).",
      "tree": {
        "sha": "e2c49ba8ead3a5689ac266aa7849ecf5f5e03e13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e2c49ba8ead3a5689ac266aa7849ecf5f5e03e13"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6edebacb2191373e76d79a4972d6192300976096",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6edebacb2191373e76d79a4972d6192300976096",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6edebacb2191373e76d79a4972d6192300976096",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6edebacb2191373e76d79a4972d6192300976096/comments",
    "author": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "72f3227c83810936e7a334304e5fd7c6dab8e91b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72f3227c83810936e7a334304e5fd7c6dab8e91b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/72f3227c83810936e7a334304e5fd7c6dab8e91b"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "ed9c108bb0964d28680a019296b1f644312cff2a",
        "filename": "src/util/validation.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6edebacb2191373e76d79a4972d6192300976096/src/util/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6edebacb2191373e76d79a4972d6192300976096/src/util/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/validation.cpp?ref=6edebacb2191373e76d79a4972d6192300976096",
        "patch": "@@ -8,16 +8,18 @@\n #include <consensus/validation.h>\n #include <tinyformat.h>\n \n-/** Convert ValidationState to a human-readable message for logging */\n std::string FormatStateMessage(const ValidationState &state)\n {\n     if (state.IsValid()) {\n         return \"Valid\";\n     }\n \n-    return strprintf(\"%s%s\",\n-        state.GetRejectReason(),\n-        state.GetDebugMessage().empty() ? \"\" : \", \"+state.GetDebugMessage());\n+    const std::string debug_message = state.GetDebugMessage();\n+    if (!debug_message.empty()) {\n+        return strprintf(\"%s, %s\", state.GetRejectReason(), debug_message);\n+    }\n+\n+    return state.GetRejectReason();\n }\n \n const std::string strMessageMagic = \"Bitcoin Signed Message:\\n\";"
      }
    ]
  },
  {
    "sha": "f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOWFiZjRhYjZkM2QzZTRkNGI3ZTkwNzIzMDIwYjU0MjJhMTQxYTZm",
    "commit": {
      "author": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2019-08-22T00:48:52Z"
      },
      "committer": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2020-01-03T19:49:21Z"
      },
      "message": "Add logging for CValidationInterface events\n\nThis could help debug issues where there may be race conditions at play,\nsuch as #12978.\n\nFixes #12994.",
      "tree": {
        "sha": "48a95956f7ead9e5f0d5051582aa8c5c60b564cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48a95956f7ead9e5f0d5051582aa8c5c60b564cb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f/comments",
    "author": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6edebacb2191373e76d79a4972d6192300976096",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6edebacb2191373e76d79a4972d6192300976096",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6edebacb2191373e76d79a4972d6192300976096"
      }
    ],
    "stats": {
      "total": 67,
      "additions": 55,
      "deletions": 12
    },
    "files": [
      {
        "sha": "fee2fabb8602f6f8de50c176028d97bd99e9930b",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 12,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
        "patch": "@@ -5,8 +5,13 @@\n \n #include <validationinterface.h>\n \n+#include <chain.h>\n+#include <consensus/validation.h>\n+#include <logging.h>\n #include <primitives/block.h>\n+#include <primitives/transaction.h>\n #include <scheduler.h>\n+#include <util/validation.h>\n \n #include <future>\n #include <unordered_map>\n@@ -110,52 +115,89 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n+// Use a macro instead of a function for conditional logging to prevent\n+// evaluating arguments when logging is not enabled.\n+//\n+// NOTE: The lambda captures all local variables by value.\n+#define ENQUEUE_AND_LOG_EVENT(event, fmt, name, ...)           \\\n+    do {                                                       \\\n+        auto local_name = (name);                              \\\n+        LOG_EVENT(\"Enqueuing \" fmt, local_name, __VA_ARGS__);  \\\n+        m_internals->m_schedulerClient.AddToProcessQueue([=] { \\\n+            LOG_EVENT(fmt, local_name, __VA_ARGS__);           \\\n+            event();                                           \\\n+        });                                                    \\\n+    } while (0)\n+\n+#define LOG_EVENT(fmt, ...) \\\n+    LogPrint(BCLog::VALIDATION, fmt \"\\n\", __VA_ARGS__)\n \n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n     // the chain actually updates. One way to ensure this is for the caller to invoke this signal\n     // in the same critical section where the chain is updated\n \n-    m_internals->m_schedulerClient.AddToProcessQueue([pindexNew, pindexFork, fInitialDownload, this] {\n+    auto event = [pindexNew, pindexFork, fInitialDownload, this] {\n         m_internals->UpdatedBlockTip(pindexNew, pindexFork, fInitialDownload);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: new block hash=%s fork block hash=%s (in IBD=%s)\", __func__,\n+                          pindexNew->GetBlockHash().ToString(),\n+                          pindexFork ? pindexFork->GetBlockHash().ToString() : \"null\",\n+                          fInitialDownload);\n }\n \n void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto event = [ptx, this] {\n         m_internals->TransactionAddedToMempool(ptx);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s\", __func__,\n+                          ptx->GetHash().ToString(),\n+                          ptx->GetWitnessHash().ToString());\n }\n \n void CMainSignals::TransactionRemovedFromMempool(const CTransactionRef &ptx) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+    auto event = [ptx, this] {\n         m_internals->TransactionRemovedFromMempool(ptx);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s\", __func__,\n+                          ptx->GetHash().ToString(),\n+                          ptx->GetWitnessHash().ToString());\n }\n \n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n+    auto event = [pblock, pindex, pvtxConflicted, this] {\n         m_internals->BlockConnected(pblock, pindex, *pvtxConflicted);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: block hash=%s block height=%d\", __func__,\n+                          pblock->GetHash().ToString(),\n+                          pindex->nHeight);\n }\n \n void CMainSignals::BlockDisconnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindex)\n {\n-    m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, this] {\n+    auto event = [pblock, pindex, this] {\n         m_internals->BlockDisconnected(pblock, pindex);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: block hash=%s block height=%d\", __func__,\n+                          pblock->GetHash().ToString(),\n+                          pindex->nHeight);\n }\n \n void CMainSignals::ChainStateFlushed(const CBlockLocator &locator) {\n-    m_internals->m_schedulerClient.AddToProcessQueue([locator, this] {\n+    auto event = [locator, this] {\n         m_internals->ChainStateFlushed(locator);\n-    });\n+    };\n+    ENQUEUE_AND_LOG_EVENT(event, \"%s: block hash=%s\", __func__,\n+                          locator.IsNull() ? \"null\" : locator.vHave.front().ToString());\n }\n \n void CMainSignals::BlockChecked(const CBlock& block, const BlockValidationState& state) {\n+    LOG_EVENT(\"%s: block hash=%s state=%s\", __func__,\n+              block.GetHash().ToString(), FormatStateMessage(state));\n     m_internals->BlockChecked(block, state);\n }\n \n void CMainSignals::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock> &block) {\n+    LOG_EVENT(\"%s: block hash=%s\", __func__, block->GetHash().ToString());\n     m_internals->NewPoWValidBlock(pindex, block);\n }"
      },
      {
        "sha": "cc24a0b60900a0889ddc9b3d6e7dfbee1b8ccd29",
        "filename": "test/lint/lint-format-strings.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f/test/lint/lint-format-strings.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f/test/lint/lint-format-strings.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-format-strings.py?ref=f9abf4ab6d3d3e4d4b7e90723020b5422a141a6f",
        "patch": "@@ -17,6 +17,7 @@\n     (\"src/index/base.cpp\", \"FatalError(const char* fmt, const Args&... args)\"),\n     (\"src/netbase.cpp\", \"LogConnectFailure(bool manual_connection, const char* fmt, const Args&... args)\"),\n     (\"src/util/system.cpp\", \"strprintf(_(COPYRIGHT_HOLDERS).translated, COPYRIGHT_HOLDERS_SUBSTITUTION)\"),\n+    (\"src/validationinterface.cpp\", \"LogPrint(BCLog::VALIDATION, fmt \\\"\\\\n\\\", __VA_ARGS__)\"),\n     (\"src/wallet/wallet.h\",  \"WalletLogPrintf(std::string fmt, Params... parameters)\"),\n     (\"src/wallet/wallet.h\", \"LogPrintf((\\\"%s \\\" + fmt).c_str(), GetDisplayName(), parameters...)\"),\n     (\"src/logging.h\", \"LogPrintf(const char* fmt, const Args&... args)\"),"
      }
    ]
  }
]