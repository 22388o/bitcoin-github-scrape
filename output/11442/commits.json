[
  {
    "sha": "9d30f54ef1c9412f2c71b89664952dd95b6ef959",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDMwZjU0ZWYxYzk0MTJmMmM3MWI4OTY2NDk1MmRkOTViNmVmOTU5",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2017-10-03T02:15:55Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2017-10-25T02:57:56Z"
      },
      "message": "[Docs] Update OpenBSD Build Instructions for OpenBSD 6.2",
      "tree": {
        "sha": "3aaac9802085206bc6b59d7e004e7b4ed07420f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3aaac9802085206bc6b59d7e004e7b4ed07420f3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d30f54ef1c9412f2c71b89664952dd95b6ef959",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAlnv/boACgkQLuufXMCV\nJsH5kg//eHHqh+1zd0hlRd46f8gVG+5YuyPFDflaCouFQidBK+fs1TXQuAhULiTk\nUneOUwfvaEf8zTxqd8lImuFfWbIQdzmAvFuonLwZkzo31VhOqMn9Wocmm1uGz9q4\ncWCfHaAcwIOjmTvdWGzl9QEaFc9jiWGeOvOIb4dLRjqHHWajTgiQZJGSkaoNEj81\nnVkRSVdoS31SQ9guZtk0p7TCtkRI1aF3cNTNZ9cAWneDIuhNltOiSs/wBlSEowgo\nduscQEyAHmU/WKTO5LDlqt1jc8FU/uz3qcVAZVQk0XupGjDiT1O7JtMhfquUR71y\nXC0QnzTSJs/yQAUQ2yuo5F7993OWFu7oVWwKmGHU4dtIProypuMuEUxd7HgXMUy6\nUd+lFAkVMq6d8WLe+ouBOc08uhSo5RskvFj8kMcncVTe6IqugHrUZa2VEmFjCUt+\nym0pD5pYofd10hcRiHA5G23FRnghnHRj/13WVxHgiUn9puSZSSNGgxK5O/HI7dks\nCyaJYvp2bkeeEMaZ1iYJUr9MVh1Kwo6FYnR00NUrPOgm6BbIXuIusmXmSYz91C0B\nQ/8xrYepvwJf5GiH4P+2CvlJ2RuZF/wScBX7iIQBTi/XBvkM1E3ttFQtIqvBGdjw\nyGykaCOqQTGtlU2EO11ZXqVf0w2Q44P2XJNAv2VNY4vWb3xw8T4=\n=CuRc\n-----END PGP SIGNATURE-----",
        "payload": "tree 3aaac9802085206bc6b59d7e004e7b4ed07420f3\nparent 892809309c1bc370677241a715e57a2744f94323\nauthor fanquake <fanquake@gmail.com> 1506996955 +0800\ncommitter fanquake <fanquake@gmail.com> 1508900276 +0800\n\n[Docs] Update OpenBSD Build Instructions for OpenBSD 6.2\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d30f54ef1c9412f2c71b89664952dd95b6ef959",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d30f54ef1c9412f2c71b89664952dd95b6ef959",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d30f54ef1c9412f2c71b89664952dd95b6ef959/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "892809309c1bc370677241a715e57a2744f94323",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/892809309c1bc370677241a715e57a2744f94323",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/892809309c1bc370677241a715e57a2744f94323"
      }
    ],
    "stats": {
      "total": 103,
      "additions": 22,
      "deletions": 81
    },
    "files": [
      {
        "sha": "760bb69b158a366bd0d0240271a6eda8446f02cd",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 22,
        "deletions": 81,
        "changes": 103,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d30f54ef1c9412f2c71b89664952dd95b6ef959/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d30f54ef1c9412f2c71b89664952dd95b6ef959/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=9d30f54ef1c9412f2c71b89664952dd95b6ef959",
        "patch": "@@ -1,76 +1,44 @@\n OpenBSD build guide\n ======================\n-(updated for OpenBSD 6.1)\n+(updated for OpenBSD 6.2)\n \n This guide describes how to build bitcoind and command-line utilities on OpenBSD.\n \n-As OpenBSD is most common as a server OS, we will not bother with the GUI.\n+OpenBSD is most commonly used as a server OS, so this guide does not contain instructions for building the GUI.\n \n Preparation\n -------------\n \n Run the following as root to install the base dependencies for building:\n \n ```bash\n-pkg_add gmake libtool libevent\n+pkg_add git gmake libevent libtool\n pkg_add autoconf # (select highest version, e.g. 2.69)\n pkg_add automake # (select highest version, e.g. 1.15)\n-pkg_add python # (select highest version, e.g. 3.5)\n+pkg_add python # (select highest version, e.g. 3.6)\n+pkg_add boost\n+\n+git clone https://github.com/bitcoin/bitcoin.git\n ```\n \n See [dependencies.md](dependencies.md) for a complete overview.\n \n GCC\n -------\n \n-The default C++ compiler that comes with OpenBSD 5.9 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Bitcoin Core, primarily as it has no C++11 support, but even before there were issues. So here we will be installing a newer compiler:\n+The default C++ compiler that comes with OpenBSD 6.2 is g++ 4.2.1. This version is old (from 2007), and is not able to compile the current version of Bitcoin Core because it has no C++11 support. We'll install a newer version of GCC:\n \n ```bash\n-pkg_add g++ # (select newest 4.x version, e.g. 4.9.3)\n-```\n-\n-This compiler will not overwrite the system compiler, it will be installed as `egcc` and `eg++` in `/usr/local/bin`.\n-\n-### Building boost\n-\n-Do not use `pkg_add boost`! The boost version installed thus is compiled using the `g++` compiler not `eg++`, which will result in a conflict between `/usr/local/lib/libestdc++.so.XX.0` and `/usr/lib/libstdc++.so.XX.0`, resulting in a test crash:\n-\n-    test_bitcoin:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n-    ...\n-    Segmentation fault (core dumped)\n+ pkg_add g++\n+ ```\n \n-This makes it necessary to build boost, or at least the parts used by Bitcoin Core, manually:\n-\n-```\n-# Pick some path to install boost to, here we create a directory within the bitcoin directory\n-BITCOIN_ROOT=$(pwd)\n-BOOST_PREFIX=\"${BITCOIN_ROOT}/boost\"\n-mkdir -p $BOOST_PREFIX\n-\n-# Fetch the source and verify that it is not tampered with\n-curl -o boost_1_64_0.tar.bz2 https://netcologne.dl.sourceforge.net/project/boost/boost/1.64.0/boost_1_64_0.tar.bz2\n-echo '7bcc5caace97baa948931d712ea5f37038dbb1c5d89b43ad4def4ed7cb683332 boost_1_64_0.tar.bz2' | sha256 -c\n-# MUST output: (SHA256) boost_1_64_0.tar.bz2: OK\n-tar -xjf boost_1_64_0.tar.bz2\n-\n-# Boost 1.64 needs one small patch for OpenBSD\n-cd boost_1_64_0\n-# Also here: https://gist.githubusercontent.com/laanwj/bf359281dc319b8ff2e1/raw/92250de8404b97bb99d72ab898f4a8cb35ae1ea3/patch-boost_test_impl_execution_monitor_ipp.patch\n-patch -p0 < /usr/ports/devel/boost/patches/patch-boost_test_impl_execution_monitor_ipp\n-\n-# Build w/ minimum configuration necessary for bitcoin\n-echo 'using gcc : : eg++ : <cxxflags>\"-fvisibility=hidden -fPIC\" <linkflags>\"\" <archiver>\"ar\" <striper>\"strip\"  <ranlib>\"ranlib\" <rc>\"\" : ;' > user-config.jam\n-config_opts=\"runtime-link=shared threadapi=pthread threading=multi link=static variant=release --layout=tagged --build-type=complete --user-config=user-config.jam -sNO_BZIP2=1\"\n-./bootstrap.sh --without-icu --with-libraries=chrono,filesystem,program_options,system,thread,test\n-./b2 -d2 -j2 -d1 ${config_opts} --prefix=${BOOST_PREFIX} stage\n-./b2 -d0 -j4 ${config_opts} --prefix=${BOOST_PREFIX} install\n-```\n+ This compiler will not overwrite the system compiler, it will be installed as `egcc` and `eg++` in `/usr/local/bin`.\n \n ### Building BerkeleyDB\n \n BerkeleyDB is only necessary for the wallet functionality. To skip this, pass `--disable-wallet` to `./configure`.\n \n-See \"Berkeley DB\" in [build_unix.md](build_unix.md) for instructions on how to build BerkeleyDB 4.8.\n+See \"Berkeley DB\" in [build-unix.md](build-unix.md#berkeley-db) for instructions on how to build BerkeleyDB 4.8.\n You cannot use the BerkeleyDB library from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n \n ```bash\n@@ -98,8 +66,8 @@ The standard ulimit restrictions in OpenBSD are very strict:\n \n     data(kbytes)         1572864\n \n-This is, unfortunately, no longer enough to compile some `.cpp` files in the project,\n-at least with gcc 4.9.3 (see issue https://github.com/bitcoin/bitcoin/issues/6658).\n+This, unfortunately, may no longer be enough to compile some `.cpp` files in the project,\n+at least with GCC 4.9.4 (see issue [#6658](https://github.com/bitcoin/bitcoin/issues/6658)).\n If your user is in the `staff` group the limit can be raised with:\n \n     ulimit -d 3000000\n@@ -118,59 +86,32 @@ export AUTOCONF_VERSION=2.69 # replace this with the autoconf version that you i\n export AUTOMAKE_VERSION=1.15 # replace this with the automake version that you installed\n ./autogen.sh\n ```\n-Make sure `BDB_PREFIX` and `BOOST_PREFIX` are set to the appropriate paths from the above steps.\n+Make sure `BDB_PREFIX` is set to the appropriate path from the above steps.\n \n To configure with wallet:\n ```bash\n-./configure --with-gui=no --with-boost=$BOOST_PREFIX \\\n-    CC=egcc CXX=eg++ CPP=ecpp \\\n+./configure --with-gui=no CC=egcc CXX=eg++ CPP=ecpp \\\n     BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\"\n ```\n \n To configure without wallet:\n ```bash\n-./configure --disable-wallet --with-gui=no --with-boost=$BOOST_PREFIX \\\n-    CC=egcc CXX=eg++ CPP=ecpp\n+./configure --disable-wallet --with-gui=no CC=egcc CXX=eg++ CPP=ecpp\n ```\n \n Build and run the tests:\n ```bash\n-gmake # can use -jX here for parallelism\n+gmake # use -jX here for parallelism\n gmake check\n ```\n \n-Clang (not currently working)\n+Clang\n ------------------------------\n \n-WARNING: This is outdated, needs to be updated for OpenBSD 6.0 and re-tried.\n-\n-Using a newer g++ results in linking the new code to a new libstdc++.\n-Libraries built with the old g++, will still import the old library.\n-This gives conflicts, necessitating rebuild of all C++ dependencies of the application.\n-\n-With clang this can - at least theoretically - be avoided because it uses the\n-base system's libstdc++.\n-\n ```bash\n-pkg_add llvm boost\n-```\n+pkg_add llvm\n \n-```bash\n ./configure --disable-wallet --with-gui=no CC=clang CXX=clang++\n-gmake\n+gmake # use -jX here for parallelism\n+gmake check\n ```\n-\n-However, this does not appear to work. Compilation succeeds, but link fails\n-with many 'local symbol discarded' errors:\n-\n-    local symbol 150: discarded in section `.text._ZN10tinyformat6detail14FormatIterator6finishEv' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n-    local symbol 151: discarded in section `.text._ZN10tinyformat6detail14FormatIterator21streamStateFromFormatERSoRjPKcii' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n-    local symbol 152: discarded in section `.text._ZN10tinyformat6detail12convertToIntIA13_cLb0EE6invokeERA13_Kc' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n-\n-According to similar reported errors this is a binutils (ld) issue in 2.15, the\n-version installed by OpenBSD 5.7:\n-\n-- http://openbsd-archive.7691.n7.nabble.com/UPDATE-cppcheck-1-65-td248900.html\n-- https://llvm.org/bugs/show_bug.cgi?id=9758\n-\n-There is no known workaround for this."
      }
    ]
  }
]