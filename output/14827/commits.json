[
  {
    "sha": "dfdb9b53d54bf41becf656afd7adee54adb64b25",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZmRiOWI1M2Q1NGJmNDFiZWNmNjU2YWZkN2FkZWU1NGFkYjY0YjI1",
    "commit": {
      "author": {
        "name": "3s3s",
        "email": "ivanivanovkzv@gmail.com",
        "date": "2018-08-17T13:04:50Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-08-17T13:04:50Z"
      },
      "message": "Merge pull request #2 from bitcoin/master\n\nmerge with bitcoin",
      "tree": {
        "sha": "f4b16ed8be8175c529029cbb7ce0dbffeb5a2b2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f4b16ed8be8175c529029cbb7ce0dbffeb5a2b2f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dfdb9b53d54bf41becf656afd7adee54adb64b25",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbdsfyCRBK7hj4Ov3rIwAAdHIIACBYzlmxpB0CFlh0HUbIN3az\nT0rLqU+Im+zEHN3B9xwJx3YjKkJlhaAyA7jTHX4nU/tjFf2apjJzQeVw1YrdtJ9n\nzZVjB5+VszfhamUzztciKr8RopH/XMlcYdu2UpoirZEmn+kUg/yWAvCRCOlzyF8z\nh24nNNVJ1AMwriVR5noyGRjOnvfaVea0CvFICmtjAzRs5eYHsLTS+fEOL69J9CGo\nLQeTxCQ7yZVUJbT3EgDAPOPvLIuXE6B4zAxA1EECPYpOrtJpmcWT4KpKs6oGv6vZ\n71alD6AWvQ6vnKvpkAut/s4u83nz01UoWkUoSV2r372jV+QvWgKp+9A0q7K5Uac=\n=xCgC\n-----END PGP SIGNATURE-----\n",
        "payload": "tree f4b16ed8be8175c529029cbb7ce0dbffeb5a2b2f\nparent 4314544d46e8e46c3c9da60f1d18297f52f58418\nparent 3c8d1ae15352d5c92d5903536c8fe07f771e97a0\nauthor 3s3s <ivanivanovkzv@gmail.com> 1534511090 +0500\ncommitter GitHub <noreply@github.com> 1534511090 +0500\n\nMerge pull request #2 from bitcoin/master\n\nmerge with bitcoin"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfdb9b53d54bf41becf656afd7adee54adb64b25",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dfdb9b53d54bf41becf656afd7adee54adb64b25",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfdb9b53d54bf41becf656afd7adee54adb64b25/comments",
    "author": {
      "login": "3s3s",
      "id": 6649319,
      "node_id": "MDQ6VXNlcjY2NDkzMTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6649319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3s3s",
      "html_url": "https://github.com/3s3s",
      "followers_url": "https://api.github.com/users/3s3s/followers",
      "following_url": "https://api.github.com/users/3s3s/following{/other_user}",
      "gists_url": "https://api.github.com/users/3s3s/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3s3s/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3s3s/subscriptions",
      "organizations_url": "https://api.github.com/users/3s3s/orgs",
      "repos_url": "https://api.github.com/users/3s3s/repos",
      "events_url": "https://api.github.com/users/3s3s/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3s3s/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4314544d46e8e46c3c9da60f1d18297f52f58418",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4314544d46e8e46c3c9da60f1d18297f52f58418",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "3c8d1ae15352d5c92d5903536c8fe07f771e97a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c8d1ae15352d5c92d5903536c8fe07f771e97a0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c8d1ae15352d5c92d5903536c8fe07f771e97a0"
      }
    ],
    "stats": {
      "total": 205932,
      "additions": 133029,
      "deletions": 72903
    },
    "files": [
      {
        "sha": "55cebc008f5aa761847f4b701bc35abcc3956c48",
        "filename": ".github/ISSUE_TEMPLATE.md",
        "status": "modified",
        "additions": 12,
        "deletions": 28,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/.github/ISSUE_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/.github/ISSUE_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,37 +1,21 @@\n-<!--- Remove sections that do not apply -->\n+<!-- This issue tracker is only for technical issues related to Bitcoin Core.\n \n-This issue tracker is only for technical issues related to bitcoin-core.\n+General bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\n \n-General bitcoin questions and/or support requests and are best directed to the [Bitcoin StackExchange](https://bitcoin.stackexchange.com).\n+For reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\n \n-For reporting security issues, please read instructions at [https://bitcoincore.org/en/contact/](https://bitcoincore.org/en/contact/).\n+If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -->\n \n-### Describe the issue\n+<!-- Describe the issue -->\n+<!--- What behavior did you expect? -->\n \n-### Can you reliably reproduce the issue?\n-#### If so, please list the steps to reproduce below:\n-1.\n-2.\n-3.\n+<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\n \n-### Expected behaviour\n-Tell us what should happen\n+<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\n \n-### Actual behaviour\n-Tell us what happens instead\n+<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\n \n-### Screenshots.\n-If the issue is related to the GUI, screenshots can be added to this issue via drag & drop.\n+<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n \n-### What version of bitcoin-core are you using?\n-List the version number/commit ID, and if it is an official binary, self compiled or a distribution package such as PPA.\n-\n-### Machine specs:\n-- OS:\n-- CPU:\n-- RAM:\n-- Disk size:\n-- Disk Type (HD/SDD):\n-\n-### Any extra information that might be useful in the debugging process.\n-This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred.\n+<!-- Any extra information that might be useful in the debugging process. -->\n+<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "d083c63ea0847c7161a53a0cfbc3c751a67e6423",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -44,6 +44,12 @@ src/qt/forms/ui_*.h\n \n src/qt/test/moc*.cpp\n \n+src/qt/bitcoin-qt.config\n+src/qt/bitcoin-qt.creator\n+src/qt/bitcoin-qt.creator.user\n+src/qt/bitcoin-qt.files\n+src/qt/bitcoin-qt.includes\n+\n .deps\n .dirstamp\n .libs\n@@ -76,11 +82,11 @@ src/qt/test/moc*.cpp\n Makefile\n bitcoin-qt\n Bitcoin-Qt.app\n+background.tiff*\n \n # Unit-tests\n Makefile.test\n bitcoin-qt_test\n-src/test/buildenv.py\n \n # Resources cpp\n qrc_*.cpp\n@@ -101,8 +107,7 @@ coverage_percent.txt\n linux-coverage-build\n linux-build\n win32-build\n-test/functional/config.ini\n-test/util/buildenv.py\n+test/config.ini\n test/cache/*\n \n !src/leveldb*/Makefile"
      },
      {
        "sha": "aafdc2e89d608f958d2f5d41769dbe8893ae2a5c",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 131,
        "deletions": 42,
        "changes": 173,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,77 +1,166 @@\n sudo: required\n dist: trusty\n os: linux\n-language: generic\n+language: minimal\n cache:\n+  ccache: true\n   directories:\n   - depends/built\n   - depends/sdk-sources\n   - $HOME/.ccache\n+stages:\n+  - lint\n+  - test\n env:\n   global:\n     - MAKEJOBS=-j3\n     - RUN_TESTS=false\n-    - CHECK_DOC=0\n+    - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions\n+    - DOCKER_NAME_TAG=ubuntu:18.04\n+    - LC_ALL=C.UTF-8\n     - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID\n     - CCACHE_SIZE=100M\n     - CCACHE_TEMPDIR=/tmp/.ccache-temp\n     - CCACHE_COMPRESS=1\n+    - CCACHE_DIR=$HOME/.ccache\n     - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n     - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n-    - PYTHON_DEBUG=1\n     - WINEDEBUG=fixme-all\n-  matrix:\n-# ARM\n-    - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" CHECK_DOC=1 GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n-# Win32\n-    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.6 bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n-# 32-bit + dash\n-    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python3-zmq\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n-# Win64\n-    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6 bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n-# bitcoind\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python3-zmq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n-# No wallet\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3 xvfb\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n-# Cross-Mac\n-    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" OSX_SDK=10.11 GOAL=\"deploy\"\n-\n+    - DOCKER_PACKAGES=\"build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache\"\n before_install:\n     - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n+    - BEGIN_FOLD () { echo \"\"; CURRENT_FOLD_NAME=$1; echo \"travis_fold:start:${CURRENT_FOLD_NAME}\"; }\n+    - END_FOLD () { RET=$?; echo \"travis_fold:end:${CURRENT_FOLD_NAME}\"; return $RET; }\n install:\n-    - if [ -n \"$DPKG_ADD_ARCH\" ]; then sudo dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n-    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n-    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n+    - travis_retry docker pull $DOCKER_NAME_TAG\n+    - env | grep -E '^(CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL)' | tee /tmp/env\n+    - if [[ $HOST = *-mingw32 ]]; then DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"; fi\n+    - DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$TRAVIS_BUILD_DIR,dst=$TRAVIS_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $TRAVIS_BUILD_DIR --env-file /tmp/env $DOCKER_NAME_TAG)\n+    - DOCKER_EXEC () { docker exec $DOCKER_ID bash -c \"cd $PWD && $*\"; }\n+    - if [ -n \"$DPKG_ADD_ARCH\" ]; then DOCKER_EXEC dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n+    - travis_retry DOCKER_EXEC apt-get update\n+    - travis_retry DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES $DOCKER_PACKAGES\n before_script:\n-    - if [ \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/commit-script-check.sh $TRAVIS_COMMIT_RANGE; fi\n-    - unset CC; unset CXX\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n+    - DOCKER_EXEC echo \\> \\$HOME/.bitcoin  # Make sure default datadir does not exist and is never read by creating a dummy file\n     - mkdir -p depends/SDKs depends/sdk-sources\n     - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n     - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n-    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n-    # Start xvfb if needed, as documented at https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-xvfb-to-Run-Tests-That-Require-a-GUI\n-    - if [ \"$RUN_TESTS\" = \"true\" -a \"${DEP_OPTS#*NO_QT=1}\" = \"$DEP_OPTS\" ]; then export DISPLAY=:99.0; /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac; fi\n+    - if [[ $HOST = *-mingw32 ]]; then DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\); fi\n+    - if [ -z \"$NO_DEPENDS\" ]; then DOCKER_EXEC CONFIG_SHELL= make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS; fi\n script:\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then while read LINE; do travis_retry gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys; fi\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then git fetch --unshallow; fi\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then contrib/verify-commits/verify-commits.sh; fi\n     - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n-    - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n     - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n     - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n-    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE\n-    - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n+    - if [ -z \"$NO_DEPENDS\" ]; then DOCKER_EXEC ccache --max-size=$CCACHE_SIZE; fi\n+    - BEGIN_FOLD autogen; test -n \"$CONFIG_SHELL\" && DOCKER_EXEC \"$CONFIG_SHELL\" -c \"./autogen.sh\" || DOCKER_EXEC ./autogen.sh; END_FOLD\n     - mkdir build && cd build\n-    - ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n-    - make distdir VERSION=$HOST\n+    - BEGIN_FOLD configure; DOCKER_EXEC ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false); END_FOLD\n+    - BEGIN_FOLD distdir; DOCKER_EXEC make distdir VERSION=$HOST; END_FOLD\n     - cd bitcoin-$HOST\n-    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n-    - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n-    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then make $MAKEJOBS check VERBOSE=1; fi\n-    - if [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then extended=\"--extended --exclude pruning\"; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then test/functional/test_runner.py --coverage --quiet ${extended}; fi\n+    - BEGIN_FOLD configure; DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false); END_FOLD\n+    - BEGIN_FOLD build; DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false ); END_FOLD\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then BEGIN_FOLD unit-tests; DOCKER_EXEC LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1; END_FOLD; fi\n+    - if [ \"$RUN_BENCH\" = \"true\" ]; then BEGIN_FOLD bench; DOCKER_EXEC LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib $OUTDIR/bin/bench_bitcoin -scaling=0.001 ; END_FOLD; fi\n+    - if [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then extended=\"--extended --exclude feature_pruning,feature_dbcrash\"; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then BEGIN_FOLD functional-tests; DOCKER_EXEC test/functional/test_runner.py --combinedlogslen=4000 --coverage --quiet --failfast ${extended}; END_FOLD; fi\n after_script:\n     - echo $TRAVIS_COMMIT_RANGE\n     - echo $TRAVIS_COMMIT_LOG\n+jobs:\n+  include:\n+# ARM\n+    - stage: test\n+      env: >-\n+        HOST=arm-linux-gnueabihf\n+        PACKAGES=\"g++-arm-linux-gnueabihf\"\n+        DEP_OPTS=\"NO_QT=1\"\n+        GOAL=\"install\"\n+        BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+# Win32\n+    - stage: test\n+      env: >-\n+        HOST=i686-w64-mingw32\n+        DPKG_ADD_ARCH=\"i386\"\n+        DEP_OPTS=\"NO_QT=1\"\n+        PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine-binfmt wine32\"\n+        RUN_TESTS=true\n+        GOAL=\"install\"\n+        BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+# Win64\n+    - stage: test\n+      env: >-\n+        HOST=x86_64-w64-mingw32\n+        DEP_OPTS=\"NO_QT=1\"\n+        PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64\"\n+        RUN_TESTS=true\n+        GOAL=\"install\"\n+        BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+# 32-bit + dash\n+    - stage: test\n+      env: >-\n+        HOST=i686-pc-linux-gnu\n+        PACKAGES=\"g++-multilib python3-zmq\"\n+        DEP_OPTS=\"NO_QT=1\"\n+        RUN_TESTS=true\n+        GOAL=\"install\"\n+        BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\"\n+        CONFIG_SHELL=\"/bin/dash\"\n+# x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)\n+    - stage: test\n+      env: >-\n+        HOST=x86_64-unknown-linux-gnu\n+        PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev\"\n+        DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n+        RUN_TESTS=true\n+        RUN_BENCH=true\n+        GOAL=\"install\"\n+        BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug CXXFLAGS=\\\"-g0 -O2\\\"\"\n+# x86_64 Linux (Qt5 & system libs)\n+    - stage: test\n+      env: >-\n+        HOST=x86_64-unknown-linux-gnu\n+        PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n+        NO_DEPENDS=1\n+        RUN_TESTS=true\n+        GOAL=\"install\"\n+        BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER\"\n+# x86_64 Linux, No wallet\n+    - stage: test\n+      env: >-\n+        HOST=x86_64-unknown-linux-gnu\n+        PACKAGES=\"python3\"\n+        DEP_OPTS=\"NO_WALLET=1\"\n+        RUN_TESTS=true\n+        GOAL=\"install\"\n+        BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+# Cross-Mac\n+    - stage: test\n+      env: >-\n+        HOST=x86_64-apple-darwin14\n+        PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev python3-setuptools-git\"\n+        OSX_SDK=10.11\n+        GOAL=\"all deploy\"\n+        BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\"\n+    - stage: lint\n+      env:\n+      sudo: false\n+      cache: false\n+      language: python\n+      python: '3.6'\n+      install:\n+        - travis_retry pip install flake8\n+      before_script:\n+        - git fetch --unshallow\n+      script:\n+        - if [ \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then test/lint/commit-script-check.sh $TRAVIS_COMMIT_RANGE; fi\n+        - test/lint/git-subtree-check.sh src/crypto/ctaes\n+        - test/lint/git-subtree-check.sh src/secp256k1\n+        - test/lint/git-subtree-check.sh src/univalue\n+        - test/lint/git-subtree-check.sh src/leveldb\n+        - test/lint/check-doc.py\n+        - test/lint/check-rpc-mappings.py .\n+        - test/lint/lint-all.sh\n+        - if [ \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then\n+              while read LINE; do travis_retry gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys &&\n+              travis_wait 50 contrib/verify-commits/verify-commits.py;\n+          fi"
      },
      {
        "sha": "c0931c0f3442f60c6c86af6bdb7d2673bbf9553c",
        "filename": ".tx/config",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,7 +1,7 @@\n [main]\n host = https://www.transifex.com\n \n-[bitcoin.qt-translation-014x]\n+[bitcoin.qt-translation-017x]\n file_filter = src/qt/locale/bitcoin_<lang>.ts\n source_file = src/qt/locale/bitcoin_en.ts\n source_lang = en"
      },
      {
        "sha": "3d5dc3221bb1303afb08d50734c2a0fcd511d8ad",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 51,
        "deletions": 16,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -14,6 +14,27 @@ purposes. As such there are repository \"maintainers\" who are responsible for\n merging pull requests as well as a \"lead maintainer\" who is responsible for the\n release cycle, overall merging, moderation and appointment of maintainers.\n \n+If you're looking for somewhere to start contributing, check out the\n+[good first issue](https://github.com/bitcoin/bitcoin/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)\n+list.\n+\n+Communication Channels\n+----------------------\n+\n+Most communication about Bitcoin Core development happens on IRC, in the\n+#bitcoin-core-dev channel on Freenode. The easiest way to participate on IRC is\n+with the web client, [webchat.freenode.net](https://webchat.freenode.net/). Chat\n+history logs can be found\n+on [botbot.me](https://botbot.me/freenode/bitcoin-core-dev/).\n+\n+Discussion about code base improvements happens in GitHub issues and on pull\n+requests.\n+\n+The developer\n+[mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n+should be used to discuss complicated or controversial changes before working on\n+a patch set.\n+\n \n Contributor Workflow\n --------------------\n@@ -24,9 +45,9 @@ facilitates social contribution, easy testing and peer review.\n \n To contribute a patch, the workflow is as follows:\n \n-  - Fork repository\n-  - Create topic branch\n-  - Commit patches\n+  1. Fork repository\n+  1. Create topic branch\n+  1. Commit patches\n \n The project coding conventions in the [developer notes](doc/developer-notes.md)\n must be adhered to.\n@@ -42,8 +63,8 @@ in init.cpp\") in which case a single title line is sufficient. Commit messages s\n helpful to people reading your code in the future, so explain the reasoning for\n your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n \n-If a particular commit references another issue, please add the reference, for\n-example `refs #1234`, or `fixes #4321`. Using the `fixes` or `closes` keywords\n+If a particular commit references another issue, please add the reference. For\n+example: `refs #1234` or `fixes #4321`. Using the `fixes` or `closes` keywords\n will cause the corresponding issue to be closed when the pull request is merged.\n \n Please refer to the [Git manual](https://git-scm.com/doc) for more information\n@@ -81,7 +102,11 @@ Examples:\n     Qt: Add feed bump button\n     Trivial: Fix typo in init.cpp\n \n-If a pull request is specifically not to be considered for merging (yet) please\n+Note that translations should not be submitted as pull requests, please see\n+[Translation Process](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md) \n+for more information on helping with translations.\n+\n+If a pull request is not to be considered for merging (yet), please\n prefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists)\n in the body of the pull request to indicate tasks are pending.\n \n@@ -94,6 +119,8 @@ At this stage one should expect comments and review from other contributors. You\n can add more commits to your pull request by committing them locally and pushing\n to your fork until you have satisfied all feedback.\n \n+Note: Code review is a burdensome but important part of the development process, and as such, certain types of pull requests are rejected. In general, if the **improvements** do not warrant the **review effort** required, the PR has a high chance of being rejected. It is up to the PR author to convince the reviewers that the changes warrant the review effort, and if reviewers are \"Concept NAK'ing\" the PR, the author may need to present arguments and/or do research backing their suggested changes.\n+\n Squashing Commits\n ---------------------------\n If your pull request is accepted for merging, you may be asked by a maintainer\n@@ -102,10 +129,10 @@ before it will be merged. The basic squashing workflow is shown below.\n \n     git checkout your_branch_name\n     git rebase -i HEAD~n\n-    # n is normally the number of commits in the pull\n-    # set commits from 'pick' to 'squash', save and quit\n-    # on the next screen, edit/refine commit messages\n-    # save and quit\n+    # n is normally the number of commits in the pull request.\n+    # Set commits (except the one in the first line) from 'pick' to 'squash', save and quit.\n+    # On the next screen, edit/refine commit messages.\n+    # Save and quit.\n     git push -f # (force push to GitHub)\n \n If you have problems with squashing (or other workflows with `git`), you can\n@@ -153,6 +180,14 @@ behaviour of code within the pull request (bugs must be preserved as is).\n Project maintainers aim for a quick turnaround on refactoring pull requests, so\n where possible keep them short, uncomplex and easy to verify.\n \n+Pull requests that refactor the code should not be made by new contributors. It\n+requires a certain level of experience to know where the code belongs to and to\n+understand the full ramification (including rebase effort of open pull requests).\n+\n+Trivial pull requests or pull requests that refactor the code with no clear\n+benefits may be immediately closed by the maintainers to reduce unnecessary\n+workload on reviewing.\n+\n \n \"Decision Making\" Process\n -------------------------\n@@ -170,13 +205,13 @@ judge the general consensus of contributors.\n \n In general, all pull requests must:\n \n-  - have a clear use case, fix a demonstrable bug or serve the greater good of\n+  - Have a clear use case, fix a demonstrable bug or serve the greater good of\n     the project (for example refactoring for modularisation);\n-  - be well peer reviewed;\n-  - have unit tests and functional tests where appropriate;\n-  - follow code style guidelines;\n-  - not break the existing test suite;\n-  - where bugs are fixed, where possible, there should be unit tests\n+  - Be well peer reviewed;\n+  - Have unit tests and functional tests where appropriate;\n+  - Follow code style guidelines ([C++](doc/developer-notes.md), [functional tests](test/functional/README.md));\n+  - Not break the existing test suite;\n+  - Where bugs are fixed, where possible, there should be unit tests\n     demonstrating the bug and also proving the fix. This helps prevent regression.\n \n Patches that change Bitcoin consensus rules are considerably more involved than"
      },
      {
        "sha": "9704b9c94cf4b6d419d2fef8853361f116eda49a",
        "filename": "COPYING",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,6 +1,7 @@\n The MIT License (MIT)\n \n-Copyright (c) 2009-2017 The Bitcoin Core developers\n+Copyright (c) 2009-2018 The Bitcoin Core developers\n+Copyright (c) 2009-2018 Bitcoin Developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "10dda65b21cdaa669ef51b880a8e88acebc1d157",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 50,
        "deletions": 41,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -9,7 +9,6 @@ SUBDIRS += doc/man\n endif\n .PHONY: deploy FORCE\n \n-GZIP_ENV=\"-9n\"\n export PYTHONPATH\n \n if BUILD_BITCOIN_LIBS\n@@ -43,7 +42,10 @@ DIST_CONTRIB = $(top_srcdir)/contrib/bitcoin-cli.bash-completion \\\n \t       $(top_srcdir)/contrib/bitcoin-tx.bash-completion \\\n \t       $(top_srcdir)/contrib/bitcoind.bash-completion \\\n \t       $(top_srcdir)/contrib/init \\\n-\t       $(top_srcdir)/contrib/rpm\n+\t       $(top_srcdir)/contrib/install_db4.sh\n+DIST_SHARE = \\\n+  $(top_srcdir)/share/genbuild.sh \\\n+  $(top_srcdir)/share/rpcauth\n \n BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n            $(top_srcdir)/contrib/devtools/security-check.py\n@@ -59,10 +61,10 @@ OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n   $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n   $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n \n-COVERAGE_INFO = baseline_filtered_combined.info baseline.info \\\n-  leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n+COVERAGE_INFO = baseline.info \\\n+  test_bitcoin_filtered.info total_coverage.info \\\n   baseline_filtered.info functional_test.info functional_test_filtered.info \\\n-  leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n+  test_bitcoin_coverage.info test_bitcoin.info\n \n dist-hook:\n \t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n@@ -92,9 +94,9 @@ $(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n \t$(MKDIR_P) $(@D)\n \t$(INSTALL_DATA) $< $@\n \n-$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n+$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: all-recursive\n \t$(MKDIR_P) $(@D)\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $(BITCOIN_QT_BIN) $@\n \n $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n \t$(MKDIR_P) $(@D)\n@@ -166,52 +168,45 @@ $(BITCOIN_CLI_BIN): FORCE\n \t$(MAKE) -C src $(@F)\n \n if USE_LCOV\n+LCOV_FILTER_PATTERN=-p \"/usr/include/\" -p \"src/leveldb/\" -p \"src/bench/\" -p \"src/univalue\" -p \"src/crypto/ctaes\" -p \"src/secp256k1\"\n \n baseline.info:\n \t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n \n baseline_filtered.info: baseline.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n \n-leveldb_baseline.info: baseline_filtered.info\n-\t$(LCOV) -c -i -d $(abs_builddir)/src/leveldb -b $(abs_builddir)/src/leveldb -o $@\n-\n-leveldb_baseline_filtered.info: leveldb_baseline.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n-\n-baseline_filtered_combined.info: leveldb_baseline_filtered.info baseline_filtered.info\n-\t$(LCOV) -a leveldb_baseline_filtered.info -a baseline_filtered.info -o $@\n-\n-test_bitcoin.info: baseline_filtered_combined.info\n+test_bitcoin.info: baseline_filtered.info\n \t$(MAKE) -C src/ check\n-\t$(LCOV) -c -d $(abs_builddir)/src -t test_bitcoin -o $@\n-\t$(LCOV) -z -d $(abs_builddir)/src\n-\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src -t test_bitcoin -o $@\n+\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n \n test_bitcoin_filtered.info: test_bitcoin.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n \n functional_test.info: test_bitcoin_filtered.info\n-\t-@TIMEOUT=15 python test/functional/test_runner.py $(EXTENDED_FUNCTIONAL_TESTS)\n-\t$(LCOV) -c -d $(abs_builddir)/src --t functional-tests -o $@\n-\t$(LCOV) -z -d $(abs_builddir)/src\n-\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\t-@TIMEOUT=15 test/functional/test_runner.py $(EXTENDED_FUNCTIONAL_TESTS)\n+\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t functional-tests -o $@\n+\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n \n functional_test_filtered.info: functional_test.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n \n-test_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n+test_bitcoin_coverage.info: baseline_filtered.info test_bitcoin_filtered.info\n+\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n \n-total_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info functional_test_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+total_coverage.info: test_bitcoin_filtered.info functional_test_filtered.info\n+\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n \n test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n-\t$(GENHTML) -s $< -o $(@D)\n+\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n \t@touch $@\n \n total.coverage/.dirstamp: total_coverage.info\n-\t$(GENHTML) -s $< -o $(@D)\n+\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n \t@touch $@\n \n cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n@@ -220,10 +215,9 @@ endif\n \n dist_noinst_SCRIPTS = autogen.sh\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh test/functional/test_runner.py test/functional $(DIST_CONTRIB) $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n+EXTRA_DIST = $(DIST_SHARE) test/functional/test_runner.py test/functional $(DIST_CONTRIB) $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n \n EXTRA_DIST += \\\n-    test/util/bctest.py \\\n     test/util/bitcoin-util-test.py \\\n     test/util/data/bitcoin-util-test.json \\\n     test/util/data/blanktxv1.hex \\\n@@ -257,6 +251,7 @@ EXTRA_DIST += \\\n     test/util/data/txcreatemultisig3.json \\\n     test/util/data/txcreatemultisig4.hex \\\n     test/util/data/txcreatemultisig4.json \\\n+    test/util/data/txcreatemultisig5.json \\\n     test/util/data/txcreateoutpubkey1.hex \\\n     test/util/data/txcreateoutpubkey1.json \\\n     test/util/data/txcreateoutpubkey2.hex \\\n@@ -273,17 +268,31 @@ EXTRA_DIST += \\\n     test/util/data/txcreatescript4.json \\\n     test/util/data/txcreatesignv1.hex \\\n     test/util/data/txcreatesignv1.json \\\n-    test/util/data/txcreatesignv2.hex\n+    test/util/data/txcreatesignv2.hex \\\n+    test/util/rpcauth-test.py\n \n CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n \n-# This file is problematic for out-of-tree builds if it exists.\n-DISTCLEANFILES = test/util/buildenv.pyc\n-\n .INTERMEDIATE: $(COVERAGE_INFO)\n \n DISTCHECK_CONFIGURE_FLAGS = --enable-man\n \n-clean-local:\n+doc/doxygen/.stamp: doc/Doxyfile FORCE\n+\t$(MKDIR_P) $(@D)\n+\t$(DOXYGEN) $^\n+\t$(AM_V_at) touch $@\n+\n+if HAVE_DOXYGEN\n+docs: doc/doxygen/.stamp\n+else\n+docs:\n+\t@echo \"error: doxygen not found\"\n+endif\n+\n+clean-docs:\n+\trm -rf doc/doxygen\n+\n+clean-local: clean-docs\n \trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ test/tmp/ cache/ $(OSX_APP)\n-\trm -rf test/functional/__pycache__\n+\trm -rf test/functional/__pycache__ test/functional/test_framework/__pycache__ test/cache\n+"
      },
      {
        "sha": "55b85da977abb40e677180b272a84ecd2ca41541",
        "filename": "README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 8,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -15,7 +15,7 @@ out collectively by the network. Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n+the Bitcoin Core software, see https://bitcoincore.org/en/download/, or read the\n [original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n \n License\n@@ -33,12 +33,6 @@ regularly to indicate new official, stable release versions of Bitcoin Core.\n \n The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n \n-The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n-should be used to discuss complicated or controversial changes before working\n-on a patch set.\n-\n-Developer IRC can be found on Freenode at #bitcoin-core-dev.\n-\n Testing\n -------\n \n@@ -58,7 +52,7 @@ There are also [regression and integration tests](/test), written\n in Python, that are run automatically on the build server.\n These tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`\n \n-The Travis CI system makes sure that every pull request is built for Windows, Linux, and OS X, and that unit/sanity tests are run automatically.\n+The Travis CI system makes sure that every pull request is built for Windows, Linux, and macOS, and that unit/sanity tests are run automatically.\n \n ### Manual Quality Assurance (QA) Testing\n "
      },
      {
        "sha": "0c0c3d066b4a1167f7743eedb4ff65cbca2ba254",
        "filename": "appveyor.yml",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/appveyor.yml?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,34 @@\n+skip_tags: true\n+image: Visual Studio 2017\n+configuration: Release\n+platform: x64\n+environment:\n+  APPVEYOR_SAVE_CACHE_ON_ERROR: true\n+cache: C:\\tools\\vcpkg\\installed\\\n+before_build:\n+- ps: >-\n+    $packages = @(\n+        \"boost-filesystem\",\n+        \"boost-signals2\",\n+        \"boost-interprocess\",\n+        \"boost-test\",\n+        \"libevent\",\n+        \"openssl\",\n+        \"zeromq\",\n+        \"berkeleydb\",\n+        \"secp256k1\",\n+        \"leveldb\"\n+    )\n+\n+    for ($i=0; $i -lt $packages.length; $i++) {\n+        $all_packages += $packages[$i] + \":\" + $env:PLATFORM + \"-windows-static \"\n+    }\n+\n+    Invoke-Expression -Command \"vcpkg install $all_packages\"\n+build:\n+  project: build_msvc\\bitcoin.sln\n+  parallel: true\n+  verbosity: minimal\n+test_script:\n+- cmd: build_msvc\\%PLATFORM%\\Release\\test_bitcoin.exe\n+deploy: off"
      },
      {
        "sha": "0c05626ccce5852cac8f496ba228025151297ddc",
        "filename": "autogen.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -3,6 +3,7 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+export LC_ALL=C\n set -e\n srcdir=\"$(dirname $0)\"\n cd \"$srcdir\""
      },
      {
        "sha": "6ea77b9b3eff0290afa7de7dbb18670dfede735c",
        "filename": "build-aux/m4/ax_boost_chrono.m4",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build-aux/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build-aux/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_chrono.m4?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_chrono.html\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_chrono.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -8,7 +8,7 @@\n #\n # DESCRIPTION\n #\n-#   Test for System library from the Boost C++ libraries. The macro requires\n+#   Test for Chrono library from the Boost C++ libraries. The macro requires\n #   a preceding call to AX_BOOST_BASE. Further documentation is available at\n #   <http://randspringer.de/boost/index.html>.\n #\n@@ -29,7 +29,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 1\n+#serial 4\n \n AC_DEFUN([AX_BOOST_CHRONO],\n [\n@@ -68,7 +68,7 @@ AC_DEFUN([AX_BOOST_CHRONO],\n \t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n \n \t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/chrono.hpp>]],\n-                                   [[boost::chrono::system_clock::time_point time;]])],\n+                                   [[boost::chrono::system_clock::time_point* time = new boost::chrono::system_clock::time_point; delete time;]])],\n                    ax_cv_boost_chrono=yes, ax_cv_boost_chrono=no)\n \t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n              AC_LANG_POP([C++])\n@@ -81,7 +81,6 @@ AC_DEFUN([AX_BOOST_CHRONO],\n \n \t\t\tLDFLAGS_SAVE=$LDFLAGS\n             if test \"x$ax_boost_user_chrono_lib\" = \"x\"; then\n-                ax_lib=\n                 for libextension in `ls $BOOSTLIBDIR/libboost_chrono*.so* $BOOSTLIBDIR/libboost_chrono*.dylib* $BOOSTLIBDIR/libboost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_chrono.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n                      ax_lib=${libextension}\n \t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n@@ -106,7 +105,7 @@ AC_DEFUN([AX_BOOST_CHRONO],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_chrono library!)\n+                AC_MSG_ERROR(Could not find a version of the library!)\n             fi\n \t\t\tif test \"x$link_chrono\" = \"xno\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "2bdb5937162e4207cf0f96586bc343653ae30da1",
        "filename": "build-aux/m4/ax_boost_program_options.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 108,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/build-aux/m4/ax_boost_program_options.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/build-aux/m4/ax_boost_program_options.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_program_options.m4?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,108 +0,0 @@\n-# ============================================================================\n-#  http://www.gnu.org/software/autoconf-archive/ax_boost_program_options.html\n-# ============================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_PROGRAM_OPTIONS\n-#\n-# DESCRIPTION\n-#\n-#   Test for program options library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_PROGRAM_OPTIONS\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 24\n-\n-AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n-[\n-\tAC_ARG_WITH([boost-program-options],\n-\t\tAS_HELP_STRING([--with-boost-program-options@<:@=special-lib@:>@],\n-                       [use the program options library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-program-options=boost_program_options-gcc-mt-1_33_1 ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_program_options_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_program_options_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t    export want_boost\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\t\tAC_CACHE_CHECK([whether the Boost::Program_Options library is available],\n-\t\t\t\t\t   ax_cv_boost_program_options,\n-\t\t\t\t\t   [AC_LANG_PUSH(C++)\n-\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options/errors.hpp>\n-                                                          ]],\n-                                  [[boost::program_options::error err(\"Error message\");\n-                                   return 0;]])],\n-                           ax_cv_boost_program_options=yes, ax_cv_boost_program_options=no)\n-\t\t\t\t\tAC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"$ax_cv_boost_program_options\" = yes; then\n-\t\t\t\tAC_DEFINE(HAVE_BOOST_PROGRAM_OPTIONS,,[define if the Boost::PROGRAM_OPTIONS library is available])\n-                  BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-                if test \"x$ax_boost_user_program_options_lib\" = \"x\"; then\n-                for libextension in `ls $BOOSTLIBDIR/libboost_program_options*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.dylib* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.dylib.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                 [link_program_options=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_program_options\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_program_options*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                 [link_program_options=\"no\"])\n-\t\t\t\tdone\n-                fi\n-                else\n-                  for ax_lib in $ax_boost_user_program_options_lib boost_program_options-$ax_boost_user_program_options_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, main,\n-                                   [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                   [link_program_options=\"no\"])\n-                  done\n-                fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_program_options library!)\n-            fi\n-\t\t\t\tif test \"x$link_program_options\" != \"xyes\"; then\n-\t\t\t\t\tAC_MSG_ERROR([Could not link against [$ax_lib] !])\n-\t\t\t\tfi\n-\t\tfi\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "3d8e93e964bdd94350d8730d60606fbcf04ac1ff",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,6 +1,6 @@\n-# ================================================================================\n-#  http://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n-# ================================================================================\n+# =================================================================================\n+#  https://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n+# =================================================================================\n #\n # SYNOPSIS\n #\n@@ -29,7 +29,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 19\n+#serial 21\n \n AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n [\n@@ -66,7 +66,7 @@ AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n         [AC_LANG_PUSH([C++])\n \t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/test/unit_test.hpp>]],\n                                     [[using boost::unit_test::test_suite;\n-\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); return 0;]])],\n+\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); if (test == NULL) { return 1; } else { return 0; }]])],\n                    ax_cv_boost_unit_test_framework=yes, ax_cv_boost_unit_test_framework=no)\n          AC_LANG_POP([C++])\n \t\t])\n@@ -76,7 +76,6 @@ AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n \n             if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n \t\t\tsaved_ldflags=\"${LDFLAGS}\"\n-                ax_lib=\n                 for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n                     if test -r $monitor_library ; then\n                        libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n@@ -125,7 +124,7 @@ AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n                done\n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_unit_test_framework library!)\n+                AC_MSG_ERROR(Could not find a version of the library!)\n             fi\n \t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "ea9c795daa2f9a31bf0d8c995ba97ebd2d0b0827",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -12,7 +12,7 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n     bdbpath=X\n     bdb48path=X\n     bdbdirlist=\n-    for _vn in 4.8 48 4 5 ''; do\n+    for _vn in 4.8 48 4 5 5.3 ''; do\n       for _pfx in b lib ''; do\n         bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n       done\n@@ -64,7 +64,7 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n   \n   if test \"x$BDB_LIBS\" = \"x\"; then\n     # TODO: Ideally this could find the library version and make sure it matches the headers being used\n-    for searchlib in db_cxx-4.8 db_cxx; do\n+    for searchlib in db_cxx-4.8 db_cxx db4_cxx; do\n       AC_CHECK_LIB([$searchlib],[main],[\n         BDB_LIBS=\"-l${searchlib}\"\n         break"
      },
      {
        "sha": "05df8621d2056f772c6d411e79ee34d12d06cd07",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 195,
        "deletions": 178,
        "changes": 373,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -5,8 +5,8 @@ dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n dnl Helper for cases where a qt dependency is not met.\n dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$bitcoin_qt_want_version\" = \"xauto\" && test x$bitcoin_qt_force != xyes; then\n-    if test x$bitcoin_enable_qt != xno; then\n+  if test \"x$bitcoin_qt_want_version\" = xauto && test \"x$bitcoin_qt_force\" != xyes; then\n+    if test \"x$bitcoin_enable_qt\" != xno; then\n       AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n     fi\n     bitcoin_enable_qt=no\n@@ -17,7 +17,7 @@ AC_DEFUN([BITCOIN_QT_FAIL],[\n ])\n \n AC_DEFUN([BITCOIN_QT_CHECK],[\n-  if test \"x$bitcoin_enable_qt\" != \"xno\" && test x$bitcoin_qt_want_version != xno; then\n+  if test \"x$bitcoin_enable_qt\" != xno && test \"x$bitcoin_qt_want_version\" != xno; then\n     true\n     $1\n   else\n@@ -35,12 +35,12 @@ dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n   BITCOIN_QT_CHECK([\n-    if test \"x$3\" != \"x\"; then\n+    if test \"x$3\" != x; then\n       AC_PATH_PROGS($1,$2,,$3)\n     else\n       AC_PATH_PROGS($1,$2)\n     fi\n-    if test \"x$$1\" = \"x\" && test \"x$4\" != \"xyes\"; then\n+    if test \"x$$1\" = x && test \"x$4\" != xyes; then\n       BITCOIN_QT_FAIL([$1 not found])\n     fi\n   ])\n@@ -53,11 +53,11 @@ dnl CAUTION: Do not use this inside of a conditional.\n AC_DEFUN([BITCOIN_QT_INIT],[\n   dnl enable qt support\n   AC_ARG_WITH([gui],\n-    [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],\n-    [build bitcoin-qt GUI (default=auto, qt5 tried first)])],\n+    [AS_HELP_STRING([--with-gui@<:@=no|qt5|auto@:>@],\n+    [build bitcoin-qt GUI (default=auto)])],\n     [\n      bitcoin_qt_want_version=$withval\n-     if test x$bitcoin_qt_want_version = xyes; then\n+     if test \"x$bitcoin_qt_want_version\" = xyes; then\n        bitcoin_qt_force=yes\n        bitcoin_qt_want_version=auto\n      fi\n@@ -89,95 +89,90 @@ dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   use_pkgconfig=$1\n \n-  if test x$use_pkgconfig = x; then\n+  if test \"x$use_pkgconfig\" = x; then\n     use_pkgconfig=yes\n   fi\n \n-  if test x$use_pkgconfig = xyes; then\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n+  if test \"x$use_pkgconfig\" = xyes; then\n+    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG])\n   else\n     BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n   fi\n \n   dnl This is ugly and complicated. Yuck. Works as follows:\n-  dnl We can't discern whether Qt4 builds are static or not. For Qt5, we can\n-  dnl check a header to find out. When Qt is built statically, some plugins must\n-  dnl be linked into the final binary as well. These plugins have changed between\n-  dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n-  dnl plugin was added. Since we can't tell if Qt4 is static or not, it is\n-  dnl assumed for windows builds.\n+  dnl For Qt5, we can check a header to find out whether Qt is build\n+  dnl statically. When Qt is built statically, some plugins must be linked into\n+  dnl the final binary as well.\n+  dnl With Qt5, languages moved into core and the WindowsIntegration plugin was\n+  dnl added.\n   dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n   dnl results to QT_LIBS.\n   BITCOIN_QT_CHECK([\n   TEMP_CPPFLAGS=$CPPFLAGS\n   TEMP_CXXFLAGS=$CXXFLAGS\n   CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n   CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-    _BITCOIN_QT_IS_STATIC\n-    if test x$bitcoin_cv_static_qt = xyes; then\n-      _BITCOIN_QT_FIND_STATIC_PLUGINS\n-      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-          [[#include <QtCore>]],[[\n+  _BITCOIN_QT_IS_STATIC\n+  if test \"x$bitcoin_cv_static_qt\" = xyes; then\n+    _BITCOIN_QT_FIND_STATIC_PLUGINS\n+    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+    AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+          #include <QtCore/qconfig.h>\n+          #ifndef QT_VERSION\n+          #  include <QtCore/qglobal.h>\n+          #endif\n+        ]],\n+        [[\n           #if QT_VERSION >= 0x050400\n-          choke;\n+          choke\n           #endif\n-          ]])],\n-        [bitcoin_cv_need_acc_widget=yes],\n-        [bitcoin_cv_need_acc_widget=no])\n-      ])\n-      if test \"x$bitcoin_cv_need_acc_widget\" = \"xyes\"; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n-      fi\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n-      AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n-      if test x$TARGET_OS = xwindows; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n-        AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n-      elif test x$TARGET_OS = xlinux; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n-        AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n-      elif test x$TARGET_OS = xdarwin; then\n-        AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n-        AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n-      fi\n+        ]])],\n+      [bitcoin_cv_need_acc_widget=yes],\n+      [bitcoin_cv_need_acc_widget=no])\n+    ])\n+    if test \"x$bitcoin_cv_need_acc_widget\" = xyes; then\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n     fi\n-  else\n-    if test x$TARGET_OS = xwindows; then\n-      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n-         Q_IMPORT_PLUGIN(qcncodecs)\n-         Q_IMPORT_PLUGIN(qjpcodecs)\n-         Q_IMPORT_PLUGIN(qtwcodecs)\n-         Q_IMPORT_PLUGIN(qkrcodecs)\n-         Q_IMPORT_PLUGIN(AccessibleFactory)],\n-         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets])\n+    _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n+    AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n+    if test \"x$TARGET_OS\" = xwindows; then\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+      AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n+    elif test \"x$TARGET_OS\" = xlinux; then\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n+      AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n+    elif test \"x$TARGET_OS\" = xdarwin; then\n+      AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n+      AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n     fi\n   fi\n   CPPFLAGS=$TEMP_CPPFLAGS\n   CXXFLAGS=$TEMP_CXXFLAGS\n   ])\n \n-  if test x$use_pkgconfig$qt_bin_path = xyes; then\n-    if test x$bitcoin_qt_got_major_vers = x5; then\n-      qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n-    fi\n+  if test \"x$use_pkgconfig$qt_bin_path\" = xyes; then\n+    qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n   fi\n \n-  if test x$use_hardening != xno; then\n+  if test \"x$use_hardening\" != xno; then\n     BITCOIN_QT_CHECK([\n     AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n     TEMP_CPPFLAGS=$CPPFLAGS\n     TEMP_CXXFLAGS=$CXXFLAGS\n     CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n     CXXFLAGS=\"$PIE_FLAGS $CXXFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <QtCore/qconfig.h>\n+        #ifndef QT_VERSION\n+        #  include <QtCore/qglobal.h>\n+        #endif\n+      ]],\n       [[\n-          #if defined(QT_REDUCE_RELOCATIONS)\n-              choke;\n-          #endif\n+        #if defined(QT_REDUCE_RELOCATIONS)\n+        choke\n+        #endif\n       ]])],\n       [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],\n       [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]\n@@ -190,11 +185,16 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n     TEMP_CPPFLAGS=$CPPFLAGS\n     CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <QtCore/qconfig.h>\n+        #ifndef QT_VERSION\n+        #  include <QtCore/qglobal.h>\n+        #endif\n+      ]],\n       [[\n-          #if defined(QT_REDUCE_RELOCATIONS)\n-              choke;\n-          #endif\n+        #if defined(QT_REDUCE_RELOCATIONS)\n+        choke\n+        #endif\n       ]])],\n       [ AC_MSG_RESULT(no)],\n       [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]\n@@ -203,11 +203,11 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     ])\n   fi\n \n-  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n+  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt5 moc5 moc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt5 uic5 uic], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt5 rcc5 rcc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt5 lrelease5 lrelease], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt5 lupdate5 lupdate],$qt_bin_path, yes)\n \n   MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n   case $host in\n@@ -230,23 +230,23 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   BITCOIN_QT_CHECK([\n     bitcoin_enable_qt=yes\n     bitcoin_enable_qt_test=yes\n-    if test x$have_qt_test = xno; then\n+    if test \"x$have_qt_test\" = xno; then\n       bitcoin_enable_qt_test=no\n     fi\n     bitcoin_enable_qt_dbus=no\n-    if test x$use_dbus != xno && test x$have_qt_dbus = xyes; then\n+    if test \"x$use_dbus\" != xno && test \"x$have_qt_dbus\" = xyes; then\n       bitcoin_enable_qt_dbus=yes\n     fi\n-    if test x$use_dbus = xyes && test x$have_qt_dbus = xno; then\n-      AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n+    if test \"x$use_dbus\" = xyes && test \"x$have_qt_dbus\" = xno; then\n+      AC_MSG_ERROR([libQtDBus not found. Install libQtDBus or remove --with-qtdbus.])\n     fi\n-    if test x$LUPDATE = x; then\n-      AC_MSG_WARN(\"lupdate is required to update qt translations\")\n+    if test \"x$LUPDATE\" = x; then\n+      AC_MSG_WARN([lupdate is required to update qt translations])\n     fi\n   ],[\n     bitcoin_enable_qt=no\n   ])\n-  AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n+  AC_MSG_RESULT([$bitcoin_enable_qt (Qt5)])\n \n   AC_SUBST(QT_PIE_FLAGS)\n   AC_SUBST(QT_INCLUDES)\n@@ -256,7 +256,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   AC_SUBST(QT_DBUS_LIBS)\n   AC_SUBST(QT_TEST_INCLUDES)\n   AC_SUBST(QT_TEST_LIBS)\n-  AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n+  AC_SUBST(QT_SELECT, qt5)\n   AC_SUBST(MOC_DEFS)\n ])\n \n@@ -269,39 +269,64 @@ dnl Requires: INCLUDES must be populated as necessary.\n dnl Output: bitcoin_cv_qt5=yes|no\n AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n   AC_CACHE_CHECK(for Qt 5, bitcoin_cv_qt5,[\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-    [[#include <QtCore>]],\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+      #include <QtCore/qconfig.h>\n+      #ifndef QT_VERSION\n+      #  include <QtCore/qglobal.h>\n+      #endif\n+    ]],\n     [[\n-      #if QT_VERSION < 0x050000\n-      choke me\n-      #else\n-      return 0;\n+      #if QT_VERSION < 0x050000 || QT_VERSION_MAJOR < 5\n+      choke\n       #endif\n     ]])],\n     [bitcoin_cv_qt5=yes],\n     [bitcoin_cv_qt5=no])\n ])])\n \n+dnl Internal. Check if the included version of Qt is greater than Qt58.\n+dnl Requires: INCLUDES must be populated as necessary.\n+dnl Output: bitcoin_cv_qt5=yes|no\n+AC_DEFUN([_BITCOIN_QT_CHECK_QT58],[\n+  AC_CACHE_CHECK(for > Qt 5.7, bitcoin_cv_qt58,[\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+      #include <QtCore/qconfig.h>\n+      #ifndef QT_VERSION\n+      #  include <QtCore/qglobal.h>\n+      #endif\n+    ]],\n+    [[\n+      #if QT_VERSION_MINOR < 8\n+      choke\n+      #endif\n+    ]])],\n+    [bitcoin_cv_qt58=yes],\n+    [bitcoin_cv_qt58=no])\n+])])\n+\n+\n dnl Internal. Check if the linked version of Qt was built as static libs.\n-dnl Requires: Qt5. This check cannot determine if Qt4 is static.\n+dnl Requires: Qt5.\n dnl Requires: INCLUDES and LIBS must be populated as necessary.\n dnl Output: bitcoin_cv_static_qt=yes|no\n dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n   AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-    [[#include <QtCore>]],\n-    [[\n-      #if defined(QT_STATIC)\n-      return 0;\n-      #else\n-      choke me\n-      #endif\n-    ]])],\n-    [bitcoin_cv_static_qt=yes],\n-    [bitcoin_cv_static_qt=no])\n-  ])\n-  if test xbitcoin_cv_static_qt = xyes; then\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <QtCore/qconfig.h>\n+        #ifndef QT_VERSION OR QT_VERSION_STR\n+        #  include <QtCore/qglobal.h>\n+        #endif\n+      ]],\n+      [[\n+        #if !defined(QT_STATIC)\n+        choke\n+        #endif\n+      ]])],\n+      [bitcoin_cv_static_qt=yes],\n+      [bitcoin_cv_static_qt=no])\n+    ])\n+  if test \"x$bitcoin_cv_static_qt\" = xyes; then\n     AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static Qt plugins])\n   fi\n ])\n@@ -326,52 +351,71 @@ AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n ])\n \n dnl Internal. Find paths necessary for linking qt static plugins\n-dnl Inputs: bitcoin_qt_got_major_vers. 4 or 5.\n dnl Inputs: qt_plugin_path. optional.\n dnl Outputs: QT_LIBS is appended\n AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-      if test x$qt_plugin_path != x; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n-        if test -d \"$qt_plugin_path/accessible\"; then\n-          QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-        fi\n+    if test \"x$qt_plugin_path\" != x; then\n+      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n+      if test -d \"$qt_plugin_path/accessible\"; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n       fi\n-     if test x$use_pkgconfig = xyes; then\n+     if test \"x$use_pkgconfig\" = xyes; then\n      : dnl\n      m4_ifdef([PKG_CHECK_MODULES],[\n-       PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n-       if test x$TARGET_OS = xlinux; then\n+       if test x$bitcoin_cv_qt58 = xno; then\n+         PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n+       else\n+         PKG_CHECK_MODULES([QTFONTDATABASE], [Qt5FontDatabaseSupport], [QT_LIBS=\"-lQt5FontDatabaseSupport $QT_LIBS\"])\n+         PKG_CHECK_MODULES([QTEVENTDISPATCHER], [Qt5EventDispatcherSupport], [QT_LIBS=\"-lQt5EventDispatcherSupport $QT_LIBS\"])\n+         PKG_CHECK_MODULES([QTTHEME], [Qt5ThemeSupport], [QT_LIBS=\"-lQt5ThemeSupport $QT_LIBS\"])\n+         PKG_CHECK_MODULES([QTDEVICEDISCOVERY], [Qt5DeviceDiscoverySupport], [QT_LIBS=\"-lQt5DeviceDiscoverySupport $QT_LIBS\"])\n+         PKG_CHECK_MODULES([QTACCESSIBILITY], [Qt5AccessibilitySupport], [QT_LIBS=\"-lQt5AccessibilitySupport $QT_LIBS\"])\n+         PKG_CHECK_MODULES([QTFB], [Qt5FbSupport], [QT_LIBS=\"-lQt5FbSupport $QT_LIBS\"])\n+                fi\n+       if test \"x$TARGET_OS\" = xlinux; then\n          PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n          if ${PKG_CONFIG} --exists \"Qt5Core >= 5.5\" 2>/dev/null; then\n            PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n          fi\n-       elif test x$TARGET_OS = xdarwin; then\n-         PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n+       elif test \"x$TARGET_OS\" = xdarwin; then\n+         PKG_CHECK_MODULES([QTCLIPBOARD], [Qt5ClipboardSupport], [QT_LIBS=\"-lQt5ClipboardSupport $QT_LIBS\"])\n+         PKG_CHECK_MODULES([QTGRAPHICS], [Qt5GraphicsSupport], [QT_LIBS=\"-lQt5GraphicsSupport $QT_LIBS\"])\n+         PKG_CHECK_MODULES([QTCGL], [Qt5CglSupport], [QT_LIBS=\"-lQt5CglSupport $QT_LIBS\"])\n        fi\n      ])\n      else\n-       if test x$TARGET_OS = xwindows; then\n-         AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-             [[#include <QtCore>]],[[\n-             #if QT_VERSION < 0x050600\n-             choke;\n-             #endif\n+       if test \"x$TARGET_OS\" = xwindows; then\n+         AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[\n+           AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+               #include <QtCore/qconfig.h>\n+               #ifndef QT_VERSION\n+               #  include <QtCore/qglobal.h>\n+               #endif\n+             ]],\n+             [[\n+               #if QT_VERSION < 0x050600 || QT_VERSION_MINOR < 6\n+               choke\n+               #endif\n              ]])],\n            [bitcoin_cv_need_platformsupport=yes],\n            [bitcoin_cv_need_platformsupport=no])\n          ])\n-         if test x$bitcoin_cv_need_platformsupport = xyes; then\n-           BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXPlatformSupport not found)))\n+         if test \"x$bitcoin_cv_need_platformsupport\" = xyes; then\n+           if test x$bitcoin_cv_qt58 = xno; then\n+             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXPlatformSupport not found)))\n+           else\n+             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}FontDatabaseSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXFontDatabaseSupport not found)))\n+             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}EventDispatcherSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXEventDispatcherSupport not found)))\n+             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}ThemeSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXThemeSupport not found)))\n+             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}FbSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXFbSupport not found)))\n+             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}DeviceDiscoverySupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXDeviceDiscoverySupport not found)))\n+             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}AccessibilitySupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXAccessibilitySupport not found)))\n+             QT_LIBS=\"$QT_LIBS -lversion -ldwmapi -luxtheme\"\n+           fi\n          fi\n        fi\n      fi\n-  else\n-    if test x$qt_plugin_path != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n-    fi\n-  fi\n+   fi\n ])\n \n dnl Internal. Find Qt libraries using pkg-config.\n@@ -380,46 +424,22 @@ dnl         first.\n dnl Inputs: $1: If bitcoin_qt_want_version is \"auto\", check for this version\n dnl         first.\n dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n   m4_ifdef([PKG_CHECK_MODULES],[\n-  auto_priority_version=$1\n-  if test x$auto_priority_version = x; then\n-    auto_priority_version=qt5\n-  fi\n-    if test x$bitcoin_qt_want_version = xqt5 ||  ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n-      QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n-    else\n-      QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n-    fi\n+    QT_LIB_PREFIX=Qt5\n     qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n-    qt4_modules=\"QtCore QtGui QtNetwork\"\n     BITCOIN_QT_CHECK([\n-      if test x$bitcoin_qt_want_version = xqt5 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n-        PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[have_qt=no])\n-      elif test x$bitcoin_qt_want_version = xqt4 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt4 ); then\n-        PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n-      fi\n+      PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" have_qt=yes],[have_qt=no])\n \n-      dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n-      if test x$have_qt = xno && test x$bitcoin_qt_want_version = xauto; then\n-        if test x$auto_priority_version = xqt5; then\n-          PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n-        else\n-          PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n-        fi\n-      fi\n-      if test x$have_qt != xyes; then\n+      if test \"x$have_qt\" != xyes; then\n         have_qt=no\n         BITCOIN_QT_FAIL([Qt dependencies not found])\n       fi\n     ])\n     BITCOIN_QT_CHECK([\n       PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n-      if test x$use_dbus != xno; then\n+      if test \"x$use_dbus\" != xno; then\n         PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n       fi\n     ])\n@@ -432,15 +452,14 @@ dnl from the discovered headers.\n dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to use.\n dnl         If \"auto\", the version will be discovered by _BITCOIN_QT_CHECK_QT5.\n dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   TEMP_CPPFLAGS=\"$CPPFLAGS\"\n   TEMP_CXXFLAGS=\"$CXXFLAGS\"\n   CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n   TEMP_LIBS=\"$LIBS\"\n   BITCOIN_QT_CHECK([\n-    if test x$qt_include_path != x; then\n+    if test \"x$qt_include_path\" != x; then\n       QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n       CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n     fi\n@@ -451,54 +470,52 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n \n   BITCOIN_QT_CHECK([\n-    if test x$bitcoin_qt_want_version = xauto; then\n+    if test \"x$bitcoin_qt_want_version\" = xauto; then\n       _BITCOIN_QT_CHECK_QT5\n+      _BITCOIN_QT_CHECK_QT58\n     fi\n-    if test x$bitcoin_cv_qt5 = xyes || test x$bitcoin_qt_want_version = xqt5; then\n-      QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n-    else\n-      QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n-    fi\n+    QT_LIB_PREFIX=Qt5\n   ])\n \n   BITCOIN_QT_CHECK([\n     LIBS=\n-    if test x$qt_lib_path != x; then\n+    if test \"x$qt_lib_path\" != x; then\n       LIBS=\"$LIBS -L$qt_lib_path\"\n     fi\n \n-    if test x$TARGET_OS = xwindows; then\n+    if test \"x$TARGET_OS\" = xwindows; then\n       AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n     fi\n   ])\n \n   BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([png_error] ,[qtpng png],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n   BITCOIN_QT_CHECK(AC_SEARCH_LIBS([jpeg_create_decompress] ,[qtjpeg jpeg],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n+  if test x$bitcoin_cv_qt58 = xno; then\n+    BITCOIN_QT_CHECK(AC_SEARCH_LIBS([png_error] ,[qtpng png],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n+    BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n+  else\n+    BITCOIN_QT_CHECK(AC_SEARCH_LIBS([png_error] ,[qtlibpng png],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n+    BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre2_match_16], [qtpcre2 libqtpcre2],,AC_MSG_WARN([libqtpcre2 not found. Assuming qt has it built-in])))\n   fi\n+  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng qtharfbuzz harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Core not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Gui not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Network not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Widgets not found)))\n   QT_LIBS=\"$LIBS\"\n   LIBS=\"$TEMP_LIBS\"\n \n   BITCOIN_QT_CHECK([\n     LIBS=\n-    if test x$qt_lib_path != x; then\n+    if test \"x$qt_lib_path\" != x; then\n       LIBS=\"-L$qt_lib_path\"\n     fi\n     AC_CHECK_LIB([${QT_LIB_PREFIX}Test],      [main],, have_qt_test=no)\n     AC_CHECK_HEADER([QTest],, have_qt_test=no)\n     QT_TEST_LIBS=\"$LIBS\"\n-    if test x$use_dbus != xno; then\n+    if test \"x$use_dbus\" != xno; then\n       LIBS=\n-      if test x$qt_lib_path != x; then\n+      if test \"x$qt_lib_path\" != x; then\n         LIBS=\"-L$qt_lib_path\"\n       fi\n       AC_CHECK_LIB([${QT_LIB_PREFIX}DBus],      [main],, have_qt_dbus=no)"
      },
      {
        "sha": "fbcd1077b39f94438acfc69ef223fb2c7bc9384e",
        "filename": "build_msvc/.gitignore",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/.gitignore?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,10 @@\n+# Build directories\n+Debug/*\n+Release/*\n+.vs\n+packages/*\n+*/Obj\n+*/Debug\n+*/Release\n+*/x64\n+*.vcxproj.user"
      },
      {
        "sha": "6de464e92f1093c1a52924f2ac9571b2d0445382",
        "filename": "build_msvc/README.md",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/README.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,50 @@\n+Building Bitcoin Core with Visual Studio\n+========================================\n+\n+Introduction\n+---------------------\n+Solution and project files to build the Bitcoin Core applications (except Qt dependent ones) with Visual Studio 2017 can be found in the build_msvc directory.\n+\n+Building with Visual Studio is an alternative to the Linux based [cross-compiler build](https://github.com/bitcoin/bitcoin/blob/master/doc/build-windows.md).\n+\n+Dependencies\n+---------------------\n+A number of [open source libraries](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) are required in order to be able to build Bitcoin.\n+\n+Options for installing the dependencies in a Visual Studio compatible manner are:\n+\n+- Use Microsoft's [vcpkg](https://docs.microsoft.com/en-us/cpp/vcpkg) to download the source packages and build locally. This is the recommended approach.\n+- Download the source code, build each dependency, add the required include paths, link libraries and binary tools to the Visual Studio project files.\n+- Use [nuget](https://www.nuget.org/) packages with the understanding that any binary files have been compiled by an untrusted third party.\n+\n+The external dependencies required for the Visual Studio build are (see the [dependencies doc](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) for versions):\n+\n+- Berkeley DB,\n+- OpenSSL,\n+- Boost,\n+- libevent,\n+- ZeroMQ\n+\n+Additional dependencies required from the [bitcoin-core](https://github.com/bitcoin-core) github repository are:\n+- SECP256K1,\n+- LevelDB\n+\n+Building\n+---------------------\n+The instructions below use vcpkg to install the dependencies.\n+\n+- Clone and vcpkg from the [github repository](https://github.com/Microsoft/vcpkg) and install as per the instructions in the main README.md.\n+- Install the required packages (replace x64 with x86 as required):\n+- Install the required dependencies with vcpkg:\n+\n+```\n+    PS >.\\vcpkg install boost:x64-windows-static `\n+    libevent:x64-windows-static `\n+    openssl:x64-windows-static `\n+    zeromq:x64-windows-static `\n+    berkeleydb:x64-windows-static `\n+    secp256k1:x64-windows-static `\n+    leveldb:x64-windows-static\n+```\n+\n+- Build in Visual Studio.\n\\ No newline at end of file"
      },
      {
        "sha": "b987a337c0c890b08238aa618f6db61156b96a03",
        "filename": "build_msvc/bench_bitcoin/bench_bitcoin.vcxproj",
        "status": "added",
        "additions": 217,
        "deletions": 0,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,217 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bench\\base58.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bench\\bech32.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bench\\bench.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bench\\bench_bitcoin.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bench\\ccoins_caching.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bench\\checkblock.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bench\\checkqueue.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bench\\coin_selection.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bench\\crypto_hash.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bench\\examples.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bench\\lockedpool.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bench\\mempool_eviction.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bench\\merkle_root.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bench\\rollingbloom.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bench\\verify_script.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{1125654E-E1B2-4431-8B5C-62EA9A2FEECB}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>bench_bitcoin</RootNamespace>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+    <Linkage-secp256k1>static</Linkage-secp256k1>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+    <Linkage-secp256k1>static</Linkage-secp256k1>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+    <Linkage-secp256k1>static</Linkage-secp256k1>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+    <Linkage-secp256k1>static</Linkage-secp256k1>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>NOMINMAX;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>NOMINMAX;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>NOMINMAX;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>NOMINMAX;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <Target Name=\"RawBenchHeaderGen\" BeforeTargets=\"PrepareForBuild\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the raw bench header generation task.</ErrorText>\n+    </PropertyGroup>\n+    <ItemGroup>\n+      <RawBenchFile Include=\"..\\..\\src\\bench\\data\\*.raw\" />\n+    </ItemGroup>\n+    <HeaderFromHexdump RawFilePath=\"%(RawBenchFile.FullPath)\" HeaderFilePath=\"%(RawBenchFile.FullPath).h\" SourceHeader=\"static unsigned const char %(RawBenchFile.Filename)[] = {\" SourceFooter=\"};\" />\n+  </Target>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+  <Import Label=\"hexdumpTarget\" Project=\"..\\msbuild\\tasks\\hexdump.targets\" />\n+</Project>"
      },
      {
        "sha": "32f0354fad5eb0fddc4791eef1c52c79238be2b8",
        "filename": "build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "status": "added",
        "additions": 180,
        "deletions": 0,
        "changes": 180,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,180 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bitcoin-cli.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <None Include=\"packages.config\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{0B2D7431-F876-4A58-87BF-F748338CD3BF}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>bitcoincli</RootNamespace>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "a9fae6b739975cc3dd35551ac0689c118ca92e43",
        "filename": "build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "status": "added",
        "additions": 180,
        "deletions": 0,
        "changes": 180,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,180 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bitcoin-tx.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>bitcointx</RootNamespace>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "32068d81f6b85140fc838534b9e26782bbaaa6a3",
        "filename": "build_msvc/bitcoin.sln",
        "status": "added",
        "additions": 172,
        "deletions": 0,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/bitcoin.sln",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/bitcoin.sln",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin.sln?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,172 @@\n+\ufeffMicrosoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio 15\n+VisualStudioVersion = 15.0.27130.2027\n+MinimumVisualStudioVersion = 10.0.40219.1\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_consensus\", \"libbitcoinconsensus\\libbitcoinconsensus.vcxproj\", \"{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"test_libbitcoinconsensus\", \"testconsensus\\testconsensus.vcxproj\", \"{E78473E9-B850-456C-9120-276301E04C06}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoind\", \"bitcoind\\bitcoind.vcxproj\", \"{D4513DDF-6013-44DC-ADCC-12EAF6D1F038}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_util\", \"libbitcoin_util\\libbitcoin_util.vcxproj\", \"{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_common\", \"libbitcoin_common\\libbitcoin_common.vcxproj\", \"{7C87E378-DF58-482E-AA2F-1BC129BC19CE}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_crypto\", \"libbitcoin_crypto\\libbitcoin_crypto.vcxproj\", \"{6190199C-6CF4-4DAD-BFBD-93FA72A760C1}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_server\", \"libbitcoin_server\\libbitcoin_server.vcxproj\", \"{460FEE33-1FE1-483F-B3BF-931FF8E969A5}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libunivalue\", \"libunivalue\\libunivalue.vcxproj\", \"{5724BA7D-A09A-4BA8-800B-C4C1561B3D69}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_wallet\", \"libbitcoin_wallet\\libbitcoin_wallet.vcxproj\", \"{93B86837-B543-48A5-A89B-7C87ABB77DF2}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_zmq\", \"libbitcoin_zmq\\libbitcoin_zmq.vcxproj\", \"{792D487F-F14C-49FC-A9DE-3FC150F31C3F}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"test_bitcoin\", \"test_bitcoin\\test_bitcoin.vcxproj\", \"{A56B73DB-D46D-4882-8374-1FE3FFA08F07}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_cli\", \"libbitcoin_cli\\libbitcoin_cli.vcxproj\", \"{0667528C-D734-4009-ADF9-C0D6C4A5A5A6}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-cli\", \"bitcoin-cli\\bitcoin-cli.vcxproj\", \"{0B2D7431-F876-4A58-87BF-F748338CD3BF}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bench_bitcoin\", \"bench_bitcoin\\bench_bitcoin.vcxproj\", \"{1125654E-E1B2-4431-8B5C-62EA9A2FEECB}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-tx\", \"bitcoin-tx\\bitcoin-tx.vcxproj\", \"{D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}\"\n+EndProject\n+Global\n+    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n+        Debug|x64 = Debug|x64\n+        Debug|x86 = Debug|x86\n+        Release|x64 = Release|x64\n+        Release|x86 = Release|x86\n+    EndGlobalSection\n+    GlobalSection(ProjectConfigurationPlatforms) = postSolution\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x64.ActiveCfg = Debug|x64\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x64.Build.0 = Debug|x64\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x86.ActiveCfg = Debug|Win32\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x86.Build.0 = Debug|Win32\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x64.ActiveCfg = Release|x64\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x64.Build.0 = Release|x64\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x86.ActiveCfg = Release|Win32\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x86.Build.0 = Release|Win32\n+        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x64.ActiveCfg = Debug|x64\n+        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x64.Build.0 = Debug|x64\n+        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x86.ActiveCfg = Debug|Win32\n+        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x86.Build.0 = Debug|Win32\n+        {E78473E9-B850-456C-9120-276301E04C06}.Release|x64.ActiveCfg = Release|x64\n+        {E78473E9-B850-456C-9120-276301E04C06}.Release|x64.Build.0 = Release|x64\n+        {E78473E9-B850-456C-9120-276301E04C06}.Release|x86.ActiveCfg = Release|Win32\n+        {E78473E9-B850-456C-9120-276301E04C06}.Release|x86.Build.0 = Release|Win32\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x64.ActiveCfg = Debug|x64\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x64.Build.0 = Debug|x64\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x86.ActiveCfg = Debug|Win32\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x86.Build.0 = Debug|Win32\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x64.ActiveCfg = Release|x64\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x64.Build.0 = Release|x64\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x86.ActiveCfg = Release|Win32\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x86.Build.0 = Release|Win32\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x64.ActiveCfg = Debug|x64\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x64.Build.0 = Debug|x64\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x86.ActiveCfg = Debug|Win32\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x86.Build.0 = Debug|Win32\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x64.ActiveCfg = Release|x64\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x64.Build.0 = Release|x64\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x86.ActiveCfg = Release|Win32\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x86.Build.0 = Release|Win32\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x64.ActiveCfg = Debug|x64\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x64.Build.0 = Debug|x64\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x86.ActiveCfg = Debug|Win32\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x86.Build.0 = Debug|Win32\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x64.ActiveCfg = Release|x64\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x64.Build.0 = Release|x64\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x86.ActiveCfg = Release|Win32\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x86.Build.0 = Release|Win32\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x64.ActiveCfg = Debug|x64\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x64.Build.0 = Debug|x64\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x86.ActiveCfg = Debug|Win32\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x86.Build.0 = Debug|Win32\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x64.ActiveCfg = Release|x64\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x64.Build.0 = Release|x64\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x86.ActiveCfg = Release|Win32\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x86.Build.0 = Release|Win32\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x64.ActiveCfg = Debug|x64\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x64.Build.0 = Debug|x64\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x86.ActiveCfg = Debug|Win32\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x86.Build.0 = Debug|Win32\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x64.ActiveCfg = Release|x64\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x64.Build.0 = Release|x64\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x86.ActiveCfg = Release|Win32\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x86.Build.0 = Release|Win32\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x64.ActiveCfg = Debug|x64\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x64.Build.0 = Debug|x64\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x86.ActiveCfg = Debug|Win32\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x86.Build.0 = Debug|Win32\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x64.ActiveCfg = Release|x64\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x64.Build.0 = Release|x64\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x86.ActiveCfg = Release|Win32\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x86.Build.0 = Release|Win32\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x64.ActiveCfg = Debug|x64\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x64.Build.0 = Debug|x64\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x86.ActiveCfg = Debug|Win32\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x86.Build.0 = Debug|Win32\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x64.ActiveCfg = Release|x64\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x64.Build.0 = Release|x64\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x86.ActiveCfg = Release|Win32\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x86.Build.0 = Release|Win32\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x64.ActiveCfg = Debug|x64\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x64.Build.0 = Debug|x64\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x86.ActiveCfg = Debug|Win32\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x86.Build.0 = Debug|Win32\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x64.ActiveCfg = Release|x64\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x64.Build.0 = Release|x64\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x86.ActiveCfg = Release|Win32\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x86.Build.0 = Release|Win32\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x64.ActiveCfg = Debug|x64\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x64.Build.0 = Debug|x64\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x86.ActiveCfg = Debug|Win32\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x86.Build.0 = Debug|Win32\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x64.ActiveCfg = Release|x64\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x64.Build.0 = Release|x64\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x86.ActiveCfg = Release|Win32\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x86.Build.0 = Release|Win32\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x64.ActiveCfg = Debug|x64\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x64.Build.0 = Debug|x64\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x86.ActiveCfg = Debug|Win32\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x86.Build.0 = Debug|Win32\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x64.ActiveCfg = Release|x64\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x64.Build.0 = Release|x64\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x86.ActiveCfg = Release|Win32\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x86.Build.0 = Release|Win32\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x64.ActiveCfg = Debug|x64\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x64.Build.0 = Debug|x64\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x86.ActiveCfg = Debug|Win32\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x86.Build.0 = Debug|Win32\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x64.ActiveCfg = Release|x64\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x64.Build.0 = Release|x64\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x86.ActiveCfg = Release|Win32\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x86.Build.0 = Release|Win32\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x64.ActiveCfg = Debug|x64\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x64.Build.0 = Debug|x64\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x86.ActiveCfg = Debug|Win32\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x86.Build.0 = Debug|Win32\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x64.ActiveCfg = Release|x64\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x64.Build.0 = Release|x64\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x86.ActiveCfg = Release|Win32\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x86.Build.0 = Release|Win32\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x64.ActiveCfg = Debug|x64\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x64.Build.0 = Debug|x64\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x86.ActiveCfg = Debug|Win32\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x86.Build.0 = Debug|Win32\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x64.ActiveCfg = Release|x64\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x64.Build.0 = Release|x64\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x86.ActiveCfg = Release|Win32\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x86.Build.0 = Release|Win32\n+    EndGlobalSection\n+    GlobalSection(SolutionProperties) = preSolution\n+        HideSolutionNode = FALSE\n+    EndGlobalSection\n+    GlobalSection(ExtensibilityGlobals) = postSolution\n+                SolutionGuid = {4ABD1207-9A90-4EC9-A8EB-203638A2605D}\n+                        SolutionGuid = {2FB733C9-24CB-4BA5-A26B-F43DAD7996B7}\n+                                SolutionGuid = {D0CAE2D0-8DB1-4A0B-80EE-800AA6C64323}\n+        SolutionGuid = {DA7D16A6-E5F0-45B3-B194-C3FE64F1BFCD}\n+    EndGlobalSection"
      },
      {
        "sha": "4ac27dae3f9f7b0a0215d77be6b8d2a06d559720",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "added",
        "additions": 424,
        "deletions": 0,
        "changes": 424,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,424 @@\n+#ifndef BITCOIN_BITCOIN_CONFIG_H\n+#define BITCOIN_BITCOIN_CONFIG_H\n+\n+/* Define if building universal (internal helper macro) */\n+/* #undef AC_APPLE_UNIVERSAL_BUILD */\n+\n+/* Version Build */\n+#define CLIENT_VERSION_BUILD 0\n+\n+/* Version is release */\n+#define CLIENT_VERSION_IS_RELEASE false\n+\n+/* Major version */\n+#define CLIENT_VERSION_MAJOR 1\n+\n+/* Minor version */\n+#define CLIENT_VERSION_MINOR 17\n+\n+/* Build revision */\n+#define CLIENT_VERSION_REVISION 99\n+\n+/* Copyright holder(s) before %s replacement */\n+#define COPYRIGHT_HOLDERS \"The %s developers\"\n+\n+/* Copyright holder(s) */\n+#define COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\"\n+\n+/* Replacement for %s in copyright holders string */\n+#define COPYRIGHT_HOLDERS_SUBSTITUTION \"Bitcoin Core\"\n+\n+/* Copyright year */\n+#define COPYRIGHT_YEAR 2018\n+\n+/* Define to 1 to enable wallet functions */\n+#define ENABLE_WALLET 1\n+\n+/* Define to 1 to enable ZMQ functions */\n+#define ENABLE_ZMQ 1\n+\n+/* parameter and return value type for __fdelt_chk */\n+/* #undef FDELT_TYPE */\n+\n+/* define if the Boost library is available */\n+#define HAVE_BOOST /**/\n+\n+/* define if the Boost::Chrono library is available */\n+#define HAVE_BOOST_CHRONO /**/\n+\n+/* define if the Boost::Filesystem library is available */\n+#define HAVE_BOOST_FILESYSTEM /**/\n+\n+/* define if the Boost::PROGRAM_OPTIONS library is available */\n+#define HAVE_BOOST_PROGRAM_OPTIONS /**/\n+\n+/* define if the Boost::System library is available */\n+#define HAVE_BOOST_SYSTEM /**/\n+\n+/* define if the Boost::Thread library is available */\n+#define HAVE_BOOST_THREAD /**/\n+\n+/* define if the Boost::Unit_Test_Framework library is available */\n+#define HAVE_BOOST_UNIT_TEST_FRAMEWORK /**/\n+\n+/* Define to 1 if you have the <byteswap.h> header file. */\n+/* #undef HAVE_BYTESWAP_H */\n+\n+/* Define this symbol if the consensus lib has been built */\n+#define HAVE_CONSENSUS_LIB 1\n+\n+/* define if the compiler supports basic C++11 syntax */\n+#define HAVE_CXX11 1\n+\n+/* Define to 1 if you have the declaration of `be16toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BE16TOH 0\n+\n+/* Define to 1 if you have the declaration of `be32toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BE32TOH 0\n+\n+/* Define to 1 if you have the declaration of `be64toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BE64TOH 0\n+\n+/* Define to 1 if you have the declaration of `bswap_16', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BSWAP_16 0\n+\n+/* Define to 1 if you have the declaration of `bswap_32', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BSWAP_32 0\n+\n+/* Define to 1 if you have the declaration of `bswap_64', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BSWAP_64 0\n+\n+/* Define to 1 if you have the declaration of `daemon', and to 0 if you don't.\n+   */\n+#define HAVE_DECL_DAEMON 0\n+\n+/* Define to 1 if you have the declaration of `EVP_MD_CTX_new', and to 0 if\n+   you don't. */\n+//#define HAVE_DECL_EVP_MD_CTX_NEW 1\n+\n+/* Define to 1 if you have the declaration of `htobe16', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOBE16 0\n+\n+/* Define to 1 if you have the declaration of `htobe32', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOBE32 0\n+\n+/* Define to 1 if you have the declaration of `htobe64', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOBE64 0\n+\n+/* Define to 1 if you have the declaration of `htole16', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOLE16 0\n+\n+/* Define to 1 if you have the declaration of `htole32', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOLE32 0\n+\n+/* Define to 1 if you have the declaration of `htole64', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOLE64 0\n+\n+/* Define to 1 if you have the declaration of `le16toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_LE16TOH 0\n+\n+/* Define to 1 if you have the declaration of `le32toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_LE32TOH 0\n+\n+/* Define to 1 if you have the declaration of `le64toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_LE64TOH 0\n+\n+/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_STRERROR_R 0\n+\n+/* Define to 1 if you have the declaration of `strnlen', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_STRNLEN 1\n+\n+/* Define to 1 if you have the declaration of `__builtin_clz', and to 0 if you\n+   don't. */\n+//#define HAVE_DECL___BUILTIN_CLZ 1\n+\n+/* Define to 1 if you have the declaration of `__builtin_clzl', and to 0 if\n+   you don't. */\n+//#define HAVE_DECL___BUILTIN_CLZL 1\n+\n+/* Define to 1 if you have the declaration of `__builtin_clzll', and to 0 if\n+   you don't. */\n+//#define HAVE_DECL___BUILTIN_CLZLL 1\n+\n+/* Define to 1 if you have the <dlfcn.h> header file. */\n+/* #undef HAVE_DLFCN_H */\n+\n+/* Define to 1 if you have the <endian.h> header file. */\n+/* #undef HAVE_ENDIAN_H */\n+\n+/* Define to 1 if the system has the `dllexport' function attribute */\n+#define HAVE_FUNC_ATTRIBUTE_DLLEXPORT 1\n+\n+/* Define to 1 if the system has the `dllimport' function attribute */\n+#define HAVE_FUNC_ATTRIBUTE_DLLIMPORT 1\n+\n+/* Define to 1 if the system has the `visibility' function attribute */\n+#define HAVE_FUNC_ATTRIBUTE_VISIBILITY 1\n+\n+/* Define this symbol if the BSD getentropy system call is available */\n+/* #undef HAVE_GETENTROPY */\n+\n+/* Define this symbol if the BSD getentropy system call is available with\n+   sys/random.h */\n+/* #undef HAVE_GETENTROPY_RAND */\n+\n+/* Define to 1 if you have the <inttypes.h> header file. */\n+#define HAVE_INTTYPES_H 1\n+\n+/* Define to 1 if you have the `advapi32' library (-ladvapi32). */\n+#define HAVE_LIBADVAPI32 1\n+\n+/* Define to 1 if you have the `comctl32' library (-lcomctl32). */\n+#define HAVE_LIBCOMCTL32 1\n+\n+/* Define to 1 if you have the `comdlg32' library (-lcomdlg32). */\n+#define HAVE_LIBCOMDLG32 1\n+\n+/* Define to 1 if you have the `crypt32' library (-lcrypt32). */\n+#define HAVE_LIBCRYPT32 1\n+\n+/* Define to 1 if you have the `gdi32' library (-lgdi32). */\n+#define HAVE_LIBGDI32 1\n+\n+/* Define to 1 if you have the `imm32' library (-limm32). */\n+#define HAVE_LIBIMM32 1\n+\n+/* Define to 1 if you have the `iphlpapi' library (-liphlpapi). */\n+#define HAVE_LIBIPHLPAPI 1\n+\n+/* Define to 1 if you have the `kernel32' library (-lkernel32). */\n+#define HAVE_LIBKERNEL32 1\n+\n+/* Define to 1 if you have the `mingwthrd' library (-lmingwthrd). */\n+#define HAVE_LIBMINGWTHRD 1\n+\n+/* Define to 1 if you have the `mswsock' library (-lmswsock). */\n+#define HAVE_LIBMSWSOCK 1\n+\n+/* Define to 1 if you have the `ole32' library (-lole32). */\n+#define HAVE_LIBOLE32 1\n+\n+/* Define to 1 if you have the `oleaut32' library (-loleaut32). */\n+#define HAVE_LIBOLEAUT32 1\n+\n+/* Define to 1 if you have the `rpcrt4' library (-lrpcrt4). */\n+#define HAVE_LIBRPCRT4 1\n+\n+/* Define to 1 if you have the `rt' library (-lrt). */\n+/* #undef HAVE_LIBRT */\n+\n+/* Define to 1 if you have the `shell32' library (-lshell32). */\n+#define HAVE_LIBSHELL32 1\n+\n+/* Define to 1 if you have the `shlwapi' library (-lshlwapi). */\n+#define HAVE_LIBSHLWAPI 1\n+\n+/* Define to 1 if you have the `ssp' library (-lssp). */\n+#define HAVE_LIBSSP 1\n+\n+/* Define to 1 if you have the `user32' library (-luser32). */\n+#define HAVE_LIBUSER32 1\n+\n+/* Define to 1 if you have the `uuid' library (-luuid). */\n+#define HAVE_LIBUUID 1\n+\n+/* Define to 1 if you have the `winmm' library (-lwinmm). */\n+#define HAVE_LIBWINMM 1\n+\n+/* Define to 1 if you have the `winspool' library (-lwinspool). */\n+#define HAVE_LIBWINSPOOL 1\n+\n+/* Define to 1 if you have the `ws2_32' library (-lws2_32). */\n+#define HAVE_LIBWS2_32 1\n+\n+/* Define to 1 if you have the `z ' library (-lz ). */\n+#define HAVE_LIBZ_ 1\n+\n+/* Define this symbol if you have malloc_info */\n+/* #undef HAVE_MALLOC_INFO */\n+\n+/* Define this symbol if you have mallopt with M_ARENA_MAX */\n+/* #undef HAVE_MALLOPT_ARENA_MAX */\n+\n+/* Define to 1 if you have the <memory.h> header file. */\n+#define HAVE_MEMORY_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/miniupnpc.h> header file. */\n+#define HAVE_MINIUPNPC_MINIUPNPC_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/miniwget.h> header file. */\n+#define HAVE_MINIUPNPC_MINIWGET_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/upnpcommands.h> header file. */\n+#define HAVE_MINIUPNPC_UPNPCOMMANDS_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/upnperrors.h> header file. */\n+#define HAVE_MINIUPNPC_UPNPERRORS_H 1\n+\n+/* Define this symbol if you have MSG_DONTWAIT */\n+/* #undef HAVE_MSG_DONTWAIT */\n+\n+/* Define this symbol if you have MSG_NOSIGNAL */\n+/* #undef HAVE_MSG_NOSIGNAL */\n+\n+/* Define if you have POSIX threads libraries and header files. */\n+//#define HAVE_PTHREAD 1\n+\n+/* Have PTHREAD_PRIO_INHERIT. */\n+//#define HAVE_PTHREAD_PRIO_INHERIT 1\n+\n+/* Define to 1 if you have the <stdint.h> header file. */\n+#define HAVE_STDINT_H 1\n+\n+/* Define to 1 if you have the <stdio.h> header file. */\n+#define HAVE_STDIO_H 1\n+\n+/* Define to 1 if you have the <stdlib.h> header file. */\n+#define HAVE_STDLIB_H 1\n+\n+/* Define to 1 if you have the `strerror_r' function. */\n+/* #undef HAVE_STRERROR_R */\n+\n+/* Define to 1 if you have the <strings.h> header file. */\n+#define HAVE_STRINGS_H 1\n+\n+/* Define to 1 if you have the <string.h> header file. */\n+#define HAVE_STRING_H 1\n+\n+/* Define this symbol if the BSD sysctl(KERN_ARND) is available */\n+/* #undef HAVE_SYSCTL_ARND */\n+\n+/* Define to 1 if you have the <sys/endian.h> header file. */\n+/* #undef HAVE_SYS_ENDIAN_H */\n+\n+/* Define this symbol if the Linux getrandom system call is available */\n+/* #undef HAVE_SYS_GETRANDOM */\n+\n+/* Define to 1 if you have the <sys/prctl.h> header file. */\n+/* #undef HAVE_SYS_PRCTL_H */\n+\n+/* Define to 1 if you have the <sys/select.h> header file. */\n+/* #undef HAVE_SYS_SELECT_H */\n+\n+/* Define to 1 if you have the <sys/stat.h> header file. */\n+#define HAVE_SYS_STAT_H 1\n+\n+/* Define to 1 if you have the <sys/types.h> header file. */\n+#define HAVE_SYS_TYPES_H 1\n+\n+/* Define to 1 if you have the <unistd.h> header file. */\n+//#define HAVE_UNISTD_H 1\n+\n+/* Define if the visibility attribute is supported. */\n+#define HAVE_VISIBILITY_ATTRIBUTE 1\n+\n+/* Define this symbol if boost sleep works */\n+/* #undef HAVE_WORKING_BOOST_SLEEP */\n+\n+/* Define this symbol if boost sleep_for works */\n+#define HAVE_WORKING_BOOST_SLEEP_FOR 1\n+\n+/* Define to the sub-directory where libtool stores uninstalled libraries. */\n+#define LT_OBJDIR \".libs/\"\n+\n+/* Define to the address where bug reports for this package should be sent. */\n+#define PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\"\n+\n+/* Define to the full name of this package. */\n+#define PACKAGE_NAME \"Bitcoin Core\"\n+\n+/* Define to the full name and version of this package. */\n+#define PACKAGE_STRING \"Bitcoin Core 0.17.99\"\n+\n+/* Define to the one symbol short name of this package. */\n+#define PACKAGE_TARNAME \"bitcoin\"\n+\n+/* Define to the home page for this package. */\n+#define PACKAGE_URL \"https://bitcoincore.org/\"\n+\n+/* Define to the version of this package. */\n+#define PACKAGE_VERSION \"0.17.99\"\n+\n+/* Define to necessary symbol if this constant uses a non-standard name on\n+   your system. */\n+/* #undef PTHREAD_CREATE_JOINABLE */\n+\n+/* Define this symbol if the qt platform is cocoa */\n+/* #undef QT_QPA_PLATFORM_COCOA */\n+\n+/* Define this symbol if the minimal qt platform exists */\n+#define QT_QPA_PLATFORM_MINIMAL 1\n+\n+/* Define this symbol if the qt platform is windows */\n+#define QT_QPA_PLATFORM_WINDOWS 1\n+\n+/* Define this symbol if the qt platform is xcb */\n+/* #undef QT_QPA_PLATFORM_XCB */\n+\n+/* Define this symbol if qt plugins are static */\n+#define QT_STATICPLUGIN 1\n+\n+/* Define to 1 if you have the ANSI C header files. */\n+#define STDC_HEADERS 1\n+\n+/* Define to 1 if strerror_r returns char *. */\n+/* #undef STRERROR_R_CHAR_P */\n+\n+/* Define this symbol to build in assembly routines */\n+//#define USE_ASM 1\n+\n+/* Define this symbol if coverage is enabled */\n+/* #undef USE_COVERAGE */\n+\n+/* Define if dbus support should be compiled in */\n+/* #undef USE_DBUS */\n+\n+/* Define if QR support should be compiled in */\n+//#define USE_QRCODE 1\n+\n+/* UPnP support not compiled if undefined, otherwise value (0 or 1) determines\n+   default state */\n+//#define USE_UPNP 0\n+\n+/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most\n+   significant byte first (like Motorola and SPARC, unlike Intel). */\n+#if defined AC_APPLE_UNIVERSAL_BUILD\n+# if defined __BIG_ENDIAN__\n+#  define WORDS_BIGENDIAN 1\n+# endif\n+#else\n+# ifndef WORDS_BIGENDIAN\n+/* #  undef WORDS_BIGENDIAN */\n+# endif\n+#endif\n+\n+/* Enable large inode numbers on Mac OS X 10.5.  */\n+#ifndef _DARWIN_USE_64_BIT_INODE\n+# define _DARWIN_USE_64_BIT_INODE 1\n+#endif\n+\n+/* Number of bits in a file offset, on hosts where this is settable. */\n+#define _FILE_OFFSET_BITS 64\n+\n+/* Define for large files, on AIX-style hosts. */\n+/* #undef _LARGE_FILES */\n+\n+#endif //BITCOIN_BITCOIN_CONFIG_H"
      },
      {
        "sha": "bb43d9821e215d0b36cc4450c7572e0f7ec5054e",
        "filename": "build_msvc/bitcoind/bitcoind.vcxproj",
        "status": "added",
        "additions": 185,
        "deletions": 0,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/bitcoind/bitcoind.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/bitcoind/bitcoind.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoind/bitcoind.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,185 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{D4513DDF-6013-44DC-ADCC-12EAF6D1F038}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>bitcoind</RootNamespace>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalLibraryDirectories>\n+      </AdditionalLibraryDirectories>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalLibraryDirectories>\n+      </AdditionalLibraryDirectories>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bitcoind.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "c3c0f665c244229ead4288ddc16ad7ebc5f8b60b",
        "filename": "build_msvc/common.init.vcxproj",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/common.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/common.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.init.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,14 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+      <PropertyGroup Condition=\"'$(WindowsTargetPlatformVersion)'=='' and !Exists('$(WindowsSdkDir)\\DesignTime\\CommonConfiguration\\Neutral\\Windows.props')\">\n+        <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n+        <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n+        <!-- Sometimes the version in the registry has to .0 suffix, and sometimes it doesn't. Check and add it -->\n+        <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' != '' and !$(WindowsTargetPlatformVersion_10.EndsWith('.0'))\">$(WindowsTargetPlatformVersion_10).0</WindowsTargetPlatformVersion_10>\n+\n+        <WindowsTargetPlatformVersion>$(WindowsTargetPlatformVersion_10)</WindowsTargetPlatformVersion>\n+    </PropertyGroup>\n+    <PropertyGroup>\n+        <Platform Condition=\"'$(Platform)' == ''\">Win32</Platform>\n+    </PropertyGroup>\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "3a53f3bad3df201127a4551710fe004dea9327a6",
        "filename": "build_msvc/common.vcxproj",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/common.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/common.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <PropertyGroup>\n+      <BuildDependsOn>\n+          CopyConfig;\n+          $(BuildDependsOn);\n+      </BuildDependsOn>\n+  </PropertyGroup>\n+  <Target Name=\"CopyConfig\"\n+          Inputs=\"$(MSBuildThisFileDirectory)bitcoin_config.h\"\n+          Outputs=\"$(MSBuildThisFileDirectory)..\\src\\config\\bitcoin-config.h\">\n+      <Copy SourceFiles=\"$(MSBuildThisFileDirectory)bitcoin_config.h\" DestinationFiles=\"$(MSBuildThisFileDirectory)..\\src\\config\\bitcoin-config.h\" />\n+  </Target>\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "623d24da1005cf652db883f9f94befc48ffb8c21",
        "filename": "build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj",
        "status": "added",
        "additions": 162,
        "deletions": 0,
        "changes": 162,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,162 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\rpc\\client.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <None Include=\"packages.config\" />\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{0667528C-D734-4009-ADF9-C0D6C4A5A5A6}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>libbitcoin_cli</RootNamespace>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "e6d95ed5f3e2cf9171eebdcca0cd7b69efb66bbc",
        "filename": "build_msvc/libbitcoin_common/libbitcoin_common.vcxproj",
        "status": "added",
        "additions": 210,
        "deletions": 0,
        "changes": 210,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,210 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{7C87E378-DF58-482E-AA2F-1BC129BC19CE}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>libbitcoin_common</RootNamespace>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalLibraryDirectories>\n+      </AdditionalLibraryDirectories>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalLibraryDirectories>\n+      </AdditionalLibraryDirectories>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalLibraryDirectories>\n+      </AdditionalLibraryDirectories>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalLibraryDirectories>\n+      </AdditionalLibraryDirectories>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClInclude Include=\"..\\..\\src\\base58.h\" />\n+    <ClInclude Include=\"..\\..\\src\\bech32.h\" />\n+    <ClInclude Include=\"..\\..\\src\\chainparams.h\" />\n+    <ClInclude Include=\"..\\..\\src\\coins.h\" />\n+    <ClInclude Include=\"..\\..\\src\\compressor.h\" />\n+    <ClInclude Include=\"..\\..\\src\\key.h\" />\n+    <ClInclude Include=\"..\\..\\src\\keystore.h\" />\n+    <ClInclude Include=\"..\\..\\src\\netaddress.h\" />\n+    <ClInclude Include=\"..\\..\\src\\netbase.h\" />\n+    <ClInclude Include=\"..\\..\\src\\policy\\feerate.h\" />\n+    <ClInclude Include=\"..\\..\\src\\protocol.h\" />\n+    <ClInclude Include=\"..\\..\\src\\scheduler.h\" />\n+    <ClInclude Include=\"..\\..\\src\\script\\sign.h\" />\n+    <ClInclude Include=\"..\\..\\src\\script\\standard.h\" />\n+    <ClInclude Include=\"..\\..\\src\\warnings.h\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\base58.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bech32.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\chainparams.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\coins.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\compressor.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\core_read.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\core_write.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\key.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\key_io.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\keystore.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\netaddress.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\netbase.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\policy\\feerate.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\protocol.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\scheduler.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\descriptor.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\sign.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\ismine.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\standard.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\warnings.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <None Include=\"packages.config\" />\n+  </ItemGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "50519d045f676e6b6b8befb0236601fba2e274fe",
        "filename": "build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj",
        "status": "added",
        "additions": 175,
        "deletions": 0,
        "changes": 175,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,175 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{6190199C-6CF4-4DAD-BFBD-93FA72A760C1}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>libbitcoin_crypto</RootNamespace>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClInclude Include=\"..\\..\\src\\crypto\\aes.h\" />\n+    <ClInclude Include=\"..\\..\\src\\crypto\\chacha20.h\" />\n+    <ClInclude Include=\"..\\..\\src\\crypto\\common.h\" />\n+    <ClInclude Include=\"..\\..\\src\\crypto\\hmac_sha256.h\" />\n+    <ClInclude Include=\"..\\..\\src\\crypto\\hmac_sha512.h\" />\n+    <ClInclude Include=\"..\\..\\src\\crypto\\ripemd160.h\" />\n+    <ClInclude Include=\"..\\..\\src\\crypto\\sha1.h\" />\n+    <ClInclude Include=\"..\\..\\src\\crypto\\sha256.h\" />\n+    <ClInclude Include=\"..\\..\\src\\crypto\\sha512.h\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\crypto\\aes.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\chacha20.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\hmac_sha256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\hmac_sha512.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\ripemd160.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha1.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha512.cpp\" />\n+  </ItemGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "2e8ecb2d2c338d611e1051a9aa0d52e7385dd752",
        "filename": "build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "status": "added",
        "additions": 955,
        "deletions": 0,
        "changes": 955,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,955 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+    <ProjectGuid>{2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}</ProjectGuid>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <CustomBuild Include=\"..\\..\\src\\qt\\bitcoin.qrc\">\n+      <Command>\"$(QTDIR)\\bincc.exe\" -name bitcoin \"%(Fullpath)\" -o .\\GeneratedFiles\\qrc_bitcoin.cpp</Command>\n+      <Message>Qt rcc generation for %(Identity)</Message>\n+      <Outputs>.\\GeneratedFiles\\qrc_bitcoin.cpp</Outputs>\n+      <AdditionalInputs>(QTDIR)\\bincc.exe</AdditionalInputs>\n+    </CustomBuild>\n+    <CustomBuild Include=\"..\\..\\src\\qt\\bitcoin_locale.qrc\">\n+      <Command>\"$(QTDIR)\\bincc.exe\" -name bitcoin_locale \"%(Fullpath)\" -o .\\GeneratedFiles\\qrc_bitcoin_locale.cpp</Command>\n+      <Message>Qt rcc generation for %(Identity)</Message>\n+      <Outputs>.\\GeneratedFiles\\qrc_bitcoin_locale.cpp</Outputs>\n+      <AdditionalInputs>(QTDIR)\\bincc.exe</AdditionalInputs>\n+    </CustomBuild>\n+    <None Include=\"..\\..\\src\\qt\\forms\\addressbookpage.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\forms\\askpassphrasedialog.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\forms\\coincontroldialog.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\forms\\debugwindow.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\forms\\editaddressdialog.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\forms\\helpmessagedialog.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\forms\\intro.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\forms\\modaloverlay.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\forms\\openuridialog.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\forms\\optionsdialog.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\forms\\overviewpage.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\formseceivecoinsdialog.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\formseceiverequestdialog.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\forms\\sendcoinsdialog.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\forms\\sendcoinsentry.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\forms\\signverifymessagedialog.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\forms\\transactiondescdialog.ui\" />\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_af.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_af_ZA.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ar.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_be_BY.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_bg.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_bg_BG.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ca%40valencia.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ca.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ca_ES.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_cs.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_cy.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_da.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_de.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_el.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_el_GR.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_en.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_en_GB.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_eo.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_AR.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_CL.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_CO.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_DO.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_ES.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_MX.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_UY.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_es_VE.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_et.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_et_EE.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_eu_ES.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fa.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fa_IR.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fi.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fr.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fr_CA.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_fr_FR.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_gl.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_he.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_hi_IN.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_hr.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_hu.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_id_ID.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_it.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_it_IT.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ja.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ka.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_kk_KZ.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ko_KR.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ku_IQ.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ky.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_la.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_lt.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_lv_LV.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_mk_MK.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_mn.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ms_MY.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_nb.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ne.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_nl.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_pam.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_pl.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_pt_BR.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_pt_PT.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ro.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ro_RO.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ru.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ru_RU.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sk.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sl_SI.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sq.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sr%40latin.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sr.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_sv.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ta.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_th_TH.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_tr.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_tr_TR.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_uk.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_ur_PK.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_uz%40Cyrl.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_vi.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_vi_VN.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_zh.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_zh_CN.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_zh_HK.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qt\\locale\\bitcoin_zh_TW.ts\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <CustomBuild Include=\"..\\..\\src\\qt\\paymentrequest.proto\">\n+      <FileType>Document</FileType>\n+      <Command>F:\\Dependencies\\protobuf-cpp-3.4.1\\protobuf-3.4.1\\cmake\\build\\vs\\Debug\\protoc.exe --proto_path=%(RootDir)%(Directory) %(Fullpath) --cpp_out=.\\GeneratedFiles</Command>\n+      <Message>ProtoBuf source generation %(RootDir)%(Directory) %(Filename)</Message>\n+      <Outputs>.\\GeneratedFiles\\%(Filename).pb.h;.\\GeneratedFiles\\(%Filename).pb.cc</Outputs>\n+      <AdditionalInputs>F:\\Dependencies\\protobuf-cpp-3.4.1\\protobuf-3.4.1\\cmake\\build\\vs\\Debug\\protoc.exe</AdditionalInputs>\n+      <LinkObjects>false</LinkObjects>\n+      <Command Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">F:\\deps\\protobuf\\protobuf-3.4.1\\cmake\\build\\vs\\Debug\\protoc.exe --proto_path=%(RootDir)%(Directory) %(Fullpath) --cpp_out=.\\GeneratedFiles</Command>\n+      <AdditionalInputs Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">F:\\deps\\protobuf\\protobuf-3.4.1\\cmake\\build\\vs\\Debug\\protoc.exe</AdditionalInputs>\n+    </CustomBuild>\n+    <None Include=\"..\\..\\src\\qt\\macdockiconhandler.mm\" />\n+    <None Include=\"..\\..\\src\\qt\\macnotificationhandler.mm\" />\n+    <None Include=\"..\\..\\src\\qtes\\icons\\bitcoin.icns\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\bitcoin.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\clock_0.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\clock_1.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\clock_2.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\clock_3.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\clock_4.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\connect-0.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\connect-1.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\connect-2.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\connect-3.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\connect-4.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\hd_disabled.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\hd_enabled.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\mine.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\network_disabled.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\qt.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\transaction0.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\tx_in.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\tx_inout.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"..\\..\\src\\qtes\\src\\verify.svg\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </None>\n+    <None Include=\"GeneratedFiles\\bitcoin.moc\" />\n+    <None Include=\"GeneratedFiles\\bitcoinamountfield.moc\" />\n+    <None Include=\"GeneratedFiles\\intro.moc\" />\n+    <None Include=\"GeneratedFiles\\overviewpage.moc\" />\n+    <None Include=\"GeneratedFilespcconsole.moc\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\about.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\about_qt.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\add.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\address-book.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\bitcoin.ico\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\bitcoin.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\bitcoin_testnet.ico\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\chevron.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\clock1.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\clock2.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\clock3.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\clock4.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\clock5.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\configure.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\connect0.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\connect1.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\connect2.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\connect3.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\connect4.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\debugwindow.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\edit.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\editcopy.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\editpaste.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\export.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\eye.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\eye_minus.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\eye_plus.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\filesave.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\fontbigger.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\fontsmaller.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\hd_disabled.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\hd_enabled.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\history.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\info.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\key.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\lock_closed.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\lock_open.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\network_disabled.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\open.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\overview.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\quit.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\iconseceive.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\iconsemove.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\send.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\synced.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\transaction0.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\transaction2.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\transaction_abandoned.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\transaction_conflicted.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\tx_inout.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\tx_input.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\tx_mined.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\tx_output.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\verify.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\icons\\warning.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-000.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-001.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-002.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-003.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-004.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-005.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-006.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-007.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-008.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-009.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-010.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-011.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-012.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-013.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-014.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-015.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-016.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-017.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-018.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-019.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-020.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-021.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-022.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-023.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-024.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-025.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-026.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-027.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-028.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-029.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-030.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-031.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-032.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-033.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-034.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\movies\\spinner-035.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+    <Image Include=\"..\\..\\src\\qtes\\src\\spinner.png\">\n+      <DeploymentContent>true</DeploymentContent>\n+    </Image>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"GeneratedFiles\\qrc_bitcoin.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\qrc_bitcoin_locale.cpp\" />\n+    <CustomBuild Include=\"..\\..\\src\\qt\\bitcoin.cpp\">\n+      <Command>\"$(QTDIR)\\bin\\moc.exe\" \"%(Fullpath)\" -o .\\GeneratedFiles\\%(Filename).moc $(MOC_DEF)</Command>\n+      <Message>Qt moc generation for %(Identity)</Message>\n+      <Outputs>.\\GeneratedFiles\\%(Filename).moc</Outputs>\n+      <AdditionalInputs>(QTDIR)\\bin\\moc.exe</AdditionalInputs>\n+    </CustomBuild>\n+    <CustomBuild Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\">\n+      <Command>\"$(QTDIR)\\bin\\moc.exe\" \"%(Fullpath)\" -o .\\GeneratedFiles\\%(Filename).moc $(MOC_DEF)</Command>\n+      <Message>Qt moc generation for %(Identity)</Message>\n+      <Outputs>.\\GeneratedFiles\\%(Filename).moc</Outputs>\n+      <AdditionalInputs>(QTDIR)\\bin\\moc.exe</AdditionalInputs>\n+    </CustomBuild>\n+    <CustomBuild Include=\"..\\..\\src\\qt\\intro.cpp\">\n+      <Command>\"$(QTDIR)\\bin\\moc.exe\" \"%(Fullpath)\" -o .\\GeneratedFiles\\%(Filename).moc $(MOC_DEF)</Command>\n+      <Message>Qt moc generation for %(Identity)</Message>\n+      <Outputs>.\\GeneratedFiles\\%(Filename).moc</Outputs>\n+      <AdditionalInputs>(QTDIR)\\bin\\moc.exe</AdditionalInputs>\n+    </CustomBuild>\n+    <CustomBuild Include=\"..\\..\\src\\qt\\overviewpage.cpp\">\n+      <Command>\"$(QTDIR)\\bin\\moc.exe\" \"%(Fullpath)\" -o .\\GeneratedFiles\\%(Filename).moc $(MOC_DEF)</Command>\n+      <Message>Qt moc generation for %(Identity)</Message>\n+      <Outputs>.\\GeneratedFiles\\%(Filename).moc</Outputs>\n+      <AdditionalInputs>(QTDIR)\\bin\\moc.exe</AdditionalInputs>\n+    </CustomBuild>\n+    <CustomBuild Include=\"..\\..\\src\\qtpcconsole.cpp\">\n+      <Command>\"$(QTDIR)\\bin\\moc.exe\" \"%(Fullpath)\" -o .\\GeneratedFiles\\%(Filename).moc $(MOC_DEF)</Command>\n+      <Message>Qt moc generation for %(Identity)</Message>\n+      <Outputs>.\\GeneratedFiles\\%(Filename).moc</Outputs>\n+      <AdditionalInputs>(QTDIR)\\bin\\moc.exe</AdditionalInputs>\n+    </CustomBuild>\n+    <ClCompile Include=\"GeneratedFiles\\moc_addressbookpage.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_addresstablemodel.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_askpassphrasedialog.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_bantablemodel.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_bitcoinaddressvalidator.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_bitcoinamountfield.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_bitcoingui.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_bitcoinunits.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_callback.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_clientmodel.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_coincontroldialog.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_coincontroltreewidget.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_csvmodelwriter.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_editaddressdialog.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_guiconstants.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_guiutil.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_intro.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_macdockiconhandler.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_macnotificationhandler.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_modaloverlay.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_networkstyle.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_notificator.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_openuridialog.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_optionsdialog.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_optionsmodel.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_overviewpage.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_paymentrequestplus.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_paymentserver.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_peertablemodel.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_platformstyle.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_qvalidatedlineedit.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_qvaluecombobox.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_receivecoinsdialog.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_receiverequestdialog.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_recentrequeststablemodel.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_rpcconsole.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_sendcoinsdialog.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_sendcoinsentry.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_signverifymessagedialog.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_splashscreen.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_trafficgraphwidget.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_transactiondesc.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_transactiondescdialog.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_transactionfilterproxy.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_transactionrecord.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_transactiontablemodel.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_transactionview.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_utilitydialog.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_walletframe.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_walletmodel.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_walletmodeltransaction.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_walletview.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\moc_winshutdownmonitor.cpp\" />\n+    <ClCompile Include=\"GeneratedFiles\\paymentrequest.pb.cc\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClInclude Include=\"GeneratedFiles\\paymentrequest.pb.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_addressbookpage.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_askpassphrasedialog.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_coincontroldialog.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_debugwindow.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_editaddressdialog.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_helpmessagedialog.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_intro.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_modaloverlay.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_openuridialog.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_optionsdialog.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_overviewpage.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_receivecoinsdialog.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_receiverequestdialog.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_sendcoinsdialog.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_sendcoinsentry.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_signverifymessagedialog.h\" />\n+    <ClInclude Include=\"GeneratedFiles\\ui_transactiondescdialog.h\" />\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+    <Linkage-protobuf>static</Linkage-protobuf>\n+    <CustomBuildBeforeTargets>ClCompile</CustomBuildBeforeTargets>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+    <Linkage-protobuf>static</Linkage-protobuf>\n+    <CustomBuildBeforeTargets>ClCompile</CustomBuildBeforeTargets>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+    <Linkage-protobuf>static</Linkage-protobuf>\n+    <CustomBuildBeforeTargets>ClCompile</CustomBuildBeforeTargets>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+    <Linkage-protobuf>static</Linkage-protobuf>\n+    <CustomBuildBeforeTargets>ClCompile</CustomBuildBeforeTargets>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>false</IntrinsicFunctions>\n+      <PreprocessorDefinitions>_X86_;WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>.\\GeneratedFiles;..\\..\\src;..\\..\\src\\univalue\\include;.\\QtGenerated\\mocheaders</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>_X86_;WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>.\\GeneratedFiles;..\\..\\src;..\\..\\src\\univalue\\include;.\\QtGenerated\\mocheaders</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>.\\GeneratedFiles;..\\..\\src;..\\..\\src\\univalue\\include;.\\QtGenerated\\mocheaders</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>.\\GeneratedFiles;..\\..\\src;..\\..\\src\\univalue\\include;.\\QtGenerated\\mocheaders</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+  <Target Name=\"QtHeadersMocCodeGeneration\" BeforeTargets=\"PrepareForBuild\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the Qt headers moc code generation tasks.</ErrorText>\n+    </PropertyGroup>\n+    <ItemGroup>\n+      <QtMocHeaderFiles Include=\"..\\..\\src\\qt\\*.h\" />\n+    </ItemGroup>\n+    <Exec Command=\"$(QTDIR)\\bin\\moc.exe &quot;%(QtMocHeaderFiles.Identity)&quot; -o .\\GeneratedFiles\\moc_%(Filename).cpp $(MOC_DEF)\" />\n+  </Target>\n+  <Target Name=\"QtFormsCodeGeneration\" BeforeTargets=\"PrepareForBuild\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the Qt forms code generation tasks.</ErrorText>\n+    </PropertyGroup>\n+    <ItemGroup>\n+      <QtFormFiles Include=\"..\\..\\src\\qt\\forms\\*.ui\" />\n+    </ItemGroup>\n+    <Exec Command=\"$(QTDIR)\\bin\\uic.exe &quot;%(QtFormFiles.Identity)&quot; -o .\\GeneratedFiles\\ui_%(Filename).h\" />\n+  </Target>\n+  <Target Name=\"QtLocaleCodeGeneration\" BeforeTargets=\"PrepareForBuild\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the Qt local code generation tasks.</ErrorText>\n+    </PropertyGroup>\n+    <ItemGroup>\n+      <QtLocaleFiles Include=\"..\\..\\src\\qt\\locale\\*.ts\" />\n+    </ItemGroup>\n+    <Exec Command=\"$(QTDIR)\\bin\\lrelease.exe &quot;%(QtLocaleFiles.Identity)&quot; -qm ..\\..\\src\\qt\\locale\\%(Filename).qm\" />\n+  </Target>\n+  <ImportGroup Label=\"ExtensionTargets\">\n+    <!--<Import Label=\"berkleyDbTarget\" Project=\"f:\\deps\\db-4.8.30\\db.targets\" />\n+    <Import Label=\"opensslTarget\" Project=\"f:\\deps\\openssl\\1.0.2\\openssl.targets\" />\n+    <Import Label=\"qtTarget\" Project=\"F:\\deps\\qt\\5.9.2-git-ssl\\vc141-x86elease\\qt.targets\" />\n+    <Import Label=\"protobufTarget\" Project=\"f:\\deps\\protobuf\\protobuf.targets\" />-->\n+  </ImportGroup>\n+  <ProjectExtensions>\n+    <VisualStudio>\n+      <UserProperties MocDir=\".\\GeneratedFiles\" UicDir=\".\\GeneratedFiles\" RccDir=\".\\GeneratedFiles\" lupdateOptions=\"\" lupdateOnBuild=\"0\" lreleaseOptions=\"\" Qt5Version_x0020_Win32=\"5.9.1_vs140_x86\" Qt5Version_x0020_x64=\"5.9.1_vs140_x86\" MocOptions=\"DUNICODE -DWIN32 -DQT_DLL -DQT_CORE_LIB -DQT_GUI_LIB -DQT_WIDGETS_LIB &quot;-I.\\GeneratedFiles&quot; &quot;-I.&quot; &quot;-I$(QTDIR)\\include&quot; &quot;-I$(QTDIR)\\include\\QtCore&quot; &quot;-I$(QTDIR)\\include\\QtGui&quot; &quot;-I$(QTDIR)\\include\\QtWidgets&quot;\" />\n+    </VisualStudio>\n+  </ProjectExtensions>\n+</Project>"
      },
      {
        "sha": "9d4ac1a7f74c07a030e18f2f7c33391a782ac5cd",
        "filename": "build_msvc/libbitcoin_server/libbitcoin_server.vcxproj",
        "status": "added",
        "additions": 212,
        "deletions": 0,
        "changes": 212,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,212 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{460FEE33-1FE1-483F-B3BF-931FF8E969A5}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>libbitcoin_server</RootNamespace>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\addrdb.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\addrman.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\blockencodings.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\bloom.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\chain.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\checkpoints.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\consensus\\tx_verify.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\dbwrapper.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\httprpc.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\httpserver.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\index\\base.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\init.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\merkleblock.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\miner.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\net.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\net_processing.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\noui.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\outputtype.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\policy\\fees.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\policy\\policy.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\policy\\rbf.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\pow.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\rest.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\shutdown.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\rpc\\blockchain.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\rpc\\mining.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\rpc\\misc.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\rpc\\net.cpp\">\n+      <ObjectFileName Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(IntDir)\\netrpc.obj</ObjectFileName>\n+      <ObjectFileName Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(IntDir)\\netrpc.obj</ObjectFileName>\n+      <ObjectFileName Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(IntDir)\\netrpc.obj</ObjectFileName>\n+      <ObjectFileName Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(IntDir)\\netrpc.obj</ObjectFileName>\n+    </ClCompile>\n+    <ClCompile Include=\"..\\..\\src\\rpc\\rawtransaction.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\rpc\\server.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\rpc\\util.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\ismine.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\sigcache.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\timedata.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\torcontrol.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\txdb.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\txmempool.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\ui_interface.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\validation.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\validationinterface.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\versionbits.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\index\\txindex.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <None Include=\"packages.config\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClInclude Include=\"..\\..\\srcpcegister.h\" />\n+  </ItemGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "9e960682e56048d0f9ff42d3d8e7a74a46331859",
        "filename": "build_msvc/libbitcoin_util/libbitcoin_util.vcxproj",
        "status": "added",
        "additions": 196,
        "deletions": 0,
        "changes": 196,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,196 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>libbitcoin_util</RootNamespace>\n+    <ProjectName>libbitcoin_util</ProjectName>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalLibraryDirectories>\n+      </AdditionalLibraryDirectories>\n+    </Link>\n+    <ProjectReference>\n+      <LinkLibraryDependencies>false</LinkLibraryDependencies>\n+    </ProjectReference>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalLibraryDirectories>\n+      </AdditionalLibraryDirectories>\n+    </Link>\n+    <ProjectReference>\n+      <LinkLibraryDependencies>false</LinkLibraryDependencies>\n+    </ProjectReference>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalLibraryDirectories>\n+      </AdditionalLibraryDirectories>\n+    </Link>\n+    <ProjectReference>\n+      <LinkLibraryDependencies>false</LinkLibraryDependencies>\n+    </ProjectReference>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalLibraryDirectories>\n+      </AdditionalLibraryDirectories>\n+    </Link>\n+    <ProjectReference>\n+      <LinkLibraryDependencies>false</LinkLibraryDependencies>\n+    </ProjectReference>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\chainparamsbase.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\clientversion.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\compat\\glibcxx_sanity.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\compat\\glibc_sanity.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\compat\\strnlen.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\fs.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\logging.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\random.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\rpc\\protocol.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\support\\cleanse.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\support\\lockedpool.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\sync.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\threadinterrupt.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\util.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\utilmoneystr.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\utilstrencodings.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\utiltime.cpp\" />\n+  </ItemGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "64f3e16289ff6f09b155b0e0c51e846ad00c6ab3",
        "filename": "build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj",
        "status": "added",
        "additions": 177,
        "deletions": 0,
        "changes": 177,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,177 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\wallet\\coinselection.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\coincontrol.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\crypter.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\db.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\feebumper.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\fees.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\init.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\rpcdump.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\rpcwallet.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\wallet.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\walletdb.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\walletutil.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <None Include=\"packages.config\" />\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{93B86837-B543-48A5-A89B-7C87ABB77DF2}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>libbitcoin_wallet</RootNamespace>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\wallet;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\wallet;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\wallet;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\wallet;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "d7fbdd94b73a503490c8b72ceeb8df3689e9ef76",
        "filename": "build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj",
        "status": "added",
        "additions": 169,
        "deletions": 0,
        "changes": 169,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,169 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\zmq\\zmqabstractnotifier.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\zmq\\zmqnotificationinterface.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\zmq\\zmqpublishnotifier.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\zmq\\zmqrpc.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <None Include=\"packages.config\" />\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{792D487F-F14C-49FC-A9DE-3FC150F31C3F}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>libbitcoin_zmq</RootNamespace>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>NOMINMAX;ZMQ_STATIC;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>NOMINMAX;ZMQ_STATIC;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>NOMINMAX;ZMQ_STATIC;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>NOMINMAX;ZMQ_STATIC;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "e6f4885e5e6d39b473603c2dd4725c33c81213d3",
        "filename": "build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "status": "added",
        "additions": 199,
        "deletions": 0,
        "changes": 199,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,199 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\arith_uint256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\consensus\\merkle.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\aes.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\chacha20.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\hmac_sha256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\hmac_sha512.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\ripemd160.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha1.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha256_sse4.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha512.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\hash.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\primitives\\block.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\primitives\\transaction.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\pubkey.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\bitcoinconsensus.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\interpreter.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\script.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\script_error.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\uint256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\utilstrencodings.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <None Include=\"packages.config\" />\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>bitcoind</RootNamespace>\n+    <ProjectName>libbitcoin_consensus</ProjectName>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+    <Linkage-secp256k1>\n+    </Linkage-secp256k1>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+    <Linkage-secp256k1>\n+    </Linkage-secp256k1>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+    <Linkage-secp256k1>\n+    </Linkage-secp256k1>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+    <Linkage-secp256k1>\n+    </Linkage-secp256k1>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>false</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <ExceptionHandling>false</ExceptionHandling>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>false</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <ExceptionHandling>false</ExceptionHandling>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>false</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <ExceptionHandling>false</ExceptionHandling>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>false</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <ExceptionHandling>false</ExceptionHandling>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "57d469debf0d1b19f7f4373a620d38c61212ab3b",
        "filename": "build_msvc/libunivalue/libunivalue.vcxproj",
        "status": "added",
        "additions": 160,
        "deletions": 0,
        "changes": 160,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libunivalue/libunivalue.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/libunivalue/libunivalue.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libunivalue/libunivalue.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,160 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_get.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_read.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_write.cpp\" />\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{5724BA7D-A09A-4BA8-800B-C4C1561B3D69}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>libunivalue</RootNamespace>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "12868a987418158684c5aa5dd6eceef6b7116ba3",
        "filename": "build_msvc/msbuild/tasks/hexdump.targets",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/msbuild/tasks/hexdump.targets",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/msbuild/tasks/hexdump.targets",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msbuild/tasks/hexdump.targets?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,53 @@\n+<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <UsingTask\n+    TaskName=\"HeaderFromHexdump\"\n+    TaskFactory=\"CodeTaskFactory\"\n+    AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\" >\n+    <ParameterGroup>\n+        <RawFilePath Required=\"true\" />\n+        <HeaderFilePath Required=\"true\" />\n+        <SourceHeader Required=\"true\" />\n+        <SourceFooter Required=\"true\" />\n+    </ParameterGroup>\n+    <Task>\n+      <Using Namespace=\"System\"/>\n+      <Using Namespace=\"System.IO\"/>\n+      <Code Type=\"Fragment\" Language=\"cs\">\n+<![CDATA[\n+Log.LogMessage(\"msbuild inline hexdump task for \" + RawFilePath + \".\");\n+if(File.Exists(RawFilePath) == false) {\n+    Log.LogError(\"hexdump task could not locate \" + RawFilePath + \".\");\n+}\n+else {\n+    FileInfo inFileInfo = new FileInfo(RawFilePath);\n+    FileInfo outFileInfo = new FileInfo(HeaderFilePath);\n+\n+    if (outFileInfo.Exists == false || inFileInfo.LastWriteTime > outFileInfo.LastWriteTime)\n+    {\n+      using (Stream inStm = File.OpenRead(RawFilePath))\n+      {\n+          using (StreamWriter sw = new StreamWriter(HeaderFilePath))\n+          {\n+              sw.WriteLine(SourceHeader);\n+              int count = 0;\n+              int rawChar = inStm.ReadByte();\n+              while(rawChar != -1)\n+              {\n+                  sw.Write(\"0x{0:x2}, \", rawChar);\n+                  count++;\n+                  if(count % 8 == 0)\n+                  {\n+                      sw.WriteLine();\n+                  }\n+                  rawChar = inStm.ReadByte();\n+              }\n+              sw.WriteLine(SourceFooter);\n+          }\n+      }\n+   }\n+}\n+]]>\n+      </Code>\n+    </Task>\n+  </UsingTask>\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "b2d4c118f32120a133636330b02ba443ee94af3a",
        "filename": "build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "status": "added",
        "additions": 146,
        "deletions": 0,
        "changes": 146,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,146 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{51201D5E-D939-4854-AE9D-008F03FF518E}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>test_bitcoinqt</RootNamespace>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "444a2ed7257800edbab2e09a3a6d9ef7ba4e3e8f",
        "filename": "build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "status": "added",
        "additions": 207,
        "deletions": 0,
        "changes": 207,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin/test_bitcoin.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,207 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\test\\*_tests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_tests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\test_bitcoin.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\test_bitcoin_main.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\test\\wallet_test_fixture.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{A56B73DB-D46D-4882-8374-1FE3FFA08F07}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>test_bitcoin</RootNamespace>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;NOMINMAX;WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;..\\..\\src\\test;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+      <AdditionalDependencies>boost_test_exec_monitor-vc140-mt-gd.lib;crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;NOMINMAX;WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;..\\..\\src\\test;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>boost_test_exec_monitor-vc140-mt-gd.lib;crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;NOMINMAX;WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;..\\..\\src\\test;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>boost_test_exec_monitor-vc140-mt.lib;crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;NOMINMAX;WIN32;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;..\\..\\src\\test;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>boost_test_exec_monitor-vc140-mt.lib;crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <Target Name=\"RawBenchHeaderGen\" BeforeTargets=\"PrepareForBuild\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the JSON test header generation task.</ErrorText>\n+    </PropertyGroup>\n+    <ItemGroup>\n+      <JsonTestFile Include=\"..\\..\\src\\test\\data\\*.json\" />\n+    </ItemGroup>\n+    <HeaderFromHexdump RawFilePath=\"%(JsonTestFile.FullPath)\" HeaderFilePath=\"%(JsonTestFile.FullPath).h\" SourceHeader=\"namespace json_tests{ static unsigned const char %(JsonTestFile.Filename)[] = {\" SourceFooter=\"};}\" />\n+  </Target>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+  <Import Label=\"hexdumpTarget\" Project=\"..\\msbuild\\tasks\\hexdump.targets\" />\n+</Project>"
      },
      {
        "sha": "0068f588cc8b878c39ba1d039173d5bd1982036a",
        "filename": "build_msvc/testconsensus/testconsensus.cpp",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/testconsensus/testconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/testconsensus/testconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/testconsensus/testconsensus.cpp?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,50 @@\n+#include <iostream>\n+\n+// bitcoin includes.\n+#include <..\\src\\script\\bitcoinconsensus.h>\n+#include <..\\src\\primitives\\transaction.h>\n+#include <..\\src\\script\\script.h>\n+#include <..\\src\\streams.h>\n+#include <..\\src\\version.h>\n+\n+CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CScriptWitness& scriptWitness, int nValue = 0)\n+{\n+    CMutableTransaction txSpend;\n+    txSpend.nVersion = 1;\n+    txSpend.nLockTime = 0;\n+    txSpend.vin.resize(1);\n+    txSpend.vout.resize(1);\n+    txSpend.vin[0].scriptWitness = scriptWitness;\n+    txSpend.vin[0].prevout.hash = uint256();\n+    txSpend.vin[0].prevout.n = 0;\n+    txSpend.vin[0].scriptSig = scriptSig;\n+    txSpend.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;\n+    txSpend.vout[0].scriptPubKey = CScript();\n+    txSpend.vout[0].nValue = nValue;\n+\n+    return txSpend;\n+}\n+\n+int main()\n+{\n+    std::cout << \"bitcoinconsensus version: \" << bitcoinconsensus_version() << std::endl;\n+\n+    CScript pubKeyScript;\n+    pubKeyScript << OP_1 << OP_0 << OP_1;\n+\n+    int amount = 0; // 600000000;\n+\n+    CScript scriptSig;\n+    CScriptWitness scriptWitness;\n+    CTransaction vanillaSpendTx = BuildSpendingTransaction(scriptSig, scriptWitness, amount);\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << vanillaSpendTx;\n+\n+    bitcoinconsensus_error err;\n+    auto op0Result = bitcoinconsensus_verify_script_with_amount(pubKeyScript.data(), pubKeyScript.size(), amount, (const unsigned char*)&stream[0], stream.size(), 0, bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL, &err);\n+    std::cout << \"Op0 result: \" << op0Result << \", error code \" << err << std::endl;\n+\n+    getchar();\n+\n+    return 0;\n+}"
      },
      {
        "sha": "d73988df1cb8407c320d99f9ee3571376f3d5bb1",
        "filename": "build_msvc/testconsensus/testconsensus.vcxproj",
        "status": "added",
        "additions": 173,
        "deletions": 0,
        "changes": 173,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/testconsensus/testconsensus.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/build_msvc/testconsensus/testconsensus.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/testconsensus/testconsensus.vcxproj?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,173 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{E78473E9-B850-456C-9120-276301E04C06}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>testconsensus</RootNamespace>\n+    <ProjectName>test_libbitcoinconsensus</ProjectName>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+    <Linkage-secp256k1>static</Linkage-secp256k1>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+    <Linkage-secp256k1>static</Linkage-secp256k1>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+    <Linkage-secp256k1>static</Linkage-secp256k1>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_SCL_SECURE_NO_WARNINGS;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src\\;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src\\;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <DataExecutionPrevention>true</DataExecutionPrevention>\n+      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src\\;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src\\;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"testconsensus.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "4275796b50463cd05eec863725819a8061a00bef",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 331,
        "deletions": 91,
        "changes": 422,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,11 +1,11 @@\n dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n AC_PREREQ([2.60])\n define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 14)\n+define(_CLIENT_VERSION_MINOR, 17)\n define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_IS_RELEASE, false)\n-define(_COPYRIGHT_YEAR, 2017)\n+define(_COPYRIGHT_YEAR, 2018)\n define(_COPYRIGHT_HOLDERS,[The %s developers])\n define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n@@ -19,6 +19,12 @@ BITCOIN_GUI_NAME=bitcoin-qt\n BITCOIN_CLI_NAME=bitcoin-cli\n BITCOIN_TX_NAME=bitcoin-tx\n \n+dnl Unless the user specified ARFLAGS, force it to be cr\n+AC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])\n+if test \"x${ARFLAGS+set}\" != \"xset\"; then\n+  ARFLAGS=\"cr\"\n+fi\n+\n AC_CANONICAL_HOST\n \n AH_TOP([#ifndef BITCOIN_CONFIG_H])\n@@ -78,7 +84,7 @@ AC_PATH_TOOL(STRIP, strip)\n AC_PATH_TOOL(GCOV, gcov)\n AC_PATH_PROG(LCOV, lcov)\n dnl Python 3.x is supported from 3.4 on (see https://github.com/bitcoin/bitcoin/issues/7893)\n-AC_PATH_PROGS([PYTHON], [python3.6 python3.5 python3.4 python3 python2.7 python2 python])\n+AC_PATH_PROGS([PYTHON], [python3.7 python3.6 python3.5 python3.4 python3 python])\n AC_PATH_PROG(GENHTML, genhtml)\n AC_PATH_PROG([GIT], [git])\n AC_PATH_PROG(CCACHE,ccache)\n@@ -87,6 +93,11 @@ AC_PATH_PROG(HEXDUMP,hexdump)\n AC_PATH_TOOL(READELF, readelf)\n AC_PATH_TOOL(CPPFILT, c++filt)\n AC_PATH_TOOL(OBJCOPY, objcopy)\n+AC_PATH_PROG(DOXYGEN, doxygen)\n+if test -z \"$DOXYGEN\"; then\n+   AC_MSG_WARN([Doxygen not found])\n+fi\n+AM_CONDITIONAL([HAVE_DOXYGEN], [test -n \"$DOXYGEN\"])\n \n AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)\n \n@@ -137,9 +148,9 @@ AC_ARG_WITH([qrencode],\n \n AC_ARG_ENABLE([hardening],\n   [AS_HELP_STRING([--disable-hardening],\n-  [do not attempt to harden the resulting executables (default is to harden)])],\n+  [do not attempt to harden the resulting executables (default is to harden when possible)])],\n   [use_hardening=$enableval],\n-  [use_hardening=yes])\n+  [use_hardening=auto])\n \n AC_ARG_ENABLE([reduce-exports],\n   [AS_HELP_STRING([--enable-reduce-exports],\n@@ -156,15 +167,31 @@ AC_ARG_ENABLE([ccache],\n AC_ARG_ENABLE([lcov],\n   [AS_HELP_STRING([--enable-lcov],\n   [enable lcov testing (default is no)])],\n-  [use_lcov=yes],\n+  [use_lcov=$enableval],\n   [use_lcov=no])\n \n+AC_ARG_ENABLE([lcov-branch-coverage],\n+  [AS_HELP_STRING([--enable-lcov-branch-coverage],\n+  [enable lcov testing branch coverage (default is no)])],\n+  [use_lcov_branch=yes],\n+  [use_lcov_branch=no])\n+\n AC_ARG_ENABLE([glibc-back-compat],\n   [AS_HELP_STRING([--enable-glibc-back-compat],\n   [enable backwards compatibility with glibc])],\n   [use_glibc_compat=$enableval],\n   [use_glibc_compat=no])\n \n+AC_ARG_ENABLE([asm],\n+  [AS_HELP_STRING([--enable-asm],\n+  [Enable assembly routines (default is yes)])],\n+  [use_asm=$enableval],\n+  [use_asm=yes])\n+\n+if test \"x$use_asm\" = xyes; then\n+  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])\n+fi\n+\n AC_ARG_WITH([system-univalue],\n   [AS_HELP_STRING([--with-system-univalue],\n   [Build with system UniValue (default is no)])],\n@@ -192,6 +219,19 @@ AC_ARG_ENABLE([debug],\n     [enable_debug=$enableval],\n     [enable_debug=no])\n \n+# Enable different -fsanitize options\n+AC_ARG_WITH([sanitizers],\n+    [AS_HELP_STRING([--with-sanitizers],\n+                    [comma separated list of extra sanitizers to build with (default is none enabled)])],\n+    [use_sanitizers=$withval])\n+\n+# Enable gprof profiling\n+AC_ARG_ENABLE([gprof],\n+    [AS_HELP_STRING([--enable-gprof],\n+                    [use gprof profiling compiler flags (default is no)])],\n+    [enable_gprof=$enableval],\n+    [enable_gprof=no])\n+\n # Turn warnings into errors\n AC_ARG_ENABLE([werror],\n     [AS_HELP_STRING([--enable-werror],\n@@ -203,14 +243,47 @@ AC_LANG_PUSH([C++])\n AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR=\"-Werror\"],[CXXFLAG_WERROR=\"\"])\n \n if test \"x$enable_debug\" = xyes; then\n-    CPPFLAGS=\"$CPPFLAGS -DDEBUG -DDEBUG_LOCKORDER\"\n-    if test \"x$GCC\" = xyes; then\n-        CFLAGS=\"$CFLAGS -g3 -O0\"\n-    fi\n+  # Clear default -g -O2 flags\n+  if test \"x$CXXFLAGS_overridden\" = xno; then\n+\tCXXFLAGS=\"\"\n+  fi\n+  # Prefer -Og, fall back to -O0 if that is unavailable.\n+  AX_CHECK_COMPILE_FLAG(\n+    [-Og],\n+    [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -Og\"]],\n+    [AX_CHECK_COMPILE_FLAG([-O0],[[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -O0\"]],,[[$CXXFLAG_WERROR]])],\n+    [[$CXXFLAG_WERROR]])\n+\n+  # Prefer -g3, fall back to -g if that is unavailable.\n+  AX_CHECK_COMPILE_FLAG(\n+    [-g3],\n+    [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -g3\"]],\n+    [AX_CHECK_COMPILE_FLAG([-g],[[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -g\"]],,[[$CXXFLAG_WERROR]])],\n+    [[$CXXFLAG_WERROR]])\n+\n+  AX_CHECK_PREPROC_FLAG([-DDEBUG],[[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -DDEBUG\"]],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_PREPROC_FLAG([-DDEBUG_LOCKORDER],[[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -DDEBUG_LOCKORDER\"]],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-ftrapv],[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -ftrapv\"],,[[$CXXFLAG_WERROR]])\n+fi\n \n-    if test \"x$GXX\" = xyes; then\n-        CXXFLAGS=\"$CXXFLAGS -g3 -O0\"\n-    fi\n+if test x$use_sanitizers != x; then\n+  # First check if the compiler accepts flags. If an incompatible pair like\n+  # -fsanitize=address,thread is used here, this check will fail. This will also\n+  # fail if a bad argument is passed, e.g. -fsanitize=undfeined\n+  AX_CHECK_COMPILE_FLAG(\n+    [[-fsanitize=$use_sanitizers]],\n+    [[SANITIZER_CXXFLAGS=-fsanitize=$use_sanitizers]],\n+    [AC_MSG_ERROR([compiler did not accept requested flags])])\n+\n+  # Some compilers (e.g. GCC) require additional libraries like libasan,\n+  # libtsan, libubsan, etc. Make sure linking still works with the sanitize\n+  # flag. This is a separate check so we can give a better error message when\n+  # the sanitize flags are supported by the compiler but the actual sanitizer\n+  # libs are missing.\n+  AX_CHECK_LINK_FLAG(\n+    [[-fsanitize=$use_sanitizers]],\n+    [[SANITIZER_LDFLAGS=-fsanitize=$use_sanitizers]],\n+    [AC_MSG_ERROR([linker did not accept requested flags, you are missing required libraries])])\n fi\n \n ERROR_CXXFLAGS=\n@@ -219,23 +292,106 @@ if test \"x$enable_werror\" = \"xyes\"; then\n     AC_MSG_ERROR(\"enable-werror set but -Werror is not usable\")\n   fi\n   AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n fi\n \n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n-  AX_CHECK_COMPILE_FLAG([-Wall],[CXXFLAGS=\"$CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wextra],[CXXFLAGS=\"$CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wformat],[CXXFLAGS=\"$CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wvla],[CXXFLAGS=\"$CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wformat-security],[CXXFLAGS=\"$CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wall],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wextra],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wformat],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wvla],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wformat-security],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wthread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wrange-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wredundant-decls],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wredundant-decls\"],,[[$CXXFLAG_WERROR]])\n \n   ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n   ## unknown options if any other warning is produced. Test the -Wfoo case, and\n   ## set the -Wno-foo case if it works.\n-  AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wself-assign],[CXXFLAGS=\"$CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[CXXFLAGS=\"$CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wself-assign],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n fi\n+\n+# Check for optional instruction set support. Enabling these does _not_ imply that all code will\n+# be compiled with them, rather that specific objects/libs may use them after checking for runtime\n+# compatibility.\n+AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n+AX_CHECK_COMPILE_FLAG([-msse4.1],[[SSE41_CXXFLAGS=\"-msse4.1\"]],,[[$CXXFLAG_WERROR]])\n+AX_CHECK_COMPILE_FLAG([-mavx -mavx2],[[AVX2_CXXFLAGS=\"-mavx -mavx2\"]],,[[$CXXFLAG_WERROR]])\n+AX_CHECK_COMPILE_FLAG([-msse4 -msha],[[SHANI_CXXFLAGS=\"-msse4 -msha\"]],,[[$CXXFLAG_WERROR]])\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $SSE42_CXXFLAGS\"\n+AC_MSG_CHECKING(for assembler crc32 support)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #if defined(_MSC_VER)\n+    #include <intrin.h>\n+    #elif defined(__GNUC__) && defined(__SSE4_2__)\n+    #include <nmmintrin.h>\n+    #endif\n+  ]],[[\n+    uint64_t l = 0;\n+    l = _mm_crc32_u8(l, 0);\n+    l = _mm_crc32_u32(l, 0);\n+    l = _mm_crc32_u64(l, 0);\n+    return l;\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_hwcrc32=yes],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $SSE41_CXXFLAGS\"\n+AC_MSG_CHECKING(for SSE4.1 intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #include <immintrin.h>\n+  ]],[[\n+    __m128i l = _mm_set1_epi32(0);\n+    return _mm_extract_epi32(l, 3);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_sse41=yes; AC_DEFINE(ENABLE_SSE41, 1, [Define this symbol to build code that uses SSE4.1 intrinsics]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $AVX2_CXXFLAGS\"\n+AC_MSG_CHECKING(for AVX2 intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #include <immintrin.h>\n+  ]],[[\n+    __m256i l = _mm256_set1_epi32(0);\n+    return _mm256_extract_epi32(l, 7);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_avx2=yes; AC_DEFINE(ENABLE_AVX2, 1, [Define this symbol to build code that uses AVX2 intrinsics]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $SHANI_CXXFLAGS\"\n+AC_MSG_CHECKING(for SHA-NI intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #include <immintrin.h>\n+  ]],[[\n+    __m128i i = _mm_set1_epi32(0);\n+    __m128i j = _mm_set1_epi32(1);\n+    __m128i k = _mm_set1_epi32(2);\n+    return _mm_extract_epi32(_mm_sha256rnds2_epu32(i, i, k), 0);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_shani=yes; AC_DEFINE(ENABLE_SHANI, 1, [Define this symbol to build code that uses SHA-NI intrinsics]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n \n AC_ARG_WITH([utils],\n@@ -264,25 +420,25 @@ case $host in\n      use_pkgconfig=no\n \n      TARGET_OS=windows\n-     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(libmingwthrd missing))\n+     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(libkernel32 missing))\n+     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(libuser32 missing))\n+     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(libgdi32 missing))\n+     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(libcomdlg32 missing))\n+     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(libwinspool missing))\n+     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(libwinmm missing))\n+     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(libshell32 missing))\n+     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(libcomctl32 missing))\n+     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(libole32 missing))\n+     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(liboleaut32 missing))\n+     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(libuuid missing))\n+     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(librpcrt4 missing))\n+     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(libadvapi32 missing))\n+     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(libws2_32 missing))\n+     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(libmswsock missing))\n+     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(libshlwapi missing))\n+     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(libiphlpapi missing))\n+     AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(libcrypt32 missing))\n \n      # -static is interpreted by libtool, where it has a different meaning.\n      # In libtool-speak, it's -all-static.\n@@ -386,20 +542,37 @@ case $host in\n      CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n      OBJCXXFLAGS=\"$CXXFLAGS\"\n      ;;\n+   *android*)\n+     dnl make sure android stays above linux for hosts like *linux-android*\n+     LEVELDB_TARGET_FLAGS=\"-DOS_ANDROID\"\n+     ;;\n    *linux*)\n      TARGET_OS=linux\n      LEVELDB_TARGET_FLAGS=\"-DOS_LINUX\"\n      ;;\n+   *kfreebsd*)\n+     LEVELDB_TARGET_FLAGS=\"-DOS_KFREEBSD\"\n+     ;;\n    *freebsd*)\n      LEVELDB_TARGET_FLAGS=\"-DOS_FREEBSD\"\n      ;;\n    *openbsd*)\n      LEVELDB_TARGET_FLAGS=\"-DOS_OPENBSD\"\n      ;;\n+   *netbsd*)\n+     LEVELDB_TARGET_FLAGS=\"-DOS_NETBSD\"\n+     ;;\n+   *dragonfly*)\n+     LEVELDB_TARGET_FLAGS=\"-DOS_DRAGONFLYBSD\"\n+     ;;\n+   *solaris*)\n+     LEVELDB_TARGET_FLAGS=\"-DOS_SOLARIS\"\n+     ;;\n+   *hpux*)\n+     LEVELDB_TARGET_FLAGS=\"-DOS_HPUX\"\n+     ;;\n    *)\n-     OTHER_OS=`echo ${host_os} | awk '{print toupper($0)}'`\n-     AC_MSG_WARN([Guessing LevelDB OS as OS_${OTHER_OS}, please check whether this is correct, if not add an entry to configure.ac.])\n-     LEVELDB_TARGET_FLAGS=\"-DOS_${OTHER_OS}\"\n+     AC_MSG_ERROR(Cannot build leveldb for $host. Please file a bug report.)\n      ;;\n esac\n \n@@ -435,6 +608,12 @@ if test x$use_lcov = xyes; then\n     [AC_MSG_ERROR(\"lcov testing requested but --coverage linker flag does not work\")])\n   AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n     [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n+  AC_DEFINE(USE_COVERAGE, 1, [Define this symbol if coverage is enabled])\n+  CXXFLAGS=\"$CXXFLAGS -Og\"\n+fi\n+\n+if test x$use_lcov_branch != xno; then\n+  AC_SUBST(LCOV_OPTS, \"$LCOV_OPTS --rc lcov_branch_coverage=1\")\n fi\n \n dnl Check for endianness\n@@ -472,7 +651,7 @@ if test x$use_glibc_compat != xno; then\n \n   #glibc absorbed clock_gettime in 2.17. librt (its previous location) is safe to link\n   #in anyway for back-compat.\n-  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(lib missing))\n+  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(librt missing))\n \n   #__fdelt_chk's params and return type have changed from long unsigned int to long int.\n   # See which one is present here.\n@@ -487,16 +666,36 @@ if test x$use_glibc_compat != xno; then\n     [ fdelt_type=\"long int\"])\n   AC_MSG_RESULT($fdelt_type)\n   AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])\n+  AX_CHECK_LINK_FLAG([[-Wl,--wrap=__divmoddi4]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=__divmoddi4\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,--wrap=log2f]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=log2f\"])\n else\n   AC_SEARCH_LIBS([clock_gettime],[rt])\n fi\n \n+if test \"x$enable_gprof\" = xyes; then\n+    dnl -pg is incompatible with -pie. Since hardening and profiling together doesn't make sense,\n+    dnl we simply make them mutually exclusive here. Additionally, hardened toolchains may force\n+    dnl -pie by default, in which case it needs to be turned off with -no-pie.\n+\n+    if test x$use_hardening = xyes; then\n+        AC_MSG_ERROR(gprof profiling is not compatible with hardening. Reconfigure with --disable-hardening or --disable-gprof)\n+    fi\n+    use_hardening=no\n+    AX_CHECK_COMPILE_FLAG([-pg],[GPROF_CXXFLAGS=\"-pg\"],\n+        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$CXXFLAG_WERROR]])\n+\n+    AX_CHECK_LINK_FLAG([[-no-pie]], [GPROF_LDFLAGS=\"-no-pie\"])\n+    AX_CHECK_LINK_FLAG([[-pg]],[GPROF_LDFLAGS=\"$GPROF_LDFLAGS -pg\"],\n+        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$GPROF_LDFLAGS]])\n+fi\n+\n if test x$TARGET_OS != xwindows; then\n   # All windows code is PIC, forcing it on just adds useless compile warnings\n   AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\n fi\n \n if test x$use_hardening != xno; then\n+  use_hardening=yes\n   AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n   AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n \n@@ -512,15 +711,11 @@ if test x$use_hardening != xno; then\n   AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"])\n   AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"])\n   AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n-\n-  if test x$TARGET_OS != xwindows; then\n-    AX_CHECK_COMPILE_FLAG([-fPIE],[PIE_FLAGS=\"-fPIE\"])\n-    AX_CHECK_LINK_FLAG([[-pie]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"])\n-  fi\n+  AX_CHECK_LINK_FLAG([[-fPIE -pie]], [PIE_FLAGS=\"-fPIE\"; HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"],, [[$CXXFLAG_WERROR]])\n \n   case $host in\n     *mingw*)\n-       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(lib missing))\n+       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(libssp missing))\n     ;;\n   esac\n fi\n@@ -551,22 +746,6 @@ AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n \n AC_CHECK_DECLS([__builtin_clz, __builtin_clzl, __builtin_clzll])\n \n-dnl Check for MSG_NOSIGNAL\n-AC_MSG_CHECKING(for MSG_NOSIGNAL)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n- [[ int f = MSG_NOSIGNAL; ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_NOSIGNAL, 1,[Define this symbol if you have MSG_NOSIGNAL]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-dnl Check for MSG_DONTWAIT\n-AC_MSG_CHECKING(for MSG_DONTWAIT)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n- [[ int f = MSG_DONTWAIT; ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_DONTWAIT, 1,[Define this symbol if you have MSG_DONTWAIT]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n dnl Check for malloc_info (for memory statistics information in getmemoryinfo)\n AC_MSG_CHECKING(for getmemoryinfo)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n@@ -600,6 +779,28 @@ AC_LINK_IFELSE([AC_LANG_SOURCE([\n   ]\n )\n \n+TEMP_LDFLAGS=\"$LDFLAGS\"\n+LDFLAGS=\"$TEMP_LDFLAGS $PTHREAD_CFLAGS\"\n+AC_MSG_CHECKING([for thread_local support])\n+AC_LINK_IFELSE([AC_LANG_SOURCE([\n+  #include <thread>\n+  static thread_local int foo = 0;\n+  static void run_thread() { foo++;}\n+  int main(){\n+  for(int i = 0; i < 10; i++) { std::thread(run_thread).detach();}\n+  return foo;\n+  }\n+  ])],\n+  [\n+    AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n+    AC_MSG_RESULT(yes)\n+  ],\n+  [\n+    AC_MSG_RESULT(no)\n+  ]\n+)\n+LDFLAGS=\"$TEMP_LDFLAGS\"\n+\n # Check for different ways of gathering OS randomness\n AC_MSG_CHECKING(for Linux getrandom syscall)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n@@ -617,6 +818,14 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n  [ AC_MSG_RESULT(no)]\n )\n \n+AC_MSG_CHECKING(for getentropy via random.h)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n+ #include <sys/random.h>]],\n+ [[ getentropy(nullptr, 32) ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY_RAND, 1,[Define this symbol if the BSD getentropy system call is available with sys/random.h]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n AC_MSG_CHECKING(for sysctl KERN_ARND)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n   #include <sys/sysctl.h>]],\n@@ -626,6 +835,14 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n  [ AC_MSG_RESULT(no)]\n )\n \n+AC_MSG_CHECKING(for if type char equals int8_t)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdint.h>\n+  #include <type_traits>]],\n+ [[ static_assert(std::is_same<int8_t, char>::value, \"\"); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(CHAR_EQUALS_INT8, 1,[Define this symbol if type char equals int8_t]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n # Check for reduced exports\n if test x$use_reduce_exports = xyes; then\n   AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n@@ -649,15 +866,15 @@ dnl Check for libminiupnpc (optional)\n if test x$use_upnp != xno; then\n   AC_CHECK_HEADERS(\n     [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\n-    [AC_CHECK_LIB([miniupnpc], [main],[MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\n+    [AC_CHECK_LIB([miniupnpc], [upnpDiscover], [MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\n     [have_miniupnpc=no]\n   )\n fi\n \n BITCOIN_QT_INIT\n \n dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n-BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n+BITCOIN_QT_CONFIGURE([$use_pkgconfig])\n \n if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n     use_boost=no\n@@ -672,9 +889,11 @@ define(MINIMUM_REQUIRED_BOOST, 1.47.0)\n \n dnl Check for boost libs\n AX_BOOST_BASE([MINIMUM_REQUIRED_BOOST])\n+if test x$want_boost = xno; then\n+    AC_MSG_ERROR([[only libbitcoinconsensus can be built without boost]])\n+fi\n AX_BOOST_SYSTEM\n AX_BOOST_FILESYSTEM\n-AX_BOOST_PROGRAM_OPTIONS\n AX_BOOST_THREAD\n AX_BOOST_CHRONO\n \n@@ -743,7 +962,7 @@ fi\n \n if test x$use_boost = xyes; then\n \n-BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\n+BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\n \n \n dnl If boost (prior to 1.57) was built without c++11, it emulated scoped enums\n@@ -762,14 +981,14 @@ TEMP_CPPFLAGS=\"$CPPFLAGS\"\n CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n AC_MSG_CHECKING([for mismatched boost c++11 scoped enums])\n AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include \"boost/config.hpp\"\n-  #include \"boost/version.hpp\"\n+  #include <boost/config.hpp>\n+  #include <boost/version.hpp>\n   #if !defined(BOOST_NO_SCOPED_ENUMS) && !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && BOOST_VERSION < 105700\n   #define BOOST_NO_SCOPED_ENUMS\n   #define BOOST_NO_CXX11_SCOPED_ENUMS\n   #define CHECK\n   #endif\n-  #include \"boost/filesystem.hpp\"\n+  #include <boost/filesystem.hpp>\n   ]],[[\n   #if defined(CHECK)\n     boost::filesystem::copy_file(\"foo\", \"bar\");\n@@ -839,8 +1058,8 @@ if test x$use_pkgconfig = xyes; then\n   m4_ifdef(\n     [PKG_CHECK_MODULES],\n     [\n-      PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl  not found.)])\n-      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto  not found.)])\n+      PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl not found.)])\n+      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto not found.)])\n       BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n       if test x$use_qr != xno; then\n         BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n@@ -930,7 +1149,7 @@ if test x$system_univalue != xno ; then\n     m4_ifdef(\n       [PKG_CHECK_MODULES],\n       [\n-        PKG_CHECK_MODULES([UNIVALUE],[libunivalue],[found_univalue=yes],[true])\n+        PKG_CHECK_MODULES([UNIVALUE],[libunivalue >= 1.0.4],[found_univalue=yes],[true])\n       ]\n     )\n   else\n@@ -1113,6 +1332,11 @@ AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n+AM_CONDITIONAL([ENABLE_HWCRC32],[test x$enable_hwcrc32 = xyes])\n+AM_CONDITIONAL([ENABLE_SSE41],[test x$enable_sse41 = xyes])\n+AM_CONDITIONAL([ENABLE_AVX2],[test x$enable_avx2 = xyes])\n+AM_CONDITIONAL([ENABLE_SHANI],[test x$enable_shani = xyes])\n+AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n \n AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n@@ -1139,12 +1363,25 @@ AC_SUBST(BITCOIN_CLI_NAME)\n AC_SUBST(BITCOIN_TX_NAME)\n \n AC_SUBST(RELDFLAGS)\n+AC_SUBST(DEBUG_CPPFLAGS)\n+AC_SUBST(WARN_CXXFLAGS)\n+AC_SUBST(NOWARN_CXXFLAGS)\n+AC_SUBST(DEBUG_CXXFLAGS)\n+AC_SUBST(COMPAT_LDFLAGS)\n AC_SUBST(ERROR_CXXFLAGS)\n+AC_SUBST(GPROF_CXXFLAGS)\n+AC_SUBST(GPROF_LDFLAGS)\n AC_SUBST(HARDENED_CXXFLAGS)\n AC_SUBST(HARDENED_CPPFLAGS)\n AC_SUBST(HARDENED_LDFLAGS)\n AC_SUBST(PIC_FLAGS)\n AC_SUBST(PIE_FLAGS)\n+AC_SUBST(SANITIZER_CXXFLAGS)\n+AC_SUBST(SANITIZER_LDFLAGS)\n+AC_SUBST(SSE42_CXXFLAGS)\n+AC_SUBST(SSE41_CXXFLAGS)\n+AC_SUBST(AVX2_CXXFLAGS)\n+AC_SUBST(SHANI_CXXFLAGS)\n AC_SUBST(LIBTOOL_APP_LDFLAGS)\n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)\n@@ -1160,13 +1397,13 @@ AC_SUBST(EVENT_PTHREADS_LIBS)\n AC_SUBST(ZMQ_LIBS)\n AC_SUBST(PROTOBUF_LIBS)\n AC_SUBST(QR_LIBS)\n-AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/functional/config.ini])\n-AC_CONFIG_FILES([test/util/buildenv.py],[chmod +x test/util/buildenv.py])\n+AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n-AC_CONFIG_FILES([doc/Doxyfile])\n+AM_COND_IF([HAVE_DOXYGEN], [AC_CONFIG_FILES([doc/Doxyfile])])\n+AC_CONFIG_LINKS([contrib/filter-lcov.py:contrib/filter-lcov.py])\n AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])\n AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])\n-AC_CONFIG_LINKS([test/util/bctest.py:test/util/bctest.py])\n+AC_CONFIG_LINKS([test/util/rpcauth-test.py:test/util/rpcauth-test.py])\n \n dnl boost's m4 checks do something really nasty: they export these vars. As a\n dnl result, they leak into secp256k1's configure and crazy things happen.\n@@ -1195,7 +1432,7 @@ if test x$need_bundled_univalue = xyes; then\n   AC_CONFIG_SUBDIRS([src/univalue])\n fi\n \n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery\"\n+ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery --disable-jni\"\n AC_CONFIG_SUBDIRS([src/secp256k1])\n \n AC_OUTPUT\n@@ -1214,33 +1451,36 @@ esac\n dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n case ${OS} in\n    *Windows*)\n-     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  test/functional/config.ini > test/functional/config-2.ini\n-     mv test/functional/config-2.ini test/functional/config.ini\n+     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  test/config.ini > test/config-2.ini\n+     mv test/config-2.ini test/config.ini\n    ;;\n esac\n \n-echo \n+echo\n echo \"Options used to compile and link:\"\n echo \"  with wallet   = $enable_wallet\"\n echo \"  with gui / qt = $bitcoin_enable_qt\"\n if test x$bitcoin_enable_qt != xno; then\n-    echo \"    qt version  = $bitcoin_qt_got_major_vers\"\n     echo \"    with qr     = $use_qr\"\n fi\n echo \"  with zmq      = $use_zmq\"\n echo \"  with test     = $use_tests\"\n echo \"  with bench    = $use_bench\"\n echo \"  with upnp     = $use_upnp\"\n+echo \"  use asm       = $use_asm\"\n+echo \"  sanitizers    = $use_sanitizers\"\n echo \"  debug enabled = $enable_debug\"\n+echo \"  gprof enabled = $enable_gprof\"\n echo \"  werror        = $enable_werror\"\n-echo \n+echo\n echo \"  target os     = $TARGET_OS\"\n echo \"  build os      = $BUILD_OS\"\n echo\n echo \"  CC            = $CC\"\n echo \"  CFLAGS        = $CFLAGS\"\n-echo \"  CPPFLAGS      = $CPPFLAGS\"\n+echo \"  CPPFLAGS      = $DEBUG_CPPFLAGS $HARDENED_CPPFLAGS $CPPFLAGS\"\n echo \"  CXX           = $CXX\"\n-echo \"  CXXFLAGS      = $CXXFLAGS\"\n-echo \"  LDFLAGS       = $LDFLAGS\"\n-echo \n+echo \"  CXXFLAGS      = $DEBUG_CXXFLAGS $HARDENED_CXXFLAGS $WARN_CXXFLAGS $NOWARN_CXXFLAGS $ERROR_CXXFLAGS $GPROF_CXXFLAGS $CXXFLAGS\"\n+echo \"  LDFLAGS       = $PTHREAD_CFLAGS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS\"\n+echo \"  ARFLAGS       = $ARFLAGS\"\n+echo"
      },
      {
        "sha": "8915919766b14607bdc0db75f13b0646fc782522",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -21,23 +21,21 @@ Utility to generate the pnSeed[] array that is compiled into the client.\n Build Tools and Keys\n ---------------------\n \n-### [Debian](/contrib/debian) ###\n-Contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n+### Packaging ###\n+The [Debian](/contrib/debian) subfolder contains the copyright file.\n+\n+All other packaging related files can be found in the [bitcoin-core/packaging](https://github.com/bitcoin-core/packaging) repository.\n \n ### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n-Notes on getting Gitian builds up and running using KVM.\n+Files used during the gitian build process. For more information about gitian, see the [the Bitcoin Core documentation repository](https://github.com/bitcoin-core/docs).\n \n ### [Gitian-keys](/contrib/gitian-keys)\n PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n \n ### [MacDeploy](/contrib/macdeploy) ###\n Scripts and notes for Mac builds. \n \n-### [RPM](/contrib/rpm) ###\n-RPM spec file for building bitcoin-core on RPM based distributions\n-\n-### [Gitian-build](/contrib/gitian-build.sh) ###\n+### [Gitian-build](/contrib/gitian-build.py) ###\n Script for running full Gitian builds.\n \n Test and Verify Tools "
      },
      {
        "sha": "cccd4bde0d33d9dae39a23b53e2816ae5f1c5464",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -30,7 +30,7 @@ _bitcoind() {\n             ;;\n         *)\n \n-            # only parse -help if senseful\n+            # only parse -help if sensible\n             if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n                 local helpopts\n                 helpopts=$($bitcoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )"
      },
      {
        "sha": "fab9cc238156789c96e4b908fbe1e4d863ecebf9",
        "filename": "contrib/debian/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/README.md?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,21 +0,0 @@\n-\n-Debian\n-====================\n-This directory contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n-\n-## bitcoin: URI support ##\n-\n-\n-bitcoin-qt.desktop  (Gnome / Open Desktop)\n-To install:\n-\n-\tsudo desktop-file-install bitcoin-qt.desktop\n-\tsudo update-desktop-database\n-\n-If you build yourself, you will either need to modify the paths in\n-the .desktop file or copy or symlink your bitcoin-qt binary to `/usr/bin`\n-and the `../../share/pixmaps/bitcoin128.png` to `/usr/share/pixmaps`\n-\n-bitcoin-qt.protocol (KDE)\n-"
      },
      {
        "sha": "593d7584ab06d3147dfa56c708d250041472fd32",
        "filename": "contrib/debian/bitcoin-qt.desktop",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.desktop?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,13 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Name=Bitcoin Core\n-Comment=Connect to the Bitcoin P2P Network\n-Comment[de]=Verbinde mit dem Bitcoin peer-to-peer Netzwerk\n-Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=bitcoin-qt %u\n-Terminal=false\n-Type=Application\n-Icon=bitcoin128\n-MimeType=x-scheme-handler/bitcoin;\n-Categories=Office;Finance;"
      },
      {
        "sha": "e0b32373be68d74e075a779f083b3dededc574d7",
        "filename": "contrib/debian/bitcoin-qt.install",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.install?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,6 +0,0 @@\n-usr/local/bin/bitcoin-qt usr/bin\n-share/pixmaps/bitcoin32.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin16.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin128.png usr/share/pixmaps\n-debian/bitcoin-qt.desktop usr/share/applications\n-debian/bitcoin-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "7fb230eca8921cf3f2756a2e1fa3ea6ab808dca5",
        "filename": "contrib/debian/bitcoin-qt.lintian-overrides",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoin-qt.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoin-qt.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.lintian-overrides?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,2 +0,0 @@\n-# Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoin-qt: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "9a3cc31c09a8fb719315a546fb2144d423ade038",
        "filename": "contrib/debian/bitcoin-qt.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoin-qt.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoin-qt.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.manpages?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1 +0,0 @@\n-doc/man/bitcoin-qt.1"
      },
      {
        "sha": "014588d53679baf51055d70b8a621a99217eb160",
        "filename": "contrib/debian/bitcoin-qt.protocol",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoin-qt.protocol",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoin-qt.protocol",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.protocol?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,11 +0,0 @@\n-[Protocol]\n-exec=bitcoin-qt '%u'\n-protocol=bitcoin\n-input=none\n-output=none\n-helper=true\n-listing=\n-reading=false\n-writing=false\n-makedir=false\n-deleting=false"
      },
      {
        "sha": "7acb0b0aea668dd16129434813d05c0306617b68",
        "filename": "contrib/debian/bitcoin-tx.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.bash-completion?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1 +0,0 @@\n-contrib/bitcoin-tx.bash-completion\tbitcoin-tx"
      },
      {
        "sha": "2c21052a6876b4a0f94b79858ae1d164cf179b21",
        "filename": "contrib/debian/bitcoin-tx.install",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoin-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoin-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.install?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1 +0,0 @@\n-usr/local/bin/bitcoin-tx usr/bin"
      },
      {
        "sha": "861d49d07022e2468fca7c747d91b7fe4322e1c7",
        "filename": "contrib/debian/bitcoin-tx.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoin-tx.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoin-tx.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.manpages?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1 +0,0 @@\n-doc/man/bitcoin-tx.1"
      },
      {
        "sha": "5c69d78fbb0fc73017167bab3d8a1c6a78e85ed9",
        "filename": "contrib/debian/bitcoind.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.bash-completion?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,2 +0,0 @@\n-contrib/bitcoind.bash-completion\tbitcoind\n-contrib/bitcoin-cli.bash-completion\tbitcoin-cli"
      },
      {
        "sha": "4ded67d98e784e275c76839e7b06b413d774230e",
        "filename": "contrib/debian/bitcoind.examples",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoind.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoind.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.examples?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1 +0,0 @@\n-debian/examples/bitcoin.conf"
      },
      {
        "sha": "798ea851f6ef8a01e19984221efd327625fda92d",
        "filename": "contrib/debian/bitcoind.install",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.install?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,2 +0,0 @@\n-usr/local/bin/bitcoind usr/bin\n-usr/local/bin/bitcoin-cli usr/bin"
      },
      {
        "sha": "3f9f140bd827a1491ba6a0c46c1df16e428548bd",
        "filename": "contrib/debian/bitcoind.lintian-overrides",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoind.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoind.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.lintian-overrides?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,2 +0,0 @@\n-# Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoind: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "bab644ece1369ba4d8896ef507add76aae617d8e",
        "filename": "contrib/debian/bitcoind.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/bitcoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.manpages?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,2 +0,0 @@\n-doc/man/bitcoind.1\n-doc/man/bitcoin-cli.1"
      },
      {
        "sha": "33dab9b6388890a5ba10e47fcd3b833bb0875dc4",
        "filename": "contrib/debian/changelog",
        "status": "removed",
        "additions": 0,
        "deletions": 578,
        "changes": 578,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,578 +0,0 @@\n-bitcoin (0.14.1-trusty4) trusty; urgency=medium\n-\n-  * Re-enable UPnP support.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 05 May 2017 13:28:00 -0400\n-\n-bitcoin (0.14.1-trusty3) trusty; urgency=medium\n-\n-  * Build with qt5 if we are on a non-Ubuntu (ie non-Unity) distro.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 04 May 2017 17:13:00 -0400\n-\n-bitcoin (0.14.1-trusty2) trusty; urgency=medium\n-\n-  * Bump minimum boost version in deps.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 04 May 2017 17:12:00 -0400\n-\n-bitcoin (0.14.1-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Sat, 22 Apr 2017 17:10:00 -0400\n-\n-bitcoin (0.14.0-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 08 Mar 2017 10:30:00 -0500\n-\n-bitcoin (0.13.2-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 05 Jan 2017 09:59:00 -0500\n-\n-bitcoin (0.13.1-trusty2) trusty; urgency=medium\n-\n-  * Revert to Qt4, due to https://github.com/bitcoin/bitcoin/issues/9038\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 31 Oct 2016 11:16:00 -0400\n-\n-bitcoin (0.13.1-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-  * Backport updated bitcoin-qt.desktop from upstream master\n-  * Add zmq dependency\n-  * Switch to Qt5 (breaks precise, but that was already broken by C++11)\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 27 Oct 2016 17:32:00 -0400\n-\n-bitcoin (0.13.0-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Sun, 04 Sep 2016 22:09:00 -0400\n-\n-bitcoin (0.12.1-trusty1) trusty; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 18 Apr 2016 14:26:00 -0700\n-\n-bitcoin (0.12.0-trusty6) trusty; urgency=medium\n-\n-  * Fix program-options dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 25 Mar 2016 21:41:00 -0700\n-\n-bitcoin (0.12.0-trusty5) trusty; urgency=medium\n-\n-  * Test explicit --with-gui\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 23:25:00 -0800\n-\n-bitcoin (0.12.0-trusty4) trusty; urgency=medium\n-\n-  * Fix libevent-dev dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 23:25:00 -0800\n-\n-bitcoin (0.12.0-trusty3) trusty; urgency=medium\n-\n-  * Fix precise boost dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:55:00 -0800\n-\n-bitcoin (0.12.0-trusty2) trusty; urgency=medium\n-\n-  * Fix libevent dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:53:00 -0800\n-\n-bitcoin (0.12.0-trusty1) trusty; urgency=medium\n-\n-  * New upstream release\n-  * Various updates to contrib/debian were merged, a few were not\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:29:00 -0800\n-\n-bitcoin (0.11.2-trusty1) trusty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 13 Nov 2015 18:39:00 -0800\n-\n-bitcoin (0.11.1-trusty2) trusty; urgency=low\n-\n-  * Remove minupnpc builddep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 14 Oct 2015 23:06:00 -1000\n-\n-bitcoin (0.11.1-trusty1) trusty; urgency=high\n-\n-  * New upstream release.\n-  * Disable all UPnP support.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 14 Oct 2015 13:57:00 -1000\n-\n-bitcoin (0.11.0-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 14 Jul 2015 14:39:00 -1000\n-\n-bitcoin (0.10.2-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 29 Jun 2015 17:33:00 -1000\n-\n-bitcoin (0.10.1-precise3) precise; urgency=medium\n-\n-  * Fix build dep (include python).\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 09:28:00 -1000\n-\n-bitcoin (0.10.1-precise2) precise; urgency=medium\n-\n-  * Fix miniupnpc dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:33:00 -1000\n-\n-bitcoin (0.10.1-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:07:00 -1000\n-\n-bitcoin (0.10.0-precise1) precise; urgency=medium\n-\n-  * New upstream releases.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 18 Feb 2015 13:22:00 -1000\n-\n-bitcoin (0.9.4-precise1) precise; urgency=high\n-\n-  * New upstream releases.\n-\n- -- Matt Corallo (laptop - only while traveling) <matt@mattcorallo.com>  Mon, 12 Jan 2015 23:30:00 -1000\n-\n-bitcoin (0.9.3-precise1) precise; urgency=medium\n-\n-  * New upstream releases.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 26 Sep 2014 12:01:00 -0700\n-\n-bitcoin (0.9.1-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-  * Backport pull #4019\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 19 Apr 2014 17:29:00 -0400\n-\n-bitcoin (0.9.0-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Thu, 20 Mar 2014 13:10:00 -0400\n-\n-bitcoin (0.8.6-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-  * Make .desktop paths non-fixed (suggested by prusnak@github)\n-\n- -- Matt Corallo <matt@bluematt.me>  Fri, 13 Dec 2013 13:31:00 -0400\n-\n-bitcoin (0.8.5-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 15 Sep 2013 14:02:00 -0400\n-\n-bitcoin (0.8.4-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 4 Sep 2013 10:25:00 -0400\n-\n-bitcoin (0.8.3-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 26 Jun 2013 00:18:00 +0100\n-\n-bitcoin (0.8.2-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 29 Mar 2013 23:23:00 +0100\n-\n-bitcoin (0.8.1-natty3) natty; urgency=low\n-\n-  * New pixmaps\n-\n- -- Jonas Schnelli <jonas.schnelli@include7.ch>  Mon, 13 May 2013 16:14:00 +0100\n-\n-bitcoin (0.8.1-natty2) natty; urgency=low\n-\n-  * Remove dumb broken launcher script\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 24 Mar 2013 20:01:00 -0400\n-\n-bitcoin (0.8.1-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 19 Mar 2013 13:03:00 -0400\n-\n-bitcoin (0.8.0-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 23 Feb 2013 16:01:00 -0500\n-\n-bitcoin (0.7.2-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 15 Dec 2012 10:59:00 -0400\n-\n-bitcoin (0.7.1-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 24 Oct 2012 15:06:00 -0400\n-\n-bitcoin (0.7.0-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Mon, 17 Sep 2012 13:45:00 +0200\n-\n-bitcoin (0.6.3-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Mon, 25 Jun 2012 23:47:00 +0200\n-\n-bitcoin (0.6.2-natty1) natty; urgency=low\n-\n-  * Update package description and launch scripts.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 2 Jun 2012 16:41:00 +0200\n-\n-bitcoin (0.6.2-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 8 May 2012 16:27:00 -0500\n-\n-bitcoin (0.6.1-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 6 May 2012 20:09:00 -0500\n-\n-bitcoin (0.6.0-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-  * Add GNOME/KDE support for bitcoin-qt's bitcoin: URI support.\n-    Thanks to luke-jr for the KDE .protocol file.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 31 Mar 2012 15:35:00 -0500\n-\n-bitcoin (0.5.3-natty1) natty; urgency=low\n-\n-  * Mark for upload to PPA.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 14 Mar 2012 23:06:00 -0400\n-\n-bitcoin (0.5.3-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Tue, 10 Jan 2012 15:57:00 -0500\n-\n-bitcoin (0.5.2-natty1) natty; urgency=low\n-\n-  * Remove mentions on anonymity in package descriptions and manpage.\n-    These should never have been there, bitcoin isnt anonymous without\n-    a ton of work that virtually no users will ever be willing and\n-    capable of doing\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 7 Jan 2012 13:37:00 -0500\n-\n-bitcoin (0.5.2-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Fri, 16 Dec 2011 17:57:00 -0500\n-\n-bitcoin (0.5.1-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Fri, 16 Dec 2011 13:27:00 -0500\n-\n-bitcoin (0.5.0-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Mon, 21 Nov 2011 11:32:00 -0500\n-\n-bitcoin (0.5.0~rc7-natty0) natty; urgency=low\n-\n-  * New upstream release candidate.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 20 Nov 2011 17:08:00 -0500\n-\n-bitcoin (0.5.0~rc3-natty0) natty; urgency=low\n-\n-  * New upstream release candidate.\n-  * Don't set rpcpassword for bitcoin-qt.\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 8 Nov 2011 11:56:00 -0400\n-\n-bitcoin (0.5.0~rc1-natty1) natty; urgency=low\n-\n-  * Add test_bitcoin to build test\n-  * Fix clean\n-  * Remove uneccessary build-dependancies\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n-\n-bitcoin (0.5.0~rc1-natty0) natty; urgency=low\n-\n-  * Mark for natty\n-  * Fix broken build\n-  * Fix copyright listing\n-  * Remove bitcoin: URL handler until bitcoin actually has support for it (Oops)\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n-\n-bitcoin (0.5.0~rc1-2) experimental; urgency=low\n-\n-  * Add bitcoin-qt\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 25 Oct 2011 15:24:18 -0400\n-\n-bitcoin (0.5.0~rc1-1) experimental; urgency=low\n-\n-  * New upstream prerelease.\n-  * Add Github as alternate upstream source in watch file.\n-  * Stop build-depending on libcrypto++-dev, and drop patch 1000:\n-    Upstream no longer use crypto++.\n-  * Drop patch 1003: Upstream builds dynamic by default now.\n-  * Update copyright file: Drop notes on longer included sources.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Fri, 14 Oct 2011 00:16:18 +0200\n-\n-bitcoin (0.4.0-1) unstable; urgency=low\n-\n-  * New upstream release.\n-  * Stop repackaging source tarballs: No DFSG-violating stripping left.\n-  * Update copyright file:\n-    + Add Github URL to Source.\n-  * Drop dpkg-source local-options hint: Declared options are default\n-    since dpkg-source 1.16.1.\n-    + Add irc URL to Upstream-Contact.\n-    + Add comment on Bitcoin Developers to catch-all Files section.\n-    + Add Files sections for newly readded src/cryptopp/* (new custom\n-      BSD-like license), and newly added doc/build-osx.txt and\n-      src/makefile.osx (Expat).\n-  * Bump debhelper compatibility level to 7.\n-  * Suppress binary icns and gpg files.\n-  * Enable regression tests:\n-    + Build-depend on libboost-test-dev.\n-    + Extend patch 1003 to also dynamically link test binary.\n-    + Build and invoke test binary unless tests are disabled.\n-  * Tighten build-dependency on cdbs: Recent version needed to support\n-    debhelper 7.\n-  * Relax build-depend unversioned on debhelper: needed version\n-    satisfied even in oldstable.\n-  * Stop suppress optional build-dependencies: Satisfied in stable.\n-    Build-depend on devscripts (enabling copyright-check).\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Wed, 05 Oct 2011 01:48:53 +0200\n-\n-bitcoin (0.3.24~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-\n-  [ Jonas Smedegaard ]\n-  * Improve various usage hints:\n-    + Explicitly mention in long description that bitcoind contains\n-      daemon and command-line interface.\n-    + Extend README.Debian with section on lack of GUI, and add primary\n-      headline.\n-    + Avoid installing upstream README: contains no parts relevant for\n-      Debian usage.\n-    Thanks to richard for suggestions (see bug#629443).\n-  * Favor final releases over prereleases in rules and watch file.\n-    Thanks to Jan Dittberner.\n-  * Track -src (not -linux) tarballs in rules and watch file.\n-    Thanks to Jan Dittberner.\n-  * Drop patches 1004 and 1005 (integrated upstream) and simplify\n-    CXXFLAGS in rules file.\n-  * Stop stripping no longer included source-less binaries from upstream\n-    tarballs.\n-\n-  [ Jan Dittberner ]\n-  * refresh debian/patches/1000_use_system_crypto++.patch\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 19 Jul 2011 15:08:54 +0200\n-\n-bitcoin (0.3.21~dfsg-2) unstable; urgency=low\n-\n-  * Enable UPNP support:\n-    + Drop patch 1006.\n-    + Build-depend on libminiupnpc-dev.\n-    Thanks to Matt Corallo.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Sat, 28 May 2011 15:52:44 +0200\n-\n-bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-  * Refresh patches.\n-  * Drop patch 1002: no longer needed, as upstream use pkgconfig now.\n-  * Add patch 1006 to really unset USE_UPNP as aparently intended.\n-  * Adjust cleanup rule to preserve .gitignore files.\n-  * Update copyright file:\n-    + Bump format to draft 174 of DEP-5.\n-    + Shorten comments.\n-  * Bump policy compliance to standards-version 3.9.2.\n-  * Shorten Vcs-Browser paragraph in control file.\n-  * Fix mention daemon (not CLI tools) in short description.\n-  * Stop conflicting with or replace bitcoin-cli: Only transitional, no\n-    longer needed.\n-  * Link against unversioned berkeleydb. Update NEWS and README.Debian\n-    accordingly (and improve wording while at it).\n-    Closes: Bug#621425. Thanks to Ond\u0159ej Sur\u00fd.\n-  * This release also implicitly updates linkage against libcrypto++,\n-    which closes: bug#626953, #627024.\n-  * Disable linkage against not yet Debian packaged MiniUPnP.\n-  * Silence seemingly harmless noise about unused variables.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 17 May 2011 15:31:24 +0200\n-\n-bitcoin (0.3.20.2~dfsg-2) unstable; urgency=medium\n-\n-  * Fix have wrapper script execute real binary (not loop executing\n-    itself).\n-    Closes: bug#617290. Thanks to Philippe Gauthier and Etienne Laurin.\n-  * Set urgency=medium as the only (user-exposed) binary is useless\n-    without this fix and has been for some time.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Wed, 16 Mar 2011 09:11:06 +0100\n-\n-bitcoin (0.3.20.2~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-  * Fix provide and replace former package name bitcoin-cli.\n-    Closes: bug#618439. Thanks to Shane Wegner.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 15 Mar 2011 11:41:43 +0100\n-\n-bitcoin (0.3.20.01~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-\n-  [ Micah Anderson ]\n-  * Add myself as uploader.\n-\n-  [ Jonas Smedegaard ]\n-  * Add wrapper for bitcoind to ease initial startup.\n-  * Update patches:\n-    + Drop patch 2002: Applied upstream.\n-    + Add patch 1005 to add phtread linker option.\n-      Closes: bug#615619. Thanks to Shane Wegner.\n-    + Refresh patches.\n-  * Extend copyright years in rules file header.\n-  * Rewrite copyright file using draft svn166 of DEP5 format.\n-  * Rename binary package to bitcoind (from bincoin-cli).\n-    Closes: bug#614025. Thanks to Luke-Jr.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 01 Mar 2011 15:55:04 +0100\n-\n-bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n-\n-  * Fix override agressive optimizations.\n-  * Fix tighten build-dependencies to really fit backporting to Lenny:\n-    + Add fallback build-dependency on libdb4.6++-dev.\n-    + Tighten unversioned Boost build-dependencies to recent versions,\n-      To force use of versioned Boost when backporting to Lenny.\n-    ...needs more love, though: actual build fails.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 19:48:35 +0100\n-\n-bitcoin (0.3.19~dfsg-5) unstable; urgency=low\n-\n-  * Fix lower Boost fallback-build-dependencies to 1.35, really\n-    available in Lenny.\n-  * Correct comment in rules file regarding reason for versioned Boost\n-    fallback-build-dependency.\n-  * Add patch 2002 adding -mt decoration to Boost flags, to ease\n-    backporting to Lenny.\n-  * Respect DEB_BUILD_OPTIONS, and suppress arch-specific optimizations:\n-    + Add patch 1004 to allow overriding optimization flags.\n-    + Set optimization flags conditionally at build time.\n-    + Drop patch 2002 unconditionally suppressing arch-optimizations.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 16:04:48 +0100\n-\n-bitcoin (0.3.19~dfsg-4) unstable; urgency=low\n-\n-  [ Micah Anderson ]\n-  * Provide example bitcoin.conf.\n-  * Add bitcoind(1) and bitcoin.conf(5) man pages.\n-\n-  [ Jonas Smedegaard ]\n-  * Ease backporting:\n-    + Suppress optional build-dependencies.\n-    + Add fallback build-dependencies on the most recent Boost libs\n-    available in Lenny (where unversioned Boost libs are missing).\n-  * Add Micah as copyright holder for manpages, licensed as GPL-3+.\n-  * Bump copyright format to Subversion candidate draft 162 of DEP5.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 14:00:48 +0100\n-\n-bitcoin (0.3.19~dfsg-3) unstable; urgency=low\n-\n-  * Document in copyright file files excluded from repackaged source.\n-  * Update copyright file:\n-    + Bump DEP5 format hint to Subversion draft rev. 153.\n-    + Consistently wrap at 72 chars.\n-    + Refer to GPL-2 file (not GPL symlink).\n-  * Link against Berkeley DB 4.8 (not 4.7):\n-    + Build-depend on libdb4.8++-dev (and on on libdb4.7++-dev).\n-    + Suggest libdb4.8-util and db4.7-util.\n-    + Add README.Debian note on (untested) upgrade routine.\n-    + Add NEWS entry on changed db version, referring to README.Debian.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Fri, 07 Jan 2011 22:50:57 +0100\n-\n-bitcoin (0.3.19~dfsg-2) unstable; urgency=low\n-\n-  * Adjust build options to use optimized miner only for amd64. Fixes\n-    FTBFS on i386 (and other archs, if compiling anywhere else at all).\n-  * Avoid static linking.\n-  * Adjust patch 2001 to avoid only arch-specific optimizations (keep\n-    -O3).\n-  * Extend long description to mention disk consumption and initial use\n-    of IRC.\n-  All of above changes thanks to Helmuth Grohne.\n-  * Add lintian override regarding OpenSSL and GPL: Linked code is Expat\n-    - only Debian packaging is GPL-2+.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Wed, 29 Dec 2010 00:27:54 +0100\n-\n-bitcoin (0.3.19~dfsg-1) unstable; urgency=low\n-\n-  [ Jonas Smedegaard ]\n-  * Initial release.\n-    Closes: bug#578157.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 28 Dec 2010 15:49:22 +0100"
      },
      {
        "sha": "0d6ad25e249fe9b7b89a738aba89c2ca1d495587",
        "filename": "contrib/debian/control",
        "status": "removed",
        "additions": 0,
        "deletions": 70,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,70 +0,0 @@\n-Source: bitcoin\n-Section: utils\n-Priority: optional\n-Maintainer: Matt Corallo <matt@mattcorallo.com>\n-Uploaders: Matt Corallo <matt@mattcorallo.com>\n-Build-Depends: debhelper,\n- devscripts,\n- automake,\n- libtool,\n- bash-completion,\n- libdb4.8++-dev,\n- libssl-dev,\n- pkg-config,\n- libevent-dev,\n- libboost-system1.48-dev | libboost-system-dev (>> 1.47),\n- libboost-filesystem1.48-dev | libboost-filesystem-dev (>> 1.47),\n- libboost-program-options1.48-dev | libboost-program-options-dev (>> 1.47),\n- libboost-thread1.48-dev | libboost-thread-dev (>> 1.47),\n- libboost-test1.48-dev | libboost-test-dev (>> 1.47),\n- libboost-chrono1.48-dev | libboost-chrono-dev (>> 1.47),\n- libminiupnpc8-dev | libminiupnpc-dev,\n- qt4-qmake, libqt4-dev,\n- qttools5-dev-tools, qttools5-dev,\n- libqrencode-dev,\n- libprotobuf-dev, protobuf-compiler,\n- python,\n- libzmq3-dev\n-Standards-Version: 3.9.2\n-Homepage: https://bitcoincore.org/\n-Vcs-Git: git://github.com/bitcoin/bitcoin.git\n-Vcs-Browser: https://github.com/bitcoin/bitcoin\n-\n-Package: bitcoind\n-Architecture: any\n-Depends: ${shlibs:Depends}, ${misc:Depends}\n-Description: peer-to-peer network based digital currency - daemon\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n- is completely decentralized, without the need for a central server or\n- trusted parties.  Users hold the crypto keys to their own money and\n- transact directly with each other, with the help of a P2P network to\n- check for double-spending.\n- .\n- This package provides the daemon, bitcoind, and the CLI tool\n- bitcoin-cli to interact with the daemon.\n-\n-Package: bitcoin-qt\n-Architecture: any\n-Depends: ${shlibs:Depends}, ${misc:Depends}\n-Description: peer-to-peer network based digital currency - Qt GUI\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n- is completely decentralized, without the need for a central server or\n- trusted parties.  Users hold the crypto keys to their own money and\n- transact directly with each other, with the help of a P2P network to\n- check for double-spending.\n- .\n- This package provides Bitcoin-Qt, a GUI for Bitcoin based on Qt.\n-\n-Package: bitcoin-tx\n-Architecture: any\n-Depends: ${shlibs:Depends}, ${misc:Depends}\n-Description: peer-to-peer digital currency - standalone transaction tool\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n- is completely decentralized, without the need for a central server or\n- trusted parties.  Users hold the crypto keys to their own money and\n- transact directly with each other, with the help of a P2P network to\n- check for double-spending.\n- .\n- This package provides bitcoin-tx, a command-line transaction creation\n- tool which can be used without a bitcoin daemon.  Some means of\n- exchanging minimal transaction data with peers is still required."
      },
      {
        "sha": "21cca7d9acfe4b8458b2946fbb04fd35d367a032",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 21,
        "deletions": 2,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -5,7 +5,7 @@ Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n Source: https://github.com/bitcoin/bitcoin\n \n Files: *\n-Copyright: 2009-2017, Bitcoin Core Developers\n+Copyright: 2009-2018, Bitcoin Core Developers\n License: Expat\n Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n          as well as the numerous contributors to the project.\n@@ -15,6 +15,14 @@ Copyright: 2010-2011, Jonas Smedegaard <dr@jones.dk>\n            2011, Matt Corallo <matt@bluematt.me>\n License: GPL-2+\n \n+Files: src/secp256k1/build-aux/m4/ax_jni_include_dir.m4\n+Copyright: 2008 Don Anderson <dda@sleepycat.com>\n+License: GNU-All-permissive-License\n+\n+Files: src/secp256k1/build-aux/m4/ax_prog_cc_for_build.m4\n+Copyright: 2008 Paolo Bonzini <bonzini@gnu.org>\n+License: GNU-All-permissive-License\n+\n Files: src/qt/res/icons/add.png\n        src/qt/res/icons/address-book.png\n        src/qt/res/icons/chevron.png\n@@ -68,8 +76,8 @@ Comment:\n \n Files: src/qt/res/icons/clock*.png\n        src/qt/res/icons/eye_*.png\n-       src/qt/res/icons/verify.png\n        src/qt/res/icons/tx_in*.png\n+       src/qt/res/icons/verify.png\n        src/qt/res/src/clock_*.svg\n        src/qt/res/src/tx_*.svg\n        src/qt/res/src/verify.svg\n@@ -85,6 +93,11 @@ Copyright: Bitboy, Jonas Schnelli\n License: public-domain\n Comment: Site: https://bitcointalk.org/?topic=1756.0\n \n+Files: src/qt/res/icons/proxy.png\n+       src/qt/res/src/proxy.svg\n+Copyright: Cristian Mircea Messel\n+Licese: public-domain\n+\n \n License: Expat\n  Permission is hereby granted, free of charge, to any person obtaining a\n@@ -106,6 +119,12 @@ License: Expat\n  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n \n+License: GNU-All-permissive-License\n+ Copying and distribution of this file, with or without modification, are\n+ permitted in any medium without royalty provided the copyright notice\n+ and this notice are preserved. This file is offered as-is, without any\n+ warranty.\n+\n License: GPL-2+\n  This program is free software; you can redistribute it and/or modify it\n  under the terms of the GNU General Public License as published by the"
      },
      {
        "sha": "a7281f94b2b532a1b8b07631ce0fc5d598e27ecc",
        "filename": "contrib/debian/gbp.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/gbp.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/gbp.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/gbp.conf?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,5 +0,0 @@\n-# Configuration file for git-buildpackage and friends\n-\n-[DEFAULT]\n-pristine-tar = True\n-sign-tags = True"
      },
      {
        "sha": "80c1584376a9798f816d904a07f9288adbde225d",
        "filename": "contrib/debian/patches/README",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/patches/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/patches/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/patches/README?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,3 +0,0 @@\n-0xxx: Grabbed from upstream development.\n-1xxx: Possibly relevant for upstream adoption.\n-2xxx: Only relevant for official Debian release."
      },
      {
        "sha": "8b137891791fe96927ad78e64b0aad7bded08bdc",
        "filename": "contrib/debian/patches/series",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/patches/series",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/patches/series",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/patches/series?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1 +0,0 @@\n-"
      },
      {
        "sha": "6885e3852126f17e910cbe4236b4f773a1fd8de6",
        "filename": "contrib/debian/rules",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/rules",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/rules",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/rules?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,23 +0,0 @@\n-#!/usr/bin/make -f\n-# -*- mode: makefile; coding: utf-8 -*-\n-\n-#DEB_MAKE_CHECK_TARGET = test_bitcoin\n-#build/bitcoind::\n-#\t$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_bitcoin)\n-\n-%:\n-\tdh --with bash-completion $@\n-\n-override_dh_auto_clean:\n-\tif [ -f Makefile ]; then $(MAKE) distclean; fi\n-\trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/bitcoin-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n-\n-QT=$(shell dpkg-vendor --derives-from Ubuntu && echo qt4 || echo qt5)\n-\n-# Yea, autogen should be run on the source archive, but I like doing git archive\n-override_dh_auto_configure:\n-\t./autogen.sh\n-\t./configure --with-gui=$(QT)\n-\n-override_dh_auto_test:\n-\tmake check"
      },
      {
        "sha": "163aaf8d82b6c54f23c45f32895dbdfdcc27b047",
        "filename": "contrib/debian/source/format",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/source/format",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/source/format",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/source/format?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1 +0,0 @@\n-3.0 (quilt)"
      },
      {
        "sha": "4d9e0cfa577b6d8acac28a1e005f42388b7255c0",
        "filename": "contrib/debian/watch",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/watch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/debian/watch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/watch?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,5 +0,0 @@\n-# Run the \"uscan\" command to check for upstream updates and more.\n-version=3\n-# use qa.debian.org redirector; see man uscan\n-opts=uversionmangle=s/(\\d)(alpha|beta|rc)/$1~$2/,dversionmangle=s/~dfsg\\d*// \\\n- http://githubredir.debian.net/github/bitcoin/bitcoin v(.*).tar.gz"
      },
      {
        "sha": "a0b6225345a42942bf2422d5ad1e94780d8043c6",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 25,
        "deletions": 21,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -2,12 +2,6 @@ Contents\n ========\n This directory contains tools for developers working on this repository.\n \n-check-doc.py\n-============\n-\n-Check if all command line args are documented. The return value indicates the\n-number of undocumented args.\n-\n clang-format-diff.py\n ===================\n \n@@ -85,22 +79,13 @@ gen-manpages.sh\n A small script to automatically create manpages in ../../doc/man by running the release binaries with the -help option.\n This requires help2man which can be found at: https://www.gnu.org/software/help2man/\n \n-git-subtree-check.sh\n-====================\n-\n-Run this script from the root of the repository to verify that a subtree matches the contents of\n-the commit it claims to have been updated to.\n-\n-To use, make sure that you have fetched the upstream repository branch in which the subtree is\n-maintained:\n-* for `src/secp256k1`: https://github.com/bitcoin-core/secp256k1.git (branch master)\n-* for `src/leveldb`: https://github.com/bitcoin-core/leveldb.git (branch bitcoin-fork)\n-* for `src/univalue`: https://github.com/bitcoin-core/univalue.git (branch master)\n-* for `src/crypto/ctaes`: https://github.com/bitcoin-core/ctaes.git (branch master)\n-\n-Usage: `git-subtree-check.sh DIR (COMMIT)`\n+With in-tree builds this tool can be run from any directory within the\n+repostitory. To use this tool with out-of-tree builds set `BUILDDIR`. For\n+example:\n \n-`COMMIT` may be omitted, in which case `HEAD` is used.\n+```bash\n+BUILDDIR=$PWD/build contrib/devtools/gen-manpages.sh\n+```\n \n github-merge.py\n ===============\n@@ -136,6 +121,14 @@ Configuring the github-merge tool for the bitcoin repository is done in the foll\n     git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n     git config --global user.signingkey mykeyid (if you want to GPG sign)\n \n+Create and verify timestamps of merge commits\n+---------------------------------------------\n+To create or verify timestamps on the merge commits, install the OpenTimestamps\n+client via `pip3 install opentimestamps-client`. Then, dowload the gpg wrapper\n+`ots-git-gpg-wrapper.sh` and set it as git's `gpg.program`. See\n+[the ots git integration documentation](https://github.com/opentimestamps/opentimestamps-client/blob/master/doc/git-integration.md#usage)\n+for further details.\n+\n optimize-pngs.py\n ================\n \n@@ -178,3 +171,14 @@ It will do the following automatically:\n - add missing translations to the build system (TODO)\n \n See doc/translation-process.md for more information.\n+\n+circular-dependencies.py\n+========================\n+\n+Run this script from the root of the source tree (`src/`) to find circular dependencies in the source code.\n+This looks only at which files include other files, treating the `.cpp` and `.h` file as one unit.\n+\n+Example usage:\n+\n+    cd .../src\n+    ../contrib/devtools/circular-dependencies.py {*,*/*,*/*/*}.{h,cpp}"
      },
      {
        "sha": "445175ec2bbaff0758f74f55f5c3f4d36919b04c",
        "filename": "contrib/devtools/check-doc.py",
        "status": "removed",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/devtools/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/devtools/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-doc.py?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,45 +0,0 @@\n-#!/usr/bin/env python\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-'''\n-This checks if all command line args are documented.\n-Return value is 0 to indicate no error.\n-\n-Author: @MarcoFalke\n-'''\n-\n-from subprocess import check_output\n-import re\n-\n-FOLDER_GREP = 'src'\n-FOLDER_TEST = 'src/test/'\n-CMD_ROOT_DIR = '`git rev-parse --show-toplevel`/%s' % FOLDER_GREP\n-CMD_GREP_ARGS = r\"egrep -r -I '(map(Multi)?Args(\\.count\\(|\\[)|Get(Bool)?Arg\\()\\\"\\-[^\\\"]+?\\\"' %s | grep -v '%s'\" % (CMD_ROOT_DIR, FOLDER_TEST)\n-CMD_GREP_DOCS = r\"egrep -r -I 'HelpMessageOpt\\(\\\"\\-[^\\\"=]+?(=|\\\")' %s\" % (CMD_ROOT_DIR)\n-REGEX_ARG = re.compile(r'(?:map(?:Multi)?Args(?:\\.count\\(|\\[)|Get(?:Bool)?Arg\\()\\\"(\\-[^\\\"]+?)\\\"')\n-REGEX_DOC = re.compile(r'HelpMessageOpt\\(\\\"(\\-[^\\\"=]+?)(?:=|\\\")')\n-# list unsupported, deprecated and duplicate args as they need no documentation\n-SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags', '-blockminsize', '-sendfreetransactions'])\n-\n-def main():\n-  used = check_output(CMD_GREP_ARGS, shell=True)\n-  docd = check_output(CMD_GREP_DOCS, shell=True)\n-\n-  args_used = set(re.findall(REGEX_ARG,used))\n-  args_docd = set(re.findall(REGEX_DOC,docd)).union(SET_DOC_OPTIONAL)\n-  args_need_doc = args_used.difference(args_docd)\n-  args_unknown = args_docd.difference(args_used)\n-\n-  print \"Args used        : %s\" % len(args_used)\n-  print \"Args documented  : %s\" % len(args_docd)\n-  print \"Args undocumented: %s\" % len(args_need_doc)\n-  print args_need_doc\n-  print \"Args unknown     : %s\" % len(args_unknown)\n-  print args_unknown\n-\n-  exit(len(args_need_doc))\n-\n-if __name__ == \"__main__\":\n-    main()"
      },
      {
        "sha": "abfa5ed5ae7b01a86f7bbe8b9229fb69f2356b9f",
        "filename": "contrib/devtools/circular-dependencies.py",
        "status": "added",
        "additions": 79,
        "deletions": 0,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/circular-dependencies.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/circular-dependencies.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/circular-dependencies.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,79 @@\n+#!/usr/bin/env python3\n+\n+import sys\n+import re\n+\n+MAPPING = {\n+    'core_read.cpp': 'core_io.cpp',\n+    'core_write.cpp': 'core_io.cpp',\n+}\n+\n+def module_name(path):\n+    if path in MAPPING:\n+        path = MAPPING[path]\n+    if path.endswith(\".h\"):\n+        return path[:-2]\n+    if path.endswith(\".c\"):\n+        return path[:-2]\n+    if path.endswith(\".cpp\"):\n+        return path[:-4]\n+    return None\n+\n+files = dict()\n+deps = dict()\n+\n+RE = re.compile(\"^#include <(.*)>\")\n+\n+# Iterate over files, and create list of modules\n+for arg in sys.argv[1:]:\n+    module = module_name(arg)\n+    if module is None:\n+        print(\"Ignoring file %s (does not constitute module)\\n\" % arg)\n+    else:\n+        files[arg] = module\n+        deps[module] = set()\n+\n+# Iterate again, and build list of direct dependencies for each module\n+# TODO: implement support for multiple include directories\n+for arg in sorted(files.keys()):\n+    module = files[arg]\n+    with open(arg, 'r', encoding=\"utf8\") as f:\n+        for line in f:\n+            match = RE.match(line)\n+            if match:\n+                include = match.group(1)\n+                included_module = module_name(include)\n+                if included_module is not None and included_module in deps and included_module != module:\n+                    deps[module].add(included_module)\n+\n+# Loop to find the shortest (remaining) circular dependency\n+have_cycle = False\n+while True:\n+    shortest_cycle = None\n+    for module in sorted(deps.keys()):\n+        # Build the transitive closure of dependencies of module\n+        closure = dict()\n+        for dep in deps[module]:\n+            closure[dep] = []\n+        while True:\n+            old_size = len(closure)\n+            old_closure_keys = sorted(closure.keys())\n+            for src in old_closure_keys:\n+                for dep in deps[src]:\n+                    if dep not in closure:\n+                        closure[dep] = closure[src] + [src]\n+            if len(closure) == old_size:\n+                break\n+        # If module is in its own transitive closure, it's a circular dependency; check if it is the shortest\n+        if module in closure and (shortest_cycle is None or len(closure[module]) + 1 < len(shortest_cycle)):\n+            shortest_cycle = [module] + closure[module]\n+    if shortest_cycle is None:\n+        break\n+    # We have the shortest circular dependency; report it\n+    module = shortest_cycle[0]\n+    print(\"Circular dependency: %s\" % (\" -> \".join(shortest_cycle + [module])))\n+    # And then break the dependency to avoid repeating in other cycles\n+    deps[shortest_cycle[-1]] = deps[shortest_cycle[-1]] - set([module])\n+    have_cycle = True\n+\n+sys.exit(1 if have_cycle else 0)"
      },
      {
        "sha": "77e845a9b4976c2ae1f7438e734b9bb9bad9fa49",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "modified",
        "additions": 12,
        "deletions": 10,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,4 +1,4 @@\n-#!/usr/bin/env python\n+#!/usr/bin/env python3\n #\n #===- clang-format-diff.py - ClangFormat Diff Reformatter ----*- python -*--===#\n #\n@@ -69,10 +69,9 @@\n \n import argparse\n import difflib\n+import io\n import re\n-import string\n import subprocess\n-import StringIO\n import sys\n \n \n@@ -133,30 +132,33 @@ def main():\n           ['-lines', str(start_line) + ':' + str(end_line)])\n \n   # Reformat files containing changes in place.\n-  for filename, lines in lines_by_file.iteritems():\n+  for filename, lines in lines_by_file.items():\n     if args.i and args.verbose:\n-      print 'Formatting', filename\n+      print('Formatting {}'.format(filename))\n     command = [binary, filename]\n     if args.i:\n       command.append('-i')\n     if args.sort_includes:\n       command.append('-sort-includes')\n     command.extend(lines)\n     command.extend(['-style=file', '-fallback-style=none'])\n-    p = subprocess.Popen(command, stdout=subprocess.PIPE,\n-                         stderr=None, stdin=subprocess.PIPE)\n+    p = subprocess.Popen(command,\n+                         stdout=subprocess.PIPE,\n+                         stderr=None,\n+                         stdin=subprocess.PIPE,\n+                         universal_newlines=True)\n     stdout, stderr = p.communicate()\n     if p.returncode != 0:\n       sys.exit(p.returncode)\n \n     if not args.i:\n-      with open(filename) as f:\n+      with open(filename, encoding=\"utf8\") as f:\n         code = f.readlines()\n-      formatted_code = StringIO.StringIO(stdout).readlines()\n+      formatted_code = io.StringIO(stdout).readlines()\n       diff = difflib.unified_diff(code, formatted_code,\n                                   filename, filename,\n                                   '(before formatting)', '(after formatting)')\n-      diff_string = string.join(diff, '')\n+      diff_string = ''.join(diff)\n       if len(diff_string) > 0:\n         sys.stdout.write(diff_string)\n "
      },
      {
        "sha": "add4bb4883d41b495109672df6d44ebe9691e1d1",
        "filename": "contrib/devtools/commit-script-check.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 39,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/devtools/commit-script-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/devtools/commit-script-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/commit-script-check.sh?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,39 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# This simple script checks for commits beginning with: scripted-diff:\n-# If found, looks for a script between the lines -BEGIN VERIFY SCRIPT- and\n-# -END VERIFY SCRIPT-. If no ending is found, it reads until the end of the\n-# commit message.\n-\n-# The resulting script should exactly transform the previous commit into the current\n-# one. Any remaining diff signals an error.\n-\n-if test \"x$1\" = \"x\"; then\n-    echo \"Usage: $0 <commit>...\"\n-    exit 1\n-fi\n-\n-RET=0\n-PREV_BRANCH=`git name-rev --name-only HEAD`\n-PREV_HEAD=`git rev-parse HEAD`\n-for i in `git rev-list --reverse $1`; do\n-    git rev-list -n 1 --pretty=\"%s\" $i | grep -q \"^scripted-diff:\" || continue\n-    git checkout --quiet $i^ || exit\n-    SCRIPT=\"`git rev-list --format=%b -n1 $i | sed '/^-BEGIN VERIFY SCRIPT-$/,/^-END VERIFY SCRIPT-$/{//!b};d'`\"\n-    if test \"x$SCRIPT\" = \"x\"; then\n-        echo \"Error: missing script for: $i\"\n-        echo \"Failed\"\n-        RET=1\n-    else\n-        echo \"Running script for: $i\"\n-        echo \"$SCRIPT\"\n-        eval \"$SCRIPT\"\n-        git --no-pager diff --exit-code $i && echo \"OK\" || (echo \"Failed\"; false) || RET=1\n-    fi\n-    git reset --quiet --hard HEAD\n-done\n-git checkout --quiet $PREV_BRANCH 2>/dev/null || git checkout --quiet $PREV_HEAD\n-exit $RET"
      },
      {
        "sha": "c5fcddea043d558e4ef9052fa1fc433f813599fb",
        "filename": "contrib/devtools/copyright_header.py",
        "status": "modified",
        "additions": 13,
        "deletions": 11,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/copyright_header.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/copyright_header.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/copyright_header.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2016-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -24,8 +24,10 @@\n     'src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.h',\n     'src/secp256k1/src/java/org_bitcoin_Secp256k1Context.c',\n     'src/secp256k1/src/java/org_bitcoin_Secp256k1Context.h',\n-    # auto generated:\n+    # univalue:\n+    'src/univalue/test/object.cpp',\n     'src/univalue/lib/univalue_escapes.h',\n+    # auto generated:\n     'src/qt/bitcoinstrings.cpp',\n     'src/chainparamsseeds.h',\n     # other external copyrights:\n@@ -144,7 +146,7 @@ def file_has_without_c_style_copyright_for_holder(contents, holder_name):\n ################################################################################\n \n def read_file(filename):\n-    return open(os.path.abspath(filename), 'r').read()\n+    return open(os.path.abspath(filename), 'r', encoding=\"utf8\").read()\n \n def gather_file_info(filename):\n     info = {}\n@@ -284,7 +286,7 @@ def exec_report(base_directory, verbose):\n def report_cmd(argv):\n     if len(argv) == 2:\n         sys.exit(REPORT_USAGE)\n-        \n+\n     base_directory = argv[2]\n     if not os.path.exists(base_directory):\n         sys.exit(\"*** bad <base_directory>: %s\" % base_directory)\n@@ -323,13 +325,13 @@ def get_most_recent_git_change_year(filename):\n ################################################################################\n \n def read_file_lines(filename):\n-    f = open(os.path.abspath(filename), 'r')\n+    f = open(os.path.abspath(filename), 'r', encoding=\"utf8\")\n     file_lines = f.readlines()\n     f.close()\n     return file_lines\n \n def write_file_lines(filename, file_lines):\n-    f = open(os.path.abspath(filename), 'w')\n+    f = open(os.path.abspath(filename), 'w', encoding=\"utf8\")\n     f.write(''.join(file_lines))\n     f.close()\n \n@@ -442,7 +444,7 @@ def print_file_action_message(filename, action):\n def update_cmd(argv):\n     if len(argv) != 3:\n         sys.exit(UPDATE_USAGE)\n-    \n+\n     base_directory = argv[2]\n     if not os.path.exists(base_directory):\n         sys.exit(\"*** bad base_directory: %s\" % base_directory)\n@@ -504,7 +506,7 @@ def file_has_hashbang(file_lines):\n \n def insert_python_header(filename, file_lines, start_year, end_year):\n     if file_has_hashbang(file_lines):\n-        insert_idx = 1 \n+        insert_idx = 1\n     else:\n         insert_idx = 0\n     header_lines = get_python_header_lines_to_insert(start_year, end_year)\n@@ -568,13 +570,13 @@ def insert_cmd(argv):\n     _, extension = os.path.splitext(filename)\n     if extension not in ['.h', '.cpp', '.cc', '.c', '.py']:\n         sys.exit(\"*** cannot insert for file extension %s\" % extension)\n-   \n-    if extension == '.py': \n+\n+    if extension == '.py':\n         style = 'python'\n     else:\n         style = 'cpp'\n     exec_insert_header(filename, style)\n-         \n+\n ################################################################################\n # UI\n ################################################################################"
      },
      {
        "sha": "b5de5a395f10dd573ece96b9cb39b56c3a53722a",
        "filename": "contrib/devtools/gen-manpages.sh",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/gen-manpages.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/gen-manpages.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/gen-manpages.sh?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,13 +1,16 @@\n-#!/bin/sh\n+#!/usr/bin/env bash\n \n+export LC_ALL=C\n TOPDIR=${TOPDIR:-$(git rev-parse --show-toplevel)}\n-SRCDIR=${SRCDIR:-$TOPDIR/src}\n+BUILDDIR=${BUILDDIR:-$TOPDIR}\n+\n+BINDIR=${BINDIR:-$BUILDDIR/src}\n MANDIR=${MANDIR:-$TOPDIR/doc/man}\n \n-BITCOIND=${BITCOIND:-$SRCDIR/bitcoind}\n-BITCOINCLI=${BITCOINCLI:-$SRCDIR/bitcoin-cli}\n-BITCOINTX=${BITCOINTX:-$SRCDIR/bitcoin-tx}\n-BITCOINQT=${BITCOINQT:-$SRCDIR/qt/bitcoin-qt}\n+BITCOIND=${BITCOIND:-$BINDIR/bitcoind}\n+BITCOINCLI=${BITCOINCLI:-$BINDIR/bitcoin-cli}\n+BITCOINTX=${BITCOINTX:-$BINDIR/bitcoin-tx}\n+BITCOINQT=${BITCOINQT:-$BINDIR/qt/bitcoin-qt}\n \n [ ! -x $BITCOIND ] && echo \"$BITCOIND not found or not executable.\" && exit 1\n "
      },
      {
        "sha": "4e90f85f5033db4c6e9ec23204a66e9c62398491",
        "filename": "contrib/devtools/github-merge.py",
        "status": "modified",
        "additions": 38,
        "deletions": 39,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -20,7 +20,9 @@\n import argparse\n import hashlib\n import subprocess\n-import json,codecs\n+import sys\n+import json\n+import codecs\n try:\n     from urllib.request import Request,urlopen\n except:\n@@ -45,7 +47,7 @@ def git_config_get(option, default=None):\n     '''\n     try:\n         return subprocess.check_output([GIT,'config','--get',option]).rstrip().decode('utf-8')\n-    except subprocess.CalledProcessError as e:\n+    except subprocess.CalledProcessError:\n         return default\n \n def retrieve_pr_info(repo,pull):\n@@ -158,11 +160,11 @@ def main():\n     if repo is None:\n         print(\"ERROR: No repository configured. Use this command to set:\", file=stderr)\n         print(\"git config githubmerge.repository <owner>/<repo>\", file=stderr)\n-        exit(1)\n+        sys.exit(1)\n     if signingkey is None:\n         print(\"ERROR: No GPG signing key set. Set one using:\",file=stderr)\n         print(\"git config --global user.signingkey <key>\",file=stderr)\n-        exit(1)\n+        sys.exit(1)\n \n     host_repo = host+\":\"+repo # shortcut for push/pull target\n \n@@ -173,8 +175,9 @@ def main():\n     # Receive pull information from github\n     info = retrieve_pr_info(repo,pull)\n     if info is None:\n-        exit(1)\n+        sys.exit(1)\n     title = info['title'].strip()\n+    body = info['body'].strip()\n     # precedence order for destination branch argument:\n     #   - command line argument\n     #   - githubmerge.branch setting\n@@ -188,32 +191,28 @@ def main():\n     merge_branch = 'pull/'+pull+'/merge'\n     local_merge_branch = 'pull/'+pull+'/local-merge'\n \n-    devnull = open(os.devnull,'w')\n+    devnull = open(os.devnull, 'w', encoding=\"utf8\")\n     try:\n         subprocess.check_call([GIT,'checkout','-q',branch])\n-    except subprocess.CalledProcessError as e:\n+    except subprocess.CalledProcessError:\n         print(\"ERROR: Cannot check out branch %s.\" % (branch), file=stderr)\n-        exit(3)\n+        sys.exit(3)\n     try:\n-        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*'])\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        exit(3)\n+        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*',\n+                                                          '+refs/heads/'+branch+':refs/heads/'+base_branch])\n+    except subprocess.CalledProcessError:\n+        print(\"ERROR: Cannot find pull request #%s or branch %s on %s.\" % (pull,branch,host_repo), file=stderr)\n+        sys.exit(3)\n     try:\n         subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+head_branch], stdout=devnull, stderr=stdout)\n-    except subprocess.CalledProcessError as e:\n+    except subprocess.CalledProcessError:\n         print(\"ERROR: Cannot find head of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        exit(3)\n+        sys.exit(3)\n     try:\n         subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+merge_branch], stdout=devnull, stderr=stdout)\n-    except subprocess.CalledProcessError as e:\n+    except subprocess.CalledProcessError:\n         print(\"ERROR: Cannot find merge of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        exit(3)\n-    try:\n-        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/heads/'+branch+':refs/heads/'+base_branch])\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find branch %s on %s.\" % (branch,host_repo), file=stderr)\n-        exit(3)\n+        sys.exit(3)\n     subprocess.check_call([GIT,'checkout','-q',base_branch])\n     subprocess.call([GIT,'branch','-q','-D',local_merge_branch], stderr=devnull)\n     subprocess.check_call([GIT,'checkout','-q','-b',local_merge_branch])\n@@ -229,35 +228,36 @@ def main():\n             firstline = 'Merge #%s' % (pull,)\n         message = firstline + '\\n\\n'\n         message += subprocess.check_output([GIT,'log','--no-merges','--topo-order','--pretty=format:%h %s (%an)',base_branch+'..'+head_branch]).decode('utf-8')\n+        message += '\\n\\nPull request description:\\n\\n  ' + body.replace('\\n', '\\n  ') + '\\n'\n         try:\n             subprocess.check_call([GIT,'merge','-q','--commit','--no-edit','--no-ff','-m',message.encode('utf-8'),head_branch])\n-        except subprocess.CalledProcessError as e:\n+        except subprocess.CalledProcessError:\n             print(\"ERROR: Cannot be merged cleanly.\",file=stderr)\n             subprocess.check_call([GIT,'merge','--abort'])\n-            exit(4)\n+            sys.exit(4)\n         logmsg = subprocess.check_output([GIT,'log','--pretty=format:%s','-n','1']).decode('utf-8')\n         if logmsg.rstrip() != firstline.rstrip():\n             print(\"ERROR: Creating merge failed (already merged?).\",file=stderr)\n-            exit(4)\n+            sys.exit(4)\n \n         symlink_files = get_symlink_files()\n         for f in symlink_files:\n             print(\"ERROR: File %s was a symlink\" % f)\n         if len(symlink_files) > 0:\n-            exit(4)\n+            sys.exit(4)\n \n         # Put tree SHA512 into the message\n         try:\n             first_sha512 = tree_sha512sum()\n             message += '\\n\\nTree-SHA512: ' + first_sha512\n-        except subprocess.CalledProcessError as e:\n-            printf(\"ERROR: Unable to compute tree hash\")\n-            exit(4)\n+        except subprocess.CalledProcessError:\n+            print(\"ERROR: Unable to compute tree hash\")\n+            sys.exit(4)\n         try:\n             subprocess.check_call([GIT,'commit','--amend','-m',message.encode('utf-8')])\n-        except subprocess.CalledProcessError as e:\n-            printf(\"ERROR: Cannot update message.\",file=stderr)\n-            exit(4)\n+        except subprocess.CalledProcessError:\n+            print(\"ERROR: Cannot update message.\", file=stderr)\n+            sys.exit(4)\n \n         print_merge_details(pull, title, branch, base_branch, head_branch)\n         print()\n@@ -266,7 +266,7 @@ def main():\n         if testcmd:\n             if subprocess.call(testcmd,shell=True):\n                 print(\"ERROR: Running %s failed.\" % testcmd,file=stderr)\n-                exit(5)\n+                sys.exit(5)\n \n             # Show the created merge.\n             diff = subprocess.check_output([GIT,'diff',merge_branch+'..'+local_merge_branch])\n@@ -277,7 +277,7 @@ def main():\n                 if reply.lower() == 'ignore':\n                     print(\"Difference with github ignored.\",file=stderr)\n                 else:\n-                    exit(6)\n+                    sys.exit(6)\n         else:\n             # Verify the result manually.\n             print(\"Dropping you on a shell so you can try building/testing the merged source.\",file=stderr)\n@@ -290,7 +290,7 @@ def main():\n         second_sha512 = tree_sha512sum()\n         if first_sha512 != second_sha512:\n             print(\"ERROR: Tree hash changed unexpectedly\",file=stderr)\n-            exit(8)\n+            sys.exit(8)\n \n         # Sign the merge commit.\n         print_merge_details(pull, title, branch, base_branch, head_branch)\n@@ -300,12 +300,11 @@ def main():\n                 try:\n                     subprocess.check_call([GIT,'commit','-q','--gpg-sign','--amend','--no-edit'])\n                     break\n-                except subprocess.CalledProcessError as e:\n-                    print(\"Error signing, exiting.\",file=stderr)\n-                    exit(1)\n+                except subprocess.CalledProcessError:\n+                    print(\"Error while signing, asking again.\",file=stderr)\n             elif reply == 'x':\n                 print(\"Not signing off on merge, exiting.\",file=stderr)\n-                exit(1)\n+                sys.exit(1)\n \n         # Put the result in branch.\n         subprocess.check_call([GIT,'checkout','-q',branch])\n@@ -325,7 +324,7 @@ def main():\n             subprocess.check_call([GIT,'push',host_repo,'refs/heads/'+branch])\n             break\n         elif reply == 'x':\n-            exit(1)\n+            sys.exit(1)\n \n if __name__ == '__main__':\n     main()"
      },
      {
        "sha": "8b1f41f7e127a1bed803e15d5dce0c98c489cf21",
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "modified",
        "additions": 19,
        "deletions": 21,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,5 +1,5 @@\n-#!/usr/bin/env python\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n@@ -10,7 +10,7 @@\n import sys\n import subprocess\n import hashlib\n-from PIL import Image\n+from PIL import Image  # pip3 install Pillow\n \n def file_hash(filename):\n     '''Return hash of raw file contents'''\n@@ -27,7 +27,7 @@ def content_hash(filename):\n pngcrush = 'pngcrush'\n git = 'git'\n folders = [\"src/qt/res/movies\", \"src/qt/res/icons\", \"share/pixmaps\"]\n-basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel']).rstrip('\\n')\n+basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel'], universal_newlines=True).rstrip('\\n')\n totalSaveBytes = 0\n noHashChange = True\n \n@@ -37,42 +37,40 @@ def content_hash(filename):\n     for file in os.listdir(absFolder):\n         extension = os.path.splitext(file)[1]\n         if extension.lower() == '.png':\n-            print(\"optimizing \"+file+\"...\"),\n+            print(\"optimizing {}...\".format(file), end =' ')\n             file_path = os.path.join(absFolder, file)\n             fileMetaMap = {'file' : file, 'osize': os.path.getsize(file_path), 'sha256Old' : file_hash(file_path)}\n             fileMetaMap['contentHashPre'] = content_hash(file_path)\n-        \n-            pngCrushOutput = \"\"\n+\n             try:\n-                pngCrushOutput = subprocess.check_output(\n-                        [pngcrush, \"-brute\", \"-ow\", \"-rem\", \"gAMA\", \"-rem\", \"cHRM\", \"-rem\", \"iCCP\", \"-rem\", \"sRGB\", \"-rem\", \"alla\", \"-rem\", \"text\", file_path],\n-                        stderr=subprocess.STDOUT).rstrip('\\n')\n+                subprocess.call([pngcrush, \"-brute\", \"-ow\", \"-rem\", \"gAMA\", \"-rem\", \"cHRM\", \"-rem\", \"iCCP\", \"-rem\", \"sRGB\", \"-rem\", \"alla\", \"-rem\", \"text\", file_path],\n+                                stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)\n             except:\n-                print \"pngcrush is not installed, aborting...\"\n+                print(\"pngcrush is not installed, aborting...\")\n                 sys.exit(0)\n-        \n+\n             #verify\n-            if \"Not a PNG file\" in subprocess.check_output([pngcrush, \"-n\", \"-v\", file_path], stderr=subprocess.STDOUT):\n-                print \"PNG file \"+file+\" is corrupted after crushing, check out pngcursh version\"\n+            if \"Not a PNG file\" in subprocess.check_output([pngcrush, \"-n\", \"-v\", file_path], stderr=subprocess.STDOUT, universal_newlines=True):\n+                print(\"PNG file \"+file+\" is corrupted after crushing, check out pngcursh version\")\n                 sys.exit(1)\n-            \n+\n             fileMetaMap['sha256New'] = file_hash(file_path)\n             fileMetaMap['contentHashPost'] = content_hash(file_path)\n \n             if fileMetaMap['contentHashPre'] != fileMetaMap['contentHashPost']:\n-                print \"Image contents of PNG file \"+file+\" before and after crushing don't match\"\n+                print(\"Image contents of PNG file {} before and after crushing don't match\".format(file))\n                 sys.exit(1)\n \n             fileMetaMap['psize'] = os.path.getsize(file_path)\n             outputArray.append(fileMetaMap)\n-            print(\"done\\n\"),\n+            print(\"done\")\n \n-print \"summary:\\n+++++++++++++++++\"\n+print(\"summary:\\n+++++++++++++++++\")\n for fileDict in outputArray:\n     oldHash = fileDict['sha256Old']\n     newHash = fileDict['sha256New']\n     totalSaveBytes += fileDict['osize'] - fileDict['psize']\n     noHashChange = noHashChange and (oldHash == newHash)\n-    print fileDict['file']+\"\\n  size diff from: \"+str(fileDict['osize'])+\" to: \"+str(fileDict['psize'])+\"\\n  old sha256: \"+oldHash+\"\\n  new sha256: \"+newHash+\"\\n\"\n-    \n-print \"completed. Checksum stable: \"+str(noHashChange)+\". Total reduction: \"+str(totalSaveBytes)+\" bytes\"\n+    print(fileDict['file']+\"\\n  size diff from: \"+str(fileDict['osize'])+\" to: \"+str(fileDict['psize'])+\"\\n  old sha256: \"+oldHash+\"\\n  new sha256: \"+newHash+\"\\n\")\n+\n+print(\"completed. Checksum stable: \"+str(noHashChange)+\". Total reduction: \"+str(totalSaveBytes)+\" bytes\")"
      },
      {
        "sha": "57af1c10663708a8d4acb4e65771ebc2874c1a13",
        "filename": "contrib/devtools/security-check.py",
        "status": "modified",
        "additions": 27,
        "deletions": 28,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,5 +1,5 @@\n-#!/usr/bin/env python\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n@@ -8,51 +8,50 @@\n Otherwise the exit status will be 1 and it will log which executables failed which checks.\n Needs `readelf` (for ELF) and `objdump` (for PE).\n '''\n-from __future__ import division,print_function,unicode_literals\n import subprocess\n import sys\n import os\n \n READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n-NONFATAL = {'HIGH_ENTROPY_VA'} # checks which are non-fatal for now but only generate a warning\n+NONFATAL = {} # checks which are non-fatal for now but only generate a warning\n \n def check_ELF_PIE(executable):\n     '''\n     Check for position independent executable (PIE), allowing for address space randomization.\n     '''\n-    p = subprocess.Popen([READELF_CMD, '-h', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    p = subprocess.Popen([READELF_CMD, '-h', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Error opening file')\n \n     ok = False\n-    for line in stdout.split(b'\\n'):\n+    for line in stdout.splitlines():\n         line = line.split()\n-        if len(line)>=2 and line[0] == b'Type:' and line[1] == b'DYN':\n+        if len(line)>=2 and line[0] == 'Type:' and line[1] == 'DYN':\n             ok = True\n     return ok\n \n def get_ELF_program_headers(executable):\n     '''Return type and flags for ELF program headers'''\n-    p = subprocess.Popen([READELF_CMD, '-l', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    p = subprocess.Popen([READELF_CMD, '-l', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Error opening file')\n     in_headers = False\n     count = 0\n     headers = []\n-    for line in stdout.split(b'\\n'):\n-        if line.startswith(b'Program Headers:'):\n+    for line in stdout.splitlines():\n+        if line.startswith('Program Headers:'):\n             in_headers = True\n-        if line == b'':\n+        if line == '':\n             in_headers = False\n         if in_headers:\n             if count == 1: # header line\n-                ofs_typ = line.find(b'Type')\n-                ofs_offset = line.find(b'Offset')\n-                ofs_flags = line.find(b'Flg')\n-                ofs_align = line.find(b'Align')\n+                ofs_typ = line.find('Type')\n+                ofs_offset = line.find('Offset')\n+                ofs_flags = line.find('Flg')\n+                ofs_align = line.find('Align')\n                 if ofs_typ == -1 or ofs_offset == -1 or ofs_flags == -1 or ofs_align  == -1:\n                     raise ValueError('Cannot parse elfread -lW output')\n             elif count > 1:\n@@ -69,9 +68,9 @@ def check_ELF_NX(executable):\n     have_wx = False\n     have_gnu_stack = False\n     for (typ, flags) in get_ELF_program_headers(executable):\n-        if typ == b'GNU_STACK':\n+        if typ == 'GNU_STACK':\n             have_gnu_stack = True\n-        if b'W' in flags and b'E' in flags: # section is both writable and executable\n+        if 'W' in flags and 'E' in flags: # section is both writable and executable\n             have_wx = True\n     return have_gnu_stack and not have_wx\n \n@@ -88,31 +87,31 @@ def check_ELF_RELRO(executable):\n         # However, the dynamic linker need to write to this area so these are RW.\n         # Glibc itself takes care of mprotecting this area R after relocations are finished.\n         # See also http://permalink.gmane.org/gmane.comp.gnu.binutils/71347\n-        if typ == b'GNU_RELRO':\n+        if typ == 'GNU_RELRO':\n             have_gnu_relro = True\n \n     have_bindnow = False\n-    p = subprocess.Popen([READELF_CMD, '-d', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    p = subprocess.Popen([READELF_CMD, '-d', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Error opening file')\n-    for line in stdout.split(b'\\n'):\n+    for line in stdout.splitlines():\n         tokens = line.split()\n-        if len(tokens)>1 and tokens[1] == b'(BIND_NOW)' or (len(tokens)>2 and tokens[1] == b'(FLAGS)' and b'BIND_NOW' in tokens[2]):\n+        if len(tokens)>1 and tokens[1] == '(BIND_NOW)' or (len(tokens)>2 and tokens[1] == '(FLAGS)' and 'BIND_NOW' in tokens[2:]):\n             have_bindnow = True\n     return have_gnu_relro and have_bindnow\n \n def check_ELF_Canary(executable):\n     '''\n     Check for use of stack canary\n     '''\n-    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Error opening file')\n     ok = False\n-    for line in stdout.split(b'\\n'):\n-        if b'__stack_chk_fail' in line:\n+    for line in stdout.splitlines():\n+        if '__stack_chk_fail' in line:\n             ok = True\n     return ok\n \n@@ -122,13 +121,13 @@ def get_PE_dll_characteristics(executable):\n     Returns a tuple (arch,bits) where arch is 'i386:x86-64' or 'i386'\n     and bits is the DllCharacteristics value.\n     '''\n-    p = subprocess.Popen([OBJDUMP_CMD, '-x',  executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    p = subprocess.Popen([OBJDUMP_CMD, '-x',  executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Error opening file')\n     arch = ''\n     bits = 0\n-    for line in stdout.split('\\n'):\n+    for line in stdout.splitlines():\n         tokens = line.split()\n         if len(tokens)>=2 and tokens[0] == 'architecture:':\n             arch = tokens[1].rstrip(',')\n@@ -151,7 +150,7 @@ def check_PE_DYNAMIC_BASE(executable):\n def check_PE_HIGH_ENTROPY_VA(executable):\n     '''PIE: DllCharacteristics bit 0x20 signifies high-entropy ASLR'''\n     (arch,bits) = get_PE_dll_characteristics(executable)\n-    if arch == 'i386:x86-64': \n+    if arch == 'i386:x86-64':\n         reqbits = IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA\n     else: # Unnecessary on 32-bit\n         assert(arch == 'i386')\n@@ -212,5 +211,5 @@ def identify_executable(executable):\n         except IOError:\n             print('%s: cannot open' % filename)\n             retval = 1\n-    exit(retval)\n+    sys.exit(retval)\n "
      },
      {
        "sha": "6808e77da7314dcf17dec669e93594bc41c09f43",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 35,
        "deletions": 36,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,4 +1,4 @@\n-#!/usr/bin/env python\n+#!/usr/bin/env python3\n # Copyright (c) 2014 Wladimir J. van der Laan\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n@@ -11,7 +11,6 @@\n \n     find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py\n '''\n-from __future__ import division, print_function, unicode_literals\n import subprocess\n import re\n import sys\n@@ -47,28 +46,28 @@\n \n # Ignore symbols that are exported as part of every executable\n IGNORE_EXPORTS = {\n-b'_edata', b'_end', b'_init', b'__bss_start', b'_fini', b'_IO_stdin_used'\n+'_edata', '_end', '_init', '__bss_start', '_fini', '_IO_stdin_used', 'stdin', 'stdout', 'stderr'\n }\n READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n # Allowed NEEDED libraries\n ALLOWED_LIBRARIES = {\n # bitcoind and bitcoin-qt\n-b'libgcc_s.so.1', # GCC base support\n-b'libc.so.6', # C library\n-b'libpthread.so.0', # threading\n-b'libanl.so.1', # DNS resolve\n-b'libm.so.6', # math library\n-b'librt.so.1', # real-time (clock)\n-b'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n-b'ld-linux.so.2', # 32-bit dynamic linker\n+'libgcc_s.so.1', # GCC base support\n+'libc.so.6', # C library\n+'libpthread.so.0', # threading\n+'libanl.so.1', # DNS resolve\n+'libm.so.6', # math library\n+'librt.so.1', # real-time (clock)\n+'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n+'ld-linux.so.2', # 32-bit dynamic linker\n # bitcoin-qt only\n-b'libX11-xcb.so.1', # part of X11\n-b'libX11.so.6', # part of X11\n-b'libxcb.so.1', # part of X11\n-b'libfontconfig.so.1', # font support\n-b'libfreetype.so.6', # font parsing\n-b'libdl.so.2' # programming interface to dynamic linker\n+'libX11-xcb.so.1', # part of X11\n+'libX11.so.6', # part of X11\n+'libxcb.so.1', # part of X11\n+'libfontconfig.so.1', # font support\n+'libfreetype.so.6', # font parsing\n+'libdl.so.2' # programming interface to dynamic linker\n }\n \n class CPPFilt(object):\n@@ -78,10 +77,10 @@ class CPPFilt(object):\n     Use a pipe to the 'c++filt' command.\n     '''\n     def __init__(self):\n-        self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n+        self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE, universal_newlines=True)\n \n     def __call__(self, mangled):\n-        self.proc.stdin.write(mangled + b'\\n')\n+        self.proc.stdin.write(mangled + '\\n')\n         self.proc.stdin.flush()\n         return self.proc.stdout.readline().rstrip()\n \n@@ -95,43 +94,43 @@ def read_symbols(executable, imports=True):\n     Parse an ELF executable and return a list of (symbol,version) tuples\n     for dynamic, imported symbols.\n     '''\n-    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Could not read symbols for %s: %s' % (executable, stderr.strip()))\n     syms = []\n-    for line in stdout.split(b'\\n'):\n+    for line in stdout.splitlines():\n         line = line.split()\n-        if len(line)>7 and re.match(b'[0-9]+:$', line[0]):\n-            (sym, _, version) = line[7].partition(b'@')\n-            is_import = line[6] == b'UND'\n-            if version.startswith(b'@'):\n+        if len(line)>7 and re.match('[0-9]+:$', line[0]):\n+            (sym, _, version) = line[7].partition('@')\n+            is_import = line[6] == 'UND'\n+            if version.startswith('@'):\n                 version = version[1:]\n             if is_import == imports:\n                 syms.append((sym, version))\n     return syms\n \n def check_version(max_versions, version):\n-    if b'_' in version:\n-        (lib, _, ver) = version.rpartition(b'_')\n+    if '_' in version:\n+        (lib, _, ver) = version.rpartition('_')\n     else:\n         lib = version\n         ver = '0'\n-    ver = tuple([int(x) for x in ver.split(b'.')])\n+    ver = tuple([int(x) for x in ver.split('.')])\n     if not lib in max_versions:\n         return False\n     return ver <= max_versions[lib]\n \n def read_libraries(filename):\n-    p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Error opening file')\n     libraries = []\n-    for line in stdout.split(b'\\n'):\n+    for line in stdout.splitlines():\n         tokens = line.split()\n-        if len(tokens)>2 and tokens[1] == b'(NEEDED)':\n-            match = re.match(b'^Shared library: \\[(.*)\\]$', b' '.join(tokens[2:]))\n+        if len(tokens)>2 and tokens[1] == '(NEEDED)':\n+            match = re.match('^Shared library: \\[(.*)\\]$', ' '.join(tokens[2:]))\n             if match:\n                 libraries.append(match.group(1))\n             else:\n@@ -145,20 +144,20 @@ def read_libraries(filename):\n         # Check imported symbols\n         for sym,version in read_symbols(filename, True):\n             if version and not check_version(MAX_VERSIONS, version):\n-                print('%s: symbol %s from unsupported version %s' % (filename, cppfilt(sym).decode('utf-8'), version.decode('utf-8')))\n+                print('%s: symbol %s from unsupported version %s' % (filename, cppfilt(sym), version))\n                 retval = 1\n         # Check exported symbols\n         for sym,version in read_symbols(filename, False):\n             if sym in IGNORE_EXPORTS:\n                 continue\n-            print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym).decode('utf-8')))\n+            print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym)))\n             retval = 1\n         # Check dependency libraries\n         for library_name in read_libraries(filename):\n             if library_name not in ALLOWED_LIBRARIES:\n-                print('%s: NEEDED library %s is not allowed' % (filename, library_name.decode('utf-8')))\n+                print('%s: NEEDED library %s is not allowed' % (filename, library_name))\n                 retval = 1\n \n-    exit(retval)\n+    sys.exit(retval)\n \n "
      },
      {
        "sha": "fd374f63287fa2104d3fa3daf782bba5a1c53575",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "modified",
        "additions": 25,
        "deletions": 16,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,16 +1,15 @@\n-#!/usr/bin/env python2\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n Test script for security-check.py\n '''\n-from __future__ import division,print_function\n import subprocess\n import unittest\n \n def write_testcode(filename):\n-    with open(filename, 'w') as f:\n+    with open(filename, 'w', encoding=\"utf8\") as f:\n         f.write('''\n     #include <stdio.h>\n     int main()\n@@ -22,7 +21,7 @@ def write_testcode(filename):\n \n def call_security_check(cc, source, executable, options):\n     subprocess.check_call([cc,source,'-o',executable] + options)\n-    p = subprocess.Popen(['./security-check.py',executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    p = subprocess.Popen(['./security-check.py',executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     return (p.returncode, stdout.rstrip())\n \n@@ -33,29 +32,39 @@ def test_ELF(self):\n         cc = 'gcc'\n         write_testcode(source)\n \n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro']), \n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro','-no-pie','-fno-PIE']),\n                 (1, executable+': failed PIE NX RELRO Canary'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fno-stack-protector','-Wl,-znorelro']), \n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fno-stack-protector','-Wl,-znorelro','-no-pie','-fno-PIE']),\n                 (1, executable+': failed PIE RELRO Canary'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro']), \n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-no-pie','-fno-PIE']),\n                 (1, executable+': failed PIE RELRO'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-pie','-fPIE']), \n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-pie','-fPIE']),\n                 (1, executable+': failed RELRO'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE']), \n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE']),\n                 (0, ''))\n \n-    def test_PE(self):\n+    def test_32bit_PE(self):\n         source = 'test1.c'\n         executable = 'test1.exe'\n         cc = 'i686-w64-mingw32-gcc'\n         write_testcode(source)\n \n-        self.assertEqual(call_security_check(cc, source, executable, []), \n-                (1, executable+': failed PIE NX'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat']), \n-                (1, executable+': failed PIE'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase']), \n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--no-nxcompat','-Wl,--no-dynamicbase']),\n+                (1, executable+': failed DYNAMIC_BASE NX'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--no-dynamicbase']),\n+                (1, executable+': failed DYNAMIC_BASE'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase']),\n                 (0, ''))\n+    def test_64bit_PE(self):\n+        source = 'test1.c'\n+        executable = 'test1.exe'\n+        cc = 'x86_64-w64-mingw32-gcc'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--no-nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va']), (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA NX'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va']), (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--no-high-entropy-va']), (1, executable+': failed HIGH_ENTROPY_VA'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va']), (0, ''))\n \n if __name__ == '__main__':\n     unittest.main()"
      },
      {
        "sha": "f0098cfcdf9cc58b7d92358d3569c3f43c6816fa",
        "filename": "contrib/devtools/update-translations.py",
        "status": "modified",
        "additions": 12,
        "deletions": 5,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,4 +1,4 @@\n-#!/usr/bin/env python\n+#!/usr/bin/env python3\n # Copyright (c) 2014 Wladimir J. van der Laan\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n@@ -15,7 +15,6 @@\n TODO:\n - auto-add new translations to the build system according to the translation process\n '''\n-from __future__ import division, print_function\n import subprocess\n import re\n import sys\n@@ -31,17 +30,19 @@\n LOCALE_DIR = 'src/qt/locale'\n # Minimum number of messages for translation to be considered at all\n MIN_NUM_MESSAGES = 10\n+# Regexp to check for Bitcoin addresses\n+ADDRESS_REGEXP = re.compile('([13]|bc1)[a-zA-Z0-9]{30,}')\n \n def check_at_repository_root():\n     if not os.path.exists('.git'):\n         print('No .git directory found')\n         print('Execute this script at the root of the repository', file=sys.stderr)\n-        exit(1)\n+        sys.exit(1)\n \n def fetch_all_translations():\n     if subprocess.call([TX, 'pull', '-f', '-a']):\n         print('Error while fetching translations', file=sys.stderr)\n-        exit(1)\n+        sys.exit(1)\n \n def find_format_specifiers(s):\n     '''Find all format specifiers in a string.'''\n@@ -123,6 +124,12 @@ def escape_cdata(text):\n     text = text.replace('\"', '&quot;')\n     return text\n \n+def contains_bitcoin_addr(text, errors):\n+    if text != None and ADDRESS_REGEXP.search(text) != None:\n+        errors.append('Translation \"%s\" contains a bitcoin address. This will be removed.' % (text))\n+        return True\n+    return False\n+\n def postprocess_translations(reduce_diff_hacks=False):\n     print('Checking and postprocessing...')\n \n@@ -161,7 +168,7 @@ def postprocess_translations(reduce_diff_hacks=False):\n                     if translation is None:\n                         continue\n                     errors = []\n-                    valid = check_format_specifiers(source, translation, errors, numerus)\n+                    valid = check_format_specifiers(source, translation, errors, numerus) and not contains_bitcoin_addr(translation, errors)\n \n                     for error in errors:\n                         print('%s: %s' % (filename, error))"
      },
      {
        "sha": "df1db76e924ef025d1449441cfd01fdf14cc3f85",
        "filename": "contrib/filter-lcov.py",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/filter-lcov.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/filter-lcov.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/filter-lcov.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,25 @@\n+#!/usr/bin/env python3\n+\n+import argparse\n+\n+parser = argparse.ArgumentParser(description='Remove the coverage data from a tracefile for all files matching the pattern.')\n+parser.add_argument('--pattern', '-p', action='append', help='the pattern of files to remove', required=True)\n+parser.add_argument('tracefile', help='the tracefile to remove the coverage data from')\n+parser.add_argument('outfile', help='filename for the output to be written to')\n+\n+args = parser.parse_args()\n+tracefile = args.tracefile\n+pattern = args.pattern\n+outfile = args.outfile\n+\n+in_remove = False\n+with open(tracefile, 'r', encoding=\"utf8\") as f:\n+    with open(outfile, 'w', encoding=\"utf8\") as wf:\n+        for line in f:\n+            for p in pattern:\n+                if line.startswith(\"SF:\") and p in line:\n+                    in_remove = True\n+            if not in_remove:\n+                wf.write(line)\n+            if line == 'end_of_record\\n':\n+                in_remove = False"
      },
      {
        "sha": "5b8db1e73d3ea42ad0387ba8038071c884710dd9",
        "filename": "contrib/gitian-build.py",
        "status": "added",
        "additions": 220,
        "deletions": 0,
        "changes": 220,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/gitian-build.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/gitian-build.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,220 @@\n+#!/usr/bin/env python3\n+\n+import argparse\n+import os\n+import subprocess\n+import sys\n+\n+def setup():\n+    global args, workdir\n+    programs = ['ruby', 'git', 'apt-cacher-ng', 'make', 'wget']\n+    if args.kvm:\n+        programs += ['python-vm-builder', 'qemu-kvm', 'qemu-utils']\n+    elif args.docker:\n+        dockers = ['docker.io', 'docker-ce']\n+        for i in dockers:\n+            return_code = subprocess.call(['sudo', 'apt-get', 'install', '-qq', i])\n+            if return_code == 0:\n+                break\n+        if return_code != 0:\n+            print('Cannot find any way to install docker', file=sys.stderr)\n+            exit(1)\n+    else:\n+        programs += ['lxc', 'debootstrap']\n+    subprocess.check_call(['sudo', 'apt-get', 'install', '-qq'] + programs)\n+    if not os.path.isdir('gitian.sigs'):\n+        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin-core/gitian.sigs.git'])\n+    if not os.path.isdir('bitcoin-detached-sigs'):\n+        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin-core/bitcoin-detached-sigs.git'])\n+    if not os.path.isdir('gitian-builder'):\n+        subprocess.check_call(['git', 'clone', 'https://github.com/devrandom/gitian-builder.git'])\n+    if not os.path.isdir('bitcoin'):\n+        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin/bitcoin.git'])\n+    os.chdir('gitian-builder')\n+    make_image_prog = ['bin/make-base-vm', '--suite', 'bionic', '--arch', 'amd64']\n+    if args.docker:\n+        make_image_prog += ['--docker']\n+    elif not args.kvm:\n+        make_image_prog += ['--lxc']\n+    subprocess.check_call(make_image_prog)\n+    os.chdir(workdir)\n+    if args.is_bionic and not args.kvm and not args.docker:\n+        subprocess.check_call(['sudo', 'sed', '-i', 's/lxcbr0/br0/', '/etc/default/lxc-net'])\n+        print('Reboot is required')\n+        exit(0)\n+\n+def build():\n+    global args, workdir\n+\n+    os.makedirs('bitcoin-binaries/' + args.version, exist_ok=True)\n+    print('\\nBuilding Dependencies\\n')\n+    os.chdir('gitian-builder')\n+    os.makedirs('inputs', exist_ok=True)\n+\n+    subprocess.check_call(['wget', '-N', '-P', 'inputs', 'http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz'])\n+    subprocess.check_call(['wget', '-N', '-P', 'inputs', 'https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch'])\n+    subprocess.check_call(['make', '-C', '../bitcoin/depends', 'download', 'SOURCES_PATH=' + os.getcwd() + '/cache/common'])\n+\n+    if args.linux:\n+        print('\\nCompiling ' + args.version + ' Linux')\n+        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-linux', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/'+args.version, shell=True)\n+\n+    if args.windows:\n+        print('\\nCompiling ' + args.version + ' Windows')\n+        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-win.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-win-unsigned', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-win.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz', shell=True)\n+        subprocess.check_call('mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../bitcoin-binaries/'+args.version, shell=True)\n+\n+    if args.macos:\n+        print('\\nCompiling ' + args.version + ' MacOS')\n+        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-osx-unsigned', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz', shell=True)\n+        subprocess.check_call('mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../bitcoin-binaries/'+args.version, shell=True)\n+\n+    os.chdir(workdir)\n+\n+    if args.commit_files:\n+        print('\\nCommitting '+args.version+' Unsigned Sigs\\n')\n+        os.chdir('gitian.sigs')\n+        subprocess.check_call(['git', 'add', args.version+'-linux/'+args.signer])\n+        subprocess.check_call(['git', 'add', args.version+'-win-unsigned/'+args.signer])\n+        subprocess.check_call(['git', 'add', args.version+'-osx-unsigned/'+args.signer])\n+        subprocess.check_call(['git', 'commit', '-m', 'Add '+args.version+' unsigned sigs for '+args.signer])\n+        os.chdir(workdir)\n+\n+def sign():\n+    global args, workdir\n+    os.chdir('gitian-builder')\n+\n+    if args.windows:\n+        print('\\nSigning ' + args.version + ' Windows')\n+        subprocess.check_call(['bin/gbuild', '-i', '--commit', 'signature='+args.commit, '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-win-signed', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/'+args.version, shell=True)\n+        subprocess.check_call('mv build/out/bitcoin-*win32-setup.exe ../bitcoin-binaries/'+args.version, shell=True)\n+\n+    if args.macos:\n+        print('\\nSigning ' + args.version + ' MacOS')\n+        subprocess.check_call(['bin/gbuild', '-i', '--commit', 'signature='+args.commit, '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-osx-signed', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/'+args.version+'/bitcoin-'+args.version+'-osx.dmg', shell=True)\n+\n+    os.chdir(workdir)\n+\n+    if args.commit_files:\n+        print('\\nCommitting '+args.version+' Signed Sigs\\n')\n+        os.chdir('gitian.sigs')\n+        subprocess.check_call(['git', 'add', args.version+'-win-signed/'+args.signer])\n+        subprocess.check_call(['git', 'add', args.version+'-osx-signed/'+args.signer])\n+        subprocess.check_call(['git', 'commit', '-a', '-m', 'Add '+args.version+' signed binary sigs for '+args.signer])\n+        os.chdir(workdir)\n+\n+def verify():\n+    global args, workdir\n+    os.chdir('gitian-builder')\n+\n+    print('\\nVerifying v'+args.version+' Linux\\n')\n+    subprocess.check_call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-linux', '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml'])\n+    print('\\nVerifying v'+args.version+' Windows\\n')\n+    subprocess.check_call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-win-unsigned', '../bitcoin/contrib/gitian-descriptors/gitian-win.yml'])\n+    print('\\nVerifying v'+args.version+' MacOS\\n')\n+    subprocess.check_call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-osx-unsigned', '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml'])\n+    print('\\nVerifying v'+args.version+' Signed Windows\\n')\n+    subprocess.check_call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-win-signed', '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml'])\n+    print('\\nVerifying v'+args.version+' Signed MacOS\\n')\n+    subprocess.check_call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-osx-signed', '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml'])\n+\n+    os.chdir(workdir)\n+\n+def main():\n+    global args, workdir\n+\n+    parser = argparse.ArgumentParser(usage='%(prog)s [options] signer version')\n+    parser.add_argument('-c', '--commit', action='store_true', dest='commit', help='Indicate that the version argument is for a commit or branch')\n+    parser.add_argument('-u', '--url', dest='url', default='https://github.com/bitcoin/bitcoin', help='Specify the URL of the repository. Default is %(default)s')\n+    parser.add_argument('-v', '--verify', action='store_true', dest='verify', help='Verify the Gitian build')\n+    parser.add_argument('-b', '--build', action='store_true', dest='build', help='Do a Gitian build')\n+    parser.add_argument('-s', '--sign', action='store_true', dest='sign', help='Make signed binaries for Windows and MacOS')\n+    parser.add_argument('-B', '--buildsign', action='store_true', dest='buildsign', help='Build both signed and unsigned binaries')\n+    parser.add_argument('-o', '--os', dest='os', default='lwm', help='Specify which Operating Systems the build is for. Default is %(default)s. l for Linux, w for Windows, m for MacOS')\n+    parser.add_argument('-j', '--jobs', dest='jobs', default='2', help='Number of processes to use. Default %(default)s')\n+    parser.add_argument('-m', '--memory', dest='memory', default='2000', help='Memory to allocate in MiB. Default %(default)s')\n+    parser.add_argument('-k', '--kvm', action='store_true', dest='kvm', help='Use KVM instead of LXC')\n+    parser.add_argument('-d', '--docker', action='store_true', dest='docker', help='Use Docker instead of LXC')\n+    parser.add_argument('-S', '--setup', action='store_true', dest='setup', help='Set up the Gitian building environment. Uses LXC. If you want to use KVM, use the --kvm option. Only works on Debian-based systems (Ubuntu, Debian)')\n+    parser.add_argument('-D', '--detach-sign', action='store_true', dest='detach_sign', help='Create the assert file for detached signing. Will not commit anything.')\n+    parser.add_argument('-n', '--no-commit', action='store_false', dest='commit_files', help='Do not commit anything to git')\n+    parser.add_argument('signer', help='GPG signer to sign each build assert file')\n+    parser.add_argument('version', help='Version number, commit, or branch to build. If building a commit or branch, the -c option must be specified')\n+\n+    args = parser.parse_args()\n+    workdir = os.getcwd()\n+\n+    args.linux = 'l' in args.os\n+    args.windows = 'w' in args.os\n+    args.macos = 'm' in args.os\n+\n+    args.is_bionic = b'bionic' in subprocess.check_output(['lsb_release', '-cs'])\n+\n+    if args.buildsign:\n+        args.build=True\n+        args.sign=True\n+\n+    if args.kvm and args.docker:\n+        raise Exception('Error: cannot have both kvm and docker')\n+\n+    args.sign_prog = 'true' if args.detach_sign else 'gpg --detach-sign'\n+\n+    # Set enviroment variable USE_LXC or USE_DOCKER, let gitian-builder know that we use lxc or docker\n+    if args.docker:\n+        os.environ['USE_DOCKER'] = '1'\n+    elif not args.kvm:\n+        os.environ['USE_LXC'] = '1'\n+        if not 'GITIAN_HOST_IP' in os.environ.keys():\n+            os.environ['GITIAN_HOST_IP'] = '10.0.3.1'\n+        if not 'LXC_GUEST_IP' in os.environ.keys():\n+            os.environ['LXC_GUEST_IP'] = '10.0.3.5'\n+\n+    # Disable for MacOS if no SDK found\n+    if args.macos and not os.path.isfile('gitian-builder/inputs/MacOSX10.11.sdk.tar.gz'):\n+        print('Cannot build for MacOS, SDK does not exist. Will build for other OSes')\n+        args.macos = False\n+\n+    script_name = os.path.basename(sys.argv[0])\n+    # Signer and version shouldn't be empty\n+    if args.signer == '':\n+        print(script_name+': Missing signer.')\n+        print('Try '+script_name+' --help for more information')\n+        exit(1)\n+    if args.version == '':\n+        print(script_name+': Missing version.')\n+        print('Try '+script_name+' --help for more information')\n+        exit(1)\n+\n+    # Add leading 'v' for tags\n+    args.commit = ('' if args.commit else 'v') + args.version\n+    print(args.commit)\n+\n+    if args.setup:\n+        setup()\n+\n+    os.chdir('bitcoin')\n+    subprocess.check_call(['git', 'fetch'])\n+    subprocess.check_call(['git', 'checkout', args.commit])\n+    os.chdir(workdir)\n+\n+    if args.build:\n+        build()\n+\n+    if args.sign:\n+        sign()\n+\n+    if args.verify:\n+        verify()\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "6ee5df47039e6f732b46e421d02f81bf5ccbf24a",
        "filename": "contrib/gitian-build.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 392,
        "changes": 392,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.sh?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,392 +0,0 @@\n-# Copyright (c) 2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# What to do\n-sign=false\n-verify=false\n-build=false\n-setupenv=false\n-\n-# Systems to build\n-linux=true\n-windows=true\n-osx=true\n-\n-# Other Basic variables\n-SIGNER=\n-VERSION=\n-commit=false\n-url=https://github.com/bitcoin/bitcoin\n-proc=2\n-mem=2000\n-lxc=true\n-osslTarUrl=http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz\n-osslPatchUrl=https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n-scriptName=$(basename -- \"$0\")\n-signProg=\"gpg --detach-sign\"\n-commitFiles=true\n-\n-# Help Message\n-read -d '' usage <<- EOF\n-Usage: $scriptName [-c|u|v|b|s|B|o|h|j|m|] signer version\n-\n-Run this script from the directory containing the bitcoin, gitian-builder, gitian.sigs, and bitcoin-detached-sigs.\n-\n-Arguments:\n-signer          GPG signer to sign each build assert file\n-version\t\tVersion number, commit, or branch to build. If building a commit or branch, the -c option must be specified\n-\n-Options:\n--c|--commit\tIndicate that the version argument is for a commit or branch\n--u|--url\tSpecify the URL of the repository. Default is https://github.com/bitcoin/bitcoin\n--v|--verify \tVerify the gitian build\n--b|--build\tDo a gitian build\n--s|--sign\tMake signed binaries for Windows and Mac OSX\n--B|--buildsign\tBuild both signed and unsigned binaries\n--o|--os\t\tSpecify which Operating Systems the build is for. Default is lwx. l for linux, w for windows, x for osx\n--j\t\tNumber of processes to use. Default 2\n--m\t\tMemory to allocate in MiB. Default 2000\n---kvm           Use KVM instead of LXC\n---setup         Setup the gitian building environment. Uses KVM. If you want to use lxc, use the --lxc option. Only works on Debian-based systems (Ubuntu, Debian)\n---detach-sign   Create the assert file for detached signing. Will not commit anything.\n---no-commit     Do not commit anything to git\n--h|--help\tPrint this help message\n-EOF\n-\n-# Get options and arguments\n-while :; do\n-    case $1 in\n-        # Verify\n-        -v|--verify)\n-\t    verify=true\n-            ;;\n-        # Build\n-        -b|--build)\n-\t    build=true\n-            ;;\n-        # Sign binaries\n-        -s|--sign)\n-\t    sign=true\n-            ;;\n-        # Build then Sign\n-        -B|--buildsign)\n-\t    sign=true\n-\t    build=true\n-            ;;\n-        # PGP Signer\n-        -S|--signer)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tSIGNER=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"--signer\" requires a non-empty argument.'\n-\t\texit 1\n-\t    fi\n-           ;;\n-        # Operating Systems\n-        -o|--os)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tlinux=false\n-\t\twindows=false\n-\t\tosx=false\n-\t\tif [[ \"$2\" = *\"l\"* ]]\n-\t\tthen\n-\t\t    linux=true\n-\t\tfi\n-\t\tif [[ \"$2\" = *\"w\"* ]]\n-\t\tthen\n-\t\t    windows=true\n-\t\tfi\n-\t\tif [[ \"$2\" = *\"x\"* ]]\n-\t\tthen\n-\t\t    osx=true\n-\t\tfi\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"--os\" requires an argument containing an l (for linux), w (for windows), or x (for Mac OSX)\\n'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-\t# Help message\n-\t-h|--help)\n-\t    echo \"$usage\"\n-\t    exit 0\n-\t    ;;\n-\t# Commit or branch\n-\t-c|--commit)\n-\t    commit=true\n-\t    ;;\n-\t# Number of Processes\n-\t-j)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tproc=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"-j\" requires an argument'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-\t# Memory to allocate\n-\t-m)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tmem=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"-m\" requires an argument'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-\t# URL\n-\t-u)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\turl=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"-u\" requires an argument'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-        # kvm\n-        --kvm)\n-            lxc=false\n-            ;;\n-        # Detach sign\n-        --detach-sign)\n-            signProg=\"true\"\n-            commitFiles=false\n-            ;;\n-        # Commit files\n-        --no-commit)\n-            commitFiles=false\n-            ;;\n-        # Setup\n-        --setup)\n-            setup=true\n-            ;;\n-\t*)               # Default case: If no more options then break out of the loop.\n-             break\n-    esac\n-    shift\n-done\n-\n-# Set up LXC\n-if [[ $lxc = true ]]\n-then\n-    export USE_LXC=1\n-    export LXC_BRIDGE=lxcbr0\n-    sudo ifconfig lxcbr0 up 10.0.2.2\n-fi\n-\n-# Check for OSX SDK\n-if [[ ! -e \"gitian-builder/inputs/MacOSX10.11.sdk.tar.gz\" && $osx == true ]]\n-then\n-    echo \"Cannot build for OSX, SDK does not exist. Will build for other OSes\"\n-    osx=false\n-fi\n-\n-# Get signer\n-if [[ -n\"$1\" ]]\n-then\n-    SIGNER=$1\n-    shift\n-fi\n-\n-# Get version\n-if [[ -n \"$1\" ]]\n-then\n-    VERSION=$1\n-    COMMIT=$VERSION\n-    shift\n-fi\n-\n-# Check that a signer is specified\n-if [[ $SIGNER == \"\" ]]\n-then\n-    echo \"$scriptName: Missing signer.\"\n-    echo \"Try $scriptName --help for more information\"\n-    exit 1\n-fi\n-\n-# Check that a version is specified\n-if [[ $VERSION == \"\" ]]\n-then\n-    echo \"$scriptName: Missing version.\"\n-    echo \"Try $scriptName --help for more information\"\n-    exit 1\n-fi\n-\n-# Add a \"v\" if no -c\n-if [[ $commit = false ]]\n-then\n-\tCOMMIT=\"v${VERSION}\"\n-fi\n-echo ${COMMIT}\n-\n-# Setup build environment\n-if [[ $setup = true ]]\n-then\n-    sudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm qemu-utils\n-    git clone https://github.com/bitcoin-core/gitian.sigs.git\n-    git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n-    git clone https://github.com/devrandom/gitian-builder.git\n-    pushd ./gitian-builder\n-    if [[ -n \"$USE_LXC\" ]]\n-    then\n-        sudo apt-get install lxc\n-        bin/make-base-vm --suite trusty --arch amd64 --lxc\n-    else\n-        bin/make-base-vm --suite trusty --arch amd64\n-    fi\n-    popd\n-fi\n-\n-# Set up build\n-pushd ./bitcoin\n-git fetch\n-git checkout ${COMMIT}\n-popd\n-\n-# Build\n-if [[ $build = true ]]\n-then\n-\t# Make output folder\n-\tmkdir -p ./bitcoin-binaries/${VERSION}\n-\t\n-\t# Build Dependencies\n-\techo \"\"\n-\techo \"Building Dependencies\"\n-\techo \"\"\n-\tpushd ./gitian-builder\t\n-\tmkdir -p inputs\n-\twget -N -P inputs $osslPatchUrl\n-\twget -N -P inputs $osslTarUrl\n-\tmake -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n-\n-\t# Linux\n-\tif [[ $linux = true ]]\n-\tthen\n-            echo \"\"\n-\t    echo \"Compiling ${VERSION} Linux\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t    mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/${VERSION}\n-\tfi\n-\t# Windows\n-\tif [[ $windows = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Compiling ${VERSION} Windows\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t    mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n-\t    mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../bitcoin-binaries/${VERSION}\n-\tfi\n-\t# Mac OSX\n-\tif [[ $osx = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Compiling ${VERSION} Mac OSX\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t    mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n-\t    mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../bitcoin-binaries/${VERSION}\n-\tfi\n-\tpopd\n-\n-        if [[ $commitFiles = true ]]\n-        then\n-\t    # Commit to gitian.sigs repo\n-            echo \"\"\n-            echo \"Committing ${VERSION} Unsigned Sigs\"\n-            echo \"\"\n-            pushd gitian.sigs\n-            git add ${VERSION}-linux/${SIGNER}\n-            git add ${VERSION}-win-unsigned/${SIGNER}\n-            git add ${VERSION}-osx-unsigned/${SIGNER}\n-            git commit -a -m \"Add ${VERSION} unsigned sigs for ${SIGNER}\"\n-            popd\n-        fi\n-fi\n-\n-# Verify the build\n-if [[ $verify = true ]]\n-then\n-\t# Linux\n-\tpushd ./gitian-builder\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Linux\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t# Windows\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Windows\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t# Mac OSX\t\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Mac OSX\"\n-\techo \"\"\t\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t# Signed Windows\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Signed Windows\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t# Signed Mac OSX\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Signed Mac OSX\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\t\n-\tpopd\n-fi\n-\n-# Sign binaries\n-if [[ $sign = true ]]\n-then\n-\t\n-        pushd ./gitian-builder\n-\t# Sign Windows\n-\tif [[ $windows = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Signing ${VERSION} Windows\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t    mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/${VERSION}\n-\t    mv build/out/bitcoin-*win32-setup.exe ../bitcoin-binaries/${VERSION}\n-\tfi\n-\t# Sign Mac OSX\n-\tif [[ $osx = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Signing ${VERSION} Mac OSX\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t    mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/${VERSION}/bitcoin-${VERSION}-osx.dmg\n-\tfi\n-\tpopd\n-\n-        if [[ $commitFiles = true ]]\n-        then\n-            # Commit Sigs\n-            pushd gitian.sigs\n-            echo \"\"\n-            echo \"Committing ${VERSION} Signed Sigs\"\n-            echo \"\"\n-            git add ${VERSION}-win-signed/${SIGNER}\n-            git add ${VERSION}-osx-signed/${SIGNER}\n-            git commit -a -m \"Add ${VERSION} signed binary sigs for ${SIGNER}\"\n-            popd\n-        fi\n-fi"
      },
      {
        "sha": "614970659660f8fee76b8859467e192795829de4",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,65 +0,0 @@\n-### Gavin's notes on getting gitian builds up and running using KVM\n-\n-These instructions distilled from\n-[https://help.ubuntu.com/community/KVM/Installation](https://help.ubuntu.com/community/KVM/Installation).\n-\n-You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n-\n-You probably need to enable hardware virtualization in your machine's BIOS.\n-\n-You need to be running a recent version of 64-bit-Ubuntu, and you need to install several prerequisites:\n-\n-\tsudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm\n-\n-Sanity checks:\n-\n-\tsudo service apt-cacher-ng status  # Should return apt-cacher-ng is running\n-\tls -l /dev/kvm   # Should show a /dev/kvm device\n-\n-\n-Once you've got the right hardware and software:\n-\n-    git clone git://github.com/bitcoin/bitcoin.git\n-    git clone git://github.com/devrandom/gitian-builder.git\n-    mkdir gitian-builder/inputs\n-    cd gitian-builder/inputs\n-\n-    # Create base images\n-    cd gitian-builder\n-    bin/make-base-vm --suite trusty --arch amd64\n-    cd ..\n-\n-    # Get inputs (see doc/release-process.md for exact inputs needed and where to get them)\n-    ...\n-\n-    # For further build instructions see doc/release-process.md\n-    ...\n-\n----------------------\n-\n-`gitian-builder` now also supports building using LXC. See\n-[help.ubuntu.com](https://help.ubuntu.com/14.04/serverguide/lxc.html)\n-for how to get LXC up and running under Ubuntu.\n-\n-If your main machine is a 64-bit Mac or PC with a few gigabytes of memory\n-and at least 10 gigabytes of free disk space, you can `gitian-build` using\n-LXC running inside a virtual machine.\n-\n-Here's a description of Gavin's setup on OSX 10.6:\n-\n-1. Download and install VirtualBox from [https://www.virtualbox.org/](https://www.virtualbox.org/)\n-\n-2. Download the 64-bit Ubuntu Desktop 12.04 LTS .iso CD image from\n-   [http://www.ubuntu.com/](http://www.ubuntu.com/)\n-\n-3. Run VirtualBox and create a new virtual machine, using the Ubuntu .iso (see the [VirtualBox documentation](https://www.virtualbox.org/wiki/Documentation) for details). Create it with at least 2 gigabytes of memory and a disk that is at least 20 gigabytes big.\n-\n-4. Inside the running Ubuntu desktop, install:\n-\n-\tsudo apt-get install debootstrap lxc ruby apache2 git apt-cacher-ng python-vm-builder\n-\n-5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the \"Once you've got the right hardware and software\" instructions above:\n-\n-\texport USE_LXC=1\n-\tgit clone git://github.com/bitcoin/bitcoin.git\n-\t... etc"
      },
      {
        "sha": "c7933cff20d2076c69480669b14024db2efb94ce",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 37,
        "deletions": 21,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,24 +1,28 @@\n ---\n-name: \"bitcoin-linux-0.15\"\n+name: \"bitcoin-linux-0.18\"\n enable_cache: true\n suites:\n-- \"trusty\"\n+- \"bionic\"\n architectures:\n - \"amd64\"\n packages:\n - \"curl\"\n - \"g++-aarch64-linux-gnu\"\n-- \"g++-4.8-aarch64-linux-gnu\"\n-- \"gcc-4.8-aarch64-linux-gnu\"\n+- \"g++-8-aarch64-linux-gnu\"\n+- \"gcc-8-aarch64-linux-gnu\"\n - \"binutils-aarch64-linux-gnu\"\n - \"g++-arm-linux-gnueabihf\"\n-- \"g++-4.8-arm-linux-gnueabihf\"\n-- \"gcc-4.8-arm-linux-gnueabihf\"\n+- \"g++-8-arm-linux-gnueabihf\"\n+- \"gcc-8-arm-linux-gnueabihf\"\n - \"binutils-arm-linux-gnueabihf\"\n-- \"g++-4.8-multilib\"\n-- \"gcc-4.8-multilib\"\n+- \"g++-riscv64-linux-gnu\"\n+- \"g++-8-riscv64-linux-gnu\"\n+- \"gcc-8-riscv64-linux-gnu\"\n+- \"binutils-riscv64-linux-gnu\"\n+- \"g++-8-multilib\"\n+- \"gcc-8-multilib\"\n - \"binutils-gold\"\n-- \"git-core\"\n+- \"git\"\n - \"pkg-config\"\n - \"autoconf\"\n - \"libtool\"\n@@ -34,15 +38,16 @@ files: []\n script: |\n \n   WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"i686-pc-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu\"\n+  HOSTS=\"i686-pc-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\"\n   CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n-  FAKETIME_HOST_PROGS=\"\"\n+  FAKETIME_HOST_PROGS=\"gcc g++\"\n   FAKETIME_PROGS=\"date ar ranlib nm\"\n   HOST_CFLAGS=\"-O2 -g\"\n   HOST_CXXFLAGS=\"-O2 -g\"\n   HOST_LDFLAGS=-static-libstdc++\n \n   export QT_RCC_TEST=1\n+  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export GZIP=\"-9n\"\n   export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n   export TZ=\"UTC\"\n@@ -56,7 +61,7 @@ script: |\n \n   function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n     echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n@@ -68,12 +73,15 @@ script: |\n   function create_per-host_faketime_wrappers {\n   for i in $HOSTS; do\n     for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n+        if which ${i}-${prog}-8\n+        then\n+            echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n+            echo \"REAL=\\`which -a ${i}-${prog}-8 | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+            echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+            echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+            echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+            chmod +x ${WRAP_DIR}/${i}-${prog}\n+        fi\n     done\n   done\n   }\n@@ -98,8 +106,8 @@ script: |\n   for prog in gcc g++; do\n   rm -f ${WRAP_DIR}/${prog}\n   cat << EOF > ${WRAP_DIR}/${prog}\n-  #!/bin/bash\n-  REAL=\"`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1`\"\n+  #!/usr/bin/env bash\n+  REAL=\"`which -a ${prog}-8 | grep -v ${WRAP_DIR}/${prog} | head -1`\"\n   for var in \"\\$@\"\n   do\n     if [ \"\\$var\" = \"-m32\" ]; then\n@@ -132,7 +140,6 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   # Create the release tarball using (arbitrarily) the first host\n-  export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n@@ -145,6 +152,9 @@ script: |\n   find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n+  # Workaround for tarball not building with the bare tag version (prep)\n+  make -C src obj/build.h\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n@@ -155,6 +165,11 @@ script: |\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n+    # Workaround for tarball not building with the bare tag version\n+    echo '#!/bin/true' >share/genbuild.sh\n+    mkdir src/obj\n+    cp ../src/obj/build.h src/obj/\n+\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n     make ${MAKEOPTS}\n     make ${MAKEOPTS} -C src check-security\n@@ -166,6 +181,7 @@ script: |\n     case $i in\n        aarch64-*) : ;;\n        arm-*) : ;;\n+       riscv64-*) : ;;\n        *) make ${MAKEOPTS} -C src check-symbols ;;\n     esac\n "
      },
      {
        "sha": "297a136faeeca16e433daebb5a1f77924b17931e",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,7 +1,7 @@\n ---\n name: \"bitcoin-dmg-signer\"\n suites:\n-- \"trusty\"\n+- \"bionic\"\n architectures:\n - \"amd64\"\n packages:\n@@ -19,7 +19,7 @@ script: |\n \n   # Create global faketime wrappers\n   for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n     echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}"
      },
      {
        "sha": "87d8007ccb2fb04d51ba29ce0d52ccf75d3fd9f5",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 15,
        "deletions": 7,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,15 +1,15 @@\n ---\n-name: \"bitcoin-osx-0.15\"\n+name: \"bitcoin-osx-0.18\"\n enable_cache: true\n suites:\n-- \"trusty\"\n+- \"bionic\"\n architectures:\n - \"amd64\"\n packages:\n - \"ca-certificates\"\n - \"curl\"\n - \"g++\"\n-- \"git-core\"\n+- \"git\"\n - \"pkg-config\"\n - \"autoconf\"\n - \"librsvg2-bin\"\n@@ -34,12 +34,13 @@ files:\n - \"MacOSX10.11.sdk.tar.gz\"\n script: |\n   WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-apple-darwin11\"\n+  HOSTS=\"x86_64-apple-darwin14\"\n   CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=$WRAP_DIR/genisoimage\"\n   FAKETIME_HOST_PROGS=\"\"\n   FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n \n   export QT_RCC_TEST=1\n+  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export GZIP=\"-9n\"\n   export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n   export TZ=\"UTC\"\n@@ -55,7 +56,7 @@ script: |\n \n   function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n     echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n@@ -67,7 +68,7 @@ script: |\n   function create_per-host_faketime_wrappers {\n   for i in $HOSTS; do\n     for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n         echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n@@ -101,7 +102,6 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   # Create the release tarball using (arbitrarily) the first host\n-  export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n@@ -115,6 +115,9 @@ script: |\n   find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n+  # Workaround for tarball not building with the bare tag version (prep)\n+  make -C src obj/build.h\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n@@ -125,6 +128,11 @@ script: |\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n+    # Workaround for tarball not building with the bare tag version\n+    echo '#!/bin/true' >share/genbuild.sh\n+    mkdir src/obj\n+    cp ../src/obj/build.h src/obj/\n+\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n     make ${MAKEOPTS}\n     make install-strip DESTDIR=${INSTALLPATH}"
      },
      {
        "sha": "045be873e91c3d8cf81090ffa3d8cb5dcc65d67c",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,11 +1,12 @@\n ---\n name: \"bitcoin-win-signer\"\n suites:\n-- \"trusty\"\n+- \"bionic\"\n architectures:\n - \"amd64\"\n packages:\n-- \"libssl-dev\"\n+# Once osslsigncode supports openssl 1.1, we can change this back to libssl-dev\n+- \"libssl1.0-dev\"\n - \"autoconf\"\n remotes:\n - \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\""
      },
      {
        "sha": "31b9c309c7438eed92bde1e464e92c3b4e31e698",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 19,
        "deletions": 10,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,14 +1,14 @@\n ---\n-name: \"bitcoin-win-0.15\"\n+name: \"bitcoin-win-0.18\"\n enable_cache: true\n suites:\n-- \"trusty\"\n+- \"bionic\"\n architectures:\n - \"amd64\"\n packages:\n - \"curl\"\n - \"g++\"\n-- \"git-core\"\n+- \"git\"\n - \"pkg-config\"\n - \"autoconf\"\n - \"libtool\"\n@@ -21,6 +21,7 @@ packages:\n - \"zip\"\n - \"ca-certificates\"\n - \"python\"\n+- \"rename\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n@@ -29,12 +30,13 @@ script: |\n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"i686-w64-mingw32 x86_64-w64-mingw32\"\n   CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n-  FAKETIME_HOST_PROGS=\"g++ ar ranlib nm windres strip objcopy\"\n+  FAKETIME_HOST_PROGS=\"ar ranlib nm windres strip objcopy\"\n   FAKETIME_PROGS=\"date makensis zip\"\n   HOST_CFLAGS=\"-O2 -g\"\n   HOST_CXXFLAGS=\"-O2 -g\"\n \n   export QT_RCC_TEST=1\n+  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export GZIP=\"-9n\"\n   export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n   export TZ=\"UTC\"\n@@ -48,7 +50,7 @@ script: |\n \n   function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n     echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n@@ -60,7 +62,7 @@ script: |\n   function create_per-host_faketime_wrappers {\n   for i in $HOSTS; do\n     for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n         echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n@@ -76,15 +78,15 @@ script: |\n   for i in $HOSTS; do\n     mkdir -p ${WRAP_DIR}/${i}\n     for prog in collect2; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}/${prog}\n+        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}/${prog}\n         REAL=$(${i}-gcc -print-prog-name=${prog})\n         echo \"export MALLOC_PERTURB_=255\" >> ${WRAP_DIR}/${i}/${prog}\n         echo \"${REAL} \\$@\" >> $WRAP_DIR/${i}/${prog}\n         chmod +x ${WRAP_DIR}/${i}/${prog}\n     done\n     for prog in gcc g++; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog}-posix | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n         echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export COMPILER_PATH=${WRAP_DIR}/${i}\" >> ${WRAP_DIR}/${i}-${prog}\n@@ -116,7 +118,6 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   # Create the release tarball using (arbitrarily) the first host\n-  export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n@@ -132,6 +133,9 @@ script: |\n   cp ../$SOURCEDIST $OUTDIR/src\n   popd\n \n+  # Workaround for tarball not building with the bare tag version (prep)\n+  make -C src obj/build.h\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n@@ -142,6 +146,11 @@ script: |\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n+    # Workaround for tarball not building with the bare tag version\n+    echo '#!/bin/true' >share/genbuild.sh\n+    mkdir src/obj\n+    cp ../src/obj/build.h src/obj/\n+\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\"\n     make ${MAKEOPTS}\n     make ${MAKEOPTS} -C src check-security"
      },
      {
        "sha": "ffe4fb144b1ae07c7c9bbdcdaea2694978eb18b2",
        "filename": "contrib/gitian-keys/README.md",
        "status": "modified",
        "additions": 20,
        "deletions": 9,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/gitian-keys/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/gitian-keys/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/README.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,16 +1,27 @@\n-PGP keys\n-========\n+## PGP keys of Gitian builders and Developers\n \n-This folder contains the public keys of developers and active contributors.\n+The file `keys.txt` contains fingerprints of the public keys of Gitian builders\n+and active developers.\n \n-The keys are mainly used to sign git commits or the build results of gitian\n-builds.\n+The associated keys are mainly used to sign git commits or the build results\n+of Gitian builds.\n \n-You can import the keys into gpg as follows. Also, make sure to fetch the\n-latest version from the key server to see if any key was revoked in the\n-meantime.\n+The most recent version of each pgp key can be found on most pgp key servers.\n+\n+Fetch the latest version from the key server to see if any key was revoked in\n+the meantime.\n+To fetch the latest version of all pgp keys in your gpg homedir,\n \n ```sh\n-gpg --import ./*.pgp\n gpg --refresh-keys\n ```\n+\n+To fetch keys of Gitian builders and active developers, feed the list of\n+fingerprints of the primary keys into gpg:\n+\n+```sh\n+while read fingerprint keyholder_name; do gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys ${fingerprint}; done < ./keys.txt\n+```\n+\n+Add your key to the list if you provided Gitian signatures for two major or\n+minor releases of Bitcoin Core."
      },
      {
        "sha": "030fd5cf3cd389976b9d07e6e48bb8d3524442fe",
        "filename": "contrib/gitian-keys/achow101-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/achow101-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/achow101-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/achow101-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,52 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1\n-\n-mQINBFT4snkBEACx90Wf5XLo1Xv09p81eaOXc+8bbkSYzqx3ThDNUPRzjYpex9A9\n-8FxfBenAykD3EgYuBTco4cbn7Dw11ppyXUw0VjWaagnnAVGxt3SDeY3ADwPss6xg\n-78FZXxT06xSHZXq1X6pOqhwTAnx3VGx+tR/A2DCsX0vHE6IVThZqyUq2Ei2C0Chc\n-od8y6JZ1CGNzlRkEgL9A0Zp0If6Uq4tXFxnLL6PtiS1b9V5rNfCSC7l99kIkG5oy\n-+SPsGRwVqTE2kqtuzkt9qVn6v8KKoZr0BY4IO3KMfJJ4eidOkB+OZK9REEQguDvv\n-tJfkF2HcMYa1efvQObyvVIfS5gxs7+kcSJxgDVZI5YxRV1OOfI7+w3EW3G+bPBQF\n-gSBwEaLbD+udr9lDZ4NZc7vTeoZtYVNZ+EQtG+6I9GzxJwEgO5LIwZ3//vh/R4iy\n-z9W91r7TrlkHUuOGg1hXMCI9sRa65NJtP4BWD0xO07zDKj0JHzeyKwgxB/ixZF2V\n-kc8EzJSKzRfr+638BMXONcf6NW8n6qIlJT2U2qIwiixjM8AUujGKb8DEgU1vIAn9\n-7esOhceOtU/6iLuJrlK+TzMe97NoZCtt6ktmiAp8fu6l9uk3mr8JYLzIMtK+Asf4\n-np5YLizABwbt9gEretnGpHrdKMN88mPYwsLjjCh9wiM0bHZNL52JQRkt3QARAQAB\n-tDNBbmRyZXcgQ2hvdyAoT2ZmaWNpYWwgTmV3IEtleSkgPGFjaG93MTAxQGdtYWls\n-LmNvbT6JAjYEEwEKACAFAlT4snkCGwMFCwkIBwMFFQoJCAsEFgIBAAIeAQIXgAAK\n-CRAXVlcy4I5eQfyGD/9idtVjybuXl+LXS4ph4M738PrZfQeLDmnwhVjfZiEOLLs2\n-sAwGtL/CC0t9f7K7y+n5HtQoMX52jfVehnTDzeKCjRMs+5ssou+L9zadIAz68beU\n-7BZ0J1rR3n1kzwsFE3vx3IRno0VCTOgfL48AuuzMPxvEaLMxWQX8mL0PCV5/8Yxx\n-ftqg4kQ1JKMt5UTxE9/w0cBMphLTwV1Rx6lZILPJgOxYSQ0oOzQYSmucwzH1uOqH\n-wpgZ7SZIHfRWyi4TjQpU/5T2kMOlN/XdyWsj5+Eq+Y6zI6hq2se1vU3TOc8xN2S3\n-7YOza1onUj4if0rWtkJZ2yDnR4lIASUD+/VP2NoWtoy7rB0vIfzbojfwxAp8WuHT\n-sUTxXd52c3OB+673OlOA+GAg2FfFjR8REojsTbeip35/KmFMpafazVRn+E0c3MfP\n-/iS43UTlcxewRcDrx/gRplmgO0+CLgLstZOon7Dz0msypeSArhX2xEj4tJb/ccKd\n-CR/IQl8q/ULQsHX1LwRj0u9doAlkqgIQdKXou4+EmD1jKF92oJMZ+20AJCqfwYQY\n-9HlCB9SQeCRUtU/fHkAZLPApze6C7a1r0LVIuM6iolWyha5KJ++mj84fAagwy/ag\n-8TU8kHTLSGPYeg5G/TAbr1XU5kbbqfWfQFMK1xtdZd1BaGP2cDC2QGkr2ot1SLkC\n-DQRU+LJ5ARAArDftuFPE+ZhgJRuJK163fsD15aHPfv5s+h8kPFv0AuwVs+D75w3y\n-YGfaRtlwSvK+8EucKOoHI1AQYjTG0dtKJuwEGhQ2qsTWUKe05tEAWu0eN62MOZ/r\n-Awjxqotj4TeFksfyKedVAYSizD0Xj16fizeWFrfUBNND4OgUgD8KM79oRchtzKBE\n-HRBP27JksU8tQWc4YcEJUHV66Pji5OCiXxHXJ+JpqKSKeCrVvrvro+pwsY1I3ARA\n-F4UmLxCcb4GnNq+s76cb2K7XJtWJu5FHeHOsef5ped43pYs35UXI+EvOYNs39XI4\n-emMsI0KmuLME2LHO3CJNBirwRFxui27axZk/CSVE1lglnbb25n3QHvbs/31ASCCT\n-QKZ7+Gce89iow6yG4MkN5W4hLdkGAyNI74b6yAUfugSqPLNSj3YHvVFY3y1acge+\n-H7xDO/owRN1kbz+9VMJZxsxB/oZEyEVAE0szHxXbMBhqOME0Y3O6UBrXr7z6R8NG\n-S20RPet4kxCCTLZOvM/X5FtvimgR2u5qRPHs+zf2VPXIRsJsM3zq9EvmePryGM3r\n-1rEAvYagukuyt68lOWgKP/2wB0/NIFAs69b1QSJS3U4CQVIs2h84Ucvbh9gX9Y0B\n-LbV5mxvDDfC/4Nhf4yMfH/CwZDLOUsaRAjCv/lQuN9mnMz9aYnsPha0AEQEAAYkC\n-HwQYAQoACQUCVPiyeQIbDAAKCRAXVlcy4I5eQec+EACi14L8Vp7tw3tDm/Lrb9fM\n-LHfoOnZiDCGaXhiXqckbTSogp7hU82m1fIy4VwY7DWbs1iIq7QdDJMBuNn174Qd3\n-ZPxHeGwBbR04gEsHkbjXBAA5hMacLvmxYFiPlibz+AO4orUiYu/vlEXhXoFCjSlB\n-pw0kUG8W8yQ/RyE7ryLv5/bT4LkwUWF7/+gdDzLUy1VeaPDKmBupKVSbEACe4QRH\n-dUUqE3suKoJ/GylO2sGtFW8BM7+CffX+nvc8hJWzXdYW5InSh0omYJIypIgnQ1gM\n-MhUdu4gbtYwo44Tlax2mTSg8vSVboYO6pBZVX3IEUnjRHLOCZVZIBFXIFdRrHXO8\n-TTkzx9ZoDmZ/DH+Md1NDnS4QsvFbRO/EeDRQAI4cgGhCc4CTrrJSQv8jtl7x8OTx\n-fnDUbE/n8pLV93j9t1Gd07h0VJSmYj3AR7PiefHS7s2yxS9oOqRayGBqrJFzd2gS\n-+oXvUBC6pUvM68NgNVCKH7HmIM9tFbqgy8kofTsVDkq9TEJRO+X4hn7UDNJhTjVE\n-AVRUdku6CJR6wj3RPCbERSNB8uabuv1lgo41baeepLn+tJNO/4hilJ0zvEoryVnJ\n-ldZ73mHRRRtXoPRXq7OKuDn10AvtYX8y3/q5z6XhLUePFKM91PO8GF0J6bNWrQSq\n-Khvd4+XHE/ecjLOPvLweAg==\n-=+hz7\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "df06e19fa4b109286dbbb7596c86d31fe0f1052f",
        "filename": "contrib/gitian-keys/aschildbach-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/aschildbach-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/aschildbach-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/aschildbach-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "2389d4657fb7f5f225f5d76e08841fd6e21d4be9",
        "filename": "contrib/gitian-keys/bluematt-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/bluematt-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/bluematt-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/bluematt-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "f00dc729d57a2e7b7848324177c605dac9dc8e45",
        "filename": "contrib/gitian-keys/btcdrak-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/btcdrak-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/btcdrak-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/btcdrak-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "928a74b3155da22877d1b6ad32fa2a7cb745e0ba",
        "filename": "contrib/gitian-keys/cdecker-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/cdecker-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/cdecker-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/cdecker-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "71a42e514881bc6383531ea2c82c93998453245e",
        "filename": "contrib/gitian-keys/centaur1-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/centaur1-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/centaur1-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/centaur1-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,30 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.12 (GNU/Linux)\n-\n-mQENBFTjy20BCAC7q/tpPQ9tdEALpDqe8kpVAT5ysOJDLDeFEE1J5O8NuDFuibiN\n-XYkb2nAt4Vdr23in9z0LAiTSgr7znndnab/rOSn6pXbXQfLTHrSnAeClTHVQVPSq\n-m5kNg1vWvNxFtIpZ/fGsc6LLmIHxdgeLn+NOpvNx7RzF/N5ctX51vMxMUeDq3daZ\n-tLneJVRj5tXHRJcjW62cyiNFasYAZ3JC8wjwzr0SOndc7kygbEVCTWNkTAGd1Lax\n-KSJW6TjhBPK7j+RljS5nfx/Tf+OG4AoA7/53593YL7Shfx8rwWVIeF4nS6efFnuf\n-eIj+aS5haGyFvNgw8DE7QUCrPiUxeA8wuXu7ABEBAAG0H2NlbnRhdXIgPGNlbnRh\n-dXJAcGhvbmVib29rLmNvbT6JATgEEwECACIFAlTjy20CGwMGCwkIBwMCBhUIAgkK\n-CwQWAgMBAh4BAheAAAoJEP+V+qlxaXQF8r4IAKnE8D9AOTdM/YvYxpCeI6ndEUUs\n-8NcotpbIBJ67vr1Dsot7Ee0PrmIYOiInA+T81lPUDecJYrnemVefhquiyJ5VJ4/d\n-z2zUKBfxjeOsj/PHgcowVxMco8fNEWQa2fZX6X8RVADIsUnIIwpRFVUcbssK/3xJ\n-k46vjWwYNQywht/ZgFBesOgywyz5GozmwrK6TixJxKk8M69GFz2fHhJjp1bxDZuk\n-Rs3YmWeOcCasoJ6GbvIboKQSPHGyEOCqIuiBL63YMa0n1FU0ooDteNZ04eRinIhc\n-fo9JC66fQrUFn8CmmRTtdZOrZ/efYjQtfLAunCkzSM3p6DE9u4Y7d8E5Ar65AQ0E\n-VOPLbQEIANhxtouZuQmw+k89toBWXw75s+csxKHKZuhw8QntaFyFYq3IOnIeV1sK\n-PRENkWsqDInjEM8k9eZ6pnS11EQ1rrFffss+mprTbL3I4S489tJETYZKHrmmox7h\n-ustRi5eXBEmGeKW0mqpb/9r4okpTaIfs+EJ4C9jj0ghWkqU0acyzanJiUY/0R46F\n-vPfGfHnhZ5TAl3eiL0H2JkF6taG8K1XOLemahdZHE9wJh0ZFWnDDkA1l6j2rtYga\n-jEi/ucOp5GkmumxbFiVgponDBqBpsscRrCV6SbZs9gz3dQNgqe5A3CKGZRuVCY6s\n-djRJelgqCF5+dV0fAT0oF3C/3E5KAgcAEQEAAYkBHwQYAQIACQUCVOPLbQIbDAAK\n-CRD/lfqpcWl0BUSxCACjEFwQSHcfZINWD+KdNMayxyHQlBwsEDX+xQkgnn+/Q3hW\n-9VI3SSSfFV3ustlUa3IaNHwuWzsrSqG6mLG47LAQ6vPAWVh723gVCpyJf42Oms/e\n-qeyn0f/PT/6RuNMXQeHbfddmRp4PFjyKOms5Bmf3oi4t4JSvOS4yABBBKzhDQYC9\n-e+qv6Y1sDYpSiCxstQLzIHKiB5bfZ8Szfk09EyyLdqLGkiB0MFhHoXWwQxKiLVc+\n-xNFj2a/jw0rQVgN5DZgHBWU5WqvS5CWIczi+2S9MFI26iBhCn3urZToaaQ/DObqC\n-qmekFrJ/GOj5vB1Mm014lWjG2X3EovLZ1XkgWI7W\n-=vtNZ\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "6b0bd240ba4cf8df485a8caa689717a12ef6b3c8",
        "filename": "contrib/gitian-keys/cfields-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/cfields-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/cfields-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/cfields-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,52 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.12 (GNU/Linux)\n-\n-mQINBFOHTh4BEADdKsRvmNhX+B+bcPsgMkp8ztwJA5g/rmrOlHQpKOOf4P2tAr6w\n-FmXCChWF9Iq3pDFQ0t0iq5rgisFPyrGVT/VToMmH+/PSLTyIdAlgkRYDMAPsMAFV\n-MaADH4yiAgJ3cdXtysjaNQV5O25ypqq6/obUjZJD5Enn6b/UgHe2+7LTmTNsskOx\n-5s/WPPht79EY1kM4JQfmDx68CsmqeSAlT6yeO3RQcLn/l46cfXiwzMO4h1hsZS1r\n-pgciRp0EHK9uAjF2rjqt8v4SDxwyTnwfpBBulzvH9mBf+HRXWzoTMR4sC/oOZext\n-hKAH/ex47BxN3HU3ftNhCK2c1xcU1UOGSjbf0RdbwuSCxxa7mktEDumvOxAk9EBB\n-+PDPv7jO1FBK3rsJdscYQIL0AiRyO49VfNLARa34OqUi8pOAxKBQ9plO02W1gp7a\n-DVBPI05TZ46Y8dTR2Bc1raAgOyxnXM7jfiQG2gSULiKAJAI4HwOiodaiiHAxDaIo\n-a3mtsmfN25TZUQuA0I0BvHbJvLRlVnyZm3XVOcwReKJpZJV4qRhd3XNrERZdz6ZK\n-cAZnyC/X+Uzo4HfnVSsJk1GpIa4seYyrVCFfHMiAA6SkgAUFbV26KCOv4rNR2GlV\n-l2fVhu1RKOEUJ8nRcEqf93SehRVYdI67LepIPgmIwi0KG4HhoTbIHDAKWQARAQAB\n-tCtDb3J5IEZpZWxkcyA8Y2ZpZWxkc0BiaXRjb2luZm91bmRhdGlvbi5vcmc+iQI4\n-BBMBAgAiBQJTh04eAhsDBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRAcJJH/\n-6w73cBTiEADIGZSueBFmaOTJCgasKGguHns/n8P94EQBZr07rrgN99Rzp85WvDUN\n-Qa72wj3GNcAffN7aZlIWv4g+fjyr9AzHekjI/7iwwSYIfjfTR/xRUW7czRfKAOrK\n-iwpEzgv440i7PBvkS/AhNdUNkm+cJvaQUej/F2/O52qDLEpHuzvjAUUWlSeF9/oO\n-AjM9dfC24L5k5cVwQvH9noxk3EyuE7BuiGE5a+kKiORrtxiHeUG6GYQxuqrPucLU\n-fI67ETyXa0YSpYm5/O65BKMTMpmkMvv1JC2kqqsYTrO5p158CrKzq2xvpuG4ABsb\n-9KwICUGW31Ndr6TXwQJFa1b7VK4G1g6M1DFkVTOLJnEyOwgYxsXrV5QFpzpAOAji\n-6KcxNGeow1avAFYbqjjLgu9UNuq6b8du13hjkQxVs2NAP1Kd/u2ADwxQHMhZGVEC\n-9LIcLVSP9ShY6fR8m6fwSlJfpiV81uLNVD8KIyvp+pYTQ/FnxoPhPIwalYquBZKi\n-0u38igW75IzZ0fYvJgTumE/8ofSVkutVtrQb21eJclVrJGMNweTlJcJhAWdKkjDC\n-e6mSj8GItKV1ef+eusXSzs/wPyTaqgkELvvAOZdwUq3kobQErE5HOuPEOvcwuY96\n-DcxLexirCGW5wCUq7Db0c0dUjQwzzb5OTW2jdnPVR0qxi29TnOJ2aLkCDQRTh04e\n-ARAAuJKpI6NTCQrjEqe9AYywN8676+fPS5bqXkyb/iub6MXeQdwpH0K42lXAaYMq\n-ow/0aLlvGWCHuJJGozoOWpTzQ+VPbhpdARoLCop5fYTpy8Q17ubLeeODDtr6jtDN\n-lmg+9PBIErIVUnUS2wNZuJRVsfwlLaU3T2v8kQnQ6AEbl/QwyWW9nB8rAWBu6Hvs\n-VdtcBmtHSr9xAGBGfW6rSVhTitikR4lWJPdNJxI3pLaswpLIUIQ1rssKO4glljcp\n-C6nhMvRkDLvDFvDP9QnmwY/A4ch5S6ANPrhOjQuu9njjQ+/ImrJTjAXqHwg5KdTc\n-NKxufgvi9elOQ422o0No3yKdRoRA4kdcUmqA9gNZDyX0ZTd17aNqc42Zt3aYLJ11\n-bLZZp0qnfhkmhbsBZZtaLNkuF+RGPWysxY7KPMm+nHn6f3Wpr18E+T02wi02r4nS\n-HOQI+gppDqy3Vq3ZZNoUZynctiLZVHkqi+WYXqfD2tEn8UJKpht7jrZlNgkHFgT7\n-T0/U4+JmaQ/HltE+IexAIH0GP0Jt6hmRoZimdoy8Q8NY5t/fn9CQNJm5InrHvooN\n-aFmZMvzGTGiTqBqnA/7k9FCUEG98LK11MsIssY8YE/F6HD69R3ISyRvhUbpFvhD8\n-c6zOkEKngTWvyRevrDrDz2yoZ1+T1X350+92rbEc/8WyutcAEQEAAYkCHwQYAQIA\n-CQUCU4dOHgIbDAAKCRAcJJH/6w73cAakEACv4EUEjtFjqnGB0Lru5FKs1obWcf37\n-c4a5yYvOw58dkEZ9hsq34qWGLT128n6R24KEG+3O4CbplAD5Kt2eAPracbPHMAn8\n-TGmC+KjiGlBR5xCY9dD0fn5EbRWOa+Fdcj1DpneaqMl9vLnBbqGp7pa/MwSOc+FB\n-0Ms2rcGJJMNHgITfP22eCf6pvf/xq7kKbUJ3Kjqdc2hWlRMjC/OOeITdrgycfDk/\n-AOzLNqk5q7bYOxna6rWDLGSkCATyQKaBTVK7wRd1VrIhI4vfFqy+BWYXyXJ0pxjS\n-eaCDwbWHX/KW+0qLsmHxFMAyHJPjs8LEwK/DRbmWhe1HzPcBKmpyjqlkuxPjAdSl\n-hP4+IBvVNLf2Kh3uFHehk9A6oCYZGe3lLfQnOxIantXF7IROTmiZZsb+08w6cIXE\n-+r6kWG6vP2aCVtzYNfY+2p5xfg3yMxcxENJki1WSCOq6WVf9IWFzSJu+0+eazD3L\n-3QpZoSX5VvT6x05C0Ay1ert0Q5MyF84Eh8mDqL4PhpWtQhZMp8SG4jqFVgrhM4sl\n-vWGYXGns4tbnNPiiksjBD8TTvG3+mt48sNJIpHThjdWJSZjllYG7jV8oi7HrX8M2\n-LOwWWLYxHkqi9wpmrWHSmniex6ABozcqrb+EgSMnHuSd7glmOJxHToJIudJbKG5D\n-MrD0ofsytfy1LQ==\n-=DE4h\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "71898127ba0d6c9976ab7225d8c71ffc6380b0a2",
        "filename": "contrib/gitian-keys/devrandom-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/devrandom-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/devrandom-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/devrandom-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "9d3f060627ee9cb4143e3b8945a261e90c39ba13",
        "filename": "contrib/gitian-keys/erkmos.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/erkmos.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/erkmos.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/erkmos.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "9c03ff45226c5629d24e5f9925da7210df0760a5",
        "filename": "contrib/gitian-keys/fanquake-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 63,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/fanquake-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/fanquake-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/fanquake-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,63 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG/MacGPG2 v2.0.26\n-\n-mQINBFFlV7oBEAC3dRAS7gSWQ1fV4JySD0HMBOtY+Y2oCX8vEuTI4atGcxbwXr4/\n-OElRYhDK6Zirk8rMoKPxmr8OVek5LNnY3gcDffco6NXmZ+wTstQm6oqUxFfgzznG\n-X/ExEVuCqiaPAwdWSKn9tC1GuOqRFcD+p2zmxw5mNH5XdsqaPSEGsKESY1IK+dMv\n-K+YUrfrtexZyb66wCtupYziEeag6iEK/i2x2wewOji6IvtI+wB5FO+YMXw+LKucw\n-PoHUOxjoz6YX3s04UxFaZo4R8x6J9XnJBSB2E5kfsSAzz3xR+zuapXY6H6mo/grq\n-nr3c6ACcbAHnMWwQLYvWzde6iwswhyl0whebsajJH7Rd3G4c1U3L/oj4RwUFmZYU\n-5Prs+Q5PepKAJfBeWCXZtUY2BNFCFj7b2H2NXYFR92Oc2GtoHAYACNeP070I9d3m\n-IeuYhOrOckkunwaijUczq4rb3n3Vaq6YrdwZIzs8fALwc9Th98jj2dCUq0fljpSh\n-UQFnPG83UsNkeWzUSgw+lBeEQqgOqUQQ293MbgRg0mJ8q677Iv+WaFqPKZzXxkwT\n-QCCXhjcBmUKgXIHLFcbfmkR8pCcCToWXBD8CU441cBsootDD7SanPHbpcwZjt74x\n-uLrVoCIyaju0T1jSrsPnm2A/8VkWLSCh1WRAlbjvMr7DwizGnRtzTiB6HQARAQAB\n-tC9NaWNoYWVsIEZvcmQgKGJpdGNvaW4tb3RjKSA8ZmFucXVha2VAZ21haWwuY29t\n-PokCNwQTAQoAIQUCUWVXugIbLwULCQgHAwUVCgkICwUWAgMBAAIeAQIXgAAKCRCU\n-TTX5rD23agJgEAC0ouDjufjCMHL4DkaVkOnFbHzP+nR2Mq7pcjdiPNIt9tj8B6cI\n-PRh/E+tt2iEJJ4lzlfj0uEqjqexmSBaMgY+pFb6ESg42EPQjRQ95oBoyZfp+uL/0\n-KC3+Hh+EgmZGIFPZy2HneVfusiBUz2/YTOoqFkzmHalJe9Yvl2+dO0SUC7i6TUdJ\n-+ugSr/91hkjQC52LXgHzurH4zOz7ZjzRtZgUIG3oOx8mtEDf46eJ0IUsr+tWJqOp\n-ce5xFh6nkKfS92B7YjGJ4YrkBHC7F9vmbrtIeuWiaxGzVqhHFmLvQe+4xyOpRgHM\n-kcyD5uJNmSMO9gT3udut4hd0yUKg5rdqaUzqsvv19eNL/pZ7aBK2aDAK/yAi1T7X\n-/nrhBJAU49zg1JRS6atRnhKSyd7wRSwVPJAXfVuelHsUgenSdLmSBxRha+9mL6Lb\n-bLK/Dij/0r2fyhBJx4pV6V1n4BpHjv5ivkpgCvOupx8wx3PIxZq/rx+hK+ZBe2EQ\n-7vq8rmLfBkSavHWyNxXEKWQed+mFS3d+Qsoy90bi7gQygIYNZOIBYwsy+qjCZ3om\n-LwkzRjypH23ps7WmiaoenOaCjRYooNL4qtQwNVaDGYwvbMnXJ8Vb4/2j/Riz7+Ui\n-BBVww+Wd72Fml/OFPDFep6HG/PuwFB9m5hmfSzrA01TIdjcWljtTDneufbkCDQRR\n-ZVe6ARAAvi1IAxn9xKQCCqhsoKOiXNbpnmf6lYnoEwGtgI+0a0YQwtzm39P5T8P0\n-esZ65/Re6jCCHLc23/urFPfW9VfrKPmNJncyzlx7OopJ7G1MWdRLEUzwqSaglC6x\n-Zb4r1xR6eq2lBX6CAa5Q+AuAqkoGCEiYBpTyKij4sXE0c+Y9nIDIZhru7EnZvpL3\n-SQvxzFryQLbWCGri0x9GKXZ2ZcDM7jRi/P+iX6yX6sVvOvyKz6NW2BI5OmpI1JbJ\n-3fIXt/R6Wl2xpAFL/pxtYTYbfL6277HWtLDTqIkkRFKh64JdkH8n4G4m6VNUtGEu\n-qP3SxtyShauxY44WzR0YX4rag6tU2Hks6h1JmyF8aQTBAkdP7UrQ0oxZ8f+iG9n6\n-3GtTxgw2NyrqVMx3kBLm8DipyslbA2wCeZLrW6Co0j3pebJsDrMP/3zcmbJqRSLq\n-qnkcxA4gn5j/N0oe8t26Y2WjovndhoR0QQxw8D/BKoMXbl0lvvRAtcnWtyG0COut\n-AGB2PUbGdAX2Ky+uYKrG4uhu1edfV8JZVvB7NIQGzM2P8F9PrDRz7EtG6z7ky/pq\n-HQwRbqwLWGs4QpQmHZchFmXH7pHmLC8i29W+xYhdeUstvx7oESbunICGrPjJOShJ\n-G4191Zg0m/M6jeWV/v+piUXe3YVrgs42UWFusm5ZIduPUfgqUtkAEQEAAYkEPgQY\n-AQoACQUCUWVXugIbLgIpCRCUTTX5rD23asFdIAQZAQoABgUCUWVXugAKCRAu659c\n-wJUmwaduEACCiiRpBeKF5fSaM0cTb97hAHVQJL9Wk3xvA49YuROsSwtCzq9v+js5\n-f/fE+QV/dIQUNwifEPQk8MqUVKpe1lIXwRp23GinzDAnOhfWnECqrMdR0dP99D49\n-Zb7Dd4LDvP9c0mYtnX/78qQilxWmXhzDXcunnPsfCqsrduk9hMwkjmIrWFeSWSAg\n-BEJDuZ4WLuqjni1udth0iZtZYrDaDgX/RWcTFW8QCc5hLsCRcInAxb75AWfWq6i/\n-s3Ibg5tGm4+UfqGbFPuNyy6ow3ggqkovBp6ABMxe8dAYVXSmM2tKWZXBb3L6eho8\n-QKKzyoezqpbQ2YUaYZ8XAdLuumXCtAHKP3/DI1JBefE0mxi1CXjdLK9sE5OO5KNt\n-FXR8Dnot5C4BHrcaF6Iq2sqbhPxnhcDrEwv2mUgruD7n04LKIztAG0A35rcu6A2i\n-IUq/PsXjS/5rX/p4CeYvnTTspXkhXgkvfhWz1cISXyfcNTWBKwOsLW4lY8bi05cv\n-4Axl88tTg2dNYXIxSK7Jtu1YCEsZ8uaT3AAiTp1sKAOcRX8hIOTmPPxMxbIm8yg1\n-jl71ovsV5rAyuVTUouFnljXyuLWXLotUOkmC6DjJUuRaxzt23/eByJ45x94T/A2U\n-iT1oU+voigQGARrDkApXlgSI4oekg3Zgq57y6toV9F7o9A1PMtBq3AvDD/0as1K0\n-wCRZIXinSwW2F6tFnVV+z+vvE0i54yHaskkuJYZRSQ/yJR1VgmW/BtAr7ooXF7l+\n-9g7XOH7D8T28h+m4ABLN5ZDOxfTMZuV5Y4MnELh4dlBIfKGG2kjmW8+y/PUqMMGE\n-BYRmGOD1qtWvFYoZ2ss5yrlvfenRRhQbIYSRz/YiT8OTogaNcYNpArUwT4z+05af\n-kdxx0AaqauHqKRo/XTO5GIZQ6NbtPH6G++2Ie+oP8AyBWEpL3rvjZpzn7jxTBXMc\n-MOMmhnb0Go4hD+BSphgDTZOgMLOLcorjb1Ct2VnajxPZD0aTB13SCgZjJhs9j3on\n-EoI3gTHkRgiBjMBNtw7iaAumIRgrDwGzyuIL6bbyfDnbE02zxCqkYP6P0u48FGLs\n-E4U60GrYSlFxa1MexF+HIPgqWsTOv4D2zXEJYvm1XEu1VOGQUkw7J5RFTDxHgkbh\n-qvmkZ492iW2IC4L9hSdSqiZ5LhD2JwpgrMt8vrCzVitkjYQnXJ6WbWYfCybPsmLb\n-mfQ03i9E+a50UC2SGDf8e3oxImAbbXLP/LyI7oczCxyb0EzcQlIIOtBgl3gI6KAh\n-PTRQGeHCzIOSgUf7B0ihY7qiDeR1OshvTY0wdykdS0c+hzwuS5TZvfY4YM7Tssvt\n-XwbdK0Zpx/oDtRHpuDMGKJBV2LWAZYkEbFsmtg==\n-=3o2I\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "f81f44e874707837c13446858db2fed14ad5c501",
        "filename": "contrib/gitian-keys/gavinandresen-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/gavinandresen-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/gavinandresen-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/gavinandresen-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "b8aad7fd88b42770c4aaab3ca97a115694bcb9c7",
        "filename": "contrib/gitian-keys/jl2012-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 105,
        "changes": 105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/jl2012-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/jl2012-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/jl2012-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,105 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Comment: GPGTools - https://gpgtools.org\n-\n-mQINBFYhRd0BEAC+2VU+8+f9RTPLtl0C815oxaOCA9Tle13xNER8NjFrVwIuFQ64\n-nO8Fbhd5KEEARuMS/lc5G6IV0QxBpDGE1sEjPQXrA6UnX8SDkNGhmoAsV07MP2Xl\n-glN9qqYUEoVD7ueh7Cp3A9rFjg7wcMJCPQDP6lZY4cPgYlE1C31TCrEdAsVVTQg+\n-xIYWnhB92VxOJhk0N0h6xtCQ2MOtYDjYcBndQ5iK7L5jy5LI89YVRfbKtWqWZdwR\n-lgj2JCLeXKauXBI1qbedCJrz5e8nXcdqZt9TXSHo/XhNlqvsLiqBq4aXNU3xRkrv\n-fcweZ9jR9DjyQzefYFGaiCk37R4qLbaqQRm0luUizkCegIuTv44e/zig0im8yPAI\n-WtGnmBPSy4MpvvWiVVb+jHikdQG1T7g9kF6gEmj4kj9UseWnasiq+kkSNE67vLxb\n-uZDfA3QhavRMJbCNEY49/IX6urIsiCLFbe6C7JVWvJ7d5l3MAHE8Sut+ytjX7z7O\n-LFt7YD6loxGAdopEUZm50xs8PswKDajlzWGFXjDZdzQA1tb2CpHUtDkAInYDutR4\n-qA29qtxaBswozzUYiDptGSkBqD1Nus7UAJYkwe2EjeszNPhmIAQXGWx2yWplPOJk\n-ZWDuhQtrDXZikl70q0ekIJ7bxkpMO8xUuhsBCS3Wn6GAtySy0XTttmItfQARAQAB\n-tBZqbDIwMTIgPGpsMjAxMkB4YnQuaGs+iQI3BBMBCgAhBQJWIUXdAhsBBQsJCAcD\n-BRUKCQgLBRYCAwEAAh4BAheAAAoJEMUkKhqzk2UXsbIQAJnXDjhEoKSILJRrKbg+\n-MXP3Rhxc/ThXu5C8yhfYqKblqCaNNfEmrlercJKJVMvjY0tVTXYo8BEJmNN7nSNI\n-su8NheJ9vXacN3XrgkMPuFiUyKj9PGpSsM6Q8MjT0Bzd0pxodk+g0UEjyMktfu/3\n-TqLsnoFPOtIjMOkr/uBzZn5d0AXIZQbAz4Xa2zBW+uR3OSXRRXCRJjCSWGIfDX0Y\n-i/Ea+3Be+y9bMqDa3nPULEkW7+RNuyjLr6QwPZ0/BpTTDcM6Vic2daFPO5B0+o3z\n-PMFmPcEd4nRHTPM9A5SaJtC8MjF/89mjhpxG3v8RqkqCdqdM2cezi/T4YD4jcynE\n-F36Ya3GuuewxEZci/N5ySG5gG8Y+80Wgc1e+sNtvIffHk3Wju2kOvNcBA2TBw36V\n-XCJXHROTA5+Cx4lUxOkQTJoYSVzx852WS6WHeLg1+XnDZvT7ciVIV0ExJQ9C1XOM\n-wjFMRsTWl+vflxmgCeHCIari57Jw3ij7ghRCgeqLp7FIXK5qSI4Tw2eajJpoTKPs\n-wlaO6kvOXtaCDH30FuVhKbPxII01Xi/A2ALtTkpA6mfnf19orQjv+HxX/iwUlpHM\n-UwsuhpZSQYIxIv/BOQnXDfw4TcjnHsqXZbqNzzFEjGurMTlOUX4KeTPscdOLUpnO\n-1FM4JIVybHHfhCH9Mpq+MIwCiQGBBBMBCABrBQJWpym9BYMJZgGAXhSAAAAAABUA\n-QGJsb2NraGFzaEBiaXRjb2luLm9yZzAwMDAwMDAwMDAwMDAwMDAwNWJiZWZkNGM3\n-Mzk5OTE0OGRmZDQ1MjA5ZjA2MTUwMTljMTNjMGVjOWUwYmQ4MzUACgkQf6sRQmfk\n-+gQcZAgApPqnaIIE8Q5sruzua50RFRmmBtQys8sM95ciWYE4QaTXUnlhHl4QR4z/\n-TQTRSBqXpdHQ9HBWrhFb6E0ykDEVx9zdEt0fvtlhHx1ItrZetfiA4PwidnyoDKs/\n-/nt01RGreKSMDGInaQVEQxvEW+A0fwvcCdE8Mh3LcIydohfqUViB0c5zb7rUmize\n-+2Kt4Uth9T+ooo+UE87pHSJcxlcPOv6Dc7KeoUicD8DwWdsT7oxAMk9jj/ut4UNx\n-xOEp9Sa3sFN20tHMqyOZwnl22Py0y4ayJnceawpuka/bx7samg/2uUrO+dNKXObN\n-trebP83+8UFHOo7VGhesuawgwNjWW7kBjQRWIUbHAQwAy6re/3ur/fgNfE9yKivp\n-Bqmjq0eU5l3iT59hvKr7S+6GHUa+YvE9BBsawDSI4UILNQX0YGT1LRa20mC1okBX\n-5SIEpWzoZhybTMVMwS2ZHkUyO6VBAieUVojP3XQHFcDAiBvW7RRhJ2BU+v9DGo88\n-HAYqKEB85P/i/E/a1xUfTWiiIhA8Dd/Hv6pzIG5QvN8XfrMIayLwpOV1G6KvBIJb\n-zyUVUvLyQySiZOyDczrAxzYq7b1qv8xwHDUzyUl6skPqbex1cFWIeiML9EY4DnZ9\n-l3qb31Bhp+EHydv0esclM5XKQriSg/hsnJOLlCS45z/YhqGOCoD8QxXUJ71NhD/H\n-QR/AvGyTDcPr1/U1DJ0lG778wCOEe1Nad0G/8rcpHSY66RZR/Wf318S7uJt0mUw2\n-JMt1BRxfbdgJaleUAqYjNQAMDb8LfPO6jhQnmf0nN99dpdzkwV/drVRcLDEnupDr\n-keBsokcuohzE0gbjUT4cNc0DuUsIELMTApG8KQCgzJy/ABEBAAGJA8QEGAEKAA8C\n-GwIFAlbi67wFCQGu8u4BqcDdIAQZAQoABgUCViFGxwAKCRDunlUgNL4k0qceC/91\n-2ocEDwiu9kpBGCW0HD+VSyMVjLWMiClk+jPngvNEt63ZkYqRiy7fwnPuJrLFlaL0\n-E0JLIweihC5AyPSJT1Q0LnOwbqCHn1s+9RfIodG/v6M48Ez4GffOtmYwW9KqogK7\n-4FwdIx/wOIYDeh4rT7LRaWBNcIXO8J1+v/83u+Vx6TWKZTiZKQMEV8VOJWfSmTCE\n-6HVgUYvLCPB6DI+X4aVead1kayKOSuXlG/l94B5RHlJB/xQXZd1INyrZetTZxYzZ\n-CBhIWaZ/ji5vqFot0xVNYplRkbg1Mc96X+hwee8eiB/ySSWxUV/DDkA5ZzuE8n8R\n-EEjzqazjMNe50P7XKVg/eBE+TpgCDlqv69dqnOF326m6T3+FH/LDOHguQfB7pQKx\n-siviqjO3molBSyMHL39XFWyteVbgbbSaTRkpX//b7dQoFMiVhigcM78qoymBi6yX\n-qwpN13JoNuNJhEOwex5eEEUCVibFReUkBrYoGnWbwuOxiLORx/IbuNYOvsTGYEAJ\n-EMUkKhqzk2UXWScQAIvAgEpQpzuE1CWMBWcM/n4ruUrOVTeo6dYpUGN1LI0758xm\n-4VI47I8wPEy4pAbdPcqoaNnMcA/NpSYa3hV0svQDLqT96qKTrN71N1gNJa+5w+KN\n-rwev8MRpjuze9b4dn3avs4L9f0fkpzjSzezKwVb7loFSZqgKAaI0aSoOUTec9+OU\n-5ymgkYPEEF12ydkyMzLwyKrtEnIqgwQpjYTN/3P1x7Gkhv+E8Lz06TSga84yVy5I\n-5gO1Hklc3MW0J9jPJe3uALUtEh49KxCE2rdbIX7YbkxWaHHfK98Mu998IXr/4eUe\n-Zhf2CLC2cuuYbk1/rOcxPmeIJKa6S5PlWOf3Y2yLRO0VKcjD5pcGxiImoDVXC4VM\n-hztCVLddjU70c1ktSIBQBu9gkpPcECrzjYtpeAavOUgmpP/zQ8X2NGp6+5n9Wwii\n-tAgByNCg0s+PqcAZxup34b3ZY/t475tDlAmIOovH14Aa8g+0Ketj++9rPpmg9kGs\n-sGmn4mVItClaA7L9vZQQFnSxjyfICKsSxBhqded0lsinlzBfXDEh3N6fEXh81/Gg\n-zLUmTlkhcGaFXplYqrUIlkdO9PD4R2h5P6laLhK2dAf7oKavWHZQp02Yb5nVBiDc\n-KiVWKBP4nuTkWZCG5R966wpR1IOQQ3LykSd5SstcZX6iTpv4NZpCxI4CXpaCuQGN\n-BFYhSHABDADHaEJVygBdwU81c4YynyTOnWTZX+BR3EvRW51GcnfvjqkqgmlWNLET\n-JkswQ8+s0mjKGVnz4dkdr4cUbVegj/St7wzoO+m5mYIDMJf1j83Vo6lTo9FJFzbc\n-HrYC9RS7NkQmD7qzJz4KY/h0n5szFIC/JpYECBNzYrJQc8m2kZiSlyUQJve5/I5J\n-iI6QnM0x4kixNe32GITmKw9s3E2iRf6yXVlsrPouNS33lPXKtvmO1ae7R+G8Ve+D\n-JDv+TLxccy2iU9wuz4I3k20+rlmEwk17feDhfleh5Q+qjI4vkaNcXFa5coZE0HyW\n-SwAtLPSOv2vWkuFeYncXRyzg/CvKR57i9wnqMzNTMt3bHY2HezE13bHln5B/Jqr4\n-ihhFQBqPG+UZlGYRfAI60PLh2yftX5xkm/POiLgEKF76/yIZI8wcPzzurAhFaZBp\n-8/MUv2ZJ/OUT4rdEVV+6XnrijNqVBU8mf8BML5CvjyhsU69yf1mvpiLQr34FNEcn\n-JekDGPIk97cAEQEAAYkCJQQYAQoADwIbDAUCVuLr0AUJAa7xWwAKCRDFJCoas5Nl\n-F8NMD/4hRoOKENEq940Z0iJg0TDvRvRnaIYsbneRQ3yg1DGVIQ+4RHmzQdpN9MW0\n-5RTRLqJsW25ydWwh7y0O/oBRjaoDRAkMSIyOo/Fy+E9WWBmAwzeYCi91MyfetKIO\n-ocrXxpXXKnotAFDOgWGF8K+LlTDH/biOrd8ftgOVJWhz3X04ma7xvT2tQTqfFdbt\n-EivA+jFExq3No0Iq+Ctt/e0H2d9np62SeKBVdpbx9xAc2tPKKDSl+FyB7lj5CK5/\n-FKhotl2bJhVXET48P6e+bFVwfRO7o48zuK5CJVbbdjhavQGhQoxfedW2dn9y7QoM\n-qayUuVIhULE/k+y3jsJBUT7p567nSdUGbc3uKt1sfPKYTdsFbHiTRltXmsIiv4bG\n-PslbXSvOQblFOXWrAE22CdKmGzhlEiFnbviZCCl0BFf4CwEVBJ3p9Lcoir1l9Aty\n-HIIFI3z1mmTz4F9BMbe6saNwBzO+Kh4+US5NV/hqvyz0aOLltb6KfI8WF8kOa1Cx\n-Djz/DTHnvMWO/dIOJuKsThfuxZZq3R1w3O36RB8XzDT/8NV86gfQwN07NWz1rdy4\n-60fK36EjOJDqm/434/BDzWh8TqmnSamENxBTbICmWOj/25M26tA2S9zcPLJHTGMA\n-3yL3QlBtjWY2uNqr51cnZHgPKxBWzaRvcrZ+lUq5EG+F4J7q5rkBjQRWIUitAQwA\n-5A2AhW9DFxVsM105WEErD2NuM2rvtq7dTwArBEi2KdWkSGQvCE9xgyH8u5AEWxj8\n-XXHE/rfunW0d9oF7Z9FbOuV+1HQOAj5hQQWLWHERwZ4gOAqG8ZKAbuwTlqitdiXE\n-PZiJYZSq0NXtngyeTx7XqzQSatfFOIQLzIiwPQXX0Tt+JB3B2SN/D2NP7rubzfS2\n-Bg0ErhV20fPDl8YloEJFfj9lpF0ZJnJ5hXYP9Fl4MoPkyBkGPrJPooZ4FqUFHDiw\n-mttzP1BzFlwpAPGpI0NrkBdBlfFAtvhjreeB5Z4VYwt1xqoXgI+jYXAxoMl+rtkK\n-FdWaoT7wHwqDBeBWYXoyXA2dYIY8Ux1jeDBnREck7vaXhln6zXqMAQowE+F9OQnr\n-Wgf/LoOn5MYxsBDY9mPAO8urxUDE+Dq43JBXlS+jybMNZWdtkaBrIde7dw9IT8Fn\n-p8pG78DmgPxmRFH9QoypTqMfB+x7ZuB0fk1ud4ut33qLo78BWZoW0H++13CbSmrZ\n-ABEBAAGJAiUEGAEKAA8CGyAFAlbi690FCQGu8SoACgkQxSQqGrOTZRcNQBAAmeL1\n-8Wr7vuvL5dySoYmWqHFvM8gRUwIGza5c3D29NYZJcPJRRkdGCV2IXEuUSOLtnjAN\n-kTM1TVMMnetqNR8Uryr7z3XjqYLnVwGqOPnFnlkE2zS3pG8AGG6OxxBhuEMvkwcd\n-1s3tWUlJYRWi1XhEjVZ5Km2pHsVxvoXeJCUVsa8nSXzqF8gOLm409NFMiKkp8QOG\n-heEV4yWrHkySi1fVfOdrHfBzu2lUmHGgSbmJIpLcK+cL3TjpJ+DkSNbniI13I/Eb\n-PO4Uai4a3QYz6sspZ7UzF/pjY5v6WpWXiVB5PP2Y5BrMUgWRlFxPYTc3KiIHUYVi\n-IjVtSOsVaRCHL/SYRq/qHs63XxlxKIhhilbR4OO+CvJ6N/vEpSbx69SqlxgDArZy\n-g3QQqerlLGpSFim9iWk3QBGWtQ96Ek6rjLLOn7b34I6bxXtfcOEo7gl0Y1TFkfOp\n-nsXAcRLrrXCpAhgC/vIQRTMKEcC18kj/vY144DwefzYCBhbI/rCSohAq8a/zhq2T\n-E+xlCYy931HWlUAGx/hms/0q+KQ712Zgk4XxXEx4RZiv3zl9Uph6c7SXxAMb8o2v\n-PzAxd3ShNOnng9hAl8zk5O1RZPa5u51ppkO1FsJ9zjb2Kvdg4ZEBtK8jETv9ckuq\n-yj9YmZZSRRQ2dujg81sLQ9CrO7WB3IGpwh+4lHQ=\n-=1irw\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "3831eaea114f77f30f9638e6772f446055f3c68d",
        "filename": "contrib/gitian-keys/jonasschnelli-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 110,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/jonasschnelli-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/jonasschnelli-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/jonasschnelli-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,110 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\r\n-Version: GnuPG v1\r\n-\r\n-mQINBFSBrDIBEACrZEqObmtlTf7fOKttE39qqisFfMg0VeEPS37uETMGYsgTEvzv\r\n-kfMsXCGsGFLQ78XsHqUeW4uQrtpJH3nUP/Sua1Q12K3lNKTSvVQyEpKoPJwXZahp\r\n-jm6GA1ApDxZ/KlmxyobR3X0urnMYNZobl5IKJXlxoKGl4OkGNeFlh42pCXZDnR9n\r\n-1Y17ZcDdybkWcqPbDAz8ilOQcFMhDBFg3Di3IVMAaDZP1uwWFb5vx60YB5NhkOpF\r\n-nZUH09NJx/7u7QdGPSHOdzW4Xo1HUYtYNDkdOvgZtxpbYEFIaBtVBURMUGwAFagA\r\n-3a6qaGnCBWEQftyISLiqcKqKqXudOg/cLa1CAiQFkz+IBhY9BCGDRnB8Dcae6EGI\r\n-Djt2lqZTuMSiheTWeNFMGBioHfPLedcwae8KflrIBC+hNS4ay6HJdIc03WMQ4JKK\r\n-At8Y8CRLym30/RlqZ2v8CHYqg9Ddlz3+g5JkRKaJTQwFRcX46/tAX+I2NZ8Ra1ea\r\n-rF5cRHuCk/oaw5ZXYhj4zJO74rjAoSewAARlrTMSM541atJU1u6aWT7rNiF9QKIj\r\n-i8vEufUxN0YfdmvDD3OXwbO7GnfWXS4sPklFIRACp+Y4ib+QnRY0/qGE0yh3RAG4\r\n-r/dyIQ1m3z7Pc9eyPKAhE4S7SxAwoR4yOqQ5NAfZXgFuqWzkW51gkQgGzQARAQAB\r\n-tCtKb25hcyBTY2huZWxsaSA8am9uYXMuc2NobmVsbGlAaW5jbHVkZTcuY2g+iQI+\r\n-BBMBAgAoBQJUgawyAhsDBQkDwmcABgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAK\r\n-CRAicOMMUic59iKUD/93DF04C3lptLjtrhyd4wgpBMJV8yzagGyG+Wk0UR7elQw4\r\n-F1MIvEtIFpuGrcnNfKcqeGGmnnKFTeBjkmgcYvej2fW9XlRA1HgIS0t0ttDv8uVX\r\n-vy1xVj1qISB+17EiftxJjCOl2pZFEVpLQ7sSgqnVRMsCS45ag6rioGxtq1j3ifQN\r\n-TENnJWhzOXvwzZhLgsyWLjeYvTDbzfAQLpZFowAMibOwu6ObCkn4dhaW+lI3AnPu\r\n-76pLsrOljqGvXes6o2d28vjqMrlmsz2xVEJ4bnRPUbLv3bUl6t+19XpiMj94ZCZX\r\n-/kvepzSNAs+aYvoldFn0/8haU5wIDXO/zgXSlm4KnhaDf1zutVq/Ng6TGb66mZKc\r\n-RoiGHnnuQ45e7VIXRfOmgbbUTUIg+h4YvgCTR8dMoOWpd5AL8lZ3bjYVi1yFd+p1\r\n-dPfrrnN9Yd5ojoZBSrV2j1wLgv7jRIeXL5dWzeAs/JBzltAHWO+9O6NsYXtRTUky\r\n-eQa+oBKG1OsEXf63k8PgQf6Nw+di3gy23tKEiCz8lbA2MtekxaZ9Xu9CSEEPIH7t\r\n-Aoki6Ey6rD1NUZQPuxQ3aCUTRE2JK4b6nPuAsOEv+cZL0VxNENpbedtGPh4aAA8U\r\n-9yvBykWIjRS95k4NDVKIdzhd1geJsUJZq4BKh9Atf/kI+Gb0sqq2Lrf8a1pNX7kC\r\n-DQRUgawyARAAwLiAxqv7PsdtJg8tBO+dAnTYtAtBHn8g5GlXtorymB9Aqy0Nzpd1\r\n-de27dYlBdlWdHZavMh27JieZ4rk++74SMAo0PACp6FDnfuu2PmJZTr/Bzvld+B9+\r\n-lOZrMWwDIVSW1npJGUjF1rjgPjvmcGo/IreVFpJ0A33J1p/qsYZsLTXTDDoz0fq8\r\n-3XvwTlkTOkuk6Z6LPo2feDHYydUmdG+9MrgIMpidvywRHRC8nnkix/aX0S72kZuR\r\n-qvWwSVs229gtfuWHfvmaQgbugZMqANla3ZYdzExhIIizu7qQPXSYfhsCoywWE2So\r\n-9QXZIiVJge2P/hUr2gTiRNTfmhupDeqb1E+i7x9txTrNc40gbTu3qs3/fjKIWrXw\r\n-Dy5tuZsviLQnEQtY4sEnHl7oL1crOuIHjZfgZfoZ5CK+jqb2b0B9uIm/SMl6Kt8S\r\n-m6ZtK0QTjtUSIputPEYdLycdOpWDDtAHrWkTlRzKJoLG4hsywBAgQe7n9nLf7Zmi\r\n-DhXyXRKyJuuuG5mt7UZhjW95loFFVcGXHIxNmxVqNb1YaG3kEa9PdQMoOc0hRZb9\r\n-77yaGfpLV8Vo4CB1eAuVU0UdNRyChrZK5dKXBN/0uZq5HgpI1GiK/C3YUuQI3t9p\r\n-zeJYD3jPGYCI9xxLaqt7whoOILPmZ1KW2UfXTvcMgBUMkFpZrqhTGscAEQEAAYkC\r\n-JQQYAQIADwUCVIGsMgIbDAUJA8JnAAAKCRAicOMMUic59oqeD/9SvgUx60AhyCPl\r\n-1G64eII9M2LU4vmHj8g6wnjh3xaWXvlQU1xnz/5I0XrlbHm31ExEHK+7Zla4AQ/P\r\n-OrJhMNZh9oes3iOh+pAEn/vtixddM/oiivLBxMcIzq31PS8lZWrAjqOX/FFYa8GM\r\n-NZI0bNWu92J7cL/bRVwsIVUXh2DkUu7wXwicNERYkKDTBaK7FE06C/hIGTwmENlR\r\n-b1+H7e00nzWqoHyd0fhG7d8RaF2IF95YH5+r+aS20cHVCTI/0Z32FmlnCA6QlkZx\r\n-JZiXKssHLpegeegAOOR3t2keB5rN4J/8KSzIEWUG5sjXkshMIM7w1a6urc/iE9PW\r\n-YGgbG7Wt1AcEO5cnU72DzoENrOxRKdFLZWemLbncLPTY2GERPutJgDSYvaxmwnQy\r\n-eGsnRIOmAMgN9+8NEs9wZnzrYpkvk/Vw1FwNcCCUYb0ZPYoRVRhP2UXYm7OxdKdk\r\n-zPXfS7Uqs9oto1FiD7iomhtBs+RW8ndaO9wHGoCn2/UAD9fxNIkTQvK61amyjGX3\r\n-gdwrOwt73I+wjgt78jmZsKfnPWYnOIUg2/12P4iB6KhWD8MIIeFLl9TFfZ8f06WV\r\n-WIUTcA4cgSYgGOScxB0En+B3LDCkmVabu/JzBedT9N8rXvgdywk2UR4vKqiyJT1O\r\n-9ArEfToN7J0gclhUoadr0im67BGyMZkCDQRVXu6kARAAwR/cg0kJja6u1YToEM+g\r\n-SOOPZK6Bn745y0cvf6+YFVefLcManUCyI+/DWZhO+D/im569MApbTz1qdaLE54Kh\r\n-z2CtOJBlWP8cjlnVZ95hBK+Z9COuk60dXI7DySRn3DVryNpYjRCe+8SBTQJSj8b0\r\n-JEk5VVYPYUOIc3L6g7LBL2/ycxV3LVFTQ/A9LGBev7y2emgC7lqkPPoDU1vJeO1N\r\n-4G0nFsIxuml81pfgi/2aMbGF8l7LVAI8qMc0c4RAjL/yTPzVX5qq5+zAaXMcyhgy\r\n-yqOvlXlCG9aisnmPCEiShxmLvGfGdPmi+apxZNUW3384vVcOxzl1VcU6sVZT30/a\r\n-Jaa8RxZqC6S5kOr7uPO8CD1wB1rXzD8SA4Adcq9SwOkVE7QfnQi6+BIgdrsLKUfg\r\n-2vBjcgA/IsLETlnp2792m3w01OKe2/w9Uq3N45lWVTNVx2UcbWAIz6bwWoMDJ1DN\r\n-B4XQHb5Ag+VI7lIGr45Ep4ohOfIcpBCMa1WVGyTYoQFc66mPZ2MotADOHtgGpm6v\r\n-ZyJEp2qWj0at+tDepf0bFPHmGGhVj+N4HTBWMzsu3sLCAh3QWStr+gkffUl2CsdG\r\n-Y3RL6kVkCCW0o/o+V0mc8ZV8kAtFPyYGllsP9HEvjeXkHg+DAvRFZhSPI1mxGkGg\r\n-gZlEtHqZ9Lofoco9wedCJPEAEQEAAbQlSm9uYXMgU2NobmVsbGkgPGRldkBqb25h\r\n-c3NjaG5lbGxpLmNoPokCPgQTAQIAKAUCVV7upAIbAwUJCWYBgAYLCQgHAwIGFQgC\r\n-CQoLBBYCAwECHgECF4AACgkQKdS8tkFvU+ytjhAAwQqTK7pSjSSK91QZAvsV+CgN\r\n-AzC8AydcdpWAnJpsE+nw76snAexMctDfae9uPSGSVM9PAgouUg2YJxNd9RzPCv7j\r\n-vx3bevO3ArNZxvdKSXffPVzt01j53z99/Ltmev5rpIcNQk2nqL3iZaZ5O7Vxre8k\r\n-H5KxncFCUxlnX/stLz9WOmnIN1X5qVq3lSzh8xvm7DuyOmi1Z94GHCW4BHN6wxtX\r\n-nXqYeI45jPcbuJWC8P8qtNicZ0N2XLjpAoLSvQ68VTrvvLN0X2HT9Ol9y5t7re8J\r\n-PEY52TvrPCLYz4hQD0fPe3w14LkcdbWTjJwQ3Y7KWd67SOn+l8VDPj2jT0yDBDG2\r\n-YazByLqV29SgXm9WsfYXYF4FB9NSApbrAmhTWVa4K4DFXrLvcIpaIR4Ii3JQZDag\r\n-2tO1VTgxF+10S66qrwXwawBbGfDVchWgSi9T1hNn2wgLypsLN1ZDy7ixPCD+SHHd\r\n-xgTN8yv+/WNRNZ+LtUKNCIBHQmUBesNfN+wOrvOoWPAP6XjlUIlA2RIH6zKcNbDb\r\n-a4jjx1ENiHAlapVxzPTQiTfj0TDRXBdjboiswXfkN76upHdgdMdeFz9hiH0PSbxA\r\n-TmlmA7NrsENHLp89SB/gnGT2I/lLP5/DsoN3Qv8GCoy7aUNDT7abi1AeoBVVye2c\r\n-AL3d+hDPgOzJHjf0eJGJAhwEEAECAAYFAlZFyF4ACgkQInDjDFInOfZtGg//f4xQ\r\n-PvS6gQdIosesV458LtIUnrqdPx/8PGnIbkObSzjevEoj3RQ+D7PHvF57lj6m45aB\r\n-Tr6huXC2RQzOIjRXM9dYi6SVZzQ1xnjMep72ylVYawQS3VBeuQbhU2BgYTeLa55+\r\n-0sHBA/hX9ufH7a3UvSTgvssX44SH5mGg2h4I3O+4cNQIDf/G7xkzkJKcQmATRmIR\r\n-10JaaBKtx4JVNVzCWTOpEqW6/QA8X94LapK8Rh/mhKyd38v3CEHI7hH0ex0o2mOF\r\n-kAsPY1vvfxWzGKMolJp1b/1FPcb7Fl+nCoqlfnv0cCnZYsQvYXrOs/1Kj0anv9yR\r\n-iutEp2DyaAnhadadrFpWjXQNUeYtFlJ1aC+6HO//uw2spKFqcQ4tTvu9HgHJO1gn\r\n-GTsmDskwXqHOYNvH9QjtwlhPhOWQdHgLPrWBiUBvkT9H8uoNRGWg0VGA4J51IkRh\r\n-0ZyoLmRgejpj7SOpwLX6gemprn0Z4fgohKyj6z4/Bop2gliXSPB37qdun6M92g8m\r\n-SkxaEXF2ZyIXdeVRT6Xgp+zoGDNbMG3PlhZiFFCvH3Hk8o9zAz/65de6D+14EHYj\r\n-WBRKfu7jaL2RSwUSRwRAAYKwu6kgRy8G7+4SihuSHT2k/90il6iwpzXdyY7qQXWG\r\n-VxfrmGWZLYT0u7d+EZ1pc02UKYCFptlVCIZtaQK5Ag0EVV7upAEQAKpWFoCqFFqQ\r\n-5xH6+TFvbUFWBb1dWy89GMXCkmqAsoy8Ss2Ru8gNuy7Xt4l1dQhVpN0QWiuVGkEO\r\n-f2PmXQhnLquaSz7XLZjjdO5E3kYzcwOpIbb2TCWH4QQtHEotowRslQAXAZ53jN9u\r\n-NIEQHCPPBNocj0CLQmZl+av1MqRJrRcYzgkPIs34mBo6iVoRrD5CkSohbz01BMWJ\r\n-ZLk0E+JvalML7+ttiwu+gI90uRGiKEz5xsDMtyx0mAcAm+/EjcuQbhGrD6p7dLKv\r\n-9nuUU/T743N2LoDTBMzvX/JXjoQ/uS1nzuiJrc/vYHqy9uucgviuYWFH/Q+LhwMr\r\n-6tjJYUiN4JIQ85OLvq6g71RnpWzy3ce25HL1YWbLNuzi8ZKIB/sL4LXG2iTwwSFk\r\n-tVjfAc4zP/VWpRC5VbxG76atRkPLatgA6b2sawgQ6L/7XB5Wd5F0bJc3ndwPBKos\r\n-FFXgzOBgOkI6kYERQo8h2GzWfU8LWxl0a420ZHEfUZoYmitg/evA3v+23FrCMGg6\r\n-2cdNzU5/mqsQ5HWktTQ5BZQZyn5UT3zpNCOVyeZc/ezzGXcWbEXOLQwDcolxjatL\r\n-ED3eNA1OMQD8S++FPPGCukIzCyYiPq49zJCTMCWd3qTt2Bwea9xOQnoetCTU9goX\r\n-/eEGj/1zQDAXCGOVgdd34VrOX4qtpmp3ABEBAAGJAiUEGAECAA8FAlVe7qQCGwwF\r\n-CQlmAYAACgkQKdS8tkFvU+xj8Q//VNzFYM/kyHSa0xio4e8vBZA2vmR8IEUmtOSR\r\n-zr487Z8W1dapGxR7OLQ52oWdRZVpG1B5rCuJtsWbjdY94Y8RpcO6FBemneGebBhu\r\n-UKc60qwEanYnZva9PEFNyBzpj3xk3Ms7K4O2dZTcXPGj+hlep9Tjo09sklqbKfgW\r\n-2fCUu2EKXWwUrnZ2LZtb/Ya8WPCrsbJFk+WbrLhWt7jIsadVl4AfblcgBGb8aN98\r\n-GxnYOh+TGSMJtq1NSfchQwLHrpTPYm4McAwOBBYDdA+ik3//eLbwRiX9szFk658p\r\n-+4LErMBJAKLreSluBkqOG3AzT22Hdffvl8G2U4WhPPG33NzWomb+wKohjjzMVUlx\r\n-YRCO57wkURqEW9/+a4riuBWGQqqRsW1wHEMu1lYdAhLJ5f0s3vO/fVe43ktaXNjW\r\n-6k+mXDlIdKkQgQ736sBk3DAUc+YcmWmStPr1+TtT91eC23GLWP7gVDnNGEOBOscw\r\n-U+m1bEOJN2duAMJSRK7U0r2ipmRKDcwK9XmVpJcTePfB2l+T3RdHEZIOlaTELEX6\r\n-WJfpU4Kc1KJeKdp+l9gf2JD8eOZAlwxA4r2wxyzoCVg1Bk3XiBfoI7Gl78Wysp+/\r\n-ChQcErPJWEUglBfrESpqmjxH/qSy6yjyNmd4Az2ii7IzWILfuheZR4drjHQj6mCA\r\n-S5rowLE=\r\n-=ZVPf\r\n------END PGP PUBLIC KEY BLOCK-----\n\\ No newline at end of file"
      },
      {
        "sha": "88d0de1503bb6a6bed7710b68b5526e85a855812",
        "filename": "contrib/gitian-keys/jtimon-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/jtimon-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/jtimon-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/jtimon-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "593fba1d0915fb8ad7e3c246e14f5dcbf4e5b1de",
        "filename": "contrib/gitian-keys/keys.txt",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/gitian-keys/keys.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/gitian-keys/keys.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/keys.txt?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,30 @@\n+617C90010B3BD370B0AC7D424BB42E31C79111B8 Akira Takizawa\n+E944AE667CF960B1004BC32FCA662BE18B877A60 Andreas Schildbach\n+152812300785C96444D3334D17565732E08E5E41 Andrew Chow\n+912FD3228387123DC97E0E57D5566241A0295FA9 BtcDrak\n+C519EBCF3B926298946783EFF6430754120EC2F4 Christian Decker (cdecker)\n+F20F56EF6A067F70E8A5C99FFF95FAA971697405 centaur\n+C060A6635913D98A3587D7DB1C2491FFEB0EF770 Cory Fields\n+BF6273FAEF7CC0BA1F562E50989F6B3048A116B5 Dev Random\n+9A1689B60D1B3CCE9262307A2F40A9BF167FBA47 Erik Mossberg (erkmos)\n+D35176BE9264832E4ACA8986BF0792FBE95DC863 fivepiece\n+01CDF4627A3B88AAE4A571C87588242FBE38D3A8 Gavin Andresen\n+D3CC177286005BB8FF673294C5242A1AB3936517 jl2012\n+32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC Jonas Schnelli\n+4B4E840451149DD7FB0D633477DFAB5C3108B9A8 Jorge Timon\n+C42AFF7C61B3E44A1454CD3557AF762DB3353322 Karl-Johan Alm (kallewoof)\n+E463A93F5F3117EEDE6C7316BD02942421F4889F Luke Dashjr\n+B8B3F1C0E58C15DB6A81D30C3648A882F4316B9B Marco Falke\n+07DF3E57A548CCFB7530709189BBB8663E2E65CE Matt Corallo (BlueMatt)\n+CA03882CB1FC067B5D3ACFE4D300116E1C875A3D MeshCollider\n+E777299FC265DD04793070EB944D35F9AC3DB76A Michael Ford\n+9692B91BBF0E8D34DFD33B1882C5C009628ECF0C Michagogo\n+77E72E69DA7EE0A148C06B21B34821D4944DE5F7 Nils Schneider\n+D62A803E27E7F43486035ADBBCD04D8E9CCCAC2A Paul Rabahy\n+37EC7D7B0A217CDB4B4E007E7FAB114267E4FA04 Peter Todd\n+D762373D24904A3E42F33B08B9A408E71DAAC974 Pieter Wuille (Location: Leuven, Belgium)\n+133EAC179436F14A5CF1B794860FEB804E669320 Pieter Wuille\n+ED9BDF7AD6A55E232E84524257FF9BDBCC301009 Sjors Provoost\n+AEC1884398647C47413C1C3FB1179EB7347DC10D Warren Togami\n+79D00BAC68B56D422F945A8F8E3A8F3247DBCBBF Willy Ko\n+71A3B16735405025D447E8F274810B012346C9A6 Wladimir J. van der Laan"
      },
      {
        "sha": "559295109d9646f4baa3f2d7c1eb374333899fd9",
        "filename": "contrib/gitian-keys/laanwj-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/laanwj-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/laanwj-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/laanwj-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,28 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: SKS 1.1.0\n-\n-mQENBE5UtMEBCADOUz2i9l/D8xYINCmfUDnxi+DXvX5LmZ39ZdvsoE+ugO0SRRGdIHEFO2is\n-0xezX50wXu9aneb+tEqM0BuiLo6VxaXpxrkxHpr6c4jf37SkE/H0qsi/txEUp7337y3+4HMG\n-lUjiuh802I72p1qusjsKBnmnnR0rwNouTcoDmGUDh7jpKCtzFv+2TR2dRthJn7vmmjq3+bG6\n-PYfqoFY1yHrAGT1lrDBULZsQ/NBLI2+J4oo2LYv3GCq8GNnzrovqvTvui50VSROhLrOe58o2\n-shE+sjQShAy5wYkPt1R1fQnpfx+5vf+TPnkxVwRb3h5GhCp0YL8XC/BXsd5vM4KlVH2rABEB\n-AAG0K1dsYWRpbWlyIEouIHZhbiBkZXIgTGFhbiA8bGFhbndqQGdtYWlsLmNvbT6JATgEEwEC\n-ACIFAk5UtMECGwMGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJEHSBCwEjRsmmy6YIAK09\n-buNXyYQrJBsX16sXxEhx5QPKyF3uHJDFJv66SdnpvIkNoznsaPiRJkbTANop93FZmaGa6wVn\n-zGDiz7jPA8Dpxx5aAYPhIT+zPJAdXWM3wJ/Gio9besRNzniai8Lwi5MZ9R/5yFGBobm6/AcN\n-4sUoqA3NSV2U3I29R0Vwlzo8GVtmyi9ENSi6Oo7AcXNTRt69cxW4nAHkB+amwwDJlcAb31ex\n-bogYXPhScwqQZixRr+JBkKxBjkTXXnQypT4KI5SegYwQVYfyiZmDP7UHKe/u6pSKKbVphLg8\n-xLB5spcXse8/a2+onrbNlw6y8TXiJ++Z54PE7zztWTXf2huakeG5AQ0ETlS0wQEIAMNO3OkP\n-xoPRKWzBLcI7JRITAW+HNaLTq3uN2+4WxA57DEjbL9EDoAv+7wTkDAL40f0T+xiu6GJcLFjw\n-GJZu/tYu7+mErHjrdo+K4suCQt7w5EXCBvOLjhW4tyYMzNx8hP+oqzOW9iEC+6VV91+DYeqt\n-EkJuyVXOI4vzBlTw8uGow8aMMsCq8XVvKUZFTPsjGl197Q5B3A+ZOFCR8xqiqdPjuz6MglVV\n-oFdDNu3EZn8zkGsQlovXoE9ndVeVzx/XMNmsxFaMYsReUs253RIf1FEfgExID0fg2OnyLCjS\n-2iFW1RgajS+/saIkKl+N1iuMzJA7wMAM0plhRueOG0MtZSsAEQEAAYkBHwQYAQIACQUCTlS0\n-wQIbDAAKCRB0gQsBI0bJpmsDB/4waenn2CvSHXyomykfpwf5lMte1V5LvH3z5R2LY+1NopRv\n-LSz3iC39x69XWiTbhywDfgafnGPW4pWBOff2/bu5/A6z1Hnan1vyrRRD/hx1uMJ7S6q+bIvZ\n-iVIg1p0jH6tdIIhwX3cydhdRZHo7e9oSMgOUWsr6Ar59NRo9CENwGPE4U61HXfOnxWdrFWoA\n-XdwZczBeLxmUy6Vo6sKqv+gE4bqrtAM0sY/MsQ9cU95x+52ox/sq44lQMwd3ZBYUP7B1qbHI\n-hZSZuch6MLi5scLPeau0ZvCaljiaMeivP5+x0gWPRs0kI+9sZxInbqvrsJ6oOBJM3xYGhtn1\n-zZ7qmZR7\n-=si/k\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "a2d34e75e1c16c17cb721633038813800dbe45b3",
        "filename": "contrib/gitian-keys/luke-jr-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/luke-jr-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/luke-jr-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/luke-jr-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "ee626500a482448cb2c7717ba352260262a3422f",
        "filename": "contrib/gitian-keys/marcofalke-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 69,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/marcofalke-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/marcofalke-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/marcofalke-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,69 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1\n-\n-mQINBFZu2toBEADGuBiRutibv2SlW/A7vBGeGA0n58coQaPkmi04QGMeGxdZyvad\n-h8olkPO1q5B0/5E1olEjs1YquHTjSjerLz8nUg8K5OEu14KtCGvFbmtSFW7fOUHD\n-/u+EykJrJczqcJJ31r4B51L8CdS1ODdBbinQRlTjtLq+pE/fJAjHI3iQ2E06vkpc\n-BRVA628fZKHIcd6uXZBrDyAcKtqq1TITlcYoVlYbvMrov9bPz1NW3P6pgnO1S+UK\n-RfkhG+N3bC8ttsTXo0aevz3klaVFEZ4Oo4N8TUcYoYDTZIfu/Gk23r0hBONI75IE\n-pbF8u+r0M5mpXxCHqmrUgmU33CBTeuCZon5r0iEsweF+ldh5rhEOhXWxHcUUz62S\n-64XoqzuOlorpWzIS53oyVTZcH6XszF+iLqSuMQCgOYhF/u47rt3Vh9D+TYJcnvGd\n-0ozRuajLIRGCdVlKt212ER9QLxZ6BTOePbb+g99I2DOx6heSUDzwXWKTxt00Lr89\n-LyBFa9kj2fI0BNuzx9XI0l+GK5M9xkNi5LwL5gaLsPCJHEEPaG2pcBIBbw6hjIka\n-L1fgDWng6MQ/eml5JsyA3G3J07/xxoVPaN9vZ8LLO9BEiz7e3Oss8a3Mw+SfsMcH\n-mJJIFT/CguJCxW3FeKs16XiDpO2Eg2WRoMJMB+psdfgo8e2q7dXIE6kCtwARAQAB\n-tCNNYXJjbyBGYWxrZSA8ZmFsa2UubWFyY29AZ21haWwuY29tPokCOAQTAQIAIgUC\n-Vm7a2gIbAwYLCQgHAwIGFQgCCQoLBBYCAwECHgECF4AACgkQNkiogvQxa5vgkA//\n-Q200J62bnplhyuWMvKmpCNFG7lTtLHmwVtZmvBJiHsRwe42KRWKz6IaQgEHfBMCU\n-tSra4i2KY47j4s/kyTgWeQooH9Zxh7c4EMeyOrxpqPmnKF/0tFnDyk9SCqbrrUQ+\n-VuL9/JrZ3zB74GtRikvWXS43cuBheKPZSwdGrGWtP74Z48eKXa8mOZtDfQJACqpZ\n-lF2Hv0GOFKDNfaol6BkANpeDv3orhnysY5TqE8iA4VuHAL2MDmWg68Rb9sjPoj7U\n-TIYyeqiok/R56SkN+WnGGI7l4+pk8pBqhkjZUjVTEEABR81Vu+Rn8OxTqpKu6gW3\n-YACXnk/kXYY4I3Ri63eK0BQEeZ6Q8nrPhqHYK7fzlbwwL4Id5bDJpBZW+a6Hvlw+\n-zQXpObhMSxtDJZzEonqq5PwJLlkLPU4sbS1tuinCdAII0Qz0Tv3Nwvcrr+KWiNqr\n-vf1ed7CecDcQpSqHfhhibgykLfdAJGNpGxyA4yhOUHax4TbYZctL3ZYXRWGrF//z\n-Gv33w+8DMb3zM+BP2SBR5D7MFTqE2X7bTn/0pRnfYObjgU7+pT0bed4SyEY2mnqb\n-ikPTKfz/g+xLL46lMaJKLgBdS14A6+k3qVUDaBNMb7crSQlutmU3fRhNYq1KW9IX\n-vEI7YuEfMa6vj4rLW+68CKYBu2pNBSQZ9LHedx1UM3u5AQ0EVm7hJQEIAMTDtNiw\n-0WJUO8T7G2vA4WFHbvBoGM4CH9LaOm0JpH3L0DQ+XD5EWGICwlpkoiQiRPpGSmSc\n-KAbAgtfS+a91z4GSWEgL+q9HqVZO22yQSeCbtbnJs44BMJzgMcVxiFOc0JQU0KPR\n-zrT2TtD/Z4ryOvI2nuepv3aRz0RSQEsBnhMx/aNIV9YbRJ0YofC8BPReK5hQ6rYT\n-V2C4P0RoPCdjeGx//0Ilg+xTbPSG1urSKVUEz6UCT21MaCBsyxN5Z+Wa2K9F/894\n-y+TsWMQQcUYZ57DXFHM1dOkfDYorVATNOnv3dIJEjQDU0dYEE0yNUYG5nu+UjluJ\n-LG/ZTiXhkNQla+MAEQEAAYkDRAQYAQIADwUCVm7hJQIbAgUJAO1OAAEpCRA2SKiC\n-9DFrm8BdIAQZAQIABgUCVm7hJQAKCRAtfyNy5Q/hN0XMB/94V+GgGRgCxvwdAT92\n-RCatOJcf1YJuw1aKWjAiib0FVeChZebZYqW+jwvMkXZwxlVFhcpFlUzAqCRwcJx/\n-QoalF7u2yTL6DEEGcC8bUKrhtXQch4/D28BWJAJlR/7bItdWMIuw4WV/8s97t8Ca\n-Fn2Fc1T6/B20VclsxoeaAoXZUcWG9YIKRbEaogt3LxsRjgQLZiIicjRl0C5YpYDt\n-JvnENKuLwSRte6gKkuUi7Xw4iIP1aEwTTdZe0km6If6pVPwCK1cU9xMpsMftT1Fl\n-NdK/dJbfWoYrS24U30XvCxsFMogD5jJ+PiXUoXDBjPJmDiXrGUDR+je/RqsUKBH5\n-zyKaI1oP/A5Dq/EU5ceIfMPaS8iK4DjgwKdh8zuprDQ+JSf4iD1b/HHlwcrXmGFG\n-4uRO0X/V0ybIdYj4U4qXRm2FTA20x7MDEDW0i/cJQKNrVZC7HQnvrdG7ggG0KVok\n-tTvsIWJTmpQ3MY47rTtWQrmRdiiSRWeTFyE4sPUy3XpuPA5ZKGF5vN7A1p1WYSZH\n-gl6NBv2vp3wjwplSpYumzh0q+o7W4bhdy9+BR+K8l5a9LKyCrwL92XKLqp3iAyvq\n-RdbCrTvfppYtNwJ06JBww/b+aO08vTFY08eYbMTOVxNJUtzpq+JUe9QHOzbBNCv5\n-viIVqNRJEQw8ITQQ1AjgN3iWdnbVQEwYv3D6VNkpzDpZD6tzOmJwwbRc5rISCVL3\n-DQQglc7BYIkcI47QHBdf979H8EvA39U4yFHW3DfApHBl/gzHcEbb5RoBYc5yb+02\n-U8xGHxGJ7q4h40N+oLCc4S04gepqtCeIQ8cgCPjRdPKuP8o2O2wzDYvqr3RlzM1M\n-l+GWmv+3em/RWwhWggDIf/XhYkSbC/USJuPjQEYqJRcpx+60HYV7Ro6/RryOoLUA\n-0ZXu6IYs2qT+KEcLQ4D1XKNb0GFnHW+3SXqehl4qI0zdPUOLKpXhCpThhC8BlqV5\n-O1aP/5jnogwcW1HF+tUc4h3nwrgvcajrikjffdBIrUidoDVEN04WuQENBFZu4oYB\n-CADQwtiaFcDxMms3bNyRrfaIA5gNWEhoTRFNXMKY5SacsavamWzlfNRBIlYMl27z\n-oMZK4hpxH568UKhwQyb/qLt7gI9hLBOdgRaWZuOCghNGX3MQCBodDLXTahnvUlXp\n-pXnUOtuQmODPjTDIjNXjcsZUUzSJoanQ+Zt8OWPBYumrFC9Xw5fFRcrNmSbWnllx\n-Nveyrm6mlOydSUXq8D1vh4vkNGtQ/0nrFuSTBGsl2vY+ClX4o8iYunaHmhEboqjp\n-BMEC4WdBql6N5CI64HQ0e2iGXVSTPiMHnpqQlnaOvx3gdaYPW15hjISgjPb6ygdp\n-uyGXyPRa+0X7TlTtGXLLcoB/ABEBAAGJAiUEGAECAA8FAlZu4oYCGwwFCQDtTgAA\n-CgkQNkiogvQxa5sE5w//VrTdVm1ak3RCtZU1D25D6yiSMKZ05j6PDyJfZNI/QubJ\n-5Qq/VKzITa4kr50LNnM/wZzQPxEM5K6HyA5Wk3tt4IXqmqyZ8VUS+55sl1b5Tg6q\n-NSLc2qXmY+BeVGmQZwke4nY8wvTNI3wGDekJTPd5a1rjkw64l8n2Xy5ErVaYlhkW\n-8KyD96PTKhsJgRqGmAtZjJ2i1e64oR/VYR1B9daghGzueV/uvdhD5DxH7UsKSBUZ\n-vb7lCeOK9Fuvs12/ULgMmymFxSvKeD5+etGUPsNA3gRpqwNcipp0QNhiQmm8nRq9\n-vH8Kv9tPmaXL2JHWJB4pMXQXX/DIww3I2gaFfHL60Dr120Ddte3uqdG9KSYQHz7s\n-/bH+vFsvqr17CHflA/Ogto4rfrlL5qo3SaJVRQwI5vhA3Nx/K22WeH7l25Mu6mAw\n-kQo0c76fmSvOTpvCVC8aDvhLlm1nF1ao+dq4QafnCrKU3PTn1SlkZ2hwfFzRy/Ru\n-Vdep6Xd2M3tux3O82UoHLF7Z+4G+NgP69h87rMOSikszRsNiCi80xO3aT2CU8Yt/\n-l3sduhFP5TqvfKjTJAK6EfUIukVC0JEL8ktpYCyxb9tN6DTPHEhCJUTXZI9Y60iT\n-ZIrV7MYY51HatEEJKhpUtLeYSyutj0ubbETfrt2b3cjHNfQh+OLEVUjaQwZXKdU=\n-=GC3s\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "47bc404554b41866c5626384c30a9e4f9261958c",
        "filename": "contrib/gitian-keys/michagogo-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 59,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/michagogo-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/michagogo-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/michagogo-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,59 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.12 (GNU/Linux)\n-\n-mQENBFGeqJ4BCADb7SI3/+q93gIvN0AGRg9Mtz73OLIOzCHeeoyn+tp7JcYNzxkQ\n-9lfeXiEfn72Sh8gHkLtLIqr7HlIMo8DxSS8JPRVjlJGkNyAW4SeEwN2wNa5OV8k0\n-N4jBa9a1csFyCyrEkPKvkUpBkQDvNXjNxyEhHwyZqPanKxy6NXIHOJji8ObOMQXI\n-T9HwJrpjRth3u4uKG968JBTEyAXAmkt0Zidl1Ykgzcedk4mJSE9uZCW8DjSv2wML\n-XcQz8+dYsoskT3KRdkowLHxAfj1BNyNc1+rKLghliM5vSQWi+Lbhi1Bxh4sY1UwA\n-lKnAGqrnAGyIvCtkwTq5QI6ufF2ZY44bvVgpABEBAAG0IU1pY2hhZ29nbyA8bWlj\n-aGFnb2dvQHNlcnZlci5mYWtlPokBOAQTAQIAIgUCUZ6ongIbAwYLCQgHAwIGFQgC\n-CQoLBBYCAwECHgECF4AACgkQgsXACWKOzwzMUAgAuqUmK10xE5C3lUym2f72z0t6\n-a2NM5Wfjr9//Y1/okC36C5XAMEtN2UwckPzzJ5p5D5y5yzwfZq5Jd8Py29VQIMsV\n-7FbC1a0H3D+bCyX+JJ6FAmUbnWOQ/+mydYc74RvD8iwjePNT6kziZNv6dMGctJTl\n-0alwjtQYgyGkeYKnIxbcyjHX/IawLUrunb/6mSKun87T8+NM/omfFCTc3l8TakpM\n-0wyNYRiUkIfUBvB8sDUU3A80qKN/hqRKvlFu3+/kMiAc9ZYQrbmsB+sYWdmM+4zw\n-8NBw3yuYzWyPuoa4PR5ZmS9F11WLMR5vTRCdLudAqYsWu3LtV6vAIvlOUa2LMLRg\n-TWljaGFnb2dvIChSZWdpc3RlcmVkIG5pY2sgbWljaGFnb2dvIG9uIGZyZWVub2Rl\n-IGFzIG9mIE9jdG9iZXIgMTIsIDIwMTMpIDxtaWNoYWdvZ29Ac2VydmVyLmZha2U+\n-iQE4BBMBAgAiBQJSWarzAhsDBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRCC\n-xcAJYo7PDA7nB/91wAiaMlU5nHLUu0anhNQbGvUdFgKK1zO90S5KzUdJcY438jcS\n-UJW1az8l9U9JBRIfPRYVhz/Z1TAJ+dCzD7D8BXHFeGEr0zNOh87ly9aB5du7dpN2\n-oSBD6wLcJpqxt4h+XjSS2CX98/2ZIJxXENE2KySaTXP39Xl3eNwvJTUBA4XlcMey\n-J8KMp/IERli4H0O7vRyLgu3yYpUArTqAonzG1g2lfB35PQJfeInrRSniQ336otnZ\n-A8qwJ63kfUtWVDRz0g1fnvtiLGPivDJaI5hyIaUeJPaXU1+sg7YNroDu60o2NGZh\n-F+0IjHlvRfzzA+F9Vw38rpSqR3BmCdjf6Sv3iQEcBBABAgAGBQJSWa9/AAoJEH+r\n-EUJn5PoE/hgH/1T2dAthVucA/hzY0nl4SMjbg+dzNlYBq00Qwx8DRKVjk5et8+kY\n-oPI3DGILcr+ELnxNekeMv9WQBBtJanUh1K5ohZ6ohoR7lG18LXf5HCdspflB5Me6\n-LMA6iMryEP6gIs9GFuoGe2YQavm58YrkqhcPu34dGN7kdurfEXLvDfVlh5ZbKCsP\n-Gyd7Pbz04SpqykgK1udiTsLVjc70Xhv+jAMqeaCugDX6TLEwjVmZH/xsyKk2Uh3V\n-Oib5FXADAtKH+vSqqhFpXrw7R/NaBzvCbas8l61DFHiUg1/bo8vsV8MtGcyZmzXJ\n-C5Gm0njtGOil/g7JF9siUrpxs9Yyt/h+T2W0W01pY2hhZ29nbyAoVXNlciBhY2Nv\n-dW50IG1pY2hhZ29nbyBvbiBHaXRodWIgYXMgb2YgT2N0b2JlciAxMiwgMjAxMykg\n-PG1pY2hhZ29nb0BzZXJ2ZXIuZmFrZT6JATcEEwECACIFAlJZqxkCGwMGCwkIBwMC\n-BhUIAgkKCwQWAgMBAh4BAheAAAoJEILFwAlijs8M+1AH+IU78ARblqTnJeSl0iWH\n-mEsg4IBK30Q6/exDAcqOEm1Yc171uw2WnGmIvPYOQqxrRTvj3LoQ816dU6jrj6vY\n-s+XX0R2hxy7ILh17D/3UKnHcddu7rmc7pNEqZeBXaMughqQaPOWkAIe52+qK5tsl\n-sWllzTYE4jo29uZ3dAtDcKEJjBo/pIXnu1GOslE1+V4X1H9WDlwrS/JXHzyDQAjt\n-maPR+3gNesDanhrRmrnT3ZXW2ZVd3vGBibhia8PWUhU1uwOH23ySWXncgsHH0Zad\n-UMjd4w3YliZP/mLn2ghAxHB70IO7lgAgN3HYZeFoufP3pcK440A+CezfQiRcjHl/\n-oIkBHAQQAQIABgUCUlmvfwAKCRB/qxFCZ+T6BOq9CACItsrUZPKGeWSTkMHknMrV\n-K5vxIXJVCBb+Tppc0Q/J5p4EkW/RFhTwIP2zw8NLDKMh5oO9md4LXhvfIZkqQJFo\n-6ZtLa3Vf+Kj7uyxezBo4QHA+G7tDsRGaMKVrEMiyLCwS1+hg9VaNzsf7zmQW7mYE\n-vTLMHp3cVaSU7Mh2Dl8rnAaM/DpTUZQwZ+32Qrb/Z4HSa4f278iqoFpjEbBE2KCr\n-vT5yEVvpCZ4lwSgA2a+uTlRTvVV6NA/kpsxU64tmhuEOjy+ToDqJ8wv4mqvWZxMv\n-C6OhfVaXBy3U9gG8aQV0ffXGs+TbCtv8ApHd6E1/AVk0oyZGJaBVrEl688bBIWd/\n-uQENBFGeqJ4BCADFmgR7oEGkFFB5qXnuNYFq1nUGDAh0dLNtAD3J6EMxUZEXdmp+\n-DQHJw6/eDRQaG9EbjNZheycbVUoI8K2Y/Z268HQueGuIEIJv6cZYXoXdWCbDD4fn\n-HMNUX2wNlpDqWxb7PNUEtfU9hI3gmHGlr5OiEh3iV06uiZg4n2rbWPbj45m5LJzv\n-wpCrUA+pLcl9Xjw2cajaSTjdXHk9gvXTCo6s2ZS3/3Q4l+xuzZp1MGNzPQHASMKs\n-wecSJKkYg6W8I5WsVlPd9a8oQCc/Nfz7BPw31MRVR/SF5FAMqaXx5uLwghVdHB2i\n-cLURsOtJlCfP8W06gB7yS+MH45Jq/oxBRiJBABEBAAGJAR8EGAECAAkFAlGeqJ4C\n-GwwACgkQgsXACWKOzwwT4wgAy6ICcnBZ9l2jSu+ldy57F6jf5kpKZgB9NV8V2mMA\n-NeY1wMQ4VTVpU4t3s4E2LYtGNJNkPQVHbt1Pf4dGPasvMPaHMamgwgyqgYixqs0x\n-D5PdKzVrfnjwTTr/ZAFdccSPmvy5/hbY0geQ/+mzdbL07+xaT58JIoG5nySDKhmC\n-VeOvhDZtXMVAhEWBDPEgh/H9sEuBgMgZrzfE1j3q802qiXeQs6WtadWlQ1RN9Iq1\n-ZzIi6u9/BifEIRI0pO/WwKOZdXLTemFUoakoe7uT3A74N96t0G9LZVihYbEoO+Pc\n-5IaHPBV5VLeR3TB1LnnjHVf/Fwi8cnGy50kNWjcbMyEDag==\n-=jyQ4\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "5ee82a6f7ea42f0f4ecacbfc0b2541b3d98a48d7",
        "filename": "contrib/gitian-keys/petertodd-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 1901,
        "changes": 1901,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/petertodd-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/petertodd-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/petertodd-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "0870c88b9b3608b761565063dcbdc33536250227",
        "filename": "contrib/gitian-keys/prab-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 81,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/prab-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/prab-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/prab-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,81 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v2\n-\n-mQINBFYHMLQBEADLpvMbTQZ28jaV/tEcHpt/a2YiIqBdNreh6rE2MkTTjdkZJ5Mp\n-RAFOTrRYRWyBL9jmCjvjt4TToiV4quv9ubRWdTKn0cKaqcl8kwZ5rtoX6EEhcLJO\n-CAL13kDzkBrG3OqRxM7VWn/0IGf++Eq0yT2eqBi7Ae3FvC4m64TKLI2NK7GB/MQD\n-JqcXuh/0yMsPiCNZrTDBX+3SzTuSLjWt2Le1Ap2nWXf68cWqP6nhT+f76epZyA4D\n-NI48/KeylUzPSJtqBmBM+YLg/XGcxDpbIotnr7D27ThJQIXDzut9O9f7RjdlKaeh\n-G73W/hDqTqLpkR5LMa7K3unUuvlyQqYGXfHINjJibNUTLCi7YcJtuDv/DJwQxu45\n-/UUYS2xH6HpgOTdWs6VjHRCDzeAoKzkdDB+8Mvi2lZXxY0iFQeQtRNkmN9D3M4oT\n-voG0cZWjPGeKSalGVSRS3TGhdf+IqOPhOl9yrwEArlZ8HtsTUFdx/jAsWHsycCVb\n-LjkD8Mdgit39UZCln3e0bY862wF7Gm7P3ITMnTofO9w6Pqffh9WWQBtLrxIXrgII\n-vstC8H9ajIl1FDuYs1Mf8u7iq1zHh6GNzoxkm+FEvYc3mkSfx6KJD3STWqSrJcQK\n-q/1SsjBb+RiuqeFdY8krWfm2xkuUoGLEQnr14UQz1hQTTLEgSoHBSHxuHwARAQAB\n-tB9QYXVsIFJhYmFoeSA8UFJhYmFoeUBnbWFpbC5jb20+iQI5BBMBCAAjBQJWBzC0\n-AhsDBwsJCAcDAgEGFQgCCQoLBBYCAwECHgECF4AACgkQvNBNjpzMrCp8dA//Yaob\n-cnFuzLjIeWyz996DPJvU62WmAE4GkZot/wk+dtIAnOCxO9YbhWVU/b1WG2PjGdqt\n-LiB6COG28/HzJoUh2zjG0lDcjvu060Bdw9rQ/kJWW22ylNAoKiY9jd3Abde5nBGK\n-0wwJ8+aMMDrO6euwgcJymJ+yZ6ZiWyG4TXXCbSdCDSsBtaaAugMlzZWeyEBEgUK4\n-nX3ZCoNiF3s2bYojr6VcgG2clM9gsSBW03XLW3lRLOvDFmdEAFp8KSJNSkGBlcOS\n-iba6zAKTY80W/+D3soBP6Lr2uP0AOFr+ZnfxvaH9YvXIFDq/jT3CH2RxiZLd1m59\n-ehUbU878ebOMlJCJYiUBY6H+vChytqy51o1np+KTQtpxKzigWiPbtyJ9zYoVVczI\n-Ds8APCqL729BPMhhTDm8I9jeEhjXNmmiJjGVJGVB5X/3w+7jQrEz6f1Ebi+cCrgN\n-tfN22bMs9hh5KkQ4JhRVfDM0DOXCvokXjdo9yXUf+Doc96ruCJKH0qR9L7qIASiD\n-hSEK3CNGY1G05Bb4wCS+FrexL11whAxlX7HCwbgjgHu07QJBYITdn3J4fUFYGsyS\n-G/2D5aLASiKGfq2TL1G9e/qI49/TksDQ6Xy4ue4cQYbf6JigfYjDcSDOZmkHPuXG\n-kSd60WPWJT6OqLrhq2c7exYCUGZaKrWBoie5yoGJAhwEEAEIAAYFAlYHcWAACgkQ\n-0cuiohvNiPY3BQ//TVOxm3UncyGyXOs+ss3fBSPE5q3lR71H4uo4CxE5pi9Y10tK\n-Qf0ULe0gRpnF2FMUkCCE5hu2oG+kPpqKON8/jwcnRCO9h2AndIZ3NRPAOXO2pn9f\n-bkDHMlInhPUxDk5zCHMTOdCONDvhocZ69gYHJdgt4w3Joji1YxTkHr2n8dFyNY7Q\n-LgqT1tpuXgopjKsUcYRhDCRN/iFsMa4D+XZR+rflvX5hkee19DzUIWmaHitfHZlo\n-VsJ7uVZKqUevS3rbBr3i+tpvvlrqDXAGksGWOdK7QFD6GtRgOD91IB82K0NvyX6t\n-M0TMh/aAAslxfH3YeTIGnETuBkp9QBCa1c966ipoHyzItmK9sF/ONPEfYR/ad3gB\n-Nc4G5w0UEROX0v4AWMfYc2CD+un3beH6rkWnopsIRJcQ71XvufqweWsPFALuBBzR\n-PTiugTi0SSSr/ayA543s90Ko2Fxrg20UYJZj1u/DEukpNJwjRSS/yyjk0hMWtzW8\n-rY1Br4Djbq3uQQj8EQojHgg3vlpHcbO77kXIJAlWYIzfHY69RGXCQG6Y7tavIiXm\n-vveP54CPFCs8Kl9t8Pq0IrWKnBGklE/KwfMzkzvrKFmi+nk9yRgwyN9G/geQt4Vo\n-W2mHmO1lvY8Zu2zpzLkvkYGXpL1VkIefmBYV/SWgyYGhLOJIFodJcMrrnje5AQ0E\n-Vgc1VQEIALsxaGYOnwWdgE2e7zX4uFz7jY5fZh0+RqGOe+Sk2g/QVKEDSLDgVF/V\n-tneG8AFgYukHPFCm0IZdKrewrkzdQOwxjyxiyFxOV/LYPesElVe8OWIs0lrMrWlL\n-ZLDguF63wnxWhjolfBzQAG29UTXYaJt6onEB59R2l426LBl3W9wvq19jolOECISw\n-r9z2IRUJ3poqBckT9j11p8yuPjGyht90dvg4htGPBV7nHDIijUnqLfk9mnAj8NwW\n-2Gf7TwW2uNA2rHV6riFzYVe2t1sB5Gdlx5ostJzo67yIc5Dffca901VhmpJTUPox\n-W2KmTpl3ObvaS0U0mkAyVObVHSuT6UsAEQEAAYkDRAQYAQgADwUCVgc1VQIbAgUJ\n-A8JnAAEpCRC80E2OnMysKsBdIAQZAQgABgUCVgc1VQAKCRAyXl7AXCempkrrB/9H\n-tOAstawkJ1IflUztgknEDE7MWuNR5XGqN7ROJAZvL8YfB5J7a4HJxTzCWft2QQUu\n-x3uwSfBpm+hRftBjm4aACrhDS6OOH4eFOUIdDASb2lgnhLmygKhAO9LW2z8jSrRs\n-tKNj9nyCo56mtd2awFESgpskavv/ilc9wU830C82FFdyBqgy5OBdWBurnb3SV5F7\n-23uD1t1n8b9gseIxNdF6Q//szAeHa4VRzzqykExXqHCEFCtH2gs9EjiZ3YeCyygK\n-cPbe6/+FP6UD810PBqnWaCShOIeT56JsOu2gMZ5+epWB+piUTn38N2Znu3EA3Q64\n-Gc7P8AtrNUCv56bof5NoTuwP/0rP4n1bsTy7siBuPqc9YvYkVCxNsGmg1Qs5h2Jr\n-ZmQlAnz8JXfi/TRxarUNQTZEsXVQzq+4C9eEMey440kXvDE2sd3p4MKnbtkDmahJ\n-XcMG5lsMMAQTpmyBf1EBEIFOwjZBqUqEkHl4FGRpEx/Q2p9/pVlogGW7SE5Ck6W/\n-A63ClJUJLsHaWiv9zJ23tzT+ooNy/iO1Y+GfV6MY1tBfLd4ZHHd2n1urFB362sgY\n-2x1TfvfXN0Myw7m1X0l9bYFycuuWfSo6qK+LCU/4P3jm21+i9lWBYX5l+NLz5mlC\n-V5aN57zmtGK7QMSp+6VY8mwG1TuhUt91S2fEScLax6qEASiEChB8m3YJOjKycP27\n-Sq9WactijiVTPslHjCNfyM4BbE9crAbDWGkIbzbka8ix3t4uBWt0YO0Ug9S3eZBt\n-w1OVxUI+LWjF5XlkfXn8W+pZ/C+M9Cs6QsAXEbfHXVZKwlAGZfvYE25UTr11RRnY\n-pl8JZglq0Z2Gip3YzJewC1pjjQTnnPoPT79elBuPmiGwNm5L8HsKUZ1IMf1k5mQB\n-FX0CilHMF/JAO+r8Obs1l7FHXvO0a95tStcjpFodZjHARi5B3VGghcypy2J9hWfH\n-YF23EcE4GzpqqSEO/SJoxuLNNtj5ZVJOxmeRz2CKCe1sI8xO7wY7ckjRaGmrvK+c\n-dAxeuQENBFYHOocBCACxVJwkGbqcgKTrg6APMxWO77ielcac8FOVpd0ns1h4TGZM\n-iCwwTR5WPRiIA6zuS3VTuPAntnK3VF9fQsLBORHIb4CzMeU3F/64SPt8NFajEQ+P\n-vPsZlyv29RSVmvhIRDTDry3Z/KQxnZ3rzazrBqGVuLBgsG45n97MQ8Xq0gkY42jU\n-VDldULYGMco5zHj/MFSQ6L3z0j1lL+aiX2xIdRyDNzOhRqaA1ByZvsRSsqW2JWox\n-78c6AbclWw0QLdQd4Pxk8k5hpeN/EtneVnFDX3hOq/C9fZs6f5aAKn81WXqPPPk6\n-G0b7KzlUoCWGlO7M5LzEzWmWvGPs7W8y2Uil99CVABEBAAGJAiUEGAEIAA8FAlYH\n-OocCGwwFCQPCZwAACgkQvNBNjpzMrCr50BAApY22DRYqmtALFieREu78BvjQT/DY\n-f9Smkga1YVr9/Ph9NJ5iSVeM8mrVkwZnGRK1UCjk16rsmB70IqlnJnyJGXqPMj7M\n-3ioOWY8fCL8fmLI2g0TbXXKl3e0nGByGXW4pwyLYa/hR7XJMco/PxqIGhEKcCIRP\n-dxq/6U9T9SYe2IkfXBYZAxfUTE2FkRpw1zSfZN3z32LM7ICZ26NRHRWo4Kv5sij4\n-0mYYecFmWdf6ib5pPCI0HmPGpblbmZgR1LoJNmuNxfpgEnPe8BbxtO4mueNW5A39\n-y7gLCmDZ8MaOGxvjGByBoXxXP62BiU910iZZZurjSD+3FD+NUX0m4yxVIZCkuInY\n-QzLxFACr26IYpcsPHIYGnEjDBFw9hHdP6tzKbjzgVSZESheQf2zwit0YYSjwHQN/\n-XGnBy8+p66As61jg8mcAN2Zd8vwFKZOvfEnSsaoK5ssAh8jixhPj+Ujgs0/PB8t/\n-ON20yr+YRAwU+RVnC/vfvrM83mjoz4mbmSLapFz/xWNhoS0ZczYEI5CyxE8peGPX\n-gd/7tim2OqUuZ3SlH5TZP3pdJcqxTNN7iNaWy1wAY/sb8As3Pge/Vv5hSYmHNjQy\n-h/62SSbTf6OZCuUGjy8fvVj51SclVKqGNprmAqVrIy0J+VeTKj4r7PGesPWJavRc\n-RFdDYRHByRDDL1I=\n-=dOwX\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "a1930ddee905f688dcb3a189a88e1317e7006a0f",
        "filename": "contrib/gitian-keys/sipa-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/sipa-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/sipa-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/sipa-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "baaec76b8c656a04beb4a91155dff40658c87bd7",
        "filename": "contrib/gitian-keys/tcatm-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/tcatm-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/tcatm-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/tcatm-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "e0f6c4c5fdf56ffbd6308d4e0a6624290feadff6",
        "filename": "contrib/gitian-keys/wtogami-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 131,
        "changes": 131,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/wtogami-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/gitian-keys/wtogami-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/wtogami-key.pgp?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,131 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.13 (GNU/Linux)\n-\n-mQQNBFHOzpUBIADYwJ1vC5npnYCthOtiSna/siS6tdol0OXc82QRgK4Q2YeFCkpN\n-Fw/T5YK34BLVGWDHPoafG2+r1nXIuMZnJIiGw6QVOL2sP9f7PrMmzck5KJPHD14Y\n-GRd9BPkhmt3dXzOCjhig7jI6hKEYayfJNUNs9nlZEvl4QWIBMmk+IyqQz3f1HMfl\n-/GkFDShBYF8Ny7Ktlx7AaXymajm4DCrTkbj5V2ZDqJgyQM549EoPSwXBQYrEjye3\n-g2viC8rUFRFWFjdnx7jFEb1uhx71YGuqiLxKihUW9pbSNK2cLweFazHSVmh+B/pz\n-fxHfUn+ijLSIAnprTmc/rq89un/iiPt0O/mspcCZ6hE5pFIyX+SC+9PrGz+bFSmw\n-PkMOZzG489G8k4t/uZsit6helkl0emg6JiXLTmS/oTuT7B9Z9/MeEhOXFcxUb0fr\n-2aZkEmH5d1oxSBis3D5nylmNJXOUSCpJAZ8E5Sr/5FbF9IPR+NSzosVacqCx5Dxj\n-vJ7HpZKn6pJfmwrghVXQv04NRTcxbHNmwd98cofBtWX8yBO8M2M+jZrU+BVDUbb/\n-A1oAyIbUUswBP768Oh11bELhCly774VwBqTojm2yodLGSyysx4zoa6qL7myfor0m\n-a+K29y8WH9XGmKGMdUOg+q9z+ODky9aToGvEo2eVhKIlJsk0aFAGy/8awy6qRIIj\n-UqLMq6XoFcYlE7SmnFUDDDPlBK/NkFFqySpFhKNRyt69Ea9kYXOxDnf/EnBwHn8m\n-PiFQpeZqgnmhyj8Nk1SSQBgUi07NyXdQ/WIYpWmqqqfHRVQgSE9C1920T1zg/E97\n-n5yYjI/gQQwq9wikkJmog6Ny7MSiwIU4LYV0pTUdI4//EJMId2FH8YEUfvG5ds+F\n-H/o/D4CAJ86KjspizfH8jEjhn0Rm/OtrxLz1rwA1gtF//P3TYNWw5qruL4stP3Rx\n-9Gve8Bm7oCBU73UT2ZJomEsWE3oqXinLRl3YCsjGDg/d3ySD6i0/BBROLIeXkh3M\n-M1CNCqREDGLA0vxQi1o7Zi7ZA4gWPSzvi/8KtSzY1iAQODxWUmOICRP7KQODWJmt\n-roTqhKgZ39wlR6eqkO8ZfAvRYsjvkL+EZFbbKbHxVJLhKchd2qHS+/Q3ov4SFzWY\n-/cE0ChOPDM587Jkps2bynKQAzQ6810FXmJc0ztrPeD3PEbuyY4KNJV8HGViRDJXi\n-wvs8eqfvTDGDPl4aLYVCKO9VqZ2OJvqhRhh71LQ2xRrX1LGnYLnUGCMuEQYKvMcI\n-TSssM/VAfeWAPJDklD0lVNJ7d9Z5ugvJHFc01SaaB47Aod2SPWp5DeiY4A8dcy2w\n-7f4Wx6FcdP1RXqaRZKCapBooN04vsvGllCshABEBAAG0KFdhcnJlbiBUb2dhbWkg\n-KDIwMTMpIDx3dG9nYW1pQGdtYWlsLmNvbT6JBDgEEwECACIFAlHOzpUCGwMGCwkI\n-BwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJELEXnrc0fcENY4Ef/23L9iC/39ekJ8Is\n-1IZdCoDD7/DgVaZqydDcy/ha9uaDFY4MQ0h9RZYo1axVBth/Yxzh1XnvitW8HFKn\n-DXn5wJI++KWpdLMUsTrc2iWsjAGgicmN5bkQvfTnRwn2pF17EUUEhZ8YyE3qMSVD\n-rDBECLAswT4Oiq9r9yw3VCFsRaxz5bhk9AAzWjam4H7mAfaEAOUvuX221v+KGSDM\n-UsGAAe+GjMPL8KnGgEbISlSUF1Ubcw3EChcqjf3BID2gMLkAnGAoxlCZSYievytg\n-71mcHyIf9yF861QrGcrCh6/objtRdt4IDUVwo9wapunRmYCdZux4ApD0Hit8nAsm\n-QtxftSK6FWBTOCIRoOQTjwE8qj9GYTIbUFppX66Dzh00td5NKkWz0PVze7YSk2hC\n-KCVBYyUYHgkQYVlYLZw7dBrXSXv7ph95vc93RDS031cU7tPOrthqnMmhtg1WAwzH\n-xc2v3az9Gsw1RyxBAOVpkB0AFODiEiVg46xqmxaBPXfQOg/buZA2l4gK4U/pVUZH\n-72lle2CbBw6FoSx40Y3GYZWB2uEdXBTNLlhX7q2Jvo8WdeTxEv5ACZsjI7K/wrzt\n-nmvCHefOmVf4tefkXy1MyEvBt2+Ek9bHmHDL1BSk/JdJzJtam2uaP5pGum/PwIUW\n-KBatmHKZUKwgOIml9btB413C4zSK3GQmC5Y/+TxYybACIdxTDqPSczVZ5Q+jSywX\n-shdOoLXDRyrYhT2sHjZ1W29B8ebokqwousF77EA94sqfQvDDnmFpvfq9+m0WYtOh\n-PFF/yxOtlbPJYX7mnC8+dUgobSA4AR5Yrclt+levgivIyNuBwzevHRDMreMZKl2J\n-uiOT8tkuu66fAwEltIowjjV7TBRfij4QLXl/zfFo8jKU8efL3xluXoRn7g+E5FZ3\n-19KTF/DWMcttfeTUYVnv0QTnstb1RGnVj7w8JMy90mKdMQFpl7IzHd2n6LrhEw1V\n-1AaPF7EcQBOlvsvlZdIFQrFyhKozKoGi3wRrl/bNdebxjIjPzfN9GgbiufFjz2d7\n-DMR9GFXfUMVxLncaqBBy1X7MV17ZF7K4uw6DET4fRoecb4N5mJVUxvYq4iZApnNP\n-npgGdmlcyPD6o3ynx/vkw78m13Gfgw8i2OaUY7xBdOyNVEvkJZBLaC2hw+TKLaZa\n-v0RExtAO0i0QO4Y1eo78Pl9jOpz0wkJ4KG0270l1Jza4IyaIhYRDWagWOfOp/cXU\n-cvKKiuJhLOsX1Bapz+O2Aor9+EwWRdPd3BzE2ABdmKHPwrKobNp75wrCpQ5mZifn\n-DSTJRMPQQJV3wGfB2sP0NE47U8w5CCmVK8gEuqYr6wBl/CCq5tjiRc63VM+to5V4\n-tVNTCJWIRgQQEQIABgUCUc7PqwAKCRBr3f6OVKKs8cYAAKCFCLJ5wc+iAVCFRevh\n-xTcJct0fiQCePHpY37CIeP8s9BH8GqCDftUqh8SIRgQQEQIABgUCUc7YwAAKCRDd\n-f+mrhdawLOVxAJ9Tjud26LtbM2mWcPj2eT7dhqgZrQCdGyMwMMVzp40lsCK44PrV\n-+mpFO7KJAhwEEAECAAYFAlHO0BkACgkQw35HI5aSdvXfLw//c2zZxXg4bI2W7gkB\n-ZQJIOWnmPZfhrXQNeFuetyGoWTm4ZWxW362AdDGiQSGNNkXqeBPOitKOkRyZP/Z3\n-h1vwkLkwdFZyWXK00BzYBKfjThWV1BAnArQLewSiLlE7qSnsPEY6FW0PNv711cbL\n-lXSUP1/lW25Nx7L76GAF6sHreoIdglE8YH5y310JuFnqPa0uaJG+qDo8Mb+WkyLy\n-Q2A3Atws1tIB9vHsq2FCt9ACyAEA3AqtHR4uMFmIWpUYy77fJAZdzLZTWf0X5XYw\n-XILNPOl/I0iZrq3LYQAvJfIwjWAC/lm6uTLlvkIJHKyhcIT+RocjMV7bY9ezrC5i\n-Cag3gaOZ7USMt0h59KdmBaHHNa32n3PSHg9XWljqoWMRjuaRdcA7ofK0BHDJbHWE\n-cldKXC09laWOXbyNmJsfug/23vNE7fS/cAKSIgEWszEwHJCahB2i/HqOQF0DUGpq\n-3s5oIXs2xIuN0yT6yIIiQnTU/FkWDDu4D1OZNrDW6QG3cde0PRak/0fr4Kv4iB3E\n-CAzlsRBlWKNu/eE4QBx6cbvLqjriijhGAF+8Y1zvRKNKPr96hSsETfVytuKDTp6F\n-u7PAarrSATGXI92Hy3ThAZla0VOYUyeWPktqUMDNq90tIBZbwKpOMMqvJmZfgdOU\n-4ldDq1f5+2WhAt1aTL1GJVCuYcCJAhwEEAECAAYFAlHO3MQACgkQnSOpPExjO3Gi\n-jxAAsD+luooqqoz3A28ZxwfCDV+ovazQ4Bw6hVU0zKKZIz/2H4jwmLtLSHtucCRM\n-xRksZmnqf1p2nn+BKBXDInx9vI9HziMu7fWkzhuovAIf9+X/l6EYV1kQx0bIM1qU\n-BxXWPgGdrgSZZHl9Qff/BOBnrI8NJmVBDzOh3BSs0BrSR7aFbkSNbjk/JcP0JEyk\n-j6wDKQsop/Ca5AboLL0uQPgTvhxCu4VROKjhu7o3s7G3xlxTpimwYklDQuYFaGKj\n-ZNIGFq2orfIMBnj7ZEQVXzhWltlHcgPVP5TDfgd4pVUbyUB6ras7odJWWIHnUFmj\n-1l5bGidIwRXGFusE4iR8pR528LG2KxNDNQYipsKRY9m+wH+N7gbSgK8DxmocvieV\n-vcILFS5VrPLbEO2oC13NMljmvua3ovDB0CEh9rybaH+/oA+VDS2L3pkgATTju+Vx\n-6+mVdlvnrA4mJ5BoLHzrleKybS4ZkbtVBh1KOYmo95NgVifRvpVPB6hKzwqcjYFV\n-fVYBxTryTBRyd9MLsqpPKnGLBENTFvKDxRCK3iioNyVhXdS0z/UyF1C2hwNTpnjY\n-pGCu+Es3SILJg2TvQcwLM0OoYBA1bcONm2XbkTrdCpTOtQcSewQSkijREunx14iu\n-pvNSWeNmbjQU7gNYhvwcBgh90tWgNCfqTtSa5xSe46tmv0SJAhwEEAECAAYFAlHQ\n-1hgACgkQZwn/QC8Dr2hT/g/+OFUYPXfWo0+ILdxyTGP/v2mSw/X3dBCEYUqefWxD\n-umcwnksey+thEGFBlxbwpyOfAoTzZLUupaG6BacVgRUvv8bTne4v2H1d22aBXyjC\n-HMtQPhupn/giamu8q8hCPFrDp6inIAeFuz1GmQaH6xWO5eYBuYXQtxlvZLWBsuMT\n-74en4e3vjczxGmJu/nvM9ugcYsexA/zcN6SRGr7t2pV4ZElPzPBRyAzhYqhP1YlB\n-Rydz60OjgcWYEoJKWhJOfmFJ3ZoNGAz4TGoBkDIq4olCF0/cxqrtHN+ZnEOLwiZ7\n-4ZX90avcjEFtM+Wb5dBHNpni4ISoHcVI1X0ye6tuAOOt7RywbET/0oIW5iSNMgJ0\n-X4XYgOIQ2+a8yjGBjo9I57k0vp1mL6Ji/eaa0dlppcCGnzvSHss+O0qO212pg5Yk\n-GGfjX1y1ZeSP3ca9C2XyOGIVw2d2Iu7OyqAv/N81xt6ZgG3qixQC0nmgOmn7Kh2B\n-20W12KpLxKS8RQdHawGau3MBGKeqbfK6/eAzm22yD4/yJAoW4hKgm84z3FbKUN8w\n-ulYMK9hS2c4egpoDAOJ/QZLLXFWiyi7/sHZz69G2AweWCjOJh28Otg0cUHoLo7jw\n-oO/L0rCsOQMbUuIumYXBPHNnDwv1xfv2lT8tVzf6GksFJBAw0DybxOMTaOg45Lhz\n-jGS5BA0EUc7OlQEgAN6t+BV705uoCsdHtQBq/HKGGD5tBiOzy7Wd4nF/c6EWzET4\n-QUnmw6bDnqjxrk9MWniPDf1O9MvuB4qIY6g9kEjZ+VSQpWUZpZ5bMXCNHrfh9J2Q\n-6oLWqDmpeZv2OI0O9wxT62QaFei2qBtimSnBudLSCnvmU3S0h1PflmJsbj+tVcko\n-w2yOh2bjH1jkVAODHvEbxqyD6fiZhbfUVbPC49SBmXv8Gv0UywNSkP+iqJdwZAb0\n-XtjRx4WjZCkTwJAnbM4CJ63+5Hd83BtWZAZbGAh76XY/cSkDirXtXC+2LNUmP5W2\n-QY+ur5Bvz8LHaqJMXLAtePdkv5kpd+jXBrZieXUtqovxZaQTinl7C3L2TZd/ivxD\n-F3Rko9BFDuXXcdZrxBY5b3146IvSPp1y0WmHRxhAPb+RuiHQMt8K92nOhPyvtWXB\n-mWz0GnW9L6+CW4LKSPRSnE057hyxYNP/DcDd+fWFH+MmhU9noqHfJXSaLVzdI5PI\n-L8N44AndPIojnlxrxRs7Ik/nW6cTV9H3agg+24yyTdFkACbfIS6wWXOHeHuBzmO6\n-VI7pXOZJ9vZT7zI7M/hVci0R3putsGqgRfByRWWQ2DNeyrwUHexZNR/NYz1uhvA6\n-dBfKcuAwqxbdSrW/BxJ+iJWdkgYGCV67VLlO6S9sO33HgOanpPr5R9V1KsFVh4dN\n-j6BjZ4ALE5FPNW+iONnuXvtZbN2cBlBzMDeFC9oZoYCs1Pkmk8xUY2sAXPUt1R0G\n-D/miIb7ig1N52j9P6vv6fPs1ghmc/hGkhaXyjS54B5T33V6M9g+yba9mIgi8ZxZa\n-G+4rlFFKA4HS7wYYRJoqMvnc/qBYvoWLaPu3Xq6AXrJyuAaN+e3L8++cWbYHBXF9\n-qt+Q2RFL0FNiYUQuwkiaerysnm1a0H7ZtJ4zjl4ZgA1Ej7QcylTIbgFW3L7FnyMH\n-/5weLLN2wdjAtzjhRPYJLbV6V/gFbbpCpr+caDUaxSNizQuhhzVI5UrJegaHCCrx\n-DCiwWRFYzN5pqhtgzcaImK76DmPIk+Yrsum5KJZQeGfzKxvF0YnwxU0bxFzcDZJD\n-X2oCJn828Aw2j0nIlVlrrao0JMkvTBeZehO/11U68M2vKGEqrsQOb/BTXyLCeZwn\n-UGow1WvYfRxEZTrhhiYw94EH06gbqmKG1xsuV4LDI5z63/6ACcQW3orMbMymJCky\n-4HiNVZ7SNeGoYe380CJCwv6GN1opKTAWp84cr2KzhAzONGqNWNpUhznAXlI+GzCc\n-D2H330L1atMqZHjgpEfrkowvJ7WBM5KFKDfylaTKhYvfZcTOZs5OmRZSW3U54wRD\n-RMP0d2+k3vRililNhHIErHbjhYFc6zubVbBhvUMAEQEAAYkEHwQYAQIACQUCUc7O\n-lQIbDAAKCRCxF563NH3BDSX2IACugAdZqX+o/+pTkSrj+NEAcP0ZMci8w5nm/yOP\n-VlGyY6PXGuQKcBtvz3LWtIDdddMc/bD/zmZPwSzTx1MMOWc+gjR0azXe2RrdMHYk\n-8pb4X4Op2Nkasoc/8hNsRKaU24WUAQMqrRREIVBEOuHGl1A52Lj+aFB04rRHrkMl\n-AqjB5bwArPorIBdM417EEl4hjEZ9BpQxbUgBhTgGTZuc1u9PsKz1YvQ79YJIRmSH\n-n72Zaf35zY55eOQeoVBzGmFPq+/UFqtRNWA7jmRhHvMz/yR33B/RSxyTJuPb79zi\n-2mIZOrViG3X/UNL4qtOc1cKXQBi+FjHAMlGrCc+D5lnyOhEvqoEuvQic7V6C8Pvk\n-9q+jngn2Gs4pdJO8FOnwaC5xp/ZNE0v7x/KtAHyBA6iKcaepgoRQPSt1ONiHyfh1\n-iGgJn+Y6IHx4YDYKEY0UIzHhCfWUl8XZWcf4wLGEbGztkRbkCFqrsja5IeaO7umB\n-i6C4f95uSGjV7SiIMJOE8xo/m2g4VCnnmk7U996JwtBMKREMMqa3ABK4trfBL3Kq\n-P6I6ZTlA/C5svkVUVwWOMZau9kLDsxv8keGrFteZtfYa1KPAROFwNuBU82UW0KtX\n-QQbZoBKt1o3LhqEu+hXU3iKocYWSbBThH8u6vPNgSnW2Qcv3gcUU3jGmYeHrGiUO\n-SuEWxwlKUxCxBNfmz1FGswlwve1LsS3RTz/XB/L6Ubhq5L7FevrXz8152kuMqnpy\n-m93sXkL1eJVo07hH+otcRnMzy4vUar9z/N12t3hfTffx29PBKUCc2PKPVpLfJX2i\n-hieHk23fhLnptjc3lm9S+bHO3rqEWHqgNgNp9bpuwiLRsIy6qTtmC8jxXkGXvQrS\n-+2Hv6+jRfDcqEAK3vqi1XL7Td81KRjnheBtsKpjS2PFatK3uTo6v1oRWJCdRCxg1\n-HT6a9KvZ+DNKcxlQISKAOLX72qpziaDl4CpBdQy4Zg2pr9oYkLdlfkaDK/OH4J3M\n-wJiVf/uNPPd+yy6xZXK0SPZHf+mf5Yt+Sim93hIbdS9AMdvHKB5n3DR27H+/okPj\n-w3J9z85hxgP5KspizQR6t77AWddPRy/l3BBZeb+HiaeKGBJeSNWXpkPXHkdjLW8U\n-QStzFR8r15FWJTmamIknjJ3XNbytMCpu8cj2ZVZdyjPcHEBL3WbNYYtauSuYmyUO\n-yXBaecM/KoTdvHiERU/mMuf7f1ftftCHehZoNaP+BeIbIud9IHIdrSQBCW+RC1Y1\n-8opDLMtnIOX3OnyCN38ELYcuNLMJxBqnQgi7MVDVcT1+BN/+lFQtG44+rPUkK+T1\n-Jk1/tIJqcyc1BfY6uFHFXWWnqQnjl0XpZo+/bMDxTVy8yND2\n-=icdI\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "8d3e57c5268cfc6af2f5ec11b7342cffaf61abec",
        "filename": "contrib/init/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -5,7 +5,7 @@ Upstart: bitcoind.conf\n OpenRC:  bitcoind.openrc\n          bitcoind.openrcconf\n CentOS:  bitcoind.init\n-OS X:    org.bitcoin.bitcoind.plist\n+macOS:    org.bitcoin.bitcoind.plist\n ```\n have been made available to assist packagers in creating node packages here.\n "
      },
      {
        "sha": "de4ea0ed522d1c6d764e5e05a5939e097b420e86",
        "filename": "contrib/init/bitcoind.conf",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -30,12 +30,12 @@ pre-start script\n         echo\n         echo \"This password is security critical to securing wallets \"\n         echo \"and must not be the same as the rpcuser setting.\"\n-        echo \"You can generate a suitable random password using the following\"\n+        echo \"You can generate a suitable random password using the following \"\n         echo \"command from the shell:\"\n         echo\n         echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n         echo\n-        echo \"It is also recommended that you also set alertnotify so you are \"\n+        echo \"It is recommended that you also set alertnotify so you are \"\n         echo \"notified of problems:\"\n         echo\n         echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\"
      },
      {
        "sha": "0c95baf3a1b4494aad65d05633c281d29d595d5c",
        "filename": "contrib/init/bitcoind.init",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/init/bitcoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/init/bitcoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.init?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n #\n #  bitcoind The bitcoin core server.\n #"
      },
      {
        "sha": "86222295dbe052a5c6455e80dcf830161dccc05f",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,4 +1,4 @@\n-#!/sbin/runscript\n+#!/sbin/openrc-run\n \n # backward compatibility for existing gentoo layout \n #\n@@ -76,12 +76,12 @@ checkconfig()\n \t\teerror \"\"\n \t\teerror \"This password is security critical to securing wallets \"\n \t\teerror \"and must not be the same as the rpcuser setting.\"\n-\t\teerror \"You can generate a suitable random password using the following\"\n+\t\teerror \"You can generate a suitable random password using the following \"\n \t\teerror \"command from the shell:\"\n \t\teerror \"\"\n \t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n \t\teerror \"\"\n-\t\teerror \"It is also recommended that you also set alertnotify so you are \"\n+\t\teerror \"It is recommended that you also set alertnotify so you are \"\n \t\teerror \"notified of problems:\"\n \t\teerror \"\"\n \t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\"
      },
      {
        "sha": "f70e25cb5fdd29e49de2c89b81bd92633e5b93df",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -23,7 +23,7 @@\n #BITCOIND_NICE=0\n \n # Additional options (avoid -conf and -datadir, use flags above)\n-BITCOIND_OPTS=\"-disablewallet\"\n+#BITCOIND_OPTS=\"\"\n \n # The timeout in seconds OpenRC will wait for bitcoind to terminate\n # after a SIGTERM has been raised."
      },
      {
        "sha": "877abafd19260e1707e6b1e370cde8b2e088a599",
        "filename": "contrib/init/bitcoind.service",
        "status": "modified",
        "additions": 33,
        "deletions": 11,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,22 +1,44 @@\n+# It is not recommended to modify this file in-place, because it will\n+# be overwritten during package upgrades. If you want to add further\n+# options or overwrite existing ones then use\n+# $ systemctl edit bitcoind.service\n+# See \"man systemd.service\" for details.\n+\n+# Note that almost all daemon options could be specified in\n+# /etc/bitcoin/bitcoin.conf\n+\n [Unit]\n-Description=Bitcoin's distributed currency daemon\n+Description=Bitcoin daemon\n After=network.target\n \n [Service]\n+ExecStart=/usr/bin/bitcoind -daemon -conf=/etc/bitcoin/bitcoin.conf -pid=/run/bitcoind/bitcoind.pid\n+# Creates /run/bitcoind owned by bitcoin\n+RuntimeDirectory=bitcoind\n User=bitcoin\n-Group=bitcoin\n-\n Type=forking\n-PIDFile=/var/lib/bitcoind/bitcoind.pid\n-ExecStart=/usr/bin/bitcoind -daemon -pid=/var/lib/bitcoind/bitcoind.pid \\\n--conf=/etc/bitcoin/bitcoin.conf -datadir=/var/lib/bitcoind -disablewallet\n+PIDFile=/run/bitcoind/bitcoind.pid\n+Restart=on-failure\n+\n+# Hardening measures\n+####################\n \n-Restart=always\n+# Provide a private /tmp and /var/tmp.\n PrivateTmp=true\n-TimeoutStopSec=60s\n-TimeoutStartSec=2s\n-StartLimitInterval=120s\n-StartLimitBurst=5\n+\n+# Mount /usr, /boot/ and /etc read-only for the process.\n+ProtectSystem=full\n+\n+# Disallow the process and all of its children to gain\n+# new privileges through execve().\n+NoNewPrivileges=true\n+\n+# Use a new /dev namespace only populated with API pseudo devices\n+# such as /dev/null, /dev/zero and /dev/random.\n+PrivateDevices=true\n+\n+# Deny the creation of writable and executable memory mappings.\n+MemoryDenyWriteExecute=true\n \n [Install]\n WantedBy=multi-user.target"
      },
      {
        "sha": "95b5342f1ef9dc9b9bb66538d0cc842d02951d62",
        "filename": "contrib/init/org.bitcoin.bitcoind.plist",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/init/org.bitcoin.bitcoind.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/init/org.bitcoin.bitcoind.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.bitcoin.bitcoind.plist?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -7,7 +7,6 @@\n \t<key>ProgramArguments</key>\n \t<array>\n \t\t<string>/usr/local/bin/bitcoind</string>\n-\t\t<string>-daemon</string>\n \t</array>\n \t<key>RunAtLoad</key>\n \t<true/>"
      },
      {
        "sha": "4f74e67f2faafdc0b35210ceebb9838c8520a314",
        "filename": "contrib/install_db4.sh",
        "status": "added",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/install_db4.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/install_db4.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/install_db4.sh?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,87 @@\n+#!/bin/sh\n+\n+# Install libdb4.8 (Berkeley DB).\n+\n+export LC_ALL=C\n+set -e\n+\n+if [ -z \"${1}\" ]; then\n+  echo \"Usage: ./install_db4.sh <base-dir> [<extra-bdb-configure-flag> ...]\"\n+  echo\n+  echo \"Must specify a single argument: the directory in which db4 will be built.\"\n+  echo \"This is probably \\`pwd\\` if you're at the root of the bitcoin repository.\"\n+  exit 1\n+fi\n+\n+expand_path() {\n+  echo \"$(cd \"${1}\" && pwd -P)\"\n+}\n+\n+BDB_PREFIX=\"$(expand_path ${1})/db4\"; shift;\n+BDB_VERSION='db-4.8.30.NC'\n+BDB_HASH='12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef'\n+BDB_URL=\"https://download.oracle.com/berkeley-db/${BDB_VERSION}.tar.gz\"\n+\n+check_exists() {\n+  which \"$1\" >/dev/null 2>&1\n+}\n+\n+sha256_check() {\n+  # Args: <sha256_hash> <filename>\n+  #\n+  if check_exists sha256sum; then\n+    echo \"${1}  ${2}\" | sha256sum -c\n+  elif check_exists sha256; then\n+    if [ \"$(uname)\" = \"FreeBSD\" ]; then\n+      sha256 -c \"${1}\" \"${2}\"\n+    else\n+      echo \"${1}  ${2}\" | sha256 -c\n+    fi\n+  else\n+    echo \"${1}  ${2}\" | shasum -a 256 -c\n+  fi\n+}\n+\n+http_get() {\n+  # Args: <url> <filename> <sha256_hash>\n+  #\n+  # It's acceptable that we don't require SSL here because we manually verify\n+  # content hashes below.\n+  #\n+  if [ -f \"${2}\" ]; then\n+    echo \"File ${2} already exists; not downloading again\"\n+  elif check_exists curl; then\n+    curl --insecure \"${1}\" -o \"${2}\"\n+  else\n+    wget --no-check-certificate \"${1}\" -O \"${2}\"\n+  fi\n+\n+  sha256_check \"${3}\" \"${2}\"\n+}\n+\n+mkdir -p \"${BDB_PREFIX}\"\n+http_get \"${BDB_URL}\" \"${BDB_VERSION}.tar.gz\" \"${BDB_HASH}\"\n+tar -xzvf ${BDB_VERSION}.tar.gz -C \"$BDB_PREFIX\"\n+cd \"${BDB_PREFIX}/${BDB_VERSION}/\"\n+\n+# Apply a patch necessary when building with clang and c++11 (see https://community.oracle.com/thread/3952592)\n+CLANG_CXX11_PATCH_URL='https://gist.githubusercontent.com/LnL7/5153b251fd525fe15de69b67e63a6075/raw/7778e9364679093a32dec2908656738e16b6bdcb/clang.patch'\n+CLANG_CXX11_PATCH_HASH='7a9a47b03fd5fb93a16ef42235fa9512db9b0829cfc3bdf90edd3ec1f44d637c'\n+http_get \"${CLANG_CXX11_PATCH_URL}\" clang.patch \"${CLANG_CXX11_PATCH_HASH}\"\n+patch -p2 < clang.patch\n+\n+cd build_unix/\n+\n+\"${BDB_PREFIX}/${BDB_VERSION}/dist/configure\" \\\n+  --enable-cxx --disable-shared --disable-replication --with-pic --prefix=\"${BDB_PREFIX}\" \\\n+  \"${@}\"\n+\n+make install\n+\n+echo\n+echo \"db4 build complete.\"\n+echo\n+echo 'When compiling bitcoind, run `./configure` in the following way:'\n+echo\n+echo \"  export BDB_PREFIX='${BDB_PREFIX}'\"\n+echo '  ./configure BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" ...'"
      },
      {
        "sha": "2985106982788c8bfa31ee077b05e8e77ba19e72",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -46,7 +46,7 @@ linearize-hashes.py.\n (Default: `1000*1000*1000 bytes`)\n * `netmagic`: Network magic number.\n * `out_of_order_cache_sz`: If out-of-order blocks are being read, the block can\n-be written to a cache so that the blockchain doesn't have to be seeked again.\n+be written to a cache so that the blockchain doesn't have to be sought again.\n This option specifies the cache size. (Default: `100*1000*1000 bytes`)\n * `rev_hash_bytes`: If true, the block hash list written by linearize-hashes.py\n will be byte-reversed when read by linearize-data.py. See the linearize-hashes"
      },
      {
        "sha": "2315898bf1d7561260fe3a3b5c1dd21c09ca0d9b",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -3,9 +3,16 @@ rpcuser=someuser\n rpcpassword=somepassword\n #datadir=~/.bitcoin\n host=127.0.0.1\n+\n+#mainnet default\n port=8332\n+\n+#testnet default\n #port=18332\n \n+#regtest default\n+#port=18443\n+\n # bootstrap.dat hashlist settings (linearize-hashes)\n max_height=313000\n "
      },
      {
        "sha": "b6ead4a166a92a2e29c049be45c1cb97fd06e750",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 267,
        "deletions": 268,
        "changes": 535,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -2,7 +2,7 @@\n #\n # linearize-data.py: Construct a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2013-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -21,302 +21,301 @@\n \n settings = {}\n \n-##### Switch endian-ness #####\n def hex_switchEndian(s):\n-\t\"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n-\tpairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n-\treturn b''.join(pairList[::-1]).decode()\n+    \"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n+    pairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n+    return b''.join(pairList[::-1]).decode()\n \n def uint32(x):\n-\treturn x & 0xffffffff\n+    return x & 0xffffffff\n \n def bytereverse(x):\n-\treturn uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n-\t\t       (((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n+    return uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n+               (((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n \n def bufreverse(in_buf):\n-\tout_words = []\n-\tfor i in range(0, len(in_buf), 4):\n-\t\tword = struct.unpack('@I', in_buf[i:i+4])[0]\n-\t\tout_words.append(struct.pack('@I', bytereverse(word)))\n-\treturn b''.join(out_words)\n+    out_words = []\n+    for i in range(0, len(in_buf), 4):\n+        word = struct.unpack('@I', in_buf[i:i+4])[0]\n+        out_words.append(struct.pack('@I', bytereverse(word)))\n+    return b''.join(out_words)\n \n def wordreverse(in_buf):\n-\tout_words = []\n-\tfor i in range(0, len(in_buf), 4):\n-\t\tout_words.append(in_buf[i:i+4])\n-\tout_words.reverse()\n-\treturn b''.join(out_words)\n+    out_words = []\n+    for i in range(0, len(in_buf), 4):\n+        out_words.append(in_buf[i:i+4])\n+    out_words.reverse()\n+    return b''.join(out_words)\n \n def calc_hdr_hash(blk_hdr):\n-\thash1 = hashlib.sha256()\n-\thash1.update(blk_hdr)\n-\thash1_o = hash1.digest()\n+    hash1 = hashlib.sha256()\n+    hash1.update(blk_hdr)\n+    hash1_o = hash1.digest()\n \n-\thash2 = hashlib.sha256()\n-\thash2.update(hash1_o)\n-\thash2_o = hash2.digest()\n+    hash2 = hashlib.sha256()\n+    hash2.update(hash1_o)\n+    hash2_o = hash2.digest()\n \n-\treturn hash2_o\n+    return hash2_o\n \n def calc_hash_str(blk_hdr):\n-\thash = calc_hdr_hash(blk_hdr)\n-\thash = bufreverse(hash)\n-\thash = wordreverse(hash)\n-\thash_str = hexlify(hash).decode('utf-8')\n-\treturn hash_str\n+    hash = calc_hdr_hash(blk_hdr)\n+    hash = bufreverse(hash)\n+    hash = wordreverse(hash)\n+    hash_str = hexlify(hash).decode('utf-8')\n+    return hash_str\n \n def get_blk_dt(blk_hdr):\n-\tmembers = struct.unpack(\"<I\", blk_hdr[68:68+4])\n-\tnTime = members[0]\n-\tdt = datetime.datetime.fromtimestamp(nTime)\n-\tdt_ym = datetime.datetime(dt.year, dt.month, 1)\n-\treturn (dt_ym, nTime)\n+    members = struct.unpack(\"<I\", blk_hdr[68:68+4])\n+    nTime = members[0]\n+    dt = datetime.datetime.fromtimestamp(nTime)\n+    dt_ym = datetime.datetime(dt.year, dt.month, 1)\n+    return (dt_ym, nTime)\n \n # When getting the list of block hashes, undo any byte reversals.\n def get_block_hashes(settings):\n-\tblkindex = []\n-\tf = open(settings['hashlist'], \"r\")\n-\tfor line in f:\n-\t\tline = line.rstrip()\n-\t\tif settings['rev_hash_bytes'] == 'true':\n-\t\t\tline = hex_switchEndian(line)\n-\t\tblkindex.append(line)\n+    blkindex = []\n+    f = open(settings['hashlist'], \"r\", encoding=\"utf8\")\n+    for line in f:\n+        line = line.rstrip()\n+        if settings['rev_hash_bytes'] == 'true':\n+            line = hex_switchEndian(line)\n+        blkindex.append(line)\n \n-\tprint(\"Read \" + str(len(blkindex)) + \" hashes\")\n+    print(\"Read \" + str(len(blkindex)) + \" hashes\")\n \n-\treturn blkindex\n+    return blkindex\n \n # The block map shouldn't give or receive byte-reversed hashes.\n def mkblockmap(blkindex):\n-\tblkmap = {}\n-\tfor height,hash in enumerate(blkindex):\n-\t\tblkmap[hash] = height\n-\treturn blkmap\n+    blkmap = {}\n+    for height,hash in enumerate(blkindex):\n+        blkmap[hash] = height\n+    return blkmap\n \n # Block header and extent on disk\n BlockExtent = namedtuple('BlockExtent', ['fn', 'offset', 'inhdr', 'blkhdr', 'size'])\n \n class BlockDataCopier:\n-\tdef __init__(self, settings, blkindex, blkmap):\n-\t\tself.settings = settings\n-\t\tself.blkindex = blkindex\n-\t\tself.blkmap = blkmap\n-\n-\t\tself.inFn = 0\n-\t\tself.inF = None\n-\t\tself.outFn = 0\n-\t\tself.outsz = 0\n-\t\tself.outF = None\n-\t\tself.outFname = None\n-\t\tself.blkCountIn = 0\n-\t\tself.blkCountOut = 0\n-\n-\t\tself.lastDate = datetime.datetime(2000, 1, 1)\n-\t\tself.highTS = 1408893517 - 315360000\n-\t\tself.timestampSplit = False\n-\t\tself.fileOutput = True\n-\t\tself.setFileTime = False\n-\t\tself.maxOutSz = settings['max_out_sz']\n-\t\tif 'output' in settings:\n-\t\t\tself.fileOutput = False\n-\t\tif settings['file_timestamp'] != 0:\n-\t\t\tself.setFileTime = True\n-\t\tif settings['split_timestamp'] != 0:\n-\t\t\tself.timestampSplit = True\n-\t\t# Extents and cache for out-of-order blocks\n-\t\tself.blockExtents = {}\n-\t\tself.outOfOrderData = {}\n-\t\tself.outOfOrderSize = 0 # running total size for items in outOfOrderData\n-\n-\tdef writeBlock(self, inhdr, blk_hdr, rawblock):\n-\t\tblockSizeOnDisk = len(inhdr) + len(blk_hdr) + len(rawblock)\n-\t\tif not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n-\t\t\tself.outF.close()\n-\t\t\tif self.setFileTime:\n-\t\t\t\tos.utime(self.outFname, (int(time.time()), self.highTS))\n-\t\t\tself.outF = None\n-\t\t\tself.outFname = None\n-\t\t\tself.outFn = self.outFn + 1\n-\t\t\tself.outsz = 0\n-\n-\t\t(blkDate, blkTS) = get_blk_dt(blk_hdr)\n-\t\tif self.timestampSplit and (blkDate > self.lastDate):\n-\t\t\tprint(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + self.hash_str)\n-\t\t\tself.lastDate = blkDate\n-\t\t\tif self.outF:\n-\t\t\t\tself.outF.close()\n-\t\t\t\tif self.setFileTime:\n-\t\t\t\t\tos.utime(self.outFname, (int(time.time()), self.highTS))\n-\t\t\t\tself.outF = None\n-\t\t\t\tself.outFname = None\n-\t\t\t\tself.outFn = self.outFn + 1\n-\t\t\t\tself.outsz = 0\n-\n-\t\tif not self.outF:\n-\t\t\tif self.fileOutput:\n-\t\t\t\tself.outFname = self.settings['output_file']\n-\t\t\telse:\n-\t\t\t\tself.outFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n-\t\t\tprint(\"Output file \" + self.outFname)\n-\t\t\tself.outF = open(self.outFname, \"wb\")\n-\n-\t\tself.outF.write(inhdr)\n-\t\tself.outF.write(blk_hdr)\n-\t\tself.outF.write(rawblock)\n-\t\tself.outsz = self.outsz + len(inhdr) + len(blk_hdr) + len(rawblock)\n-\n-\t\tself.blkCountOut = self.blkCountOut + 1\n-\t\tif blkTS > self.highTS:\n-\t\t\tself.highTS = blkTS\n-\n-\t\tif (self.blkCountOut % 1000) == 0:\n-\t\t\tprint('%i blocks scanned, %i blocks written (of %i, %.1f%% complete)' % \n-\t\t\t\t\t(self.blkCountIn, self.blkCountOut, len(self.blkindex), 100.0 * self.blkCountOut / len(self.blkindex)))\n-\n-\tdef inFileName(self, fn):\n-\t\treturn os.path.join(self.settings['input'], \"blk%05d.dat\" % fn)\n-\n-\tdef fetchBlock(self, extent):\n-\t\t'''Fetch block contents from disk given extents'''\n-\t\twith open(self.inFileName(extent.fn), \"rb\") as f:\n-\t\t\tf.seek(extent.offset)\n-\t\t\treturn f.read(extent.size)\n-\n-\tdef copyOneBlock(self):\n-\t\t'''Find the next block to be written in the input, and copy it to the output.'''\n-\t\textent = self.blockExtents.pop(self.blkCountOut)\n-\t\tif self.blkCountOut in self.outOfOrderData:\n-\t\t\t# If the data is cached, use it from memory and remove from the cache\n-\t\t\trawblock = self.outOfOrderData.pop(self.blkCountOut)\n-\t\t\tself.outOfOrderSize -= len(rawblock)\n-\t\telse: # Otherwise look up data on disk\n-\t\t\trawblock = self.fetchBlock(extent)\n-\n-\t\tself.writeBlock(extent.inhdr, extent.blkhdr, rawblock)\n-\n-\tdef run(self):\n-\t\twhile self.blkCountOut < len(self.blkindex):\n-\t\t\tif not self.inF:\n-\t\t\t\tfname = self.inFileName(self.inFn)\n-\t\t\t\tprint(\"Input file \" + fname)\n-\t\t\t\ttry:\n-\t\t\t\t\tself.inF = open(fname, \"rb\")\n-\t\t\t\texcept IOError:\n-\t\t\t\t\tprint(\"Premature end of block data\")\n-\t\t\t\t\treturn\n-\n-\t\t\tinhdr = self.inF.read(8)\n-\t\t\tif (not inhdr or (inhdr[0] == \"\\0\")):\n-\t\t\t\tself.inF.close()\n-\t\t\t\tself.inF = None\n-\t\t\t\tself.inFn = self.inFn + 1\n-\t\t\t\tcontinue\n-\n-\t\t\tinMagic = inhdr[:4]\n-\t\t\tif (inMagic != self.settings['netmagic']):\n-\t\t\t\tprint(\"Invalid magic: \" + hexlify(inMagic).decode('utf-8'))\n-\t\t\t\treturn\n-\t\t\tinLenLE = inhdr[4:]\n-\t\t\tsu = struct.unpack(\"<I\", inLenLE)\n-\t\t\tinLen = su[0] - 80 # length without header\n-\t\t\tblk_hdr = self.inF.read(80)\n-\t\t\tinExtent = BlockExtent(self.inFn, self.inF.tell(), inhdr, blk_hdr, inLen)\n-\n-\t\t\tself.hash_str = calc_hash_str(blk_hdr)\n-\t\t\tif not self.hash_str in blkmap:\n-\t\t\t\t# Because blocks can be written to files out-of-order as of 0.10, the script\n-\t\t\t\t# may encounter blocks it doesn't know about. Treat as debug output.\n-\t\t\t\tif settings['debug_output'] == 'true':\n-\t\t\t\t\tprint(\"Skipping unknown block \" + self.hash_str)\n-\t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n-\t\t\t\tcontinue\n-\n-\t\t\tblkHeight = self.blkmap[self.hash_str]\n-\t\t\tself.blkCountIn += 1\n-\n-\t\t\tif self.blkCountOut == blkHeight:\n-\t\t\t\t# If in-order block, just copy\n-\t\t\t\trawblock = self.inF.read(inLen)\n-\t\t\t\tself.writeBlock(inhdr, blk_hdr, rawblock)\n-\n-\t\t\t\t# See if we can catch up to prior out-of-order blocks\n-\t\t\t\twhile self.blkCountOut in self.blockExtents:\n-\t\t\t\t\tself.copyOneBlock()\n-\n-\t\t\telse: # If out-of-order, skip over block data for now\n-\t\t\t\tself.blockExtents[blkHeight] = inExtent\n-\t\t\t\tif self.outOfOrderSize < self.settings['out_of_order_cache_sz']:\n-\t\t\t\t\t# If there is space in the cache, read the data\n-\t\t\t\t\t# Reading the data in file sequence instead of seeking and fetching it later is preferred,\n-\t\t\t\t\t# but we don't want to fill up memory\n-\t\t\t\t\tself.outOfOrderData[blkHeight] = self.inF.read(inLen)\n-\t\t\t\t\tself.outOfOrderSize += inLen\n-\t\t\t\telse: # If no space in cache, seek forward\n-\t\t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n-\n-\t\tprint(\"Done (%i blocks written)\" % (self.blkCountOut))\n+    def __init__(self, settings, blkindex, blkmap):\n+        self.settings = settings\n+        self.blkindex = blkindex\n+        self.blkmap = blkmap\n+\n+        self.inFn = 0\n+        self.inF = None\n+        self.outFn = 0\n+        self.outsz = 0\n+        self.outF = None\n+        self.outFname = None\n+        self.blkCountIn = 0\n+        self.blkCountOut = 0\n+\n+        self.lastDate = datetime.datetime(2000, 1, 1)\n+        self.highTS = 1408893517 - 315360000\n+        self.timestampSplit = False\n+        self.fileOutput = True\n+        self.setFileTime = False\n+        self.maxOutSz = settings['max_out_sz']\n+        if 'output' in settings:\n+            self.fileOutput = False\n+        if settings['file_timestamp'] != 0:\n+            self.setFileTime = True\n+        if settings['split_timestamp'] != 0:\n+            self.timestampSplit = True\n+        # Extents and cache for out-of-order blocks\n+        self.blockExtents = {}\n+        self.outOfOrderData = {}\n+        self.outOfOrderSize = 0 # running total size for items in outOfOrderData\n+\n+    def writeBlock(self, inhdr, blk_hdr, rawblock):\n+        blockSizeOnDisk = len(inhdr) + len(blk_hdr) + len(rawblock)\n+        if not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n+            self.outF.close()\n+            if self.setFileTime:\n+                os.utime(self.outFname, (int(time.time()), self.highTS))\n+            self.outF = None\n+            self.outFname = None\n+            self.outFn = self.outFn + 1\n+            self.outsz = 0\n+\n+        (blkDate, blkTS) = get_blk_dt(blk_hdr)\n+        if self.timestampSplit and (blkDate > self.lastDate):\n+            print(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + self.hash_str)\n+            self.lastDate = blkDate\n+            if self.outF:\n+                self.outF.close()\n+                if self.setFileTime:\n+                    os.utime(self.outFname, (int(time.time()), self.highTS))\n+                self.outF = None\n+                self.outFname = None\n+                self.outFn = self.outFn + 1\n+                self.outsz = 0\n+\n+        if not self.outF:\n+            if self.fileOutput:\n+                self.outFname = self.settings['output_file']\n+            else:\n+                self.outFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n+            print(\"Output file \" + self.outFname)\n+            self.outF = open(self.outFname, \"wb\")\n+\n+        self.outF.write(inhdr)\n+        self.outF.write(blk_hdr)\n+        self.outF.write(rawblock)\n+        self.outsz = self.outsz + len(inhdr) + len(blk_hdr) + len(rawblock)\n+\n+        self.blkCountOut = self.blkCountOut + 1\n+        if blkTS > self.highTS:\n+            self.highTS = blkTS\n+\n+        if (self.blkCountOut % 1000) == 0:\n+            print('%i blocks scanned, %i blocks written (of %i, %.1f%% complete)' %\n+                    (self.blkCountIn, self.blkCountOut, len(self.blkindex), 100.0 * self.blkCountOut / len(self.blkindex)))\n+\n+    def inFileName(self, fn):\n+        return os.path.join(self.settings['input'], \"blk%05d.dat\" % fn)\n+\n+    def fetchBlock(self, extent):\n+        '''Fetch block contents from disk given extents'''\n+        with open(self.inFileName(extent.fn), \"rb\") as f:\n+            f.seek(extent.offset)\n+            return f.read(extent.size)\n+\n+    def copyOneBlock(self):\n+        '''Find the next block to be written in the input, and copy it to the output.'''\n+        extent = self.blockExtents.pop(self.blkCountOut)\n+        if self.blkCountOut in self.outOfOrderData:\n+            # If the data is cached, use it from memory and remove from the cache\n+            rawblock = self.outOfOrderData.pop(self.blkCountOut)\n+            self.outOfOrderSize -= len(rawblock)\n+        else: # Otherwise look up data on disk\n+            rawblock = self.fetchBlock(extent)\n+\n+        self.writeBlock(extent.inhdr, extent.blkhdr, rawblock)\n+\n+    def run(self):\n+        while self.blkCountOut < len(self.blkindex):\n+            if not self.inF:\n+                fname = self.inFileName(self.inFn)\n+                print(\"Input file \" + fname)\n+                try:\n+                    self.inF = open(fname, \"rb\")\n+                except IOError:\n+                    print(\"Premature end of block data\")\n+                    return\n+\n+            inhdr = self.inF.read(8)\n+            if (not inhdr or (inhdr[0] == \"\\0\")):\n+                self.inF.close()\n+                self.inF = None\n+                self.inFn = self.inFn + 1\n+                continue\n+\n+            inMagic = inhdr[:4]\n+            if (inMagic != self.settings['netmagic']):\n+                print(\"Invalid magic: \" + hexlify(inMagic).decode('utf-8'))\n+                return\n+            inLenLE = inhdr[4:]\n+            su = struct.unpack(\"<I\", inLenLE)\n+            inLen = su[0] - 80 # length without header\n+            blk_hdr = self.inF.read(80)\n+            inExtent = BlockExtent(self.inFn, self.inF.tell(), inhdr, blk_hdr, inLen)\n+\n+            self.hash_str = calc_hash_str(blk_hdr)\n+            if not self.hash_str in blkmap:\n+                # Because blocks can be written to files out-of-order as of 0.10, the script\n+                # may encounter blocks it doesn't know about. Treat as debug output.\n+                if settings['debug_output'] == 'true':\n+                    print(\"Skipping unknown block \" + self.hash_str)\n+                self.inF.seek(inLen, os.SEEK_CUR)\n+                continue\n+\n+            blkHeight = self.blkmap[self.hash_str]\n+            self.blkCountIn += 1\n+\n+            if self.blkCountOut == blkHeight:\n+                # If in-order block, just copy\n+                rawblock = self.inF.read(inLen)\n+                self.writeBlock(inhdr, blk_hdr, rawblock)\n+\n+                # See if we can catch up to prior out-of-order blocks\n+                while self.blkCountOut in self.blockExtents:\n+                    self.copyOneBlock()\n+\n+            else: # If out-of-order, skip over block data for now\n+                self.blockExtents[blkHeight] = inExtent\n+                if self.outOfOrderSize < self.settings['out_of_order_cache_sz']:\n+                    # If there is space in the cache, read the data\n+                    # Reading the data in file sequence instead of seeking and fetching it later is preferred,\n+                    # but we don't want to fill up memory\n+                    self.outOfOrderData[blkHeight] = self.inF.read(inLen)\n+                    self.outOfOrderSize += inLen\n+                else: # If no space in cache, seek forward\n+                    self.inF.seek(inLen, os.SEEK_CUR)\n+\n+        print(\"Done (%i blocks written)\" % (self.blkCountOut))\n \n if __name__ == '__main__':\n-\tif len(sys.argv) != 2:\n-\t\tprint(\"Usage: linearize-data.py CONFIG-FILE\")\n-\t\tsys.exit(1)\n-\n-\tf = open(sys.argv[1])\n-\tfor line in f:\n-\t\t# skip comment lines\n-\t\tm = re.search('^\\s*#', line)\n-\t\tif m:\n-\t\t\tcontinue\n-\n-\t\t# parse key=value lines\n-\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-\t\tif m is None:\n-\t\t\tcontinue\n-\t\tsettings[m.group(1)] = m.group(2)\n-\tf.close()\n-\n-\t# Force hash byte format setting to be lowercase to make comparisons easier.\n-\t# Also place upfront in case any settings need to know about it.\n-\tif 'rev_hash_bytes' not in settings:\n-\t\tsettings['rev_hash_bytes'] = 'false'\n-\tsettings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n-\n-\tif 'netmagic' not in settings:\n-\t\tsettings['netmagic'] = 'f9beb4d9'\n-\tif 'genesis' not in settings:\n-\t\tsettings['genesis'] = '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f'\n-\tif 'input' not in settings:\n-\t\tsettings['input'] = 'input'\n-\tif 'hashlist' not in settings:\n-\t\tsettings['hashlist'] = 'hashlist.txt'\n-\tif 'file_timestamp' not in settings:\n-\t\tsettings['file_timestamp'] = 0\n-\tif 'split_timestamp' not in settings:\n-\t\tsettings['split_timestamp'] = 0\n-\tif 'max_out_sz' not in settings:\n-\t\tsettings['max_out_sz'] = 1000 * 1000 * 1000\n-\tif 'out_of_order_cache_sz' not in settings:\n-\t\tsettings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n-\tif 'debug_output' not in settings:\n-\t\tsettings['debug_output'] = 'false'\n-\n-\tsettings['max_out_sz'] = int(settings['max_out_sz'])\n-\tsettings['split_timestamp'] = int(settings['split_timestamp'])\n-\tsettings['file_timestamp'] = int(settings['file_timestamp'])\n-\tsettings['netmagic'] = unhexlify(settings['netmagic'].encode('utf-8'))\n-\tsettings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n-\tsettings['debug_output'] = settings['debug_output'].lower()\n-\n-\tif 'output_file' not in settings and 'output' not in settings:\n-\t\tprint(\"Missing output file / directory\")\n-\t\tsys.exit(1)\n-\n-\tblkindex = get_block_hashes(settings)\n-\tblkmap = mkblockmap(blkindex)\n-\n-\t# Block hash map won't be byte-reversed. Neither should the genesis hash.\n-\tif not settings['genesis'] in blkmap:\n-\t\tprint(\"Genesis block not found in hashlist\")\n-\telse:\n-\t\tBlockDataCopier(settings, blkindex, blkmap).run()\n+    if len(sys.argv) != 2:\n+        print(\"Usage: linearize-data.py CONFIG-FILE\")\n+        sys.exit(1)\n+\n+    f = open(sys.argv[1], encoding=\"utf8\")\n+    for line in f:\n+        # skip comment lines\n+        m = re.search('^\\s*#', line)\n+        if m:\n+            continue\n+\n+        # parse key=value lines\n+        m = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+        if m is None:\n+            continue\n+        settings[m.group(1)] = m.group(2)\n+    f.close()\n+\n+    # Force hash byte format setting to be lowercase to make comparisons easier.\n+    # Also place upfront in case any settings need to know about it.\n+    if 'rev_hash_bytes' not in settings:\n+        settings['rev_hash_bytes'] = 'false'\n+    settings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n+\n+    if 'netmagic' not in settings:\n+        settings['netmagic'] = 'f9beb4d9'\n+    if 'genesis' not in settings:\n+        settings['genesis'] = '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f'\n+    if 'input' not in settings:\n+        settings['input'] = 'input'\n+    if 'hashlist' not in settings:\n+        settings['hashlist'] = 'hashlist.txt'\n+    if 'file_timestamp' not in settings:\n+        settings['file_timestamp'] = 0\n+    if 'split_timestamp' not in settings:\n+        settings['split_timestamp'] = 0\n+    if 'max_out_sz' not in settings:\n+        settings['max_out_sz'] = 1000 * 1000 * 1000\n+    if 'out_of_order_cache_sz' not in settings:\n+        settings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n+    if 'debug_output' not in settings:\n+        settings['debug_output'] = 'false'\n+\n+    settings['max_out_sz'] = int(settings['max_out_sz'])\n+    settings['split_timestamp'] = int(settings['split_timestamp'])\n+    settings['file_timestamp'] = int(settings['file_timestamp'])\n+    settings['netmagic'] = unhexlify(settings['netmagic'].encode('utf-8'))\n+    settings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n+    settings['debug_output'] = settings['debug_output'].lower()\n+\n+    if 'output_file' not in settings and 'output' not in settings:\n+        print(\"Missing output file / directory\")\n+        sys.exit(1)\n+\n+    blkindex = get_block_hashes(settings)\n+    blkmap = mkblockmap(blkindex)\n+\n+    # Block hash map won't be byte-reversed. Neither should the genesis hash.\n+    if not settings['genesis'] in blkmap:\n+        print(\"Genesis block not found in hashlist\")\n+    else:\n+        BlockDataCopier(settings, blkindex, blkmap).run()"
      },
      {
        "sha": "911c3c959dd2539ae8fd54c0ec7e3f30d305474d",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "modified",
        "additions": 125,
        "deletions": 126,
        "changes": 251,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -2,7 +2,7 @@\n #\n # linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2013-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -21,137 +21,136 @@\n \n settings = {}\n \n-##### Switch endian-ness #####\n def hex_switchEndian(s):\n-\t\"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n-\tpairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n-\treturn b''.join(pairList[::-1]).decode()\n+    \"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n+    pairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n+    return b''.join(pairList[::-1]).decode()\n \n class BitcoinRPC:\n-\tdef __init__(self, host, port, username, password):\n-\t\tauthpair = \"%s:%s\" % (username, password)\n-\t\tauthpair = authpair.encode('utf-8')\n-\t\tself.authhdr = b\"Basic \" + base64.b64encode(authpair)\n-\t\tself.conn = httplib.HTTPConnection(host, port=port, timeout=30)\n-\n-\tdef execute(self, obj):\n-\t\ttry:\n-\t\t\tself.conn.request('POST', '/', json.dumps(obj),\n-\t\t\t\t{ 'Authorization' : self.authhdr,\n-\t\t\t\t  'Content-type' : 'application/json' })\n-\t\texcept ConnectionRefusedError:\n-\t\t\tprint('RPC connection refused. Check RPC settings and the server status.',\n-\t\t\t      file=sys.stderr)\n-\t\t\treturn None\n-\n-\t\tresp = self.conn.getresponse()\n-\t\tif resp is None:\n-\t\t\tprint(\"JSON-RPC: no response\", file=sys.stderr)\n-\t\t\treturn None\n-\n-\t\tbody = resp.read().decode('utf-8')\n-\t\tresp_obj = json.loads(body)\n-\t\treturn resp_obj\n-\n-\t@staticmethod\n-\tdef build_request(idx, method, params):\n-\t\tobj = { 'version' : '1.1',\n-\t\t\t'method' : method,\n-\t\t\t'id' : idx }\n-\t\tif params is None:\n-\t\t\tobj['params'] = []\n-\t\telse:\n-\t\t\tobj['params'] = params\n-\t\treturn obj\n-\n-\t@staticmethod\n-\tdef response_is_error(resp_obj):\n-\t\treturn 'error' in resp_obj and resp_obj['error'] is not None\n+    def __init__(self, host, port, username, password):\n+        authpair = \"%s:%s\" % (username, password)\n+        authpair = authpair.encode('utf-8')\n+        self.authhdr = b\"Basic \" + base64.b64encode(authpair)\n+        self.conn = httplib.HTTPConnection(host, port=port, timeout=30)\n+\n+    def execute(self, obj):\n+        try:\n+            self.conn.request('POST', '/', json.dumps(obj),\n+                { 'Authorization' : self.authhdr,\n+                  'Content-type' : 'application/json' })\n+        except ConnectionRefusedError:\n+            print('RPC connection refused. Check RPC settings and the server status.',\n+                  file=sys.stderr)\n+            return None\n+\n+        resp = self.conn.getresponse()\n+        if resp is None:\n+            print(\"JSON-RPC: no response\", file=sys.stderr)\n+            return None\n+\n+        body = resp.read().decode('utf-8')\n+        resp_obj = json.loads(body)\n+        return resp_obj\n+\n+    @staticmethod\n+    def build_request(idx, method, params):\n+        obj = { 'version' : '1.1',\n+            'method' : method,\n+            'id' : idx }\n+        if params is None:\n+            obj['params'] = []\n+        else:\n+            obj['params'] = params\n+        return obj\n+\n+    @staticmethod\n+    def response_is_error(resp_obj):\n+        return 'error' in resp_obj and resp_obj['error'] is not None\n \n def get_block_hashes(settings, max_blocks_per_call=10000):\n-\trpc = BitcoinRPC(settings['host'], settings['port'],\n-\t\t\t settings['rpcuser'], settings['rpcpassword'])\n-\n-\theight = settings['min_height']\n-\twhile height < settings['max_height']+1:\n-\t\tnum_blocks = min(settings['max_height']+1-height, max_blocks_per_call)\n-\t\tbatch = []\n-\t\tfor x in range(num_blocks):\n-\t\t\tbatch.append(rpc.build_request(x, 'getblockhash', [height + x]))\n-\n-\t\treply = rpc.execute(batch)\n-\t\tif reply is None:\n-\t\t\tprint('Cannot continue. Program will halt.')\n-\t\t\treturn None\n-\n-\t\tfor x,resp_obj in enumerate(reply):\n-\t\t\tif rpc.response_is_error(resp_obj):\n-\t\t\t\tprint('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n-\t\t\t\texit(1)\n-\t\t\tassert(resp_obj['id'] == x) # assume replies are in-sequence\n-\t\t\tif settings['rev_hash_bytes'] == 'true':\n-\t\t\t\tresp_obj['result'] = hex_switchEndian(resp_obj['result'])\n-\t\t\tprint(resp_obj['result'])\n-\n-\t\theight += num_blocks\n+    rpc = BitcoinRPC(settings['host'], settings['port'],\n+             settings['rpcuser'], settings['rpcpassword'])\n+\n+    height = settings['min_height']\n+    while height < settings['max_height']+1:\n+        num_blocks = min(settings['max_height']+1-height, max_blocks_per_call)\n+        batch = []\n+        for x in range(num_blocks):\n+            batch.append(rpc.build_request(x, 'getblockhash', [height + x]))\n+\n+        reply = rpc.execute(batch)\n+        if reply is None:\n+            print('Cannot continue. Program will halt.')\n+            return None\n+\n+        for x,resp_obj in enumerate(reply):\n+            if rpc.response_is_error(resp_obj):\n+                print('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n+                sys.exit(1)\n+            assert(resp_obj['id'] == x) # assume replies are in-sequence\n+            if settings['rev_hash_bytes'] == 'true':\n+                resp_obj['result'] = hex_switchEndian(resp_obj['result'])\n+            print(resp_obj['result'])\n+\n+        height += num_blocks\n \n def get_rpc_cookie():\n-\t# Open the cookie file\n-\twith open(os.path.join(os.path.expanduser(settings['datadir']), '.cookie'), 'r') as f:\n-\t\tcombined = f.readline()\n-\t\tcombined_split = combined.split(\":\")\n-\t\tsettings['rpcuser'] = combined_split[0]\n-\t\tsettings['rpcpassword'] = combined_split[1]\n+    # Open the cookie file\n+    with open(os.path.join(os.path.expanduser(settings['datadir']), '.cookie'), 'r', encoding=\"ascii\") as f:\n+        combined = f.readline()\n+        combined_split = combined.split(\":\")\n+        settings['rpcuser'] = combined_split[0]\n+        settings['rpcpassword'] = combined_split[1]\n \n if __name__ == '__main__':\n-\tif len(sys.argv) != 2:\n-\t\tprint(\"Usage: linearize-hashes.py CONFIG-FILE\")\n-\t\tsys.exit(1)\n-\n-\tf = open(sys.argv[1])\n-\tfor line in f:\n-\t\t# skip comment lines\n-\t\tm = re.search('^\\s*#', line)\n-\t\tif m:\n-\t\t\tcontinue\n-\n-\t\t# parse key=value lines\n-\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-\t\tif m is None:\n-\t\t\tcontinue\n-\t\tsettings[m.group(1)] = m.group(2)\n-\tf.close()\n-\n-\tif 'host' not in settings:\n-\t\tsettings['host'] = '127.0.0.1'\n-\tif 'port' not in settings:\n-\t\tsettings['port'] = 8332\n-\tif 'min_height' not in settings:\n-\t\tsettings['min_height'] = 0\n-\tif 'max_height' not in settings:\n-\t\tsettings['max_height'] = 313000\n-\tif 'rev_hash_bytes' not in settings:\n-\t\tsettings['rev_hash_bytes'] = 'false'\n-\n-\tuse_userpass = True\n-\tuse_datadir = False\n-\tif 'rpcuser' not in settings or 'rpcpassword' not in settings:\n-\t\tuse_userpass = False\n-\tif 'datadir' in settings and not use_userpass:\n-\t\tuse_datadir = True\n-\tif not use_userpass and not use_datadir:\n-\t\tprint(\"Missing datadir or username and/or password in cfg file\", file=stderr)\n-\t\tsys.exit(1)\n-\n-\tsettings['port'] = int(settings['port'])\n-\tsettings['min_height'] = int(settings['min_height'])\n-\tsettings['max_height'] = int(settings['max_height'])\n-\n-\t# Force hash byte format setting to be lowercase to make comparisons easier.\n-\tsettings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n-\n-\t# Get the rpc user and pass from the cookie if the datadir is set\n-\tif use_datadir:\n-\t\tget_rpc_cookie()\n-\n-\tget_block_hashes(settings)\n+    if len(sys.argv) != 2:\n+        print(\"Usage: linearize-hashes.py CONFIG-FILE\")\n+        sys.exit(1)\n+\n+    f = open(sys.argv[1], encoding=\"utf8\")\n+    for line in f:\n+        # skip comment lines\n+        m = re.search('^\\s*#', line)\n+        if m:\n+            continue\n+\n+        # parse key=value lines\n+        m = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+        if m is None:\n+            continue\n+        settings[m.group(1)] = m.group(2)\n+    f.close()\n+\n+    if 'host' not in settings:\n+        settings['host'] = '127.0.0.1'\n+    if 'port' not in settings:\n+        settings['port'] = 8332\n+    if 'min_height' not in settings:\n+        settings['min_height'] = 0\n+    if 'max_height' not in settings:\n+        settings['max_height'] = 313000\n+    if 'rev_hash_bytes' not in settings:\n+        settings['rev_hash_bytes'] = 'false'\n+\n+    use_userpass = True\n+    use_datadir = False\n+    if 'rpcuser' not in settings or 'rpcpassword' not in settings:\n+        use_userpass = False\n+    if 'datadir' in settings and not use_userpass:\n+        use_datadir = True\n+    if not use_userpass and not use_datadir:\n+        print(\"Missing datadir or username and/or password in cfg file\", file=sys.stderr)\n+        sys.exit(1)\n+\n+    settings['port'] = int(settings['port'])\n+    settings['min_height'] = int(settings['min_height'])\n+    settings['max_height'] = int(settings['max_height'])\n+\n+    # Force hash byte format setting to be lowercase to make comparisons easier.\n+    settings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n+\n+    # Get the rpc user and pass from the cookie if the datadir is set\n+    if use_datadir:\n+        get_rpc_cookie()\n+\n+    get_block_hashes(settings)"
      },
      {
        "sha": "6fa134972a6a7bf3181c6a0e8ac68ff1a0816b3b",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,8 +1,7 @@\n-#!/usr/bin/env python\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n+#!/usr/bin/env python3\n+# Copyright (c) 2013-2017 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-from __future__ import division,print_function,unicode_literals\n import biplist\n from ds_store import DSStore\n from mac_alias import Alias"
      },
      {
        "sha": "f8503e4de8c52dcef54d46c7861143fd53a7ee1a",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -3,6 +3,7 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+export LC_ALL=C\n set -e\n \n UNSIGNED=\"$1\""
      },
      {
        "sha": "5281ebcc47dc62c0165453c3fbecde5b1c58900b",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -3,6 +3,7 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+export LC_ALL=C\n set -e\n \n ROOTDIR=dist\n@@ -40,7 +41,7 @@ grep CodeResources < \"${TEMPLIST}\" | while read i; do\n   RESOURCE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}\"\n   DIRNAME=\"`dirname \"${RESOURCE}\"`\"\n   mkdir -p \"${DIRNAME}\"\n-  echo \"Adding resource for: \"${TARGETFILE}\"\"\n+  echo \"Adding resource for: \\\"${TARGETFILE}\\\"\"\n   cp \"${i}\" \"${RESOURCE}\"\n done\n "
      },
      {
        "sha": "4c175156f4e4bc2f96fc220d4d13bf39f9fb6419",
        "filename": "contrib/macdeploy/extract-osx-sdk.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/macdeploy/extract-osx-sdk.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/macdeploy/extract-osx-sdk.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/extract-osx-sdk.sh?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,8 +1,9 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+export LC_ALL=C\n set -e\n \n INPUTFILE=\"Xcode_7.3.1.dmg\""
      },
      {
        "sha": "17ce6c44f93b0d1f5746f22153210a243979836b",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 5,
        "deletions": 22,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,5 +1,4 @@\n-#!/usr/bin/env python\n-from __future__ import division, print_function, unicode_literals\n+#!/usr/bin/env python3\n #\n # Copyright (C) 2011  Patrick \"p2k\" Schneider <me@p2k-network.org>\n #\n@@ -203,15 +202,15 @@ def getFrameworks(binaryPath, verbose):\n     if verbose >= 3:\n         print(\"Inspecting with otool: \" + binaryPath)\n     otoolbin=os.getenv(\"OTOOL\", \"otool\")\n-    otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+    otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n     o_stdout, o_stderr = otool.communicate()\n     if otool.returncode != 0:\n         if verbose >= 1:\n             sys.stderr.write(o_stderr)\n             sys.stderr.flush()\n             raise RuntimeError(\"otool failed with return code %d\" % otool.returncode)\n \n-    otoolLines = o_stdout.decode().split(\"\\n\")\n+    otoolLines = o_stdout.split(\"\\n\")\n     otoolLines.pop(0) # First line is the inspected binary\n     if \".framework\" in binaryPath or binaryPath.endswith(\".dylib\"):\n         otoolLines.pop(0) # Frameworks and dylibs list themselves as a dependency.\n@@ -714,22 +713,6 @@ elif config.sign:\n \n if config.dmg is not None:\n \n-    #Patch in check_output for Python 2.6\n-    if \"check_output\" not in dir( subprocess ):\n-        def f(*popenargs, **kwargs):\n-            if 'stdout' in kwargs:\n-                raise ValueError('stdout argument not allowed, it will be overridden.')\n-            process = subprocess.Popen(stdout=subprocess.PIPE, *popenargs, **kwargs)\n-            output, unused_err = process.communicate()\n-            retcode = process.poll()\n-            if retcode:\n-                cmd = kwargs.get(\"args\")\n-                if cmd is None:\n-                    cmd = popenargs[0]\n-                raise CalledProcessError(retcode, cmd)\n-            return output\n-        subprocess.check_output = f\n-\n     def runHDIUtil(verb, image_basename, **kwargs):\n         hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n         if \"capture_stdout\" in kwargs:\n@@ -747,7 +730,7 @@ if config.dmg is not None:\n             if not value is True:\n                 hdiutil_args.append(str(value))\n         \n-        return run(hdiutil_args)\n+        return run(hdiutil_args, universal_newlines=True)\n     \n     if verbose >= 2:\n         if fancy is None:\n@@ -789,7 +772,7 @@ if config.dmg is not None:\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n         \n-        m = re.search(\"/Volumes/(.+$)\", output.decode())\n+        m = re.search(\"/Volumes/(.+$)\", output)\n         disk_root = m.group(0)\n         disk_name = m.group(1)\n         "
      },
      {
        "sha": "738ea70dbe1e7c8ccfa72d5988260d72c38438ea",
        "filename": "contrib/qos/tc.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -2,6 +2,7 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+export LC_ALL=C\n #network interface on which to limit traffic\n IF=\"eth0\"\n #limit of the network interface in question"
      },
      {
        "sha": "e1fd0b317b0ed8329856048f1f20aaef58eac0cc",
        "filename": "contrib/rpm/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 185,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/rpm/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/rpm/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/README.md?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,185 +0,0 @@\n-RPM Spec File Notes\n--------------------\n-\n-The RPM spec file provided here is for Bitcoin-Core 0.12.0 and builds on CentOS\n-7 with either the CentOS provided OpenSSL library or with LibreSSL as packaged\n-at [LibreLAMP.com](https://librelamp.com/). It should hopefully not be too\n-difficult to port the RPM spec file to most RPM based Linux distributions.\n-\n-When porting the spec file to build for a particular distribution, there are\n-some important notes.\n-\n-## Sources\n-\n-It is considered good form for all sources to reference a URL where the source\n-can be downloaded.\n-\n-Sources 0-9 should be reserved for source code tarballs. `Source0` should\n-reference the release tarball available from https://bitcoin.org/bin/ and\n-`Source1` should reference the BerkeleyDB source.\n-\n-Sources 10-99 are for source files that are maintained in the\n-[Bitcoin git repository](https://github.com/bitcoin/bitcoin) but are not part of\n-the release tarball. Most of these will reside in the `contrib` sub-directory.\n-\n-Sources 10-19 should be reserved for miscellaneous configuration files.\n-Currently only `Source10` is used, for the example `bitcoin.conf` file.\n-\n-Sources 20-29 should be reserved for man pages. Currently only `Source20`\n-through `Source23` are used.\n-\n-Sources 30-39 should be reserved for SELinux related files. Currently only\n-`Source30` through `Source32` are used. Until those files are in a tagged\n-release, the full URL specified in the RPM spec file will not work. You can get\n-them from the git repository where you retrieved this file.\n-\n-Sources 100+ are for files that are not source tarballs and are not maintained\n-in the bitcoin git repository. At present only an SVG version of the Bitcoin\n-icon is used.\n-\n-## Patches\n-\n-In general, patches should be avoided. When a packager feels a patch is\n-necessary, the packager should bring the problem to the attention of the bitcoin\n-developers so that an official fix to the issue can make it into the next\n-release.\n-\n-### Patch0 bitcoin-0.12.0-libressl.patch\n-\n-This patch is only needed if building against LibreSSL. LibreSSL is not the\n-standard TLS library on most Linux distributions. The patch will likely not be\n-needed when 0.12.1 is released, a proper fix is already in the Bitcoin git\n-master branch.\n-\n-## BuildRequires\n-\n-The packages specified in the `BuildRequires` are specified according to the\n-package naming convention currently used in CentOS 7 and EPEL for CentOS 7. You\n-may need to change some of the package names for other distributions. This is\n-most likely to be the case with the Qt packages.\n-\n-## BerkeleyDB\n-\n-The `build-unix.md` file recommends building against BerkeleyDB 4.8.30. Even if\n-that is the version your Linux distribution ships with, it probably is a good\n-idea to build Bitcoin Core against a static version of that library compiled\n-according to the instructions in the `build-unix.md` file so that any changes\n-the distribution may make in the future will not result in a problem for users.\n-\n-The problem that can exist, clients built against different versions of\n-BerkeleyDB may not be able read each other's `wallet.dat` file which can make it\n-difficult for a user to recover from backup in the event of a system failure.\n-\n-## Graphical User Interface and Qt Version\n-\n-The RPM spec file will by default build the GUI client linked against the Qt5\n-libraries. If you wish instead to link against the Qt4 libraries you need to\n-pass the switch `-D '_use_qt4 1'` at build time to the `rpmbuild` or `mock`\n-command used to build the packages.\n-\n-If you would prefer not to build the GUI at all, you can pass the switch\n-`-D '_no_gui 1'` to the `rpmbuild` or `mock` build command.\n-\n-## Desktop and KDE Files\n-\n-The desktop and KDE meta files are created in the spec file itself with the\n-`cat` command. This is done to allow easy distribution specific changes without\n-needing to use any patches. A specific time stamp is given to the files so that\n-it does not they do not appear to have been updated every time the package is\n-built. If you do make changes to them, you probably should update time stamp\n-assigned to them in the `touch` command that specifies the time stamp.\n-\n-## SVG, PNG, and XPM Icons\n-\n-The `bitcoin.svg` file is from the source listed as `Source100`. It is used as\n-the source for the PNG and XPM files. The generated PNG and XPM files are given\n-the same time stamp as the source SVG file as a means of indicating they are\n-derived from it.\n-\n-## Systemd\n-\n-This spec file assumes the target distribution uses systemd. That really only\n-matters for the `bitcoin-server` package. At this point, most RPM based\n-distributions that still receive vendor updates do in fact use systemd.\n-\n-The files to control the service are created in the RPM spec file itself using\n-the `cat` command. This is done to make it easy to modify for other\n-distributions that may implement things differently without needing to patch\n-source. A specific time stamp is given to the files so that they do not appear\n-to have been updated every time the package is built. If you do make changes to\n-them, you probably should update the time stamp assigned to them in the `touch`\n-command that specifies the time stamp.\n-\n-## SELinux\n-\n-The `bitcoin-server` package should have SELinux support. How to properly do\n-that *may* vary by distribution and version of distribution.\n-\n-The SELinux stuff in this RPM spec file *should* be correct for CentOS, RHEL,\n-and Fedora but it would be a good idea to review it before building the package\n-on other distributions.\n-\n-## Tests\n-\n-The `%check` section takes a very long time to run. If your build system has a\n-time limit for package build, you may need to make an exception for this\n-package. On CentOS 7 the `%check` section completes successfully with both\n-OpenSSL and LibreSSL, a failure really does mean something is wrong.\n-\n-## LibreSSL Build Notes\n-\n-To build against LibreSSL you will need to pass the switch\n-`-D '_use_libressl 1'` to the `rpmbuild` or `mock` command or the spec file will\n-want the OpenSSL development files.\n-\n-### LibreSSL and Boost\n-\n-LibreSSL (and some newer builds of OpenSSL) do not have support for SSLv3. This\n-can cause issues with the Boost package if the Boost package has not been\n-patched accordingly. On those distributions, you will either need to build\n-Bitcoin-Core against OpenSSL or use a patched version of Boost in the build\n-system.\n-\n-As SSLv3 is no longer safe, distributions that have not patched Boost to work\n-with TLS libraries that do not support SSLv3 should have bug reports filed\n-against the Boost package. This bug report has already been filed for RHEL 7 but\n-it may need to be filed for other distributions.\n-\n-A patch for Boost: https://github.com/boostorg/asio/pull/23/files\n-\n-## ZeroMQ\n-\n-At this time, this RPM spec file does not support the ZeroMQ build options. A\n-suitable version of ZeroMQ is not available for the platform this spec file was\n-developed on (CentOS 7).\n-\n-## Legacy Credit\n-\n-This RPM spec file is largely based upon the work of Michael Hampton at\n-[Ringing Liberty](https://www.ringingliberty.com/bitcoin/). He has been\n-packaging Bitcoin for Fedora at least since 2012.\n-\n-Most of the differences between his packaging and this package are stylistic in\n-nature. The major differences:\n-\n-1. He builds from a github tagged release rather than a release tarball. This\n-should not result in different source code.\n-\n-2. He does not build BerkeleyDB but instead uses the BerkeleyDB provided by the\n-Linux distribution. For the distributions he packages for, they currently all\n-use the same version of BerkeleyDB so that difference is *probably* just\n-academic.\n-\n-3. As of his 10.11.2 package he did not allow for building against LibreSSL,\n-specifying a build without the Qt GUI, or specifying which version of the Qt\n-libraries to use.\n-\n-4. I renamed the `bitcoin` package that contains the Qt GUI to `bitcoin-core` as\n-that appears to be how the general population refers to it, in contrast to\n-`bitcoin-xt` or `bitcoin-classic`. I wanted to make sure the general population\n-knows what they are getting when installing the GUI package.\n-\n-As far as minor differences, I generally prefer to assign the file permissions\n-in the `%files` portion of an RPM spec file rather than specifying the\n-permissions of a file during `%install` and other minor things like that that\n-are largely just cosmetic."
      },
      {
        "sha": "555614a06d49ab820fce1e08f723005b26cdcb01",
        "filename": "contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin-0.12.0-libressl.patch?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,24 +0,0 @@\n-diff -ur bitcoin-0.12.0.orig/src/init.cpp bitcoin-0.12.0/src/init.cpp\n---- bitcoin-0.12.0.orig/src/init.cpp\t2015-12-31 16:00:00.000000000 -0800\n-+++ bitcoin-0.12.0/src/init.cpp\t2016-02-23 06:03:47.133227757 -0800\n-@@ -1075,7 +1075,7 @@\n-     if (fPrintToDebugLog)\n-         OpenDebugLog();\n- \n--#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-+#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-     LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n- #else\n-     LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n-diff -ur bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp bitcoin-0.12.0/src/qt/rpcconsole.cpp\n---- bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp\t2015-12-31 16:00:00.000000000 -0800\n-+++ bitcoin-0.12.0/src/qt/rpcconsole.cpp\t2016-02-23 15:09:42.881126841 -0800\n-@@ -264,7 +264,7 @@\n- \n-     // set library version labels\n- \n--#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-+#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-     ui->openSSLVersion->setText(SSLeay_version(SSLEAY_VERSION));\n- #else\n-     ui->openSSLVersion->setText(OpenSSL_version(OPENSSL_VERSION));"
      },
      {
        "sha": "6f5eef6375255381f7c4552715ffdaf329e4a502",
        "filename": "contrib/rpm/bitcoin.fc",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/rpm/bitcoin.fc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/rpm/bitcoin.fc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.fc?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,8 +0,0 @@\n-/usr/bin/bitcoin-cli\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-/usr/sbin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-/usr/lib(64)?/bitcoin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-\n-/etc/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_conf_t,s0)\n-/var/lib/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_var_lib_t,s0)\n-\n-(/var)?/run/bitcoind(/.*)?   gen_context(system_u:object_r:bitcoin_var_run_t,s0)"
      },
      {
        "sha": "2b096c24dc32396ef071aedecc6907c28bfba855",
        "filename": "contrib/rpm/bitcoin.if",
        "status": "removed",
        "additions": 0,
        "deletions": 157,
        "changes": 157,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/rpm/bitcoin.if",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/rpm/bitcoin.if",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.if?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,157 +0,0 @@\n-\n-## <summary>policy for bitcoin</summary>\n-\n-\n-########################################\n-## <summary>\n-##\tTransition to bitcoin.\n-## </summary>\n-## <param name=\"domain\">\n-## <summary>\n-##\tDomain allowed to transition.\n-## </summary>\n-## </param>\n-#\n-interface(`bitcoin_domtrans',`\n-\tgen_require(`\n-\t\ttype bitcoin_t, bitcoin_exec_t;\n-\t')\n-\n-\tcorecmd_search_bin($1)\n-\tdomtrans_pattern($1, bitcoin_exec_t, bitcoin_t)\n-')\n-\n-\n-########################################\n-## <summary>\n-##\tExecute bitcoin server in the bitcoin domain.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_initrc_domtrans',`\n-\tgen_require(`\n-\t\ttype bitcoin_initrc_exec_t;\n-\t')\n-\n-\tinit_labeled_script_domtrans($1, bitcoin_initrc_exec_t)\n-')\n-\n-\n-########################################\n-## <summary>\n-##\tSearch bitcoin lib directories.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_search_lib',`\n-\tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tallow $1 bitcoin_var_lib_t:dir search_dir_perms;\n-\tfiles_search_var_lib($1)\n-')\n-\n-########################################\n-## <summary>\n-##\tRead bitcoin lib files.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_read_lib_files',`\n-\tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tfiles_search_var_lib($1)\n-\tread_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-')\n-\n-########################################\n-## <summary>\n-##\tManage bitcoin lib files.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_manage_lib_files',`\n-\tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tfiles_search_var_lib($1)\n-\tmanage_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-')\n-\n-########################################\n-## <summary>\n-##\tManage bitcoin lib directories.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_manage_lib_dirs',`\n-\tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tfiles_search_var_lib($1)\n-\tmanage_dirs_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-')\n-\n-\n-########################################\n-## <summary>\n-##\tAll of the rules required to administrate\n-##\tan bitcoin environment\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-## <param name=\"role\">\n-##\t<summary>\n-##\tRole allowed access.\n-##\t</summary>\n-## </param>\n-## <rolecap/>\n-#\n-interface(`bitcoin_admin',`\n-\tgen_require(`\n-\t\ttype bitcoin_t;\n-\t\ttype bitcoin_initrc_exec_t;\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tallow $1 bitcoin_t:process { ptrace signal_perms };\n-\tps_process_pattern($1, bitcoin_t)\n-\n-\tbitcoin_initrc_domtrans($1)\n-\tdomain_system_change_exemption($1)\n-\trole_transition $2 bitcoin_initrc_exec_t system_r;\n-\tallow $2 system_r;\n-\n-\tfiles_search_var_lib($1)\n-\tadmin_pattern($1, bitcoin_var_lib_t)\n-\n-')\n-"
      },
      {
        "sha": "cc54fcaf3d10df458a65ae2c62df77bb7aa53620",
        "filename": "contrib/rpm/bitcoin.spec",
        "status": "removed",
        "additions": 0,
        "deletions": 438,
        "changes": 438,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/rpm/bitcoin.spec",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/rpm/bitcoin.spec",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.spec?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,438 +0,0 @@\n-%define bdbv 4.8.30\n-%global selinux_variants mls strict targeted\n-\n-%if 0%{?_no_gui:1}\n-%define _buildqt 0\n-%define buildargs --with-gui=no\n-%else\n-%define _buildqt 1\n-%if 0%{?_use_qt4}\n-%define buildargs --with-qrencode --with-gui=qt4\n-%else\n-%define buildargs --with-qrencode --with-gui=qt5\n-%endif\n-%endif\n-\n-Name:\t\tbitcoin\n-Version:\t0.12.0\n-Release:\t2%{?dist}\n-Summary:\tPeer to Peer Cryptographic Currency\n-\n-Group:\t\tApplications/System\n-License:\tMIT\n-URL:\t\thttps://bitcoin.org/\n-Source0:\thttps://bitcoin.org/bin/bitcoin-core-%{version}/bitcoin-%{version}.tar.gz\n-Source1:\thttp://download.oracle.com/berkeley-db/db-%{bdbv}.NC.tar.gz\n-\n-Source10:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/examples/bitcoin.conf\n-\n-#man pages\n-Source20:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoind.1\n-Source21:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoin-cli.1\n-Source22:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoin-qt.1\n-\n-#selinux\n-Source30:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.te\n-# Source31 - what about bitcoin-tx and bench_bitcoin ???\n-Source31:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.fc\n-Source32:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.if\n-\n-Source100:\thttps://upload.wikimedia.org/wikipedia/commons/4/46/Bitcoin.svg\n-\n-%if 0%{?_use_libressl:1}\n-BuildRequires:\tlibressl-devel\n-%else\n-BuildRequires:\topenssl-devel\n-%endif\n-BuildRequires:\tboost-devel\n-BuildRequires:\tminiupnpc-devel\n-BuildRequires:\tautoconf automake libtool\n-BuildRequires:\tlibevent-devel\n-\n-\n-Patch0:\t\tbitcoin-0.12.0-libressl.patch\n-\n-\n-%description\n-Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n-operate with no central authority or banks; managing transactions and the\n-issuing of bitcoins is carried out collectively by the network.\n-\n-%if %{_buildqt}\n-%package core\n-Summary:\tPeer to Peer Cryptographic Currency\n-Group:\t\tApplications/System\n-Obsoletes:\t%{name} < %{version}-%{release}\n-Provides:\t%{name} = %{version}-%{release}\n-%if 0%{?_use_qt4}\n-BuildRequires:\tqt-devel\n-%else\n-BuildRequires:\tqt5-qtbase-devel\n-# for /usr/bin/lrelease-qt5\n-BuildRequires:\tqt5-linguist\n-%endif\n-BuildRequires:\tprotobuf-devel\n-BuildRequires:\tqrencode-devel\n-BuildRequires:\t%{_bindir}/desktop-file-validate\n-# for icon generation from SVG\n-BuildRequires:\t%{_bindir}/inkscape\n-BuildRequires:\t%{_bindir}/convert\n-\n-%description core\n-Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n-operate with no central authority or banks; managing transactions and the\n-issuing of bitcoins is carried out collectively by the network.\n-\n-This package contains the Qt based graphical client and node. If you are looking\n-to run a Bitcoin wallet, this is probably the package you want.\n-%endif\n-\n-\n-%package libs\n-Summary:\tBitcoin shared libraries\n-Group:\t\tSystem Environment/Libraries\n-\n-%description libs\n-This package provides the bitcoinconsensus shared libraries. These libraries\n-may be used by third party software to provide consensus verification\n-functionality.\n-\n-Unless you know need this package, you probably do not.\n-\n-%package devel\n-Summary:\tDevelopment files for bitcoin\n-Group:\t\tDevelopment/Libraries\n-Requires:\t%{name}-libs = %{version}-%{release}\n-\n-%description devel\n-This package contains the header files and static library for the\n-bitcoinconsensus shared library. If you are developing or compiling software\n-that wants to link against that library, then you need this package installed.\n-\n-Most people do not need this package installed.\n-\n-%package server\n-Summary:\tThe bitcoin daemon\n-Group:\t\tSystem Environment/Daemons\n-Requires:\tbitcoin-utils = %{version}-%{release}\n-Requires:\tselinux-policy policycoreutils-python\n-Requires(pre):\tshadow-utils\n-Requires(post):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n-Requires(postun):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n-BuildRequires:\tsystemd\n-BuildRequires:\tcheckpolicy\n-BuildRequires:\t%{_datadir}/selinux/devel/Makefile\n-\n-%description server\n-This package provides a stand-alone bitcoin-core daemon. For most users, this\n-package is only needed if they need a full-node without the graphical client.\n-\n-Some third party wallet software will want this package to provide the actual\n-bitcoin-core node they use to connect to the network.\n-\n-If you use the graphical bitcoin-core client then you almost certainly do not\n-need this package.\n-\n-%package utils\n-Summary:\tBitcoin utilities\n-Group:\t\tApplications/System\n-\n-%description utils\n-This package provides several command line utilities for interacting with a\n-bitcoin-core daemon.\n-\n-The bitcoin-cli utility allows you to communicate and control a bitcoin daemon\n-over RPC, the bitcoin-tx utility allows you to create a custom transaction, and\n-the bench_bitcoin utility can be used to perform some benchmarks.\n-\n-This package contains utilities needed by the bitcoin-server package.\n-\n-\n-%prep\n-%setup -q\n-%patch0 -p1 -b .libressl\n-cp -p %{SOURCE10} ./bitcoin.conf.example\n-tar -zxf %{SOURCE1}\n-cp -p db-%{bdbv}.NC/LICENSE ./db-%{bdbv}.NC-LICENSE\n-mkdir db4 SELinux\n-cp -p %{SOURCE30} %{SOURCE31} %{SOURCE32} SELinux/\n-\n-\n-%build\n-CWD=`pwd`\n-cd db-%{bdbv}.NC/build_unix/\n-../dist/configure --enable-cxx --disable-shared --with-pic --prefix=${CWD}/db4\n-make install\n-cd ../..\n-\n-./autogen.sh\n-%configure LDFLAGS=\"-L${CWD}/db4/lib/\" CPPFLAGS=\"-I${CWD}/db4/include/\" --with-miniupnpc --enable-glibc-back-compat %{buildargs}\n-make %{?_smp_mflags}\n-\n-pushd SELinux\n-for selinuxvariant in %{selinux_variants}; do\n-\tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile\n-\tmv bitcoin.pp bitcoin.pp.${selinuxvariant}\n-\tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile clean\n-done\n-popd\n-\n-\n-%install\n-make install DESTDIR=%{buildroot}\n-\n-mkdir -p -m755 %{buildroot}%{_sbindir}\n-mv %{buildroot}%{_bindir}/bitcoind %{buildroot}%{_sbindir}/bitcoind\n-\n-# systemd stuff\n-mkdir -p %{buildroot}%{_tmpfilesdir}\n-cat <<EOF > %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n-d /run/bitcoind 0750 bitcoin bitcoin -\n-EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n-\n-mkdir -p %{buildroot}%{_sysconfdir}/sysconfig\n-cat <<EOF > %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n-# Provide options to the bitcoin daemon here, for example\n-# OPTIONS=\"-testnet -disable-wallet\"\n-\n-OPTIONS=\"\"\n-\n-# System service defaults.\n-# Don't change these unless you know what you're doing.\n-CONFIG_FILE=\"%{_sysconfdir}/bitcoin/bitcoin.conf\"\n-DATA_DIR=\"%{_localstatedir}/lib/bitcoin\"\n-PID_FILE=\"/run/bitcoind/bitcoind.pid\"\n-EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n-\n-mkdir -p %{buildroot}%{_unitdir}\n-cat <<EOF > %{buildroot}%{_unitdir}/bitcoin.service\n-[Unit]\n-Description=Bitcoin daemon\n-After=syslog.target network.target\n-\n-[Service]\n-Type=forking\n-ExecStart=%{_sbindir}/bitcoind -daemon -conf=\\${CONFIG_FILE} -datadir=\\${DATA_DIR} -pid=\\${PID_FILE} \\$OPTIONS\n-EnvironmentFile=%{_sysconfdir}/sysconfig/bitcoin\n-User=bitcoin\n-Group=bitcoin\n-\n-Restart=on-failure\n-PrivateTmp=true\n-TimeoutStopSec=120\n-TimeoutStartSec=60\n-StartLimitInterval=240\n-StartLimitBurst=5\n-\n-[Install]\n-WantedBy=multi-user.target\n-EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_unitdir}/bitcoin.service\n-#end systemd stuff\n-\n-mkdir %{buildroot}%{_sysconfdir}/bitcoin\n-mkdir -p %{buildroot}%{_localstatedir}/lib/bitcoin\n-\n-#SELinux\n-for selinuxvariant in %{selinux_variants}; do\n-\tinstall -d %{buildroot}%{_datadir}/selinux/${selinuxvariant}\n-\tinstall -p -m 644 SELinux/bitcoin.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/bitcoin.pp\n-done\n-\n-%if %{_buildqt}\n-# qt icons\n-install -D -p share/pixmaps/bitcoin.ico %{buildroot}%{_datadir}/pixmaps/bitcoin.ico\n-install -p share/pixmaps/nsis-header.bmp %{buildroot}%{_datadir}/pixmaps/\n-install -p share/pixmaps/nsis-wizard.bmp %{buildroot}%{_datadir}/pixmaps/\n-install -p %{SOURCE100} %{buildroot}%{_datadir}/pixmaps/bitcoin.svg\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin16.png -w16 -h16\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin32.png -w32 -h32\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin64.png -w64 -h64\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin128.png -w128 -h128\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin256.png -w256 -h256\n-%{_bindir}/convert -resize 16x16 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin16.xpm\n-%{_bindir}/convert -resize 32x32 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin32.xpm\n-%{_bindir}/convert -resize 64x64 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin64.xpm\n-%{_bindir}/convert -resize 128x128 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin128.xpm\n-%{_bindir}/convert %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin256.xpm\n-touch %{buildroot}%{_datadir}/pixmaps/*.png -r %{SOURCE100}\n-touch %{buildroot}%{_datadir}/pixmaps/*.xpm -r %{SOURCE100}\n-\n-# Desktop File - change the touch timestamp if modifying\n-mkdir -p %{buildroot}%{_datadir}/applications\n-cat <<EOF > %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n-[Desktop Entry]\n-Encoding=UTF-8\n-Name=Bitcoin\n-Comment=Bitcoin P2P Cryptocurrency\n-Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=bitcoin-qt %u\n-Terminal=false\n-Type=Application\n-Icon=bitcoin128\n-MimeType=x-scheme-handler/bitcoin;\n-Categories=Office;Finance;\n-EOF\n-# change touch date when modifying desktop\n-touch -a -m -t 201511100546 %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n-%{_bindir}/desktop-file-validate %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n-\n-# KDE protocol - change the touch timestamp if modifying\n-mkdir -p %{buildroot}%{_datadir}/kde4/services\n-cat <<EOF > %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n-[Protocol]\n-exec=bitcoin-qt '%u'\n-protocol=bitcoin\n-input=none\n-output=none\n-helper=true\n-listing=\n-reading=false\n-writing=false\n-makedir=false\n-deleting=false\n-EOF\n-# change touch date when modifying protocol\n-touch -a -m -t 201511100546 %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n-%endif\n-\n-# man pages\n-install -D -p %{SOURCE20} %{buildroot}%{_mandir}/man1/bitcoind.1\n-install -p %{SOURCE21} %{buildroot}%{_mandir}/man1/bitcoin-cli.1\n-%if %{_buildqt}\n-install -p %{SOURCE22} %{buildroot}%{_mandir}/man1/bitcoin-qt.1\n-%endif\n-\n-# nuke these, we do extensive testing of binaries in %%check before packaging\n-rm -f %{buildroot}%{_bindir}/test_*\n-\n-%check\n-make check\n-srcdir=src test/bitcoin-util-test.py\n-test/functional/test_runner.py --extended\n-\n-%post libs -p /sbin/ldconfig\n-\n-%postun libs -p /sbin/ldconfig\n-\n-%pre server\n-getent group bitcoin >/dev/null || groupadd -r bitcoin\n-getent passwd bitcoin >/dev/null ||\n-\tuseradd -r -g bitcoin -d /var/lib/bitcoin -s /sbin/nologin \\\n-\t-c \"Bitcoin wallet server\" bitcoin\n-exit 0\n-\n-%post server\n-%systemd_post bitcoin.service\n-# SELinux\n-if [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n-for selinuxvariant in %{selinux_variants}; do\n-\t%{_sbindir}/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/bitcoin.pp &> /dev/null || :\n-done\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8332\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8333\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18332\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18333\n-%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n-%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin || :\n-fi\n-\n-%posttrans server\n-%{_bindir}/systemd-tmpfiles --create\n-\n-%preun server\n-%systemd_preun bitcoin.service\n-\n-%postun server\n-%systemd_postun bitcoin.service\n-# SELinux\n-if [ $1 -eq 0 ]; then\n-\tif [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n-\t%{_sbindir}/semanage port -d -p tcp 8332\n-\t%{_sbindir}/semanage port -d -p tcp 8333\n-\t%{_sbindir}/semanage port -d -p tcp 18332\n-\t%{_sbindir}/semanage port -d -p tcp 18333\n-\tfor selinuxvariant in %{selinux_variants}; do\n-\t\t%{_sbindir}/semodule -s ${selinuxvariant} -r bitcoin &> /dev/null || :\n-\tdone\n-\t%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n-\t[ -d %{_localstatedir}/lib/bitcoin ] && \\\n-\t\t%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin &> /dev/null || :\n-\tfi\n-fi\n-\n-%clean\n-rm -rf %{buildroot}\n-\n-%if %{_buildqt}\n-%files core\n-%defattr(-,root,root,-)\n-%license COPYING db-%{bdbv}.NC-LICENSE\n-%doc COPYING bitcoin.conf.example doc/README.md doc/bips.md doc/files.md doc/multiwallet-qt.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n-%attr(0755,root,root) %{_bindir}/bitcoin-qt\n-%attr(0644,root,root) %{_datadir}/applications/bitcoin-core.desktop\n-%attr(0644,root,root) %{_datadir}/kde4/services/bitcoin-core.protocol\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.ico\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.bmp\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.svg\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.png\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.xpm\n-%attr(0644,root,root) %{_mandir}/man1/bitcoin-qt.1*\n-%endif\n-\n-%files libs\n-%defattr(-,root,root,-)\n-%license COPYING\n-%doc COPYING doc/README.md doc/shared-libraries.md\n-%{_libdir}/lib*.so.*\n-\n-%files devel\n-%defattr(-,root,root,-)\n-%license COPYING\n-%doc COPYING doc/README.md doc/developer-notes.md doc/shared-libraries.md\n-%attr(0644,root,root) %{_includedir}/*.h\n-%{_libdir}/*.so\n-%{_libdir}/*.a\n-%{_libdir}/*.la\n-%attr(0644,root,root) %{_libdir}/pkgconfig/*.pc\n-\n-%files server\n-%defattr(-,root,root,-)\n-%license COPYING db-%{bdbv}.NC-LICENSE\n-%doc COPYING bitcoin.conf.example doc/README.md doc/REST-interface.md doc/bips.md doc/dnsseed-policy.md doc/files.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n-%attr(0755,root,root) %{_sbindir}/bitcoind\n-%attr(0644,root,root) %{_tmpfilesdir}/bitcoin.conf\n-%attr(0644,root,root) %{_unitdir}/bitcoin.service\n-%dir %attr(0750,bitcoin,bitcoin) %{_sysconfdir}/bitcoin\n-%dir %attr(0750,bitcoin,bitcoin) %{_localstatedir}/lib/bitcoin\n-%config(noreplace) %attr(0600,root,root) %{_sysconfdir}/sysconfig/bitcoin\n-%attr(0644,root,root) %{_datadir}/selinux/*/*.pp\n-%attr(0644,root,root) %{_mandir}/man1/bitcoind.1*\n-\n-%files utils\n-%defattr(-,root,root,-)\n-%license COPYING\n-%doc COPYING bitcoin.conf.example doc/README.md\n-%attr(0755,root,root) %{_bindir}/bitcoin-cli\n-%attr(0755,root,root) %{_bindir}/bitcoin-tx\n-%attr(0755,root,root) %{_bindir}/bench_bitcoin\n-%attr(0644,root,root) %{_mandir}/man1/bitcoin-cli.1*\n-\n-\n-\n-%changelog\n-* Fri Feb 26 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-2\n-- Rename Qt package from bitcoin to bitcoin-core\n-- Make building of the Qt package optional\n-- When building the Qt package, default to Qt5 but allow building\n--  against Qt4\n-- Only run SELinux stuff in post scripts if it is not set to disabled\n-\n-* Wed Feb 24 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-1\n-- Initial spec file for 0.12.0 release\n-\n-# This spec file is written from scratch but a lot of the packaging decisions are directly\n-# based upon the 0.11.2 package spec file from https://www.ringingliberty.com/bitcoin/"
      },
      {
        "sha": "d6231c591a24312b3c073f7658533587279aeba7",
        "filename": "contrib/rpm/bitcoin.te",
        "status": "removed",
        "additions": 0,
        "deletions": 81,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/rpm/bitcoin.te",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/rpm/bitcoin.te",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.te?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,81 +0,0 @@\n-policy_module(bitcoin, 1.100.1)\n-\n-########################################\n-#\n-# Declarations\n-#\n-\n-type bitcoin_t;\n-type bitcoin_exec_t;\n-init_daemon_domain(bitcoin_t, bitcoin_exec_t)\n-\n-permissive bitcoin_t;\n-\n-type bitcoin_initrc_exec_t;\n-init_script_file(bitcoin_initrc_exec_t)\n-\n-type bitcoin_conf_t;\n-files_type(bitcoin_conf_t)\n-\n-type bitcoin_var_lib_t;\n-files_type(bitcoin_var_lib_t)\n-\n-type bitcoin_var_run_t;\n-files_type(bitcoin_var_run_t)\n-\n-type bitcoin_port_t;\n-corenet_port(bitcoin_port_t)\n-\n-########################################\n-#\n-# bitcoin local policy\n-#\n-allow bitcoin_t self:process { fork };\n-\n-allow bitcoin_t self:fifo_file rw_fifo_file_perms;\n-allow bitcoin_t self:unix_stream_socket create_stream_socket_perms;\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n-manage_files_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-manage_files_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-files_var_lib_filetrans(bitcoin_t, bitcoin_var_lib_t, { dir file })\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n-manage_files_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n-\n-sysnet_dns_name_resolve(bitcoin_t)\n-corenet_all_recvfrom_unlabeled(bitcoin_t)\n-\n-allow bitcoin_t self:tcp_socket create_stream_socket_perms;\n-corenet_tcp_sendrecv_generic_if(bitcoin_t)\n-corenet_tcp_sendrecv_generic_node(bitcoin_t)\n-corenet_tcp_sendrecv_all_ports(bitcoin_t)\n-corenet_tcp_bind_generic_node(bitcoin_t)\n-\n-gen_require(`\n-    type bitcoin_port_t;\n-')\n-allow bitcoin_t bitcoin_port_t:tcp_socket name_bind;\n-\n-gen_require(`\n-    type bitcoin_port_t;\n-')\n-allow bitcoin_t bitcoin_port_t:tcp_socket name_connect;\n-\n-domain_use_interactive_fds(bitcoin_t)\n-\n-files_read_etc_files(bitcoin_t)\n-\n-miscfiles_read_localization(bitcoin_t)\n-\n-sysnet_dns_name_resolve(bitcoin_t)\n-\n-allow bitcoin_t bitcoin_exec_t:file execute_no_trans;\n-allow bitcoin_t self:process setsched;\n-corecmd_exec_ls(bitcoin_t)\n-corenet_tcp_connect_http_port(bitcoin_t)\n-dev_read_urand(bitcoin_t)\n-fs_getattr_xattr_fs(bitcoin_t)\n-kernel_read_system_state(bitcoin_t)"
      },
      {
        "sha": "502c20d0d678c59eafbb976d7a1b2537be0217b6",
        "filename": "contrib/seeds/README.md",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -4,11 +4,13 @@ Utility to generate the seeds.txt list that is compiled into the client\n (see [src/chainparamsseeds.h](/src/chainparamsseeds.h) and other utilities in [contrib/seeds](/contrib/seeds)).\n \n Be sure to update `PATTERN_AGENT` in `makeseeds.py` to include the current version,\n-and remove old versions as necessary.\n+and remove old versions as necessary (at a minimum when GetDesirableServiceFlags\n+changes its default return value, as those are the services which seeds are added\n+to addrman with).\n \n The seeds compiled into the release are created from sipa's DNS seed data, like this:\n \n-    curl -s http://bitcoin.sipa.be/seeds.txt > seeds_main.txt\n+    curl -s http://bitcoin.sipa.be/seeds.txt.gz | gzip -dc > seeds_main.txt\n     python3 makeseeds.py < seeds_main.txt > nodes_main.txt\n     python3 generate-seeds.py . > ../../src/chainparamsseeds.h\n "
      },
      {
        "sha": "fe7cd1d5974dc86db7ca437659268f82f72f40cf",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -11,7 +11,7 @@\n     nodes_main.txt\n     nodes_test.txt\n \n-These files must consist of lines in the format \n+These files must consist of lines in the format\n \n     <ip>\n     <ip>:<port>\n@@ -34,7 +34,8 @@\n \n from base64 import b32decode\n from binascii import a2b_hex\n-import sys, os\n+import sys\n+import os\n import re\n \n # ipv4 in ipv6 prefix\n@@ -46,7 +47,7 @@ def name_to_ipv6(addr):\n     if len(addr)>6 and addr.endswith('.onion'):\n         vchAddr = b32decode(addr[0:-6], True)\n         if len(vchAddr) != 16-len(pchOnionCat):\n-            raise ValueError('Invalid onion %s' % s)\n+            raise ValueError('Invalid onion %s' % vchAddr)\n         return pchOnionCat + vchAddr\n     elif '.' in addr: # IPv4\n         return pchIPv4 + bytearray((int(x) for x in addr.split('.')))\n@@ -114,7 +115,7 @@ def process_nodes(g, f, structname, defaultport):\n def main():\n     if len(sys.argv)<2:\n         print(('Usage: %s <path_to_nodes_txt>' % sys.argv[0]), file=sys.stderr)\n-        exit(1)\n+        sys.exit(1)\n     g = sys.stdout\n     indir = sys.argv[1]\n     g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n@@ -124,15 +125,15 @@ def main():\n     g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n     g.write(' *\\n')\n     g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n-    g.write(' * IPv4 as well as onion addresses are wrapped inside a IPv6 address accordingly.\\n')\n+    g.write(' * IPv4 as well as onion addresses are wrapped inside an IPv6 address accordingly.\\n')\n     g.write(' */\\n')\n-    with open(os.path.join(indir,'nodes_main.txt'),'r') as f:\n+    with open(os.path.join(indir,'nodes_main.txt'), 'r', encoding=\"utf8\") as f:\n         process_nodes(g, f, 'pnSeed6_main', 8333)\n     g.write('\\n')\n-    with open(os.path.join(indir,'nodes_test.txt'),'r') as f:\n+    with open(os.path.join(indir,'nodes_test.txt'), 'r', encoding=\"utf8\") as f:\n         process_nodes(g, f, 'pnSeed6_test', 18333)\n     g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-            \n+\n if __name__ == '__main__':\n     main()\n "
      },
      {
        "sha": "6527deccf24846227c4ba753bbf1538e4745f1e5",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,11 +1,16 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2013-2017 The Bitcoin Core developers\n+# Copyright (c) 2013-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n # Generate seeds.txt from Pieter's DNS seeder\n #\n \n+import re\n+import sys\n+import dns.resolver\n+import collections\n+\n NSEEDS=512\n \n MAX_SEEDS_PER_ASN=2\n@@ -22,15 +27,10 @@\n     \"54.94.195.96\", \"54.94.200.247\"\n }\n \n-import re\n-import sys\n-import dns.resolver\n-import collections\n-\n PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n-PATTERN_AGENT = re.compile(r\"^(/Satoshi:0.12.(0|1|99)/|/Satoshi:0.13.(0|1|2|99)/)$\")\n+PATTERN_AGENT = re.compile(r\"^(/Satoshi:0.14.(0|1|2|99)/|/Satoshi:0.15.(0|1|2|99)|/Satoshi:0.16.(0|1|2|99)/)$\")\n \n def parseline(line):\n     sline = line.split()"
      },
      {
        "sha": "c0b5b299bddc32781ede529d43640f63c9e9f7b2",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "modified",
        "additions": 1205,
        "deletions": 1105,
        "changes": 2310,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,1168 +1,1268 @@\n-2.7.8.12:8333\n-2.228.70.198:8333\n-5.39.64.7:8333\n-5.45.80.34:38333\n-5.51.160.38:8333\n-5.61.33.33:8333\n-5.61.37.12:8333\n-5.95.80.47:8333\n-5.102.164.173:8333\n-5.175.71.130:8333\n-5.189.165.22:8333\n-5.199.130.228:8333\n-5.228.100.222:8333\n-5.255.64.231:8333\n-13.93.6.133:8333\n-18.85.34.10:8333\n-18.241.0.63:8333\n-23.28.128.65:8333\n-23.248.113.52:8333\n-23.253.151.73:8333\n-24.4.96.121:8333\n-24.69.65.191:8333\n-24.87.8.43:8333\n-24.150.224.110:8333\n+2.132.100.47:8333\n+5.1.97.4:8333\n+5.39.174.116:8333\n+5.45.79.14:8333\n+5.53.16.133:8333\n+5.101.139.166:8333\n+5.178.78.139:8333\n+5.189.176.17:8333\n+5.228.64.71:8333\n+8.18.38.122:8333\n+13.115.96.63:8333\n+14.2.124.84:8333\n+14.3.170.1:8333\n+23.94.28.250:8333\n+23.111.172.106:8333\n+23.125.224.84:8333\n+23.152.0.108:8333\n+23.175.0.222:8333\n+23.229.16.234:8333\n+23.233.6.70:8333\n+24.142.34.253:8333\n+24.171.203.87:8333\n+24.188.200.170:8333\n+24.216.65.41:8333\n 24.227.69.146:8333\n-27.0.235.33:8333\n-31.170.106.203:8333\n-31.184.197.96:8333\n-31.214.240.56:8333\n-37.1.202.134:8333\n-37.18.74.232:8333\n-37.34.48.17:8333\n-37.48.64.140:8333\n-37.97.141.116:8333\n-37.120.164.16:8333\n-37.120.169.123:8333\n-37.143.9.128:8333\n-37.153.172.227:8333\n-37.193.227.16:8333\n-37.205.8.78:8333\n-37.220.0.114:8333\n-37.232.218.199:8333\n-38.140.161.53:8333\n-40.87.70.120:8333\n-41.162.163.93:8333\n-42.2.198.48:8333\n-45.20.67.1:8333\n-45.55.197.77:8333\n-45.56.97.63:8333\n-45.58.38.162:8333\n-45.63.1.33:8333\n-45.79.2.70:8333\n-46.16.240.98:8333\n-46.19.137.74:8333\n-46.28.206.146:8333\n-46.32.252.197:8333\n-46.59.13.59:8333\n-46.59.39.195:8333\n-46.148.16.210:8333\n-46.160.195.121:8333\n-46.166.142.21:8333\n-46.166.160.29:8330\n-46.188.44.20:8333\n+27.33.11.193:8333\n+31.24.11.139:8333\n+31.28.10.13:8333\n+31.165.17.164:8333\n+31.179.204.142:8333\n+31.186.96.186:8333\n+31.210.172.21:8333\n+31.211.102.129:62734\n+34.217.122.178:8333\n+35.230.64.29:8333\n+35.231.225.42:8333\n+36.3.172.13:8333\n+36.251.163.42:8333\n+37.136.97.246:8333\n+37.153.1.150:8333\n+37.153.1.157:8333\n+37.228.92.110:8333\n+37.252.14.22:8333\n+38.27.101.224:8333\n+38.102.134.85:8333\n+38.104.225.30:8333\n+43.229.76.38:8333\n+45.40.132.57:8333\n+45.45.34.122:8333\n+45.48.177.222:8333\n+46.19.34.236:8333\n+46.28.66.196:8333\n+46.28.204.21:8333\n+46.28.205.161:8333\n+46.30.42.144:8333\n+46.138.139.195:8333\n+46.165.245.221:8333\n+46.166.129.155:8333\n+46.166.160.52:8333\n+46.166.160.56:8333\n+46.188.44.82:8333\n+46.188.126.74:8333\n+46.229.165.145:8333\n+46.229.168.201:8333\n 46.229.238.187:8333\n-46.231.16.149:8333\n-47.88.100.130:8333\n-47.89.192.134:8333\n-47.185.194.160:8333\n-47.189.129.218:8333\n-49.65.2.140:8333\n-50.3.72.129:8333\n-50.31.99.225:8333\n-51.175.33.95:8333\n-52.1.165.219:8333\n-52.10.170.186:8333\n-52.51.128.216:8333\n-54.197.130.244:8333\n-58.59.2.22:8333\n-58.84.6.81:8333\n-59.125.8.143:8333\n-59.167.130.139:8333\n-61.47.2.20:8333\n-62.43.130.178:8333\n-62.76.96.6:8333\n+47.54.204.246:8333\n+47.74.128.138:8333\n+47.94.224.99:8333\n+47.97.96.198:8333\n+47.187.36.48:8333\n+47.218.16.81:8333\n+47.223.66.222:8333\n+47.254.128.15:8333\n+50.31.170.53:8333\n+50.35.67.146:8333\n+50.76.96.230:8333\n+50.82.177.142:8333\n+51.15.3.46:8333\n+51.175.141.243:8333\n+52.144.47.153:8333\n+52.232.38.122:8333\n+54.38.192.164:8333\n+54.85.65.6:8333\n+54.91.227.188:8333\n+58.180.36.14:8333\n+59.106.208.68:8333\n+60.70.73.26:8333\n+61.160.234.57:8333\n+62.43.198.56:8333\n+62.45.0.15:8333\n 62.107.200.30:8333\n-62.133.15.58:8333\n 62.133.194.2:8333\n-62.133.194.156:8333\n-62.138.1.95:8333\n-62.216.238.3:8333\n-62.238.34.125:8333\n-63.137.40.207:8333\n-63.231.96.109:8333\n-64.78.240.150:8333\n-64.83.225.146:8333\n-64.137.236.68:8833\n-64.156.193.120:8333\n-66.79.160.82:8333\n-66.91.230.231:8333\n-66.135.128.121:8333\n-66.172.10.4:8333\n-66.194.38.250:8333\n-66.194.38.253:8333\n-66.215.34.26:8333\n-66.240.237.155:8333\n-67.205.96.108:8333\n-67.205.128.5:8333\n-67.219.233.140:8333\n-67.221.193.55:8333\n-68.100.196.118:8333\n-68.132.193.222:8333\n-68.168.118.234:8333\n-69.11.97.43:8333\n-69.30.229.10:8333\n-69.50.171.205:8333\n-69.125.193.145:8333\n-69.162.139.125:8333\n-70.35.98.39:8333\n-70.112.32.29:8333\n-71.126.181.146:8333\n-72.180.32.105:8333\n-73.226.64.145:8333\n-74.83.140.242:8333\n-74.84.128.158:9333\n-74.122.237.124:8333\n-74.215.133.145:8333\n-75.76.101.169:8333\n-75.85.13.8:8333\n-75.86.168.13:8333\n-75.170.97.25:8333\n-75.177.137.134:8333\n-76.76.227.136:8333\n-77.53.136.6:8333\n-77.110.11.52:8333\n-78.25.32.206:8333\n-78.34.8.120:8333\n-78.46.32.99:8333\n-78.56.9.214:8333\n-78.56.229.177:8333\n-78.129.237.245:8333\n-78.196.172.45:8333\n+62.138.3.224:8333\n+62.146.70.216:8333\n+64.78.163.10:8333\n+64.120.110.2:8333\n+64.131.160.31:8333\n+66.18.172.16:8333\n+66.85.74.242:8333\n+66.110.132.10:8333\n+66.114.33.90:8333\n+66.180.64.95:8333\n+66.222.164.188:8333\n+67.11.139.67:8333\n+67.43.191.118:8333\n+67.61.137.157:8333\n+67.193.184.12:8333\n+67.210.228.203:8333\n+67.215.12.43:8333\n+67.253.72.119:8333\n+68.201.228.6:8333\n+68.202.128.19:8333\n+69.30.218.226:8333\n+69.61.35.175:8333\n+69.61.171.22:8333\n+69.125.194.25:8333\n+70.35.98.12:8333\n+70.103.171.66:8333\n+70.172.252.29:8333\n+71.34.96.135:8333\n+71.68.48.149:8333\n+71.93.161.162:8333\n+71.162.192.5:8333\n+72.11.174.71:8333\n+72.50.240.124:8333\n+72.70.32.215:8333\n+72.211.196.232:8333\n+72.234.112.22:8333\n+72.253.237.0:8333\n+73.241.192.40:8333\n+74.15.230.112:8333\n+74.83.79.52:8333\n+74.126.14.27:8333\n+75.76.137.164:8333\n+76.64.166.230:8333\n+76.191.79.98:8333\n+77.37.170.106:8333\n+77.70.107.83:8333\n+77.95.226.194:8333\n+77.111.172.134:8333\n+77.163.136.136:8333\n+77.203.13.57:8333\n+77.239.37.12:8333\n+77.240.168.19:8333\n+77.244.219.164:8333\n+78.31.67.156:8333\n+78.34.2.126:8333\n+78.108.187.246:8333\n+78.109.163.153:8333\n+79.28.205.145:8333\n+79.66.70.89:8333\n 79.132.230.144:8333\n-79.169.35.235:8333\n-79.172.194.219:8333\n-80.64.65.87:8333\n-80.89.137.115:8333\n-80.93.36.173:8333\n-80.101.167.100:8333\n-80.114.34.158:8333\n-80.127.136.50:8333\n-80.188.139.82:8333\n-80.222.39.77:8333\n-80.223.105.69:8333\n-80.229.151.187:8333\n-80.240.129.221:8333\n-81.7.10.238:8333\n+80.209.224.79:8333\n+80.211.252.104:8333\n+80.229.28.60:8333\n 81.7.13.84:8333\n-81.27.96.92:8333\n-81.35.143.98:8333\n-81.82.201.5:8333\n-81.83.96.5:8333\n-81.169.227.36:8333\n-81.171.2.119:8333\n-81.171.38.130:8333\n-81.175.255.118:8333\n-81.207.8.49:8333\n-81.228.194.187:8333\n-82.9.1.77:8333\n-82.11.33.229:8333\n-82.102.13.117:8333\n-82.116.203.240:8333\n-82.130.103.16:8333\n-82.136.65.227:8333\n-82.158.227.238:8333\n-82.197.212.25:8333\n+81.7.16.182:8333\n+81.18.224.62:8333\n+81.171.27.138:8333\n+81.187.80.221:8333\n+81.217.112.225:8333\n+81.245.141.6:8333\n+82.43.171.91:8333\n+82.102.10.251:8333\n+82.118.234.178:8333\n+82.144.197.93:8333\n+82.161.109.190:8333\n+82.193.102.228:8333\n+82.193.109.199:8333\n 82.199.102.10:8333\n-82.200.204.41:8333\n-82.200.204.119:8333\n-82.221.105.223:8333\n+82.212.130.94:8333\n+82.213.208.16:8333\n+82.217.67.17:8333\n 82.221.108.27:8333\n-82.221.111.136:8333\n-82.221.139.97:8333\n+82.221.133.174:8333\n+83.55.130.30:8333\n+83.77.39.46:8333\n 83.137.41.10:8333\n-83.143.130.19:8333\n-83.150.9.196:8333\n-83.169.2.43:8333\n-83.217.203.130:8333\n-83.249.88.52:8333\n-84.26.162.92:8333\n-84.42.193.6:8333\n-84.134.194.115:8333\n-84.201.32.115:8333\n-84.212.232.71:8333\n-84.238.140.176:8333\n-85.10.104.34:8333\n-85.21.144.226:8333\n-85.25.194.12:8333\n-85.144.79.190:8333\n-85.145.228.192:8333\n-85.194.238.130:8333\n-85.228.201.80:8333\n-85.229.228.174:8333\n-85.236.233.87:8333\n-86.80.204.185:8333\n-86.105.227.190:8333\n-86.135.39.40:8333\n-87.106.139.127:8333\n-87.120.8.5:8333\n-87.120.37.230:8333\n-87.239.101.102:8333\n-87.243.197.82:8333\n-88.112.112.173:8333\n-88.150.192.17:8333\n-88.185.155.134:8333\n-88.202.202.221:8333\n-88.202.230.87:8333\n-88.208.39.182:8333\n-89.34.99.41:8333\n-89.163.224.187:8333\n-89.169.233.150:8333\n-89.184.65.85:8333\n-89.212.91.219:8333\n-89.249.178.36:8333\n-90.149.38.172:8333\n-91.65.97.157:8333\n-91.107.64.143:8333\n-91.114.35.107:8333\n+83.149.70.48:8333\n+83.151.233.218:8333\n+83.162.43.154:8333\n+83.164.131.243:8333\n+83.221.11.7:8333\n+83.243.128.13:8333\n+84.16.38.218:8333\n+84.38.3.249:8333\n+84.75.26.172:8333\n+84.200.106.128:8333\n+84.212.250.219:8333\n+84.215.134.195:8333\n+84.245.27.209:8333\n+84.254.40.152:8333\n+84.255.193.28:8333\n+85.10.112.194:8333\n+85.93.2.76:54382\n+85.94.172.33:8333\n+85.129.0.126:8333\n+85.145.168.159:8333\n+85.170.238.26:8333\n+85.195.232.197:8333\n+85.214.68.122:8333\n+85.214.235.137:8333\n+85.218.48.146:8333\n+85.220.165.205:8333\n+85.229.134.98:8333\n+85.241.49.242:8333\n+86.25.32.77:8333\n+86.41.89.170:8333\n+86.50.143.43:8333\n+86.61.67.183:8333\n+86.137.26.210:8333\n+86.177.194.215:8333\n+87.157.177.58:8333\n+87.224.163.66:8333\n+87.236.196.169:8333\n+87.246.46.132:8333\n+88.99.64.76:8333\n+89.1.100.49:8333\n+89.10.155.88:8333\n+89.27.59.246:8333\n+89.163.132.73:8333\n+89.179.240.131:8333\n+89.205.81.5:8333\n+89.212.75.6:8333\n+89.217.130.147:8333\n+89.230.96.42:8333\n+89.248.172.10:8333\n+90.46.57.17:8333\n+90.110.11.101:8333\n+90.240.37.163:8333\n+91.65.4.21:8333\n+91.65.192.159:8333\n+91.83.237.185:8333\n+91.110.125.26:8333\n+91.121.160.59:8333\n 91.135.0.187:8333\n-91.145.110.95:8333\n-91.157.38.151:8333\n-91.197.44.133:8333\n-91.205.176.54:8333\n-91.206.203.10:8333\n-91.206.203.18:8333\n-91.215.35.130:8333\n-91.219.239.159:8333\n-91.223.133.2:8333\n-91.223.133.40:8333\n-91.226.10.90:8333\n-91.240.141.169:8333\n-92.27.7.209:8333\n-92.89.67.207:8333\n-92.221.201.138:8333\n-93.95.187.122:8333\n-93.103.73.187:8333\n+91.143.109.68:8333\n+91.195.42.134:8333\n+91.221.70.137:8333\n+92.35.132.5:8333\n+92.42.37.141:8333\n+92.54.16.144:8333\n+92.62.34.184:8333\n+92.186.231.240:8333\n 93.123.80.47:8333\n-93.188.224.253:8333\n-93.190.69.242:8333\n-94.19.12.244:8333\n-94.156.128.116:8333\n-94.177.171.73:8333\n-94.181.44.104:8333\n-94.237.26.173:8333\n-94.242.229.158:8333\n-94.255.128.98:8333\n-95.79.35.50:8333\n-95.91.41.39:8333\n-95.110.234.93:8333\n-95.128.48.209:8333\n-95.183.48.71:8333\n-96.23.67.85:8333\n-97.64.177.10:8333\n-97.104.201.95:8333\n-98.29.197.149:8333\n-98.169.2.107:8333\n-99.232.48.72:8333\n-101.100.141.55:8333\n-103.7.32.40:8333\n-103.53.225.69:8333\n-103.249.106.74:8333\n-104.128.224.13:8333\n-104.128.228.252:8333\n-104.155.1.158:8333\n-104.168.128.50:8333\n-104.199.160.228:8333\n-104.204.109.11:8333\n-104.219.251.118:8333\n-104.223.3.129:8333\n-104.223.3.219:8333\n-104.238.130.182:8333\n-104.245.99.227:8333\n-106.38.234.89:8333\n-106.104.134.218:8333\n-107.136.6.71:8333\n-107.150.45.210:8333\n-107.151.144.103:8333\n-107.170.44.99:8333\n-107.181.137.133:8333\n-107.191.102.13:8333\n-108.58.252.82:8333\n-108.59.9.167:8333\n-108.59.12.163:8333\n-108.162.106.215:8333\n-108.168.133.164:8333\n-108.173.202.101:8333\n-108.180.110.190:8333\n-109.29.75.40:8333\n-109.120.194.136:8333\n-109.230.230.88:8333\n-109.235.67.115:8333\n-109.235.69.120:8333\n-109.236.90.199:8333\n-109.255.0.107:8333\n-110.10.130.12:8333\n-110.10.176.94:8333\n-110.132.172.251:8333\n-111.90.158.17:8333\n-115.66.205.171:8333\n-116.31.123.139:8333\n-118.192.48.46:8333\n-118.193.164.98:8333\n-119.29.156.231:8333\n-119.63.44.133:19980\n-119.81.99.27:8333\n-119.106.12.169:8333\n-119.147.137.155:19980\n-119.185.1.182:8333\n-120.55.193.136:8333\n-121.254.173.23:8333\n-121.254.173.40:8333\n-123.56.129.45:8333\n-123.203.163.128:8333\n-123.206.32.198:8333\n-124.189.160.221:8333\n-124.189.192.232:8333\n-128.140.224.162:8333\n-128.199.68.205:8333\n-130.234.207.115:8333\n-131.113.41.123:8333\n-131.114.72.104:8333\n-132.204.108.155:8333\n-134.119.13.230:8333\n-134.213.133.206:8333\n-134.213.133.207:8333\n-135.23.5.3:8333\n-137.74.0.66:8333\n-138.68.1.45:8333\n-138.68.2.194:8333\n-138.68.64.19:8333\n-138.68.64.28:8333\n-139.59.42.248:8333\n-139.220.240.153:8333\n-140.112.107.118:8333\n-140.186.224.112:8333\n-141.52.64.141:8333\n-142.68.237.107:8333\n-142.217.12.106:8333\n-146.60.204.92:8333\n-146.185.161.209:8333\n-148.103.7.119:8333\n-149.210.133.244:8333\n-150.229.0.143:8333\n-151.231.238.25:8333\n-151.248.160.227:8333\n-153.230.228.15:8333\n-155.133.43.249:8333\n-158.58.238.145:8333\n-158.109.79.13:34821\n-159.203.70.208:8333\n-160.16.206.31:8333\n-162.209.1.233:8333\n-162.209.4.125:8333\n-162.216.192.231:8333\n-162.243.100.111:8333\n-162.246.11.194:8333\n-162.248.102.117:8333\n-162.252.46.83:8333\n-163.172.33.78:8333\n-163.172.194.30:8333\n-169.229.198.106:8333\n-170.75.195.168:8333\n-172.103.205.197:8333\n-172.245.225.126:8333\n-173.179.37.8:8333\n-173.208.203.74:8333\n-173.252.46.16:8333\n-174.117.141.124:8333\n-175.126.38.158:8333\n-175.126.38.177:8333\n-175.139.106.119:8333\n-175.140.232.66:8333\n-176.9.117.100:8333\n-176.36.33.121:8333\n-176.36.99.222:8333\n-176.56.227.36:8333\n-176.100.100.206:8333\n-176.106.144.183:8333\n-176.123.7.148:8333\n+93.170.13.15:8333\n+93.171.201.68:8333\n+93.179.197.152:8333\n+93.190.206.151:8333\n+93.191.131.177:8333\n+93.208.132.214:8333\n+94.104.97.247:8333\n+94.156.35.8:8333\n+94.199.173.113:8333\n+95.42.2.113:8333\n+95.94.225.61:8333\n+95.154.237.24:8333\n+95.158.39.64:8333\n+95.163.71.126:8333\n+95.163.106.139:8333\n+95.208.163.214:8333\n+95.213.143.13:8333\n+95.226.77.108:8333\n+96.3.74.66:8333\n+96.23.128.65:8333\n+96.27.8.242:8333\n+96.27.129.94:8333\n+96.126.100.148:8333\n+97.74.6.105:8333\n+97.116.160.102:8333\n+98.7.64.249:8333\n+98.10.106.49:8333\n+98.25.197.125:8333\n+98.29.7.103:8333\n+98.127.130.17:8333\n+99.224.192.201:8333\n+101.190.172.209:8333\n+103.35.151.76:8334\n+103.74.193.127:8333\n+103.80.133.191:8333\n+103.80.168.57:8333\n+103.99.168.102:8333\n+103.194.42.10:8333\n+104.168.101.207:8333\n+104.200.67.162:8333\n+104.207.132.42:8333\n+104.237.4.202:8333\n+107.155.72.108:8333\n+107.183.37.162:8333\n+108.175.3.18:8333\n+108.220.192.57:8333\n+109.61.102.5:8333\n+109.206.177.21:8333\n+109.237.111.156:8333\n+115.68.47.82:8333\n+116.88.75.110:8333\n+118.67.201.40:8333\n+119.28.4.230:8333\n+119.28.130.210:8333\n+120.31.143.167:8333\n+120.220.14.92:8333\n+120.220.14.93:8333\n+124.18.133.220:8333\n+126.207.39.22:8333\n+128.77.37.214:8333\n+128.125.100.2:8333\n+129.158.74.237:8333\n+129.213.32.176:8333\n+131.113.41.119:8333\n+131.113.41.125:8333\n+131.114.10.233:8333\n+131.188.40.191:8333\n+131.188.42.36:8333\n+134.0.112.92:8333\n+134.3.26.190:8333\n+135.23.196.24:8333\n+135.84.207.4:8333\n+136.59.129.125:8333\n+136.61.239.7:8333\n+137.117.164.18:8333\n+139.130.41.82:8333\n+141.134.71.188:8333\n+141.213.6.57:8333\n+141.223.82.139:8333\n+142.0.130.49:8333\n+142.0.130.53:8333\n+144.118.141.232:8333\n+148.66.58.146:8333\n+150.95.130.17:8333\n+150.187.36.233:8333\n+150.249.76.102:8333\n+153.125.129.187:8333\n+153.125.224.107:8333\n+154.48.236.250:8887\n+154.66.207.126:8333\n+155.143.140.186:8333\n+157.131.142.164:8333\n+158.64.79.182:8333\n+158.85.93.163:8333\n+158.140.128.239:8333\n+158.174.131.171:8333\n+159.8.4.19:8333\n+159.217.144.68:8333\n+159.217.144.252:8333\n+159.253.47.202:8333\n+162.155.64.226:8333\n+162.222.100.118:8333\n+162.255.168.27:8333\n+162.255.168.30:8333\n+163.158.228.125:8333\n+165.227.96.38:8333\n+169.229.238.17:8333\n+171.25.165.145:8333\n+171.33.177.9:8333\n+172.72.228.93:8333\n+172.96.161.244:8333\n+172.102.228.150:8333\n+172.118.136.98:8333\n+173.46.65.8:8333\n+173.212.193.35:8333\n+173.239.33.85:8333\n+173.243.64.48:8333\n+174.115.129.37:8333\n+176.12.6.59:8333\n+176.107.184.29:8333\n+176.123.10.192:8333\n 176.126.167.10:8333\n-176.223.201.198:8333\n-178.62.68.62:8333\n-178.62.102.56:8333\n-178.62.203.185:8333\n-178.124.197.101:8333\n-178.170.138.202:8333\n-178.175.129.18:8333\n-178.188.47.62:8333\n-178.199.240.22:8333\n-178.218.209.162:8333\n-178.237.35.34:8333\n-178.238.224.242:8333\n-178.254.34.144:8333\n-178.254.34.161:8333\n-179.43.183.2:8333\n-180.200.128.58:8333\n-182.93.34.130:8333\n-185.8.238.197:8333\n-185.11.139.172:8333\n-185.24.97.11:8333\n-185.24.233.100:8333\n-185.25.48.71:8333\n-185.25.48.114:8333\n+176.185.235.163:8333\n+176.223.130.254:8333\n+178.0.71.136:8333\n+178.12.32.39:8333\n+178.85.64.212:8333\n+178.124.162.209:8333\n+178.128.192.21:8333\n+178.151.133.56:8333\n+178.193.96.201:8333\n+178.248.200.126:8333\n+178.254.7.88:8333\n+180.233.106.171:8333\n+181.166.168.210:8333\n+183.66.227.70:12060\n+183.111.108.56:8333\n+184.70.33.190:8333\n+184.105.70.100:8333\n+184.105.70.101:8333\n+185.12.7.38:8333\n+185.21.216.134:8333\n+185.25.48.184:8333\n+185.25.48.217:8333\n+185.25.60.199:8333\n 185.28.76.179:8333\n-185.70.105.152:8339\n-185.77.128.69:8333\n-185.77.128.241:8333\n-185.86.79.87:8333\n-185.89.102.2:3333\n-185.89.102.53:3333\n-185.109.144.155:8333\n-185.117.75.50:8333\n+185.35.139.54:8333\n+185.44.78.208:8333\n+185.47.132.55:8333\n+185.51.128.27:8333\n+185.59.100.107:8333\n+185.67.175.75:8333\n+185.67.204.76:8333\n+185.67.204.80:8333\n+185.70.105.74:8339\n+185.85.3.140:8333\n+185.86.15.23:8333\n+185.86.15.25:8333\n+185.102.71.6:8333\n+185.117.74.21:8333\n 185.121.173.223:8333\n-185.128.41.157:8333\n-185.130.226.106:8333\n-185.145.130.76:8333\n-188.63.192.104:8333\n-188.113.164.231:8333\n-188.166.229.112:8333\n-188.214.128.77:8333\n-190.10.8.211:8333\n-190.81.160.184:8333\n-190.111.231.19:8333\n-192.131.44.93:8333\n+185.128.40.122:8333\n+185.145.131.218:8333\n+185.147.237.169:8333\n+185.162.128.83:8333\n+185.165.76.220:8333\n+185.172.165.130:8333\n+185.177.5.4:8333\n+185.183.131.75:8333\n+185.186.208.208:8333\n+185.215.224.22:8333\n+185.224.80.108:8333\n+185.225.16.4:8333\n+185.243.112.214:8333\n+185.244.193.18:8333\n+185.248.160.66:8333\n+186.19.136.144:8333\n+188.68.38.243:8333\n+188.68.240.89:8333\n+188.134.6.84:8333\n+188.134.77.121:8333\n+188.138.1.43:8333\n+188.217.9.168:8333\n+190.2.133.91:8333\n+190.184.198.34:8333\n+190.211.204.68:8333\n+192.139.35.143:8333\n+192.162.100.156:8333\n+192.162.101.250:8333\n 192.206.202.6:8333\n-192.227.245.133:8333\n-192.241.74.123:8333\n-192.241.74.126:8333\n-192.254.71.222:8333\n-193.10.64.85:8333\n-193.46.80.101:8333\n-193.49.43.219:8333\n-193.93.79.215:8333\n-193.183.99.46:8333\n-193.234.224.195:8333\n-193.239.80.155:8333\n-194.63.140.208:8333\n-194.87.1.232:8333\n-194.187.227.18:8333\n-194.247.12.136:8333\n-195.91.176.86:8333\n-196.28.98.20:8333\n-198.44.249.35:8333\n-198.84.172.252:8333\n-198.204.224.106:8333\n-198.211.97.46:8333\n-199.66.64.198:8333\n-199.101.100.58:8333\n-199.101.100.59:8333\n+192.207.12.244:8333\n+192.207.12.245:8333\n+192.228.101.157:8333\n+193.112.192.73:8333\n+193.170.166.12:8333\n+194.15.231.236:8333\n+194.165.16.33:8333\n+194.181.80.77:8333\n+194.186.160.253:8333\n+194.247.13.7:8333\n+194.247.13.32:8333\n+195.0.203.21:8333\n+195.38.168.114:8333\n+195.43.141.28:8333\n+195.95.225.248:8333\n+195.123.224.7:8333\n+195.154.235.79:8333\n+195.169.99.82:8333\n+195.201.0.81:8333\n+197.155.6.43:8333\n+198.44.231.160:6333\n+198.58.102.35:8333\n+198.137.202.175:8333\n 199.127.224.50:8333\n-200.46.241.71:8333\n-200.116.98.185:8333\n-203.9.225.13:8333\n-203.177.142.37:8333\n-205.200.247.149:8333\n-205.209.131.150:13838\n-206.53.64.74:8333\n-206.72.192.69:8333\n-206.123.112.180:8333\n-208.66.208.153:8333\n-208.68.174.76:8333\n-208.107.97.242:8333\n-208.111.48.132:8333\n+199.182.129.26:8333\n+199.188.204.102:8333\n+199.188.204.155:8333\n+199.244.49.224:8333\n+199.249.230.37:15738\n+200.83.123.46:8333\n+200.109.67.71:8333\n+200.122.128.185:8333\n+202.153.199.182:8333\n+202.159.136.54:8333\n+202.168.16.232:8333\n+203.11.71.1:8333\n+203.162.80.219:8333\n+203.178.143.13:8333\n+204.15.11.4:8333\n+206.125.169.162:8333\n+206.174.55.164:8333\n+207.182.146.18:8333\n+208.93.66.198:8333\n+208.98.196.249:8333\n+208.107.224.202:8333\n+208.110.65.114:8333\n 208.118.235.190:8333\n-209.6.205.126:8333\n-209.40.96.121:8333\n-209.58.130.137:8333\n-209.73.142.226:8333\n-209.90.224.4:8333\n-209.126.69.243:8333\n-209.126.108.91:8333\n-209.195.4.18:8333\n-209.250.6.190:8333\n-210.54.37.225:8333\n-210.223.3.44:8333\n-211.149.234.109:8333\n-212.51.140.183:8333\n-212.90.179.206:8333\n-212.93.226.90:8333\n-212.110.171.118:8333\n-212.202.132.17:8333\n+209.122.208.131:8333\n+209.126.110.198:8333\n+209.131.238.80:8333\n+212.56.108.81:8333\n+212.73.150.132:8333\n+212.77.224.145:8333\n+212.85.90.194:8333\n+212.92.101.30:8333\n+212.112.133.92:8333\n+212.227.132.167:8333\n+213.10.100.182:8333\n+213.57.240.69:8333\n 213.91.205.134:8333\n-213.165.68.218:8333\n-213.196.200.213:8333\n-216.59.4.212:8333\n-216.74.32.109:8333\n-216.158.225.70:8333\n-216.164.138.13:8333\n-216.167.236.247:8333\n-216.197.79.74:8333\n-217.11.225.189:8333\n-217.12.199.207:8333\n+213.125.67.108:8333\n+213.152.161.170:45893\n+213.155.3.216:8333\n+213.180.70.138:8333\n+213.185.226.225:8333\n+216.71.203.79:8333\n+216.194.164.211:8333\n+216.240.168.226:8333\n 217.20.130.72:8333\n-217.23.6.148:8333\n-217.23.140.103:8333\n-217.28.96.180:8333\n-217.35.130.42:8333\n-217.111.66.79:8333\n-217.158.9.102:8333\n-217.168.143.169:8333\n-217.209.32.219:8333\n-218.161.33.165:8333\n-221.121.144.138:8333\n-[2001:0:4137:9e76:2048:3a84:bb91:e846]:8333\n-[2001:0:4137:9e76:2066:e9e:b489:f8b8]:8333\n-[2001:0:4137:9e76:3854:1211:b5ac:a96b]:8333\n-[2001:0:4137:9e76:4e3:1f66:cd4c:829f]:8333\n-[2001:0:4137:9e76:ad:1f4:9ea9:fa2e]:8333\n-[2001:0:4137:9e76:e5:baa:b66f:f418]:8333\n-[2001:0:53aa:64c:20a2:59c4:ad22:93ea]:8333\n-[2001:0:53aa:64c:59:617f:a10d:e0]:8333\n-[2001:0:5ef5:79fb:200f:3ae5:3cbc:74c9]:8333\n-[2001:0:5ef5:79fb:38f2:13b4:b208:5604]:8333\n-[2001:0:5ef5:79fd:200b:22a7:cc50:f52d]:8333\n-[2001:0:5ef5:79fd:24ef:1aef:a994:303d]:8333\n-[2001:0:5ef5:79fd:24fc:b5d:ad4f:4db2]:8333\n-[2001:0:5ef5:79fd:28bf:2d23:e02e:c3ef]:8333\n-[2001:0:5ef5:79fd:3cd0:3c2e:da44:a759]:8333\n-[2001:0:5ef5:79fd:87e:fd7:b1c2:1b4]:8333\n-[2001:0:9d38:6ab8:18db:3bda:ab90:e81e]:8333\n-[2001:0:9d38:6ab8:4e7:1660:862f:a6d7]:8333\n-[2001:0:9d38:6ab8:6:2b:5074:9588]:8333\n-[2001:0:9d38:6abd:10f8:a7d7:bb90:f524]:8333\n-[2001:13d8:1c01:1000::11]:8333\n-[2001:15c0:65ff:610::2]:8333\n-[2001:1608:10:156:ae::4adb]:8333\n-[2001:1620:b1b:8888:20d:b9ff:fe41:6710]:8333\n-[2001:1620:b1b:face:20d:b9ff:fe41:6710]:8333\n-[2001:1620:f00:282::2]:8333\n-[2001:1620:f00:8282::1]:8333\n-[2001:1680:101:1ae::1]:8333\n-[2001:16d8:ff00:85de:20c:29ff:fe52:9594]:8333\n-[2001:19f0:4400:434d:5400:ff:fe42:2678]:8333\n-[2001:19f0:5000:8c8b:5400:ff:fe1f:c023]:8333\n-[2001:19f0:5000:8ce6:5400:ff:fe1b:24a9]:8333\n-[2001:19f0:5:314:5400:ff:fe2c:42e8]:8333\n-[2001:19f0:5:51b:5400:ff:fe49:fe5b]:8333\n-[2001:19f0:5:bc:5400:ff:fe3b:9339]:8333\n-[2001:1af8:4020:a020:5::]:8333\n-[2001:1bc8:1a0:590e:2e0:f4ff:fe16:3a39]:8333\n-[2001:1c04:1401:8f00:f4fe:4fff:fe0c:df40]:8333\n-[2001:4128:6135:10:20c:29ff:fe69:9e81]:8333\n+217.23.9.180:8333\n+217.64.47.138:8333\n+217.169.14.90:8333\n+218.245.1.205:8333\n+220.130.128.58:8333\n+220.133.39.61:8333\n+222.239.193.116:8333\n+222.239.193.120:8333\n+[2001:0:4137:9e76:1cbd:3bc0:ade7:bf44]:8333\n+[2001:0:4137:9e76:2046:150d:8d65:de4]:8333\n+[2001:0:4137:9e76:2c99:3f36:d003:f47a]:8333\n+[2001:0:4137:9e76:34b6:3910:a3dc:7bfa]:8333\n+[2001:0:4137:9e76:3cec:2b5:525b:fb3c]:8333\n+[2001:0:53aa:64c:c5:235d:a10d:e0]:8333\n+[2001:0:53aa:64c:cbc:5ace:a625:39d1]:8333\n+[2001:0:5ef5:79fb:38e5:36c1:d0ee:5d98]:8333\n+[2001:0:5ef5:79fb:3c5c:c6c:39cf:69d3]:8333\n+[2001:0:5ef5:79fb:896:ef4:ba63:8d15]:8333\n+[2001:0:9d38:6ab8:106a:2112:e06b:b881]:8333\n+[2001:0:9d38:6ab8:1c99:1655:e782:9340]:8333\n+[2001:0:9d38:6ab8:20cd:1cd9:54e6:5a6e]:8333\n+[2001:0:9d38:6ab8:245e:2b3:a300:317e]:8333\n+[2001:0:9d38:6ab8:2814:215c:88e3:4ee0]:8333\n+[2001:0:9d38:6ab8:30ac:3a51:b2da:712d]:8333\n+[2001:0:9d38:6ab8:34a6:eeb:c3ed:5be7]:8333\n+[2001:0:9d38:6ab8:c2f:16d5:525a:107e]:8333\n+[2001:0:9d38:6ab8:cb1:2557:431c:f3e1]:8333\n+[2001:0:9d38:6abd:1056:290d:a671:3d90]:8333\n+[2001:0:9d38:6abd:1865:14fe:d0a7:1f72]:8333\n+[2001:0:9d38:6abd:2c3c:3006:a486:93c3]:8333\n+[2001:0:9d38:6abd:2c73:3313:f21a:96da]:8333\n+[2001:0:9d38:6abd:3050:fbff:a250:3386]:8333\n+[2001:0:9d38:6abd:3828:494:fdaa:56cd]:8333\n+[2001:0:9d38:6abd:454:187d:3e75:b00b]:8333\n+[2001:0:9d38:78cf:c2c:1dcc:fa42:41a3]:8333\n+[2001:0:9d38:90d7:1c4a:20d4:4daa:eb5a]:8333\n+[2001:0:9d38:90d7:1ca7:1612:9a18:31e5]:8333\n+[2001:0:9d38:90d7:24c8:3a0a:a68d:f799]:8333\n+[2001:0:9d38:90d7:2837:324e:d0cb:9f45]:22475\n+[2001:0:9d38:90d7:28c1:361e:a69c:b099]:8333\n+[2001:0:9d38:90d7:30fe:1c89:d0b4:4d18]:8333\n+[2001:0:9d38:90d7:3474:1df1:e732:e5e3]:8333\n+[2001:0:9d38:90d7:34a8:fb1:88e3:fb19]:8333\n+[2001:0:9d38:90d7:3c19:3d23:d0b4:f831]:18652\n+[2001:0:9d38:90d7:3c45:2342:d0cb:d6ca]:8333\n+[2001:0:9d38:90d7:3c5f:3105:d0b4:60b6]:8333\n+[2001:0:9d38:90d7:8a1:2fb:d0cb:1e8f]:8333\n+[2001:0:9d38:90d7:a3:36e0:e020:53fa]:8333\n+[2001:0:9d38:90d7:eb:3b30:d0a4:aa5]:8333\n+[2001:0:9d38:953c:104e:8af:b3aa:f300]:8333\n+[2001:0:9d38:953c:1434:71f:b850:bab1]:8333\n+[2001:0:9d38:953c:144a:36e8:519a:bb69]:8333\n+[2001:0:9d38:953c:20fc:26ef:ed26:c737]:8333\n+[2001:0:9d38:953c:454:120:88e8:2fb]:8333\n+[2001:0:9d38:953c:801:1620:bc22:95bc]:8333\n+[2001:0:9d38:953c:8a0:1fdb:ab00:bc2]:8333\n+[2001:0:9d38:953c:cf6:3d48:4386:4937]:8333\n+[2001:13d8:1c01:1000::8]:8333\n+[2001:1620:923:0:75be:ed92:1a01:641]:8333\n+[2001:1680:101:8c::1]:8333\n+[2001:1970:5ae2:2b00:30bd:7910:c84:7a8f]:8333\n+[2001:1970:5d56:aa01:1e75:8ff:fead:da48]:8333\n+[2001:19f0:300:1045:225:90ff:fec9:29b3]:8333\n+[2001:19f0:5:1f93:5400:1ff:fe7a:c65a]:8333\n+[2001:19f0:6c01:4bd:5400:1ff:fe76:4db6]:8333\n+[2001:19f0:ac01:2fb:5400:ff:fe5b:c3ff]:8333\n+[2001:1a48:7:af1a:75f8:2c47:3285:d50e]:8333\n+[2001:1af8:4010:a094:3333::8c38]:8333\n+[2001:1af8:4070:a016:3333::5afb]:8333\n+[2001:1af8:4700:a071:4444::e26e]:8333\n+[2001:200:0:8801:5054:ff:fef2:1d0]:8333\n [2001:4128:6135:2010:21e:bff:fee8:a3c0]:8333\n-[2001:4128:6135:e001:5054:ff:fe37:e9eb]:8333\n-[2001:41d0:1000:1024::]:8333\n-[2001:41d0:1000:1433::]:8333\n-[2001:41d0:1004:22ae::]:8333\n-[2001:41d0:1004:2996::]:8333\n-[2001:41d0:1008:11e0::1a5c:6d9d]:8333\n-[2001:41d0:1008:11e0::b74:baf7]:8333\n-[2001:41d0:1008:237a::]:8333\n-[2001:41d0:1008:2752::]:8333\n-[2001:41d0:1008:494::]:8333\n+[2001:41d0:1000:1f98::]:8333\n+[2001:41d0:1004:18c7::]:8333\n+[2001:41d0:1004:19dc::]:18555\n+[2001:41d0:1004:1f7c::]:8333\n+[2001:41d0:1008:2bed::]:8333\n [2001:41d0:1:45d8::1]:8333\n-[2001:41d0:1:5630::1]:8333\n-[2001:41d0:1:6f57::1]:8333\n-[2001:41d0:1:801e::1]:8333\n-[2001:41d0:1:8852::1]:8333\n+[2001:41d0:1:5395::1]:8333\n+[2001:41d0:1:85d3::1]:8333\n+[2001:41d0:1:8649::1]:8333\n [2001:41d0:1:8b26::1]:8333\n [2001:41d0:1:a5b8::1]:8333\n-[2001:41d0:1:b26b::1]:8333\n-[2001:41d0:1:c139::1]:8333\n-[2001:41d0:1:c8d7::1]:8333\n+[2001:41d0:1:ab6b::1]:8333\n [2001:41d0:1:d227::]:8333\n-[2001:41d0:1:dbc4::1]:8333\n-[2001:41d0:1:dc5d::1]:8333\n-[2001:41d0:1:e13b::1]:8333\n-[2001:41d0:1:ef5b::1]:8333\n-[2001:41d0:2:16be::1]:8333\n-[2001:41d0:2:203c::1]:8333\n-[2001:41d0:2:38c5::1]:8333\n-[2001:41d0:2:519::]:8333\n-[2001:41d0:2:9c94::1]:8333\n-[2001:41d0:2:b792::]:8333\n-[2001:41d0:2:bf2a::]:8333\n-[2001:41d0:2:c793::]:8333\n-[2001:41d0:2:c9bf::]:8333\n-[2001:41d0:303:4f0::]:8333\n-[2001:41d0:8:1a8a::1]:8333\n-[2001:41d0:8:3fa9::1]:8333\n-[2001:41d0:8:4670::1]:8333\n-[2001:41d0:8:4f48::1]:8333\n-[2001:41d0:8:6728::]:8333\n-[2001:41d0:8:72c2:d:242:ac11:2]:8333\n-[2001:41d0:8:8007::]:8333\n-[2001:41d0:8:a71c::]:8333\n-[2001:41d0:8:bccc::1]:8333\n-[2001:41d0:8:bd45::1]:8333\n+[2001:41d0:1:f897::1]:8333\n+[2001:41d0:1:f932::1]:8333\n+[2001:41d0:2:34b7::1]:8333\n+[2001:41d0:2:4975::]:8333\n+[2001:41d0:2:5c22::]:8333\n+[2001:41d0:2:84d4::1]:8333\n+[2001:41d0:2:ab38::]:8333\n+[2001:41d0:2:c33c::]:8333\n+[2001:41d0:303:193b::]:8333\n+[2001:41d0:303:2505::1a]:8333\n+[2001:41d0:303:41db::]:58333\n+[2001:41d0:303:4c68::]:8333\n+[2001:41d0:303:508::]:8333\n+[2001:41d0:303:6767::]:8333\n+[2001:41d0:303:68cd::]:8333\n+[2001:41d0:602:17a4::]:8333\n+[2001:41d0:602:1842::]:8333\n+[2001:41d0:602:3b7::]:8333\n+[2001:41d0:602:898::]:8333\n+[2001:41d0:602:b1a::]:8333\n+[2001:41d0:800:135::]:8333\n+[2001:41d0:800:3d3::]:8333\n+[2001:41d0:8:101d::1]:8333\n+[2001:41d0:8:1b29::]:8333\n+[2001:41d0:8:3f74::1]:8333\n+[2001:41d0:8:43a0::]:8333\n+[2001:41d0:8:bb32::1]:8333\n+[2001:41d0:8:bed3::]:8333\n [2001:41d0:8:c67c::]:8333\n-[2001:41d0:8:de3d::1]:8333\n-[2001:41d0:8:e257::1]:8333\n-[2001:41d0:8:e3e4::1]:8333\n-[2001:41d0:a:14cc::1]:8333\n-[2001:41d0:a:15b2::1]:8333\n-[2001:41d0:a:1ac9::1]:8333\n-[2001:41d0:a:2496::1]:8333\n-[2001:41d0:a:308c::]:8333\n-[2001:41d0:a:5879::]:8333\n-[2001:41d0:a:6810::1]:8333\n-[2001:41d0:a:682d::1]:8333\n+[2001:41d0:8:ca2d::]:8333\n+[2001:41d0:8:d444::1]:8333\n+[2001:41d0:8:ddb::1]:8333\n+[2001:41d0:8:ea86::1]:8333\n+[2001:41d0:a:1220::1]:8333\n+[2001:41d0:a:27ed::1]:8333\n+[2001:41d0:a:296c::]:8139\n+[2001:41d0:a:2b18::1]:8333\n+[2001:41d0:a:405c::]:8333\n+[2001:41d0:a:42df::]:8312\n+[2001:41d0:a:4c49::aca:7929]:8333\n+[2001:41d0:a:6927::1]:8333\n+[2001:41d0:a:69a2::1]:8333\n+[2001:41d0:a:6a87::1]:8333\n [2001:41d0:a:6c29::1]:8333\n-[2001:41d0:a:f52a::1]:8333\n-[2001:41d0:d:111c::]:8333\n+[2001:41d0:a:6c7d::1]:8333\n+[2001:41d0:a:f243::1]:8333\n+[2001:41d0:a:f9cd::1]:8333\n+[2001:41d0:d:dc9::]:8333\n+[2001:41d0:e:1146::1]:8333\n+[2001:41d0:e:126::1]:8333\n+[2001:41d0:e:12aa::1]:8333\n [2001:41d0:e:1388::1]:8333\n-[2001:41d0:e:26b::1]:8333\n-[2001:41d0:e:f73::1]:8333\n-[2001:41d0:fc8c:a200:7a24:afff:fe9d:c69b]:8333\n-[2001:41f0:61:0:72f3:95ff:fe09:7521]:8333\n-[2001:41f0:61::7]:8333\n-[2001:4428:200:8171:db6:2ff4:9c0e:a2da]:8333\n-[2001:470:1f07:151c:baac:6fff:feb7:3ba9]:8333\n-[2001:470:1f0b:ad6:a60:6eff:fec6:2323]:8333\n-[2001:470:1f11:617::10f]:8333\n-[2001:470:1f14:73e::2]:8333\n-[2001:470:1f14:7d::2]:8333\n+[2001:41d0:e:ec5::1]:8333\n+[2001:41f0:0:4:62:6974:636f:696e]:8333\n+[2001:470:18:be4::2]:8333\n+[2001:470:1c62:b170:bbff:53f1:edbf:99df]:42434\n+[2001:470:1f06:15b4::2]:8333\n+[2001:470:1f06:cea::2]:8333\n+[2001:470:1f07:803:20c:29ff:fe2d:5879]:8333\n+[2001:470:1f08:3cc::2]:8333\n+[2001:470:1f0a:18dd::2]:8333\n [2001:470:1f15:11f8::10]:8333\n-[2001:470:1f15:1b95:2c3e:8a9a:24e1:7084]:8333\n-[2001:470:1f15:e9b::3ef]:8333\n-[2001:470:1f1d:3a9::10]:8333\n-[2001:470:25:482::2]:8333\n-[2001:470:27:19f::2]:8333\n-[2001:470:27:665::2]:8333\n-[2001:470:28:365::4]:8333\n+[2001:470:1f15:cf7::14]:8333\n+[2001:470:1f17:b5::10]:8333\n+[2001:470:1f1a:172::2]:8333\n+[2001:470:1f1b:5a6:216:3eff:fe24:1162]:8333\n+[2001:470:28:365::7]:8333\n [2001:470:41:6::2]:8333\n-[2001:470:727b::11:14]:8333\n-[2001:470:7:2f0::2]:8333\n-[2001:470:7:65::2]:8333\n-[2001:470:7f85::2]:8333\n-[2001:470:8:2e1:5825:39df:3e4c:54a8]:8333\n-[2001:470:8:2e1::43]:8333\n-[2001:470:8:2e1:ae2a:e257:4470:6350]:8333\n+[2001:470:6c80:101::1]:8333\n+[2001:470:6c80:3::1]:8333\n+[2001:470:7:63e::2]:8333\n+[2001:470:7:b74::2]:8333\n+[2001:470:8:bd3:4d25:ca57:a5b7:c6c4]:8333\n [2001:470:a:c13::2]:8333\n-[2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n-[2001:4801:7819:74:b745:b9d5:ff10:aaec]:8333\n-[2001:4801:7828:104:be76:4eff:fe10:1325]:8333\n-[2001:4802:7800:2:30d7:1775:ff20:1858]:8333\n+[2001:470:c144:cafe::23]:8333\n+[2001:470:c3c4:100:100::202]:8333\n+[2001:470:e696::1]:8333\n+[2001:48f8:1003::3ba]:8333\n+[2001:48f8:9015:1422:3dc0:fcf2:772f:57bc]:8333\n [2001:4ba0:babe:832::]:8333\n-[2001:4ba0:cafe:379::1]:8333\n-[2001:4ba0:ffee:33::10]:8333\n-[2001:4dd0:ff00:9a67::9]:8333\n-[2001:610:1b19::3]:8333\n-[2001:610:600:a41::2]:8333\n-[2001:678:174:4021::2:8333]:8333\n-[2001:67c:16dc:1201:5054:ff:fe17:4dac]:8333\n-[2001:67c:2128:ffff:6062:36ff:fe30:6532]:8333\n-[2001:67c:2564:331:3547:6e28:85a4:fb27]:8333\n-[2001:6a0:200:368::2]:8333\n-[2001:718:801:311:5054:ff:fe19:c483]:8333\n-[2001:7b8:2ff:8f::2]:8333\n-[2001:8d8:8a6:4400::3f:86c]:8333\n-[2001:8d8:923:8400::87:ebd]:8333\n-[2001:960:66d::2]:8333\n-[2001:981:46:1:ba27:ebff:fe5b:edee]:8333\n-[2001:ba8:1f1:f069::2]:8333\n-[2001:bc8:225f:10e:505:6573:7573:d0a]:8333\n-[2001:bc8:2706::1]:8333\n-[2001:bc8:323c:100::53]:8333\n-[2001:bc8:323c:100::80:4]:8333\n-[2001:bc8:323c:100::cafe]:8333\n-[2001:bc8:3680:4242::1]:8333\n+[2001:628:22a0:9::12]:8333\n+[2001:638:a000:4140::ffff:191]:8333\n+[2001:638:a000:4142::ff10:bed6]:8333\n+[2001:67c:21ec:1000::a]:8333\n+[2001:8d8:90b:c000::21:2fc0]:8333\n+[2001:8d8:91c:9200::5c:d425]:8333\n+[2001:980:231b:1:8e89:a5ff:fee3:f8be]:8333\n+[2001:980:ade8:1:14fc:fd6d:608c:f669]:8333\n+[2001:981:bdbd:1:c506:7d38:4b47:da15]:8333\n+[2001:982:27f2:1:7271:bcff:fe94:d5bb]:8333\n+[2001:984:26b5::1]:8333\n+[2001:984:aec7:1:dcb7:29a:7eda:b9a2]:8333\n+[2001:985:79af:20::35]:8333\n+[2001:985:cb69:0:20c:29ff:feaf:dd5e]:8333\n+[2001:b011:300d:1870:9c87:d4ff:fe9c:2d0f]:8333\n+[2001:b030:2422::208d]:8333\n+[2001:bc8:31d7:100::1]:8333\n+[2001:bc8:323c:100::]:8333\n+[2001:bc8:33ac:19ff::26]:8333\n [2001:bc8:399f:f000::1]:8333\n-[2001:bc8:3cbf::5]:8333\n-[2001:bc8:4700:2300::19:807]:8333\n-[2001:e42:102:1805:160:16:206:31]:8333\n-[2002:12f1:3f::12f1:3f]:8333\n-[2002:1e2:5349::1e2:5349]:8333\n-[2002:1e2:5588::1e2:5588]:8333\n-[2002:2501:cf62::2501:cf62]:8333\n-[2002:268c:a135::268c:a135]:8333\n-[2002:2a33:99db::2a33:99db]:8332\n-[2002:2ebc:2c14::7]:8333\n-[2002:2f59:2c9c::2f59:2c9c]:11885\n-[2002:2f5a:3619::2f5a:3619]:8333\n-[2002:2f5a:36a4::2f5a:36a4]:8333\n-[2002:2f5a:429::2f5a:429]:8333\n+[2001:bc8:3dc1:100::142]:8333\n+[2001:bc8:4400:2000::463b]:8333\n+[2001:bc8:4400:2400::1b35]:8333\n+[2001:bc8:4700:2000::5823]:8333\n+[2001:da8:8001:2303:1cf4:4466:3f1a:7edb]:8333\n+[2001:da8:d800:741:652d:52db:5713:4515]:8333\n+[2002:17e5:10ea::17e5:10ea]:8333\n+[2002:1f2b:8cbe::1f2b:8cbe]:8333\n+[2002:2f59:30f3::2f59:30f3]:8333\n [2002:2f5a:562a::2f5a:562a]:8333\n-[2002:3a3b:216::3a3b:216]:8333\n-[2002:3dfa:5d23::3dfa:5d23]:8333\n-[2002:424f:a052::424f:a052]:8333\n-[2002:451e:e922::451e:e922]:8333\n-[2002:4540:4b30::4540:4b30]:8333\n-[2002:51ab:7cc::51ab:7cc]:8333\n-[2002:527:de11::527:de11]:8333\n-[2002:5395:7d01::5395:7d01]:8333\n-[2002:5395:7d2a::5395:7d2a]:8333\n-[2002:5669:e3be::5669:e3be]:8333\n-[2002:566a:5d6d::566a:5d6d]:8333\n-[2002:59b9:f820::59b9:f820]:8333\n-[2002:59f8:ac69::59f8:ac69]:8333\n-[2002:5bd4:b65a::5bd4:b65a]:8333\n-[2002:5c3f:39db::5c3f:39db]:8333\n-[2002:5d33:8d03::5d33:8d03]:8333\n-[2002:5d67:49bb::5d67:49bb]:8333\n-[2002:5dae:5d5f::5dae:5d5f]:8333\n-[2002:5dbe:8cc6::5dbe:8cc6]:8333\n-[2002:5dbe:9503::5dbe:9503]:8333\n-[2002:5fd3:8944::5fd3:8944]:8333\n-[2002:5fd3:9467::5fd3:9467]:8333\n-[2002:67f9:6a48::67f9:6a48]:8333\n-[2002:67f9:6a4a::67f9:6a4a]:8333\n-[2002:67f9:6a95::67f9:6a95]:8333\n-[2002:6a0e:3ea8::6a0e:3ea8]:10011\n-[2002:6b96:375a::6b96:375a]:8333\n-[2002:6ca8:cffb::6ca8:cffb]:8333\n-[2002:6caf:234::6caf:234]:8333\n-[2002:6dec:58f5::6dec:58f5]:8333\n-[2002:6dec:5ac7::6dec:5ac7]:8333\n-[2002:7237:4a02::7237:4a02]:20033\n-[2002:7237:94fd::7237:94fd]:10011\n-[2002:7237:e428::7237:e428]:8333\n-[2002:7237:fcf6::7237:fcf6]:20188\n-[2002:76c0:96e6::76c0:96e6]:8333\n-[2002:7819:7e80::7819:7e80]:7743\n-[2002:781a:ea86::781a:ea86]:8333\n-[2002:781a:f3c2::781a:f3c2]:14475\n-[2002:784c:c2c0::784c:c2c0]:8333\n-[2002:784c:ec97::784c:ec97]:8333\n-[2002:792b:261a::792b:261a]:8333\n-[2002:88f3:8cca::88f3:8cca]:8333\n-[2002:88f3:a83c::88f3:a83c]:8333\n-[2002:8ac9:516f::8ac9:516f]:8333\n-[2002:8b81:6d78::8b81:6d78]:50344\n-[2002:8b81:6e5c::8b81:6e5c]:38176\n-[2002:8bc4:90a6::8bc4:90a6]:8333\n-[2002:ac52:b854::ac52:b854]:8333\n-[2002:add0:c14a::add0:c14a]:8333\n+[2002:3e92:46d8::3e92:46d8]:8333\n+[2002:3f62:e6bb::3f62:e6bb]:8333\n+[2002:404e:a30a::404e:a30a]:8333\n+[2002:43db:9616::43db:9616]:8333\n+[2002:43e5:a1fa::43e5:a1fa]:8333\n+[2002:5266:afb::5266:afb]:8333\n+[2002:5dbd:91a9::5dbd:91a9]:8333\n+[2002:627e:333d::627e:333d]:8333\n+[2002:6b9b:486c::6b9b:486c]:8333\n+[2002:6dcb:7cba::6dcb:7cba]:8333\n+[2002:7cf8:e33e::7cf8:e33e]:8333\n+[2002:8e00:8231::8e00:8231]:8333\n+[2002:8e00:8233::8e00:8233]:8333\n [2002:b07e:a70a::b07e:a70a]:8333\n-[2002:b27c:c565:1::250]:8333\n-[2002:b27c:c565::1]:8333\n-[2002:b94d:80f1::b94d:80f1]:8333\n-[2002:b982:e26a::b982:e26a]:8333\n-[2002:bcd5:3145::bcd5:3145]:8333\n-[2002:c08a:d22b::c08a:d22b]:8333\n-[2002:c0c7:f8e3::c0c7:f8e3]:32771\n-[2002:c1a9:fc5a::c1a9:fc5a]:8333\n+[2002:b2c9:e6fc:10:3d5c:e3ad:813:9c46]:8333\n+[2002:b4b2:3612::b4b2:3612]:8333\n+[2002:b610:1ca2::b610:1ca2]:8333\n+[2002:b610:1ca3::b610:1ca3]:8333\n+[2002:b845:3322::1]:8333\n+[2002:b946:694a::b946:694a]:8339\n+[2002:b960:5e18::b960:5e18]:8333\n [2002:c23f:8fc5::c23f:8fc5]:8333\n-[2002:d395:ea6d::d395:ea6d]:8333\n-[2002:d917:ca5::d917:ca5]:8333\n-[2002:d917:e91::d917:e91]:8333\n-[2002:db71:f434::db71:f434]:8333\n-[2400:2651:161:1000:6847:d40f:aaa3:4848]:8333\n-[2400:8901::f03c:91ff:fec8:4280]:8333\n-[2401:1800:7800:102:be76:4eff:fe1c:a7d]:8333\n-[2401:2500:203:10:153:120:156:83]:8333\n-[2401:a400:3200:5600:14ee:f361:4bdc:1f7c]:8333\n-[2403:4200:403:2::ff]:8333\n+[2002:c2a5:1021::c2a5:1021]:8333\n+[2002:c62c:e7a0::c62c:e7a0]:6333\n+[2002:ca99:c7b6::ca99:c7b6]:8333\n+[2002:d035:2734::d035:2734]:8333\n+[2002:d06e:5d1a::d06e:5d1a]:8333\n+[2002:d8da:b949::d8da:b949]:8333\n+[2400:2410:a960:4800:18be:d624:7018:cd2f]:8333\n+[2400:6180:0:d0::3e1:b001]:8333\n+[2400:6180:0:d0::5cd2:a001]:8333\n+[2400:6180:0:d1::4c6:8001]:8333\n+[2400:6180:100:d0::797:a001]:8333\n+[2400:8500:1302:817:150:95:130:17]:8333\n+[2401:1800:7800:106:be76:4eff:fe1c:1879]:8333\n+[2401:3900:2:1::2]:8333\n+[2401:a400:3200:5600:3c16:2deb:abce:70cd]:8333\n+[2401:b140::43:100]:8333\n+[2401:b140::43:102]:8333\n+[2402:1f00:8100:21c::]:8333\n+[2403:bd80:c000:1:103:202:216:182]:8333\n+[2405:6580:c5c0:1700:6cd2:b72e:740e:4311]:8333\n+[2405:800:1000:1:1000::2001]:8333\n+[2405:9800:b560:96d:630:c28e:a79a:a182]:8333\n [2405:aa00:2::40]:8333\n-[240b:10:ca20:f0:224:e8ff:fe1f:60d9]:8333\n-[240b:250:1e0:2400:b9ef:8fe3:a69a:7378]:8333\n-[240d:1a:302:8600:8876:a36d:12ee:f285]:8333\n+[2409:10:ca20:1df0:224:e8ff:fe1f:60d9]:8333\n+[2600:1f16:625:e00:269a:3452:2edf:1011]:8333\n+[2600:1f16:625:e00:7bc:5879:4463:15dd]:8333\n+[2600:1f16:625:e00:a28b:5a16:849c:fe41]:8333\n+[2600:1f16:625:e00:a70f:e728:e8e1:2c2e]:8333\n+[2600:3c00::f03c:91ff:fe0c:4d74]:8333\n+[2600:3c00::f03c:91ff:fe2b:bf38]:8333\n [2600:3c00::f03c:91ff:fe91:3e49]:8333\n-[2600:3c00::f03c:91ff:febb:981e]:8333\n-[2600:3c01::f03c:91ff:fe18:6adf]:8333\n-[2600:3c01::f03c:91ff:fe69:89e9]:8333\n+[2600:3c00::f03c:91ff:feb6:19f2]:8333\n [2600:3c01::f03c:91ff:fe91:6a29]:8333\n-[2600:3c01::f03c:91ff:fef1:1eaa]:8333\n-[2600:3c03::f03c:91ff:fe18:da80]:8333\n+[2600:3c01::f03c:91ff:fed8:85a2]:8333\n+[2600:3c01::f03c:91ff:fed8:db38]:8333\n [2600:3c03::f03c:91ff:fe28:1445]:8333\n-[2600:3c03::f03c:91ff:fe67:d2e]:8333\n-[2600:3c03::f03c:91ff:fe89:116f]:8333\n-[2600:3c03::f03c:91ff:feb0:5fc4]:8333\n-[2600:3c03::f03c:91ff:fee0:233e]:8333\n-[2600:3c03::f03c:91ff:fee0:51]:8333\n-[2600:8805:2400:14e:226:4aff:fe02:2ba4]:8333\n-[2600:8807:5080:3301:1487:83b7:33d7:eb97]:8333\n+[2601:147:4300:e61::30c]:8333\n+[2601:147:4300:e61::f91]:8333\n [2601:186:c100:6bcd:16bd:cea1:235d:1c19]:8333\n-[2601:18c:4200:28d0:e4d:e9ff:fec5:76d0]:8333\n-[2601:247:8201:6251:30e6:7b95:69bf:9248]:8333\n-[2601:602:9980:f78:211:11ff:fec5:1ae]:8333\n-[2602:ae:1993:de00:2c50:9a44:8f11:77a5]:8333\n-[2602:ff68:0:1:21e:bff:feca:db72]:8333\n-[2602:ff68:0:1:2bd:27ff:feb0:adf8]:8333\n-[2602:ff68:0:1::5]:8333\n-[2602:ff68:0:5:2bd:27ff:feb0:adf8]:8333\n-[2602:ffc5:1f::1f:2d61]:8333\n-[2602:ffc5:1f::1f:9211]:8333\n-[2602:ffc5::9e63:27a2]:8333\n-[2602:ffc5::c30:1c75]:8333\n-[2602:ffc5::ffc5:b844]:8333\n-[2602:ffe8:100:2::457:936b]:8333\n-[2604:180:2:eee::ca46]:8333\n-[2604:880:d:85::be37]:8333\n-[2604:9a00:2100:a009:2::]:8333\n-[2604:a880:2:d0::301:8001]:8333\n-[2604:a880:2:d0::4a9:1001]:8333\n-[2604:a880:2:d0::53a:c001]:8333\n-[2604:a880:400:d0::ad7:e001]:8333\n-[2604:a880:400:d0::dcf:f001]:8333\n+[2601:18d:4600:5f32:20e7:b3ff:fecf:a99]:8333\n+[2601:240:4601:ecee:309a:f9de:b64d:87df]:8333\n+[2601:240:8100:256b:20c:29ff:fe5e:d707]:8333\n+[2601:646:c202:5301:101b:a096:efba:c10a]:8333\n+[2601:807:8000:9508:9993:d2b3:1a:8225]:8333\n+[2601:c8:4100:770:c37:807b:98cc:bd7e]:8333\n+[2602:100:6154:d6e3:2c91:d0de:b032:b0a4]:8333\n+[2602:100:6154:d6e3::60]:8333\n+[2602:61:786c:2c00::1]:8333\n+[2602:ff83:fff:fffe::75]:8333\n+[2602:ff83:fff:fffe::76]:8333\n+[2603:3005:3000:5000:bc5a:72ac:36e9:175e]:8333\n+[2604:0:c1:100:6bc1:f98a:97f9:3845]:8333\n+[2604:2d80:c808:857b:8d6:9e1c:7131:4bea]:8333\n+[2604:4080:1008:0:96de:80ff:fe62:e650]:8333\n+[2604:4300:a:104:b699:baff:feaa:5109]:8333\n+[2604:5500:c226:7f00:2d96:ed64:ce45:9a6]:8333\n+[2604:8d80:100::adf3:4030]:8333\n+[2604:a880:2:d0::22f8:e001]:8333\n+[2604:a880:2:d0::22f8:f001]:8333\n+[2604:a880:2:d0::22f9:1]:8333\n+[2604:a880:2:d0::22f9:1001]:8333\n+[2604:a880:2:d0::22f9:c001]:8333\n+[2604:a880:2:d0::22f9:d001]:8333\n+[2604:a880:2:d0::22f9:e001]:8333\n+[2604:a880:2:d0::22fa:1001]:8333\n+[2604:a880:2:d0::22fa:2001]:8333\n+[2604:a880:2:d0::22fa:3001]:8333\n+[2604:a880:2:d0::38:f001]:8333\n+[2604:a880:2:d0::662:c001]:8333\n+[2604:a880:400:d0::1ac4:b001]:8333\n+[2604:a880:400:d0::2004:4001]:8333\n+[2604:a880:400:d0::2004:5001]:8333\n+[2604:a880:400:d0::2004:6001]:8333\n+[2604:a880:400:d0::2004:d001]:8333\n+[2604:a880:400:d0::2004:e001]:8333\n+[2604:a880:400:d0::2005:1]:8333\n+[2604:a880:400:d0::2005:2001]:8333\n+[2604:a880:400:d0::2005:3001]:8333\n+[2604:a880:400:d0::cd7:4001]:8333\n+[2604:a880:400:d1::729:b001]:8333\n+[2604:a880:800:a1::11a9:8001]:8333\n+[2604:a880:800:a1::59:9001]:8333\n+[2604:a880:800:a1::cbb:f001]:8333\n+[2604:a880:800:a1::ee8:e001]:8333\n+[2604:a880:cad:d0::370:f001]:8333\n+[2604:a880:cad:d0::a52:6001]:8333\n [2605:4d00::50]:8333\n-[2605:6000:edc8:300::ddfe]:8333\n-[2605:6000:ffc0:70:74d5:225c:f553:5bb8]:8333\n-[2606:6000:c148:7003:5054:ff:fe78:66ff]:8333\n-[2606:6000:e6d6:d701:d428:5e44:a2c9:3ff6]:8333\n-[2606:c680:1:4a:2016:d1ff:fe93:52a7]:8333\n-[2607:5300:203:118:3733::1414]:8333\n+[2605:9880:0:1cf:225:90ff:fec9:29b3]:8333\n+[2605:9880:0:3::8333]:8333\n+[2605:9880:201:17::4b7c]:8333\n+[2605:a000:4a87:9501:d613:fbf8:1e82:8d3c]:8333\n+[2605:a000:f343:b700:5054:ff:fea7:131]:8333\n+[2605:a601:a41:1a00:a00:27ff:fefc:4759]:8333\n+[2605:ae00:203::203]:8333\n+[2605:c000:2a0a:1::102]:8333\n+[2605:e000:1c00:80e8:984e:a697:97a3:50ed]:8333\n+[2605:e000:1c0d:437b:5054:ff:fe1b:2913]:8333\n+[2605:e000:9093:a700:9853:4464:5f78:c484]:8333\n+[2605:f700:100:400::104e:43bd]:8333\n+[2605:f700:100:400::131:5b54]:8333\n+[2605:f700:100:c10:5575:8e73:b07c:bf5a]:8333\n+[2606:6000:c149:8830:5054:ff:fe78:66ff]:8333\n+[2607:1c00:a:6:3c1c:1b0d:ba4:8ea9]:8333\n+[2607:1c00:a:6::1000]:8333\n+[2607:5300:120:a04::]:8333\n+[2607:5300:203:2fac::]:8333\n+[2607:5300:203:408::]:8333\n+[2607:5300:203:6bc::]:18333\n+[2607:5300:203:8d::]:8333\n+[2607:5300:60:10aa::1]:8333\n+[2607:5300:60:122a::1]:8333\n [2607:5300:60:13bb::1]:8333\n-[2607:5300:60:1966::1]:8333\n-[2607:5300:60:2218::]:8333\n-[2607:5300:60:3775::]:8333\n [2607:5300:60:3ddf::]:8333\n-[2607:5300:60:a654::]:8333\n-[2607:5300:60:a7a3::]:8333\n-[2607:5300:60:ac0::1]:8333\n-[2607:5300:60:cf97::]:8333\n-[2607:f0d0:1901:19::6]:8333\n-[2607:f128:40:1202:69:162:139:125]:8333\n-[2607:f128:40:1703::2]:8333\n+[2607:5300:60:5735::]:8333\n+[2607:5300:60:714::1]:8333\n+[2607:5300:60:981::1]:8333\n+[2607:5300:60:cff1::]:28633\n+[2607:9280:b:73b:250:56ff:fe21:bf32]:8333\n [2607:f178:0:8::106]:8333\n-[2607:f1c0:84d:8900::7e:cad]:8333\n-[2607:f948:0:1::1:40]:8333\n-[2607:fcd0:100:2302::6094:635a]:8333\n-[2607:fcd0:100:6a00::3a96:1]:8333\n-[2607:fcd0:100:6a02::7ff0:1]:8333\n-[2607:fcd0:100:8203::8c58:dbc]:8333\n-[2607:fea8:1360:9c2:221a:6ff:fe47:776d]:8333\n-[2607:fea8:4da0:9ce:5114:a8ec:20f5:a50b]:8333\n-[2607:fea8:5df:fda0:feaa:14ff:feda:c79a]:8333\n-[2607:fea8:84c0:163:f42c:baff:fecc:6bbf]:8333\n-[2607:ff10:c5:502:225:90ff:fe32:d446]:8333\n-[2607:ff48:aa81:800::96cf:1]:8333\n-[2620:11c:5001:1118:d267:e5ff:fee9:e673]:8333\n-[2620:b8:4000:1000::93:1]:8333\n-[2800:1a0::9]:8333\n-[2a00:1178:2:43:19fd:d43e:b77:edeb]:8333\n-[2a00:1178:2:43:b4e3:e562:f811:d761]:8333\n-[2a00:14f0:e000:80d2:cd1a::1]:8333\n-[2a00:1630:14::101]:8333\n-[2a00:1630:2:1802:188:122:91:11]:8333\n-[2a00:1630:2:500::4]:8333\n+[2607:f1c0:823:af00::35:bbd1]:8333\n+[2607:f2c0:f00e:300:201:2eff:fe67:9130]:8333\n+[2607:fa18:0:beef::c012]:8333\n+[2607:ff28:1:7::176e:c4a5]:8333\n+[2607:ff28:1:7::65af:9afb]:8333\n+[2620:71:4000:0:192:30:120:110]:8333\n+[2801:84:0:1034:76d4:35ff:fe7f:5033]:8333\n+[2803:1500:1200:c487::1]:8333\n+[2804:14c:6582:60f0::1]:8333\n+[2804:14d:baa6:962c:486:47f6:c161:a79d]:8333\n+[2a00:13a0:3015:1:85:14:79:26]:8333\n+[2a00:16d8:c::5b6a:c261]:8333\n [2a00:1768:2001:24::148:218]:8333\n-[2a00:1768:2001:27::142:21]:8333\n-[2a00:1a48:7810:101:be76:4eff:fe08:c774]:8333\n-[2a00:1ca8:37::a5fc:40d1]:8333\n-[2a00:1ca8:37::ab6d:ce2c]:8333\n-[2a00:1dc0:2255:10::2]:8333\n-[2a00:7c80:0:71::8]:8333\n-[2a00:7c80:0:97::7]:8333\n-[2a00:bbe0:0:42:222:64ff:fe9a:e206]:8333\n-[2a00:c98:2050:a020:3::110]:8333\n-[2a00:dcc0:eda:98:183:193:1d24:b53a]:8333\n-[2a00:dcc0:eda:98:183:193:c382:6bdb]:8333\n-[2a00:dcc0:eda:98:183:193:f72e:d943]:8333\n-[2a00:f90:ff0:c100:53c4:97a7:8b59:796a]:8333\n-[2a01:238:435c:de00:b110:38cf:192d:b2c]:28333\n-[2a01:348:6:7cf::2]:8333\n-[2a01:368:e012:8888:216:3eff:fe24:1162]:8333\n-[2a01:488:66:1000:53a9:22b:0:1]:8333\n-[2a01:488:67:1000:523:ffa7:0:1]:8333\n-[2a01:488:67:1000:b01c:3379:0:1]:8333\n-[2a01:4f8:100:34ce::2]:8333\n-[2a01:4f8:100:44e7::2]:8333\n-[2a01:4f8:10a:2e4::2]:8333\n-[2a01:4f8:10a:34e::2]:8333\n-[2a01:4f8:10a:51d::2]:8333\n-[2a01:4f8:10a:622::2]:8333\n-[2a01:4f8:10a:85f::2]:8333\n-[2a01:4f8:10a:864::2]:8333\n-[2a01:4f8:10a:d04::2]:8333\n-[2a01:4f8:110:334c::2]:8333\n-[2a01:4f8:110:536e::2]:8333\n-[2a01:4f8:120:43e4::2]:8333\n-[2a01:4f8:120:702e::2]:8333\n-[2a01:4f8:121:4346::2]:8333\n-[2a01:4f8:130:3332::2]:8333\n-[2a01:4f8:131:33ad::2]:8333\n-[2a01:4f8:131:33ad:fea1::666]:8333\n-[2a01:4f8:140:31b0::2]:8333\n-[2a01:4f8:140:4088::2]:8333\n+[2a00:1838:36:2c::ed85]:8333\n+[2a00:1a28:1157:2f8::946a]:8333\n+[2a00:1c48:6:203:a60:6eff:fe44:8086]:8333\n+[2a00:1f40:2::1126]:8333\n+[2a00:7c80:0:5d::1d0e]:8333\n+[2a00:8a60:e012:a00::21]:8333\n+[2a00:ab00:603:84::3]:8333\n+[2a00:bbe0:cc:0:6651:6ff:fe0e:9418]:8333\n+[2a00:ca8:a1f:3025:4121:5ca1:3b:4469]:8333\n+[2a00:ca8:a1f:9091:945e:80a3:830a:78cf]:8333\n+[2a01:238:433c:5300:7a61:3e1a:27f4:9dc2]:8333\n+[2a01:4240:a21:983b::c0a8:32]:8333\n+[2a01:488:66:1000:53a9:21b8:0:1]:8333\n+[2a01:4d60:3:1:5::1]:8333\n+[2a01:4f8:10a:3524::2]:8333\n+[2a01:4f8:10b:362::2]:8333\n+[2a01:4f8:10b:d50::2]:8333\n+[2a01:4f8:10b:f44::2]:8333\n+[2a01:4f8:120:1391::2]:8333\n+[2a01:4f8:120:70a3::2]:8333\n+[2a01:4f8:120:93f8::2]:8333\n+[2a01:4f8:121:2385::2]:8333\n+[2a01:4f8:130:71d2::2]:8333\n+[2a01:4f8:130:7422::2]:8333\n+[2a01:4f8:13a:124f::2]:8333\n+[2a01:4f8:13a:1dcb::2]:8333\n+[2a01:4f8:13a:708::2]:21775\n+[2a01:4f8:13a:723::2]:8333\n+[2a01:4f8:13b:109e::2]:8333\n+[2a01:4f8:13b:1a9e::201]:8333\n+[2a01:4f8:13b:271c::2]:10731\n+[2a01:4f8:13b:2d42::2]:8333\n+[2a01:4f8:13b:2d94::2]:8333\n+[2a01:4f8:13b:3810::2]:8333\n+[2a01:4f8:13b:3da8::2]:8333\n+[2a01:4f8:13b:41e6::2]:8333\n+[2a01:4f8:13b:4281::2]:8333\n+[2a01:4f8:13b:5c7::2]:8333\n+[2a01:4f8:13b:81::2]:8333\n+[2a01:4f8:140:236a:cafe::5]:8333\n+[2a01:4f8:140:324e::2]:8333\n+[2a01:4f8:140:5329::102]:8333\n+[2a01:4f8:140:5329::50:109]:8333\n [2a01:4f8:140:931a::2]:8333\n [2a01:4f8:140:93b0::2]:8333\n-[2a01:4f8:141:13ad::c451]:8333\n-[2a01:4f8:141:186::2]:8333\n-[2a01:4f8:141:22ae::2]:8333\n-[2a01:4f8:141:322c::2]:8333\n-[2a01:4f8:150:11d4::2]:8333\n-[2a01:4f8:150:440f::2]:8333\n-[2a01:4f8:150:61ee::2]:8333\n-[2a01:4f8:150:726b::2]:8333\n-[2a01:4f8:151:30c9::2]:15000\n-[2a01:4f8:151:41a2::2]:8333\n-[2a01:4f8:151:41cc::2]:8333\n-[2a01:4f8:151:52c6::154]:8333\n-[2a01:4f8:151:600b::1:1]:8333\n-[2a01:4f8:151:7175::2]:8333\n+[2a01:4f8:141:47::2]:8333\n+[2a01:4f8:150:53a4::4]:8333\n+[2a01:4f8:150:72ee::4202]:8333\n [2a01:4f8:160:41f0::1:33]:8333\n-[2a01:4f8:160:5328::27f0:187a]:8333\n-[2a01:4f8:160:814f::2]:8333\n-[2a01:4f8:161:21ad::333:30]:8333\n-[2a01:4f8:161:7026::2]:8333\n-[2a01:4f8:162:4110::2]:8333\n-[2a01:4f8:162:4348::2]:8333\n-[2a01:4f8:171:1c1b::2]:8333\n+[2a01:4f8:160:4443::2]:8333\n+[2a01:4f8:160:6092:d7bd:a39:3e52:b65d]:8333\n+[2a01:4f8:160:60aa::2]:8333\n+[2a01:4f8:160:636e::2]:8333\n+[2a01:4f8:161:6091::2]:8333\n+[2a01:4f8:161:6111::2]:8333\n+[2a01:4f8:161:812e::2]:8333\n+[2a01:4f8:162:2c6::2]:8333\n+[2a01:4f8:162:33ac::2]:8333\n [2a01:4f8:171:1c3::2]:8333\n-[2a01:4f8:171:2258::2]:8333\n-[2a01:4f8:171:2a70::2]:8333\n-[2a01:4f8:171:2e1b::2]:8333\n-[2a01:4f8:171:2f28::2]:8333\n+[2a01:4f8:171:2bdc::2]:8333\n [2a01:4f8:171:3248::2]:8333\n-[2a01:4f8:171:380c::2]:8333\n-[2a01:4f8:171:b93::2]:8333\n-[2a01:4f8:171:d0a::2]:8333\n-[2a01:4f8:172:116c::2]:8333\n-[2a01:4f8:172:1287::2]:8333\n-[2a01:4f8:172:17a9::2]:8333\n-[2a01:4f8:172:1ca7::2]:8333\n-[2a01:4f8:172:2159::2]:8333\n-[2a01:4f8:172:3a41::2]:8333\n-[2a01:4f8:172:3b42::2]:8333\n-[2a01:4f8:172:3ec1::2]:8333\n-[2a01:4f8:172:3ec2::2]:8333\n-[2a01:4f8:172:aeb::2]:8333\n-[2a01:4f8:172:aec::2]:8333\n-[2a01:4f8:173:10ab::2]:8333\n-[2a01:4f8:173:1551::2]:8333\n-[2a01:4f8:173:1bca::2]:8333\n-[2a01:4f8:173:1e2e::2]:8333\n-[2a01:4f8:173:2162::2]:8333\n-[2a01:4f8:173:21e6::2]:8333\n-[2a01:4f8:173:42::2]:8333\n-[2a01:4f8:173:cc1::2]:8333\n-[2a01:4f8:190:1253::2]:8333\n-[2a01:4f8:190:24eb::2]:8333\n-[2a01:4f8:190:34f0::2]:8333\n-[2a01:4f8:190:528d::2]:8333\n-[2a01:4f8:190:91ce::2]:8333\n-[2a01:4f8:191:2194::83]:8333\n-[2a01:4f8:191:40e8::2]:8333\n-[2a01:4f8:191:8165::2]:22556\n-[2a01:4f8:191:81b7::2]:8333\n-[2a01:4f8:191:8328::3]:8333\n-[2a01:4f8:192:11b2::2]:8343\n+[2a01:4f8:171:4dc::2]:8333\n+[2a01:4f8:171:d09::2]:8333\n+[2a01:4f8:171:d4a::2]:8333\n+[2a01:4f8:171:e0d::2]:8333\n+[2a01:4f8:171:ecd::2]:8333\n+[2a01:4f8:172:1823::2]:8333\n+[2a01:4f8:173:1622::2]:8333\n+[2a01:4f8:190:50b6::2]:8333\n+[2a01:4f8:190:5176::123]:8333\n+[2a01:4f8:191:268::2]:8333\n [2a01:4f8:192:216c::2]:8333\n-[2a01:4f8:192:22af::2]:8333\n-[2a01:4f8:192:2422::2]:8333\n-[2a01:4f8:192:34d0::2]:8333\n-[2a01:4f8:192:440b::2]:8333\n-[2a01:4f8:192:5230::2]:8333\n-[2a01:4f8:192:db::2]:8333\n+[2a01:4f8:192:628a::83]:8333\n+[2a01:4f8:1c0c:77af::1]:8333\n [2a01:4f8:200:1012::2]:8333\n-[2a01:4f8:200:414e::2]:8333\n-[2a01:4f8:200:416a::2]:8333\n-[2a01:4f8:201:21a7::2]:8333\n-[2a01:4f8:201:4017::11]:8333\n-[2a01:4f8:201:6011::4]:8333\n-[2a01:4f8:201:60d5::2]:8333\n-[2a01:4f8:202:12d6::2]:8333\n-[2a01:4f8:202:31e3::2]:8333\n+[2a01:4f8:200:442d::2]:8333\n+[2a01:4f8:201:1113::2]:8333\n+[2a01:4f8:201:4f0::2]:8333\n+[2a01:4f8:201:53cc::2]:8333\n+[2a01:4f8:201:8026::1337]:8333\n+[2a01:4f8:201:8026::2]:8333\n [2a01:4f8:202:32c6::2]:8333\n-[2a01:4f8:202:53c3::2]:8333\n-[2a01:4f8:211:14cf::2]:8333\n-[2a01:4f8:211:1ec5::2]:8333\n-[2a01:4f8:211:483::2]:8333\n-[2a01:4f8:211:d99::8]:8333\n-[2a01:4f8:212:1826::2]:8333\n-[2a01:4f8:212:27a8::2]:8333\n+[2a01:4f8:211:309::2]:8333\n+[2a01:4f8:211:f08::2]:8333\n+[2a01:4f8:212:1e16::2]:8333\n+[2a01:4f8:221:1808::2]:15000\n+[2a01:4f8:221:2e18::2]:8333\n+[2a01:4f8:221:2fcf::2]:8333\n+[2a01:4f8:221:3441::2]:8333\n+[2a01:4f8:221:3452::2]:8333\n+[2a01:4f8:221:39c1::2]:8335\n+[2a01:4f8:221:3c82::2]:8333\n+[2a01:4f8:221:3c82:fea1::666]:8333\n+[2a01:4f8:221:6cd::2]:8333\n [2a01:4f8:221:801::2]:8333\n-[2a01:4f8:a0:12cc::2]:8333\n-[2a01:4f8:a0:746a:101:1:1:2]:8333\n-[2a01:4f8:a0:828a::2]:8333\n-[2a01:4f8:c17:2eef::2]:8333\n-[2a01:4f8:c17:2f3c::2]:3333\n-[2a01:4f8:c17:3b02::2]:8333\n-[2a01:4f8:c17:4245::2]:8333\n-[2a01:4f8:c17:464f::2]:8333\n-[2a01:4f8:c17:4a1c::2]:8333\n-[2a01:4f8:c17:4c5d::2]:8333\n-[2a01:4f8:c17:67f8::2]:8333\n-[2a01:4f8:c17:6dd0::2]:8333\n-[2a01:4f8:c17:710b::2]:8333\n-[2a01:4f8:c17:714::2]:8333\n-[2a01:4f8:c17:72c6::2]:8333\n-[2a01:608:ffff:a009:8bf5:879d:e51a:f837]:8333\n-[2a01:680:10:10::1]:8333\n-[2a01:6f0:ffff:120::8dcb]:8333\n-[2a01:79c:cebc:857c:98c1:88ff:fef5:90de]:8333\n-[2a01:79d:7377:2629:7e57:7e57:1:1]:8333\n-[2a01:7c8:aaac:43d:5054:ff:fe4e:3dd4]:8333\n-[2a01:7c8:aab5:3e6:5054:ff:fed7:4e54]:8333\n-[2a01:7c8:aabd:3d5:5054:ff:fe95:f586]:8333\n-[2a01:7c8:aac1:453:d0d2:af96:fa88:5d0e]:8333\n-[2a01:7c8:aac3:663:5054:ff:fe25:8c69]:8333\n-[2a01:7c8:aac3:97:5054:ff:fea7:3780]:8333\n-[2a01:7c8:aac4:567:5054:ff:fedc:518a]:8333\n-[2a01:7e00::f03c:91ff:fe26:8c87]:8333\n-[2a01:7e00::f03c:91ff:fe50:94b8]:8333\n-[2a01:7e00::f03c:91ff:fe55:2c]:8333\n-[2a01:7e00::f03c:91ff:fe89:1143]:8333\n-[2a01:7e00::f03c:91ff:fe89:53fd]:8333\n-[2a01:7e00::f03c:91ff:fedf:b70f]:8333\n-[2a01:b000::4166:515b:ef9e:b3]:8333\n-[2a01:b2e0:2::40]:8333\n-[2a01:e34:ec29:24c0:f3:ddaf:9f59:586f]:8333\n-[2a01:e34:eed7:6670:ec1b:bf7c:b012:6069]:8333\n-[2a01:e35:2ee5:610:21f:d0ff:fe4e:7460]:8333\n-[2a01:e35:8a3f:47c0:c617:feff:fe3c:9fbd]:8333\n-[2a01:e35:8bff:70b0:1e1b:dff:fe0b:236d]:8333\n-[2a02:1205:34c3:a4e0:d63d:7eff:fe98:10c8]:8333\n-[2a02:1205:34da:aa00:5882:249d:ddbf:bc43]:8333\n-[2a02:1205:5051:a640:d6ae:52ff:fea3:ac]:8333\n-[2a02:1205:c689:d980:baae:edff:feea:9445]:8333\n-[2a02:120b:2c2a:5ec0:10dd:31ff:fe42:5079]:8333\n-[2a02:120b:2c35:69d0:219:99ff:fe6b:4ec3]:8333\n-[2a02:120b:c3c2:ff60:21f:5bff:fec3:a7ad]:24312\n-[2a02:13b8:4000:1000:216:e6ff:fe92:8619]:8333\n-[2a02:13b8:4000:1000::27]:8333\n-[2a02:17d0:2a:4400:40f:3dd4:b053:47ad]:8333\n-[2a02:180:1:1::517:afb]:8333\n-[2a02:180:6:1::18]:8333\n-[2a02:1810:1d11:f900:6872:f28e:8126:f635]:8333\n-[2a02:27a8:0:1:52e5:49ff:fee3:3b49]:8333\n-[2a02:348:86:3011::1]:8333\n+[2a01:4f8:221:f59::2]:8333\n+[2a01:4f8:a0:6147::2]:8333\n+[2a01:4f8:c0c:4268::2]:8333\n+[2a01:4f8:c0c:56a5::2]:8333\n+[2a01:4f8:c17:e00::2]:8333\n+[2a01:4f9:2a:10d4::2]:8333\n+[2a01:4f9:2a:1827::2]:8333\n+[2a01:4f9:2a:192c::2]:8333\n+[2a01:4f9:2a:1c87::2]:8333\n+[2a01:4f9:2a:2510::2]:8333\n+[2a01:4f9:2a:2518::2]:8333\n+[2a01:4f9:2a:2585::2]:8333\n+[2a01:4f9:2a:2698::2]:8333\n+[2a01:4f9:2a:2d0a::2]:8333\n+[2a01:4f9:2a:2d17::2]:8333\n+[2a01:4f9:2a:347::2]:8333\n+[2a01:4f9:2a:650::2]:8333\n+[2a01:4f9:2a:d54::2]:8333\n+[2a01:4f9:c010:12e7::1]:8333\n+[2a01:4f9:c010:1736::1]:8333\n+[2a01:5d00:1:4b6:d2bf:9cff:fe45:b834]:8333\n+[2a01:79c:cebe:70cc:1a03:73ff:fe48:e691]:8333\n+[2a01:7a0:2:1374::7]:8333\n+[2a01:7a7:2:1218:ec4:7aff:fe83:83c4]:8333\n+[2a01:7a7:2:1288:ea39:35ff:fef0:c429]:8333\n+[2a01:7c8:aaba:18:5054:ff:fe2b:df20]:8333\n+[2a01:7c8:fffa:50e:3035:741b:be02:b5de]:8333\n+[2a01:be00:10:201:0:80:cece:1]:8333\n+[2a01:cb00:5be:d500:227:eff:fe28:c565]:8333\n+[2a01:cb00:b3:d300:9276:8a8c:74bf:2a88]:8333\n+[2a01:cb14:b8:a500:dd9d:80f5:d305:68f9]:8333\n+[2a01:e0a:20:9120:7c3f:5643:9978:1825]:8333\n+[2a01:e0a:d:6ea0:56:deab:1b2f:300b]:8333\n+[2a01:e34:ec16:93f0:725d:d8d2:bb90:eabf]:8333\n+[2a01:e34:ee33:1640:c418:3c3a:8ff6:3eab]:8333\n+[2a01:e34:eed7:6670:28c0:183c:7783:7dc3]:8333\n+[2a01:e35:2f7d:a0b0:59c2:3c8a:95a2:c4d1]:8333\n+[2a01:e35:87ba:d0c0:75a2:9f39:efcb:f59f]:8333\n+[2a02:120b:c3c5:cef0:ec82:a43d:4d6:dc2]:8333\n+[2a02:120b:c3d1:f2d0:eea8:6bff:fefc:2265]:8333\n+[2a02:168:404c:0:eea8:6bff:fef3:7d5c]:8333\n+[2a02:180:1:1::517:10b6]:8333\n+[2a02:180:1:1::5b8f:538c]:8333\n+[2a02:1b8:10:147::2]:8333\n+[2a02:2168:d05:2c00:216:3eff:fef7:a099]:8333\n+[2a02:2528:503:2::14]:8333\n+[2a02:2528:fa:1400::1]:8333\n+[2a02:2770:17:0:21a:4aff:fe7b:175f]:8333\n+[2a02:2770:5:0:21a:4aff:fe44:8370]:8333\n+[2a02:2808:5401:0:225:90ff:fe4e:ee42]:8333\n [2a02:390:9000:0:218:7dff:fe10:be33]:8333\n-[2a02:582:78c1:7600:2d49:6212:29d3:abb]:8333\n-[2a02:6080::1:190b:69e3]:8333\n-[2a02:750:7:3305::575]:8333\n-[2a02:752:100:3::53]:8333\n-[2a02:7aa0:1201::7501:d950]:8333\n-[2a02:7aa0:1201::deb3:81a2]:8333\n-[2a02:7aa0:1619::a037:69a6]:8333\n-[2a02:810d:14c0:8694:d250:99ff:fe81:23d9]:8333\n-[2a02:a50::dacb:8aff:fe36:8d2d]:8333\n-[2a02:c200:0:10:3:0:2591:1]:8333\n-[2a02:c200:1:10:2:5:9982:1]:8333\n-[2a02:c200:1:10:3:0:9290:1]:8333\n-[2a02:c205:3000:7158::1]:8333\n-[2a02:c205:3001:4522::1]:8333\n-[2a02:c205:3001:6549::1]:8333\n-[2a02:c207:2008:3772::1]:8333\n-[2a02:c207:2008:6519::1]:8333\n+[2a02:750:7:c11:5054:ff:fe43:eb81]:8333\n+[2a02:7aa0:1619::590:eba2]:8333\n+[2a02:7b40:3e4d:9ed9::1]:8333\n+[2a02:7b40:50d1:e04f::1]:8333\n+[2a02:7b40:5928:f9e::1]:8333\n+[2a02:7b40:592f:a590::1]:8333\n+[2a02:7b40:b0df:82fe::1]:8333\n+[2a02:7b40:b0df:8925::1]:8333\n+[2a02:7b40:b0df:8b41::1]:8333\n+[2a02:7b40:b0df:8d57::1]:8333\n+[2a02:7b40:d418:6fcd::1]:8333\n+[2a02:8108:2340:1c18:7a:231e:1430:7f12]:8333\n+[2a02:8108:9c3f:dd18:922b:34ff:fe30:ac42]:8333\n+[2a02:810d:8a40:36f8:9af2:b3ff:fee8:6d7a]:8333\n+[2a02:8388:e301:7180:201:2eff:fe82:b3cc]:8333\n+[2a02:908:213:54a0:39bf:d4aa:60b2:d9c3]:8333\n+[2a02:908:4f0:7e1c:5054:ff:feb7:ce4b]:8333\n+[2a02:930:1:0:250:56ff:fe8e:2819]:8333\n+[2a02:a80:0:2052::2]:8333\n+[2a02:c205:0:5145::1]:8333\n+[2a02:c205:2008:272::1]:8333\n+[2a02:c205:2010:6230::1]:8333\n+[2a02:c205:2016:4327::1]:8333\n+[2a02:c205:2017:2116::1]:8333\n+[2a02:c205:2018:1754::1]:8333\n+[2a02:c205:2018:8229::1]:8333\n+[2a02:c205:3002:2787::1]:8333\n+[2a02:c205:3002:6525::1]:8333\n+[2a02:c207:0:3829::1]:8333\n+[2a02:c207:2007:4699::1]:8333\n [2a02:c207:2009:213::1]:8333\n-[2a02:c207:2009:7858::1]:8333\n-[2a02:c207:2010:302::1]:8333\n-[2a02:c207:3001:5824::1]:8333\n+[2a02:c207:2010:7751::1]:8333\n+[2a02:c207:2012:4826::1]:8333\n+[2a02:c207:2014:4199::1]:8333\n+[2a02:c207:2014:5639::1]:8333\n+[2a02:c207:2014:9913::1]:18333\n+[2a02:c207:2015:3799::1]:8333\n+[2a02:c207:2015:3926::1]:8333\n+[2a02:c207:2015:5919::1]:8333\n+[2a02:c207:2015:6681::1]:8333\n+[2a02:c207:2016:2394::1]:8333\n+[2a02:c207:2016:9375::1]:8333\n+[2a02:c207:2017:1988::1]:8333\n+[2a02:c207:2017:3720::1]:8333\n+[2a02:c207:2017:4486::1]:8333\n+[2a02:c207:2017:4708::1]:8333\n+[2a02:c207:2017:5828::1]:8333\n+[2a02:c207:2017:7320::1]:8333\n+[2a02:c207:2017:8175::1]:8333\n+[2a02:c207:2017:8998::1]:8333\n+[2a02:c207:2018:1462::1]:8333\n+[2a02:c207:2018:3094::1]:8333\n+[2a02:c207:2018:3275::1]:8333\n+[2a02:c207:2018:3710::1]:8333\n+[2a02:c207:2018:4790::1]:8333\n+[2a02:c207:2018:7407::1]:8333\n+[2a02:c207:2019:1067::1]:8333\n+[2a02:c207:2019:1425::1]:8333\n+[2a02:c207:2019:2041::1]:8333\n+[2a02:c207:2019:248::1]:8333\n+[2a02:c207:2019:3592::1]:8333\n+[2a02:c207:3001:9320::1]:8333\n+[2a02:c207:3002:1287::1]:8333\n+[2a02:c207:3002:4187::1]:8333\n+[2a02:c207:3002:5642::1]:8333\n+[2a02:c207:3002:7150::1]:8333\n+[2a02:c207:3002:7222::1]:8333\n+[2a02:c207:3002:7610::1]:8333\n+[2a02:c207:3002:8456::1]:8333\n [2a02:ce80:0:20::1]:8333\n-[2a03:4000:2:496::8]:8333\n-[2a03:4000:6:416c::53]:8333\n-[2a03:4000:6:8009::1]:8333\n-[2a03:4000:9:8e::1]:8333\n-[2a03:7380:2140:17:51fe:3519:b571:4a13]:8333\n-[2a03:b0c0:0:1010::7a3:1001]:8333\n-[2a03:b0c0:0:1010::7aa:4001]:8333\n-[2a03:b0c0:3:d0::1b99:c001]:8333\n-[2a03:b0c0:3:d0::1b99:e001]:8333\n-[2a03:b0c0:3:d0::1b9a:3001]:8333\n-[2a03:b0c0:3:d0::2208:6001]:8333\n-[2a03:b0c0:3:d0::23f7:1001]:8333\n-[2a03:b0c0:3:d0::23f7:9001]:8333\n-[2a03:b0c0:3:d0::23fb:2001]:8333\n-[2a03:b0c0:3:d0::23fb:3001]:8333\n-[2a03:b0c0:3:d0::23fb:5001]:8333\n-[2a03:b0c0:3:d0::23fb:7001]:8333\n-[2a03:b0c0:3:d0::2400:1]:8333\n-[2a03:b0c0:3:d0::2400:3001]:8333\n-[2a03:b0c0:3:d0::2400:e001]:8333\n-[2a03:b0c0:3:d0::2401:e001]:8333\n-[2a03:b0c0:3:d0::2402:2001]:8333\n-[2a03:b0c0:3:d0::2402:8001]:8333\n-[2a03:b0c0:3:d0::2402:9001]:8333\n-[2a03:b0c0:3:d0::2402:b001]:8333\n-[2a03:b0c0:3:d0::2402:d001]:8333\n-[2a03:b0c0:3:d0::2403:1001]:8333\n-[2a03:b0c0:3:d0::2403:2001]:8333\n-[2a03:b0c0:3:d0::2403:4001]:8333\n-[2a03:b0c0:3:d0::2403:6001]:8333\n-[2a03:b0c0:3:d0::2403:a001]:8333\n-[2a03:b0c0:3:d0::2403:b001]:8333\n-[2a03:b0c0:3:d0::2403:f001]:8333\n-[2a03:b0c0:3:d0::2404:6001]:8333\n-[2a03:b0c0:3:d0::2404:b001]:8333\n-[2a03:f80:ed15:149:154:155:235:1]:8333\n-[2a04:1980:3100:1aac:e61d:2dff:fe29:f241]:8333\n-[2a04:1980:3100:1aac:e61d:2dff:fe29:f251]:8333\n-[2a04:2180:0:1::5a49:3c06]:8333\n-[2a04:2180:1:7::3]:8333\n-[2a04:2e00:5:2e:9a4b:e1ff:fe62:6dc0]:8333\n-[2a04:3542:1000:910:8492:b8ff:fe91:711d]:8333\n-[2a04:dbc3:fffe:0:e61f:13ff:fe95:8401]:8333\n-[2a06:9fc0:2a06:9fc0:2a06:9fc1:67c:e706]:8333\n-[2c0f:f738:2004:82::]:8333\n-2hryb3uh3tzwgnya.onion:8333\n-3nmbbakinewlgdln.onion:8333\n-3qeri3tmhzmpegyv.onion:8333\n-4wdknmecghcmclq5.onion:8333\n+[2a02:e00:fff0:1b9::1]:8333\n+[2a02:e00:fff0:1b9::a]:8333\n+[2a02:e00:fff0:1e2::1]:8333\n+[2a03:b0c0:1:d0::69:3001]:8333\n+[2a03:b0c0:2:d0::3ba:b001]:8333\n+[2a03:b0c0:2:d0::8ce:4001]:8333\n+[2a03:b0c0:3:d0::116:5001]:8333\n+[2a03:b0c0:3:d0::12a:1]:8333\n+[2a03:b0c0:3:d0::23fb:6001]:8333\n+[2a03:b0c0:3:d0::409:1001]:8333\n+[2a03:b0c0:3:d0::44b8:9001]:8333\n+[2a03:b0c0:3:d0::44b8:a001]:8333\n+[2a03:b0c0:3:d0::44b8:e001]:8333\n+[2a03:b0c0:3:d0::44b8:f001]:8333\n+[2a03:b0c0:3:d0::44b9:1]:8333\n+[2a03:b0c0:3:d0::44b9:1001]:8333\n+[2a03:b0c0:3:d0::44b9:2001]:8333\n+[2a03:b0c0:3:d0::44b9:4001]:8333\n+[2a03:b0c0:3:d0::5e48:d001]:8333\n+[2a03:ee40:0:294:250:56ff:fe8d:4ad7]:8333\n+[2a04:2180:1:c:f000::15]:8333\n+[2a07:440:2000:20::ca0:1817]:8333\n+[2a0a:c800:1:1::4]:8333\n+226eupdnaouu4h2v.onion:8333\n+23wdfqkzttmenvki.onion:8333\n+2bfsxzluysybysnr.onion:8333\n+2f4xg7m3g6vtxqcd.onion:8333\n+2i5i6kvxoggngz67.onion:8333\n+336lqgffb4tg5gpm.onion:8333\n+342ouaetvqzgepjx.onion:8333\n+3mutzniftca5w7ou.onion:8333\n+3qpbpt4gkp3dxn2r.onion:8333\n+3r44ddzjitznyahw.onion:8333\n+3xucqntxp5ddoaz5.onion:8333\n+44walnmvlhcqa3c2.onion:8333\n+4ehtdyvvzhbbo6c5.onion:8333\n+4jekbh7cdlfda3ve.onion:8333\n+4mewwo2bfxk6lg3f.onion:8333\n 53tsjt6zq3iasv5q.onion:8333\n-5cg7qeywvwo6vxpt.onion:8333\n-5gbcrgqxcbxj253s.onion:8333\n-6cn4ilbwkrkh7gwo.onion:8333\n-6e4jrnn7igeqxmlf.onion:8333\n-6ymgbvnn6d5nfmv4.onion:8333\n-6zsh3bfduhpo7ldl.onion:8333\n-72fq6phv4fg4rhvh.onion:8333\n-7gdqp6npusk4lfwk.onion:8333\n-a7emxol55e623lqc.onion:8333\n-assbiydziq77zaki.onion:8333\n-bafk5ioatlgt7dgl.onion:8333\n-bk7yp6epnmcllq72.onion:8333\n+546esc6botbjfbxb.onion:8333\n+55zzzsk7iqv6p3ew.onion:8333\n+56stijc6kcgw6flk.onion:8333\n+5elzwcg4xysogalo.onion:8333\n+5f4ysqk4eed4jcvj.onion:8333\n+5k3oxus2laabmyip.onion:8333\n+5ptuzplawb3svsos.onion:8333\n+5rmpsrrdb3vpfgzh.onion:8333\n+5wnkqzjzjehmq7hn.onion:8333\n+5xxsqhppii22pges.onion:8333\n+5ygszbkbbauzjx7m.onion:8333\n+5z2she4d6fvrdnme.onion:8333\n+64qrhyxglyjjhkne.onion:8333\n+6kn76kajckqg22ao.onion:8333\n+6m2iqgnqjxh7ulyk.onion:8333\n+6wcfnbb3vmaw6cwa.onion:8333\n+6zynxbbupfmnvc3g.onion:8333\n+7sns7raurpmllybi.onion:8333\n+7whaszg22pdkvfck.onion:8333\n+a3a6plzycomx5gqw.onion:8333\n+acs7hylaadjkt7mk.onion:8333\n+agpwcvixadbinyet.onion:8333\n+ajqvsylg5xd5vs3y.onion:8333\n+aktfeaqkbnk52bfx.onion:8333\n+albsennsmbsgxls3.onion:8333\n+alruzrdz7xcek67f.onion:8333\n+am6aq3dluz3njcnt.onion:8333\n+aoefyxgnpgaiw2xg.onion:8333\n+ap2frg2maqxpmkkd.onion:8333\n+ap4zz4imxbdl6plr.onion:8333\n+apbbvhk32myudnyy.onion:8333\n+arlocvowxtnlbpo3.onion:8333\n+b5d6etfljm2lje5y.onion:8333\n+bdwvcwafzpssqckj.onion:8333\n brwqezn6le54w2bb.onion:8333\n-bs4bq6s6qkvt5hpi.onion:8333\n-bup5n5e3kurvjzf3.onion:8333\n+bxxvkb7czrxtvz2c.onion:8333\n c2tpqkaz4ihjzwgb.onion:8333\n-cernrmrk5zomzozn.onion:8333\n-cfyegj64ht3jpodr.onion:8333\n-cg5vg54cazzpvoug.onion:8333\n-cgk4u2lxrvml4jvb.onion:8333\n-cjygd7pu5lqkky5j.onion:8333\n-d6wubsdtr46dd5ki.onion:8333\n-dfq6yjc3aelplwr4.onion:8333\n-dqpxwlpnv3z3hznl.onion:8333\n-eamfospuveabaimd.onion:8333\n+cgcv32rbbbjyyzow.onion:8333\n+ckkqplgkzof45h2y.onion:8333\n+cpyfqbs4fs3vnbpf.onion:8333\n+ctzuzxnvla5xvb7z.onion:8333\n+cw4iqvcdy67b5tpw.onion:8333\n+cyvpgt25274i5b7c.onion:8333\n+dmudsr7x7edvyglt.onion:8333\n+dsbn53f2dwphv5mx.onion:8333\n+dssqdj6pxnzkth6i.onion:8333\n+e3zbephvcqmzcqkr.onion:8333\n+e63i7c7qazbdtjma.onion:8333\n+eiuaj2qjvbn737ph.onion:8333\n ep2mjzox3kvb6ax4.onion:8333\n-fpbxb4wjudiw2w5a.onion:8333\n-fu5hfsbbf5jwsvhv.onion:8333\n-g4freoibsczujle3.onion:8333\n+eyvfxeefr4eokefr.onion:8333\n+f3nfioh27j2xlfe5.onion:8333\n+f5ezxphghknfbrtg.onion:8333\n+faewczjuzs4wfxhv.onion:8333\n+fefisckqu5raqe3c.onion:8333\n+fgbss353vsvandn7.onion:8333\n+fnlkrowsyrfeub6s.onion:8333\n+fno4aakpl6sg6y47.onion:8333\n+fnpnjdk24pzgcplx.onion:8333\n+foe4ymjz4hjhowud.onion:8333\n+fql436nz7qdis3nk.onion:8333\n+frhfucww5vghf7cv.onion:8333\n+frrxefv5dir5hm7l.onion:8333\n+fuckerolyuv7ebla.onion:8333\n+fz6nsij6jiyuwlsc.onion:8333\n+g4qfwcu5wm7ze5lg.onion:8333\n gb5ypqt63du3wfhn.onion:8333\n-ggdy2pb2avlbtjwq.onion:8333\n-gh2aiddzxmvyrnue.onion:8333\n-gnxgylbgzvaazkq7.onion:8333\n-hnizdxnejel64ubk.onion:8333\n-htvdcmlc3abji2ab.onion:8443\n-hwuboois4gslupgx.onion:8333\n-hxz6gowludlj6d5a.onion:8333\n-j6umo4bnsztpsonc.onion:8333\n-jdunmaocwbbnw565.onion:8333\n-ktv3qlxl7xvmdlf4.onion:8333\n-kvd44sw7skb5folw.onion:8333\n-kwimnzm6vd4zakvl.onion:8333\n-la5xhk3lprxzxmz2.onion:8333\n-lc7cx67end26uutp.onion:8352\n-mwu5og2agcspmgkx.onion:8333\n-mzxkipiyekaoh7my.onion:8333\n-n6rwlrtwpqc7qwo7.onion:8333\n-nj36424yccqph62z.onion:8333\n-o256w7t3vcgktmxk.onion:8333\n-o4sl5na6jeqgi3l6.onion:8333\n-okdzjarwekbshnof.onion:8333\n-oyebydl2pacx6v26.onion:8333\n-p5mx2imj75dpmime.onion:8333\n-psco6bxjewljrczx.onion:8333\n-pxtgswet6tlgrbwj.onion:8333\n-rb4v3fhgx2zr4rre.onion:8333\n-rjlnp3hwvrsmap6e.onion:8333\n-rlafimkctvz63llg.onion:8333\n-rxjvy5eyttep5tts.onion:8333\n-seoskudzk6vn6mqz.onion:8333\n-tpgdufxxsw3jkrdf.onion:8333\n-tuiyvqgi3o675pjb.onion:8333\n-tx4zd7d5exonnblh.onion:8333\n-uokg6avfgbhofls3.onion:8333\n-v3gjphgqy5hygcml.onion:8333\n-vhdoxqq63xr53ol7.onion:8333\n-visevrizz3quyagj.onion:8333\n-vqpye2k5rcqvj5mq.onion:8333\n-wfsx2gi7djhy22hk.onion:8333\n+gcydj5id3jcxybzr.onion:8333\n+gfvnnnwcddfzosav.onion:8333\n+golevvyaydsduuw2.onion:8333\n+gq4su6stjnosqu67.onion:8333\n+hb4oreglor5x3xoa.onion:8333\n+hbuair37dxnblurw.onion:8333\n+hda7fvzq3voh7mu6.onion:8333\n+hnvk3pgvieyixyc2.onion:8333\n+ifwxwunja4pgwydg.onion:8333\n+ijmbmziunbszzxtj.onion:8333\n+in7r5ieo7ogkxbne.onion:8333\n+inysvhakrulg6lts.onion:8333\n+iwrwbwss7lfalfg4.onion:8333\n+ja7dmgkri7fi47xk.onion:8333\n+jtksnokusbzms7wl.onion:8333\n+jwxyqhp42cmwhqf3.onion:8333\n+jxrfatqtcevzwywz.onion:8333\n+jy6mvzb2ntutiye6.onion:8333\n+jydquxzliej6dm24.onion:8333\n+k2gdzvryrx7v6ksw.onion:8333\n+kkdas3qebkosygu5.onion:8333\n+kswfyurnglm65u7b.onion:8333\n+l2pruzr3mnhieuug.onion:8333\n+lgkgcd4brjmhrqna.onion:8333\n+lgkvbvro67jomosw.onion:8333\n+llljnatksfgtlhko.onion:8333\n+mdpt6w5sjwcnxtwy.onion:8333\n+mhjcepzc4gyadw2w.onion:8333\n+mn744hbioayn3ojs.onion:8333\n+mpakpgzu7umgu3ze.onion:8333\n+mvomwfdddqfqg3lq.onion:8333\n+mx5kdfxwowc3ymzg.onion:8333\n+n4m32zcp5hvomkt4.onion:8333\n+n73steqcmjz5hwni.onion:8333\n+nc2bgkhqohrmwbxr.onion:8333\n+nc6zlswwqqg7c5yz.onion:8333\n+nrrfwdmrm3imuebn.onion:8333\n+nrrmkgmulpgsbwlt.onion:8333\n+o2tku2dbsd6iumch.onion:8333\n+o72zyzrv77ea2bwu.onion:8333\n+ohgwa5y65z4eem7b.onion:8333\n+olvdu57g7rxwpcr4.onion:8333\n+onlzo775ogdpjn5x.onion:8333\n+otshttbd6v2k3jlz.onion:8333\n+owr5tm7ygw62z4vl.onion:8333\n+pcfhsdqzs6q63ryu.onion:8333\n+pffwqxvuldeq55zc.onion:8333\n+pgnz7kwc36rcucpu.onion:8333\n+ph4g7b4jsyuntvr4.onion:8333\n+pjghcivzkoersesd.onion:8333\n+pu7w3jfyrzp7sxsi.onion:8333\n+pxvkjp6sfb2f7foe.onion:8333\n+qaxm5spmx5d2k3up.onion:8333\n+qepth54daysmpy5y.onion:8333\n+qj6irqn2i73edff5.onion:8333\n+qjpejfzlwqqnzsol.onion:8333\n+qxe3bqjmrcepxpx4.onion:8333\n+rlonjm7ui6fdyz4h.onion:8333\n+rs635ss24ymwyqkw.onion:8333\n+sgiitogeoqslvkjv.onion:8333\n+spidernetimmmkth.onion:8333\n+tb7qlicrt6rdzxzd.onion:8333\n+thbjka62axzuwtnt.onion:8333\n+toguvy5upyuctudx.onion:8333\n+u7mpvxotmnqntyn5.onion:8333\n+uccmw67l4kgl646y.onion:8333\n+ueo6royc3775ioq7.onion:8333\n+ujsb2qcjk4t6234z.onion:8333\n+uub43p3artmornv5.onion:8333\n+uvb55mwvuy22mgm2.onion:8333\n+uzzyjgqlf47ackbr.onion:8333\n+v5fgr3fnz3nw663t.onion:8333\n+v5zs2sgjyr3glh6c.onion:8333\n+vk3qjdehyy4dwcxw.onion:8333\n+voy6xbvejox4xbax.onion:8333\n+vuiw75kgpcqke4mv.onion:8333\n+w3q47ucyajtfic76.onion:8333\n wg6vwmbrzyyzapun.onion:8333\n-xub4w3w4wwk56xiq.onion:8333\n-ycivnom44dmxx4ob.onion:8333\n-ywskufc62bf2fum4.onion:8333\n-z4fax2vxg23t2ddf.onion:8333\n-zo5dklwelmdrpo5n.onion:8333\n+wgpfwxgy2dowienn.onion:8333\n+wjtmvsznvdclncau.onion:8333\n+xab45bpmmrl5g3by.onion:8333\n+xdlu3ujzieheouo7.onion:8333\n+xgykmaa2jjay7cfu.onion:8333\n+xnlu3tvakngy7tkp.onion:8333\n+xsn5icce45gs3qy7.onion:8333\n+ydonogjpjd3me45v.onion:8333\n+ykn7vof37bavxetd.onion:8333\n+yl525dwhvqis7ryc.onion:8333\n+yrbaccpbyge6xaba.onion:8333\n+yyuxafli7fqdizhq.onion:8333\n+z33nukt7ngik3cpe.onion:8333\n+zon2bbc2q2ihqt4c.onion:8333\n+zqjvtxskxonu4kzv.onion:8333"
      },
      {
        "sha": "da67cb2d9052e709a05c630bfa691b7c680db03b",
        "filename": "contrib/testgen/base58.py",
        "status": "modified",
        "additions": 19,
        "deletions": 10,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/testgen/base58.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/testgen/base58.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/base58.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,4 +1,4 @@\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Copyright (c) 2012-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n@@ -28,7 +28,9 @@ def b58encode(v):\n     \"\"\"\n     long_value = 0\n     for (i, c) in enumerate(v[::-1]):\n-        long_value += (256**i) * ord(c)\n+        if isinstance(c, str):\n+            c = ord(c)\n+        long_value += (256**i) * c\n \n     result = ''\n     while long_value >= __b58base:\n@@ -41,17 +43,21 @@ def b58encode(v):\n     # leading 0-bytes in the input become leading-1s\n     nPad = 0\n     for c in v:\n-        if c == '\\0': nPad += 1\n-        else: break\n+        if c == 0:\n+            nPad += 1\n+        else:\n+            break\n \n     return (__b58chars[0]*nPad) + result\n \n def b58decode(v, length = None):\n     \"\"\" decode v into a string of len bytes\n     \"\"\"\n     long_value = 0\n-    for (i, c) in enumerate(v[::-1]):\n-        long_value += __b58chars.find(c) * (__b58base**i)\n+    for i, c in enumerate(v[::-1]):\n+        pos = __b58chars.find(c)\n+        assert pos != -1\n+        long_value += pos * (__b58base**i)\n \n     result = bytes()\n     while long_value >= 256:\n@@ -62,10 +68,12 @@ def b58decode(v, length = None):\n \n     nPad = 0\n     for c in v:\n-        if c == __b58chars[0]: nPad += 1\n-        else: break\n+        if c == __b58chars[0]:\n+            nPad += 1\n+            continue\n+        break\n \n-    result = chr(0)*nPad + result\n+    result = bytes(nPad) + result\n     if length is not None and len(result) != length:\n         return None\n \n@@ -92,7 +100,8 @@ def b58decode_chk(v):\n def get_bcaddress_version(strAddress):\n     \"\"\" Returns None if strAddress is invalid.  Otherwise returns integer version of address. \"\"\"\n     addr = b58decode_chk(strAddress)\n-    if addr is None or len(addr)!=21: return None\n+    if addr is None or len(addr)!=21:\n+        return None\n     version = addr[0]\n     return ord(version)\n "
      },
      {
        "sha": "c76de5ce750e3d328a83c5d407e74bf901bb9d85",
        "filename": "contrib/testgen/gen_base58_test_vectors.py",
        "status": "modified",
        "additions": 20,
        "deletions": 16,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/testgen/gen_base58_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/testgen/gen_base58_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_base58_test_vectors.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,11 +1,11 @@\n-#!/usr/bin/env python\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n+#!/usr/bin/env python3\n+# Copyright (c) 2012-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n Generate valid and invalid base58 address and private key test vectors.\n \n-Usage: \n+Usage:\n     gen_base58_test_vectors.py valid 50 > ../../src/test/data/base58_keys_valid.json\n     gen_base58_test_vectors.py invalid 50 > ../../src/test/data/base58_keys_invalid.json\n '''\n@@ -46,8 +46,8 @@ def is_valid(v):\n     if result is None:\n         return False\n     for template in templates:\n-        prefix = str(bytearray(template[0]))\n-        suffix = str(bytearray(template[2]))\n+        prefix = bytearray(template[0])\n+        suffix = bytearray(template[2])\n         if result.startswith(prefix) and result.endswith(suffix):\n             if (len(result) - len(prefix) - len(suffix)) == template[1]:\n                 return True\n@@ -57,30 +57,33 @@ def gen_valid_vectors():\n     '''Generate valid test vectors'''\n     while True:\n         for template in templates:\n-            prefix = str(bytearray(template[0]))\n-            payload = os.urandom(template[1]) \n-            suffix = str(bytearray(template[2]))\n+            prefix = bytearray(template[0])\n+            payload = bytearray(os.urandom(template[1]))\n+            suffix = bytearray(template[2])\n             rv = b58encode_chk(prefix + payload + suffix)\n             assert is_valid(rv)\n-            metadata = dict([(x,y) for (x,y) in zip(metadata_keys,template[3]) if y is not None])\n-            yield (rv, b2a_hex(payload), metadata)\n+            metadata = {x: y for x, y in zip(metadata_keys,template[3]) if y is not None}\n+            hexrepr = b2a_hex(payload)\n+            if isinstance(hexrepr, bytes):\n+                hexrepr = hexrepr.decode('utf8')\n+            yield (rv, hexrepr, metadata)\n \n def gen_invalid_vector(template, corrupt_prefix, randomize_payload_size, corrupt_suffix):\n     '''Generate possibly invalid vector'''\n     if corrupt_prefix:\n         prefix = os.urandom(1)\n     else:\n-        prefix = str(bytearray(template[0]))\n-    \n+        prefix = bytearray(template[0])\n+\n     if randomize_payload_size:\n         payload = os.urandom(max(int(random.expovariate(0.5)), 50))\n     else:\n         payload = os.urandom(template[1])\n-    \n+\n     if corrupt_suffix:\n         suffix = os.urandom(len(template[2]))\n     else:\n-        suffix = str(bytearray(template[2]))\n+        suffix = bytearray(template[2])\n \n     return b58encode_chk(prefix + payload + suffix)\n \n@@ -111,7 +114,8 @@ def gen_invalid_vectors():\n                 yield val,\n \n if __name__ == '__main__':\n-    import sys, json\n+    import sys\n+    import json\n     iters = {'valid':gen_valid_vectors, 'invalid':gen_invalid_vectors}\n     try:\n         uiter = iters[sys.argv[1]]\n@@ -121,7 +125,7 @@ def gen_invalid_vectors():\n         count = int(sys.argv[2])\n     except IndexError:\n         count = 0\n-   \n+\n     data = list(islice(uiter(), count))\n     json.dump(data, sys.stdout, sort_keys=True, indent=4)\n     sys.stdout.write('\\n')"
      },
      {
        "sha": "8960f8811d81e883773fc76add0f6421d173df82",
        "filename": "contrib/tidy_datadir.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/tidy_datadir.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/tidy_datadir.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tidy_datadir.sh?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,62 +0,0 @@\n-#!/bin/bash\n-# Copyright (c) 2013 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-if [ -d \"$1\" ]; then\n-  cd \"$1\"\n-else\n-  echo \"Usage: $0 <datadir>\" >&2\n-  echo \"Removes obsolete Bitcoin database files\" >&2\n-  exit 1\n-fi\n-\n-LEVEL=0\n-if [ -f wallet.dat -a -f addr.dat -a -f blkindex.dat -a -f blk0001.dat ]; then LEVEL=1; fi\n-if [ -f wallet.dat -a -f peers.dat -a -f blkindex.dat -a -f blk0001.dat ]; then LEVEL=2; fi\n-if [ -f wallet.dat -a -f peers.dat -a -f coins/CURRENT -a -f blktree/CURRENT -a -f blocks/blk00000.dat ]; then LEVEL=3; fi\n-if [ -f wallet.dat -a -f peers.dat -a -f chainstate/CURRENT -a -f blocks/index/CURRENT -a -f blocks/blk00000.dat ]; then LEVEL=4; fi\n-\n-case $LEVEL in\n-  0)\n-    echo \"Error: no Bitcoin datadir detected.\"\n-    exit 1\n-    ;;\n-  1)\n-    echo \"Detected old Bitcoin datadir (before 0.7).\"\n-    echo \"Nothing to do.\"\n-    exit 0\n-    ;;\n-  2)\n-    echo \"Detected Bitcoin 0.7 datadir.\"\n-    ;;\n-  3)\n-    echo \"Detected Bitcoin pre-0.8 datadir.\"\n-    ;;\n-  4)\n-    echo \"Detected Bitcoin 0.8 datadir.\"\n-    ;;\n-esac\n-\n-FILES=\"\"\n-DIRS=\"\"\n-\n-if [ $LEVEL -ge 3 ]; then FILES=$(echo $FILES blk????.dat blkindex.dat); fi\n-if [ $LEVEL -ge 2 ]; then FILES=$(echo $FILES addr.dat); fi\n-if [ $LEVEL -ge 4 ]; then DIRS=$(echo $DIRS coins blktree); fi\n-\n-for FILE in $FILES; do\n-  if [ -f $FILE ]; then\n-    echo \"Deleting: $FILE\"\n-    rm -f $FILE\n-  fi\n-done\n-\n-for DIR in $DIRS; do\n-  if [ -d $DIR ]; then\n-    echo \"Deleting: $DIR/\"\n-    rm -rf $DIR\n-  fi\n-done\n-\n-echo \"Done.\""
      },
      {
        "sha": "0f6d993fd2b4ad45ec10b9324d40edfb96afa9d8",
        "filename": "contrib/valgrind.supp",
        "status": "added",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/valgrind.supp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/valgrind.supp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/valgrind.supp?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,43 @@\n+# Valgrind suppressions file for Bitcoin.\n+#\n+# Includes known Valgrind warnings in our dependencies that cannot be fixed\n+# in-tree.\n+#\n+# Example use:\n+# $ valgrind --suppressions=contrib/valgrind.supp src/test/test_bitcoin\n+# $ valgrind --suppressions=contrib/valgrind.supp --leak-check=full \\\n+#       --show-leak-kinds=all src/test/test_bitcoin --log_level=test_suite\n+{\n+   Suppress libstdc++ warning - https://gcc.gnu.org/bugzilla/show_bug.cgi?id=65434\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:malloc\n+   obj:*/libstdc++.*\n+   fun:call_init.part.0\n+   fun:call_init\n+   fun:_dl_init\n+   obj:*/ld-*.so\n+}\n+{\n+   Suppress libdb warning - https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=662917\n+   Memcheck:Cond\n+   obj:*/libdb_cxx-*.so\n+   fun:__log_put\n+   obj:*/libdb_cxx-*.so\n+   fun:__log_put_record\n+}\n+{\n+   Suppress leveldb warning (leveldb::InitModule()) - https://github.com/google/leveldb/issues/113\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:_Znwm\n+   fun:_ZN7leveldbL10InitModuleEv\n+}\n+{\n+   Suppress leveldb warning (leveldb::Env::Default()) - https://github.com/google/leveldb/issues/113\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:_Znwm\n+   ...\n+   fun:_ZN7leveldbL14InitDefaultEnvEv\n+}"
      },
      {
        "sha": "aa805ad1b96b962c4eb571732cba4edfb08728db",
        "filename": "contrib/verify-commits/README.md",
        "status": "modified",
        "additions": 25,
        "deletions": 4,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verify-commits/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verify-commits/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/README.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -7,20 +7,41 @@ are PGP signed (nearly always merge commits), as well as a script to verify\n commits against a trusted keys list.\n \n \n-Using verify-commits.sh safely\n+Using verify-commits.py safely\n ------------------------------\n \n Remember that you can't use an untrusted script to verify itself. This means\n-that checking out code, then running `verify-commits.sh` against `HEAD` is\n-_not_ safe, because the version of `verify-commits.sh` that you just ran could\n+that checking out code, then running `verify-commits.py` against `HEAD` is\n+_not_ safe, because the version of `verify-commits.py` that you just ran could\n be backdoored. Instead, you need to use a trusted version of verify-commits\n prior to checkout to make sure you're checking out only code signed by trusted\n keys:\n \n     git fetch origin && \\\n-      ./contrib/verify-commits/verify-commits.sh origin/master && \\\n+      ./contrib/verify-commits/verify-commits.py origin/master && \\\n       git checkout origin/master\n \n Note that the above isn't a good UI/UX yet, and needs significant improvements\n to make it more convenient and reduce the chance of errors; pull-reqs\n improving this process would be much appreciated.\n+\n+Configuration files\n+-------------------\n+\n+* `trusted-git-root`: This file should contain a single git commit hash which is the first unsigned git commit (hence it is the \"root of trust\").\n+* `trusted-sha512-root-commit`: This file should contain a single git commit hash which is the first commit without a SHA512 root commitment.\n+* `trusted-keys`: This file should contain a \\n-delimited list of all PGP fingerprints of authorized commit signers (primary, not subkeys).\n+* `allow-revsig-commits`: This file should contain a \\n-delimited list of git commit hashes. See next section for more info.\n+\n+Key expiry/revocation\n+---------------------\n+\n+When a key (or subkey) which has signed old commits expires or is revoked,\n+verify-commits will start failing to verify all commits which were signed by\n+said key. In order to avoid bumping the root-of-trust `trusted-git-root`\n+file, individual commits which were signed by such a key can be added to the\n+`allow-revsig-commits` file. That way, the PGP signatures are still verified\n+but no new commits can be signed by any expired/revoked key. To easily build a\n+list of commits which need to be added, verify-commits.py can be edited to test\n+each commit with BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG set to both 1 and 0, and\n+those which need it set to 1 printed."
      },
      {
        "sha": "c572806f2612e8c6cec07251e232e4d342ab3186",
        "filename": "contrib/verify-commits/allow-incorrect-sha512-commits",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verify-commits/allow-incorrect-sha512-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verify-commits/allow-incorrect-sha512-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-incorrect-sha512-commits?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,2 @@\n+f8feaa4636260b599294c7285bcf1c8b7737f74e\n+8040ae6fc576e9504186f2ae3ff2c8125de1095c"
      },
      {
        "sha": "3abf82e529cbbbc766d0b7f7c4028d7721eb6755",
        "filename": "contrib/verify-commits/allow-revsig-commits",
        "status": "modified",
        "additions": 400,
        "deletions": 0,
        "changes": 400,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verify-commits/allow-revsig-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verify-commits/allow-revsig-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-revsig-commits?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -102,3 +102,403 @@ bafd075c5e6a1088ef0f1aa0b0b224e026a3d3e0\n c8d2473e6cb042e7275a10c49d3f6a4a91bf0166\n 386f4385ab04b0b2c3d47bddc0dc0f2de7354964\n 9f33dba05c01ecc5c56eb1284ab7d64d42f55171\n+7466a26cab5d66665991433947964a638f5b957e\n+b43aba89e356ff95b706e80d4802f60fc46a569a\n+02b7e8319aef2a870264ad4fa2e3bb18664dcc36\n+f686002a8eba820a40ac2f34a6e8f57b2b5cc54c\n+2b1c50b9352ab1dc40b0f877db23c1fa4048fae3\n+2405ce1df043f778b8efb9205009500cbc17313a\n+4ad3b3c72c73d61e0a0cab541dca20acf651320d\n+4ba3d4f4393d81148422d24d222fe7ed00130194\n+8ee5c7b747171e335793c74cd9d2f7491da58164\n+872c921c0a208b04bd0713758e52fcab5b7c1684\n+00d1680498c5550e7db1f359202d3433a092fafd\n+585db41e9ab7a6fb262c8bad7f427cdbdc497188\n+18462960c0f13bd07d8f52b61e7d7bc17e991eea\n+0630974647dacaf25e7fcb7f9cbb785bb078ede6\n+0f58d7f3d62f012f2584f5e781fc73de4763dd9e\n+3d16f581538b0974853e820508e8b3093269d2fd\n+66e91420ab233cf1dac64504e0dc129019bf8c0d\n+d8d9162f5bad39b2720dd2b2da237c6159e4755f\n+29fad97c320c892ab6a480c81e2078ec22ab354b\n+791c3ea61b4e49fd46a1a71b84ca99ddf69d2ff7\n+a312e201ba56742499a5480b5f2115f01505c217\n+ce56fdd2e8cdf94fd0ab76d71adbfa755e23ce7d\n+480f42630cbd598c04fa59ee0e406f56904ecffb\n+6012f1caf744ac9b53383d7d10a8f1b70ca2c0e1\n+ded6a2afa549f693dcabb430ce0862f8631360c8\n+07090c5339436f856e79a8036d1c85deeb453803\n+0e265916d1c6a63e4a3821dab9db597b5ec64b46\n+e4ffcacc2187d3419c8ea12b82fb06d82d8751d2\n+e117cfe45eee9169409e74a44ef4a866be25bc35\n+dcfe218626b05204e9fbc95ba5d95ca0eb72ec9b\n+23481fa50301201ef5a60675ef899aa6ce94ca03\n+27c59dc502f29cf1d76290556c21e366145e3b2e\n+4a62ddd01873d18dbca96c81d756be1020249b45\n+a233fb4f1d037e68ff70eef3a9f5b7bf1d631918\n+b2089c51cc4af2f7e1c0ec75be9449ee222b1d69\n+c997f8808256521397f1c003bb1e9896fee6eaa0\n+5dc00f68c49c46a380a98d06233f90528b8e2557\n+fe53d5f3636aed064823bc220d828c7ff08d1d52\n+935eb8de039dec65669a96a1c3b86f4b03a1b86c\n+0277173b1defb63216d40a8d8805ae6d5d563c26\n+2a30e67d20f76bbcd9a7d445f616f005316e0a1a\n+d32528e733f2711b34dbc41fbb2bb0f153bf7e9a\n+4cad91663df381d0dff8526f3b4aa74569dfb626\n+1b06ed136f17b526360617a70026aed5ded5746c\n+895fbd768f0c89cea3f78acac58b233d4e3a145e\n+f0295becbf3ef1fb78095306408789253fe0c114\n+8d573198638e52e2dbd9abc609861430f9d2bcc3\n+9d9c4185fadaf243bb97c226e2fef16b65299699\n+eebe4580bc8d6484d79ecb24dd87412221cf2ea7\n+9cf6393a4f82b9c81d3b4b468a17a89db10531a2\n+598a9c4e4dcd03c6d80fba005de729a6a3aeba7e\n+6970b30c6f1d2be7947295fe18f2390649b17a4b\n+f359afcc410432ed5d30001acda0c66741ee8935\n+126000ba9e7ff16271be2f4eef3df99ade8d624f\n+b5e4b9b5100ec15217d43edb5f4149439f4b20a5\n+b987ca4ee495a7fff82f0ac14ef0753bfb7586e2\n+b03013396cb2f4bf25746388b3982a2c3616e16b\n+9a97f39afaa890caa7987c6bc001b9a66e3e74e8\n+cad504bf4c302f7a72e0a0e191f3fdbafda7340f\n+45cf8a03cb57b8639a8d47323bde46ba22d9eeaf\n+b7450cdbd89a1c862f4d4d8bf093f8a0b5448f9c\n+0910cbe4ef31eb95fd76c7c2f820419fe64a3150\n+92a810d04b906722c9efe60e3997243c71ff3d4c\n+45173fa6fca9537abb0a0554f731d14b9f89c456\n+fd4ca17360e6fc0c9bb76bf6b5b07c9102c12728\n+ddff3447f29b62d79a33f728791f42fa9436216e\n+36a5a4404836da323c755523fbd27563a8e84f94\n+c991b304dee368f506cfee27ddaa333f1f82c518\n+d38d1a3e75aa97ffa8755ddd431754a6d0942964\n+a332a7d5a15214015f9553fdb2bcf80a1a4b8dc0\n+604e08c83cf58ca7e7cda2ab284c1ace7bb12977\n+18a1bbad98bd4321f15e7921d9aec91661499d90\n+8049241e226c16bd07b029c0cb4b62ac40f0c923\n+797441ee995aac59f55d59a93ecb55e8ecbe7dbc\n+62fdf9b07087b80d2142799bdd2324f61483359d\n+f60b4ad57912b78a96af08046a503f7905610a8c\n+13e31dd6548d64a5992f439e74bb424bf88aca04\n+fbce66a982679b5409a295be5c99a2eef429cabf\n+9f2c2dba21855b8cb9b193b1819be73fa4a23a99\n+a89221873a3ee2451c73b41bbe2d99d36f439d31\n+3d6ad407770e13958e157bf026cae0bfb9254899\n+901ba3e3819405306414628306746552b0aa1d28\n+7a43fbb959c38e025e558e472ad57de357539894\n+0d89fa0877930c6c8a539a656c1009ad8ab6755b\n+54aedc013744c86b11157423fa3cffc9a51eef02\n+f0c1f8abb0182da557d07372b938f3a0a4bb906f\n+4ed818060ecf4a38a02c8cb48f6cbc78d2ee7708\n+3bdf242fc68a8d767932c6214455d4d413effbc9\n+5e468994fbb349e8eefc996954a31a67a34aaa15\n+41aa9c4a801a01eca1fad22a7095372d23dace60\n+2adbddb03840ad71e843c6c4a207a13e871cd1d4\n+13e352dc53dec0127c5f94a60055d0ca829420dc\n+95e14dc81dd30ee0d396ad08dca9a6980d16eee1\n+61fb80660f73e5aa5b69302ecc7ac33da206ba5a\n+05a761932edd05cf94ffe938908baf058f38632a\n+ee92243e66f2df03b3a759a8ffb75dc06f0cea0d\n+22cdf93c062eeaa0f8f9d6220f01b67240073dfb\n+76b33491596736ca804e3a29bd8398d7a1516ab7\n+6e4e98ee8ce2da3cca2e2fd210e9e8dbc9b1c936\n+c838283ecdfb9490425bb071b7c22e542de46c7c\n+5e3f5e4f25b65b583d3bfefac9e1148035781089\n+f7388e93d3dd91a90239aedac4ec58404f103a2e\n+0a2f46b0158b6fc7244a585913b0925c0acf707f\n+dd561667cb7ccbbfed3134b05a565971ef6f5873\n+6f01dcf63873a5e42798635ab4026c9a5f9fa213\n+70fec9e36bcd1a3d93df019be084aaf89cecd7d7\n+f9b74ef3fc74fd7d2aa94560820341f03cda8e12\n+998c3046fab2b52bc9f141cfb588a18c05506a86\n+89cc4f905e30b913ca20e4192d538cc5cbe2c38d\n+87d90efd69b64f769116956a5db89e536e9e3714\n+5aeaa9ccd1568a77e075dbe2bd2435bd60c87c91\n+bfb270acfa30713dc8c968bb9ee40cf5a2360359\n+1b8c88451b0554502435d3883c528ad0aad1b09b\n+57ee73990f1ce29916adfd99f93eae1ccea1a43b\n+808c84f89d0edcef9ddaab0b849a382719f6ec9e\n+14b860bf64020451ced823b859da8cb912278ab9\n+c63364610f4a041df1c1bd81d01b1f6856160749\n+92eadc395071876d77f3babddc056b4325bdbabc\n+e93fff1463ae906fc986bf98c3b118c82f171546\n+9ccafb1d7bdd172a9b963444072a844da379c4f7\n+b4a509a3f817121c3df98ddfd96b2769e18a3e5a\n+dbc4ae03963014ab4b7957d62ba59dbd8f938c33\n+8ddf60db7ad636b6a31b590251c671ded635fa1d\n+f199b8a33d9443a258a1f49a1a29674cd9ee9a20\n+e542728cde676f218c552d841d0af29b92f9800b\n+763231051596b8e3455b839911ad6a3a1f1c3c74\n+ff4cd6075b12fb32b9a906deea3ed033e3f9560a\n+9c3c9cdae3e20b5bdea91a0631edac5116bbc89f\n+93d20a734d2ee873832bed8ca5c05cf8e539c53c\n+ef8340d25f7c5dd5682bdecea97ce84cfce1493c\n+69c7ecef405d168f658a9cc7996da84c17f61e66\n+4ce2f3d0d33346e9f0e96851689ee6550b2a72e3\n+44e1fd926cfb0df0fbd8c41de8cd65ed8d5d6e18\n+d6d2c8503c4039b682196d83a67dc28359c10c5c\n+ae233c4ec3d14a97c6195059f52873cdba2b4755\n+0f399a9ff227896265cafab9b2e9fab6cdb9b5b9\n+f4ed44ab4a8f9a87ba678d5fd1449fbf636103dc\n+7fcd61b2613c211bb042a82a889655178be6a212\n+42973f834445d7735738bdba8847812ba3c34d95\n+8df48b36ed3201d938b9974ecbee455d7dc2fb84\n+96ac26e56627f0c24213fcd3a1cce9fc95f1f661\n+cce94c518a46b7b0006f984bbe4d69e8749182d2\n+801dd40666d1e6009920ad3ff755c7bb993b2a62\n+ce829855cfca103dde55661fa1524e66b139d063\n+b148803b181e30213e8a7f3bd89c8239e9dcb866\n+c377feaad87f8109f85da6caf62602b30c20effc\n+b37cab65c63e051ebc5b491da9bd687581df94df\n+16e41844e7d6c5876d2caaeef6010656950c6ec5\n+ee50c9e48786dea0d9df2e45805c25565c100fe3\n+11dacc6154c42bc6fe3ba94c1823f8a46e4fe81a\n+791a0e6ddade27d1b69f4861a6640de60b9553cf\n+638e6c59da4fad987c437592174b188510193b2e\n+52f8877525d5238f3440e73710507be889d14127\n+2a56baf395bf11835d784c4f8634f4525deed6a1\n+bc561b4b7d6a3f71649d37d5eb9047c29efa2b13\n+31809d6f8514c4a8d5677e947e3f1ebb0db210b9\n+a31e9ad4f027955d43c04a05517244647e250161\n+777519bd96f68c18150a0f5942f8f97a91937f5e\n+4eb1f39d421024d9666cec61deaf96715ffae4c6\n+50fae68d416b4b8ec4ca192923dfd5ae9ea42773\n+ce665863b137ac4a7470cf006a92aa7694faca71\n+81f8c0378b2ab5ea0d7b65635cb529bd3c69127c\n+108222b9c323a05cc9339368f10ddd0859f62b43\n+28f788e47e58f2b462351d6989348a4e1a241b2b\n+d81dccf191a48a6b59c3747d7b4ccbe3535dde40\n+a90e6d2bffc422ddcdb771c53aac0bceb970a2c4\n+91e49c51f1aecc9e1d75457f4920d52a4b0a133c\n+60dd9cc470584960431de425e2a9ffbed0e8034a\n+ede386c2193fc31351e193b3a8cf30030d6be62c\n+a084767b40c0d3ba8fa8f8d60f1e8d99a9dc3457\n+3f726c99f819f97f2ab21b94d34c6b3129cd883a\n+77fc469fc78cdd87c29f398d46ac58dbb9ef62c0\n+4ae6d0fbef60ccbecf8f23bb482e201b3678f7a3\n+8858b6ddd3bce9daa08da6e05de3ca863a399c15\n+22e301a3d56dc9e6878380ee92c7d19ca43119d2\n+c484ec6c9b85ca4e331e395c564ae232fd0681dd\n+a46a671e253528e450bd57645c400bf761da07ab\n+655970d9c60ae6850daf452457e14e21047c0e1b\n+b6a48914c50631914192aa11b19205436a9c664d\n+7db65c363a0cc6ca7cdb04de9a973ab70013baad\n+6366941275344dac7e2130b0c972e90117d37ed0\n+4fb2586661471a1572c2df2a5a091011d45eb7c4\n+d7be7b39fa1021ec4518186afe145ee948e12a94\n+85aec87b11ec41295558175c63f1f5a849460fdf\n+aeb31756276034dd506fdf97c8aaade0e7e584f5\n+ac016e17d20253129a0287cee7e1d06b7ef15966\n+bf74d377fb8e20140da6eac1407414928384bcea\n+2c811e08db651a4aed6ea0f7c1972d60de6de8ab\n+e5d26e47c7a482c072a7fe47bb84c56854734184\n+96a63a3e0cefe920819bd42add0041837b1214a1\n+e526ca6284b9e13be1b912b80dd73a34e739b539\n+ecd21357f16106e541e9c2854ead2a906659b938\n+4b5a7ce0c301ad971f383eb60f61bf9b4026efda\n+929fd7276c0f0c30b9416f61a6f5f35d763d81e4\n+fa8a0639f7b0ce04030b72b4d5be4f0aa36fc5cb\n+f1f1605c22a6283bbfd757055fcf2b584a857709\n+0c173a15ca1bf20999f74987988985508c9de463\n+df0793f324e33066cc746c0cb1d053d35733d626\n+2b0179d8a9b75397937126b36114df0dddeab40c\n+bf0a08be281dc42241e7f264c2a20515eb4781bb\n+3895e25a77363ae8b49358fb793f50fa8b271e2d\n+1fc783fc08bc078239537535f174ab8a489772c0\n+1d4805ce04645f3203b0cfd3d66ea710e7433eb4\n+d3b58704d1d325875fc605580c1c02b825c1bbcc\n+ed88e3194c4bc43aeafef929da7b419d03dea1ad\n+dd07f47b79628668e29cc0143b21e790100ee445\n+65cc7aacfbfc7b747926375280a1d839e88d576b\n+080ec5209172ac9605f1434559dbb3c1e012b10a\n+416af3edf5b5ab265acf95568f2bc9eabd3d96de\n+e0a7801223fd573863939e76cb633f1dcc2d22c4\n+4bc853b50fd9127687eb9e4f3b679dd261a4fa96\n+c68a9a69278aa194fed96bd9733d32af3690a11e\n+c38f540298f0e188df5ed68fd56c623b9ac8331b\n+643fa0b22d70e459d7f7ec3d728ae4811dc5158f\n+e053e05c130549f43953f1d70e724dc9ce3e1b85\n+75e898c094eea533d1dfaf141c6afccc3072c49f\n+2805d606bc46bf5589093a1b92d3542c13ce50c2\n+32751807c9c06011eb689cba56b401a6302699c0\n+30853e16d332816752dafcfca92147c7ffef5b54\n+bea5b00cfe95cd37832305c0f93c339a22a7d79d\n+c871f323b418fac27bf834843ca26985010df53f\n+329fc1dce7a1c372c8b10c2f2f8732b2c60daff0\n+1aefc94dd78d6e0c9209cb09fc16f53dedf42108\n+8e5725666b519b61fcdc3141da5c6a57c1959909\n+a4ca0b042365061020627a8c045cddacea3312ec\n+8bd16ee12fc8ef6723e0572c29b979c15b92b4f4\n+87abe20fc118721cc5efdbd94a8462468cd1da2b\n+4b766fcdd4ca16399075d1e081a321b3b05ce516\n+f6241b3e420e19f3f0507cbbc872fe9218916a02\n+7ee523604851af62c0a47c07ee023a8710ef32f7\n+776ba233e939fe41a74c6b2632b93a0679a32c71\n+6a796b2b53fe542e0f340f250f4f20d69efed8d0\n+23d78c4dd01bc74ba35db3e3df95280f6f1b2e22\n+f4b15e2de97c4f8cdbb40bef4c9d0ab2807974d9\n+fff72de5bf8ac7b70208e655f237b80e70e18851\n+170bc2c381f86a523de2fc8b71d62ade66303c0d\n+314ebdfcb38d4b4c977579f787d5e1a20d068c94\n+e9274839bf316b1972d80d28e45759f898edbf86\n+75171f099e82e3527d7c3469b15891bd92227ec2\n+3c5e6c94caf40395e031fbde44a0cca46fdd76ec\n+dc8fc0c73bebbc1c48ac5540026030c9cc00ec23\n+492d22f92919d8d9d59568318c26c1e2ac4890cc\n+80c3a734298e824f9321c4efdd446086a3baad89\n+47535d7c3ec79c5978cdcc03a5351ddbbb22538d\n+1b25b6df0f08f7474228c5b6ed13b58682e1e440\n+c530c15180631cea95e9c292cf7fabde9dca9db3\n+2723bcdce3248417e98e6c43207bef74d34076c1\n+ed22eb4a62bd8d5369aaec87d4cbdc03c9f16368\n+9111df9673beb6d6616d491a5478f09b5f14d040\n+d86bb075bf6d1e78c1e4f3dd38b0ea828ef5ecfe\n+50a1cc0f0aef1514b917a5a3f4476967170b429d\n+6ce733747e160ca699711f2c47e686284ca9aa07\n+b44adf92342ad4f9c343ba29c081a91687932936\n+88799ea1b1c08f4bc1a487c9e3c2effd5e1650ae\n+080d7c700fc3291560d79fc590e05b8e2bad984f\n+12af74b289f8cdc6caf850dc6c802f9936b1e8b3\n+8e4f7e72410df3ba430082c7cf385f26fd75b033\n+8ac80412867118172dc4172494304e19969e9489\n+f2734c2828f69d9cfd535e5eab0592a7674b2b61\n+0b9fb682890b8fe10cec54072b809a5efe57d33d\n+5b029aaedb5fcf7cadd249607dd28eb3f233ab8c\n+79af9fbd8c3c0e54702a9c92b171f134bd4466c8\n+c412fd805ddf3282dc2e1f28e30f51ffcb1f1da2\n+111849345bb5140f86b48e730ceab4bff45fa2e9\n+a0b1e57b20a17177ed5a9a54e4a8aab597a546b4\n+ca209230c8e73745cf8cfc79f500c9c46e103306\n+a230b0588788dbe1ac84622aea169c577b381241\n+dfef6b6af08097f0676a2323085558fbbd3c48c6\n+3192e5278abca7c1f3b4a2a7f77a0ce941c73985\n+7c7ddd9ead99a8b5033a1a5d4698032c9e2b3a92\n+10b930dde8f14e9cb661810e97a33bbf144fc55c\n+9225de2cf652fe2bf6e50636824cdb641546f57d\n+598ef9c44b3ea2cc142c175f077b493f39f5ba22\n+c49355c7170a64bdd7864cc3ba9a64916b67fe7c\n+857d1e171e051b254a617f27b39f6a551054cee2\n+21833f9456f6ad5bc06321ad6d9590f42ce0195c\n+8910b4717e5bb946ee6988f7fe9fd461f53a5935\n+5703dff0939f05c7457cebd6fc61d88ab13afe41\n+8bfa13b15b84cb372950fb7b25a1080173060b6a\n+ac23a7c1f19b3d8c326ffe75c8e13edf285f90fe\n+19be26afe3d04783a92d032b55bf3fb1e2ae63cc\n+f7ec7cfd38b543ba81ac7bed5b77f9a19739460b\n+36afd4db4442c45d4078b1a7ad16a1872b5bee0d\n+88c2ae3ed2bb5d367dd408c9255cd8f1e7a36c7d\n+a13a417cdcfdfd1f1b3bf997bb6ffe6e69b096b9\n+d6064a89ac97dc0d2ce9da3982e1a4e25afaeda8\n+7146d96de3e15a80cafbab2af48ff6f65d8e41bb\n+5628c70f2a44567695e5331fe2293c5b7f35b629\n+7ff4a538a8682cdf02a4bcd6f15499c841001b73\n+aa5fa642b0e7ce2ea55e2298886f212f11a8894e\n+8efd1c820b9a782d8608d54d924658536178295c\n+50a226563cd8d7c0a5e8448e87fede0eb72a8354\n+b860915f8b0dae98e57a254d11575ea41f5c5a79\n+d304fef3746039183f51b3ac8f4774dcf3a64f59\n+53ab12d9318d5d195ccc77028b0e3ae66dc6e1fd\n+668de70be039a4f1ffcf20aeae2a22ee71fc55a8\n+0fea960ca917b73aff853fe88476174c8a313863\n+f89502306dcf6393a2c7b0efbb0fa728fc582137\n+ff58b1c3bdff5e5f687f10f9e40ce495ca49674e\n+0b96abc35f1a9d46a27eeddd7df418d107c29c57\n+b0b57a17306a7e963a4fe463f84e2b150a00a859\n+4105cb6fd964ad13099ca83b1fdf3d35f3961f74\n+23281a4dc3afc42a001346caec4dbb8193f0bb53\n+8daf103fa138f9a184448ebf1c2e03b9dbd96f21\n+02e5308c1b9f3771bbe49bc5036215fa2bd66aa9\n+a65ced1a66575c652baf5084644b8647f531be8c\n+2456a835f0bc7796d9ff71f64837fa6790e2b7cc\n+9ec1330b455c1ab2eb6b89f8a2ab885677d4ae8a\n+0b738075bd43fbd4410e30a51e0498cbfd2b7513\n+98c80e374b84e5a9c2d5c36889a0b1ebed5b814b\n+25720fc394e27a951bcad26095fb5a711bfacb8f\n+4cfd57d2e38207d78722ce8c9274ba8dd700d1cc\n+0fc1c31a878e93d938c67db3f958e82e3c39659f\n+df1ab5b4d67b46b5e9e840b1fbe0ff02520831f9\n+5bc3b6cede8dabdf3f4f27ddb03723cbb7cde51a\n+c2ea1e6561caba3abffce361abc800822b9e0efe\n+caa2f106d704ec3ade63498031dd58d34510bc76\n+dce853ef76ef90c46d84294225088d595467d08c\n+dbc8a8c86ae50059fddb2d6834fa5f0c9bbf9b71\n+0f921e6a0492c4e9f037a9ed91f474885032d68c\n+041331e1da23e4136fd046ed870cdcc177464176\n+e6ba5068f107ac234576e77cedbd748b665369c2\n+76fcd9d5034143a5b041766552670d19f926097d\n+72bf1b3d0962304850a3ef5fe375db4bff1d0a39\n+919db037f1f5cc73cdcaef92dd9cb0e7f5c8dec3\n+c36229b0b2e9d4554053f5c9fc451ac29a493b1f\n+9e4bb312e6958d2baa309ba670e5eed1523c6f47\n+d7ba4a233bd5a6f8fadee681c68a995e23fe36d7\n+98514988a3d3e8b7dbf0463884a5c38f5ed5562d\n+5412c08c3cf13577566064edd04da021c37b7cbe\n+31bcc667863f368157efa1143a78623a5db8f0d1\n+7bd1aa566fb4a4fe194f209085649f2c722b0cff\n+c4522e71c7e1d8ecfd70112e9375b9d00d6733a8\n+e22f409f18881b63a8e747036584a71217f40e6e\n+97ec6e5c9098a1240655cfcab05b6cd5eedb6cd1\n+bc121b0eb19713ec72002b5be03ba5ac35903a17\n+c98f6b3d93a2cc1b49a6db425ea2b661089d0f9e\n+0de7fd36de57a68e543b4c1f184fba192c398c73\n+e662d281b837c25b2b70525aa8fe8af894339823\n+44adf683ad232db8ce0cb89b3e236a1f5944cfb0\n+cb2ed300a89ebf9f0654da869ced665ed8b2abe7\n+0a6d48d9ed60b0b02177059ab116f8f46d2cbed3\n+b42291334651fff46dbfe5947a726f65cb9d7dfe\n+e5364991daecb73aca3bb5ac37f2619d7a89211b\n+4a2b170c075ce703cbdc82519a48016a9ee3f99c\n+924de0bd75a7f75df65d7d15f9d1587a2e794abf\n+1253f8692fc3a11be9430685cd405236a68df6c3\n+2b799ae9e1e0a540f9a5971ddf27d83254668279\n+c9bdf9a75f9fde8cd011e4aa94be4ed4347078a3\n+3d69ecb4edeb80003a1a41442e320898a30dbd9c\n+f08222e882b18c1f279308636e03beceece2dbf1\n+23e03f8d26d7bd03273a5dcbdcfe3905dfb49ffb\n+03dd707dc027fbf6f24120213f8eb66571600374\n+d0754799698de2c032abcb8198ee5d5401063213\n+072116fceb2294b97d1c40f79305f2e3ff71812b\n+e66cc1d58e16bf1650dd6479fed64ecaca8c6098\n+f137753a2dcd8229f89d1d1ac28039364e5850b4\n+61d191fbf953700ba8aeadc9c8cf4c195efbd10c\n+76f3c02fb01a6df98fbd8c16ac21d159d4649d37\n+6013c73b3312e11b447ed387426749014716f820\n+6faffb8a83db3f209a303a4464dbdd597faad5a4\n+cc9e8aca5f950c78dcfeff63c441ba993c1fe12f\n+8ca69a2a88a77eb06149fa049ab1a7e6de38b321\n+2f71490d21796594ca6f55e375558944de9db5a0\n+08cc5fd666456cb476467473ed1880c90c92dedb\n+e31a43c725ebe641d7c219c3886eee18eebf0bb8\n+52b5a8785de760a204b2b0aab19dfaf79c2c3ff0\n+483e8e4f4875a1a621ec9e9df2880d3037d95ed7\n+1e5799c52535a3fc20e885916f1e7ed33ecc7f46\n+a82e5d8220bbc8b5d786bed99b0876f530b9b7cc\n+7fe6c5c993706e8395cdaf7977bee793c06f48f3\n+2a0836f6d5e7c1d7e97bedb0e0ea33dcaf981f77\n+ddc308068d69c6c9aa629ee3c4ce75e1d1cf08b5\n+ec139a5621a9c9f03e1988391a3c7c6c5d849776\n+c01a6c48b982d625fd9f4f69005878781d3d56fa\n+95a983d56dbda457e3bf8766d59bac74c7aa5699\n+760741a00833876976389ed7a6b73f36ee5b4c13\n+6e5e5abba6f8bbbe61c22795df440dfafcfdc378\n+cf2cecb18779ce83de9adebf382dff1c19b12840\n+af9b7a9f2f73b1a2f9728106774dd13e8d1cdd8d\n+115735d547fdeade822f547eb3e8c8f9961a9b07\n+c2c69edf37b5c02aafa01d0407dadbf5ef8751b5\n+a072d1a83787e786d074a4b5871b0b961781f7c6\n+ed2cd59e258f756b2eaed7909a60956ade6ef7ee\n+ae5575ba41c8a782805afb1c08730343cfc22397\n+6ff2c8d29f6b5a5c2ce63f0a16f3bb0dbd049451\n+a80de15113166354cdf208e3d8b6e25f4511a591\n+06bd4f637f15e769f088d9051a5af94bbb0217a3\n+6700cc993cc07fb0f5b8b577ff8c4afcf0b18274\n+37f9a1f627c0995d89b62923e75cd092600894f9\n+8844ef15ded02d5ed86fb95aaf251235fcef2396\n+1b87e5b5b184a0a6c683eda23b36393822b57f03\n+e2bf830bb6c1bfa038c943dd6f5d92a406bd723f\n+423ca302a3ee87000530da3c105f269b8fabece7\n+4e14afe42fdd468d5de11df8cc13defdcb8e83f8\n+3e90fe6534206412ea22beaa445cf20d28fbe718\n+88b77c7da0a672c89e24df37ea6e9085b4e2a05c\n+0ad104190465d8d65c2344bbe10dcf3df025d86c\n+5c7df7022bcd360e6af00b9458b1a3fd54e1cc9a\n+59ad56851a342d2c62f6b38bf15002b23ab439e1"
      },
      {
        "sha": "7aab274b9a848fce47a53acf71b54dfb1bf3db0e",
        "filename": "contrib/verify-commits/allow-unclean-merge-commits",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verify-commits/allow-unclean-merge-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verify-commits/allow-unclean-merge-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-unclean-merge-commits?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,4 @@\n+6052d509105790a26b3ad5df43dd61e7f1b24a12\n+3798e5de334c3deb5f71302b782f6b8fbd5087f1\n+326ffed09bfcc209a2efd6a2ebc69edf6bd200b5\n+97d83739db0631be5d4ba86af3616014652c00ec"
      },
      {
        "sha": "7a10ba7d7d530b82490f0a04bcf03d943acdab3a",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -3,13 +3,14 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+export LC_ALL=C\n INPUT=$(cat /dev/stdin)\n VALID=false\n REVSIG=false\n IFS='\n '\n if [ \"$BITCOIN_VERIFY_COMMITS_ALLOW_SHA1\" = 1 ]; then\n-\tGPG_RES=\"$(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n+\tGPG_RES=\"$(printf '%s\\n' \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n else\n \t# Note how we've disabled SHA1 with the --weak-digest option, disabling\n \t# signatures - including selfsigs - that use SHA1. While you might think that\n@@ -24,15 +25,15 @@ else\n \t\tcase \"$LINE\" in\n \t\t\t\"gpg (GnuPG) 1.4.1\"*|\"gpg (GnuPG) 2.0.\"*)\n \t\t\t\techo \"Please upgrade to at least gpg 2.1.10 to check for weak signatures\" > /dev/stderr\n-\t\t\t\tGPG_RES=\"$(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n+\t\t\t\tGPG_RES=\"$(printf '%s\\n' \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n \t\t\t\t;;\n \t\t\t# We assume if you're running 2.1+, you're probably running 2.1.10+\n \t\t\t# gpg will fail otherwise\n \t\t\t# We assume if you're running 1.X, it is either 1.4.1X or 1.4.20+\n \t\t\t# gpg will fail otherwise\n \t\tesac\n \tdone\n-\t[ \"$GPG_RES\" = \"\" ] && GPG_RES=\"$(echo \"$INPUT\" | gpg --trust-model always --weak-digest sha1 \"$@\" 2>/dev/null)\"\n+\t[ \"$GPG_RES\" = \"\" ] && GPG_RES=\"$(printf '%s\\n' \"$INPUT\" | gpg --trust-model always --weak-digest sha1 \"$@\" 2>/dev/null)\"\n fi\n for LINE in $(echo \"$GPG_RES\"); do\n \tcase \"$LINE\" in\n@@ -46,14 +47,19 @@ for LINE in $(echo \"$GPG_RES\"); do\n \t\tREVSIG=true\n \t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${LINE#* * *}\"\n \t\t;;\n+\t\"[GNUPG:] EXPKEYSIG \"*)\n+\t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n+\t\tREVSIG=true\n+\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${LINE#* * *}\"\n+\t\t;;\n \tesac\n done\n if ! $VALID; then\n \texit 1\n fi\n if $VALID && $REVSIG; then\n-\techo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null | grep \"\\[GNUPG:\\] \\(NEWSIG\\|SIG_ID\\|VALIDSIG\\)\"\n+\tprintf '%s\\n' \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null | grep \"^\\[GNUPG:\\] \\(NEWSIG\\|SIG_ID\\|VALIDSIG\\)\"\n \techo \"$GOODREVSIG\"\n else\n-\techo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null\n+\tprintf '%s\\n' \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null\n fi"
      },
      {
        "sha": "4db4a908531ce39d27a14b884513fc65717f533a",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,8 +1,9 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+export LC_ALL=C\n if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)bitcoin/bitcoin(.git)?$ ]]; then\n     exit 0\n fi\n@@ -12,9 +13,9 @@ while read LINE; do\n     if [ \"$4\" != \"refs/heads/master\" ]; then\n         continue\n     fi\n-    if ! ./contrib/verify-commits/verify-commits.sh $3 > /dev/null 2>&1; then\n+    if ! ./contrib/verify-commits/verify-commits.py $3 > /dev/null 2>&1; then\n         echo \"ERROR: A commit is not signed, can't push\"\n-        ./contrib/verify-commits/verify-commits.sh\n+        ./contrib/verify-commits/verify-commits.py\n         exit 1\n     fi\n done < /dev/stdin"
      },
      {
        "sha": "a9e4977715208f398183b28e80c9db36571daf91",
        "filename": "contrib/verify-commits/verify-commits.py",
        "status": "added",
        "additions": 155,
        "deletions": 0,
        "changes": 155,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verify-commits/verify-commits.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verify-commits/verify-commits.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -0,0 +1,155 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Verify commits against a trusted keys list.\"\"\"\n+import argparse\n+import hashlib\n+import os\n+import subprocess\n+import sys\n+import time\n+\n+GIT = os.getenv('GIT', 'git')\n+\n+def tree_sha512sum(commit='HEAD'):\n+    \"\"\"Calculate the Tree-sha512 for the commit.\n+\n+    This is copied from github-merge.py.\"\"\"\n+\n+    # request metadata for entire tree, recursively\n+    files = []\n+    blob_by_name = {}\n+    for line in subprocess.check_output([GIT, 'ls-tree', '--full-tree', '-r', commit]).splitlines():\n+        name_sep = line.index(b'\\t')\n+        metadata = line[:name_sep].split()  # perms, 'blob', blobid\n+        assert metadata[1] == b'blob'\n+        name = line[name_sep + 1:]\n+        files.append(name)\n+        blob_by_name[name] = metadata[2]\n+\n+    files.sort()\n+    # open connection to git-cat-file in batch mode to request data for all blobs\n+    # this is much faster than launching it per file\n+    p = subprocess.Popen([GIT, 'cat-file', '--batch'], stdout=subprocess.PIPE, stdin=subprocess.PIPE)\n+    overall = hashlib.sha512()\n+    for f in files:\n+        blob = blob_by_name[f]\n+        # request blob\n+        p.stdin.write(blob + b'\\n')\n+        p.stdin.flush()\n+        # read header: blob, \"blob\", size\n+        reply = p.stdout.readline().split()\n+        assert reply[0] == blob and reply[1] == b'blob'\n+        size = int(reply[2])\n+        # hash the blob data\n+        intern = hashlib.sha512()\n+        ptr = 0\n+        while ptr < size:\n+            bs = min(65536, size - ptr)\n+            piece = p.stdout.read(bs)\n+            if len(piece) == bs:\n+                intern.update(piece)\n+            else:\n+                raise IOError('Premature EOF reading git cat-file output')\n+            ptr += bs\n+        dig = intern.hexdigest()\n+        assert p.stdout.read(1) == b'\\n'  # ignore LF that follows blob data\n+        # update overall hash with file hash\n+        overall.update(dig.encode(\"utf-8\"))\n+        overall.update(\"  \".encode(\"utf-8\"))\n+        overall.update(f)\n+        overall.update(\"\\n\".encode(\"utf-8\"))\n+    p.stdin.close()\n+    if p.wait():\n+        raise IOError('Non-zero return value executing git cat-file')\n+    return overall.hexdigest()\n+\n+def main():\n+    # Parse arguments\n+    parser = argparse.ArgumentParser(usage='%(prog)s [options] [commit id]')\n+    parser.add_argument('--disable-tree-check', action='store_false', dest='verify_tree', help='disable SHA-512 tree check')\n+    parser.add_argument('--clean-merge', type=float, dest='clean_merge', default=float('inf'), help='Only check clean merge after <NUMBER> days ago (default: %(default)s)', metavar='NUMBER')\n+    parser.add_argument('commit', nargs='?', default='HEAD', help='Check clean merge up to commit <commit>')\n+    args = parser.parse_args()\n+\n+    # get directory of this program and read data files\n+    dirname = os.path.dirname(os.path.abspath(__file__))\n+    print(\"Using verify-commits data from \" + dirname)\n+    verified_root = open(dirname + \"/trusted-git-root\", \"r\", encoding=\"utf8\").read().splitlines()[0]\n+    verified_sha512_root = open(dirname + \"/trusted-sha512-root-commit\", \"r\", encoding=\"utf8\").read().splitlines()[0]\n+    revsig_allowed = open(dirname + \"/allow-revsig-commits\", \"r\", encoding=\"utf-8\").read().splitlines()\n+    unclean_merge_allowed = open(dirname + \"/allow-unclean-merge-commits\", \"r\", encoding=\"utf-8\").read().splitlines()\n+    incorrect_sha512_allowed = open(dirname + \"/allow-incorrect-sha512-commits\", \"r\", encoding=\"utf-8\").read().splitlines()\n+\n+    # Set commit and branch and set variables\n+    current_commit = args.commit\n+    if ' ' in current_commit:\n+        print(\"Commit must not contain spaces\", file=sys.stderr)\n+        sys.exit(1)\n+    verify_tree = args.verify_tree\n+    no_sha1 = True\n+    prev_commit = \"\"\n+    initial_commit = current_commit\n+    branch = subprocess.check_output([GIT, 'show', '-s', '--format=%H', initial_commit], universal_newlines=True).splitlines()[0]\n+\n+    # Iterate through commits\n+    while True:\n+        if current_commit == verified_root:\n+            print('There is a valid path from \"{}\" to {} where all commits are signed!'.format(initial_commit, verified_root))\n+            sys.exit(0)\n+        if current_commit == verified_sha512_root:\n+            if verify_tree:\n+                print(\"All Tree-SHA512s matched up to {}\".format(verified_sha512_root), file=sys.stderr)\n+            verify_tree = False\n+            no_sha1 = False\n+\n+        os.environ['BITCOIN_VERIFY_COMMITS_ALLOW_SHA1'] = \"0\" if no_sha1 else \"1\"\n+        os.environ['BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG'] = \"1\" if current_commit in revsig_allowed else \"0\"\n+\n+        # Check that the commit (and parents) was signed with a trusted key\n+        if subprocess.call([GIT, '-c', 'gpg.program={}/gpg.sh'.format(dirname), 'verify-commit', current_commit], stdout=subprocess.DEVNULL):\n+            if prev_commit != \"\":\n+                print(\"No parent of {} was signed with a trusted key!\".format(prev_commit), file=sys.stderr)\n+                print(\"Parents are:\", file=sys.stderr)\n+                parents = subprocess.check_output([GIT, 'show', '-s', '--format=format:%P', prev_commit], universal_newlines=True).splitlines()[0].split(' ')\n+                for parent in parents:\n+                    subprocess.call([GIT, 'show', '-s', parent], stdout=sys.stderr)\n+            else:\n+                print(\"{} was not signed with a trusted key!\".format(current_commit), file=sys.stderr)\n+            sys.exit(1)\n+\n+        # Check the Tree-SHA512\n+        if (verify_tree or prev_commit == \"\") and current_commit not in incorrect_sha512_allowed:\n+            tree_hash = tree_sha512sum(current_commit)\n+            if (\"Tree-SHA512: {}\".format(tree_hash)) not in subprocess.check_output([GIT, 'show', '-s', '--format=format:%B', current_commit], universal_newlines=True).splitlines():\n+                print(\"Tree-SHA512 did not match for commit \" + current_commit, file=sys.stderr)\n+                sys.exit(1)\n+\n+        # Merge commits should only have two parents\n+        parents = subprocess.check_output([GIT, 'show', '-s', '--format=format:%P', current_commit], universal_newlines=True).splitlines()[0].split(' ')\n+        if len(parents) > 2:\n+            print(\"Commit {} is an octopus merge\".format(current_commit), file=sys.stderr)\n+            sys.exit(1)\n+\n+        # Check that the merge commit is clean\n+        commit_time = int(subprocess.check_output([GIT, 'show', '-s', '--format=format:%ct', current_commit], universal_newlines=True).splitlines()[0])\n+        check_merge = commit_time > time.time() - args.clean_merge * 24 * 60 * 60  # Only check commits in clean_merge days\n+        allow_unclean = current_commit in unclean_merge_allowed\n+        if len(parents) == 2 and check_merge and not allow_unclean:\n+            current_tree = subprocess.check_output([GIT, 'show', '--format=%T', current_commit], universal_newlines=True).splitlines()[0]\n+            subprocess.call([GIT, 'checkout', '--force', '--quiet', parents[0]])\n+            subprocess.call([GIT, 'merge', '--no-ff', '--quiet', parents[1]], stdout=subprocess.DEVNULL)\n+            recreated_tree = subprocess.check_output([GIT, 'show', '--format=format:%T', 'HEAD'], universal_newlines=True).splitlines()[0]\n+            if current_tree != recreated_tree:\n+                print(\"Merge commit {} is not clean\".format(current_commit), file=sys.stderr)\n+                subprocess.call([GIT, 'diff', current_commit])\n+                subprocess.call([GIT, 'checkout', '--force', '--quiet', branch])\n+                sys.exit(1)\n+            subprocess.call([GIT, 'checkout', '--force', '--quiet', branch])\n+\n+        prev_commit = current_commit\n+        current_commit = parents[0]\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "74b7f38375ac371571466e1b1af44522b41fbcf2",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 132,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=4314544d46e8e46c3c9da60f1d18297f52f58418",
        "patch": "@@ -1,132 +0,0 @@\n-#!/bin/sh\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-DIR=$(dirname \"$0\")\n-[ \"/${DIR#/}\" != \"$DIR\" ] && DIR=$(dirname \"$(pwd)/$0\")\n-\n-echo \"Using verify-commits data from ${DIR}\"\n-\n-VERIFIED_ROOT=$(cat \"${DIR}/trusted-git-root\")\n-VERIFIED_SHA512_ROOT=$(cat \"${DIR}/trusted-sha512-root-commit\")\n-REVSIG_ALLOWED=$(cat \"${DIR}/allow-revsig-commits\")\n-\n-HAVE_FAILED=false\n-\n-HAVE_GNU_SHA512=1\n-[ ! -x \"$(which sha512sum)\" ] && HAVE_GNU_SHA512=0\n-\n-if [ x\"$1\" = \"x\" ]; then\n-\tCURRENT_COMMIT=\"HEAD\"\n-else\n-\tCURRENT_COMMIT=\"$1\"\n-fi\n-\n-if [ \"${CURRENT_COMMIT#* }\" != \"$CURRENT_COMMIT\" ]; then\n-\techo \"Commit must not contain spaces?\" > /dev/stderr\n-\texit 1\n-fi\n-\n-VERIFY_TREE=0\n-if [ x\"$2\" = \"x--tree-checks\" ]; then\n-\tVERIFY_TREE=1\n-fi\n-\n-NO_SHA1=1\n-PREV_COMMIT=\"\"\n-\n-while true; do\n-\tif [ \"$CURRENT_COMMIT\" = $VERIFIED_ROOT ]; then\n-\t\techo \"There is a valid path from \"$CURRENT_COMMIT\" to $VERIFIED_ROOT where all commits are signed!\"\n-\t\texit 0;\n-\tfi\n-\n-\tif [ \"$CURRENT_COMMIT\" = $VERIFIED_SHA512_ROOT ]; then\n-\t\tif [ \"$VERIFY_TREE\" = \"1\" ]; then\n-\t\t\techo \"All Tree-SHA512s matched up to $VERIFIED_SHA512_ROOT\" > /dev/stderr\n-\t\tfi\n-\t\tVERIFY_TREE=0\n-\t\tNO_SHA1=0\n-\tfi\n-\n-\tif [ \"$NO_SHA1\" = \"1\" ]; then\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_SHA1=0\n-\telse\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_SHA1=1\n-\tfi\n-\n-\tif [ \"${REVSIG_ALLOWED#*$CURRENT_COMMIT}\" != \"$REVSIG_ALLOWED\" ]; then\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n-\telse\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n-\tfi\n-\n-\tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit \"$CURRENT_COMMIT\" > /dev/null; then\n-\t\tif [ \"$PREV_COMMIT\" != \"\" ]; then\n-\t\t\techo \"No parent of $PREV_COMMIT was signed with a trusted key!\" > /dev/stderr\n-\t\t\techo \"Parents are:\" > /dev/stderr\n-\t\t\tPARENTS=$(git show -s --format=format:%P $PREV_COMMIT)\n-\t\t\tfor PARENT in $PARENTS; do\n-\t\t\t\tgit show -s $PARENT > /dev/stderr\n-\t\t\tdone\n-\t\telse\n-\t\t\techo \"$CURRENT_COMMIT was not signed with a trusted key!\" > /dev/stderr\n-\t\tfi\n-\t\texit 1\n-\tfi\n-\n-\t# We always verify the top of the tree\n-\tif [ \"$VERIFY_TREE\" = 1 -o \"$PREV_COMMIT\" = \"\" ]; then\n-\t\tIFS_CACHE=\"$IFS\"\n-\t\tIFS='\n-'\n-\t\tfor LINE in $(git ls-tree --full-tree -r \"$CURRENT_COMMIT\"); do\n-\t\t\tcase \"$LINE\" in\n-\t\t\t\t\"12\"*)\n-\t\t\t\t\techo \"Repo contains symlinks\" > /dev/stderr\n-\t\t\t\t\tIFS=\"$IFS_CACHE\"\n-\t\t\t\t\texit 1\n-\t\t\t\t\t;;\n-\t\t\tesac\n-\t\tdone\n-\t\tIFS=\"$IFS_CACHE\"\n-\n-\t\tFILE_HASHES=\"\"\n-\t\tfor FILE in $(git ls-tree --full-tree -r --name-only \"$CURRENT_COMMIT\" | LC_ALL=C sort); do\n-\t\t\tif [ \"$HAVE_GNU_SHA512\" = 1 ]; then\n-\t\t\t\tHASH=$(git cat-file blob \"$CURRENT_COMMIT\":\"$FILE\" | sha512sum | { read FIRST OTHER; echo $FIRST; } )\n-\t\t\telse\n-\t\t\t\tHASH=$(git cat-file blob \"$CURRENT_COMMIT\":\"$FILE\" | shasum -a 512 | { read FIRST OTHER; echo $FIRST; } )\n-\t\t\tfi\n-\t\t\t[ \"$FILE_HASHES\" != \"\" ] && FILE_HASHES=\"$FILE_HASHES\"'\n-'\n-\t\t\tFILE_HASHES=\"$FILE_HASHES$HASH  $FILE\"\n-\t\tdone\n-\n-\t\tif [ \"$HAVE_GNU_SHA512\" = 1 ]; then\n-\t\t\tTREE_HASH=\"$(echo \"$FILE_HASHES\" | sha512sum)\"\n-\t\telse\n-\t\t\tTREE_HASH=\"$(echo \"$FILE_HASHES\" | shasum -a 512)\"\n-\t\tfi\n-\t\tHASH_MATCHES=0\n-\t\tMSG=\"$(git show -s --format=format:%B \"$CURRENT_COMMIT\" | tail -n1)\"\n-\n-\t\tcase \"$MSG  -\" in\n-\t\t\t\"Tree-SHA512: $TREE_HASH\")\n-\t\t\t\tHASH_MATCHES=1;;\n-\t\tesac\n-\n-\t\tif [ \"$HASH_MATCHES\" = \"0\" ]; then\n-\t\t\techo \"Tree-SHA512 did not match for commit $CURRENT_COMMIT\" > /dev/stderr\n-\t\t\texit 1\n-\t\tfi\n-\tfi\n-\n-\tPARENTS=$(git show -s --format=format:%P \"$CURRENT_COMMIT\")\n-\tfor PARENT in $PARENTS; do\n-\t\tPREV_COMMIT=\"$CURRENT_COMMIT\"\n-\t\tCURRENT_COMMIT=\"$PARENT\"\n-\t\tbreak\n-\tdone\n-done"
      },
      {
        "sha": "3ffe0a2f289556d40fab4f5ed82ddefaab645ea9",
        "filename": "contrib/verifybinaries/README.md",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verifybinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verifybinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/README.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -26,6 +26,14 @@ The script returns 0 if everything passes the checks. It returns 1 if either the\n ./verify.sh bitcoin-core-0.13.0-rc3\n ```\n \n+If you only want to download the binaries of certain platform, add the corresponding suffix, e.g.:\n+\n+```sh\n+./verify.sh bitcoin-core-0.11.2-osx\n+./verify.sh 0.12.0-linux\n+./verify.sh bitcoin-core-0.13.0-rc3-win64\n+```\n+\n If you do not want to keep the downloaded binaries, specify anything as the second parameter.\n \n ```sh"
      },
      {
        "sha": "fc7492ad3b79657180533ce12ebbeb27561befb0",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "modified",
        "additions": 67,
        "deletions": 16,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,15 +1,17 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n # Copyright (c) 2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-###   This script attempts to download the signature file SHA256SUMS.asc from bitcoin.org\n+###   This script attempts to download the signature file SHA256SUMS.asc from\n+###   bitcoincore.org and bitcoin.org and compares them.\n ###   It first checks if the signature passes, and then downloads the files specified in\n ###   the file, and checks if the hashes of these files match those that are specified\n ###   in the signature file.\n ###   The script returns 0 if everything passes the checks. It returns 1 if either the\n ###   signature check or the hash check doesn't pass. If an error occurs the return value is 2\n \n+export LC_ALL=C\n function clean_up {\n    for file in $*\n    do\n@@ -22,15 +24,17 @@ TMPFILE=\"hashes.tmp\"\n \n SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n RCSUBDIR=\"test\"\n-BASEDIR=\"https://bitcoin.org/bin/\"\n+HOST1=\"https://bitcoincore.org\"\n+HOST2=\"https://bitcoin.org\"\n+BASEDIR=\"/bin/\"\n VERSIONPREFIX=\"bitcoin-core-\"\n RCVERSIONSTRING=\"rc\"\n \n if [ ! -d \"$WORKINGDIR\" ]; then\n    mkdir \"$WORKINGDIR\"\n fi\n \n-cd \"$WORKINGDIR\"\n+cd \"$WORKINGDIR\" || exit 1\n \n #test if a version number has been passed as an argument\n if [ -n \"$1\" ]; then\n@@ -42,33 +46,70 @@ if [ -n \"$1\" ]; then\n       VERSION=\"$VERSIONPREFIX$1\"\n    fi\n \n-   #now let's see if the version string contains \"rc\", and strip it off if it does\n-   #  and simultaneously add RCSUBDIR to BASEDIR, where we will look for SIGNATUREFILENAME\n-   if [[ $VERSION == *\"$RCVERSIONSTRING\"* ]]; then\n-      BASEDIR=\"$BASEDIR${VERSION/%-$RCVERSIONSTRING*}/\"\n-      BASEDIR=\"$BASEDIR$RCSUBDIR.$RCVERSIONSTRING${VERSION: -1}/\"\n+   STRIPPEDLAST=\"${VERSION%-*}\"\n+\n+   #now let's see if the version string contains \"rc\" or a platform name (e.g. \"osx\")\n+   if [[ \"$STRIPPEDLAST-\" == \"$VERSIONPREFIX\" ]]; then\n+      BASEDIR=\"$BASEDIR$VERSION/\"\n    else\n+      # let's examine the last part to see if it's rc and/or platform name\n+      STRIPPEDNEXTTOLAST=\"${STRIPPEDLAST%-*}\"\n+      if [[ \"$STRIPPEDNEXTTOLAST-\" == \"$VERSIONPREFIX\" ]]; then\n+\n+         LASTSUFFIX=\"${VERSION##*-}\"\n+         VERSION=\"$STRIPPEDLAST\"\n+\n+         if [[ $LASTSUFFIX == *\"$RCVERSIONSTRING\"* ]]; then\n+            RCVERSION=\"$LASTSUFFIX\"\n+         else\n+            PLATFORM=\"$LASTSUFFIX\"\n+         fi\n+\n+      else\n+         RCVERSION=\"${STRIPPEDLAST##*-}\"\n+         PLATFORM=\"${VERSION##*-}\"\n+\n+         VERSION=\"$STRIPPEDNEXTTOLAST\"\n+      fi\n+\n       BASEDIR=\"$BASEDIR$VERSION/\"\n+      if [[ $RCVERSION == *\"$RCVERSIONSTRING\"* ]]; then\n+         BASEDIR=\"$BASEDIR$RCSUBDIR.$RCVERSION/\"\n+      fi\n    fi\n-\n-   SIGNATUREFILE=\"$BASEDIR$SIGNATUREFILENAME\"\n else\n    echo \"Error: need to specify a version on the command line\"\n    exit 2\n fi\n \n #first we fetch the file containing the signature\n-WGETOUT=$(wget -N \"$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n+WGETOUT=$(wget -N \"$HOST1$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n \n #and then see if wget completed successfully\n if [ $? -ne 0 ]; then\n    echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n-   echo \"[$VERSIONPREFIX]<version>-[$RCVERSIONSTRING[0-9]] (example: \"$VERSIONPREFIX\"0.10.4-\"$RCVERSIONSTRING\"1)\"\n+   echo \"[$VERSIONPREFIX]<version>-[$RCVERSIONSTRING[0-9]] (example: ${VERSIONPREFIX}0.10.4-${RCVERSIONSTRING}1)\"\n    echo \"wget output:\"\n    echo \"$WGETOUT\"|sed 's/^/\\t/g'\n    exit 2\n fi\n \n+WGETOUT=$(wget -N -O \"$SIGNATUREFILENAME.2\" \"$HOST2$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n+if [ $? -ne 0 ]; then\n+   echo \"bitcoin.org failed to provide signature file, but bitcoincore.org did?\"\n+   echo \"wget output:\"\n+   echo \"$WGETOUT\"|sed 's/^/\\t/g'\n+   clean_up $SIGNATUREFILENAME\n+   exit 3\n+fi\n+\n+SIGFILEDIFFS=\"$(diff $SIGNATUREFILENAME $SIGNATUREFILENAME.2)\"\n+if [ \"$SIGFILEDIFFS\" != \"\" ]; then\n+   echo \"bitcoin.org and bitcoincore.org signature files were not equal?\"\n+   clean_up $SIGNATUREFILENAME $SIGNATUREFILENAME.2\n+   exit 4\n+fi\n+\n #then we check it\n GPGOUT=$(gpg --yes --decrypt --output \"$TMPFILE\" \"$SIGNATUREFILENAME\" 2>&1)\n \n@@ -88,17 +129,27 @@ if [ $RET -ne 0 ]; then\n \n    echo \"gpg output:\"\n    echo \"$GPGOUT\"|sed 's/^/\\t/g'\n-   clean_up $SIGNATUREFILENAME $TMPFILE\n+   clean_up $SIGNATUREFILENAME $SIGNATUREFILENAME.2 $TMPFILE\n    exit \"$RET\"\n fi\n \n+if [ -n \"$PLATFORM\" ]; then\n+   grep $PLATFORM $TMPFILE > \"$TMPFILE-plat\"\n+   TMPFILESIZE=$(stat -c%s \"$TMPFILE-plat\")\n+   if [ $TMPFILESIZE -eq 0 ]; then\n+      echo \"error: no files matched the platform specified\" && exit 3\n+   fi\n+   mv \"$TMPFILE-plat\" $TMPFILE\n+fi\n+\n #here we extract the filenames from the signature file\n FILES=$(awk '{print $2}' \"$TMPFILE\")\n \n #and download these one by one\n for file in $FILES\n do\n-   wget --quiet -N \"$BASEDIR$file\"\n+   echo \"Downloading $file\"\n+   wget --quiet -N \"$HOST1$BASEDIR$file\"\n done\n \n #check hashes\n@@ -116,7 +167,7 @@ fi\n \n if [ -n \"$2\" ]; then\n    echo \"Clean up the binaries\"\n-   clean_up $FILES $SIGNATUREFILENAME $TMPFILE\n+   clean_up $FILES $SIGNATUREFILENAME $SIGNATUREFILENAME.2 $TMPFILE\n else\n    echo \"Keep the binaries in $WORKINGDIR\"\n    clean_up $TMPFILE"
      },
      {
        "sha": "15f8108cf011f6f5dc59d7c6f4e4acf87d89b3ac",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -3,6 +3,7 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+export LC_ALL=C\n if [ -z \"$OSSLSIGNCODE\" ]; then\n   OSSLSIGNCODE=osslsigncode\n fi"
      },
      {
        "sha": "20763e935d1030278549c2f8f4ddad6ae2645ebb",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,8 +8,8 @@\n \n     Bitcoin should be started with the command line arguments:\n         bitcoind -testnet -daemon \\\n-                -zmqpubhashblock=tcp://127.0.0.1:28332 \\\n                 -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n+                -zmqpubrawblock=tcp://127.0.0.1:28332 \\\n                 -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n                 -zmqpubhashblock=tcp://127.0.0.1:28332\n \n@@ -30,15 +30,15 @@\n import struct\n import sys\n \n-if not (sys.version_info.major >= 3 and sys.version_info.minor >= 5):\n+if (sys.version_info.major, sys.version_info.minor) < (3, 5):\n     print(\"This example only works with Python 3.5 and greater\")\n-    exit(1)\n+    sys.exit(1)\n \n port = 28332\n \n class ZMQHandler():\n     def __init__(self):\n-        self.loop = zmq.asyncio.install()\n+        self.loop = asyncio.get_event_loop()\n         self.zmqContext = zmq.asyncio.Context()\n \n         self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)"
      },
      {
        "sha": "7e608c1a50f02e6598bc82b9e0e3395dfac68af9",
        "filename": "contrib/zmq/zmq_sub3.4.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/zmq/zmq_sub3.4.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/contrib/zmq/zmq_sub3.4.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub3.4.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,8 +8,8 @@\n \n     Bitcoin should be started with the command line arguments:\n         bitcoind -testnet -daemon \\\n-                -zmqpubhashblock=tcp://127.0.0.1:28332 \\\n                 -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n+                -zmqpubrawblock=tcp://127.0.0.1:28332 \\\n                 -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n                 -zmqpubhashblock=tcp://127.0.0.1:28332\n \n@@ -34,15 +34,15 @@\n import struct\n import sys\n \n-if not (sys.version_info.major >= 3 and sys.version_info.minor >= 4):\n+if (sys.version_info.major, sys.version_info.minor) < (3, 4):\n     print(\"This example only works with Python 3.4 and greater\")\n-    exit(1)\n+    sys.exit(1)\n \n port = 28332\n \n class ZMQHandler():\n     def __init__(self):\n-        self.loop = zmq.asyncio.install()\n+        self.loop = asyncio.get_event_loop()\n         self.zmqContext = zmq.asyncio.Context()\n \n         self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)"
      },
      {
        "sha": "72734102c51fc5b410cb517216b66718fece0eb5",
        "filename": "depends/.gitignore",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/.gitignore?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -8,3 +8,5 @@ i686*\n mips*\n arm*\n aarch64*\n+riscv32*\n+riscv64*"
      },
      {
        "sha": "3686aaf1f877e1916256eed0ca7032307bc792f9",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 13,
        "deletions": 6,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,6 +1,7 @@\n .NOTPARALLEL :\n \n SOURCES_PATH ?= $(BASEDIR)/sources\n+WORK_PATH = $(BASEDIR)/work\n BASE_CACHE ?= $(BASEDIR)/built\n SDK_PATH ?= $(BASEDIR)/SDKs\n NO_QT ?=\n@@ -21,7 +22,6 @@ BUILD_ID_SALT ?= salt\n host:=$(BUILD)\n ifneq ($(HOST),)\n host:=$(HOST)\n-host_toolchain:=$(HOST)-\n endif\n \n ifneq ($(DEBUG),)\n@@ -30,9 +30,9 @@ else\n release_type=release\n endif\n \n-base_build_dir=$(BASEDIR)/work/build\n-base_staging_dir=$(BASEDIR)/work/staging\n-base_download_dir=$(BASEDIR)/work/download\n+base_build_dir=$(WORK_PATH)/build\n+base_staging_dir=$(WORK_PATH)/staging\n+base_download_dir=$(WORK_PATH)/download\n canonical_host:=$(shell ./config.sub $(HOST))\n build:=$(shell ./config.sub $(BUILD))\n \n@@ -134,6 +134,7 @@ $(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_\n             -e 's|@CXXFLAGS@|$(strip $(host_CXXFLAGS) $(host_$(release_type)_CXXFLAGS))|' \\\n             -e 's|@CPPFLAGS@|$(strip $(host_CPPFLAGS) $(host_$(release_type)_CPPFLAGS))|' \\\n             -e 's|@LDFLAGS@|$(strip $(host_LDFLAGS) $(host_$(release_type)_LDFLAGS))|' \\\n+            -e 's|@allow_host_packages@|$(ALLOW_HOST_PACKAGES)|' \\\n             -e 's|@no_qt@|$(NO_QT)|' \\\n             -e 's|@no_wallet@|$(NO_WALLET)|' \\\n             -e 's|@no_upnp@|$(NO_UPNP)|' \\\n@@ -165,17 +166,23 @@ $(host_prefix)/share/config.site: check-packages\n \n check-packages: check-sources\n \n+clean-all: clean\n+\t@rm -rf $(SOURCES_PATH) x86_64* i686* mips* arm* aarch64* riscv32* riscv64*\n+\n+clean:\n+\t@rm -rf $(WORK_PATH) $(BASE_CACHE) $(BUILD)\n+\n install: check-packages $(host_prefix)/share/config.site\n \n \n download-one: check-sources $(all_sources)\n \n download-osx:\n-\t@$(MAKE) -s HOST=x86_64-apple-darwin11 download-one\n+\t@$(MAKE) -s HOST=x86_64-apple-darwin14 download-one\n download-linux:\n \t@$(MAKE) -s HOST=x86_64-unknown-linux-gnu download-one\n download-win:\n \t@$(MAKE) -s HOST=x86_64-w64-mingw32 download-one\n download: download-osx download-linux download-win\n \n-.PHONY: install cached download-one download-osx download-linux download-win download check-packages check-sources\n+.PHONY: install cached clean clean-all download-one download-osx download-linux download-win download check-packages check-sources"
      },
      {
        "sha": "fd343f701017c00e015de2fded2c3deccee84c6c",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 27,
        "deletions": 3,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -22,18 +22,42 @@ Common `host-platform-triplets` for cross compilation are:\n \n - `i686-w64-mingw32` for Win32\n - `x86_64-w64-mingw32` for Win64\n-- `x86_64-apple-darwin11` for MacOSX\n+- `x86_64-apple-darwin14` for macOS\n - `arm-linux-gnueabihf` for Linux ARM 32 bit\n - `aarch64-linux-gnu` for Linux ARM 64 bit\n+- `riscv32-linux-gnu` for Linux RISC-V 32 bit\n+- `riscv64-linux-gnu` for Linux RISC-V 64 bit\n \n No other options are needed, the paths are automatically configured.\n \n+Install the required dependencies: Ubuntu & Debian\n+--------------------------------------------------\n+\n+For macOS cross compilation:\n+\n+    sudo apt-get install curl librsvg2-bin libtiff-tools bsdmainutils cmake imagemagick libcap-dev libz-dev libbz2-dev python-setuptools\n+\n+For Win32/Win64 cross compilation:\n+\n+- see [build-windows.md](../doc/build-windows.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)\n+\n+For linux (including i386, ARM) cross compilation:\n+\n+    sudo apt-get install curl g++-aarch64-linux-gnu g++-4.8-aarch64-linux-gnu gcc-4.8-aarch64-linux-gnu binutils-aarch64-linux-gnu g++-arm-linux-gnueabihf g++-4.8-arm-linux-gnueabihf gcc-4.8-arm-linux-gnueabihf binutils-arm-linux-gnueabihf g++-4.8-multilib gcc-4.8-multilib binutils-gold bsdmainutils\n+\n+For linux RISC-V 64-bit cross compilation (there are no packages for 32-bit):\n+\n+    sudo apt-get install curl g++-riscv64-linux-gnu binutils-riscv64-linux-gnu\n+\n+RISC-V known issue: gcc-7.3.0 and gcc-7.3.1 result in a broken `test_bitcoin` executable (see https://github.com/bitcoin/bitcoin/pull/13543),\n+this is apparently fixed in gcc-8.1.0.\n+\n Dependency Options:\n The following can be set when running make: make FOO=bar\n \n     SOURCES_PATH: downloaded sources will be placed here\n     BASE_CACHE: built packages will be placed here\n-    SDK_PATH: Path where sdk's can be found (used by OSX)\n+    SDK_PATH: Path where sdk's can be found (used by macOS)\n     FALLBACK_DOWNLOAD_PATH: If a source file can't be fetched, try here before giving up\n     NO_QT: Don't download/build/cache qt and its dependencies\n     NO_WALLET: Don't download/build/cache libs needed to enable the wallet\n@@ -48,7 +72,7 @@ options will be passed to bitcoin's configure. In this case, `--disable-wallet`.\n Additional targets:\n \n     download: run 'make download' to fetch all sources without building them\n-    download-osx: run 'make download-osx' to fetch all sources needed for osx builds\n+    download-osx: run 'make download-osx' to fetch all sources needed for macOS builds\n     download-win: run 'make download-win' to fetch all sources needed for win builds\n     download-linux: run 'make download-linux' to fetch all sources needed for linux builds\n "
      },
      {
        "sha": "2b79f6d837b9f5aa3b9e9be48797817ab7ff83a8",
        "filename": "depends/config.guess",
        "status": "modified",
        "additions": 297,
        "deletions": 287,
        "changes": 584,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Attempt to guess a canonical system name.\n-#   Copyright 1992-2017 Free Software Foundation, Inc.\n+#   Copyright 1992-2018 Free Software Foundation, Inc.\n \n-timestamp='2017-03-05'\n+timestamp='2018-07-06'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -15,7 +15,7 @@ timestamp='2017-03-05'\n # General Public License for more details.\n #\n # You should have received a copy of the GNU General Public License\n-# along with this program; if not, see <http://www.gnu.org/licenses/>.\n+# along with this program; if not, see <https://www.gnu.org/licenses/>.\n #\n # As a special exception to the GNU General Public License, if you\n # distribute this file as part of a program that contains a\n@@ -27,7 +27,7 @@ timestamp='2017-03-05'\n # Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n #\n # You can get the latest version of this script from:\n-# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n+# https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n #\n # Please send patches to <config-patches@gnu.org>.\n \n@@ -39,7 +39,7 @@ Usage: $0 [OPTION]\n \n Output the configuration name of the system \\`$me' is run on.\n \n-Operation modes:\n+Options:\n   -h, --help         print this help, then exit\n   -t, --time-stamp   print date of last modification, then exit\n   -v, --version      print version number, then exit\n@@ -50,7 +50,7 @@ version=\"\\\n GNU config.guess ($timestamp)\n \n Originally written by Per Bothner.\n-Copyright 1992-2017 Free Software Foundation, Inc.\n+Copyright 1992-2018 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -101,15 +101,15 @@ trap \"exitcode=\\$?; (rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null) && e\n trap \"rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null; exit 1\" 1 2 13 15 ;\n : ${TMPDIR=/tmp} ;\n  { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n- { test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||\n- { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n+ { test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp 2>/dev/null) ; } ||\n+ { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp 2>/dev/null) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n  { echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; } ;\n dummy=$tmp/dummy ;\n tmpfiles=\"$dummy.c $dummy.o $dummy.rel $dummy\" ;\n-case $CC_FOR_BUILD,$HOST_CC,$CC in\n- ,,)    echo \"int x;\" > $dummy.c ;\n+case ${CC_FOR_BUILD-},${HOST_CC-},${CC-} in\n+ ,,)    echo \"int x;\" > \"$dummy.c\" ;\n \tfor c in cc gcc c89 c99 ; do\n-\t  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then\n+\t  if ($c -c -o \"$dummy.o\" \"$dummy.c\") >/dev/null 2>&1 ; then\n \t     CC_FOR_BUILD=\"$c\"; break ;\n \t  fi ;\n \tdone ;\n@@ -132,14 +132,14 @@ UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\n UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown\n UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n \n-case \"${UNAME_SYSTEM}\" in\n+case \"$UNAME_SYSTEM\" in\n Linux|GNU|GNU/*)\n \t# If the system lacks a compiler, then just pick glibc.\n \t# We could probably try harder.\n \tLIBC=gnu\n \n-\teval $set_cc_for_build\n-\tcat <<-EOF > $dummy.c\n+\teval \"$set_cc_for_build\"\n+\tcat <<-EOF > \"$dummy.c\"\n \t#include <features.h>\n \t#if defined(__UCLIBC__)\n \tLIBC=uclibc\n@@ -149,13 +149,20 @@ Linux|GNU|GNU/*)\n \tLIBC=gnu\n \t#endif\n \tEOF\n-\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\n+\teval \"`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\"\n+\n+\t# If ldd exists, use it to detect musl libc.\n+\tif command -v ldd >/dev/null && \\\n+\t\tldd --version 2>&1 | grep -q ^musl\n+\tthen\n+\t    LIBC=musl\n+\tfi\n \t;;\n esac\n \n # Note: order is significant - the case branches are not exclusive.\n \n-case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n+case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n     *:NetBSD:*:*)\n \t# NetBSD (nbsd) targets should (where applicable) match one or\n \t# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,\n@@ -169,30 +176,30 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t# portion of the name.  We always set it to \"unknown\".\n \tsysctl=\"sysctl -n hw.machine_arch\"\n \tUNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \\\n-\t    /sbin/$sysctl 2>/dev/null || \\\n-\t    /usr/sbin/$sysctl 2>/dev/null || \\\n+\t    \"/sbin/$sysctl\" 2>/dev/null || \\\n+\t    \"/usr/sbin/$sysctl\" 2>/dev/null || \\\n \t    echo unknown)`\n-\tcase \"${UNAME_MACHINE_ARCH}\" in\n+\tcase \"$UNAME_MACHINE_ARCH\" in\n \t    armeb) machine=armeb-unknown ;;\n \t    arm*) machine=arm-unknown ;;\n \t    sh3el) machine=shl-unknown ;;\n \t    sh3eb) machine=sh-unknown ;;\n \t    sh5el) machine=sh5le-unknown ;;\n \t    earmv*)\n-\t\tarch=`echo ${UNAME_MACHINE_ARCH} | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n-\t\tendian=`echo ${UNAME_MACHINE_ARCH} | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n-\t\tmachine=${arch}${endian}-unknown\n+\t\tarch=`echo \"$UNAME_MACHINE_ARCH\" | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n+\t\tendian=`echo \"$UNAME_MACHINE_ARCH\" | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n+\t\tmachine=\"${arch}${endian}\"-unknown\n \t\t;;\n-\t    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;\n+\t    *) machine=\"$UNAME_MACHINE_ARCH\"-unknown ;;\n \tesac\n \t# The Operating System including object format, if it has switched\n \t# to ELF recently (or will in the future) and ABI.\n-\tcase \"${UNAME_MACHINE_ARCH}\" in\n+\tcase \"$UNAME_MACHINE_ARCH\" in\n \t    earm*)\n \t\tos=netbsdelf\n \t\t;;\n \t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n-\t\teval $set_cc_for_build\n+\t\teval \"$set_cc_for_build\"\n \t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n \t\t\t| grep -q __ELF__\n \t\tthen\n@@ -208,57 +215,66 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t\t;;\n \tesac\n \t# Determine ABI tags.\n-\tcase \"${UNAME_MACHINE_ARCH}\" in\n+\tcase \"$UNAME_MACHINE_ARCH\" in\n \t    earm*)\n \t\texpr='s/^earmv[0-9]/-eabi/;s/eb$//'\n-\t\tabi=`echo ${UNAME_MACHINE_ARCH} | sed -e \"$expr\"`\n+\t\tabi=`echo \"$UNAME_MACHINE_ARCH\" | sed -e \"$expr\"`\n \t\t;;\n \tesac\n \t# The OS release\n \t# Debian GNU/NetBSD machines have a different userland, and\n \t# thus, need a distinct triplet. However, they do not need\n \t# kernel version information, so it can be replaced with a\n \t# suitable tag, in the style of linux-gnu.\n-\tcase \"${UNAME_VERSION}\" in\n+\tcase \"$UNAME_VERSION\" in\n \t    Debian*)\n \t\trelease='-gnu'\n \t\t;;\n \t    *)\n-\t\trelease=`echo ${UNAME_RELEASE} | sed -e 's/[-_].*//' | cut -d. -f1,2`\n+\t\trelease=`echo \"$UNAME_RELEASE\" | sed -e 's/[-_].*//' | cut -d. -f1,2`\n \t\t;;\n \tesac\n \t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n \t# contains redundant information, the shorter form:\n \t# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.\n-\techo \"${machine}-${os}${release}${abi}\"\n+\techo \"$machine-${os}${release}${abi-}\"\n \texit ;;\n     *:Bitrig:*:*)\n \tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n-\techo ${UNAME_MACHINE_ARCH}-unknown-bitrig${UNAME_RELEASE}\n+\techo \"$UNAME_MACHINE_ARCH\"-unknown-bitrig\"$UNAME_RELEASE\"\n \texit ;;\n     *:OpenBSD:*:*)\n \tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n-\techo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}\n+\techo \"$UNAME_MACHINE_ARCH\"-unknown-openbsd\"$UNAME_RELEASE\"\n \texit ;;\n     *:LibertyBSD:*:*)\n \tUNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\\.//'`\n-\techo ${UNAME_MACHINE_ARCH}-unknown-libertybsd${UNAME_RELEASE}\n+\techo \"$UNAME_MACHINE_ARCH\"-unknown-libertybsd\"$UNAME_RELEASE\"\n+\texit ;;\n+    *:MidnightBSD:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-midnightbsd\"$UNAME_RELEASE\"\n \texit ;;\n     *:ekkoBSD:*:*)\n-\techo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}\n+\techo \"$UNAME_MACHINE\"-unknown-ekkobsd\"$UNAME_RELEASE\"\n \texit ;;\n     *:SolidBSD:*:*)\n-\techo ${UNAME_MACHINE}-unknown-solidbsd${UNAME_RELEASE}\n+\techo \"$UNAME_MACHINE\"-unknown-solidbsd\"$UNAME_RELEASE\"\n \texit ;;\n     macppc:MirBSD:*:*)\n-\techo powerpc-unknown-mirbsd${UNAME_RELEASE}\n+\techo powerpc-unknown-mirbsd\"$UNAME_RELEASE\"\n \texit ;;\n     *:MirBSD:*:*)\n-\techo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}\n+\techo \"$UNAME_MACHINE\"-unknown-mirbsd\"$UNAME_RELEASE\"\n \texit ;;\n     *:Sortix:*:*)\n-\techo ${UNAME_MACHINE}-unknown-sortix\n+\techo \"$UNAME_MACHINE\"-unknown-sortix\n+\texit ;;\n+    *:Redox:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-redox\n \texit ;;\n+    mips:OSF1:*.*)\n+        echo mips-dec-osf1\n+        exit ;;\n     alpha:OSF1:*:*)\n \tcase $UNAME_RELEASE in\n \t*4.0)\n@@ -310,28 +326,19 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t# A Tn.n version is a released field test version.\n \t# A Xn.n version is an unreleased experimental baselevel.\n \t# 1.2 uses \"1.2\" for uname -r.\n-\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n+\techo \"$UNAME_MACHINE\"-dec-osf\"`echo \"$UNAME_RELEASE\" | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\"\n \t# Reset EXIT trap before exiting to avoid spurious non-zero exit code.\n \texitcode=$?\n \ttrap '' 0\n \texit $exitcode ;;\n-    Alpha\\ *:Windows_NT*:*)\n-\t# How do we know it's Interix rather than the generic POSIX subsystem?\n-\t# Should we change UNAME_MACHINE based on the output of uname instead\n-\t# of the specific Alpha model?\n-\techo alpha-pc-interix\n-\texit ;;\n-    21064:Windows_NT:50:3)\n-\techo alpha-dec-winnt3.5\n-\texit ;;\n     Amiga*:UNIX_System_V:4.0:*)\n \techo m68k-unknown-sysv4\n \texit ;;\n     *:[Aa]miga[Oo][Ss]:*:*)\n-\techo ${UNAME_MACHINE}-unknown-amigaos\n+\techo \"$UNAME_MACHINE\"-unknown-amigaos\n \texit ;;\n     *:[Mm]orph[Oo][Ss]:*:*)\n-\techo ${UNAME_MACHINE}-unknown-morphos\n+\techo \"$UNAME_MACHINE\"-unknown-morphos\n \texit ;;\n     *:OS/390:*:*)\n \techo i370-ibm-openedition\n@@ -343,7 +350,7 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \techo powerpc-ibm-os400\n \texit ;;\n     arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n-\techo arm-acorn-riscix${UNAME_RELEASE}\n+\techo arm-acorn-riscix\"$UNAME_RELEASE\"\n \texit ;;\n     arm*:riscos:*:*|arm*:RISCOS:*:*)\n \techo arm-unknown-riscos\n@@ -370,19 +377,19 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t    sparc) echo sparc-icl-nx7; exit ;;\n \tesac ;;\n     s390x:SunOS:*:*)\n-\techo ${UNAME_MACHINE}-ibm-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\techo \"$UNAME_MACHINE\"-ibm-solaris2\"`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\"\n \texit ;;\n     sun4H:SunOS:5.*:*)\n-\techo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\techo sparc-hal-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n \texit ;;\n     sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n-\techo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\techo sparc-sun-solaris2\"`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\"\n \texit ;;\n     i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n-\techo i386-pc-auroraux${UNAME_RELEASE}\n+\techo i386-pc-auroraux\"$UNAME_RELEASE\"\n \texit ;;\n     i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n-\teval $set_cc_for_build\n+\teval \"$set_cc_for_build\"\n \tSUN_ARCH=i386\n \t# If there is a compiler, see if it is configured for 64-bit objects.\n \t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n@@ -395,13 +402,13 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t\tSUN_ARCH=x86_64\n \t    fi\n \tfi\n-\techo ${SUN_ARCH}-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\techo \"$SUN_ARCH\"-pc-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n \texit ;;\n     sun4*:SunOS:6*:*)\n \t# According to config.sub, this is the proper way to canonicalize\n \t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n \t# it's likely to be more like Solaris than SunOS4.\n-\techo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\techo sparc-sun-solaris3\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n \texit ;;\n     sun4*:SunOS:*:*)\n \tcase \"`/usr/bin/arch -k`\" in\n@@ -410,25 +417,25 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t\t;;\n \tesac\n \t# Japanese Language versions have a version number like `4.1.3-JL'.\n-\techo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`\n+\techo sparc-sun-sunos\"`echo \"$UNAME_RELEASE\"|sed -e 's/-/_/'`\"\n \texit ;;\n     sun3*:SunOS:*:*)\n-\techo m68k-sun-sunos${UNAME_RELEASE}\n+\techo m68k-sun-sunos\"$UNAME_RELEASE\"\n \texit ;;\n     sun*:*:4.2BSD:*)\n \tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n-\ttest \"x${UNAME_RELEASE}\" = x && UNAME_RELEASE=3\n+\ttest \"x$UNAME_RELEASE\" = x && UNAME_RELEASE=3\n \tcase \"`/bin/arch`\" in\n \t    sun3)\n-\t\techo m68k-sun-sunos${UNAME_RELEASE}\n+\t\techo m68k-sun-sunos\"$UNAME_RELEASE\"\n \t\t;;\n \t    sun4)\n-\t\techo sparc-sun-sunos${UNAME_RELEASE}\n+\t\techo sparc-sun-sunos\"$UNAME_RELEASE\"\n \t\t;;\n \tesac\n \texit ;;\n     aushp:SunOS:*:*)\n-\techo sparc-auspex-sunos${UNAME_RELEASE}\n+\techo sparc-auspex-sunos\"$UNAME_RELEASE\"\n \texit ;;\n     # The situation for MiNT is a little confusing.  The machine name\n     # can be virtually everything (everything which is not\n@@ -439,44 +446,44 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n     # MiNT.  But MiNT is downward compatible to TOS, so this should\n     # be no problem.\n     atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)\n-\techo m68k-atari-mint${UNAME_RELEASE}\n+\techo m68k-atari-mint\"$UNAME_RELEASE\"\n \texit ;;\n     atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)\n-\techo m68k-atari-mint${UNAME_RELEASE}\n+\techo m68k-atari-mint\"$UNAME_RELEASE\"\n \texit ;;\n     *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)\n-\techo m68k-atari-mint${UNAME_RELEASE}\n+\techo m68k-atari-mint\"$UNAME_RELEASE\"\n \texit ;;\n     milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)\n-\techo m68k-milan-mint${UNAME_RELEASE}\n+\techo m68k-milan-mint\"$UNAME_RELEASE\"\n \texit ;;\n     hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)\n-\techo m68k-hades-mint${UNAME_RELEASE}\n+\techo m68k-hades-mint\"$UNAME_RELEASE\"\n \texit ;;\n     *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)\n-\techo m68k-unknown-mint${UNAME_RELEASE}\n+\techo m68k-unknown-mint\"$UNAME_RELEASE\"\n \texit ;;\n     m68k:machten:*:*)\n-\techo m68k-apple-machten${UNAME_RELEASE}\n+\techo m68k-apple-machten\"$UNAME_RELEASE\"\n \texit ;;\n     powerpc:machten:*:*)\n-\techo powerpc-apple-machten${UNAME_RELEASE}\n+\techo powerpc-apple-machten\"$UNAME_RELEASE\"\n \texit ;;\n     RISC*:Mach:*:*)\n \techo mips-dec-mach_bsd4.3\n \texit ;;\n     RISC*:ULTRIX:*:*)\n-\techo mips-dec-ultrix${UNAME_RELEASE}\n+\techo mips-dec-ultrix\"$UNAME_RELEASE\"\n \texit ;;\n     VAX*:ULTRIX*:*:*)\n-\techo vax-dec-ultrix${UNAME_RELEASE}\n+\techo vax-dec-ultrix\"$UNAME_RELEASE\"\n \texit ;;\n     2020:CLIX:*:* | 2430:CLIX:*:*)\n-\techo clipper-intergraph-clix${UNAME_RELEASE}\n+\techo clipper-intergraph-clix\"$UNAME_RELEASE\"\n \texit ;;\n     mips:*:*:UMIPS | mips:*:*:RISCos)\n-\teval $set_cc_for_build\n-\tsed 's/^\t//' << EOF >$dummy.c\n+\teval \"$set_cc_for_build\"\n+\tsed 's/^\t//' << EOF > \"$dummy.c\"\n #ifdef __cplusplus\n #include <stdio.h>  /* for printf() prototype */\n \tint main (int argc, char *argv[]) {\n@@ -485,23 +492,23 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n #endif\n \t#if defined (host_mips) && defined (MIPSEB)\n \t#if defined (SYSTYPE_SYSV)\n-\t  printf (\"mips-mips-riscos%ssysv\\n\", argv[1]); exit (0);\n+\t  printf (\"mips-mips-riscos%ssysv\\\\n\", argv[1]); exit (0);\n \t#endif\n \t#if defined (SYSTYPE_SVR4)\n-\t  printf (\"mips-mips-riscos%ssvr4\\n\", argv[1]); exit (0);\n+\t  printf (\"mips-mips-riscos%ssvr4\\\\n\", argv[1]); exit (0);\n \t#endif\n \t#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)\n-\t  printf (\"mips-mips-riscos%sbsd\\n\", argv[1]); exit (0);\n+\t  printf (\"mips-mips-riscos%sbsd\\\\n\", argv[1]); exit (0);\n \t#endif\n \t#endif\n \t  exit (-1);\n \t}\n EOF\n-\t$CC_FOR_BUILD -o $dummy $dummy.c &&\n-\t  dummyarg=`echo \"${UNAME_RELEASE}\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n-\t  SYSTEM_NAME=`$dummy $dummyarg` &&\n+\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" &&\n+\t  dummyarg=`echo \"$UNAME_RELEASE\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n+\t  SYSTEM_NAME=`\"$dummy\" \"$dummyarg\"` &&\n \t    { echo \"$SYSTEM_NAME\"; exit; }\n-\techo mips-mips-riscos${UNAME_RELEASE}\n+\techo mips-mips-riscos\"$UNAME_RELEASE\"\n \texit ;;\n     Motorola:PowerMAX_OS:*:*)\n \techo powerpc-motorola-powermax\n@@ -527,17 +534,17 @@ EOF\n     AViiON:dgux:*:*)\n \t# DG/UX returns AViiON for all architectures\n \tUNAME_PROCESSOR=`/usr/bin/uname -p`\n-\tif [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]\n+\tif [ \"$UNAME_PROCESSOR\" = mc88100 ] || [ \"$UNAME_PROCESSOR\" = mc88110 ]\n \tthen\n-\t    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \\\n-\t       [ ${TARGET_BINARY_INTERFACE}x = x ]\n+\t    if [ \"$TARGET_BINARY_INTERFACE\"x = m88kdguxelfx ] || \\\n+\t       [ \"$TARGET_BINARY_INTERFACE\"x = x ]\n \t    then\n-\t\techo m88k-dg-dgux${UNAME_RELEASE}\n+\t\techo m88k-dg-dgux\"$UNAME_RELEASE\"\n \t    else\n-\t\techo m88k-dg-dguxbcs${UNAME_RELEASE}\n+\t\techo m88k-dg-dguxbcs\"$UNAME_RELEASE\"\n \t    fi\n \telse\n-\t    echo i586-dg-dgux${UNAME_RELEASE}\n+\t    echo i586-dg-dgux\"$UNAME_RELEASE\"\n \tfi\n \texit ;;\n     M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n@@ -554,7 +561,7 @@ EOF\n \techo m68k-tektronix-bsd\n \texit ;;\n     *:IRIX*:*:*)\n-\techo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`\n+\techo mips-sgi-irix\"`echo \"$UNAME_RELEASE\"|sed -e 's/-/_/g'`\"\n \texit ;;\n     ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n \techo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id\n@@ -566,14 +573,14 @@ EOF\n \tif [ -x /usr/bin/oslevel ] ; then\n \t\tIBM_REV=`/usr/bin/oslevel`\n \telse\n-\t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n+\t\tIBM_REV=\"$UNAME_VERSION.$UNAME_RELEASE\"\n \tfi\n-\techo ${UNAME_MACHINE}-ibm-aix${IBM_REV}\n+\techo \"$UNAME_MACHINE\"-ibm-aix\"$IBM_REV\"\n \texit ;;\n     *:AIX:2:3)\n \tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n-\t\teval $set_cc_for_build\n-\t\tsed 's/^\t\t//' << EOF >$dummy.c\n+\t\teval \"$set_cc_for_build\"\n+\t\tsed 's/^\t\t//' << EOF > \"$dummy.c\"\n \t\t#include <sys/systemcfg.h>\n \n \t\tmain()\n@@ -584,7 +591,7 @@ EOF\n \t\t\texit(0);\n \t\t\t}\n EOF\n-\t\tif $CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy`\n+\t\tif $CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" && SYSTEM_NAME=`\"$dummy\"`\n \t\tthen\n \t\t\techo \"$SYSTEM_NAME\"\n \t\telse\n@@ -598,7 +605,7 @@ EOF\n \texit ;;\n     *:AIX:*:[4567])\n \tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n-\tif /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then\n+\tif /usr/sbin/lsattr -El \"$IBM_CPU_ID\" | grep ' POWER' >/dev/null 2>&1; then\n \t\tIBM_ARCH=rs6000\n \telse\n \t\tIBM_ARCH=powerpc\n@@ -607,18 +614,18 @@ EOF\n \t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc |\n \t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n \telse\n-\t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n+\t\tIBM_REV=\"$UNAME_VERSION.$UNAME_RELEASE\"\n \tfi\n-\techo ${IBM_ARCH}-ibm-aix${IBM_REV}\n+\techo \"$IBM_ARCH\"-ibm-aix\"$IBM_REV\"\n \texit ;;\n     *:AIX:*:*)\n \techo rs6000-ibm-aix\n \texit ;;\n-    ibmrt:4.4BSD:*|romp-ibm:BSD:*)\n+    ibmrt:4.4BSD:*|romp-ibm:4.4BSD:*)\n \techo romp-ibm-bsd4.4\n \texit ;;\n     ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and\n-\techo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to\n+\techo romp-ibm-bsd\"$UNAME_RELEASE\"   # 4.3 with uname added to\n \texit ;;                             # report: romp-ibm BSD 4.3\n     *:BOSX:*:*)\n \techo rs6000-bull-bosx\n@@ -633,28 +640,28 @@ EOF\n \techo m68k-hp-bsd4.4\n \texit ;;\n     9000/[34678]??:HP-UX:*:*)\n-\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n-\tcase \"${UNAME_MACHINE}\" in\n-\t    9000/31? )            HP_ARCH=m68000 ;;\n-\t    9000/[34]?? )         HP_ARCH=m68k ;;\n+\tHPUX_REV=`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*.[0B]*//'`\n+\tcase \"$UNAME_MACHINE\" in\n+\t    9000/31?)            HP_ARCH=m68000 ;;\n+\t    9000/[34]??)         HP_ARCH=m68k ;;\n \t    9000/[678][0-9][0-9])\n \t\tif [ -x /usr/bin/getconf ]; then\n \t\t    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`\n \t\t    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`\n-\t\t    case \"${sc_cpu_version}\" in\n+\t\t    case \"$sc_cpu_version\" in\n \t\t      523) HP_ARCH=hppa1.0 ;; # CPU_PA_RISC1_0\n \t\t      528) HP_ARCH=hppa1.1 ;; # CPU_PA_RISC1_1\n \t\t      532)                      # CPU_PA_RISC2_0\n-\t\t\tcase \"${sc_kernel_bits}\" in\n+\t\t\tcase \"$sc_kernel_bits\" in\n \t\t\t  32) HP_ARCH=hppa2.0n ;;\n \t\t\t  64) HP_ARCH=hppa2.0w ;;\n \t\t\t  '') HP_ARCH=hppa2.0 ;;   # HP-UX 10.20\n \t\t\tesac ;;\n \t\t    esac\n \t\tfi\n-\t\tif [ \"${HP_ARCH}\" = \"\" ]; then\n-\t\t    eval $set_cc_for_build\n-\t\t    sed 's/^\t\t//' << EOF >$dummy.c\n+\t\tif [ \"$HP_ARCH\" = \"\" ]; then\n+\t\t    eval \"$set_cc_for_build\"\n+\t\t    sed 's/^\t\t//' << EOF > \"$dummy.c\"\n \n \t\t#define _HPUX_SOURCE\n \t\t#include <stdlib.h>\n@@ -687,13 +694,13 @@ EOF\n \t\t    exit (0);\n \t\t}\n EOF\n-\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`\n+\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" 2>/dev/null) && HP_ARCH=`\"$dummy\"`\n \t\t    test -z \"$HP_ARCH\" && HP_ARCH=hppa\n \t\tfi ;;\n \tesac\n-\tif [ ${HP_ARCH} = hppa2.0w ]\n+\tif [ \"$HP_ARCH\" = hppa2.0w ]\n \tthen\n-\t    eval $set_cc_for_build\n+\t    eval \"$set_cc_for_build\"\n \n \t    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating\n \t    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler\n@@ -712,15 +719,15 @@ EOF\n \t\tHP_ARCH=hppa64\n \t    fi\n \tfi\n-\techo ${HP_ARCH}-hp-hpux${HPUX_REV}\n+\techo \"$HP_ARCH\"-hp-hpux\"$HPUX_REV\"\n \texit ;;\n     ia64:HP-UX:*:*)\n-\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n-\techo ia64-hp-hpux${HPUX_REV}\n+\tHPUX_REV=`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*.[0B]*//'`\n+\techo ia64-hp-hpux\"$HPUX_REV\"\n \texit ;;\n     3050*:HI-UX:*:*)\n-\teval $set_cc_for_build\n-\tsed 's/^\t//' << EOF >$dummy.c\n+\teval \"$set_cc_for_build\"\n+\tsed 's/^\t//' << EOF > \"$dummy.c\"\n \t#include <unistd.h>\n \tint\n \tmain ()\n@@ -745,11 +752,11 @@ EOF\n \t  exit (0);\n \t}\n EOF\n-\t$CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy` &&\n+\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" && SYSTEM_NAME=`\"$dummy\"` &&\n \t\t{ echo \"$SYSTEM_NAME\"; exit; }\n \techo unknown-hitachi-hiuxwe2\n \texit ;;\n-    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )\n+    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:*)\n \techo hppa1.1-hp-bsd\n \texit ;;\n     9000/8??:4.3bsd:*:*)\n@@ -758,17 +765,17 @@ EOF\n     *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)\n \techo hppa1.0-hp-mpeix\n \texit ;;\n-    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )\n+    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:*)\n \techo hppa1.1-hp-osf\n \texit ;;\n     hp8??:OSF1:*:*)\n \techo hppa1.0-hp-osf\n \texit ;;\n     i*86:OSF1:*:*)\n \tif [ -x /usr/sbin/sysversion ] ; then\n-\t    echo ${UNAME_MACHINE}-unknown-osf1mk\n+\t    echo \"$UNAME_MACHINE\"-unknown-osf1mk\n \telse\n-\t    echo ${UNAME_MACHINE}-unknown-osf1\n+\t    echo \"$UNAME_MACHINE\"-unknown-osf1\n \tfi\n \texit ;;\n     parisc*:Lites*:*:*)\n@@ -793,128 +800,109 @@ EOF\n \techo c4-convex-bsd\n \texit ;;\n     CRAY*Y-MP:*:*:*)\n-\techo ymp-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\techo ymp-cray-unicos\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n \texit ;;\n     CRAY*[A-Z]90:*:*:*)\n-\techo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \\\n+\techo \"$UNAME_MACHINE\"-cray-unicos\"$UNAME_RELEASE\" \\\n \t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n \t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n \t      -e 's/\\.[^.]*$/.X/'\n \texit ;;\n     CRAY*TS:*:*:*)\n-\techo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\techo t90-cray-unicos\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n \texit ;;\n     CRAY*T3E:*:*:*)\n-\techo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\techo alphaev5-cray-unicosmk\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n \texit ;;\n     CRAY*SV1:*:*:*)\n-\techo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\techo sv1-cray-unicos\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n \texit ;;\n     *:UNICOS/mp:*:*)\n-\techo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\techo craynv-cray-unicosmp\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n \texit ;;\n     F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n \tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n \tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n-\tFUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`\n+\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ /_/'`\n \techo \"${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n \texit ;;\n     5000:UNIX_System_V:4.*:*)\n \tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n-\tFUJITSU_REL=`echo ${UNAME_RELEASE} | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n+\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n \techo \"sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n \texit ;;\n     i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n-\techo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}\n+\techo \"$UNAME_MACHINE\"-pc-bsdi\"$UNAME_RELEASE\"\n \texit ;;\n     sparc*:BSD/OS:*:*)\n-\techo sparc-unknown-bsdi${UNAME_RELEASE}\n+\techo sparc-unknown-bsdi\"$UNAME_RELEASE\"\n \texit ;;\n     *:BSD/OS:*:*)\n-\techo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}\n+\techo \"$UNAME_MACHINE\"-unknown-bsdi\"$UNAME_RELEASE\"\n \texit ;;\n     *:FreeBSD:*:*)\n \tUNAME_PROCESSOR=`/usr/bin/uname -p`\n-\tcase ${UNAME_PROCESSOR} in\n+\tcase \"$UNAME_PROCESSOR\" in\n \t    amd64)\n \t\tUNAME_PROCESSOR=x86_64 ;;\n \t    i386)\n \t\tUNAME_PROCESSOR=i586 ;;\n \tesac\n-\techo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n+\techo \"$UNAME_PROCESSOR\"-unknown-freebsd\"`echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//'`\"\n \texit ;;\n     i*:CYGWIN*:*)\n-\techo ${UNAME_MACHINE}-pc-cygwin\n+\techo \"$UNAME_MACHINE\"-pc-cygwin\n \texit ;;\n     *:MINGW64*:*)\n-\techo ${UNAME_MACHINE}-pc-mingw64\n+\techo \"$UNAME_MACHINE\"-pc-mingw64\n \texit ;;\n     *:MINGW*:*)\n-\techo ${UNAME_MACHINE}-pc-mingw32\n+\techo \"$UNAME_MACHINE\"-pc-mingw32\n \texit ;;\n     *:MSYS*:*)\n-\techo ${UNAME_MACHINE}-pc-msys\n-\texit ;;\n-    i*:windows32*:*)\n-\t# uname -m includes \"-pc\" on this system.\n-\techo ${UNAME_MACHINE}-mingw32\n+\techo \"$UNAME_MACHINE\"-pc-msys\n \texit ;;\n     i*:PW*:*)\n-\techo ${UNAME_MACHINE}-pc-pw32\n+\techo \"$UNAME_MACHINE\"-pc-pw32\n \texit ;;\n     *:Interix*:*)\n-\tcase ${UNAME_MACHINE} in\n+\tcase \"$UNAME_MACHINE\" in\n \t    x86)\n-\t\techo i586-pc-interix${UNAME_RELEASE}\n+\t\techo i586-pc-interix\"$UNAME_RELEASE\"\n \t\texit ;;\n \t    authenticamd | genuineintel | EM64T)\n-\t\techo x86_64-unknown-interix${UNAME_RELEASE}\n+\t\techo x86_64-unknown-interix\"$UNAME_RELEASE\"\n \t\texit ;;\n \t    IA64)\n-\t\techo ia64-unknown-interix${UNAME_RELEASE}\n+\t\techo ia64-unknown-interix\"$UNAME_RELEASE\"\n \t\texit ;;\n \tesac ;;\n-    [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)\n-\techo i${UNAME_MACHINE}-pc-mks\n-\texit ;;\n-    8664:Windows_NT:*)\n-\techo x86_64-pc-mks\n-\texit ;;\n-    i*:Windows_NT*:* | Pentium*:Windows_NT*:*)\n-\t# How do we know it's Interix rather than the generic POSIX subsystem?\n-\t# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we\n-\t# UNAME_MACHINE based on the output of uname instead of i386?\n-\techo i586-pc-interix\n-\texit ;;\n     i*:UWIN*:*)\n-\techo ${UNAME_MACHINE}-pc-uwin\n+\techo \"$UNAME_MACHINE\"-pc-uwin\n \texit ;;\n     amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)\n \techo x86_64-unknown-cygwin\n \texit ;;\n-    p*:CYGWIN*:*)\n-\techo powerpcle-unknown-cygwin\n-\texit ;;\n     prep*:SunOS:5.*:*)\n-\techo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\techo powerpcle-unknown-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n \texit ;;\n     *:GNU:*:*)\n \t# the GNU system\n-\techo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-${LIBC}`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`\n+\techo \"`echo \"$UNAME_MACHINE\"|sed -e 's,[-/].*$,,'`-unknown-$LIBC`echo \"$UNAME_RELEASE\"|sed -e 's,/.*$,,'`\"\n \texit ;;\n     *:GNU/*:*:*)\n \t# other systems with GNU libc and userland\n-\techo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-${LIBC}\n+\techo \"$UNAME_MACHINE-unknown-`echo \"$UNAME_SYSTEM\" | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"``echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//'`-$LIBC\"\n \texit ;;\n-    i*86:Minix:*:*)\n-\techo ${UNAME_MACHINE}-pc-minix\n+    *:Minix:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-minix\n \texit ;;\n     aarch64:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     aarch64_be:Linux:*:*)\n \tUNAME_MACHINE=aarch64_be\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     alpha:Linux:*:*)\n \tcase `sed -n '/^cpu model/s/^.*: \\(.*\\)/\\1/p' < /proc/cpuinfo` in\n@@ -928,63 +916,63 @@ EOF\n \tesac\n \tobjdump --private-headers /bin/sh | grep -q ld.so.1\n \tif test \"$?\" = 0 ; then LIBC=gnulibc1 ; fi\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     arc:Linux:*:* | arceb:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     arm*:Linux:*:*)\n-\teval $set_cc_for_build\n+\teval \"$set_cc_for_build\"\n \tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n \t    | grep -q __ARM_EABI__\n \tthen\n-\t    echo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\t    echo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \telse\n \t    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n \t\t| grep -q __ARM_PCS_VFP\n \t    then\n-\t\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabi\n+\t\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"eabi\n \t    else\n-\t\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabihf\n+\t\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"eabihf\n \t    fi\n \tfi\n \texit ;;\n     avr32*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     cris:Linux:*:*)\n-\techo ${UNAME_MACHINE}-axis-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-axis-linux-\"$LIBC\"\n \texit ;;\n     crisv32:Linux:*:*)\n-\techo ${UNAME_MACHINE}-axis-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-axis-linux-\"$LIBC\"\n \texit ;;\n     e2k:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     frv:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     hexagon:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     i*86:Linux:*:*)\n-\techo ${UNAME_MACHINE}-pc-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-pc-linux-\"$LIBC\"\n \texit ;;\n     ia64:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     k1om:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     m32r*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     m68*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     mips:Linux:*:* | mips64:Linux:*:*)\n-\teval $set_cc_for_build\n-\tsed 's/^\t//' << EOF >$dummy.c\n+\teval \"$set_cc_for_build\"\n+\tsed 's/^\t//' << EOF > \"$dummy.c\"\n \t#undef CPU\n \t#undef ${UNAME_MACHINE}\n \t#undef ${UNAME_MACHINE}el\n@@ -998,70 +986,70 @@ EOF\n \t#endif\n \t#endif\n EOF\n-\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^CPU'`\n-\ttest x\"${CPU}\" != x && { echo \"${CPU}-unknown-linux-${LIBC}\"; exit; }\n+\teval \"`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU'`\"\n+\ttest \"x$CPU\" != x && { echo \"$CPU-unknown-linux-$LIBC\"; exit; }\n \t;;\n     mips64el:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     openrisc*:Linux:*:*)\n-\techo or1k-unknown-linux-${LIBC}\n+\techo or1k-unknown-linux-\"$LIBC\"\n \texit ;;\n     or32:Linux:*:* | or1k*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     padre:Linux:*:*)\n-\techo sparc-unknown-linux-${LIBC}\n+\techo sparc-unknown-linux-\"$LIBC\"\n \texit ;;\n     parisc64:Linux:*:* | hppa64:Linux:*:*)\n-\techo hppa64-unknown-linux-${LIBC}\n+\techo hppa64-unknown-linux-\"$LIBC\"\n \texit ;;\n     parisc:Linux:*:* | hppa:Linux:*:*)\n \t# Look for CPU level\n \tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n-\t  PA7*) echo hppa1.1-unknown-linux-${LIBC} ;;\n-\t  PA8*) echo hppa2.0-unknown-linux-${LIBC} ;;\n-\t  *)    echo hppa-unknown-linux-${LIBC} ;;\n+\t  PA7*) echo hppa1.1-unknown-linux-\"$LIBC\" ;;\n+\t  PA8*) echo hppa2.0-unknown-linux-\"$LIBC\" ;;\n+\t  *)    echo hppa-unknown-linux-\"$LIBC\" ;;\n \tesac\n \texit ;;\n     ppc64:Linux:*:*)\n-\techo powerpc64-unknown-linux-${LIBC}\n+\techo powerpc64-unknown-linux-\"$LIBC\"\n \texit ;;\n     ppc:Linux:*:*)\n-\techo powerpc-unknown-linux-${LIBC}\n+\techo powerpc-unknown-linux-\"$LIBC\"\n \texit ;;\n     ppc64le:Linux:*:*)\n-\techo powerpc64le-unknown-linux-${LIBC}\n+\techo powerpc64le-unknown-linux-\"$LIBC\"\n \texit ;;\n     ppcle:Linux:*:*)\n-\techo powerpcle-unknown-linux-${LIBC}\n+\techo powerpcle-unknown-linux-\"$LIBC\"\n \texit ;;\n     riscv32:Linux:*:* | riscv64:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     s390:Linux:*:* | s390x:Linux:*:*)\n-\techo ${UNAME_MACHINE}-ibm-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-ibm-linux-\"$LIBC\"\n \texit ;;\n     sh64*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     sh*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     sparc:Linux:*:* | sparc64:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     tile*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     vax:Linux:*:*)\n-\techo ${UNAME_MACHINE}-dec-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-dec-linux-\"$LIBC\"\n \texit ;;\n     x86_64:Linux:*:*)\n-\techo ${UNAME_MACHINE}-pc-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-pc-linux-\"$LIBC\"\n \texit ;;\n     xtensa*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     i*86:DYNIX/ptx:4*:*)\n \t# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.\n@@ -1075,34 +1063,34 @@ EOF\n \t# I am not positive that other SVR4 systems won't match this,\n \t# I just have to hope.  -- rms.\n \t# Use sysv4.2uw... so that sysv4* matches it.\n-\techo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}\n+\techo \"$UNAME_MACHINE\"-pc-sysv4.2uw\"$UNAME_VERSION\"\n \texit ;;\n     i*86:OS/2:*:*)\n \t# If we were able to find `uname', then EMX Unix compatibility\n \t# is probably installed.\n-\techo ${UNAME_MACHINE}-pc-os2-emx\n+\techo \"$UNAME_MACHINE\"-pc-os2-emx\n \texit ;;\n     i*86:XTS-300:*:STOP)\n-\techo ${UNAME_MACHINE}-unknown-stop\n+\techo \"$UNAME_MACHINE\"-unknown-stop\n \texit ;;\n     i*86:atheos:*:*)\n-\techo ${UNAME_MACHINE}-unknown-atheos\n+\techo \"$UNAME_MACHINE\"-unknown-atheos\n \texit ;;\n     i*86:syllable:*:*)\n-\techo ${UNAME_MACHINE}-pc-syllable\n+\techo \"$UNAME_MACHINE\"-pc-syllable\n \texit ;;\n     i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)\n-\techo i386-unknown-lynxos${UNAME_RELEASE}\n+\techo i386-unknown-lynxos\"$UNAME_RELEASE\"\n \texit ;;\n     i*86:*DOS:*:*)\n-\techo ${UNAME_MACHINE}-pc-msdosdjgpp\n+\techo \"$UNAME_MACHINE\"-pc-msdosdjgpp\n \texit ;;\n-    i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)\n-\tUNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\\/MP$//'`\n+    i*86:*:4.*:*)\n+\tUNAME_REL=`echo \"$UNAME_RELEASE\" | sed 's/\\/MP$//'`\n \tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n-\t\techo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}\n+\t\techo \"$UNAME_MACHINE\"-univel-sysv\"$UNAME_REL\"\n \telse\n-\t\techo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}\n+\t\techo \"$UNAME_MACHINE\"-pc-sysv\"$UNAME_REL\"\n \tfi\n \texit ;;\n     i*86:*:5:[678]*)\n@@ -1112,12 +1100,12 @@ EOF\n \t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n \t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n \tesac\n-\techo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}\n+\techo \"$UNAME_MACHINE-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}{$UNAME_VERSION}\"\n \texit ;;\n     i*86:*:3.2:*)\n \tif test -f /usr/options/cb.name; then\n \t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n-\t\techo ${UNAME_MACHINE}-pc-isc$UNAME_REL\n+\t\techo \"$UNAME_MACHINE\"-pc-isc\"$UNAME_REL\"\n \telif /bin/uname -X 2>/dev/null >/dev/null ; then\n \t\tUNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`\n \t\t(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486\n@@ -1127,9 +1115,9 @@ EOF\n \t\t\t&& UNAME_MACHINE=i686\n \t\t(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \\\n \t\t\t&& UNAME_MACHINE=i686\n-\t\techo ${UNAME_MACHINE}-pc-sco$UNAME_REL\n+\t\techo \"$UNAME_MACHINE\"-pc-sco\"$UNAME_REL\"\n \telse\n-\t\techo ${UNAME_MACHINE}-pc-sysv32\n+\t\techo \"$UNAME_MACHINE\"-pc-sysv32\n \tfi\n \texit ;;\n     pc:*:*:*)\n@@ -1149,9 +1137,9 @@ EOF\n \texit ;;\n     i860:*:4.*:*) # i860-SVR4\n \tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n-\t  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4\n+\t  echo i860-stardent-sysv\"$UNAME_RELEASE\" # Stardent Vistra i860-SVR4\n \telse # Add other i860-SVR4 vendors below as they are discovered.\n-\t  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4\n+\t  echo i860-unknown-sysv\"$UNAME_RELEASE\"  # Unknown i860-SVR4\n \tfi\n \texit ;;\n     mini*:CTIX:SYS*5:*)\n@@ -1171,9 +1159,9 @@ EOF\n \ttest -r /etc/.relid \\\n \t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n \t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n-\t  && { echo i486-ncr-sysv4.3${OS_REL}; exit; }\n+\t  && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n \t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n-\t  && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;\n+\t  && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n     3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n \t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n \t  && { echo i486-ncr-sysv4; exit; } ;;\n@@ -1182,28 +1170,28 @@ EOF\n \ttest -r /etc/.relid \\\n \t    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n \t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n-\t    && { echo i486-ncr-sysv4.3${OS_REL}; exit; }\n+\t    && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n \t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n-\t    && { echo i586-ncr-sysv4.3${OS_REL}; exit; }\n+\t    && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; }\n \t/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \\\n-\t    && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;\n+\t    && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n     m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)\n-\techo m68k-unknown-lynxos${UNAME_RELEASE}\n+\techo m68k-unknown-lynxos\"$UNAME_RELEASE\"\n \texit ;;\n     mc68030:UNIX_System_V:4.*:*)\n \techo m68k-atari-sysv4\n \texit ;;\n     TSUNAMI:LynxOS:2.*:*)\n-\techo sparc-unknown-lynxos${UNAME_RELEASE}\n+\techo sparc-unknown-lynxos\"$UNAME_RELEASE\"\n \texit ;;\n     rs6000:LynxOS:2.*:*)\n-\techo rs6000-unknown-lynxos${UNAME_RELEASE}\n+\techo rs6000-unknown-lynxos\"$UNAME_RELEASE\"\n \texit ;;\n     PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)\n-\techo powerpc-unknown-lynxos${UNAME_RELEASE}\n+\techo powerpc-unknown-lynxos\"$UNAME_RELEASE\"\n \texit ;;\n     SM[BE]S:UNIX_SV:*:*)\n-\techo mips-dde-sysv${UNAME_RELEASE}\n+\techo mips-dde-sysv\"$UNAME_RELEASE\"\n \texit ;;\n     RM*:ReliantUNIX-*:*:*)\n \techo mips-sni-sysv4\n@@ -1214,7 +1202,7 @@ EOF\n     *:SINIX-*:*:*)\n \tif uname -p 2>/dev/null >/dev/null ; then\n \t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n-\t\techo ${UNAME_MACHINE}-sni-sysv4\n+\t\techo \"$UNAME_MACHINE\"-sni-sysv4\n \telse\n \t\techo ns32k-sni-sysv\n \tfi\n@@ -1234,23 +1222,23 @@ EOF\n \texit ;;\n     i*86:VOS:*:*)\n \t# From Paul.Green@stratus.com.\n-\techo ${UNAME_MACHINE}-stratus-vos\n+\techo \"$UNAME_MACHINE\"-stratus-vos\n \texit ;;\n     *:VOS:*:*)\n \t# From Paul.Green@stratus.com.\n \techo hppa1.1-stratus-vos\n \texit ;;\n     mc68*:A/UX:*:*)\n-\techo m68k-apple-aux${UNAME_RELEASE}\n+\techo m68k-apple-aux\"$UNAME_RELEASE\"\n \texit ;;\n     news*:NEWS-OS:6*:*)\n \techo mips-sony-newsos6\n \texit ;;\n     R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)\n \tif [ -d /usr/nec ]; then\n-\t\techo mips-nec-sysv${UNAME_RELEASE}\n+\t\techo mips-nec-sysv\"$UNAME_RELEASE\"\n \telse\n-\t\techo mips-unknown-sysv${UNAME_RELEASE}\n+\t\techo mips-unknown-sysv\"$UNAME_RELEASE\"\n \tfi\n \texit ;;\n     BeBox:BeOS:*:*)\t# BeOS running on hardware made by Be, PPC only.\n@@ -1269,49 +1257,56 @@ EOF\n \techo x86_64-unknown-haiku\n \texit ;;\n     SX-4:SUPER-UX:*:*)\n-\techo sx4-nec-superux${UNAME_RELEASE}\n+\techo sx4-nec-superux\"$UNAME_RELEASE\"\n \texit ;;\n     SX-5:SUPER-UX:*:*)\n-\techo sx5-nec-superux${UNAME_RELEASE}\n+\techo sx5-nec-superux\"$UNAME_RELEASE\"\n \texit ;;\n     SX-6:SUPER-UX:*:*)\n-\techo sx6-nec-superux${UNAME_RELEASE}\n+\techo sx6-nec-superux\"$UNAME_RELEASE\"\n \texit ;;\n     SX-7:SUPER-UX:*:*)\n-\techo sx7-nec-superux${UNAME_RELEASE}\n+\techo sx7-nec-superux\"$UNAME_RELEASE\"\n \texit ;;\n     SX-8:SUPER-UX:*:*)\n-\techo sx8-nec-superux${UNAME_RELEASE}\n+\techo sx8-nec-superux\"$UNAME_RELEASE\"\n \texit ;;\n     SX-8R:SUPER-UX:*:*)\n-\techo sx8r-nec-superux${UNAME_RELEASE}\n+\techo sx8r-nec-superux\"$UNAME_RELEASE\"\n \texit ;;\n     SX-ACE:SUPER-UX:*:*)\n-\techo sxace-nec-superux${UNAME_RELEASE}\n+\techo sxace-nec-superux\"$UNAME_RELEASE\"\n \texit ;;\n     Power*:Rhapsody:*:*)\n-\techo powerpc-apple-rhapsody${UNAME_RELEASE}\n+\techo powerpc-apple-rhapsody\"$UNAME_RELEASE\"\n \texit ;;\n     *:Rhapsody:*:*)\n-\techo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}\n+\techo \"$UNAME_MACHINE\"-apple-rhapsody\"$UNAME_RELEASE\"\n \texit ;;\n     *:Darwin:*:*)\n \tUNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown\n-\teval $set_cc_for_build\n+\teval \"$set_cc_for_build\"\n \tif test \"$UNAME_PROCESSOR\" = unknown ; then\n \t    UNAME_PROCESSOR=powerpc\n \tfi\n-\tif test `echo \"$UNAME_RELEASE\" | sed -e 's/\\..*//'` -le 10 ; then\n+\tif test \"`echo \"$UNAME_RELEASE\" | sed -e 's/\\..*//'`\" -le 10 ; then\n \t    if [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n \t\tif (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n-\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n-\t\t    grep IS_64BIT_ARCH >/dev/null\n+\t\t       (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t       grep IS_64BIT_ARCH >/dev/null\n \t\tthen\n \t\t    case $UNAME_PROCESSOR in\n \t\t\ti386) UNAME_PROCESSOR=x86_64 ;;\n \t\t\tpowerpc) UNAME_PROCESSOR=powerpc64 ;;\n \t\t    esac\n \t\tfi\n+\t\t# On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc\n+\t\tif (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \\\n+\t\t       (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t       grep IS_PPC >/dev/null\n+\t\tthen\n+\t\t    UNAME_PROCESSOR=powerpc\n+\t\tfi\n \t    fi\n \telif test \"$UNAME_PROCESSOR\" = i386 ; then\n \t    # Avoid executing cc on OS X 10.9, as it ships with a stub\n@@ -1322,30 +1317,33 @@ EOF\n \t    # that Apple uses in portable devices.\n \t    UNAME_PROCESSOR=x86_64\n \tfi\n-\techo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}\n+\techo \"$UNAME_PROCESSOR\"-apple-darwin\"$UNAME_RELEASE\"\n \texit ;;\n     *:procnto*:*:* | *:QNX:[0123456789]*:*)\n \tUNAME_PROCESSOR=`uname -p`\n \tif test \"$UNAME_PROCESSOR\" = x86; then\n \t\tUNAME_PROCESSOR=i386\n \t\tUNAME_MACHINE=pc\n \tfi\n-\techo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}\n+\techo \"$UNAME_PROCESSOR\"-\"$UNAME_MACHINE\"-nto-qnx\"$UNAME_RELEASE\"\n \texit ;;\n     *:QNX:*:4*)\n \techo i386-pc-qnx\n \texit ;;\n-    NEO-?:NONSTOP_KERNEL:*:*)\n-\techo neo-tandem-nsk${UNAME_RELEASE}\n+    NEO-*:NONSTOP_KERNEL:*:*)\n+\techo neo-tandem-nsk\"$UNAME_RELEASE\"\n \texit ;;\n     NSE-*:NONSTOP_KERNEL:*:*)\n-\techo nse-tandem-nsk${UNAME_RELEASE}\n+\techo nse-tandem-nsk\"$UNAME_RELEASE\"\n \texit ;;\n-    NSR-?:NONSTOP_KERNEL:*:*)\n-\techo nsr-tandem-nsk${UNAME_RELEASE}\n+    NSR-*:NONSTOP_KERNEL:*:*)\n+\techo nsr-tandem-nsk\"$UNAME_RELEASE\"\n \texit ;;\n-    NSX-?:NONSTOP_KERNEL:*:*)\n-\techo nsx-tandem-nsk${UNAME_RELEASE}\n+    NSV-*:NONSTOP_KERNEL:*:*)\n+\techo nsv-tandem-nsk\"$UNAME_RELEASE\"\n+\texit ;;\n+    NSX-*:NONSTOP_KERNEL:*:*)\n+\techo nsx-tandem-nsk\"$UNAME_RELEASE\"\n \texit ;;\n     *:NonStop-UX:*:*)\n \techo mips-compaq-nonstopux\n@@ -1354,7 +1352,7 @@ EOF\n \techo bs2000-siemens-sysv\n \texit ;;\n     DS/*:UNIX_System_V:*:*)\n-\techo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}\n+\techo \"$UNAME_MACHINE\"-\"$UNAME_SYSTEM\"-\"$UNAME_RELEASE\"\n \texit ;;\n     *:Plan9:*:*)\n \t# \"uname -m\" is not consistent, so use $cputype instead. 386\n@@ -1365,7 +1363,7 @@ EOF\n \telse\n \t    UNAME_MACHINE=\"$cputype\"\n \tfi\n-\techo ${UNAME_MACHINE}-unknown-plan9\n+\techo \"$UNAME_MACHINE\"-unknown-plan9\n \texit ;;\n     *:TOPS-10:*:*)\n \techo pdp10-unknown-tops10\n@@ -1386,14 +1384,14 @@ EOF\n \techo pdp10-unknown-its\n \texit ;;\n     SEI:*:*:SEIUX)\n-\techo mips-sei-seiux${UNAME_RELEASE}\n+\techo mips-sei-seiux\"$UNAME_RELEASE\"\n \texit ;;\n     *:DragonFly:*:*)\n-\techo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n+\techo \"$UNAME_MACHINE\"-unknown-dragonfly\"`echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//'`\"\n \texit ;;\n     *:*VMS:*:*)\n \tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n-\tcase \"${UNAME_MACHINE}\" in\n+\tcase \"$UNAME_MACHINE\" in\n \t    A*) echo alpha-dec-vms ; exit ;;\n \t    I*) echo ia64-dec-vms ; exit ;;\n \t    V*) echo vax-dec-vms ; exit ;;\n@@ -1402,32 +1400,44 @@ EOF\n \techo i386-pc-xenix\n \texit ;;\n     i*86:skyos:*:*)\n-\techo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE} | sed -e 's/ .*$//'`\n+\techo \"$UNAME_MACHINE\"-pc-skyos\"`echo \"$UNAME_RELEASE\" | sed -e 's/ .*$//'`\"\n \texit ;;\n     i*86:rdos:*:*)\n-\techo ${UNAME_MACHINE}-pc-rdos\n+\techo \"$UNAME_MACHINE\"-pc-rdos\n \texit ;;\n     i*86:AROS:*:*)\n-\techo ${UNAME_MACHINE}-pc-aros\n+\techo \"$UNAME_MACHINE\"-pc-aros\n \texit ;;\n     x86_64:VMkernel:*:*)\n-\techo ${UNAME_MACHINE}-unknown-esx\n+\techo \"$UNAME_MACHINE\"-unknown-esx\n \texit ;;\n     amd64:Isilon\\ OneFS:*:*)\n \techo x86_64-unknown-onefs\n \texit ;;\n esac\n \n+echo \"$0: unable to guess system type\" >&2\n+\n+case \"$UNAME_MACHINE:$UNAME_SYSTEM\" in\n+    mips:Linux | mips64:Linux)\n+\t# If we got here on MIPS GNU/Linux, output extra information.\n+\tcat >&2 <<EOF\n+\n+NOTE: MIPS GNU/Linux systems require a C compiler to fully recognize\n+the system type. Please install a C compiler and try again.\n+EOF\n+\t;;\n+esac\n+\n cat >&2 <<EOF\n-$0: unable to guess system type\n \n This script (version $timestamp), has failed to recognize the\n-operating system you are using. If your script is old, overwrite\n-config.guess and config.sub with the latest versions from:\n+operating system you are using. If your script is old, overwrite *all*\n+copies of config.guess and config.sub with the latest versions from:\n \n-  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n+  https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n and\n-  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n+  https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n \n If $0 has already been updated, send the following data and any\n information you think might be pertinent to config-patches@gnu.org to\n@@ -1450,16 +1460,16 @@ hostinfo               = `(hostinfo) 2>/dev/null`\n /usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`\n /usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`\n \n-UNAME_MACHINE = ${UNAME_MACHINE}\n-UNAME_RELEASE = ${UNAME_RELEASE}\n-UNAME_SYSTEM  = ${UNAME_SYSTEM}\n-UNAME_VERSION = ${UNAME_VERSION}\n+UNAME_MACHINE = \"$UNAME_MACHINE\"\n+UNAME_RELEASE = \"$UNAME_RELEASE\"\n+UNAME_SYSTEM  = \"$UNAME_SYSTEM\"\n+UNAME_VERSION = \"$UNAME_VERSION\"\n EOF\n \n exit 1\n \n # Local variables:\n-# eval: (add-hook 'write-file-hooks 'time-stamp)\n+# eval: (add-hook 'before-save-hook 'time-stamp)\n # time-stamp-start: \"timestamp='\"\n # time-stamp-format: \"%:y-%02m-%02d\"\n # time-stamp-end: \"'\""
      },
      {
        "sha": "8444dc26f27b26dd1cd489f276be2b31e4c1886e",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "patch": "@@ -13,10 +13,10 @@ fi\n if test -z $with_qt_translationdir; then\n   with_qt_translationdir=$depends_prefix/translations\n fi\n-if test -z $with_qt_bindir; then\n+if test -z $with_qt_bindir && test -z \"@no_qt@\"; then\n   with_qt_bindir=$depends_prefix/native/bin\n fi\n-if test -z $with_protoc_bindir; then\n+if test -z $with_protoc_bindir && test -z \"@no_qt@\"; then\n   with_protoc_bindir=$depends_prefix/native/bin\n fi\n \n@@ -53,17 +53,17 @@ PKG_CONFIG=\"`which pkg-config` --static\"\n # These two need to remain exported because pkg-config does not see them\n # otherwise. That means they must be unexported at the end of configure.ac to\n # avoid ruining the cache. Sigh.\n-\n-export PKG_CONFIG_LIBDIR=$depends_prefix/lib/pkgconfig\n-export PKG_CONFIG_PATH=$depends_prefix/share/pkgconfig\n+export PKG_CONFIG_PATH=$depends_prefix/share/pkgconfig:$depends_prefix/lib/pkgconfig\n+if test -z \"@allow_host_packages@\"; then\n+  export PKGCONFIG_LIBDIR=\n+fi\n \n CPPFLAGS=\"-I$depends_prefix/include/ $CPPFLAGS\"\n LDFLAGS=\"-L$depends_prefix/lib $LDFLAGS\"\n \n CC=\"@CC@\"\n CXX=\"@CXX@\"\n OBJC=\"${CC}\"\n-CCACHE=$depends_prefix/native/bin/ccache\n PYTHONPATH=$depends_prefix/native/lib/python/dist-packages:$PYTHONPATH\n \n if test -n \"@AR@\"; then"
      },
      {
        "sha": "c95acc681d1b89f446b15668fc775af5a3c941c3",
        "filename": "depends/config.sub",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "9fc7093be4f35f7048580e7bc8ba19cc294bff95",
        "filename": "depends/description.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "a1c943d60bbd7c034afb5129b75b32648ce69ceb",
        "filename": "depends/hosts/darwin.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "144e5f88b7820ae9d920f1d0e5ad850c44ca67d2",
        "filename": "depends/hosts/default.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/hosts/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/hosts/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/default.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "61806c7509ef65d5984b7ed89dd20fb736065971",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "acbc60eea3e8ace144fbfd2ea13cd16772eb8134",
        "filename": "depends/packages/expat.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/expat.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/expat.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/expat.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "12695db4b9f781c9ce8aa9a62dab0ae36a0a1ce4",
        "filename": "depends/packages/fontconfig.mk",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "298616bea42ac6611759c797c8456a9390d01d11",
        "filename": "depends/packages/libX11.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/libX11.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/libX11.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libX11.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "304494e3c5e4cadc041bd907f3b166a885e31c11",
        "filename": "depends/packages/libXau.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/libXau.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/libXau.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXau.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "c0565dd6720f94ed752b22fe992f046cd5194b36",
        "filename": "depends/packages/libXext.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/libXext.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/libXext.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXext.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "5f622f8e6e80694386fef45917b84b97ee1d2223",
        "filename": "depends/packages/libevent.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "3f346d9728eba1f931d66ddf27e52c84cb2775ae",
        "filename": "depends/packages/libxcb.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/libxcb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/libxcb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxcb.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "5ad2b580d2ea9706e8ebcc72d2bc59d6197056ed",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "5f247e9bf34877ed5b37ee526e2737654b2b5ef7",
        "filename": "depends/packages/native_biplist.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 8,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/native_biplist.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/native_biplist.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_biplist.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "966804ce8bbf677fae5446219420532b86fdb800",
        "filename": "depends/packages/native_ccache.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/depends/packages/native_ccache.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/depends/packages/native_ccache.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ccache.mk?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "116fa25d38197b8add2c601ab7cd7b91c384f268",
        "filename": "depends/packages/native_ds_store.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/native_ds_store.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/native_ds_store.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ds_store.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "306c8356567bcef2100ab5c265d3713d793913b4",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 10,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "db47113b2f9b844c24f14f41a7a87bf0cbf05aa4",
        "filename": "depends/packages/openssl.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "5fe6f98da244ffc2b4de0c67ab89b6be311be3cf",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "d201d1183f166e3f56c30a71beed4a84499154e6",
        "filename": "depends/packages/protobuf.mk",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/protobuf.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "313e4adf2ae6f61ae4bf02a0237989b8d5b9e96d",
        "filename": "depends/packages/qrencode.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "422a1c2b19d8a99f44148f22fd1b2b7a01ef65e5",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 31,
        "deletions": 29,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "7065237bd562bea67c27c04eff8e115ae3bbf213",
        "filename": "depends/packages/xextproto.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/xextproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/xextproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xextproto.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "5328ec84819d14d50d6c867ac2e7069cf8e738cb",
        "filename": "depends/packages/xproto.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/xproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/xproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xproto.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "c313b1f609b0bb6962842b9b52075559aa8c58a7",
        "filename": "depends/packages/xtrans.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/xtrans.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/xtrans.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xtrans.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "d5fd1f39ab8a6ca197124e8dc0b19d708bfd385c",
        "filename": "depends/packages/zeromq.mk",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "89abdb1b71ff81ffdcab8b138ae86d53b4a07442",
        "filename": "depends/patches/native_biplist/sorted_list.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/depends/patches/native_biplist/sorted_list.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/depends/patches/native_biplist/sorted_list.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_biplist/sorted_list.patch?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "1a32340be5b13ae1d5be3e775462c3052c12953a",
        "filename": "depends/patches/native_mac_alias/python3.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 72,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/depends/patches/native_mac_alias/python3.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/depends/patches/native_mac_alias/python3.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_mac_alias/python3.patch?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "ec2bc17d9bd9e032acfec9e34ea6afbbbb7e79f2",
        "filename": "depends/patches/qt/fix-xcb-include-order.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 49,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/depends/patches/qt/fix-xcb-include-order.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/depends/patches/qt/fix-xcb-include-order.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix-xcb-include-order.patch?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "0d7dd647debca93eb5383ee72f6d4db573dabaac",
        "filename": "depends/patches/qt/fix_configure_mac.patch",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/patches/qt/fix_configure_mac.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/patches/qt/fix_configure_mac.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_configure_mac.patch?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "f868ca25775547188620644ae02881edeaa06a8d",
        "filename": "depends/patches/qt/fix_no_printer.patch",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/patches/qt/fix_no_printer.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/patches/qt/fix_no_printer.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_no_printer.patch?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "c1b07fe23afdbd7a2f204811e2aad132bd2d9dff",
        "filename": "depends/patches/qt/fix_rcc_determinism.patch",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/patches/qt/fix_rcc_determinism.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/patches/qt/fix_rcc_determinism.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_rcc_determinism.patch?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "e7f29f01f9cd7f250b86bbd038175aa6a0fb35b0",
        "filename": "depends/patches/qt/fix_riscv64_arch.patch",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/patches/qt/fix_riscv64_arch.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/patches/qt/fix_riscv64_arch.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_riscv64_arch.patch?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "337d0eb9caf6eaf1bfad8aa24853063c96f6b85b",
        "filename": "depends/patches/qt/mac-qmake.conf",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/patches/qt/mac-qmake.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/patches/qt/mac-qmake.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mac-qmake.conf?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "fb21923c8c36b60c337c20a9e8002fc593f5716d",
        "filename": "depends/patches/qt/mingw-uuidof.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 44,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/depends/patches/qt/mingw-uuidof.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/depends/patches/qt/mingw-uuidof.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mingw-uuidof.patch?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "c792824179056473fe97fa8f876f36ca950a6c80",
        "filename": "depends/patches/qt/pidlist_absolute.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/depends/patches/qt/pidlist_absolute.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/depends/patches/qt/pidlist_absolute.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/pidlist_absolute.patch?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "a6c508fb8a1e6c14e61c28ac2299fdcf7823d181",
        "filename": "depends/patches/zeromq/0001-fix-build-with-older-mingw64.patch",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/patches/zeromq/0001-fix-build-with-older-mingw64.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/patches/zeromq/0001-fix-build-with-older-mingw64.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/0001-fix-build-with-older-mingw64.patch?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "d220b54f3ecdbae3605be72dbcd0c6b2c5ee85f7",
        "filename": "depends/patches/zeromq/0002-disable-pthread_set_name_np.patch",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/patches/zeromq/0002-disable-pthread_set_name_np.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/depends/patches/zeromq/0002-disable-pthread_set_name_np.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/0002-disable-pthread_set_name_np.patch?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "f704b3d94fda8a2bd90ac422c8b267b02bc60f5c",
        "filename": "depends/patches/zeromq/9114d3957725acd34aa8b8d011585812f3369411.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/depends/patches/zeromq/9114d3957725acd34aa8b8d011585812f3369411.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/depends/patches/zeromq/9114d3957725acd34aa8b8d011585812f3369411.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/9114d3957725acd34aa8b8d011585812f3369411.patch?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "9aff2c179a1982e6af89a410d06c42d1a0fbad90",
        "filename": "depends/patches/zeromq/9e6745c12e0b100cd38acecc16ce7db02905e27c.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/depends/patches/zeromq/9e6745c12e0b100cd38acecc16ce7db02905e27c.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/depends/patches/zeromq/9e6745c12e0b100cd38acecc16ce7db02905e27c.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/9e6745c12e0b100cd38acecc16ce7db02905e27c.patch?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "5ffff825b43a9b8c1c4ac53ec9cd3410ab03b8ef",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "739e22d6341cd30bb9e28b396cf4438bc5feb5b9",
        "filename": "doc/README_osx.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/README_osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/README_osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "7010edfcd38f2fa1eff002c0f952e6702515195d",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 25,
        "deletions": 20,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "48f81cf6c18fcbdff709513c3cc2a110bc343df1",
        "filename": "doc/benchmarking.md",
        "status": "modified",
        "additions": 38,
        "deletions": 13,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "76edc94c29b2067f3c308bb7d65883c395eff96a",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "48746ce0c2ca444afd21a68ab0828cb09beade13",
        "filename": "doc/build-freebsd.md",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/build-freebsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/build-freebsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-freebsd.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "5bf2d6b59b870fb5678e55936ab2b47300a4682b",
        "filename": "doc/build-netbsd.md",
        "status": "added",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/build-netbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/build-netbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-netbsd.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "63288acf16108d1d69515152812cc58efbeb3d9b",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 49,
        "deletions": 119,
        "changes": 168,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "448918e8cb439b2efa97d0e5cc137c713aaf2a87",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 23,
        "deletions": 26,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "a01ff59fa6f73ef49b872817654cc964a645d2b7",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 32,
        "deletions": 92,
        "changes": 124,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "12adadacdc149604d88bc7623c5ae1b52bf1d3ca",
        "filename": "doc/build-windows.md",
        "status": "modified",
        "additions": 78,
        "deletions": 32,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "3fc7aecba8a40d7a48723e9e5e3fc43ab6d1a0d5",
        "filename": "doc/dependencies.md",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "da8384c53791426589057f577c6fa250a463c6ce",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 421,
        "deletions": 63,
        "changes": 484,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "5657b1e6cbebb7d3424836b56bff78036017e7b2",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "3a48f4a0b397770e44f51477df854f8298ce1b75",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 1,
        "deletions": 476,
        "changes": 477,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "8cbb0d8adc1deda1c7c4023611b65521e054ff69",
        "filename": "doc/gitian-building/all_files_in_one_partition.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/all_files_in_one_partition.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/all_files_in_one_partition.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/all_files_in_one_partition.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "dd22428e176b874afb2f5b9d1b018592fb0175d0",
        "filename": "doc/gitian-building/create_new_vm.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/create_new_vm.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/create_new_vm.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_new_vm.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "5f77206b6fa8f9f0f1bbd6d02819d67bf18327ad",
        "filename": "doc/gitian-building/create_vm_file_location_size.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/create_vm_file_location_size.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/create_vm_file_location_size.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_file_location_size.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "8e29816fab9e7c8f97338ed43f0893f655134a5f",
        "filename": "doc/gitian-building/create_vm_hard_disk.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/create_vm_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/create_vm_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "a157211cf5baf909149e73fddfc2556305f4b123",
        "filename": "doc/gitian-building/create_vm_hard_disk_file_type.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk_file_type.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "6f42cda73f3cabb02e39ae0309ac67f419a168c7",
        "filename": "doc/gitian-building/create_vm_memsize.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/create_vm_memsize.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/create_vm_memsize.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_memsize.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "cee16a6c63b4f2dcd592ae8c9cdc02f278fbad81",
        "filename": "doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_storage_physical_hard_disk.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "7cda038ae47f97ddfaa905478599cafc6572dd1f",
        "filename": "doc/gitian-building/debian_install_10_configure_clock.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_10_configure_clock.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_10_configure_clock.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_10_configure_clock.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "2a648c517f429fb937275d5444a58f4830e8eae4",
        "filename": "doc/gitian-building/debian_install_11_partition_disks.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_11_partition_disks.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_11_partition_disks.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_11_partition_disks.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "0f3acc498e3e9cc04692a9c557a8eecb5029dc25",
        "filename": "doc/gitian-building/debian_install_12_choose_disk.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_12_choose_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_12_choose_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_12_choose_disk.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "c8ef0b37ad6232f87593ea448beaba089b568a91",
        "filename": "doc/gitian-building/debian_install_14_finish.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_14_finish.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_14_finish.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_14_finish.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "d8de00dec68c826485034c698079e5808f7dadfd",
        "filename": "doc/gitian-building/debian_install_15_write_changes.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_15_write_changes.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_15_write_changes.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_15_write_changes.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "0bd985b38c113ed9bbbe03808ace284476680edc",
        "filename": "doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_16_choose_a_mirror.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "2c19919f64b62d89883dc8e1308f179978b95ca4",
        "filename": "doc/gitian-building/debian_install_18_proxy_settings.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_18_proxy_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_18_proxy_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_18_proxy_settings.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "5430456b14f098d9e3561653352b826d19a2c38a",
        "filename": "doc/gitian-building/debian_install_19_software_selection.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_19_software_selection.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_19_software_selection.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_19_software_selection.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "216502e1c6eb6930ce60c1a36e7476e6fb8781d9",
        "filename": "doc/gitian-building/debian_install_1_boot_menu.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_1_boot_menu.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_1_boot_menu.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_1_boot_menu.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "d853c1587188c5fd4ede94ab00f9d8b6731674ac",
        "filename": "doc/gitian-building/debian_install_20_install_grub.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_20_install_grub.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_20_install_grub.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_20_install_grub.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "493ab806a673f5c8ee47db0bb5de6af0d5042b03",
        "filename": "doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_21_install_grub_bootloader.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "7c4445585bc9982a5015959dba70d73b01885e08",
        "filename": "doc/gitian-building/debian_install_22_finish_installation.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_22_finish_installation.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_22_finish_installation.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_22_finish_installation.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "0228ae2c011daeababc75b915a12b28b702456c0",
        "filename": "doc/gitian-building/debian_install_2_select_a_language.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_2_select_a_language.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_2_select_a_language.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_2_select_a_language.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "7b18fba97577b521944f909ed57fd251942a9eab",
        "filename": "doc/gitian-building/debian_install_3_select_location.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_3_select_location.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_3_select_location.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_3_select_location.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "8e46117de4879a6de8b276813bef12c219cb4e8b",
        "filename": "doc/gitian-building/debian_install_4_configure_keyboard.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_4_configure_keyboard.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "8e3720f24322a54ef33893e8eff95383158bf3d9",
        "filename": "doc/gitian-building/debian_install_5_configure_the_network.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_5_configure_the_network.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_5_configure_the_network.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_5_configure_the_network.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "7a986d92f48ca3755e37993d098053321109751d",
        "filename": "doc/gitian-building/debian_install_6_domain_name.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_6_domain_name.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_6_domain_name.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6_domain_name.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "dcade119676ed7e0c0f92cff6d6a064929a07a07",
        "filename": "doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6a_set_up_root_password.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "6763c6e08ade2b17f050da257a76132f916e38f5",
        "filename": "doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_7_set_up_user_fullname.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "bb04de96d23bdaa3e29fbe19891e42b881dd0a99",
        "filename": "doc/gitian-building/debian_install_8_set_up_username.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_8_set_up_username.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_8_set_up_username.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_8_set_up_username.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "981f1181d79d0d7fe2138f036d0f1bb41ec472fa",
        "filename": "doc/gitian-building/debian_install_9_user_password.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_9_user_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_install_9_user_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_9_user_password.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "14cdd5ba5b52cc32fbc0da62cf3671c3679b8d79",
        "filename": "doc/gitian-building/debian_root_login.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_root_login.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/debian_root_login.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_root_login.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "9e714fd15451837980b9d12a931c294fc962b2a2",
        "filename": "doc/gitian-building/network_settings.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/network_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/network_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/network_settings.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "9e1fa2af20f48d482892b722b7288600bece322a",
        "filename": "doc/gitian-building/port_forwarding_rules.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/port_forwarding_rules.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/port_forwarding_rules.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/port_forwarding_rules.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "59bc093e2c3d35bee0d1bdc50f11f2cf2a6fdafe",
        "filename": "doc/gitian-building/select_startup_disk.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/select_startup_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/doc/gitian-building/select_startup_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/select_startup_disk.png?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "239b74e4e1d75ec50532c0214337d3b4c66501fd",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 20,
        "deletions": 16,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "bf24d929bc39c0c1e6d368560d12c7b06a3fe6ef",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "modified",
        "additions": 53,
        "deletions": 25,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "3a18c9f49fb280132c31a2bbac2f6f38fb03da3a",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "modified",
        "additions": 198,
        "deletions": 127,
        "changes": 325,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "e1b81bad6cb26fd43c17024828b4b0da1ad837ad",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "modified",
        "additions": 19,
        "deletions": 20,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "d0ba131cde724cd7ffa5c500b028bea26de073a7",
        "filename": "doc/man/bitcoind.1",
        "status": "modified",
        "additions": 190,
        "deletions": 123,
        "changes": 313,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "dd1469f5638e0c12dc89b12ee79f80472df118c3",
        "filename": "doc/reduce-traffic.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "d3ba067657e9afa6cda6eb2541e3f4faade1d48e",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 36,
        "deletions": 56,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "0ad554b7738c17a4017b57234fce1132f9a9ed45",
        "filename": "doc/release-notes/release-notes-0.14.2.md",
        "status": "added",
        "additions": 102,
        "deletions": 0,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-notes/release-notes-0.14.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-notes/release-notes-0.14.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.2.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "53ab02cbb0242957ba3697655d848a9461ab7455",
        "filename": "doc/release-notes/release-notes-0.15.0.1.md",
        "status": "added",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-notes/release-notes-0.15.0.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-notes/release-notes-0.15.0.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.0.1.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "3d000e94d59c98b1dc43fbcf5795627a95457e0c",
        "filename": "doc/release-notes/release-notes-0.15.0.md",
        "status": "added",
        "additions": 878,
        "deletions": 0,
        "changes": 878,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-notes/release-notes-0.15.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-notes/release-notes-0.15.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.0.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "75d2e097142499137a07a65bd35c2a4b91d9cd33",
        "filename": "doc/release-notes/release-notes-0.15.1.md",
        "status": "added",
        "additions": 277,
        "deletions": 0,
        "changes": 277,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-notes/release-notes-0.15.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-notes/release-notes-0.15.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.1.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "8f158b3481cfa033cf05400581cb0319fb8e3c45",
        "filename": "doc/release-notes/release-notes-0.16.0.md",
        "status": "added",
        "additions": 720,
        "deletions": 0,
        "changes": 720,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-notes/release-notes-0.16.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-notes/release-notes-0.16.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.16.0.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "d99361ae1d2863de53f549c7178375d542f3f168",
        "filename": "doc/release-notes/release-notes-0.16.1.md",
        "status": "added",
        "additions": 145,
        "deletions": 0,
        "changes": 145,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-notes/release-notes-0.16.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-notes/release-notes-0.16.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.16.1.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "d549748d25ebfed36316142959f801079421fd0a",
        "filename": "doc/release-notes/release-notes-0.16.2.md",
        "status": "added",
        "additions": 116,
        "deletions": 0,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-notes/release-notes-0.16.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-notes/release-notes-0.16.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.16.2.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "3ba622ee6db1cff63e240081768ead51703410c6",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 38,
        "deletions": 38,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "2d0676c89aaf0d6090de3b1be5dd6c623a0da7c2",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 29,
        "deletions": 33,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "19f145e9bff5fe3615234ee12617900c32b9e858",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 3,
        "deletions": 9,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "737d11f045ccd5f69218b5c5121f37f076515bce",
        "filename": "doc/translation_strings_policy.md",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/translation_strings_policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/translation_strings_policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_strings_policy.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "5d67df9d22117513c21580f7559d00517b3dcc82",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "beb0d7073c0d27596dce49fe58aa2b05307bea7f",
        "filename": "share/certs/BitcoinFoundation_Apple_Cert.pem",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/share/certs/BitcoinFoundation_Apple_Cert.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/share/certs/BitcoinFoundation_Apple_Cert.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/BitcoinFoundation_Apple_Cert.pem?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "dc752d455c911113eac90c4a601925ce6dd59f5f",
        "filename": "share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/BitcoinFoundation_Comodo_Cert.pem?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "8d50144c21f9bd3726b9b12e09e8c3ff44d6e595",
        "filename": "share/certs/PrivateKeyNotes.md",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/share/certs/PrivateKeyNotes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/share/certs/PrivateKeyNotes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/PrivateKeyNotes.md?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "4dd73162a238b848c1d6ccf1b35540256b3b7d15",
        "filename": "share/examples/bitcoin.conf",
        "status": "renamed",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/examples/bitcoin.conf?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "previous_filename": "contrib/debian/examples/bitcoin.conf"
      },
      {
        "sha": "38c9ba176cf8535a66791f6121d349ad6f8c9af2",
        "filename": "share/genbuild.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/genbuild.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/genbuild.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/genbuild.sh?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "f54e249a0c1e77003e93d9f9a0f1325caa859e42",
        "filename": "share/pixmaps/nsis-header.bmp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/pixmaps/nsis-header.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/pixmaps/nsis-header.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/nsis-header.bmp?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "14349528853f1198bfdbf7f9f180a5618820ef76",
        "filename": "share/pixmaps/nsis-wizard.bmp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/pixmaps/nsis-wizard.bmp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/pixmaps/nsis-wizard.bmp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/nsis-wizard.bmp?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "17b4ee47dea5697f02f6ad6829f35a3b156c52c7",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "76ef12eeece04c9f209cf437ea2312a2c65f1e9d",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "20d16f0a974f5b6c179b495de0fd3eb1bd6bfce8",
        "filename": "share/rpcauth/README.md",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/rpcauth/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/rpcauth/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcauth/README.md?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "13bef3d37a7adf1208a085d9dc6133f7ee1c8344",
        "filename": "share/rpcauth/rpcauth.py",
        "status": "added",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/rpcauth/rpcauth.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/rpcauth/rpcauth.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcauth/rpcauth.py?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "12a8e6fb0cc5b9458cf1ca430ed8e497096dfeeb",
        "filename": "share/rpcuser/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/share/rpcuser/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/share/rpcuser/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcuser/README.md?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "63c69e308af24404eb6ba96e458747a87535c09f",
        "filename": "share/rpcuser/rpcuser.py",
        "status": "removed",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4314544d46e8e46c3c9da60f1d18297f52f58418/share/rpcuser/rpcuser.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4314544d46e8e46c3c9da60f1d18297f52f58418/share/rpcuser/rpcuser.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcuser/rpcuser.py?ref=4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "9fee9b42e00156616ed393c22235beb1c54ef972",
        "filename": "share/setup.nsi.in",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/setup.nsi.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/share/setup.nsi.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi.in?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "38e19edf2c4713bc5874c13508ffdf0992fd3120",
        "filename": "src/.clang-format",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/.clang-format",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/.clang-format",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/.clang-format?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "d1693fa85ccabc1e9b2f8716c361b6089296f150",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 96,
        "deletions": 23,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "f5293585a0bab25eb98610537f6028aee75ee2d0",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 12,
        "deletions": 9,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "833f3d2a10cac9465c72045bc244e3efc76156c8",
        "filename": "src/Makefile.leveldb.include",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/Makefile.leveldb.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/Makefile.leveldb.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.leveldb.include?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "c7a19631359b643754d6225fe58c3af5cabf25ae",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "4b14212b2ebaf1d1595a959b94e55c5f46d5a8b7",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "6f401636f525ff7bb4e67a2d6f38230b6721ce17",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 47,
        "deletions": 26,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "3eae2b512782d1e7b7b12a834c07b59bdda34c1b",
        "filename": "src/addrdb.cpp",
        "status": "modified",
        "additions": 83,
        "deletions": 155,
        "changes": 238,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/addrdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/addrdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.cpp?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "90eca44bdbb0286ee0a113641188b683f9d2b791",
        "filename": "src/addrdb.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/addrdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/addrdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.h?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "093b263ab39f31f62d2dcb2ea3749205839be2bb",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 110,
        "deletions": 19,
        "changes": 129,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "cf1949c28cf7b0fa127ca7e135815d3c23154a6c",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 60,
        "deletions": 20,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "13fa176f8bfe6cbf0f4fccf164a6efa642e395ee",
        "filename": "src/arith_uint256.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 9,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/arith_uint256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/arith_uint256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.cpp?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "5cc273be27e3459a8a9a2198425b481b922ae7e1",
        "filename": "src/arith_uint256.h",
        "status": "modified",
        "additions": 13,
        "deletions": 15,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/arith_uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/arith_uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.h?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "7020c240553282a57605114667e381c19d403d35",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 185,
        "changes": 212,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "9d3f90652ea85692c99f042d4d233c5ae68ad8cd",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 5,
        "deletions": 114,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "c55f22b9b75f1aa2ee6e5403aacd8b261daae943",
        "filename": "src/bech32.cpp",
        "status": "added",
        "additions": 192,
        "deletions": 0,
        "changes": 192,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/bech32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/bech32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bech32.cpp?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      },
      {
        "sha": "2e2823e974ef81b92859c6c02a778c2f1916f4a7",
        "filename": "src/bech32.h",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/bech32.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfdb9b53d54bf41becf656afd7adee54adb64b25/src/bech32.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bech32.h?ref=dfdb9b53d54bf41becf656afd7adee54adb64b25"
      }
    ]
  },
  {
    "sha": "b7509e199da0e5e9c7c087d48048378406ddda3e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNzUwOWUxOTlkYTBlNWU5YzdjMDg3ZDQ4MDQ4Mzc4NDA2ZGRkYTNl",
    "commit": {
      "author": {
        "name": "3s3s",
        "email": "ivanivanovkzv@gmail.com",
        "date": "2018-08-17T13:37:18Z"
      },
      "committer": {
        "name": "3s3s",
        "email": "ivanivanovkzv@gmail.com",
        "date": "2018-08-17T13:37:18Z"
      },
      "message": "add help file for compilation in one command",
      "tree": {
        "sha": "9fd7a871602cb244c13eb11d2fd5cc3201f2f541",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9fd7a871602cb244c13eb11d2fd5cc3201f2f541"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b7509e199da0e5e9c7c087d48048378406ddda3e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7509e199da0e5e9c7c087d48048378406ddda3e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b7509e199da0e5e9c7c087d48048378406ddda3e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7509e199da0e5e9c7c087d48048378406ddda3e/comments",
    "author": {
      "login": "3s3s",
      "id": 6649319,
      "node_id": "MDQ6VXNlcjY2NDkzMTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6649319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3s3s",
      "html_url": "https://github.com/3s3s",
      "followers_url": "https://api.github.com/users/3s3s/followers",
      "following_url": "https://api.github.com/users/3s3s/following{/other_user}",
      "gists_url": "https://api.github.com/users/3s3s/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3s3s/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3s3s/subscriptions",
      "organizations_url": "https://api.github.com/users/3s3s/orgs",
      "repos_url": "https://api.github.com/users/3s3s/repos",
      "events_url": "https://api.github.com/users/3s3s/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3s3s/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "3s3s",
      "id": 6649319,
      "node_id": "MDQ6VXNlcjY2NDkzMTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6649319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3s3s",
      "html_url": "https://github.com/3s3s",
      "followers_url": "https://api.github.com/users/3s3s/followers",
      "following_url": "https://api.github.com/users/3s3s/following{/other_user}",
      "gists_url": "https://api.github.com/users/3s3s/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3s3s/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3s3s/subscriptions",
      "organizations_url": "https://api.github.com/users/3s3s/orgs",
      "repos_url": "https://api.github.com/users/3s3s/repos",
      "events_url": "https://api.github.com/users/3s3s/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3s3s/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfdb9b53d54bf41becf656afd7adee54adb64b25",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dfdb9b53d54bf41becf656afd7adee54adb64b25"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 34,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b37257872b6ebe997514aa448b04d5d26ece0fe3",
        "filename": "doc/build-onecommand.md",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7509e199da0e5e9c7c087d48048378406ddda3e/doc/build-onecommand.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7509e199da0e5e9c7c087d48048378406ddda3e/doc/build-onecommand.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-onecommand.md?ref=b7509e199da0e5e9c7c087d48048378406ddda3e",
        "patch": "@@ -0,0 +1,34 @@\n+This one console command will build last (0.16.2) version Bitcoin for Linux 64 bit, Windows 64 bit and Windows 32 bit. \n+\n+Has been tested on the clean server with Ubuntu 16 (64 bit)\n+\n+```bash\n+cd ~ && sudo apt-get update && apt-get upgrade -y && apt-get install build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev -y && apt-get update -y && add-apt-repository ppa:bitcoin/bitcoin && apt-get update -y && apt-get install libdb4.8-dev libdb4.8++-dev libminiupnpc-dev libzmq3-dev libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler libqrencode-dev g++-mingw-w64-i686 mingw-w64-i686-dev g++-mingw-w64-x86-64 mingw-w64-x86-64-dev curl -y && update-alternatives --config x86_64-w64-mingw32-g++ &&  wget https://github.com/bitcoin/bitcoin/archive/v0.16.2.tar.gz && tar -xvzf v0.16.2.tar.gz && cd bitcoin-0.16.2/depends && make download && make && cd .. && ./autogen.sh && ./configure --enable-glibc-back-compat --prefix=`pwd`/depends/x86_64-pc-linux-gnu LDFLAGS=\"-static-libstdc++\" && make clean && make && make install && cd depends && make HOST=x86_64-w64-mingw32 -j4 && cd .. && ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32 && make clean && make && make install && cd depends && make HOST=i686-w64-mingw32 -j4 && cd .. && ./configure --prefix=`pwd`/depends/i686-w64-mingw32 && make clean && make && make install\n+```\n+\n+First you will asked \n+```bash\n+Press [ENTER] to continue or ctrl-c to cancel adding it\n+```\n+you should to press Enter\n+\n+After some time you will asked\n+```bash\n+  Selection    Path                                   Priority   Status\n+------------------------------------------------------------\n+* 0            /usr/bin/x86_64-w64-mingw32-g++-win32   60        auto mode\n+  1            /usr/bin/x86_64-w64-mingw32-g++-posix   30        manual mode\n+  2            /usr/bin/x86_64-w64-mingw32-g++-win32   60        manual mode\n+\n+Press <enter> to keep the current choice[*], or type selection number:\n+```\n+select \"1\" for switching to posix and press Enter\n+\n+\n+When command will complete working, Linux binaries will be in this folder ~/bitcoin-0.16.2/depends/x86-64-pc-linux-gnu/bin\n+\n+Windows binaries will be in this folders: \n+\n+~/bitcoin-0.16.2/depends/x86-64-w64-mingw32 (Windows 64 bit binaries)\n+\n+~/bitcoin-0.16.2/depends/i686-w64-mingw32 (Windows 32 bit binaries)\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "fa8bd1e54a27267b9bb09d9817e5dc47935df493",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYThiZDFlNTRhMjcyNjdiOWJiMDlkOTgxN2U1ZGM0NzkzNWRmNDkz",
    "commit": {
      "author": {
        "name": "3s3s",
        "email": "ivanivanovkzv@gmail.com",
        "date": "2018-08-17T15:04:46Z"
      },
      "committer": {
        "name": "3s3s",
        "email": "ivanivanovkzv@gmail.com",
        "date": "2018-08-17T15:04:46Z"
      },
      "message": "add help file for compilation in one command",
      "tree": {
        "sha": "3caf3446a20fd3bffde77a20d52042badd4f95c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3caf3446a20fd3bffde77a20d52042badd4f95c3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa8bd1e54a27267b9bb09d9817e5dc47935df493",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8bd1e54a27267b9bb09d9817e5dc47935df493",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8bd1e54a27267b9bb09d9817e5dc47935df493",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8bd1e54a27267b9bb09d9817e5dc47935df493/comments",
    "author": {
      "login": "3s3s",
      "id": 6649319,
      "node_id": "MDQ6VXNlcjY2NDkzMTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6649319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3s3s",
      "html_url": "https://github.com/3s3s",
      "followers_url": "https://api.github.com/users/3s3s/followers",
      "following_url": "https://api.github.com/users/3s3s/following{/other_user}",
      "gists_url": "https://api.github.com/users/3s3s/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3s3s/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3s3s/subscriptions",
      "organizations_url": "https://api.github.com/users/3s3s/orgs",
      "repos_url": "https://api.github.com/users/3s3s/repos",
      "events_url": "https://api.github.com/users/3s3s/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3s3s/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "3s3s",
      "id": 6649319,
      "node_id": "MDQ6VXNlcjY2NDkzMTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6649319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3s3s",
      "html_url": "https://github.com/3s3s",
      "followers_url": "https://api.github.com/users/3s3s/followers",
      "following_url": "https://api.github.com/users/3s3s/following{/other_user}",
      "gists_url": "https://api.github.com/users/3s3s/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3s3s/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3s3s/subscriptions",
      "organizations_url": "https://api.github.com/users/3s3s/orgs",
      "repos_url": "https://api.github.com/users/3s3s/repos",
      "events_url": "https://api.github.com/users/3s3s/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3s3s/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b7509e199da0e5e9c7c087d48048378406ddda3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7509e199da0e5e9c7c087d48048378406ddda3e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b7509e199da0e5e9c7c087d48048378406ddda3e"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 25,
      "deletions": 3
    },
    "files": [
      {
        "sha": "41d5871d306c12254ab3e2dd4732744e6c8d328f",
        "filename": "doc/build-onecommand.md",
        "status": "modified",
        "additions": 25,
        "deletions": 3,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8bd1e54a27267b9bb09d9817e5dc47935df493/doc/build-onecommand.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8bd1e54a27267b9bb09d9817e5dc47935df493/doc/build-onecommand.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-onecommand.md?ref=fa8bd1e54a27267b9bb09d9817e5dc47935df493",
        "patch": "@@ -1,6 +1,7 @@\n-This one console command will build last (0.16.2) version Bitcoin for Linux 64 bit, Windows 64 bit and Windows 32 bit. \n+### Instruction\n+This console command will build last (0.16.2) version Bitcoin clients for Linux 64 bit, Windows 64 bit and Windows 32 bit. \n \n-Has been tested on the clean server with Ubuntu 16 (64 bit)\n+Has been tested on the clean server with Ubuntu 16 (64 bit 4GB RAM) \n \n ```bash\n cd ~ && sudo apt-get update && apt-get upgrade -y && apt-get install build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev -y && apt-get update -y && add-apt-repository ppa:bitcoin/bitcoin && apt-get update -y && apt-get install libdb4.8-dev libdb4.8++-dev libminiupnpc-dev libzmq3-dev libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler libqrencode-dev g++-mingw-w64-i686 mingw-w64-i686-dev g++-mingw-w64-x86-64 mingw-w64-x86-64-dev curl -y && update-alternatives --config x86_64-w64-mingw32-g++ &&  wget https://github.com/bitcoin/bitcoin/archive/v0.16.2.tar.gz && tar -xvzf v0.16.2.tar.gz && cd bitcoin-0.16.2/depends && make download && make && cd .. && ./autogen.sh && ./configure --enable-glibc-back-compat --prefix=`pwd`/depends/x86_64-pc-linux-gnu LDFLAGS=\"-static-libstdc++\" && make clean && make && make install && cd depends && make HOST=x86_64-w64-mingw32 -j4 && cd .. && ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32 && make clean && make && make install && cd depends && make HOST=i686-w64-mingw32 -j4 && cd .. && ./configure --prefix=`pwd`/depends/i686-w64-mingw32 && make clean && make && make install\n@@ -24,11 +25,32 @@ Press <enter> to keep the current choice[*], or type selection number:\n ```\n select \"1\" for switching to posix and press Enter\n \n+After this you will asked\n+\n+```bash\n+  Selection    Path                                 Priority   Status\n+------------------------------------------------------------\n+* 0            /usr/bin/i686-w64-mingw32-g++-win32   60        auto mode\n+  1            /usr/bin/i686-w64-mingw32-g++-posix   30        manual mode\n+  2            /usr/bin/i686-w64-mingw32-g++-win32   60        manual mode\n+\n+Press <enter> to keep the current choice[*], or type selection number:\n+```\n+Again select \"1\" for switching to posix and press Enter\n+\n \n When command will complete working, Linux binaries will be in this folder ~/bitcoin-0.16.2/depends/x86-64-pc-linux-gnu/bin\n \n Windows binaries will be in this folders: \n \n ~/bitcoin-0.16.2/depends/x86-64-w64-mingw32 (Windows 64 bit binaries)\n \n-~/bitcoin-0.16.2/depends/i686-w64-mingw32 (Windows 32 bit binaries)\n\\ No newline at end of file\n+~/bitcoin-0.16.2/depends/i686-w64-mingw32 (Windows 32 bit binaries)\n+\n+### Note\n+\n+If process will killed then may be you have not enough RAM. You can increase it or use this coomand instead\n+\n+```bash\n+sudo fallocate -l 4G /swapfile && sudo chmod 600 /swapfile && sudo mkswap /swapfile && sudo swapon /swapfile\n+```"
      }
    ]
  },
  {
    "sha": "f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmN2E5YjRjMmQ3NzM4YTU0N2FmYWIyMGQ1NDExYzY3NGNlZjhkZDFm",
    "commit": {
      "author": {
        "name": "Ivan Ivanov",
        "email": "kzv@narod.ru",
        "date": "2018-11-28T11:04:46Z"
      },
      "committer": {
        "name": "Ivan Ivanov",
        "email": "kzv@narod.ru",
        "date": "2018-11-28T11:04:46Z"
      },
      "message": "sync with btc",
      "tree": {
        "sha": "bfa2ab7313e7464cd99bf5d1a5903e6563e7dd9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bfa2ab7313e7464cd99bf5d1a5903e6563e7dd9f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "fa8bd1e54a27267b9bb09d9817e5dc47935df493",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8bd1e54a27267b9bb09d9817e5dc47935df493",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8bd1e54a27267b9bb09d9817e5dc47935df493"
      }
    ],
    "stats": {
      "total": 22475,
      "additions": 14499,
      "deletions": 7976
    },
    "files": [
      {
        "sha": "08b2fa609e589c03bfa4831a7eb31ca3ed645fa6",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -67,6 +67,8 @@ If a particular commit references another issue, please add the reference. For\n example: `refs #1234` or `fixes #4321`. Using the `fixes` or `closes` keywords\n will cause the corresponding issue to be closed when the pull request is merged.\n \n+Commit messages should never contain any `@` mentions.\n+\n Please refer to the [Git manual](https://git-scm.com/doc) for more information\n about Git.\n \n@@ -135,6 +137,10 @@ before it will be merged. The basic squashing workflow is shown below.\n     # Save and quit.\n     git push -f # (force push to GitHub)\n \n+Please update the resulting commit message if needed, it should read as a\n+coherent message. In most cases this means that you should not just list the\n+interim commits.\n+\n If you have problems with squashing (or other workflows with `git`), you can\n alternatively enable \"Allow edits from maintainers\" in the right GitHub\n sidebar and ask for help in the pull request."
      },
      {
        "sha": "9a6e15f0dd7727b779fb1376a159f714ed22d88b",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -19,6 +19,7 @@ endif\n BITCOIND_BIN=$(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n BITCOIN_QT_BIN=$(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n BITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n+BITCOIN_TX_BIN=$(top_builddir)/src/$(BITCOIN_TX_NAME)$(EXEEXT)\n BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n \n empty :=\n@@ -74,6 +75,7 @@ $(BITCOIN_WIN_INSTALLER): all-recursive\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_TX_BIN) $(top_builddir)/release\n \t@test -f $(MAKENSIS) && $(MAKENSIS) -V2 $(top_builddir)/share/setup.nsi || \\\n \t  echo error: could not build $@\n \t@echo built $@\n@@ -167,8 +169,11 @@ $(BITCOIND_BIN): FORCE\n $(BITCOIN_CLI_BIN): FORCE\n \t$(MAKE) -C src $(@F)\n \n+$(BITCOIN_TX_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n if USE_LCOV\n-LCOV_FILTER_PATTERN=-p \"/usr/include/\" -p \"src/leveldb/\" -p \"src/bench/\" -p \"src/univalue\" -p \"src/crypto/ctaes\" -p \"src/secp256k1\"\n+LCOV_FILTER_PATTERN=-p \"/usr/include/\" -p \"/usr/lib/\" -p \"src/leveldb/\" -p \"src/bench/\" -p \"src/univalue\" -p \"src/crypto/ctaes\" -p \"src/secp256k1\"\n \n baseline.info:\n \t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n@@ -294,5 +299,5 @@ clean-docs:\n \n clean-local: clean-docs\n \trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ test/tmp/ cache/ $(OSX_APP)\n-\trm -rf test/functional/__pycache__ test/functional/test_framework/__pycache__ test/cache\n+\trm -rf test/functional/__pycache__ test/functional/test_framework/__pycache__ test/cache share/rpcauth/__pycache__\n "
      },
      {
        "sha": "23577d54f917a7179197811fcdd4579e1827cbe5",
        "filename": "README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -31,7 +31,8 @@ The `master` branch is regularly built and tested, but is not guaranteed to be\n completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n regularly to indicate new official, stable release versions of Bitcoin Core.\n \n-The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n+The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md)\n+and useful hints for developers can be found in [doc/developer-notes.md](doc/developer-notes.md).\n \n Testing\n -------"
      },
      {
        "sha": "0c0c3d066b4a1167f7743eedb4ff65cbca2ba254",
        "filename": "appveyor.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8bd1e54a27267b9bb09d9817e5dc47935df493/appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8bd1e54a27267b9bb09d9817e5dc47935df493/appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/appveyor.yml?ref=fa8bd1e54a27267b9bb09d9817e5dc47935df493",
        "patch": "@@ -1,34 +0,0 @@\n-skip_tags: true\n-image: Visual Studio 2017\n-configuration: Release\n-platform: x64\n-environment:\n-  APPVEYOR_SAVE_CACHE_ON_ERROR: true\n-cache: C:\\tools\\vcpkg\\installed\\\n-before_build:\n-- ps: >-\n-    $packages = @(\n-        \"boost-filesystem\",\n-        \"boost-signals2\",\n-        \"boost-interprocess\",\n-        \"boost-test\",\n-        \"libevent\",\n-        \"openssl\",\n-        \"zeromq\",\n-        \"berkeleydb\",\n-        \"secp256k1\",\n-        \"leveldb\"\n-    )\n-\n-    for ($i=0; $i -lt $packages.length; $i++) {\n-        $all_packages += $packages[$i] + \":\" + $env:PLATFORM + \"-windows-static \"\n-    }\n-\n-    Invoke-Expression -Command \"vcpkg install $all_packages\"\n-build:\n-  project: build_msvc\\bitcoin.sln\n-  parallel: true\n-  verbosity: minimal\n-test_script:\n-- cmd: build_msvc\\%PLATFORM%\\Release\\test_bitcoin.exe\n-deploy: off"
      },
      {
        "sha": "90a2cd98759be82e1ae5babeedc2ad2772da2130",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -276,7 +276,7 @@ AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n       #endif\n     ]],\n     [[\n-      #if QT_VERSION < 0x050000 || QT_VERSION_MAJOR < 5\n+      #if QT_VERSION < 0x050200 || QT_VERSION_MAJOR < 5\n       choke\n       #endif\n     ]])],"
      },
      {
        "sha": "d5aa22c05e9cbaa41e409e590c01ab3c67802685",
        "filename": "build_msvc/.gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/.gitignore?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -8,3 +8,4 @@ packages/*\n */Release\n */x64\n *.vcxproj.user\n+*.vcxproj"
      },
      {
        "sha": "5fb08df8d7a622a7090ffb1aa80e05679369c7fa",
        "filename": "build_msvc/README.md",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/README.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -47,4 +47,10 @@ The instructions below use vcpkg to install the dependencies.\n     leveldb:x64-windows-static\n ```\n \n+- Use Python to generate *.vcxproj from Makefile\n+\n+```\n+    PS >python msvc-autogen.py\n+```\n+\n - Build in Visual Studio.\n\\ No newline at end of file"
      },
      {
        "sha": "5c87026efe69468eeb11848ca0674165301e8470",
        "filename": "build_msvc/common.vcxproj",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/common.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/common.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.vcxproj?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -12,4 +12,9 @@\n           Outputs=\"$(MSBuildThisFileDirectory)..\\src\\config\\bitcoin-config.h\">\n       <Copy SourceFiles=\"$(MSBuildThisFileDirectory)bitcoin_config.h\" DestinationFiles=\"$(MSBuildThisFileDirectory)..\\src\\config\\bitcoin-config.h\" />\n   </Target>\n+  <ItemDefinitionGroup>\n+    <ClCompile>\n+      <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n </Project>\n\\ No newline at end of file"
      },
      {
        "sha": "b7265054fbf61d522d8bccc30731a764b7910e58",
        "filename": "build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -20,7 +20,7 @@\n     </ProjectConfiguration>\n   </ItemGroup>\n   <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\rpc\\client.cpp\" />\n+@SOURCE_FILES@\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />",
        "previous_filename": "build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj"
      },
      {
        "sha": "42145c15ad7e8074a6be39985002a6ac8cc36b2e",
        "filename": "build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "status": "renamed",
        "additions": 1,
        "deletions": 37,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -165,43 +165,7 @@\n     </Link>\n   </ItemDefinitionGroup>\n   <ItemGroup>\n-    <ClInclude Include=\"..\\..\\src\\base58.h\" />\n-    <ClInclude Include=\"..\\..\\src\\bech32.h\" />\n-    <ClInclude Include=\"..\\..\\src\\chainparams.h\" />\n-    <ClInclude Include=\"..\\..\\src\\coins.h\" />\n-    <ClInclude Include=\"..\\..\\src\\compressor.h\" />\n-    <ClInclude Include=\"..\\..\\src\\key.h\" />\n-    <ClInclude Include=\"..\\..\\src\\keystore.h\" />\n-    <ClInclude Include=\"..\\..\\src\\netaddress.h\" />\n-    <ClInclude Include=\"..\\..\\src\\netbase.h\" />\n-    <ClInclude Include=\"..\\..\\src\\policy\\feerate.h\" />\n-    <ClInclude Include=\"..\\..\\src\\protocol.h\" />\n-    <ClInclude Include=\"..\\..\\src\\scheduler.h\" />\n-    <ClInclude Include=\"..\\..\\src\\script\\sign.h\" />\n-    <ClInclude Include=\"..\\..\\src\\script\\standard.h\" />\n-    <ClInclude Include=\"..\\..\\src\\warnings.h\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\base58.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bech32.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\chainparams.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\coins.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\compressor.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\core_read.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\core_write.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\key.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\key_io.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\keystore.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\netaddress.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\netbase.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\policy\\feerate.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\protocol.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\scheduler.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\script\\descriptor.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\script\\sign.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\script\\ismine.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\script\\standard.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\warnings.cpp\" />\n+@SOURCE_FILES@\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />",
        "previous_filename": "build_msvc/libbitcoin_common/libbitcoin_common.vcxproj"
      },
      {
        "sha": "a05125723a82ab8b72844a11e821f38b587284e9",
        "filename": "build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "status": "renamed",
        "additions": 1,
        "deletions": 19,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -151,25 +151,7 @@\n     </Link>\n   </ItemDefinitionGroup>\n   <ItemGroup>\n-    <ClInclude Include=\"..\\..\\src\\crypto\\aes.h\" />\n-    <ClInclude Include=\"..\\..\\src\\crypto\\chacha20.h\" />\n-    <ClInclude Include=\"..\\..\\src\\crypto\\common.h\" />\n-    <ClInclude Include=\"..\\..\\src\\crypto\\hmac_sha256.h\" />\n-    <ClInclude Include=\"..\\..\\src\\crypto\\hmac_sha512.h\" />\n-    <ClInclude Include=\"..\\..\\src\\crypto\\ripemd160.h\" />\n-    <ClInclude Include=\"..\\..\\src\\crypto\\sha1.h\" />\n-    <ClInclude Include=\"..\\..\\src\\crypto\\sha256.h\" />\n-    <ClInclude Include=\"..\\..\\src\\crypto\\sha512.h\" />\n-  </ItemGroup>\n-  <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\crypto\\aes.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\chacha20.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\hmac_sha256.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\hmac_sha512.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\ripemd160.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\sha1.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\sha256.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\crypto\\sha512.cpp\" />\n+@SOURCE_FILES@\n   </ItemGroup>\n   <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n </Project>",
        "previous_filename": "build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj"
      },
      {
        "sha": "0a165d0b75ea9d338c9e5aeeb12b4129deeb0299",
        "filename": "build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "status": "renamed",
        "additions": 1,
        "deletions": 41,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -154,53 +154,13 @@\n     </Link>\n   </ItemDefinitionGroup>\n   <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\addrdb.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\addrman.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\blockencodings.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\bloom.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\chain.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\checkpoints.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\consensus\\tx_verify.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\dbwrapper.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\httprpc.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\httpserver.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\index\\base.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\init.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\merkleblock.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\miner.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\net.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\net_processing.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\noui.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\outputtype.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\policy\\fees.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\policy\\policy.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\policy\\rbf.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\pow.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\rest.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\shutdown.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\rpc\\blockchain.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\rpc\\mining.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\rpc\\misc.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\rpc\\net.cpp\">\n       <ObjectFileName Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(IntDir)\\netrpc.obj</ObjectFileName>\n       <ObjectFileName Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(IntDir)\\netrpc.obj</ObjectFileName>\n       <ObjectFileName Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">$(IntDir)\\netrpc.obj</ObjectFileName>\n       <ObjectFileName Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">$(IntDir)\\netrpc.obj</ObjectFileName>\n     </ClCompile>\n-    <ClCompile Include=\"..\\..\\src\\rpc\\rawtransaction.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\rpc\\server.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\rpc\\util.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\script\\ismine.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\script\\sigcache.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\timedata.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\torcontrol.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\txdb.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\txmempool.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\ui_interface.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\validation.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\validationinterface.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\versionbits.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\index\\txindex.cpp\" />\n+@SOURCE_FILES@\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />",
        "previous_filename": "build_msvc/libbitcoin_server/libbitcoin_server.vcxproj"
      },
      {
        "sha": "dc17c98e98cfda1a11a4c7d23d989c4ba687f212",
        "filename": "build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "status": "renamed",
        "additions": 1,
        "deletions": 17,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -174,23 +174,7 @@\n     </ProjectReference>\n   </ItemDefinitionGroup>\n   <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\chainparamsbase.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\clientversion.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\compat\\glibcxx_sanity.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\compat\\glibc_sanity.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\compat\\strnlen.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\fs.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\logging.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\random.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\rpc\\protocol.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\support\\cleanse.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\support\\lockedpool.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\sync.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\threadinterrupt.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\util.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\utilmoneystr.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\utilstrencodings.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\utiltime.cpp\" />\n+@SOURCE_FILES@\n   </ItemGroup>\n   <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n </Project>",
        "previous_filename": "build_msvc/libbitcoin_util/libbitcoin_util.vcxproj"
      },
      {
        "sha": "1bb7be6f7f9c711e7db5633bcd73c8f1e6fdcae8",
        "filename": "build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "status": "renamed",
        "additions": 1,
        "deletions": 12,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -20,18 +20,7 @@\n     </ProjectConfiguration>\n   </ItemGroup>\n   <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\wallet\\coinselection.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\coincontrol.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\crypter.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\db.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\feebumper.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\fees.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\init.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\rpcdump.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\rpcwallet.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\wallet.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\walletdb.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\walletutil.cpp\" />\n+@SOURCE_FILES@\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />",
        "previous_filename": "build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj"
      },
      {
        "sha": "e396c1ad0c11bd8a43fff35361bf9b75e80d53d5",
        "filename": "build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "status": "renamed",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -20,10 +20,7 @@\n     </ProjectConfiguration>\n   </ItemGroup>\n   <ItemGroup>\n-    <ClCompile Include=\"..\\..\\src\\zmq\\zmqabstractnotifier.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\zmq\\zmqnotificationinterface.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\zmq\\zmqpublishnotifier.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\zmq\\zmqrpc.cpp\" />\n+@SOURCE_FILES@\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />",
        "previous_filename": "build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj"
      },
      {
        "sha": "2c6c0a8b7c59397147b997dbc15f4bc2f9445e6c",
        "filename": "build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -40,7 +40,7 @@\n     <ClCompile Include=\"..\\..\\src\\script\\script.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\script\\script_error.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\uint256.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\utilstrencodings.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\util\\strencodings.cpp\" />\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n@@ -127,7 +127,7 @@\n       <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>false</SDLCheck>\n       <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n-      <ExceptionHandling>false</ExceptionHandling>\n+      <ExceptionHandling>Sync</ExceptionHandling>\n       <SuppressStartupBanner>false</SuppressStartupBanner>\n       <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n     </ClCompile>\n@@ -144,7 +144,7 @@\n       <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>false</SDLCheck>\n       <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n-      <ExceptionHandling>false</ExceptionHandling>\n+      <ExceptionHandling>Sync</ExceptionHandling>\n       <SuppressStartupBanner>false</SuppressStartupBanner>\n       <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n     </ClCompile>\n@@ -163,7 +163,7 @@\n       <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>false</SDLCheck>\n       <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n-      <ExceptionHandling>false</ExceptionHandling>\n+      <ExceptionHandling>Sync</ExceptionHandling>\n       <SuppressStartupBanner>false</SuppressStartupBanner>\n       <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n     </ClCompile>\n@@ -184,7 +184,7 @@\n       <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n       <SDLCheck>false</SDLCheck>\n       <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n-      <ExceptionHandling>false</ExceptionHandling>\n+      <ExceptionHandling>Sync</ExceptionHandling>\n       <SuppressStartupBanner>false</SuppressStartupBanner>\n       <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n     </ClCompile>"
      },
      {
        "sha": "f351532f9d40ff10c7692b3090fae58f459295c9",
        "filename": "build_msvc/msvc-autogen.py",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/msvc-autogen.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/msvc-autogen.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msvc-autogen.py?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,63 @@\n+#!/usr/bin/env python3\n+\n+import os\n+import re\n+\n+SOURCE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'src'))\n+\n+libs = [\n+    'libbitcoin_cli',\n+    'libbitcoin_common',\n+    'libbitcoin_crypto',\n+    'libbitcoin_server',\n+    'libbitcoin_util',\n+    'libbitcoin_wallet',\n+    'libbitcoin_zmq',\n+]\n+\n+ignore_list = [\n+]\n+\n+lib_sources = {}\n+\n+\n+def parse_makefile(makefile):\n+    with open(makefile, 'r', encoding='utf-8') as file:\n+        current_lib = ''\n+        for line in file.read().splitlines():\n+            if current_lib:\n+                source = line.split()[0]\n+                if source.endswith('.cpp') and not source.startswith('$') and source not in ignore_list:\n+                    source_filename = source.replace('/', '\\\\')\n+                    object_filename = source.replace('/', '_')[:-4] + \".obj\"\n+                    lib_sources[current_lib].append((source_filename, object_filename))\n+                if not line.endswith('\\\\'):\n+                    current_lib = ''\n+                continue\n+            for lib in libs:\n+                _lib = lib.replace('-', '_')\n+                if re.search(_lib + '.*_SOURCES \\\\= \\\\\\\\', line):\n+                    current_lib = lib\n+                    lib_sources[current_lib] = []\n+                    break\n+\n+\n+def main():\n+    for makefile_name in os.listdir(SOURCE_DIR):\n+        if 'Makefile' in makefile_name:\n+            parse_makefile(os.path.join(SOURCE_DIR, makefile_name))\n+    for key, value in lib_sources.items():\n+        vcxproj_filename = os.path.abspath(os.path.join(os.path.dirname(__file__), key, key + '.vcxproj'))\n+        content = ''\n+        for source_filename, object_filename in value:\n+            content += '    <ClCompile Include=\"..\\\\..\\\\src\\\\' + source_filename + '\">\\n'\n+            content += '      <ObjectFileName>$(IntDir)' + object_filename + '</ObjectFileName>\\n'\n+            content += '    </ClCompile>\\n'\n+        with open(vcxproj_filename + '.in', 'r', encoding='utf-8') as vcxproj_in_file:\n+            with open(vcxproj_filename, 'w', encoding='utf-8') as vcxproj_file:\n+                vcxproj_file.write(vcxproj_in_file.read().replace(\n+                    '@SOURCE_FILES@\\n', content))\n+\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "2316e473aa1f50ebfd770e1aef5bdeed3c437850",
        "filename": "build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin/test_bitcoin.vcxproj?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -24,7 +24,7 @@\n     <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_tests.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\test\\test_bitcoin.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\test\\test_bitcoin_main.cpp\" />\n-    <ClCompile Include=\"..\\..\\src\\wallet\\test\\wallet_test_fixture.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_fixture.cpp\" />\n   </ItemGroup>\n   <ItemGroup>\n     <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">"
      },
      {
        "sha": "170e0e06cfc353c11ef2832be28fed805845b5e8",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 76,
        "deletions": 11,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -4,11 +4,12 @@ define(_CLIENT_VERSION_MAJOR, 0)\n define(_CLIENT_VERSION_MINOR, 17)\n define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n+define(_CLIENT_VERSION_RC, 0)\n define(_CLIENT_VERSION_IS_RELEASE, false)\n define(_COPYRIGHT_YEAR, 2018)\n define(_COPYRIGHT_HOLDERS,[The %s developers])\n define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n-AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n+AC_INIT([Bitcoin Core],m4_join([.], _CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MINOR, _CLIENT_VERSION_REVISION, m4_if(_CLIENT_VERSION_BUILD, [0], [], _CLIENT_VERSION_BUILD))m4_if(_CLIENT_VERSION_RC, [0], [], [rc]_CLIENT_VERSION_RC),[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n AC_CONFIG_SRCDIR([src/validation.cpp])\n AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n AC_CONFIG_AUX_DIR([build-aux])\n@@ -130,6 +131,12 @@ AC_ARG_ENABLE(gui-tests,\n     [use_gui_tests=$enableval],\n     [use_gui_tests=$use_tests])\n \n+AC_ARG_WITH([rapidcheck],\n+  [AS_HELP_STRING([--with-rapidcheck],\n+  [enable RapidCheck property based tests (default is yes if librapidcheck is found)])],\n+  [use_rapidcheck=$withval],\n+  [use_rapidcheck=auto])\n+\n AC_ARG_ENABLE(bench,\n     AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\n     [use_bench=$enableval],\n@@ -203,6 +210,11 @@ AC_ARG_ENABLE([zmq],\n   [disable ZMQ notifications])],\n   [use_zmq=$enableval],\n   [use_zmq=yes])\n+AC_ARG_ENABLE([bip70],\n+  [AS_HELP_STRING([--disable-bip70],\n+  [disable BIP70 (payment protocol) support in GUI (enabled by default)])],\n+  [enable_bip70=$enableval],\n+  [enable_bip70=yes])\n \n AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n \n@@ -400,6 +412,18 @@ AC_ARG_WITH([utils],\n   [build_bitcoin_utils=$withval],\n   [build_bitcoin_utils=yes])\n \n+AC_ARG_ENABLE([util-cli],\n+  [AS_HELP_STRING([--enable-util-cli],\n+  [build bitcoin-cli])],\n+  [build_bitcoin_cli=$enableval],\n+  [build_bitcoin_cli=$build_bitcoin_utils])\n+\n+AC_ARG_ENABLE([util-tx],\n+  [AS_HELP_STRING([--enable-util-tx],\n+  [build bitcoin-tx])],\n+  [build_bitcoin_tx=$enableval],\n+  [build_bitcoin_tx=$build_bitcoin_utils])\n+\n AC_ARG_WITH([libs],\n   [AS_HELP_STRING([--with-libs],\n   [build libraries (default=yes)])],\n@@ -727,6 +751,10 @@ fi\n \n AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\n \n+AC_CHECK_DECLS([getifaddrs, freeifaddrs],,,\n+    [#include <sys/types.h>\n+    #include <ifaddrs.h>]\n+)\n AC_CHECK_DECLS([strnlen])\n \n # Check for daemon(3), unrelated to --with-daemon (although used by it)\n@@ -876,7 +904,7 @@ BITCOIN_QT_INIT\n dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n BITCOIN_QT_CONFIGURE([$use_pkgconfig])\n \n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n+if test x$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnononononono; then\n     use_boost=no\n else\n     use_boost=yes\n@@ -1060,11 +1088,13 @@ if test x$use_pkgconfig = xyes; then\n     [\n       PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl not found.)])\n       PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto not found.)])\n-      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n+      if test x$enable_bip70 != xno; then\n+        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n+      fi\n       if test x$use_qr != xno; then\n         BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n       fi\n-      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+      if test x$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests != xnonononono; then\n         PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n         if test x$TARGET_OS != xwindows; then\n           PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n@@ -1089,7 +1119,7 @@ else\n   AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n   AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n \n-  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+  if test x$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests != xnonononono; then\n     AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n     AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n     if test x$TARGET_OS != xwindows; then\n@@ -1120,7 +1150,9 @@ else\n     esac\n   fi\n \n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n+  if test x$enable_bip70 != xno; then\n+    BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n+  fi\n   if test x$use_qr != xno; then\n     BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n     BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n@@ -1134,11 +1166,27 @@ AC_CHECK_DECLS([EVP_MD_CTX_new],,,[AC_INCLUDES_DEFAULT\n ])\n CXXFLAGS=\"${save_CXXFLAGS}\"\n \n+dnl RapidCheck Property Based Testing\n+\n+enable_property_tests=no\n+if test \"x$use_rapidcheck\" = xauto; then\n+    AC_CHECK_HEADERS([rapidcheck.h], [enable_property_tests=yes])\n+elif test \"x$use_rapidcheck\" != xno; then\n+    enable_property_tests=yes\n+fi\n+\n+RAPIDCHECK_LIBS=\n+if test \"x$enable_property_tests\" = xyes; then\n+   RAPIDCHECK_LIBS=-lrapidcheck\n+fi\n+AC_SUBST(RAPIDCHECK_LIBS)\n+AM_CONDITIONAL([ENABLE_PROPERTY_TESTS], [test x$enable_property_tests = xyes])\n+\n dnl univalue check\n \n need_bundled_univalue=yes\n \n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n+if test x$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnononononono; then\n   need_bundled_univalue=no\n else\n \n@@ -1182,15 +1230,21 @@ AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$need_bundled_univalue = xyes])\n AC_SUBST(UNIVALUE_CFLAGS)\n AC_SUBST(UNIVALUE_LIBS)\n \n+if test x$enable_bip70 != xno; then\n BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n+fi\n \n AC_MSG_CHECKING([whether to build bitcoind])\n AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n AC_MSG_RESULT($build_bitcoind)\n \n-AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])\n-AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n-AC_MSG_RESULT($build_bitcoin_utils)\n+AC_MSG_CHECKING([whether to build bitcoin-cli])\n+AM_CONDITIONAL([BUILD_BITCOIN_CLI], [test x$build_bitcoin_cli = xyes])\n+AC_MSG_RESULT($build_bitcoin_cli)\n+\n+AC_MSG_CHECKING([whether to build bitcoin-tx])\n+AM_CONDITIONAL([BUILD_BITCOIN_TX], [test x$build_bitcoin_tx = xyes])\n+AC_MSG_RESULT($build_bitcoin_tx)\n \n AC_MSG_CHECKING([whether to build libraries])\n AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n@@ -1296,6 +1350,15 @@ if test x$bitcoin_enable_qt != xno; then\n   else\n     AC_MSG_RESULT([no])\n   fi\n+\n+  AC_MSG_CHECKING([whether to build BIP70 support])\n+  if test x$enable_bip70 != xno; then\n+    AC_DEFINE([ENABLE_BIP70],[1],[Define if BIP70 support should be compiled in])\n+    enable_bip70=yes\n+    AC_MSG_RESULT([yes])\n+  else\n+    AC_MSG_RESULT([no])\n+  fi\n fi\n \n AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n@@ -1316,7 +1379,7 @@ else\n   AC_MSG_RESULT([no])\n fi\n \n-if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_bench$use_tests = xnononononono; then\n+if test x$build_bitcoin_cli$build_bitcoin_tx$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_bench$use_tests = xnonononononono; then\n   AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui --enable-bench or --enable-tests])\n fi\n \n@@ -1327,6 +1390,7 @@ AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n+AM_CONDITIONAL([ENABLE_BIP70],[test x$enable_bip70 = xyes])\n AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n@@ -1461,6 +1525,7 @@ echo \"Options used to compile and link:\"\n echo \"  with wallet   = $enable_wallet\"\n echo \"  with gui / qt = $bitcoin_enable_qt\"\n if test x$bitcoin_enable_qt != xno; then\n+    echo \"    with bip70  = $enable_bip70\"\n     echo \"    with qr     = $use_qr\"\n fi\n echo \"  with zmq      = $use_zmq\""
      },
      {
        "sha": "e5b9cbaa40ec960e1c50085ecddefacc3f1b1589",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -96,7 +96,7 @@ Comment: Site: https://bitcointalk.org/?topic=1756.0\n Files: src/qt/res/icons/proxy.png\n        src/qt/res/src/proxy.svg\n Copyright: Cristian Mircea Messel\n-Licese: public-domain\n+License: public-domain\n \n \n License: Expat"
      },
      {
        "sha": "2d539ffe436198f3a2ecda52917a77e4f1dd115f",
        "filename": "contrib/devtools/copyright_header.py",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/devtools/copyright_header.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/devtools/copyright_header.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/copyright_header.py?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -15,35 +15,32 @@\n ################################################################################\n \n EXCLUDE = [\n-    # libsecp256k1:\n-    'src/secp256k1/include/secp256k1.h',\n-    'src/secp256k1/include/secp256k1_ecdh.h',\n-    'src/secp256k1/include/secp256k1_recovery.h',\n-    'src/secp256k1/include/secp256k1_schnorr.h',\n-    'src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c',\n-    'src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.h',\n-    'src/secp256k1/src/java/org_bitcoin_Secp256k1Context.c',\n-    'src/secp256k1/src/java/org_bitcoin_Secp256k1Context.h',\n-    # univalue:\n-    'src/univalue/test/object.cpp',\n-    'src/univalue/lib/univalue_escapes.h',\n     # auto generated:\n     'src/qt/bitcoinstrings.cpp',\n     'src/chainparamsseeds.h',\n     # other external copyrights:\n     'src/tinyformat.h',\n-    'src/leveldb/util/env_win.cc',\n-    'src/crypto/ctaes/bench.c',\n     'test/functional/test_framework/bignum.py',\n     # python init:\n     '*__init__.py',\n ]\n EXCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in EXCLUDE]))\n \n+EXCLUDE_DIRS = [\n+    # git subtrees\n+    \"src/crypto/ctaes/\",\n+    \"src/leveldb/\",\n+    \"src/secp256k1/\",\n+    \"src/univalue/\",\n+]\n+\n INCLUDE = ['*.h', '*.cpp', '*.cc', '*.c', '*.py']\n INCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in INCLUDE]))\n \n def applies_to_file(filename):\n+    for excluded_dir in EXCLUDE_DIRS:\n+        if filename.startswith(excluded_dir):\n+            return False\n     return ((EXCLUDE_COMPILED.match(filename) is None) and\n             (INCLUDE_COMPILED.match(filename) is not None))\n \n@@ -81,7 +78,7 @@ def get_filenames_to_examine():\n ANY_COPYRIGHT_COMPILED = re.compile(ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE)\n \n def compile_copyright_regex(copyright_style, year_style, name):\n-    return re.compile('%s %s %s' % (copyright_style, year_style, name))\n+    return re.compile('%s %s,? %s' % (copyright_style, year_style, name))\n \n EXPECTED_HOLDER_NAMES = [\n     \"Satoshi Nakamoto\\n\",\n@@ -107,6 +104,9 @@ def compile_copyright_regex(copyright_style, year_style, name):\n     \"Jan-Klaas Kollhof\\n\",\n     \"Sam Rushing\\n\",\n     \"ArtForz -- public domain half-a-node\\n\",\n+    \"Intel Corporation\",\n+    \"The Zcash developers\",\n+    \"Jeremy Rubin\",\n ]\n \n DOMINANT_STYLE_COMPILED = {}"
      },
      {
        "sha": "e9481dbbcf54159b08f8a27daf4905826b03804e",
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -27,7 +27,7 @@ def content_hash(filename):\n pngcrush = 'pngcrush'\n git = 'git'\n folders = [\"src/qt/res/movies\", \"src/qt/res/icons\", \"share/pixmaps\"]\n-basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel'], universal_newlines=True).rstrip('\\n')\n+basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel'], universal_newlines=True, encoding='utf8').rstrip('\\n')\n totalSaveBytes = 0\n noHashChange = True\n \n@@ -50,7 +50,7 @@ def content_hash(filename):\n                 sys.exit(0)\n \n             #verify\n-            if \"Not a PNG file\" in subprocess.check_output([pngcrush, \"-n\", \"-v\", file_path], stderr=subprocess.STDOUT, universal_newlines=True):\n+            if \"Not a PNG file\" in subprocess.check_output([pngcrush, \"-n\", \"-v\", file_path], stderr=subprocess.STDOUT, universal_newlines=True, encoding='utf8'):\n                 print(\"PNG file \"+file+\" is corrupted after crushing, check out pngcursh version\")\n                 sys.exit(1)\n "
      },
      {
        "sha": "c6158c94225adfa7760484c4e4c2c771450d8b08",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 31,
        "deletions": 17,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -36,17 +36,18 @@\n #   (glibc)    GLIBC_2_11\n #\n MAX_VERSIONS = {\n-'GCC':     (4,4,0),\n-'CXXABI':  (1,3,3),\n-'GLIBCXX': (3,4,13),\n-'GLIBC':   (2,11)\n+'GCC':       (4,4,0),\n+'CXXABI':    (1,3,3),\n+'GLIBCXX':   (3,4,13),\n+'GLIBC':     (2,11),\n+'LIBATOMIC': (1,0)\n }\n # See here for a description of _IO_stdin_used:\n # https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=634261#109\n \n # Ignore symbols that are exported as part of every executable\n IGNORE_EXPORTS = {\n-'_edata', '_end', '_init', '__bss_start', '_fini', '_IO_stdin_used', 'stdin', 'stdout', 'stderr'\n+'_edata', '_end', '__end__', '_init', '__bss_start', '__bss_start__', '_bss_end__', '__bss_end__', '_fini', '_IO_stdin_used', 'stdin', 'stdout', 'stderr'\n }\n READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n@@ -59,8 +60,12 @@\n 'libanl.so.1', # DNS resolve\n 'libm.so.6', # math library\n 'librt.so.1', # real-time (clock)\n+'libatomic.so.1',\n 'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n 'ld-linux.so.2', # 32-bit dynamic linker\n+'ld-linux-aarch64.so.1', # 64-bit ARM dynamic linker\n+'ld-linux-armhf.so.3', # 32-bit ARM dynamic linker\n+'ld-linux-riscv64-lp64d.so.1', # 64-bit RISC-V dynamic linker\n # bitcoin-qt only\n 'libX11-xcb.so.1', # part of X11\n 'libX11.so.6', # part of X11\n@@ -69,7 +74,13 @@\n 'libfreetype.so.6', # font parsing\n 'libdl.so.2' # programming interface to dynamic linker\n }\n-\n+ARCH_MIN_GLIBC_VER = {\n+'80386':  (2,1),\n+'X86-64': (2,2,5),\n+'ARM':    (2,4),\n+'AArch64':(2,17),\n+'RISC-V': (2,27)\n+}\n class CPPFilt(object):\n     '''\n     Demangle C++ symbol names.\n@@ -94,23 +105,25 @@ def read_symbols(executable, imports=True):\n     Parse an ELF executable and return a list of (symbol,version) tuples\n     for dynamic, imported symbols.\n     '''\n-    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', '-h', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Could not read symbols for %s: %s' % (executable, stderr.strip()))\n     syms = []\n     for line in stdout.splitlines():\n         line = line.split()\n+        if 'Machine:' in line:\n+            arch = line[-1]\n         if len(line)>7 and re.match('[0-9]+:$', line[0]):\n             (sym, _, version) = line[7].partition('@')\n             is_import = line[6] == 'UND'\n             if version.startswith('@'):\n                 version = version[1:]\n             if is_import == imports:\n-                syms.append((sym, version))\n+                syms.append((sym, version, arch))\n     return syms\n \n-def check_version(max_versions, version):\n+def check_version(max_versions, version, arch):\n     if '_' in version:\n         (lib, _, ver) = version.rpartition('_')\n     else:\n@@ -119,7 +132,7 @@ def check_version(max_versions, version):\n     ver = tuple([int(x) for x in ver.split('.')])\n     if not lib in max_versions:\n         return False\n-    return ver <= max_versions[lib]\n+    return ver <= max_versions[lib] or lib == 'GLIBC' and ver <= ARCH_MIN_GLIBC_VER[arch]\n \n def read_libraries(filename):\n     p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n@@ -142,16 +155,17 @@ def read_libraries(filename):\n     retval = 0\n     for filename in sys.argv[1:]:\n         # Check imported symbols\n-        for sym,version in read_symbols(filename, True):\n-            if version and not check_version(MAX_VERSIONS, version):\n+        for sym,version,arch in read_symbols(filename, True):\n+            if version and not check_version(MAX_VERSIONS, version, arch):\n                 print('%s: symbol %s from unsupported version %s' % (filename, cppfilt(sym), version))\n                 retval = 1\n         # Check exported symbols\n-        for sym,version in read_symbols(filename, False):\n-            if sym in IGNORE_EXPORTS:\n-                continue\n-            print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym)))\n-            retval = 1\n+        if arch != 'RISC-V':\n+            for sym,version,arch in read_symbols(filename, False):\n+                if sym in IGNORE_EXPORTS:\n+                    continue\n+                print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym)))\n+                retval = 1\n         # Check dependency libraries\n         for library_name in read_libraries(filename):\n             if library_name not in ALLOWED_LIBRARIES:"
      },
      {
        "sha": "faf8b014aa6df40f9675c659351e8b4f14bf7d90",
        "filename": "contrib/gitian-build.py",
        "status": "modified",
        "additions": 15,
        "deletions": 4,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/gitian-build.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/gitian-build.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.py?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -65,14 +65,14 @@ def build():\n         print('\\nCompiling ' + args.version + ' Windows')\n         subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-win.yml'])\n         subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-win-unsigned', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-win.yml'])\n-        subprocess.check_call('mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz', shell=True)\n+        subprocess.check_call('mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/', shell=True)\n         subprocess.check_call('mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../bitcoin-binaries/'+args.version, shell=True)\n \n     if args.macos:\n         print('\\nCompiling ' + args.version + ' MacOS')\n         subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml'])\n         subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-osx-unsigned', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml'])\n-        subprocess.check_call('mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz', shell=True)\n+        subprocess.check_call('mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/', shell=True)\n         subprocess.check_call('mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../bitcoin-binaries/'+args.version, shell=True)\n \n     os.chdir(workdir)\n@@ -92,13 +92,15 @@ def sign():\n \n     if args.windows:\n         print('\\nSigning ' + args.version + ' Windows')\n+        subprocess.check_call('cp inputs/bitcoin-' + args.version + '-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz', shell=True)\n         subprocess.check_call(['bin/gbuild', '-i', '--commit', 'signature='+args.commit, '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml'])\n         subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-win-signed', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml'])\n         subprocess.check_call('mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/'+args.version, shell=True)\n         subprocess.check_call('mv build/out/bitcoin-*win32-setup.exe ../bitcoin-binaries/'+args.version, shell=True)\n \n     if args.macos:\n         print('\\nSigning ' + args.version + ' MacOS')\n+        subprocess.check_call('cp inputs/bitcoin-' + args.version + '-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz', shell=True)\n         subprocess.check_call(['bin/gbuild', '-i', '--commit', 'signature='+args.commit, '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml'])\n         subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-osx-signed', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml'])\n         subprocess.check_call('mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/'+args.version+'/bitcoin-'+args.version+'-osx.dmg', shell=True)\n@@ -135,6 +137,7 @@ def main():\n \n     parser = argparse.ArgumentParser(usage='%(prog)s [options] signer version')\n     parser.add_argument('-c', '--commit', action='store_true', dest='commit', help='Indicate that the version argument is for a commit or branch')\n+    parser.add_argument('-p', '--pull', action='store_true', dest='pull', help='Indicate that the version argument is the number of a github repository pull request')\n     parser.add_argument('-u', '--url', dest='url', default='https://github.com/bitcoin/bitcoin', help='Specify the URL of the repository. Default is %(default)s')\n     parser.add_argument('-v', '--verify', action='store_true', dest='verify', help='Verify the Gitian build')\n     parser.add_argument('-b', '--build', action='store_true', dest='build', help='Do a Gitian build')\n@@ -169,7 +172,7 @@ def main():\n \n     args.sign_prog = 'true' if args.detach_sign else 'gpg --detach-sign'\n \n-    # Set enviroment variable USE_LXC or USE_DOCKER, let gitian-builder know that we use lxc or docker\n+    # Set environment variable USE_LXC or USE_DOCKER, let gitian-builder know that we use lxc or docker\n     if args.docker:\n         os.environ['USE_DOCKER'] = '1'\n     elif not args.kvm:\n@@ -196,13 +199,21 @@ def main():\n         exit(1)\n \n     # Add leading 'v' for tags\n+    if args.commit and args.pull:\n+        raise Exception('Cannot have both commit and pull')\n     args.commit = ('' if args.commit else 'v') + args.version\n-    print(args.commit)\n \n     if args.setup:\n         setup()\n \n     os.chdir('bitcoin')\n+    if args.pull:\n+        subprocess.check_call(['git', 'fetch', args.url, 'refs/pull/'+args.version+'/merge'])\n+        os.chdir('../gitian-builder/inputs/bitcoin')\n+        subprocess.check_call(['git', 'fetch', args.url, 'refs/pull/'+args.version+'/merge'])\n+        args.commit = subprocess.check_output(['git', 'show', '-s', '--format=%H', 'FETCH_HEAD'], universal_newlines=True, encoding='utf8').strip()\n+        args.version = 'pull-' + args.version\n+    print(args.commit)\n     subprocess.check_call(['git', 'fetch'])\n     subprocess.check_call(['git', 'checkout', args.commit])\n     os.chdir(workdir)"
      },
      {
        "sha": "e97072c80a95c016afb92e4822782275dbbe10d3",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 12,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -173,25 +173,15 @@ script: |\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n     make ${MAKEOPTS}\n     make ${MAKEOPTS} -C src check-security\n-\n-    #TODO: This is a quick hack that disables symbol checking for arm.\n-    #      Instead, we should investigate why these are popping up.\n-    #      For aarch64, we'll need to bump up the min GLIBC version, as the abi\n-    #      support wasn't introduced until 2.17.\n-    case $i in\n-       aarch64-*) : ;;\n-       arm-*) : ;;\n-       riscv64-*) : ;;\n-       *) make ${MAKEOPTS} -C src check-symbols ;;\n-    esac\n-\n+    make ${MAKEOPTS} -C src check-symbols\n     make install DESTDIR=${INSTALLPATH}\n     cd installed\n     find . -name \"lib*.la\" -delete\n     find . -name \"lib*.a\" -delete\n     rm -rf ${DISTNAME}/lib/pkgconfig\n     find ${DISTNAME}/bin -type f -executable -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\;\n     find ${DISTNAME}/lib -type f -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\;\n+    cp ../doc/README.md ${DISTNAME}/\n     find ${DISTNAME} -not -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n     find ${DISTNAME} -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}-debug.tar.gz\n     cd ../../"
      },
      {
        "sha": "306a37f75ab7018b0ce015064a7ae0159fd6e015",
        "filename": "contrib/init/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -5,7 +5,7 @@ Upstart: bitcoind.conf\n OpenRC:  bitcoind.openrc\n          bitcoind.openrcconf\n CentOS:  bitcoind.init\n-macOS:    org.bitcoin.bitcoind.plist\n+macOS:   org.bitcoin.bitcoind.plist\n ```\n have been made available to assist packagers in creating node packages here.\n "
      },
      {
        "sha": "c29f83a91e52b90f0a0eb726f247d308ce2b2dc3",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -13,7 +13,7 @@\n ds = DSStore.open(output_file, 'w+')\n ds['.']['bwsp'] = {\n     'ShowStatusBar': False,\n-    'WindowBounds': b'{{300, 280}, {500, 343}}',\n+    'WindowBounds': '{{300, 280}, {500, 343}}',\n     'ContainerShowSidebar': False,\n     'SidebarWidth': 0,\n     'ShowTabView': False,"
      },
      {
        "sha": "580ed541cf7d68ffd24287bdae78fe6484ee2da2",
        "filename": "contrib/testgen/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -4,5 +4,5 @@ Utilities to generate test vectors for the data-driven Bitcoin tests.\n \n Usage: \n \n-    gen_base58_test_vectors.py valid 50 > ../../src/test/data/base58_keys_valid.json\n-    gen_base58_test_vectors.py invalid 50 > ../../src/test/data/base58_keys_invalid.json\n\\ No newline at end of file\n+    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py valid 50 > ../../src/test/data/key_io_keys_valid.json\n+    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py invalid 50 > ../../src/test/data/key_io_keys_invalid.json"
      },
      {
        "sha": "c76de5ce750e3d328a83c5d407e74bf901bb9d85",
        "filename": "contrib/testgen/gen_base58_test_vectors.py",
        "status": "removed",
        "additions": 0,
        "deletions": 132,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8bd1e54a27267b9bb09d9817e5dc47935df493/contrib/testgen/gen_base58_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8bd1e54a27267b9bb09d9817e5dc47935df493/contrib/testgen/gen_base58_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_base58_test_vectors.py?ref=fa8bd1e54a27267b9bb09d9817e5dc47935df493",
        "patch": "@@ -1,132 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2012-2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Generate valid and invalid base58 address and private key test vectors.\n-\n-Usage:\n-    gen_base58_test_vectors.py valid 50 > ../../src/test/data/base58_keys_valid.json\n-    gen_base58_test_vectors.py invalid 50 > ../../src/test/data/base58_keys_invalid.json\n-'''\n-# 2012 Wladimir J. van der Laan\n-# Released under MIT License\n-import os\n-from itertools import islice\n-from base58 import b58encode_chk, b58decode_chk, b58chars\n-import random\n-from binascii import b2a_hex\n-\n-# key types\n-PUBKEY_ADDRESS = 0\n-SCRIPT_ADDRESS = 5\n-PUBKEY_ADDRESS_TEST = 111\n-SCRIPT_ADDRESS_TEST = 196\n-PRIVKEY = 128\n-PRIVKEY_TEST = 239\n-\n-metadata_keys = ['isPrivkey', 'isTestnet', 'addrType', 'isCompressed']\n-# templates for valid sequences\n-templates = [\n-  # prefix, payload_size, suffix, metadata\n-  #                                  None = N/A\n-  ((PUBKEY_ADDRESS,),      20, (),   (False, False, 'pubkey', None)),\n-  ((SCRIPT_ADDRESS,),      20, (),   (False, False, 'script',  None)),\n-  ((PUBKEY_ADDRESS_TEST,), 20, (),   (False, True,  'pubkey', None)),\n-  ((SCRIPT_ADDRESS_TEST,), 20, (),   (False, True,  'script',  None)),\n-  ((PRIVKEY,),             32, (),   (True,  False, None,  False)),\n-  ((PRIVKEY,),             32, (1,), (True,  False, None,  True)),\n-  ((PRIVKEY_TEST,),        32, (),   (True,  True,  None,  False)),\n-  ((PRIVKEY_TEST,),        32, (1,), (True,  True,  None,  True))\n-]\n-\n-def is_valid(v):\n-    '''Check vector v for validity'''\n-    result = b58decode_chk(v)\n-    if result is None:\n-        return False\n-    for template in templates:\n-        prefix = bytearray(template[0])\n-        suffix = bytearray(template[2])\n-        if result.startswith(prefix) and result.endswith(suffix):\n-            if (len(result) - len(prefix) - len(suffix)) == template[1]:\n-                return True\n-    return False\n-\n-def gen_valid_vectors():\n-    '''Generate valid test vectors'''\n-    while True:\n-        for template in templates:\n-            prefix = bytearray(template[0])\n-            payload = bytearray(os.urandom(template[1]))\n-            suffix = bytearray(template[2])\n-            rv = b58encode_chk(prefix + payload + suffix)\n-            assert is_valid(rv)\n-            metadata = {x: y for x, y in zip(metadata_keys,template[3]) if y is not None}\n-            hexrepr = b2a_hex(payload)\n-            if isinstance(hexrepr, bytes):\n-                hexrepr = hexrepr.decode('utf8')\n-            yield (rv, hexrepr, metadata)\n-\n-def gen_invalid_vector(template, corrupt_prefix, randomize_payload_size, corrupt_suffix):\n-    '''Generate possibly invalid vector'''\n-    if corrupt_prefix:\n-        prefix = os.urandom(1)\n-    else:\n-        prefix = bytearray(template[0])\n-\n-    if randomize_payload_size:\n-        payload = os.urandom(max(int(random.expovariate(0.5)), 50))\n-    else:\n-        payload = os.urandom(template[1])\n-\n-    if corrupt_suffix:\n-        suffix = os.urandom(len(template[2]))\n-    else:\n-        suffix = bytearray(template[2])\n-\n-    return b58encode_chk(prefix + payload + suffix)\n-\n-def randbool(p = 0.5):\n-    '''Return True with P(p)'''\n-    return random.random() < p\n-\n-def gen_invalid_vectors():\n-    '''Generate invalid test vectors'''\n-    # start with some manual edge-cases\n-    yield \"\",\n-    yield \"x\",\n-    while True:\n-        # kinds of invalid vectors:\n-        #   invalid prefix\n-        #   invalid payload length\n-        #   invalid (randomized) suffix (add random data)\n-        #   corrupt checksum\n-        for template in templates:\n-            val = gen_invalid_vector(template, randbool(0.2), randbool(0.2), randbool(0.2))\n-            if random.randint(0,10)<1: # line corruption\n-                if randbool(): # add random character to end\n-                    val += random.choice(b58chars)\n-                else: # replace random character in the middle\n-                    n = random.randint(0, len(val))\n-                    val = val[0:n] + random.choice(b58chars) + val[n+1:]\n-            if not is_valid(val):\n-                yield val,\n-\n-if __name__ == '__main__':\n-    import sys\n-    import json\n-    iters = {'valid':gen_valid_vectors, 'invalid':gen_invalid_vectors}\n-    try:\n-        uiter = iters[sys.argv[1]]\n-    except IndexError:\n-        uiter = gen_valid_vectors\n-    try:\n-        count = int(sys.argv[2])\n-    except IndexError:\n-        count = 0\n-\n-    data = list(islice(uiter(), count))\n-    json.dump(data, sys.stdout, sort_keys=True, indent=4)\n-    sys.stdout.write('\\n')\n-"
      },
      {
        "sha": "a00acb1f41fe478fd332ba1deab7729dbaf19be1",
        "filename": "contrib/testgen/gen_key_io_test_vectors.py",
        "status": "added",
        "additions": 249,
        "deletions": 0,
        "changes": 249,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/testgen/gen_key_io_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/testgen/gen_key_io_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_key_io_test_vectors.py?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,249 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2012-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+Generate valid and invalid base58 address and private key test vectors.\n+\n+Usage:\n+    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py valid 50 > ../../src/test/data/key_io_valid.json\n+    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py invalid 50 > ../../src/test/data/key_io_invalid.json\n+'''\n+# 2012 Wladimir J. van der Laan\n+# Released under MIT License\n+import os\n+from itertools import islice\n+from base58 import b58encode_chk, b58decode_chk, b58chars\n+import random\n+from binascii import b2a_hex\n+from segwit_addr import bech32_encode, decode, convertbits, CHARSET\n+\n+# key types\n+PUBKEY_ADDRESS = 0\n+SCRIPT_ADDRESS = 5\n+PUBKEY_ADDRESS_TEST = 111\n+SCRIPT_ADDRESS_TEST = 196\n+PUBKEY_ADDRESS_REGTEST = 111\n+SCRIPT_ADDRESS_REGTEST = 196\n+PRIVKEY = 128\n+PRIVKEY_TEST = 239\n+PRIVKEY_REGTEST = 239\n+\n+# script\n+OP_0 = 0x00\n+OP_1 = 0x51\n+OP_2 = 0x52\n+OP_16 = 0x60\n+OP_DUP = 0x76\n+OP_EQUAL = 0x87\n+OP_EQUALVERIFY = 0x88\n+OP_HASH160 = 0xa9\n+OP_CHECKSIG = 0xac\n+pubkey_prefix = (OP_DUP, OP_HASH160, 20)\n+pubkey_suffix = (OP_EQUALVERIFY, OP_CHECKSIG)\n+script_prefix = (OP_HASH160, 20)\n+script_suffix = (OP_EQUAL,)\n+p2wpkh_prefix = (OP_0, 20)\n+p2wsh_prefix = (OP_0, 32)\n+\n+metadata_keys = ['isPrivkey', 'chain', 'isCompressed', 'tryCaseFlip']\n+# templates for valid sequences\n+templates = [\n+  # prefix, payload_size, suffix, metadata, output_prefix, output_suffix\n+  #                                  None = N/A\n+  ((PUBKEY_ADDRESS,),         20, (),   (False, 'main',    None,  None), pubkey_prefix, pubkey_suffix),\n+  ((SCRIPT_ADDRESS,),         20, (),   (False, 'main',    None,  None), script_prefix, script_suffix),\n+  ((PUBKEY_ADDRESS_TEST,),    20, (),   (False, 'test',    None,  None), pubkey_prefix, pubkey_suffix),\n+  ((SCRIPT_ADDRESS_TEST,),    20, (),   (False, 'test',    None,  None), script_prefix, script_suffix),\n+  ((PUBKEY_ADDRESS_REGTEST,), 20, (),   (False, 'regtest', None,  None), pubkey_prefix, pubkey_suffix),\n+  ((SCRIPT_ADDRESS_REGTEST,), 20, (),   (False, 'regtest', None,  None), script_prefix, script_suffix),\n+  ((PRIVKEY,),                32, (),   (True,  'main',    False, None), (),            ()),\n+  ((PRIVKEY,),                32, (1,), (True,  'main',    True,  None), (),            ()),\n+  ((PRIVKEY_TEST,),           32, (),   (True,  'test',    False, None), (),            ()),\n+  ((PRIVKEY_TEST,),           32, (1,), (True,  'test',    True,  None), (),            ()),\n+  ((PRIVKEY_REGTEST,),        32, (),   (True,  'regtest', False, None), (),            ()),\n+  ((PRIVKEY_REGTEST,),        32, (1,), (True,  'regtest', True,  None), (),            ())\n+]\n+# templates for valid bech32 sequences\n+bech32_templates = [\n+  # hrp, version, witprog_size, metadata, output_prefix\n+  ('bc',    0, 20, (False, 'main',    None, True), p2wpkh_prefix),\n+  ('bc',    0, 32, (False, 'main',    None, True), p2wsh_prefix),\n+  ('bc',    1,  2, (False, 'main',    None, True), (OP_1, 2)),\n+  ('tb',    0, 20, (False, 'test',    None, True), p2wpkh_prefix),\n+  ('tb',    0, 32, (False, 'test',    None, True), p2wsh_prefix),\n+  ('tb',    2, 16, (False, 'test',    None, True), (OP_2, 16)),\n+  ('bcrt',  0, 20, (False, 'regtest', None, True), p2wpkh_prefix),\n+  ('bcrt',  0, 32, (False, 'regtest', None, True), p2wsh_prefix),\n+  ('bcrt', 16, 40, (False, 'regtest', None, True), (OP_16, 40))\n+]\n+# templates for invalid bech32 sequences\n+bech32_ng_templates = [\n+  # hrp, version, witprog_size, invalid_bech32, invalid_checksum, invalid_char\n+  ('tc',    0, 20, False, False, False),\n+  ('tb',   17, 32, False, False, False),\n+  ('bcrt',  3,  1, False, False, False),\n+  ('bc',   15, 41, False, False, False),\n+  ('tb',    0, 16, False, False, False),\n+  ('bcrt',  0, 32, True,  False, False),\n+  ('bc',    0, 16, True,  False, False),\n+  ('tb',    0, 32, False, True,  False),\n+  ('bcrt',  0, 20, False, False, True)\n+]\n+\n+def is_valid(v):\n+    '''Check vector v for validity'''\n+    if len(set(v) - set(b58chars)) > 0:\n+        return is_valid_bech32(v)\n+    result = b58decode_chk(v)\n+    if result is None:\n+        return is_valid_bech32(v)\n+    for template in templates:\n+        prefix = bytearray(template[0])\n+        suffix = bytearray(template[2])\n+        if result.startswith(prefix) and result.endswith(suffix):\n+            if (len(result) - len(prefix) - len(suffix)) == template[1]:\n+                return True\n+    return is_valid_bech32(v)\n+\n+def is_valid_bech32(v):\n+    '''Check vector v for bech32 validity'''\n+    for hrp in ['bc', 'tb', 'bcrt']:\n+        if decode(hrp, v) != (None, None):\n+            return True\n+    return False\n+\n+def gen_valid_base58_vector(template):\n+    '''Generate valid base58 vector'''\n+    prefix = bytearray(template[0])\n+    payload = bytearray(os.urandom(template[1]))\n+    suffix = bytearray(template[2])\n+    dst_prefix = bytearray(template[4])\n+    dst_suffix = bytearray(template[5])\n+    rv = b58encode_chk(prefix + payload + suffix)\n+    return rv, dst_prefix + payload + dst_suffix\n+\n+def gen_valid_bech32_vector(template):\n+    '''Generate valid bech32 vector'''\n+    hrp = template[0]\n+    witver = template[1]\n+    witprog = bytearray(os.urandom(template[2]))\n+    dst_prefix = bytearray(template[4])\n+    rv = bech32_encode(hrp, [witver] + convertbits(witprog, 8, 5))\n+    return rv, dst_prefix + witprog\n+\n+def gen_valid_vectors():\n+    '''Generate valid test vectors'''\n+    glist = [gen_valid_base58_vector, gen_valid_bech32_vector]\n+    tlist = [templates, bech32_templates]\n+    while True:\n+        for template, valid_vector_generator in [(t, g) for g, l in zip(glist, tlist) for t in l]:\n+            rv, payload = valid_vector_generator(template)\n+            assert is_valid(rv)\n+            metadata = {x: y for x, y in zip(metadata_keys,template[3]) if y is not None}\n+            hexrepr = b2a_hex(payload)\n+            if isinstance(hexrepr, bytes):\n+                hexrepr = hexrepr.decode('utf8')\n+            yield (rv, hexrepr, metadata)\n+\n+def gen_invalid_base58_vector(template):\n+    '''Generate possibly invalid vector'''\n+    # kinds of invalid vectors:\n+    #   invalid prefix\n+    #   invalid payload length\n+    #   invalid (randomized) suffix (add random data)\n+    #   corrupt checksum\n+    corrupt_prefix = randbool(0.2)\n+    randomize_payload_size = randbool(0.2)\n+    corrupt_suffix = randbool(0.2)\n+\n+    if corrupt_prefix:\n+        prefix = os.urandom(1)\n+    else:\n+        prefix = bytearray(template[0])\n+\n+    if randomize_payload_size:\n+        payload = os.urandom(max(int(random.expovariate(0.5)), 50))\n+    else:\n+        payload = os.urandom(template[1])\n+\n+    if corrupt_suffix:\n+        suffix = os.urandom(len(template[2]))\n+    else:\n+        suffix = bytearray(template[2])\n+\n+    val = b58encode_chk(prefix + payload + suffix)\n+    if random.randint(0,10)<1: # line corruption\n+        if randbool(): # add random character to end\n+            val += random.choice(b58chars)\n+        else: # replace random character in the middle\n+            n = random.randint(0, len(val))\n+            val = val[0:n] + random.choice(b58chars) + val[n+1:]\n+\n+    return val\n+\n+def gen_invalid_bech32_vector(template):\n+    '''Generate possibly invalid bech32 vector'''\n+    no_data = randbool(0.1)\n+    to_upper = randbool(0.1)\n+    hrp = template[0]\n+    witver = template[1]\n+    witprog = bytearray(os.urandom(template[2]))\n+\n+    if no_data:\n+        rv = bech32_encode(hrp, [])\n+    else:\n+        data = [witver] + convertbits(witprog, 8, 5)\n+        if template[3] and not no_data:\n+            if template[2] % 5 in {2, 4}:\n+                data[-1] |= 1\n+            else:\n+                data.append(0)\n+        rv = bech32_encode(hrp, data)\n+\n+    if template[4]:\n+        i = len(rv) - random.randrange(1, 7)\n+        rv = rv[:i] + random.choice(CHARSET.replace(rv[i], '')) + rv[i + 1:]\n+    if template[5]:\n+        i = len(hrp) + 1 + random.randrange(0, len(rv) - len(hrp) - 4)\n+        rv = rv[:i] + rv[i:i + 4].upper() + rv[i + 4:]\n+\n+    if to_upper:\n+        rv = rv.swapcase()\n+\n+    return rv\n+\n+def randbool(p = 0.5):\n+    '''Return True with P(p)'''\n+    return random.random() < p\n+\n+def gen_invalid_vectors():\n+    '''Generate invalid test vectors'''\n+    # start with some manual edge-cases\n+    yield \"\",\n+    yield \"x\",\n+    glist = [gen_invalid_base58_vector, gen_invalid_bech32_vector]\n+    tlist = [templates, bech32_ng_templates]\n+    while True:\n+        for template, invalid_vector_generator in [(t, g) for g, l in zip(glist, tlist) for t in l]:\n+            val = invalid_vector_generator(template)\n+            if not is_valid(val):\n+                yield val,\n+\n+if __name__ == '__main__':\n+    import sys\n+    import json\n+    iters = {'valid':gen_valid_vectors, 'invalid':gen_invalid_vectors}\n+    try:\n+        uiter = iters[sys.argv[1]]\n+    except IndexError:\n+        uiter = gen_valid_vectors\n+    try:\n+        count = int(sys.argv[2])\n+    except IndexError:\n+        count = 0\n+\n+    data = list(islice(uiter(), count))\n+    json.dump(data, sys.stdout, sort_keys=True, indent=4)\n+    sys.stdout.write('\\n')\n+"
      },
      {
        "sha": "544f4dc48d2cf0e716a61a7967fbd06afe867454",
        "filename": "contrib/verify-commits/verify-commits.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/verify-commits/verify-commits.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/verify-commits/verify-commits.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.py?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -91,7 +91,7 @@ def main():\n     no_sha1 = True\n     prev_commit = \"\"\n     initial_commit = current_commit\n-    branch = subprocess.check_output([GIT, 'show', '-s', '--format=%H', initial_commit], universal_newlines=True).splitlines()[0]\n+    branch = subprocess.check_output([GIT, 'show', '-s', '--format=%H', initial_commit], universal_newlines=True, encoding='utf8').splitlines()[0]\n \n     # Iterate through commits\n     while True:\n@@ -112,7 +112,7 @@ def main():\n             if prev_commit != \"\":\n                 print(\"No parent of {} was signed with a trusted key!\".format(prev_commit), file=sys.stderr)\n                 print(\"Parents are:\", file=sys.stderr)\n-                parents = subprocess.check_output([GIT, 'show', '-s', '--format=format:%P', prev_commit], universal_newlines=True).splitlines()[0].split(' ')\n+                parents = subprocess.check_output([GIT, 'show', '-s', '--format=format:%P', prev_commit], universal_newlines=True, encoding='utf8').splitlines()[0].split(' ')\n                 for parent in parents:\n                     subprocess.call([GIT, 'show', '-s', parent], stdout=sys.stderr)\n             else:\n@@ -122,25 +122,25 @@ def main():\n         # Check the Tree-SHA512\n         if (verify_tree or prev_commit == \"\") and current_commit not in incorrect_sha512_allowed:\n             tree_hash = tree_sha512sum(current_commit)\n-            if (\"Tree-SHA512: {}\".format(tree_hash)) not in subprocess.check_output([GIT, 'show', '-s', '--format=format:%B', current_commit], universal_newlines=True).splitlines():\n+            if (\"Tree-SHA512: {}\".format(tree_hash)) not in subprocess.check_output([GIT, 'show', '-s', '--format=format:%B', current_commit], universal_newlines=True, encoding='utf8').splitlines():\n                 print(\"Tree-SHA512 did not match for commit \" + current_commit, file=sys.stderr)\n                 sys.exit(1)\n \n         # Merge commits should only have two parents\n-        parents = subprocess.check_output([GIT, 'show', '-s', '--format=format:%P', current_commit], universal_newlines=True).splitlines()[0].split(' ')\n+        parents = subprocess.check_output([GIT, 'show', '-s', '--format=format:%P', current_commit], universal_newlines=True, encoding='utf8').splitlines()[0].split(' ')\n         if len(parents) > 2:\n             print(\"Commit {} is an octopus merge\".format(current_commit), file=sys.stderr)\n             sys.exit(1)\n \n         # Check that the merge commit is clean\n-        commit_time = int(subprocess.check_output([GIT, 'show', '-s', '--format=format:%ct', current_commit], universal_newlines=True).splitlines()[0])\n+        commit_time = int(subprocess.check_output([GIT, 'show', '-s', '--format=format:%ct', current_commit], universal_newlines=True, encoding='utf8').splitlines()[0])\n         check_merge = commit_time > time.time() - args.clean_merge * 24 * 60 * 60  # Only check commits in clean_merge days\n         allow_unclean = current_commit in unclean_merge_allowed\n         if len(parents) == 2 and check_merge and not allow_unclean:\n-            current_tree = subprocess.check_output([GIT, 'show', '--format=%T', current_commit], universal_newlines=True).splitlines()[0]\n+            current_tree = subprocess.check_output([GIT, 'show', '--format=%T', current_commit], universal_newlines=True, encoding='utf8').splitlines()[0]\n             subprocess.call([GIT, 'checkout', '--force', '--quiet', parents[0]])\n             subprocess.call([GIT, 'merge', '--no-ff', '--quiet', parents[1]], stdout=subprocess.DEVNULL)\n-            recreated_tree = subprocess.check_output([GIT, 'show', '--format=format:%T', 'HEAD'], universal_newlines=True).splitlines()[0]\n+            recreated_tree = subprocess.check_output([GIT, 'show', '--format=format:%T', 'HEAD'], universal_newlines=True, encoding='utf8').splitlines()[0]\n             if current_tree != recreated_tree:\n                 print(\"Merge commit {} is not clean\".format(current_commit), file=sys.stderr)\n                 subprocess.call([GIT, 'diff', current_commit])"
      },
      {
        "sha": "06893407f5fef454ad17da0eabdfa0c0947a6b8d",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -42,6 +42,7 @@ def __init__(self):\n         self.zmqContext = zmq.asyncio.Context()\n \n         self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)\n+        self.zmqSubSocket.setsockopt(zmq.RCVHWM, 0)\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashblock\")\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashtx\")\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawblock\")"
      },
      {
        "sha": "66fdf7887fe97d829270513e83ac2de67f08c0a1",
        "filename": "contrib/zmq/zmq_sub3.4.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/zmq/zmq_sub3.4.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/contrib/zmq/zmq_sub3.4.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub3.4.py?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -46,6 +46,7 @@ def __init__(self):\n         self.zmqContext = zmq.asyncio.Context()\n \n         self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)\n+        self.zmqSubSocket.setsockopt(zmq.RCVHWM, 0)\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashblock\")\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashtx\")\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawblock\")"
      },
      {
        "sha": "50cc77ddeba84418387f6b34e77b2c5a204fc1c2",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -5,6 +5,7 @@ WORK_PATH = $(BASEDIR)/work\n BASE_CACHE ?= $(BASEDIR)/built\n SDK_PATH ?= $(BASEDIR)/SDKs\n NO_QT ?=\n+RAPIDCHECK ?=\n NO_WALLET ?=\n NO_UPNP ?=\n FALLBACK_DOWNLOAD_PATH ?= https://bitcoincore.org/depends-sources\n@@ -14,7 +15,7 @@ HOST ?= $(BUILD)\n PATCHES_PATH = $(BASEDIR)/patches\n BASEDIR = $(CURDIR)\n HASH_LENGTH:=11\n-DOWNLOAD_CONNECT_TIMEOUT:=10\n+DOWNLOAD_CONNECT_TIMEOUT:=30\n DOWNLOAD_RETRIES:=3\n HOST_ID_SALT ?= salt\n BUILD_ID_SALT ?= salt\n@@ -93,13 +94,19 @@ qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages) $(qt_$(host_arch\n wallet_packages_$(NO_WALLET) = $(wallet_packages)\n upnp_packages_$(NO_UPNP) = $(upnp_packages)\n \n+rapidcheck_packages_$(RAPIDCHECK) = $(rapidcheck_packages)\n+\n packages += $($(host_arch)_$(host_os)_packages) $($(host_os)_packages) $(qt_packages_) $(wallet_packages_) $(upnp_packages_)\n native_packages += $($(host_arch)_$(host_os)_native_packages) $($(host_os)_native_packages)\n \n ifneq ($(qt_packages_),)\n native_packages += $(qt_native_packages)\n endif\n \n+ifeq ($(rapidcheck_packages_),)\n+packages += $(rapidcheck_packages)\n+endif\n+\n all_packages = $(packages) $(native_packages)\n \n meta_depends = Makefile funcs.mk builders/default.mk hosts/default.mk hosts/$(host_os).mk builders/$(build_os).mk"
      },
      {
        "sha": "693bc36197ddab13e837ffd6a70d3ae3bf13fdb0",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 19,
        "deletions": 9,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -30,29 +30,38 @@ Common `host-platform-triplets` for cross compilation are:\n \n No other options are needed, the paths are automatically configured.\n \n-Install the required dependencies: Ubuntu & Debian\n---------------------------------------------------\n+### Install the required dependencies: Ubuntu & Debian\n \n-For macOS cross compilation:\n+#### For macOS cross compilation\n \n     sudo apt-get install curl librsvg2-bin libtiff-tools bsdmainutils cmake imagemagick libcap-dev libz-dev libbz2-dev python-setuptools\n \n-For Win32/Win64 cross compilation:\n+#### For Win32/Win64 cross compilation\n \n - see [build-windows.md](../doc/build-windows.md#cross-compilation-for-ubuntu-and-windows-subsystem-for-linux)\n \n-For linux (including i386, ARM) cross compilation:\n+#### For linux (including i386, ARM) cross compilation\n \n-    sudo apt-get install curl g++-aarch64-linux-gnu g++-4.8-aarch64-linux-gnu gcc-4.8-aarch64-linux-gnu binutils-aarch64-linux-gnu g++-arm-linux-gnueabihf g++-4.8-arm-linux-gnueabihf gcc-4.8-arm-linux-gnueabihf binutils-arm-linux-gnueabihf g++-4.8-multilib gcc-4.8-multilib binutils-gold bsdmainutils\n+Common linux dependencies:\n+\n+    sudo apt-get install make automake cmake curl g++-multilib libtool binutils-gold bsdmainutils pkg-config python3\n+\n+For linux ARM cross compilation:\n+\n+    sudo apt-get install g++-arm-linux-gnueabihf binutils-arm-linux-gnueabihf\n+\n+For linux AARCH64 cross compilation:\n+\n+    sudo apt-get install g++-aarch64-linux-gnu binutils-aarch64-linux-gnu\n \n For linux RISC-V 64-bit cross compilation (there are no packages for 32-bit):\n \n-    sudo apt-get install curl g++-riscv64-linux-gnu binutils-riscv64-linux-gnu\n+    sudo apt-get install g++-riscv64-linux-gnu binutils-riscv64-linux-gnu\n \n RISC-V known issue: gcc-7.3.0 and gcc-7.3.1 result in a broken `test_bitcoin` executable (see https://github.com/bitcoin/bitcoin/pull/13543),\n this is apparently fixed in gcc-8.1.0.\n \n-Dependency Options:\n+### Dependency Options\n The following can be set when running make: make FOO=bar\n \n     SOURCES_PATH: downloaded sources will be placed here\n@@ -63,13 +72,14 @@ The following can be set when running make: make FOO=bar\n     NO_WALLET: Don't download/build/cache libs needed to enable the wallet\n     NO_UPNP: Don't download/build/cache packages needed for enabling upnp\n     DEBUG: disable some optimizations and enable more runtime checking\n+    RAPIDCHECK: build rapidcheck (experimental)\n     HOST_ID_SALT: Optional salt to use when generating host package ids\n     BUILD_ID_SALT: Optional salt to use when generating build package ids\n \n If some packages are not built, for example `make NO_WALLET=1`, the appropriate\n options will be passed to bitcoin's configure. In this case, `--disable-wallet`.\n \n-Additional targets:\n+### Additional targets\n \n     download: run 'make download' to fetch all sources without building them\n     download-osx: run 'make download-osx' to fetch all sources needed for macOS builds"
      },
      {
        "sha": "c7671c1548b777aa7db26d303e15d04cfc019642",
        "filename": "depends/builders/darwin.mk",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -1,13 +1,13 @@\n-build_darwin_CC: = $(shell xcrun -f clang)\n-build_darwin_CXX: = $(shell xcrun -f clang++)\n-build_darwin_AR: = $(shell xcrun -f ar)\n-build_darwin_RANLIB: = $(shell xcrun -f ranlib)\n-build_darwin_STRIP: = $(shell xcrun -f strip)\n-build_darwin_OTOOL: = $(shell xcrun -f otool)\n-build_darwin_NM: = $(shell xcrun -f nm)\n+build_darwin_CC:=$(shell xcrun -f clang)\n+build_darwin_CXX:=$(shell xcrun -f clang++)\n+build_darwin_AR:=$(shell xcrun -f ar)\n+build_darwin_RANLIB:=$(shell xcrun -f ranlib)\n+build_darwin_STRIP:=$(shell xcrun -f strip)\n+build_darwin_OTOOL:=$(shell xcrun -f otool)\n+build_darwin_NM:=$(shell xcrun -f nm)\n build_darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)\n-build_darwin_SHA256SUM = shasum -a 256\n-build_darwin_DOWNLOAD = curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o\n+build_darwin_SHA256SUM=shasum -a 256\n+build_darwin_DOWNLOAD=curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o\n \n #darwin host on darwin builder. overrides darwin host preferences.\n darwin_CC=$(shell xcrun -f clang) -mmacosx-version-min=$(OSX_MIN_VERSION)"
      },
      {
        "sha": "b7a5e795c894051b6f84a6c15339b28cd54196ce",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -61,9 +61,12 @@ fi\n CPPFLAGS=\"-I$depends_prefix/include/ $CPPFLAGS\"\n LDFLAGS=\"-L$depends_prefix/lib $LDFLAGS\"\n \n-CC=\"@CC@\"\n-CXX=\"@CXX@\"\n-OBJC=\"${CC}\"\n+if test -n \"@CC@\" -a -z \"${CC}\"; then\n+  CC=\"@CC@\"\n+fi\n+if test -n \"@CXX@\" -a -z \"${CXX}\"; then\n+  CXX=\"@CXX@\"\n+fi\n PYTHONPATH=$depends_prefix/native/lib/python/dist-packages:$PYTHONPATH\n \n if test -n \"@AR@\"; then"
      },
      {
        "sha": "41e02e2030df876668776f166f751d271fbb7425",
        "filename": "depends/packages/freetype.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -5,7 +5,7 @@ $(package)_file_name=$(package)-$($(package)_version).tar.bz2\n $(package)_sha256_hash=3a3bb2c4e15ffb433f2032f50a5b5a92558206822e22bfe8cbe339af4aa82f88\n \n define $(package)_set_vars\n-  $(package)_config_opts=--without-zlib --without-png --disable-static\n+  $(package)_config_opts=--without-zlib --without-png --without-harfbuzz --without-bzip2 --disable-static\n   $(package)_config_opts_linux=--with-pic\n endef\n "
      },
      {
        "sha": "fc60323b1c918a8229f8ba4b04d63310b4d98ec5",
        "filename": "depends/packages/libICE.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8bd1e54a27267b9bb09d9817e5dc47935df493/depends/packages/libICE.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8bd1e54a27267b9bb09d9817e5dc47935df493/depends/packages/libICE.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libICE.mk?ref=fa8bd1e54a27267b9bb09d9817e5dc47935df493",
        "patch": "@@ -1,23 +0,0 @@\n-package=libICE\n-$(package)_version=1.0.9\n-$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=8f7032f2c1c64352b5423f6b48a8ebdc339cc63064af34d66a6c9aa79759e202\n-$(package)_dependencies=xtrans xproto\n-\n-define $(package)_set_vars\n-  $(package)_config_opts=--disable-static --disable-docs --disable-specs --without-xsltproc\n-  $(package)_config_opts_linux=--with-pic\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef"
      },
      {
        "sha": "0f9307ca76acb8edb8dc892cefc046627f111654",
        "filename": "depends/packages/libSM.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8bd1e54a27267b9bb09d9817e5dc47935df493/depends/packages/libSM.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8bd1e54a27267b9bb09d9817e5dc47935df493/depends/packages/libSM.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libSM.mk?ref=fa8bd1e54a27267b9bb09d9817e5dc47935df493",
        "patch": "@@ -1,23 +0,0 @@\n-package=libSM\n-$(package)_version=1.2.2\n-$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=0baca8c9f5d934450a70896c4ad38d06475521255ca63b717a6510fdb6e287bd\n-$(package)_dependencies=xtrans xproto libICE\n-\n-define $(package)_set_vars\n-  $(package)_config_opts=--without-libuuid  --without-xsltproc  --disable-docs --disable-static\n-  $(package)_config_opts_linux=--with-pic\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef"
      },
      {
        "sha": "38329d16d736544a32b4f3279584be1da3a4cea7",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -5,6 +5,8 @@ qt_packages = qrencode protobuf zlib\n \n qt_linux_packages:=qt expat dbus libxcb xcb_proto libXau xproto freetype fontconfig libX11 xextproto libXext xtrans\n \n+rapidcheck_packages = rapidcheck\n+\n qt_darwin_packages=qt\n qt_mingw32_packages=qt\n "
      },
      {
        "sha": "dc1d17cd57f0d7a6cc15576e74edc2b81dd6a5d1",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -8,7 +8,7 @@ $(package)_dependencies=openssl zlib\n $(package)_linux_dependencies=freetype fontconfig libxcb libX11 xproto libXext\n $(package)_build_subdir=qtbase\n $(package)_qt_libs=corelib network widgets gui plugins testlib\n-$(package)_patches=fix_qt_pkgconfig.patch mac-qmake.conf fix_configure_mac.patch fix_no_printer.patch fix_rcc_determinism.patch fix_riscv64_arch.patch\n+$(package)_patches=fix_qt_pkgconfig.patch mac-qmake.conf fix_configure_mac.patch fix_no_printer.patch fix_rcc_determinism.patch fix_riscv64_arch.patch xkb-default.patch\n \n $(package)_qttranslations_file_name=qttranslations-$($(package)_suffix)\n $(package)_qttranslations_sha256_hash=9822084f8e2d2939ba39f4af4c0c2320e45d5996762a9423f833055607604ed8\n@@ -64,6 +64,7 @@ $(package)_config_opts += -prefix $(host_prefix)\n $(package)_config_opts += -qt-libpng\n $(package)_config_opts += -qt-libjpeg\n $(package)_config_opts += -qt-pcre\n+$(package)_config_opts += -qt-harfbuzz\n $(package)_config_opts += -system-zlib\n $(package)_config_opts += -static\n $(package)_config_opts += -silent\n@@ -83,7 +84,7 @@ $(package)_config_opts_darwin += -device-option MAC_TARGET=$(host)\n $(package)_config_opts_darwin += -device-option MAC_LD64_VERSION=$(LD64_VERSION)\n endif\n \n-$(package)_config_opts_linux  = -qt-xkbcommon\n+$(package)_config_opts_linux  = -qt-xkbcommon-x11\n $(package)_config_opts_linux += -qt-xcb\n $(package)_config_opts_linux += -system-freetype\n $(package)_config_opts_linux += -no-feature-sessionmanager\n@@ -120,6 +121,7 @@ define $(package)_extract_cmds\n endef\n \n define $(package)_preprocess_cmds\n+  sed -i.old \"s|FT_Get_Font_Format|FT_Get_X11_Font_Format|\" qtbase/src/platformsupport/fontdatabases/freetype/qfontengine_ft.cpp && \\\n   sed -i.old \"s|updateqm.commands = \\$$$$\\$$$$LRELEASE|updateqm.commands = $($(package)_extract_dir)/qttools/bin/lrelease|\" qttranslations/translations/translations.pro && \\\n   sed -i.old \"/updateqm.depends =/d\" qttranslations/translations/translations.pro && \\\n   sed -i.old \"s/src_plugins.depends = src_sql src_network/src_plugins.depends = src_network/\" qtbase/src/src.pro && \\\n@@ -137,6 +139,7 @@ define $(package)_preprocess_cmds\n   patch -p1 -i $($(package)_patch_dir)/fix_configure_mac.patch &&\\\n   patch -p1 -i $($(package)_patch_dir)/fix_no_printer.patch &&\\\n   patch -p1 -i $($(package)_patch_dir)/fix_rcc_determinism.patch &&\\\n+  patch -p1 -i $($(package)_patch_dir)/xkb-default.patch &&\\\n   echo \"!host_build: QMAKE_CFLAGS     += $($(package)_cflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n   echo \"!host_build: QMAKE_CXXFLAGS   += $($(package)_cxxflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n   echo \"!host_build: QMAKE_LFLAGS     += $($(package)_ldflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\"
      },
      {
        "sha": "19cf1cae2ec83e95b7a1d00b33476346c9ff199f",
        "filename": "depends/packages/rapidcheck.mk",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/packages/rapidcheck.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/packages/rapidcheck.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/rapidcheck.mk?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,18 @@\n+package=rapidcheck\n+$(package)_version=10fc0cb\n+$(package)_download_path=https://github.com/MarcoFalke/rapidcheck/archive\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=9640926223c00af45bce4c7df8b756b5458a89b2ba74cfe3e404467f13ce26df\n+\n+define $(package)_config_cmds\n+  cmake -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=true .\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) && \\\n+  mkdir -p $($(package)_staging_dir)$(host_prefix)/include && \\\n+  cp -a include/* $($(package)_staging_dir)$(host_prefix)/include/ && \\\n+  cp -a extras/boost_test/include/rapidcheck/* $($(package)_staging_dir)$(host_prefix)/include/rapidcheck/ && \\\n+  mkdir -p $($(package)_staging_dir)$(host_prefix)/lib && \\\n+  cp -a librapidcheck.a $($(package)_staging_dir)$(host_prefix)/lib/\n+endef"
      },
      {
        "sha": "c9068e83a584cc6e8f4cddb1964ce4c4e31134a1",
        "filename": "depends/packages/zeromq.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -1,8 +1,8 @@\n package=zeromq\n-$(package)_version=4.2.3\n+$(package)_version=4.2.5\n $(package)_download_path=https://github.com/zeromq/libzmq/releases/download/v$($(package)_version)/\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=8f1e2b2aade4dbfde98d82366d61baef2f62e812530160d2e6d0a5bb24e40bc0\n+$(package)_sha256_hash=cc9090ba35713d59bb2f7d7965f877036c49c5558ea0c290b0dcc6f2a17e489f\n $(package)_patches=0001-fix-build-with-older-mingw64.patch 0002-disable-pthread_set_name_np.patch\n \n define $(package)_set_vars"
      },
      {
        "sha": "b911ac56724b193f84d0cbdbf0bf0f8d92e0bab6",
        "filename": "depends/patches/zeromq/0001-fix-build-with-older-mingw64.patch",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/patches/zeromq/0001-fix-build-with-older-mingw64.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/patches/zeromq/0001-fix-build-with-older-mingw64.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/0001-fix-build-with-older-mingw64.patch?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -1,17 +1,17 @@\n-From 1a159c128c69a42d90819375c06a39994f3fbfc1 Mon Sep 17 00:00:00 2001\n-From: Cory Fields <cory-nospam-@coryfields.com>\n-Date: Tue, 28 Nov 2017 20:33:25 -0500\n+From f6866b0f166ad168618aae64c7fbee8775d3eb23 Mon Sep 17 00:00:00 2001\n+From: mruddy <6440430+mruddy@users.noreply.github.com>\n+Date: Sat, 30 Jun 2018 09:44:58 -0400\n Subject: [PATCH] fix build with older mingw64\n \n ---\n  src/windows.hpp | 7 +++++++\n  1 file changed, 7 insertions(+)\n \n diff --git a/src/windows.hpp b/src/windows.hpp\n-index 99e889d..e69038e 100644\n+index 6c3839fd..2c32ec79 100644\n --- a/src/windows.hpp\n +++ b/src/windows.hpp\n-@@ -55,6 +55,13 @@\n+@@ -58,6 +58,13 @@\n  #include <winsock2.h>\n  #include <windows.h>\n  #include <mswsock.h>\n@@ -23,8 +23,8 @@ index 99e889d..e69038e 100644\n +#include <ws2ipdef.h>\n +#endif\n  #include <iphlpapi.h>\n-\n+ \n  #if !defined __MINGW32__\n---\n-2.7.4\n+-- \n+2.17.1\n "
      },
      {
        "sha": "022e311977e794df924bd5da8f667356fff9a8fb",
        "filename": "depends/patches/zeromq/0002-disable-pthread_set_name_np.patch",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/patches/zeromq/0002-disable-pthread_set_name_np.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/depends/patches/zeromq/0002-disable-pthread_set_name_np.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/zeromq/0002-disable-pthread_set_name_np.patch?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -1,6 +1,6 @@\n-From 6e6b47d5ab381c3df3b30bb0b0a6cf210dfb1eba Mon Sep 17 00:00:00 2001\n-From: Cory Fields <cory-nospam-@coryfields.com>\n-Date: Mon, 5 Mar 2018 14:22:05 -0500\n+From c9bbdd6581d07acfe8971e4bcebe278a3676cf03 Mon Sep 17 00:00:00 2001\n+From: mruddy <6440430+mruddy@users.noreply.github.com>\n+Date: Sat, 30 Jun 2018 09:57:18 -0400\n Subject: [PATCH] disable pthread_set_name_np\n \n pthread_set_name_np adds a Glibc requirement on >= 2.12.\n@@ -9,27 +9,27 @@ pthread_set_name_np adds a Glibc requirement on >= 2.12.\n  1 file changed, 3 insertions(+), 1 deletion(-)\n \n diff --git a/src/thread.cpp b/src/thread.cpp\n-index 4fc59c3e..c3fdfd46 100644\n+index a1086b0c..9943f354 100644\n --- a/src/thread.cpp\n +++ b/src/thread.cpp\n-@@ -220,7 +220,7 @@ void zmq::thread_t::setThreadName(const char *name_)\n+@@ -307,7 +307,7 @@ void zmq::thread_t::setThreadName (const char *name_)\n   */\n      if (!name_)\n          return;\n -\n +#if 0\n  #if defined(ZMQ_HAVE_PTHREAD_SETNAME_1)\n-     int rc = pthread_setname_np(name_);\n-     if(rc) return;\n-@@ -233,6 +233,8 @@ void zmq::thread_t::setThreadName(const char *name_)\n+     int rc = pthread_setname_np (name_);\n+     if (rc)\n+@@ -323,6 +323,8 @@ void zmq::thread_t::setThreadName (const char *name_)\n  #elif defined(ZMQ_HAVE_PTHREAD_SET_NAME)\n-     pthread_set_name_np(descriptor, name_);\n+     pthread_set_name_np (descriptor, name_);\n  #endif\n +#endif\n +    return;\n  }\n  \n  #endif\n -- \n-2.11.1\n+2.17.1\n "
      },
      {
        "sha": "59df541567fbcb5b195e3f4fc294f9111d5ba48a",
        "filename": "doc/JSON-RPC-interface.md",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/JSON-RPC-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/JSON-RPC-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/JSON-RPC-interface.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,38 @@\n+# JSON-RPC Interface\n+\n+The headless daemon `bitcoind` has the JSON-RPC API enabled by default, the GUI\n+`bitcoin-qt` has it disabled by default. This can be changed with the `-server`\n+option. In the GUI it is possible to execute RPC methods in the Debug Console\n+Dialog.\n+\n+## RPC consistency guarantees\n+\n+State that can be queried via RPCs is guaranteed to be at least up-to-date with\n+the chain state immediately prior to the call's execution. However, the state\n+returned by RPCs that reflect the mempool may not be up-to-date with the\n+current mempool state.\n+\n+### Transaction Pool\n+\n+The mempool state returned via an RPC is consistent with itself and with the\n+chain state at the time of the call. Thus, the mempool state only encompasses\n+transactions that are considered mine-able by the node at the time of the RPC.\n+\n+The mempool state returned via an RPC reflects all effects of mempool and chain\n+state related RPCs that returned prior to this call.\n+\n+### Wallet\n+\n+The wallet state returned via an RPC is consistent with itself and with the\n+chain state at the time of the call.\n+\n+Wallet RPCs will return the latest chain state consistent with prior non-wallet\n+RPCs. The effects of all blocks (and transactions in blocks) at the time of the\n+call is reflected in the state of all wallet transactions. For example, if a\n+block contains transactions that conflicted with mempool transactions, the\n+wallet would reflect the removal of these mempool transactions in the state.\n+\n+However, the wallet may not be up-to-date with the current state of the mempool\n+or the state of the mempool by an RPC that returned before this RPC. For\n+example, a wallet transaction that was BIP-125-replaced in the mempool prior to\n+this RPC may not yet be reflected as such in this RPC response."
      },
      {
        "sha": "344b1be5c45e39d339a7ada835e4ac5fa0e1cbe2",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -3,7 +3,7 @@ Bitcoin Core\n \n Setup\n ---------------------\n-Bitcoin Core is the original Bitcoin client and it builds the backbone of the network. It downloads and, by default, stores the entire history of Bitcoin transactions (which is currently more than 100 GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n+Bitcoin Core is the original Bitcoin client and it builds the backbone of the network. It downloads and, by default, stores the entire history of Bitcoin transactions, which requires a few hundred gigabytes of disk space. Depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n \n To download Bitcoin Core, visit [bitcoincore.org](https://bitcoincore.org/en/releases/).\n \n@@ -30,7 +30,7 @@ Drag Bitcoin Core to your applications folder, and then run Bitcoin Core.\n \n * See the documentation at the [Bitcoin Wiki](https://en.bitcoin.it/wiki/Main_Page)\n for help and more information.\n-* Ask for help on [#bitcoin](http://webchat.freenode.net?channels=bitcoin) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net?channels=bitcoin).\n+* Ask for help on [#bitcoin](http://webchat.freenode.net?channels=bitcoin) on Freenode. If you don't have an IRC client, use [webchat here](http://webchat.freenode.net?channels=bitcoin).\n * Ask for help on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Technical Support board](https://bitcointalk.org/index.php?board=4.0).\n \n Building\n@@ -56,6 +56,7 @@ The Bitcoin repo's [root README](/README.md) contains relevant information on th\n - [Translation Process](translation_process.md)\n - [Translation Strings Policy](translation_strings_policy.md)\n - [Travis CI](travis-ci.md)\n+- [JSON-RPC Interface](JSON-RPC-interface.md)\n - [Unauthenticated REST Interface](REST-interface.md)\n - [Shared Libraries](shared-libraries.md)\n - [BIPS](bips.md)\n@@ -64,17 +65,19 @@ The Bitcoin repo's [root README](/README.md) contains relevant information on th\n \n ### Resources\n * Discuss on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Development & Technical Discussion board](https://bitcointalk.org/index.php?board=6.0).\n-* Discuss project-specific development on #bitcoin-core-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-core-dev).\n-* Discuss general Bitcoin development on #bitcoin-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n+* Discuss project-specific development on #bitcoin-core-dev on Freenode. If you don't have an IRC client, use [webchat here](http://webchat.freenode.net/?channels=bitcoin-core-dev).\n+* Discuss general Bitcoin development on #bitcoin-dev on Freenode. If you don't have an IRC client, use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n \n ### Miscellaneous\n - [Assets Attribution](assets-attribution.md)\n+- [bitcoin.conf Configuration File](bitcoin-conf.md)\n - [Files](files.md)\n - [Fuzz-testing](fuzzing.md)\n - [Reduce Traffic](reduce-traffic.md)\n - [Tor Support](tor.md)\n - [Init Scripts (systemd/upstart/openrc)](init.md)\n - [ZMQ](zmq.md)\n+- [PSBT support](psbt.md)\n \n License\n ---------------------"
      },
      {
        "sha": "44df698382a57643bb0546084d0afa04ca927da9",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -6,6 +6,12 @@ The REST API can be enabled with the `-rest` option.\n The interface runs on the same port as the JSON-RPC interface, by default port 8332 for mainnet, port 18332 for testnet,\n and port 18443 for regtest.\n \n+REST Interface consistency guarantees\n+-------------------------------------\n+\n+The [same guarantees as for the RPC Interface](/doc/JSON-RPC-interface.md#rpc-consistency-guarantees)\n+apply.\n+\n Supported API\n -------------\n "
      },
      {
        "sha": "88ecb8fe6523f7a5d7234eaf963128d1400919d6",
        "filename": "doc/bitcoin-conf.md",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/bitcoin-conf.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/bitcoin-conf.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin-conf.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,37 @@\n+# `bitcoin.conf` Configuration File\n+\n+The configuration file is used by `bitcoind`, `bitcoin-qt` and `bitcoin-cli`.\n+\n+All command-line options (except for `-?`, `-help`, `-version` and `-conf`) may be specified in a configuration file, and all configuration file options (except for `includeconf`) may also be specified on the command line. Command-line options override values set in the configuration file and configuration file options override values set in the GUI.\n+\n+## Configuration File Format\n+\n+The configuration file is a plain text file and consists of `option=value` entries, one per line. Leading and trailing whitespaces are removed.\n+\n+In contrast to the command-line usage:\n+- an option must be specified without leading `-`;\n+- a value of the given option is mandatory; e.g., `testnet=1` (for chain selection options), `noconnect=1` (for negated options).\n+\n+### Blank lines\n+\n+Blank lines are allowed and ignored by the parser.\n+\n+### Comments\n+\n+A comment starts with a number sign (`#`) and extends to the end of the line. All comments are ignored by the parser.\n+\n+Comments may appear in two ways:\n+- on their own on an otherwise empty line (_preferable_);\n+- after an `option=value` entry.\n+\n+### Network specific options\n+\n+Network specific options can be:\n+- placed into sections with headers `[main]` (not `[mainnet]`), `[test]` (not `[testnet]`) or `[regtest]`;\n+- prefixed with a chain name; e.g., `regtest.maxmempool=100`.\n+\n+## Configuration File Path\n+\n+The configuration file is not automatically created; you can create it using your favorite text editor. By default, the configuration file name is `bitcoin.conf` and it is located in the Bitcoin data directory, but both the Bitcoin data directory and the configuration file path may be changed using the `-datadir` and `-conf` command-line options.\n+\n+The `includeconf=<file>` option in the `bitcoin.conf` file can be used to include additional configuration files."
      },
      {
        "sha": "70f5dfc882e7ffe52eac63ff9dd6c291f5c41757",
        "filename": "doc/build-freebsd.md",
        "status": "modified",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/build-freebsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/build-freebsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-freebsd.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -14,6 +14,12 @@ You will need the following dependencies, which can be installed as root via pkg\n pkg install autoconf automake boost-libs git gmake libevent libtool openssl pkgconf\n ```\n \n+In order to run the test suite (recommended), you will need to have Python 3 installed:\n+\n+```\n+pkg install python3\n+```\n+\n For the wallet (optional):\n ```\n ./contrib/install_db4.sh `pwd`\n@@ -29,17 +35,29 @@ git clone https://github.com/bitcoin/bitcoin\n \n ## Building Bitcoin Core\n \n-**Important**: Use `gmake` (the non-GNU `make` will exit with an error).\n+**Important**: Use `gmake` (the non-GNU `make` will exit with an error):\n \n ```\n ./autogen.sh\n \n ./configure                  # to build with wallet OR\n ./configure --disable-wallet # to build without wallet\n+```\n+\n+followed by either:\n \n+```\n gmake\n ```\n \n+to build without testing, or\n+\n+```\n+gmake check\n+```\n+\n+to also run the test suite (recommended, if Python 3 is installed).\n+\n *Note on debugging*: The version of `gdb` installed by default is [ancient and considered harmful](https://wiki.freebsd.org/GdbRetirement).\n It is not suitable for debugging a multi-threaded C++ program, not even for getting backtraces. Please install the package `gdb` and\n use the versioned gdb command (e.g. `gdb7111`)."
      },
      {
        "sha": "41d5871d306c12254ab3e2dd4732744e6c8d328f",
        "filename": "doc/build-onecommand.md",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8bd1e54a27267b9bb09d9817e5dc47935df493/doc/build-onecommand.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8bd1e54a27267b9bb09d9817e5dc47935df493/doc/build-onecommand.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-onecommand.md?ref=fa8bd1e54a27267b9bb09d9817e5dc47935df493",
        "patch": "@@ -1,56 +0,0 @@\n-### Instruction\n-This console command will build last (0.16.2) version Bitcoin clients for Linux 64 bit, Windows 64 bit and Windows 32 bit. \n-\n-Has been tested on the clean server with Ubuntu 16 (64 bit 4GB RAM) \n-\n-```bash\n-cd ~ && sudo apt-get update && apt-get upgrade -y && apt-get install build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev -y && apt-get update -y && add-apt-repository ppa:bitcoin/bitcoin && apt-get update -y && apt-get install libdb4.8-dev libdb4.8++-dev libminiupnpc-dev libzmq3-dev libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler libqrencode-dev g++-mingw-w64-i686 mingw-w64-i686-dev g++-mingw-w64-x86-64 mingw-w64-x86-64-dev curl -y && update-alternatives --config x86_64-w64-mingw32-g++ &&  wget https://github.com/bitcoin/bitcoin/archive/v0.16.2.tar.gz && tar -xvzf v0.16.2.tar.gz && cd bitcoin-0.16.2/depends && make download && make && cd .. && ./autogen.sh && ./configure --enable-glibc-back-compat --prefix=`pwd`/depends/x86_64-pc-linux-gnu LDFLAGS=\"-static-libstdc++\" && make clean && make && make install && cd depends && make HOST=x86_64-w64-mingw32 -j4 && cd .. && ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32 && make clean && make && make install && cd depends && make HOST=i686-w64-mingw32 -j4 && cd .. && ./configure --prefix=`pwd`/depends/i686-w64-mingw32 && make clean && make && make install\n-```\n-\n-First you will asked \n-```bash\n-Press [ENTER] to continue or ctrl-c to cancel adding it\n-```\n-you should to press Enter\n-\n-After some time you will asked\n-```bash\n-  Selection    Path                                   Priority   Status\n-------------------------------------------------------------\n-* 0            /usr/bin/x86_64-w64-mingw32-g++-win32   60        auto mode\n-  1            /usr/bin/x86_64-w64-mingw32-g++-posix   30        manual mode\n-  2            /usr/bin/x86_64-w64-mingw32-g++-win32   60        manual mode\n-\n-Press <enter> to keep the current choice[*], or type selection number:\n-```\n-select \"1\" for switching to posix and press Enter\n-\n-After this you will asked\n-\n-```bash\n-  Selection    Path                                 Priority   Status\n-------------------------------------------------------------\n-* 0            /usr/bin/i686-w64-mingw32-g++-win32   60        auto mode\n-  1            /usr/bin/i686-w64-mingw32-g++-posix   30        manual mode\n-  2            /usr/bin/i686-w64-mingw32-g++-win32   60        manual mode\n-\n-Press <enter> to keep the current choice[*], or type selection number:\n-```\n-Again select \"1\" for switching to posix and press Enter\n-\n-\n-When command will complete working, Linux binaries will be in this folder ~/bitcoin-0.16.2/depends/x86-64-pc-linux-gnu/bin\n-\n-Windows binaries will be in this folders: \n-\n-~/bitcoin-0.16.2/depends/x86-64-w64-mingw32 (Windows 64 bit binaries)\n-\n-~/bitcoin-0.16.2/depends/i686-w64-mingw32 (Windows 32 bit binaries)\n-\n-### Note\n-\n-If process will killed then may be you have not enough RAM. You can increase it or use this coomand instead\n-\n-```bash\n-sudo fallocate -l 4G /swapfile && sudo chmod 600 /swapfile && sudo mkswap /swapfile && sudo swapon /swapfile\n-```"
      },
      {
        "sha": "dad2566a6c5c61476f5e1ebb42e4cd44da31b68b",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -1,6 +1,6 @@\n OpenBSD build guide\n ======================\n-(updated for OpenBSD 6.3)\n+(updated for OpenBSD 6.4)\n \n This guide describes how to build bitcoind and command-line utilities on OpenBSD.\n \n@@ -14,7 +14,7 @@ Run the following as root to install the base dependencies for building:\n ```bash\n pkg_add git gmake libevent libtool boost\n pkg_add autoconf # (select highest version, e.g. 2.69)\n-pkg_add automake # (select highest version, e.g. 1.15)\n+pkg_add automake # (select highest version, e.g. 1.16)\n pkg_add python # (select highest version, e.g. 3.6)\n \n git clone https://github.com/bitcoin/bitcoin.git\n@@ -36,7 +36,7 @@ BerkeleyDB is only necessary for the wallet functionality. To skip this, pass\n It is recommended to use Berkeley DB 4.8. You cannot use the BerkeleyDB library\n from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n If you have to build it yourself, you can use [the installation script included\n-in contrib/](/contrib/install_db4.sh) like so\n+in contrib/](/contrib/install_db4.sh) like so:\n \n ```shell\n ./contrib/install_db4.sh `pwd` CC=cc CXX=c++\n@@ -60,8 +60,8 @@ Preparation:\n export AUTOCONF_VERSION=2.69\n \n # Replace this with the automake version that you installed. Include only\n-# the major and minor parts of the version: use \"1.15\" for \"automake-1.15.1\".\n-export AUTOMAKE_VERSION=1.15\n+# the major and minor parts of the version: use \"1.16\" for \"automake-1.16.1\".\n+export AUTOMAKE_VERSION=1.16\n \n ./autogen.sh\n ```\n@@ -94,7 +94,7 @@ The standard ulimit restrictions in OpenBSD are very strict:\n \n     data(kbytes)         1572864\n \n-This, unfortunately, in some cases not enough to compile some `.cpp` files in the project,\n+This is, unfortunately, in some cases not enough to compile some `.cpp` files in the project,\n (see issue [#6658](https://github.com/bitcoin/bitcoin/issues/6658)).\n If your user is in the `staff` group the limit can be raised with:\n "
      },
      {
        "sha": "c9a59bab838acf31dc3ce117828bb2f7ab8323cf",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 18,
        "deletions": 7,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -20,28 +20,28 @@ Dependencies\n \n See [dependencies.md](dependencies.md) for a complete overview.\n \n-If you want to build the disk image with `make deploy` (.dmg / optional), you need RSVG\n+If you want to build the disk image with `make deploy` (.dmg / optional), you need RSVG:\n \n     brew install librsvg\n \n Berkeley DB\n -----------\n It is recommended to use Berkeley DB 4.8. If you have to build it yourself,\n you can use [the installation script included in contrib/](/contrib/install_db4.sh)\n-like so\n+like so:\n \n ```shell\n ./contrib/install_db4.sh .\n ```\n \n from the root of the repository.\n \n-**Note**: You only need Berkeley DB if the wallet is enabled (see the section *Disable-Wallet mode* below).\n+**Note**: You only need Berkeley DB if the wallet is enabled (see [*Disable-wallet mode*](/doc/build-osx.md#disable-wallet-mode)).\n \n Build Bitcoin Core\n ------------------------\n \n-1. Clone the Bitcoin Core source code and cd into `bitcoin`\n+1. Clone the Bitcoin Core source code:\n \n         git clone https://github.com/bitcoin/bitcoin\n         cd bitcoin\n@@ -64,18 +64,29 @@ Build Bitcoin Core\n \n         make deploy\n \n+Disable-wallet mode\n+--------------------\n+When the intention is to run only a P2P node without a wallet, Bitcoin Core may be compiled in\n+disable-wallet mode with:\n+\n+    ./configure --disable-wallet\n+\n+In this case there is no dependency on Berkeley DB 4.8.\n+\n+Mining is also possible in disable-wallet mode using the `getblocktemplate` RPC call.\n+\n Running\n -------\n \n Bitcoin Core is now available at `./src/bitcoind`\n \n-Before running, it's recommended that you create an RPC configuration file.\n+Before running, you may create an empty configuration file:\n \n-    echo -e \"rpcuser=bitcoinrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n+    touch \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n \n     chmod 600 \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n \n-The first time you run bitcoind, it will start downloading the blockchain. This process could take several hours.\n+The first time you run bitcoind, it will start downloading the blockchain. This process could take many hours, or even days on slower than average systems.\n \n You can monitor the download process by looking at the debug.log file:\n "
      },
      {
        "sha": "522e3069ce4b767bb6433ec62b5f2ce41c351610",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 20,
        "deletions": 19,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -6,8 +6,8 @@ Some notes on how to build Bitcoin Core in Unix.\n \n Note\n ---------------------\n-Always use absolute paths to configure and compile Bitcoin Core and the dependencies,\n-for example, when specifying the path of the dependency:\n+Always use absolute paths to configure and compile Bitcoin Core and the dependencies.\n+For example, when specifying the path of the dependency:\n \n \t../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n \n@@ -24,7 +24,7 @@ make\n make install # optional\n ```\n \n-This will build bitcoin-qt as well if the dependencies are met.\n+This will build bitcoin-qt as well, if the dependencies are met.\n \n Dependencies\n ---------------------\n@@ -47,7 +47,7 @@ Optional dependencies:\n  protobuf    | Payments in GUI  | Data interchange format used for payment protocol (only needed when GUI enabled)\n  libqrencode | QR codes in GUI  | Optional for generating QR codes (only needed when GUI enabled)\n  univalue    | Utility          | JSON parsing and encoding (bundled version will be used unless --with-system-univalue passed to configure)\n- libzmq3     | ZMQ notification | Optional, allows generating ZMQ notifications (requires ZMQ version >= 4.x)\n+ libzmq3     | ZMQ notification | Optional, allows generating ZMQ notifications (requires ZMQ version >= 4.0.0)\n \n For the versions used, see [dependencies.md](dependencies.md)\n \n@@ -70,7 +70,11 @@ tuned to conserve memory with additional CXXFLAGS:\n \n Build requirements:\n \n-    sudo apt-get install build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils python3 libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\n+    sudo apt-get install build-essential libtool autotools-dev automake pkg-config bsdmainutils python3\n+\n+Now, you can either build from self-compiled [depends](/depends/README.md) or install the required dependencies:\n+\n+    sudo apt-get install libssl-dev libevent-dev libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\n \n BerkeleyDB is required for the wallet.\n \n@@ -83,21 +87,22 @@ You can add the repository and install using the following commands:\n     sudo apt-get install libdb4.8-dev libdb4.8++-dev\n \n Ubuntu and Debian have their own libdb-dev and libdb++-dev packages, but these will install\n-BerkeleyDB 5.1 or later, which break binary wallet compatibility with the distributed executables which\n+BerkeleyDB 5.1 or later. This will break binary wallet compatibility with the distributed executables, which\n are based on BerkeleyDB 4.8. If you do not care about wallet compatibility,\n pass `--with-incompatible-bdb` to configure.\n \n-See the section \"Disable-wallet mode\" to build Bitcoin Core without wallet.\n+To build Bitcoin Core without wallet, see [*Disable-wallet mode*](/doc/build-unix.md#disable-wallet-mode)\n+\n \n Optional (see --with-miniupnpc and --enable-upnp-default):\n \n     sudo apt-get install libminiupnpc-dev\n \n-ZMQ dependencies (provides ZMQ API 4.x):\n+ZMQ dependencies (provides ZMQ API):\n \n     sudo apt-get install libzmq3-dev\n \n-#### Dependencies for the GUI\n+GUI dependencies:\n \n If you want to build bitcoin-qt, make sure that the required packages for Qt development\n are installed. Qt 5 is necessary to build the GUI.\n@@ -157,15 +162,15 @@ Berkeley DB\n -----------\n It is recommended to use Berkeley DB 4.8. If you have to build it yourself,\n you can use [the installation script included in contrib/](/contrib/install_db4.sh)\n-like so\n+like so:\n \n ```shell\n ./contrib/install_db4.sh `pwd`\n ```\n \n from the root of the repository.\n \n-**Note**: You only need Berkeley DB if the wallet is enabled (see the section *Disable-Wallet mode* below).\n+**Note**: You only need Berkeley DB if the wallet is enabled (see [*Disable-wallet mode*](/doc/build-unix.md#disable-wallet-mode)).\n \n Boost\n -----\n@@ -189,9 +194,7 @@ Hardening Flags:\n \n \n Hardening enables the following features:\n-\n-* Position Independent Executable\n-    Build position independent code to take advantage of Address Space Layout Randomization\n+* _Position Independent Executable_: Build position independent code to take advantage of Address Space Layout Randomization\n     offered by some kernels. Attackers who can cause execution of code at an arbitrary memory\n     location are thwarted if they don't know where anything useful is located.\n     The stack and heap are randomly located by default, but this allows the code section to be\n@@ -209,8 +212,7 @@ Hardening enables the following features:\n      TYPE\n     ET_DYN\n \n-* Non-executable Stack\n-    If the stack is executable then trivial stack-based buffer overflow exploits are possible if\n+* _Non-executable Stack_: If the stack is executable then trivial stack-based buffer overflow exploits are possible if\n     vulnerable buffers are found. By default, Bitcoin Core should be built with a non-executable stack,\n     but if one of the libraries it uses asks for an executable stack or someone makes a mistake\n     and uses a compiler extension which requires an executable stack, it will silently build an\n@@ -234,8 +236,7 @@ disable-wallet mode with:\n \n In this case there is no dependency on Berkeley DB 4.8.\n \n-Mining is also possible in disable-wallet mode, but only using the `getblocktemplate` RPC\n-call not `getwork`.\n+Mining is also possible in disable-wallet mode using the `getblocktemplate` RPC call.\n \n Additional Configure Flags\n --------------------------\n@@ -279,9 +280,9 @@ To build executables for ARM:\n     cd depends\n     make HOST=arm-linux-gnueabihf NO_QT=1\n     cd ..\n+    ./autogen.sh\n     ./configure --prefix=$PWD/depends/arm-linux-gnueabihf --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\n     make\n \n \n For further documentation on the depends system see [README.md](../depends/README.md) in the depends directory.\n-"
      },
      {
        "sha": "fc93a0c6e4ced53ab4b972a9a4444f578cf5a6fd",
        "filename": "doc/build-windows.md",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -5,15 +5,15 @@ Below are some notes on how to build Bitcoin Core for Windows.\n \n The options known to work for building Bitcoin Core on Windows are:\n \n-* On Linux using the [Mingw-w64](https://mingw-w64.org/doku.php) cross compiler tool chain. Ubuntu Bionic 18.04 is required\n+* On Linux, using the [Mingw-w64](https://mingw-w64.org/doku.php) cross compiler tool chain. Ubuntu Bionic 18.04 is required\n and is the platform used to build the Bitcoin Core Windows release binaries.\n-* On Windows using [Windows\n+* On Windows, using [Windows\n Subsystem for Linux (WSL)](https://msdn.microsoft.com/commandline/wsl/about) and the Mingw-w64 cross compiler tool chain.\n \n Other options which may work, but which have not been extensively tested are (please contribute instructions):\n \n-* On Windows using a POSIX compatibility layer application such as [cygwin](http://www.cygwin.com/) or [msys2](http://www.msys2.org/).\n-* On Windows using a native compiler tool chain such as [Visual Studio](https://www.visualstudio.com).\n+* On Windows, using a POSIX compatibility layer application such as [cygwin](http://www.cygwin.com/) or [msys2](http://www.msys2.org/).\n+* On Windows, using a native compiler tool chain such as [Visual Studio](https://www.visualstudio.com).\n \n Installing Windows Subsystem for Linux\n ---------------------------------------\n@@ -69,7 +69,7 @@ See also: [dependencies.md](dependencies.md).\n \n ## Building for 64-bit Windows\n \n-The first step is to install the mingw-w64 cross-compilation tool chain.\n+The first step is to install the mingw-w64 cross-compilation tool chain:\n \n     sudo apt install g++-mingw-w64-x86-64\n \n@@ -81,13 +81,13 @@ Once the toolchain is installed the build steps are common:\n \n Note that for WSL the Bitcoin Core source path MUST be somewhere in the default mount file system, for\n example /usr/src/bitcoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\n-This means you cannot use a directory that located directly on the host Windows file system to perform the build.\n+This means you cannot use a directory that is located directly on the host Windows file system to perform the build.\n \n Acquire the source in the usual way:\n \n     git clone https://github.com/bitcoin/bitcoin.git\n \n-Once the source code is ready the build steps are below.\n+Once the source code is ready the build steps are below:\n \n     PATH=$(echo \"$PATH\" | sed -e 's/:\\/mnt.*//g') # strip out problematic Windows %PATH% imported var\n     cd depends\n@@ -133,7 +133,7 @@ Installation\n -------------\n \n After building using the Windows subsystem it can be useful to copy the compiled\n-executables to a directory on the windows drive in the same directory structure\n+executables to a directory on the Windows drive in the same directory structure\n as they appear in the release `.zip` archive. This can be done in the following\n way. This will install to `c:\\workspace\\bitcoin`, for example:\n \n@@ -142,9 +142,9 @@ way. This will install to `c:\\workspace\\bitcoin`, for example:\n Footnotes\n ---------\n \n-<a name=\"footnote1\">1</a>: Starting from Ubuntu Xenial 16.04 both the 32 and 64 bit Mingw-w64 packages install two different\n+<a name=\"footnote1\">1</a>: Starting from Ubuntu Xenial 16.04, both the 32 and 64 bit Mingw-w64 packages install two different\n compiler options to allow a choice between either posix or win32 threads. The default option is win32 threads which is the more\n efficient since it will result in binary code that links directly with the Windows kernel32.lib. Unfortunately, the headers\n-required to support win32 threads conflict with some of the classes in the C++11 standard library in particular std::mutex.\n+required to support win32 threads conflict with some of the classes in the C++11 standard library, in particular std::mutex.\n It's not possible to build the Bitcoin Core code using the win32 version of the Mingw-w64 cross compilers (at least not without\n modifying headers in the Bitcoin Core source code)."
      },
      {
        "sha": "d777aaf66fdb7877c55dff1a656fcd8d2478cc8b",
        "filename": "doc/dependencies.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -26,5 +26,5 @@ These are the dependencies currently used by Bitcoin Core. You can find instruct\n | Qt | [5.9.6](https://download.qt.io/official_releases/qt/) | 5.x | No |  |  |\n | XCB |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk#L87) (Linux only) |\n | xkbcommon |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk#L86) (Linux only) |\n-| ZeroMQ | [4.2.3](https://github.com/zeromq/libzmq/releases) |  | No |  |  |\n+| ZeroMQ | [4.2.5](https://github.com/zeromq/libzmq/releases) | 4.0.0 | No |  |  |\n | zlib | [1.2.11](https://zlib.net/) |  |  |  | No |"
      },
      {
        "sha": "de4d4e574f84664a416989f338e7aa584978f364",
        "filename": "doc/descriptors.md",
        "status": "added",
        "additions": 171,
        "deletions": 0,
        "changes": 171,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/descriptors.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/descriptors.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/descriptors.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,171 @@\n+# Support for Output Descriptors in Bitcoin Core\n+\n+Since Bitcoin Core v0.17, there is support for Output Descriptors in the\n+`scantxoutset` RPC call. This is a simple language which can be used to\n+describe collections of output scripts.\n+\n+This document describes the language. For the specifics on usage for scanning\n+the UTXO set, see the `scantxoutset` RPC help.\n+\n+## Features\n+\n+Output descriptors currently support:\n+- Pay-to-pubkey scripts (P2PK), through the `pk` function.\n+- Pay-to-pubkey-hash scripts (P2PKH), through the `pkh` function.\n+- Pay-to-witness-pubkey-hash scripts (P2WPKH), through the `wpkh` function.\n+- Pay-to-script-hash scripts (P2SH), through the `sh` function.\n+- Pay-to-witness-script-hash scripts (P2WSH), through the `wsh` function.\n+- Multisig scripts, through the `multi` function.\n+- Any type of supported address through the `addr` function.\n+- Raw hex scripts through the `raw` function.\n+- Public keys (compressed and uncompressed) in hex notation, or BIP32 extended pubkeys with derivation paths.\n+\n+## Examples\n+\n+- `pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)` describes a P2PK output with the specified public key.\n+- `pkh(02c6047f9441ed7d6d3045406e95c07cd85c778e4b8cef3ca7abac09b95c709ee5)` describes a P2PKH output with the specified public key.\n+- `wpkh(02f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9)` describes a P2WPKH output with the specified public key.\n+- `sh(wpkh(03fff97bd5755eeea420453a14355235d382f6472f8568a18b2f057a1460297556))` describes a P2SH-P2WPKH output with the specified public key.\n+- `combo(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)` describes any P2PK, P2PKH, P2WPKH, or P2SH-P2WPKH output with the specified public key.\n+- `sh(wsh(pkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13)))` describes an (overly complicated) P2SH-P2WSH-P2PKH output with the specified public key.\n+- `multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc)` describes a bare *1-of-2* multisig output with keys in the specified order.\n+- `sh(multi(2,022f01e5e15cca351daff3843fb70f3c2f0a1bdd05e5af888a67784ef3e10a2a01,03acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe))` describes a P2SH *2-of-2* multisig output with keys in the specified order.\n+- `wsh(multi(2,03a0434d9e47f3c86235477c7b1ae6ae5d3442d49b1943c2b752a68e2a47e247c7,03774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb,03d01115d548e7561b15c38f004d734633687cf4419620095bc5b0f47070afe85a))` describes a P2WSH *2-of-3* multisig output with keys in the specified order.\n+- `sh(wsh(multi(1,03f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8,03499fdf9e895e719cfd64e67f07d38e3226aa7b63678949e6e49b241a60e823e4,02d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e)))` describes a P2SH-P2WSH *1-of-3* multisig output with keys in the specified order.\n+- `pk(xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8)` describes a P2PK output with the public key of the specified xpub.\n+- `pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1'/2)` describes a P2PKH output with child key *1'/2* of the specified xpub.\n+- `pkh([d34db33f/44'/0'/0']xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL/1/*)` describes a set of P2PKH outputs, but additionally specifies that the specified xpub is a child of a master with fingerprint `d34db33f`, and derived using path `44'/0'/0'`.\n+- `wsh(multi(1,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/1/0/*,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/0/0/*))` describes a set of *1-of-2* P2WSH multisig outputs where the first multisig key is the *1/0/`i`* child of the first specified xpub and the second multisig key is the *0/0/`i`* child of the second specified xpub, and `i` is any number in a configurable range (`0-1000` by default).\n+\n+## Reference\n+\n+Descriptors consist of several types of expressions. The top level expression is always a `SCRIPT`.\n+\n+`SCRIPT` expressions:\n+- `sh(SCRIPT)` (top level only): P2SH embed the argument.\n+- `wsh(SCRIPT)` (not inside another 'wsh'): P2WSH embed the argument.\n+- `pk(KEY)` (anywhere): P2PK output for the given public key.\n+- `pkh(KEY)` (anywhere): P2PKH output for the given public key (use `addr` if you only know the pubkey hash).\n+- `wpkh(KEY)` (not inside `wsh`): P2WPKH output for the given compressed pubkey.\n+- `combo(KEY)` (top level only): an alias for the collection of `pk(KEY)` and `pkh(KEY)`. If the key is compressed, it also includes `wpkh(KEY)` and `sh(wpkh(KEY))`.\n+- `multi(k,KEY_1,KEY_2,...,KEY_n)` (anywhere): k-of-n multisig script.\n+- `addr(ADDR)` (top level only): the script which ADDR expands to.\n+- `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n+\n+`KEY` expressions:\n+- Optionally, key origin information, consisting of:\n+  - An open bracket `[`\n+  - Exactly 8 hex characters for the fingerprint of the key where the derivation starts (see BIP32 for details)\n+  - Followed by zero or more `/NUM` or `/NUM'` path elements to indicate unhardened or hardened derivation steps between the fingerprint and the key or xpub/xprv root that follows\n+  - A closing bracket `]`\n+- Followed by the actual key, which is either:\n+  - Hex encoded public keys (either 66 characters starting with `02` or `03` for a compressed pubkey, or 130 characters starting with `04` for an uncompressed pubkey).\n+    - Inside `wpkh` and `wsh`, only compressed public keys are permitted.\n+  - [WIF](https://en.bitcoin.it/wiki/Wallet_import_format) encoded private keys may be specified instead of the corresponding public key, with the same meaning.\n+  - `xpub` encoded extended public key or `xprv` encoded extended private key (as defined in [BIP 32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)).\n+    - Followed by zero or more `/NUM` unhardened and `/NUM'` hardened BIP32 derivation steps.\n+    - Optionally followed by a single `/*` or `/*'` final step to denote all (direct) unhardened or hardened children.\n+    - The usage of hardened derivation steps requires providing the private key.\n+\n+(Anywhere a `'` suffix is permitted to denote hardened derivation, the suffix `h` can be used instead.)\n+\n+`ADDR` expressions are any type of supported address:\n+- P2PKH addresses (base58, of the form `1...` for mainnet or `[nm]...` for testnet). Note that P2PKH addresses in descriptors cannot be used for P2PK outputs (use the `pk` function instead).\n+- P2SH addresses (base58, of the form `3...` for mainnet or `2...` for testnet, defined in [BIP 13](https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki)).\n+- Segwit addresses (bech32, of the form `bc1...` for mainnet or `tb1...` for testnet, defined in [BIP 173](https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki)).\n+\n+## Explanation\n+\n+### Single-key scripts\n+\n+Many single-key constructions are used in practice, generally including\n+P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH. Many more combinations are\n+imaginable, though they may not be optimal: P2SH-P2PK, P2SH-P2PKH,\n+P2WSH-P2PK, P2WSH-P2PKH, P2SH-P2WSH-P2PK, P2SH-P2WSH-P2PKH.\n+\n+To describe these, we model these as functions. The functions `pk`\n+(P2PK), `pkh` (P2PKH) and `wpkh` (P2WPKH) take as input a `KEY` expression, and return the\n+corresponding *scriptPubKey*. The functions `sh` (P2SH) and `wsh` (P2WSH)\n+take as input a `SCRIPT` expression, and return the script describing P2SH and P2WSH\n+outputs with the input as embedded script. The names of the functions do\n+not contain \"p2\" for brevity.\n+\n+### Multisig\n+\n+Several pieces of software use multi-signature (multisig) scripts based\n+on Bitcoin's OP_CHECKMULTISIG opcode. To support these, we introduce the\n+`multi(k,key_1,key_2,...,key_n)` function. It represents a *k-of-n*\n+multisig policy, where any *k* out of the *n* provided `KEY` expressions must\n+sign.\n+\n+Key order is significant. A `multi()` expression describes a multisig script\n+with keys in the specified order, and in a search for TXOs, it will not match\n+outputs with multisig scriptPubKeys that have the same keys in a different\n+order. Also, to prevent a combinatorial explosion of the search space, if more\n+than one of the `multi()` key arguments is a BIP32 wildcard path ending in `/*`\n+or `*'`, the `multi()` expression only matches multisig scripts with the `i`th\n+child key from each wildcard path in lockstep, rather than scripts with any\n+combination of child keys from each wildcard path.\n+\n+### BIP32 derived keys and chains\n+\n+Most modern wallet software and hardware uses keys that are derived using\n+BIP32 (\"HD keys\"). We support these directly by permitting strings\n+consisting of an extended public key (commonly referred to as an *xpub*)\n+plus derivation path anywhere a public key is expected. The derivation\n+path consists of a sequence of 0 or more integers (in the range\n+*0..2<sup>31</sup>-1*) each optionally followed by `'` or `h`, and\n+separated by `/` characters. The string may optionally end with the\n+literal `/*` or `/*'` (or `/*h`) to refer to all unhardened or hardened\n+child keys in a configurable range (by default `0-1000`, inclusive).\n+\n+Whenever a public key is described using a hardened derivation step, the\n+script cannot be computed without access to the corresponding private\n+key.\n+\n+### Key origin identification\n+\n+In order to describe scripts whose signing keys reside on another device,\n+it may be necessary to identify the master key and derivation path an\n+xpub was derived with.\n+\n+For example, when following BIP44, it would be useful to describe a\n+change chain directly as `xpub.../44'/0'/0'/1/*` where `xpub...`\n+corresponds with the master key `m`. Unfortunately, since there are\n+hardened derivation steps that follow the xpub, this descriptor does not\n+let you compute scripts without access to the corresponding private keys.\n+Instead, it should be written as `xpub.../1/*`, where xpub corresponds to\n+`m/44'/0'/0'`.\n+\n+When interacting with a hardware device, it may be necessary to include\n+the entire path from the master down. [BIP174](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki) standardizes this by\n+providing the master key *fingerprint* (first 32 bit of the Hash160 of\n+the master pubkey), plus all derivation steps. To support constructing\n+these, we permit providing this key origin information inside the\n+descriptor language, even though it does not affect the actual\n+scriptPubKeys it refers to.\n+\n+Every public key can be prefixed by an 8-character hexadecimal\n+fingerprint plus optional derivation steps (hardened and unhardened)\n+surrounded by brackets, identifying the master and derivation path the key or xpub\n+that follows was derived with.\n+\n+Note that the fingerprint of the parent only serves as a fast way to detect\n+parent and child nodes in software, and software must be willing to deal with\n+collisions.\n+\n+### Including private keys\n+\n+Often it is useful to communicate a description of scripts along with the\n+necessary private keys. For this reason, anywhere a public key or xpub is\n+supported, a private key in WIF format or xprv may be provided instead.\n+This is useful when private keys are necessary for hardened derivation\n+steps, or for dumping wallet descriptors including private key material.\n+\n+### Compatibility with old wallets\n+\n+In order to easily represent the sets of scripts currently supported by\n+existing Bitcoin Core wallets, a convenience function `combo` is\n+provided, which takes as input a public key, and describes a set of P2PK,\n+P2PKH, P2WPKH, and P2SH-P2WPH scripts for that key. In case the key is\n+uncompressed, the set only includes P2PK and P2PKH scripts."
      },
      {
        "sha": "bb477d4be08bc0746524e3c251a5aeb249ebd8db",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 19,
        "deletions": 5,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -69,7 +69,7 @@ tool to clean up patches automatically before submission.\n - **Symbol naming conventions**. These are preferred in new code, but are not\n required when doing so would need changes to significant pieces of existing\n code.\n-  - Variable and namespace names are all lowercase, and may use `_` to\n+  - Variable (including function arguments) and namespace names are all lowercase, and may use `_` to\n     separate words (snake_case).\n     - Class member variables have a `m_` prefix.\n     - Global variables have a `g_` prefix.\n@@ -439,6 +439,11 @@ General C++\n \n   - *Rationale*: This avoids memory and resource leaks, and ensures exception safety\n \n+- Use `MakeUnique()` to construct objects owned by `unique_ptr`s\n+\n+  - *Rationale*: `MakeUnique` is concise and ensures exception safety in complex expressions.\n+    `MakeUnique` is a temporary project local implementation of `std::make_unique` (C++14).\n+\n C++ data structures\n --------------------\n \n@@ -512,7 +517,7 @@ Strings and formatting\n   - *Rationale*: These functions do overflow checking, and avoid pesky locale issues.\n \n - Avoid using locale dependent functions if possible. You can use the provided\n-  [`lint-locale-dependence.sh`](/contrib/devtools/lint-locale-dependence.sh)\n+  [`lint-locale-dependence.sh`](/test/lint/lint-locale-dependence.sh)\n   to check for accidental use of locale dependent functions.\n \n   - *Rationale*: Unnecessary locale dependence can cause bugs that are very tricky to isolate and fix.\n@@ -700,10 +705,10 @@ Current subtrees include:\n   - Upstream at https://github.com/google/leveldb ; Maintained by Google, but\n     open important PRs to Core to avoid delay.\n   - **Note**: Follow the instructions in [Upgrading LevelDB](#upgrading-leveldb) when\n-    merging upstream changes to the leveldb subtree.\n+    merging upstream changes to the LevelDB subtree.\n \n - src/libsecp256k1\n-  - Upstream at https://github.com/bitcoin-core/secp256k1/ ; actively maintaned by Core contributors.\n+  - Upstream at https://github.com/bitcoin-core/secp256k1/ ; actively maintained by Core contributors.\n \n - src/crypto/ctaes\n   - Upstream at https://github.com/bitcoin-core/ctaes ; actively maintained by Core contributors.\n@@ -822,7 +827,16 @@ To create a scripted-diff:\n     - `-BEGIN VERIFY SCRIPT-`\n     - `-END VERIFY SCRIPT-`\n \n-The scripted-diff is verified by the tool `test/lint/commit-script-check.sh`\n+The scripted-diff is verified by the tool `test/lint/commit-script-check.sh`. The tool's default behavior when supplied\n+with a commit is to verify all scripted-diffs from the beginning of time up to said commit. Internally, the tool passes\n+the first supplied argument to `git rev-list --reverse` to determine which commits to verify script-diffs for, ignoring\n+commits that don't conform to the commit message format described above.\n+\n+For development, it might be more convenient to verify all scripted-diffs in a range `A..B`, for example:\n+\n+```bash\n+test/lint/commit-script-check.sh origin/master..HEAD\n+```\n \n Commit [`bb81e173`](https://github.com/bitcoin/bitcoin/commit/bb81e173) is an example of a scripted-diff.\n "
      },
      {
        "sha": "5778b09d0592b63ab3f24ce5c28b33aaf850c83c",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -22,7 +22,7 @@ Configuration\n \n At a bare minimum, bitcoind requires that the rpcpassword setting be set\n when running as a daemon.  If the configuration file does not exist or this\n-setting is not set, bitcoind will shutdown promptly after startup.\n+setting is not set, bitcoind will shut down promptly after startup.\n \n This password does not have to be remembered or typed as it is mostly used\n as a fixed token that bitcoind and client programs read from the configuration"
      },
      {
        "sha": "9b36319e649e4a8a15912590671674180860885a",
        "filename": "doc/man/Makefile.am",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/man/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/man/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/Makefile.am?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -8,6 +8,10 @@ if ENABLE_QT\n   dist_man1_MANS+=bitcoin-qt.1\n endif\n \n-if BUILD_BITCOIN_UTILS\n-  dist_man1_MANS+=bitcoin-cli.1 bitcoin-tx.1\n+if BUILD_BITCOIN_CLI\n+  dist_man1_MANS+=bitcoin-cli.1\n+endif\n+\n+if BUILD_BITCOIN_TX\n+  dist_man1_MANS+=bitcoin-tx.1\n endif"
      },
      {
        "sha": "95e2f7fa01201dc20629a2cdda4e42df2a8f98bd",
        "filename": "doc/psbt.md",
        "status": "added",
        "additions": 132,
        "deletions": 0,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/psbt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/psbt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/psbt.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,132 @@\n+# PSBT Howto for Bitcoin Core\n+\n+Since Bitcoin Core 0.17, an RPC interface exists for Partially Signed Bitcoin\n+Transactions (PSBTs, as specified in\n+[BIP 174](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki)).\n+\n+This document describes the overall workflow for producing signed transactions\n+through the use of PSBT, and the specific RPC commands used in typical\n+scenarios.\n+\n+## PSBT in general\n+\n+PSBT is an interchange format for Bitcoin transactions that are not fully signed\n+yet, together with relevant metadata to help entities work towards signing it.\n+It is intended to simplify workflows where multiple parties need to cooperate to\n+produce a transaction. Examples include hardware wallets, multisig setups, and\n+[CoinJoin](https://bitcointalk.org/?topic=279249) transactions.\n+\n+### Overall workflow\n+\n+Overall, the construction of a fully signed Bitcoin transaction goes through the\n+following steps:\n+\n+- A **Creator** proposes a particular transaction to be created. They construct\n+  a PSBT that contains certain inputs and outputs, but no additional metadata.\n+- For each input, an **Updater** adds information about the UTXOs being spent by\n+  the transaction to the PSBT. They also add information about the scripts and\n+  public keys involved in each of the inputs (and possibly outputs) of the PSBT.\n+- **Signers** inspect the transaction and its metadata to decide whether they\n+  agree with the transaction. They can use amount information from the UTXOs\n+  to assess the values and fees involved. If they agree, they produce a\n+  partial signature for the inputs for which they have relevant key(s).\n+- A **Finalizer** is run for each input to convert the partial signatures and\n+  possibly script information into a final `scriptSig` and/or `scriptWitness`.\n+- An **Extractor** produces a valid Bitcoin transaction (in network format)\n+  from a PSBT for which all inputs are finalized.\n+\n+Generally, each of the above (excluding Creator and Extractor) will simply\n+add more and more data to a particular PSBT, until all inputs are fully signed.\n+In a naive workflow, they all have to operate sequentially, passing the PSBT\n+from one to the next, until the Extractor can convert it to a real transaction.\n+In order to permit parallel operation, **Combiners** can be employed which merge\n+metadata from different PSBTs for the same unsigned transaction.\n+\n+The names above in bold are the names of the roles defined in BIP174. They're\n+useful in understanding the underlying steps, but in practice, software and\n+hardware implementations will typically implement multiple roles simultaneously.\n+\n+## PSBT in Bitcoin Core\n+\n+### RPCs\n+\n+- **`converttopsbt` (Creator)** is a utility RPC that converts an\n+  unsigned raw transaction to PSBT format. It ignores existing signatures.\n+- **`createpsbt` (Creator)** is a utility RPC that takes a list of inputs and\n+  outputs and converts them to a PSBT with no additional information. It is\n+  equivalent to calling `createrawtransaction` followed by `converttopsbt`.\n+- **`walletcreatefundedpsbt` (Creator, Updater)** is a wallet RPC that creates a\n+  PSBT with the specified inputs and outputs, adds additional inputs and change\n+  to it to balance it out, and adds relevant metadata. In particular, for inputs\n+  that the wallet knows about (counting towards its normal or watch-only\n+  balance), UTXO information will be added. For outputs and inputs with UTXO\n+  information present, key and script information will be added which the wallet\n+  knows about. It is equivalent to running `createrawtransaction`, followed by\n+  `fundrawtransaction`, and `converttopsbt`.\n+- **`walletprocesspsbt` (Updater, Signer, Finalizer)** is a wallet RPC that takes as\n+  input a PSBT, adds UTXO, key, and script data to inputs and outputs that miss\n+  it, and optionally signs inputs. Where possible it also finalizes the partial\n+  signatures.\n+- **`finalizepsbt` (Finalizer, Extractor)** is a utility RPC that finalizes any\n+  partial signatures, and if all inputs are finalized, converts the result to a\n+  fully signed transaction which can be broadcast with `sendrawtransaction`.\n+- **`combinepsbt` (Combiner)** is a utility RPC that implements a Combiner. It\n+  can be used at any point in the workflow to merge information added to\n+  different versions of the same PSBT. In particular it is useful to combine the\n+  output of multiple Updaters or Signers.\n+- **`decodepsbt`** is a diagnostic utility RPC which will show all information in\n+  a PSBT in human-readable form, as well as compute its eventual fee if known.\n+\n+### Workflows\n+\n+#### Multisig with multiple Bitcoin Core instances\n+\n+Alice, Bob, and Carol want to create a 2-of-3 multisig address. They're all using\n+Bitcoin Core. We assume their wallets only contain the multisig funds. In case\n+they also have a personal wallet, this can be accomplished through the\n+multiwallet feature - possibly resulting in a need to add `-rpcwallet=name` to\n+the command line in case `bitcoin-cli` is used.\n+\n+Setup:\n+- All three call `getnewaddress` to create a new address; call these addresses\n+  *Aalice*, *Abob*, and *Acarol*.\n+- All three call `getaddressinfo X`, with *X* their respective address, and\n+  remember the corresponding public keys. Call these public keys *Kalice*,\n+  *Kbob*, and *Kcarol*.\n+- All three now run `addmultisigaddress 2 [\"Kalice\",\"Kbob\",\"Kcarol\"]` to teach\n+  their wallet about the multisig script. Call the address produced by this\n+  command *Amulti*. They may be required to explicitly specify the same\n+  addresstype option each, to avoid constructing different versions due to\n+  differences in configuration.\n+- They also run `importaddress \"Amulti\" \"\" false` to make their wallets treat\n+  payments to *Amulti* as contributing to the watch-only balance.\n+- Others can verify the produced address by running\n+  `createmultisig 2 [\"Kalice\",\"Kbob\",\"Kcarol\"]`, and expecting *Amulti* as\n+  output. Again, it may be necessary to explicitly specify the addresstype\n+  in order to get a result that matches. This command won't enable them to\n+  initiate transactions later, however.\n+- They can now give out *D* as address others can pay to.\n+\n+Later, when *V* BTC has been received on *Amulti*, and Bob and Carol want to\n+move the coins in their entirety to address *Asend*, with no change. Alice\n+does not need to be involved.\n+- One of them - let's assume Carol here - initiates the creation. She runs\n+  `walletcreatefundedpsbt [] {\"Asend\":V} 0 false {\"subtractFeeFromOutputs\":[0], \"includeWatching\":true}`.\n+  We call the resulting PSBT *P*. P does not contain any signatures.\n+- Carol needs to sign the transaction herself. In order to do so, she runs\n+  `walletprocesspsbt P`, and gives the resulting PSBT *P2* to Bob.\n+- Bob inspects the PSBT using `decodepsbt \"P2\"` to determine if the transaction\n+  has indeed just the expected input, and an output to *Asend*, and the fee is\n+  reasonable. If he agrees, he calls `walletprocesspsbt \"P2\"` to sign. The\n+  resulting PSBT *P3* contains both Carol's and Bob's signature.\n+- Now anyone can call `finalizepsbt \"P2\"` to extract a fully signed transaction\n+  *T*.\n+- Finally anyone can broadcast the transaction using `sendrawtransaction \"T\"`.\n+\n+In case there are more signers, it may be advantageous to let them all sign in\n+parallel, rather passing the PSBT from one signer to the next one. In the\n+above example this would translate to Carol handing a copy of *P* to each signer\n+separately. They can then all invoke `walletprocesspsbt P`, and end up with\n+their individually-signed PSBT structures. They then all send those back to\n+Carol (or anyone) who can combine them using `combinepsbt`. The last two steps\n+(`finalizepsbt` and `sendrawtransaction`) remain unchanged."
      },
      {
        "sha": "2cc5ab49fbf8b4bedc3b4f9cff27f627b5459c3d",
        "filename": "doc/release-notes-14060.md",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes-14060.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes-14060.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-14060.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,21 @@\n+Configuration\n+-------------\n+\n+The outbound message high water mark of the ZMQ PUB sockets are now\n+configurable via the options:\n+\n+`-zmqpubhashtxhwm=n`\n+\n+`-zmqpubhashblockhwm=n`\n+\n+`-zmqpubrawblockhwm=n`\n+\n+`-zmqpubrawtxhwm=n`\n+\n+Each high water mark value must be an integer greater than or equal to 0.\n+The high water mark limits the maximum number of messages that ZMQ will\n+queue in memory for any single subscriber. A value of 0 means no limit.\n+When not specified, the default value continues to be 1000.\n+When a ZMQ PUB socket reaches its high water mark for a subscriber, then\n+additional messages to the subscriber are dropped until the number of\n+queued messages again falls below the high water mark value."
      },
      {
        "sha": "bb8c0a623eede8ea09aa93c8a79284e6151bf432",
        "filename": "doc/release-notes-14477.md",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes-14477.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes-14477.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-14477.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,5 @@\n+Miscellaneous RPC changes\n+------------\n+\n+- `getaddressinfo` now reports `solvable`, a boolean indicating whether all information necessary for signing is present in the wallet (ignoring private keys).\n+- `getaddressinfo`, `listunspent`, and `scantxoutset` have a new output field `desc`, an output descriptor that encapsulates all signing information and key paths for the address (only available when `solvable` is true for `getaddressinfo` and `listunspent`)."
      },
      {
        "sha": "75faad99060f59fcb33a7f8fd0696a1c98d5363f",
        "filename": "doc/release-notes-pr13381.md",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes-pr13381.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes-pr13381.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-pr13381.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,29 @@\n+RPC importprivkey: new label behavior\n+-------------------------------------\n+\n+Previously, `importprivkey` automatically added the default empty label\n+(\"\") to all addresses associated with the imported private key.  Now it\n+defaults to using any existing label for those addresses.  For example:\n+\n+- Old behavior: you import a watch-only address with the label \"cold\n+  wallet\".  Later, you import the corresponding private key using the\n+  default settings.  The address's label is changed from \"cold wallet\"\n+  to \"\".\n+\n+- New behavior: you import a watch-only address with the label \"cold\n+  wallet\".  Later, you import the corresponding private key using the\n+  default settings.  The address's label remains \"cold wallet\".\n+\n+In both the previous and current case, if you directly specify a label\n+during the import, that label will override whatever previous label the\n+addresses may have had.  Also in both cases, if none of the addresses\n+previously had a label, they will still receive the default empty label\n+(\"\").  Examples:\n+\n+- You import a watch-only address with the label \"temporary\".  Later you\n+  import the corresponding private key with the label \"final\".  The\n+  address's label will be changed to \"final\".\n+\n+- You use the default settings to import a private key for an address that\n+  was not previously in the wallet.  Its addresses will receive the default\n+  empty label (\"\")."
      },
      {
        "sha": "f5c139e3f142b195b778c15de21648ca5f76d8de",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 147,
        "deletions": 3,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -53,15 +53,159 @@ the Linux kernel, macOS 10.10+, and Windows 7 and newer (Windows XP is not suppo\n Bitcoin Core should also work on most other Unix-like systems but is not\n frequently tested on them.\n \n-From 0.17.0 onwards macOS <10.10 is no longer supported. 0.17.0 is built using Qt 5.9.x, which doesn't\n-support versions of macOS older than 10.10.\n+From 0.17.0 onwards, macOS <10.10 is no longer supported.  0.17.0 is\n+built using Qt 5.9.x, which doesn't support versions of macOS older than\n+10.10.  Additionally, Bitcoin Core does not yet change appearance when\n+macOS \"dark mode\" is activated.\n+\n+In addition to previously-supported CPU platforms, this release's\n+pre-compiled distribution also provides binaries for the RISC-V\n+platform.\n \n Notable changes\n ===============\n \n-Example item\n+Command line option changes\n+---------------------------\n+\n+The `-enablebip61` command line option (introduced in Bitcoin Core 0.17.0) is\n+used to toggle sending of BIP 61 reject messages. Reject messages have no use\n+case on the P2P network and are only logged for debugging by most network\n+nodes. The option will now by default be off for improved privacy and security\n+as well as reduced upload usage. The option can explicitly be turned on for\n+local-network debugging purposes.\n+\n+Documentation\n+-------------\n+\n+- A new short\n+  [document](https://github.com/bitcoin/bitcoin/blob/master/doc/JSON-RPC-interface.md)\n+  about the JSON-RPC interface describes cases where the results of an\n+  RPC might contain inconsistencies between data sourced from different\n+  subsystems, such as wallet state and mempool state.  A note is added\n+  to the [REST interface documentation](https://github.com/bitcoin/bitcoin/blob/master/doc/REST-interface.md)\n+  indicating that the same rules apply.\n+\n+- A new [document](https://github.com/bitcoin/bitcoin/blob/master/doc/bitcoin-conf.md)\n+  about the `bitcoin.conf` file describes how to use it to configure\n+  Bitcoin Core.\n+\n+- A new document introduces Bitcoin Core's BIP174\n+  [Partially-Signed Bitcoin Transactions (PSBT)](https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md)\n+  interface, which is used to allow multiple programs to collaboratively\n+  work to create, sign, and broadcast new transactions.  This is useful\n+  for offline (cold storage) wallets, multisig wallets, coinjoin\n+  implementations, and many other cases where two or more programs need\n+  to interact to generate a complete transaction.\n+\n+- The [output script descriptor](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md)\n+  documentation has been updated with information about new features in\n+  this still-developing language for describing the output scripts that\n+  a wallet or other program wants to receive notifications for, such as\n+  which addresses it wants to know received payments.  The language is\n+  currently used in the `scantxoutset` RPC and is expected to be adapted\n+  to other RPCs and to the underlying wallet structure.\n+\n+Build system changes\n+--------------------\n+\n+- A new `--disable-bip70` option may be passed to `./configure` to\n+  prevent Bitcoin-Qt from being built with support for the BIP70 payment\n+  protocol or from linking libssl.  As the payment protocol has exposed\n+  Bitcoin Core to libssl vulnerabilities in the past, builders who don't\n+  need BIP70 support are encouraged to use this option to reduce their\n+  exposure to future vulnerabilities.\n+\n+Deprecated or removed RPCs\n+--------------------------\n+\n+- The `signrawtransaction` RPC is removed after being deprecated and\n+  hidden behind a special configuration option in version 0.17.0.\n+\n+- The 'account' API is removed after being deprecated in v0.17.  The\n+  'label' API was introduced in v0.17 as a replacement for accounts.\n+  See the [release notes from v0.17](https://github.com/bitcoin/bitcoin/blob/master/doc/release-notes/release-notes-0.17.0.md#label-and-account-apis-for-wallet)\n+  for a full description of the changes from the 'account' API to the\n+  'label' API.\n+\n+- The `addwitnessaddress` RPC is removed after being deprecated in\n+  version 0.13.0.\n+\n+- The wallet's `generate` RPC method is deprecated and will be fully\n+  removed in a subsequent major version.  This RPC is only used for\n+  testing, but its implementation reached across multiple subsystems\n+  (wallet and mining), so it is being deprecated to simplify the\n+  wallet-node interface.  Projects that are using `generate` for testing\n+  purposes should transition to using the `generatetoaddress` RPC, which\n+  does not require or use the wallet component. Calling\n+  `generatetoaddress` with an address returned by the `getnewaddress`\n+  RPC gives the same functionality as the old `generate` RPC.  To\n+  continue using `generate` in this version, restart bitcoind with the\n+  `-deprecatedrpc=generate` configuration option.\n+\n+New RPCs\n+--------\n+\n+- A new `getnodeaddresses` RPC returns peer addresses known to this\n+  node. It may be used to find nodes to connect to without using a DNS\n+  seeder.\n+\n+- A new `listwalletdir` RPC returns a list of wallets in the wallet\n+  directory (either the default wallet directory or the directory\n+  configured by the `-walletdir` parameter).\n+\n+Updated RPCs\n ------------\n \n+Note: some low-level RPC changes mainly useful for testing are described\n+in the Low-level Changes section below.\n+\n+- The `getpeerinfo` RPC now returns an additional \"minfeefilter\" field\n+  set to the peer's BIP133 fee filter.  You can use this to detect that\n+  you have peers that are willing to accept transactions below the\n+  default minimum relay fee.\n+\n+- The mempool RPCs, such as `getrawmempool` with `verbose=true`, now\n+  return an additional \"bip125-replaceable\" value indicating whether the\n+  transaction (or its unconfirmed ancestors) opts-in to asking nodes and\n+  miners to replace it with a higher-feerate transaction spending any of\n+  the same inputs.\n+\n+- The `settxfee` RPC previously silently ignored attempts to set the fee\n+  below the allowed minimums.  It now prints a warning.  The special\n+  value of \"0\" may still be used to request the minimum value.\n+\n+- The `getaddressinfo` RPC now provides an `ischange` field indicating\n+  whether the wallet used the address in a change output.\n+\n+- The `importmulti` RPC has been updated to support P2WSH, P2WPKH,\n+  P2SH-P2WPKH, and P2SH-P2WSH. Requests for P2WSH and P2SH-P2WSH accept\n+  an additional `witnessscript` parameter.\n+\n+Low-level changes\n+=================\n+\n+RPC\n+---\n+\n+- The `submitblock` RPC previously returned the reason a rejected block\n+  was invalid the first time it processed that block but returned a\n+  generic \"duplicate\" rejection message on subsequent occasions it\n+  processed the same block.  It now always returns the fundamental\n+  reason for rejecting an invalid block and only returns \"duplicate\" for\n+  valid blocks it has already accepted.\n+\n+- A new `submitheader` RPC allows submitting block headers independently\n+  from their block.  This is likely only useful for testing.\n+\n+Configuration\n+-------------\n+\n+- The `-usehd` configuration option was removed in version 0.16. From\n+  that version onwards, all new wallets created are hierarchical\n+  deterministic wallets. This release makes specifying `-usehd` an\n+  invalid configuration option.\n+\n Credits\n =======\n "
      },
      {
        "sha": "8259152f0ba1de062268f7da0d93a01cb9166e83",
        "filename": "doc/release-notes/release-notes-0.14.3.md",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes/release-notes-0.14.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes/release-notes-0.14.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.3.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,118 @@\n+Bitcoin Core version *0.14.3* is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.14.3/>\n+\n+This is a new minor version release, including various bugfixes and\n+performance improvements.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is extensively tested on multiple operating systems using\n+the Linux kernel, macOS 10.8+, and Windows Vista and later.\n+\n+Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n+No attempt is made to prevent installing or running the software on Windows XP, you\n+can still do so at your own risk but be aware that there are known instabilities and issues.\n+Please do not report issues about Windows XP to the issue tracker.\n+\n+Bitcoin Core should also work on most other Unix-like systems but is not\n+frequently tested on them.\n+\n+Notable changes\n+===============\n+\n+Denial-of-Service vulnerability CVE-2018-17144\n+ -------------------------------\n+\n+A denial-of-service vulnerability exploitable by miners has been discovered in\n+Bitcoin Core versions 0.14.0 up to 0.16.2. It is recommended to upgrade any of\n+the vulnerable versions to 0.14.3, 0.15.2 or 0.16.3 as soon as possible.\n+\n+Known Bugs\n+==========\n+\n+Since 0.14.0 the approximate transaction fee shown in Bitcoin-Qt when using coin\n+control and smart fee estimation does not reflect any change in target from the\n+smart fee slider. It will only present an approximate fee calculated using the\n+default target. The fee calculated using the correct target is still applied to\n+the transaction and shown in the final send confirmation dialog.\n+\n+0.14.3 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect\n+behavior, not code moves, refactors and string updates. For convenience in locating\n+the code changes and accompanying discussion, both the pull request and\n+git merge commit are mentioned.\n+\n+### Consensus\n+- #14247 `52965fb` Fix crash bug with duplicate inputs within a transaction (TheBlueMatt, sdaftuar)\n+ \n+### RPC and other APIs\n+\n+- #10445 `87a21d5` Fix: make CCoinsViewDbCursor::Seek work for missing keys (Pieter Wuille, Gregory Maxwell)\n+- #9853 Return correct error codes in setban(), fundrawtransaction(), removeprunedfunds(), bumpfee(), blockchain.cpp (John Newbery)\n+\n+\n+### P2P protocol and network code\n+\n+- #10234 `d289b56` [net] listbanned RPC and QT should show correct banned subnets (John Newbery)\n+\n+### Build system\n+\n+\n+### Miscellaneous\n+\n+- #10451 `3612219` contrib/init/bitcoind.openrcconf: Don't disable wallet by default (Luke Dashjr)\n+- #10250 `e23cef0` Fix some empty vector references (Pieter Wuille)\n+- #10196 `d28d583` PrioritiseTransaction updates the mempool tx counter (Suhas Daftuar)\n+- #9497 `e207342` Fix CCheckQueue IsIdle (potential) race condition and remove dangerous constructors. (Jeremy Rubin)\n+\n+### GUI\n+\n+- #9481 `7abe7bb` Give fallback fee a reasonable indent (Luke Dashjr)\n+- #9481 `3e4d7bf` Qt/Send: Figure a decent warning colour from theme (Luke Dashjr)\n+- #9481 `e207342` Show more significant warning if we fall back to the default fee (Jonas Schnelli)\n+\n+### Wallet\n+\n+- #10308 `28b8b8b` Securely erase potentially sensitive keys/values (tjps)\n+- #10265 `ff13f59` Make sure pindex is non-null before possibly referencing in LogPrintf call. (Karl-Johan Alm)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Cory Fields\n+- CryptAxe\n+- fanquake\n+- Jeremy Rubin\n+- John Newbery\n+- Jonas Schnelli\n+- Gregory Maxwell\n+- Karl-Johan Alm\n+- Luke Dashjr\n+- MarcoFalke\n+- Matt Corallo\n+- Mikerah\n+- Pieter Wuille\n+- practicalswift\n+- Suhas Daftuar\n+- Thomas Snider\n+- Tjps\n+- Wladimir J. van der Laan\n+\n+And to those that reported security issues:\n+\n+- awemany (for CVE-2018-17144, previously credited as \"anonymous reporter\")\n+"
      },
      {
        "sha": "1f5827905120efd902472fbb0dba39b19be3c68f",
        "filename": "doc/release-notes/release-notes-0.15.2.md",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes/release-notes-0.15.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes/release-notes-0.15.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.2.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,118 @@\n+Bitcoin Core version *0.15.2* is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-0.15.2/>\n+\n+This is a new minor version release, including various bugfixes and\n+performance improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the \n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+The first time you run version 0.15.0 or higher, your chainstate database will\n+be converted to a new format, which will take anywhere from a few minutes to\n+half an hour, depending on the speed of your machine.\n+\n+The file format of `fee_estimates.dat` changed in version 0.15.0. Hence, a\n+downgrade from version 0.15 or upgrade to version 0.15 will cause all fee\n+estimates to be discarded.\n+\n+Note that the block database format also changed in version 0.8.0 and there is no\n+automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading\n+directly from 0.7.x and earlier without redownloading the blockchain is not supported.\n+However, as usual, old wallet versions are still supported.\n+\n+Downgrading warning\n+-------------------\n+\n+The chainstate database for this release is not compatible with previous\n+releases, so if you run 0.15 and then decide to switch back to any\n+older version, you will need to run the old release with the `-reindex-chainstate`\n+option to rebuild the chainstate data structures in the old format.\n+\n+If your node has pruning enabled, this will entail re-downloading and\n+processing the entire blockchain.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is extensively tested on multiple operating systems using\n+the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.\n+\n+Bitcoin Core should also work on most other Unix-like systems but is not\n+frequently tested on them.\n+\n+\n+Notable changes\n+===============\n+\n+Denial-of-Service vulnerability CVE-2018-17144\n+-------------------------------\n+\n+A denial-of-service vulnerability exploitable by miners has been discovered in\n+Bitcoin Core versions 0.14.0 up to 0.16.2. It is recommended to upgrade any of\n+the vulnerable versions to 0.15.2 or 0.16.3 as soon as possible.\n+\n+0.15.2 Change log\n+=================\n+\n+### Build system\n+\n+- #11995 `9bb1a16` depends: Fix Qt build with XCode 9.2(fanquake)\n+- #12946 `93b9a61` depends: Fix Qt build with XCode 9.3(fanquake)\n+- #13544 `9fd3e00` depends: Update Qt download url (fanquake)\n+- #11847 `cb7ef31` Make boost::multi_index comparators const (sdaftuar)\n+\n+### Consensus\n+- #14247 `4b8a3f5` Fix crash bug with duplicate inputs within a transaction (TheBlueMatt, sdaftuar)\n+ \n+### RPC\n+- #11676 `7af2457` contrib/init: Update openrc-run filename (Luke Dashjr)\n+- #11277 `7026845` Fix uninitialized URI in batch RPC requests (Russell Yanofsky)\n+ \n+### Wallet\n+- #11289 `3f1db56` Wrap dumpwallet warning and note scripts aren't dumped (MeshCollider)\n+- #11289 `42ea47d` Add wallet backup text to import*, add* and dumpwallet RPCs (MeshCollider)\n+- #11590 `6372a75` [Wallet] always show help-line of wallet encryption calls (Jonas Schnelli)\n+\n+### bitcoin-tx\n+\n+- #11554 `a69cc07` Sanity-check script sizes in bitcoin-tx (TheBlueMatt)\n+\n+### Tests\n+- #11277 `3a6cdd4` Add test for multiwallet batch RPC calls (Russell Yanofsky)\n+- #11647 `1c8c7f8` Add missing batch rpc calls to python coverage logs (Russell Yanofsky)\n+- #11277 `1036c43` Add missing multiwallet rpc calls to python coverage logs (Russell Yanofsky)\n+- #11277 `305f768` Limit AuthServiceProxyWrapper.\\_\\_getattr\\_\\_ wrapping (Russell Yanofsky)\n+- #11277 `2eea279` Make AuthServiceProxy.\\_batch method usable (Russell Yanofsky)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- fanquake\n+- Jonas Schnelli\n+- Luke Dashjr\n+- Matt Corallo\n+- MeshCollider\n+- Russell Yanofsky\n+- Suhas Daftuar\n+- Wladimir J. van der Laan\n+\n+And to those that reported security issues:\n+\n+- awemany (for CVE-2018-17144, previously credited as \"anonymous reporter\")\n+"
      },
      {
        "sha": "2e52d309c2324dbb51c76ce0ade4ea363b3d766b",
        "filename": "doc/release-notes/release-notes-0.16.3.md",
        "status": "added",
        "additions": 88,
        "deletions": 0,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes/release-notes-0.16.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes/release-notes-0.16.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.16.3.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,88 @@\n+Bitcoin Core version 0.16.3 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-0.16.3/>\n+\n+This is a new minor version release, with various bugfixes.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+The first time you run version 0.15.0 or newer, your chainstate database will be converted to a\n+new format, which will take anywhere from a few minutes to half an hour,\n+depending on the speed of your machine.\n+\n+Note that the block database format also changed in version 0.8.0 and there is no\n+automatic upgrade code from before version 0.8 to version 0.15.0 or higher. Upgrading\n+directly from 0.7.x and earlier without re-downloading the blockchain is not supported.\n+However, as usual, old wallet versions are still supported.\n+\n+Downgrading warning\n+-------------------\n+\n+Wallets created in 0.16 and later are not compatible with versions prior to 0.16\n+and will not work if you try to use newly created wallets in older versions. Existing\n+wallets that were created with older versions are not affected by this.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is extensively tested on multiple operating systems using\n+the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.\n+\n+Bitcoin Core should also work on most other Unix-like systems but is not\n+frequently tested on them.\n+\n+Notable changes\n+===============\n+\n+Denial-of-Service vulnerability\n+-------------------------------\n+\n+A denial-of-service vulnerability (CVE-2018-17144) exploitable by miners has\n+been discovered in Bitcoin Core versions 0.14.0 up to 0.16.2. It is recommended\n+to upgrade any of the vulnerable versions to 0.16.3 as soon as possible.\n+\n+0.16.3 change log\n+------------------\n+\n+### Consensus\n+- #14249 `696b936` Fix crash bug with duplicate inputs within a transaction (TheBlueMatt, sdaftuar)\n+\n+### RPC and other APIs\n+- #13547 `212ef1f` Make `signrawtransaction*` give an error when amount is needed but missing (ajtowns)\n+\n+### Miscellaneous\n+- #13655 `1cdbea7` bitcoinconsensus: invalid flags error should be set to `bitcoinconsensus_err` (afk11)\n+\n+### Documentation\n+- #13844 `11b9dbb` correct the help output for -prune (hebasto)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Anthony Towns\n+- Hennadii Stepanov\n+- Matt Corallo\n+- Suhas Daftuar\n+- Thomas Kerin\n+- Wladimir J. van der Laan\n+\n+And to those that reported security issues:\n+\n+- (anonymous reporter)\n+"
      },
      {
        "sha": "92db7dac7d7e55ada749f50c2c5737b3ee50ff0e",
        "filename": "doc/release-notes/release-notes-0.17.0.1.md",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes/release-notes-0.17.0.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes/release-notes-0.17.0.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.17.0.1.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,41 @@\n+Bitcoin Core version 0.17.0.1 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-0.17.0.1/>\n+\n+This release provides a minor bug fix for 0.17.0.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+Notable changes\n+===============\n+\n+An issue was solved with OSX dmg generation, affecting macOS 10.12 to 10.14,\n+which could cause Finder to crash on install.\n+\n+There are no significant changes for other operating systems.\n+\n+0.17.0.1 change log\n+===================\n+\n+### Build system\n+- #14416 `eb2cc84` Fix OSX dmg issue (10.12 to 10.14) (jonasschnelli)\n+\n+### Documentation\n+- #14509 `1b5af2c` [0.17] doc: use SegWit in getblocktemplate example (Sjors)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Jonas Schnelli\n+- Pieter Wuille\n+- Sjors Provoost\n+- Wladimir J. van der Laan\n+"
      },
      {
        "sha": "418d7ba5f9b9d7a2d9b7ec884aae8e26ad8a2b23",
        "filename": "doc/release-notes/release-notes-0.17.0.md",
        "status": "added",
        "additions": 1105,
        "deletions": 0,
        "changes": 1105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes/release-notes-0.17.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-notes/release-notes-0.17.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.17.0.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,1105 @@\n+Bitcoin Core version 0.17.0 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-0.17.0/>\n+\n+This is a new major version release, including new features, various bugfixes\n+and performance improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+If your node has a txindex, the txindex db will be migrated the first time you run 0.17.0 or newer, which may take up to a few hours. Your node will not be functional until this migration completes.\n+\n+The first time you run version 0.15.0 or newer, your chainstate database will be converted to a\n+new format, which will take anywhere from a few minutes to half an hour,\n+depending on the speed of your machine.\n+\n+Note that the block database format also changed in version 0.8.0 and there is no\n+automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading\n+directly from 0.7.x and earlier without redownloading the blockchain is not supported.\n+However, as usual, old wallet versions are still supported.\n+\n+Downgrading warning\n+-------------------\n+\n+The chainstate database for this release is not compatible with previous\n+releases, so if you run 0.15 and then decide to switch back to any\n+older version, you will need to run the old release with the `-reindex-chainstate`\n+option to rebuild the chainstate data structures in the old format.\n+\n+If your node has pruning enabled, this will entail re-downloading and\n+processing the entire blockchain.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is extensively tested on multiple operating systems using\n+the Linux kernel, macOS 10.10+, and Windows 7 and newer (Windows XP is not supported).\n+\n+Bitcoin Core should also work on most other Unix-like systems but is not\n+frequently tested on them.\n+\n+From 0.17.0 onwards macOS <10.10 is no longer supported. 0.17.0 is built using Qt 5.9.x, which doesn't\n+support versions of macOS older than 10.10.\n+\n+Known issues\n+============\n+\n+- Upgrading from 0.13.0 or older currently results in memory blow-up during the roll-back of blocks to the SegWit activation point. In these cases, a full `-reindex` is necessary.\n+\n+- The GUI suffers from visual glitches in the new MacOS dark mode. This has to do with our Qt theme handling and is not a new problem in 0.17.0, but is expected to be resolved in 0.17.1.\n+\n+Notable changes\n+===============\n+\n+Changed configuration options\n+-----------------------------\n+\n+- `-includeconf=<file>` can be used to include additional configuration files.\n+  Only works inside the `bitcoin.conf` file, not inside included files or from\n+  command-line. Multiple files may be included. Can be disabled from command-\n+  line via `-noincludeconf`. Note that multi-argument commands like\n+  `-includeconf` will override preceding `-noincludeconf`, i.e.\n+  ```\n+  noincludeconf=1\n+  includeconf=relative.conf\n+  ```\n+\n+  as bitcoin.conf will still include `relative.conf`.\n+\n+GUI changes\n+-----------\n+\n+- Block storage can be limited under Preferences, in the Main tab. Undoing this setting requires downloading the full blockchain again. This mode is incompatible with -txindex and -rescan.\n+\n+External wallet files\n+---------------------\n+\n+The `-wallet=<path>` option now accepts full paths instead of requiring wallets\n+to be located in the -walletdir directory.\n+\n+Newly created wallet format\n+---------------------------\n+\n+If `-wallet=<path>` is specified with a path that does not exist, it will now\n+create a wallet directory at the specified location (containing a wallet.dat\n+data file, a db.log file, and database/log.?????????? files) instead of just\n+creating a data file at the path and storing log files in the parent\n+directory. This should make backing up wallets more straightforward than\n+before because the specified wallet path can just be directly archived without\n+having to look in the parent directory for transaction log files.\n+\n+For backwards compatibility, wallet paths that are names of existing data files\n+in the `-walletdir` directory will continue to be accepted and interpreted the\n+same as before.\n+\n+Dynamic loading and creation of wallets\n+---------------------------------------\n+\n+Previously, wallets could only be loaded or created at startup, by specifying `-wallet` parameters on the command line or in the bitcoin.conf file. It is now possible to load, create and unload wallets dynamically at runtime:\n+\n+- Existing wallets can be loaded by calling the `loadwallet` RPC. The wallet can be specified as file/directory basename (which must be located in the `walletdir` directory), or as an absolute path to a file/directory.\n+- New wallets can be created (and loaded) by calling the `createwallet` RPC. The provided name must not match a wallet file in the `walletdir` directory or the name of a wallet that is currently loaded.\n+- Loaded wallets can be unloaded by calling the `unloadwallet` RPC.\n+\n+This feature is currently only available through the RPC interface.\n+\n+Coin selection\n+--------------\n+\n+### Partial spend avoidance\n+\n+When an address is paid multiple times the coins from those separate payments can be spent separately which hurts privacy due to linking otherwise separate addresses. A new `-avoidpartialspends` flag has been added (default=false). If enabled, the wallet will always spend existing UTXO to the same address together even if it results in higher fees. If someone were to send coins to an address after it was used, those coins will still be included in future coin selections.\n+\n+Configuration sections for testnet and regtest\n+----------------------------------------------\n+\n+It is now possible for a single configuration file to set different\n+options for different networks. This is done by using sections or by\n+prefixing the option with the network, such as:\n+\n+    main.uacomment=bitcoin\n+    test.uacomment=bitcoin-testnet\n+    regtest.uacomment=regtest\n+    [main]\n+    mempoolsize=300\n+    [test]\n+    mempoolsize=100\n+    [regtest]\n+    mempoolsize=20\n+\n+If the following options are not in a section, they will only apply to mainnet:\n+`addnode=`, `connect=`, `port=`, `bind=`, `rpcport=`, `rpcbind=` and `wallet=`.\n+The options to choose a network (`regtest=` and `testnet=`) must be specified\n+outside of sections.\n+\n+'label' and 'account' APIs for wallet\n+-------------------------------------\n+\n+A new 'label' API has been introduced for the wallet. This is intended as a\n+replacement for the deprecated 'account' API. The 'account' can continue to\n+be used in V0.17 by starting bitcoind with the '-deprecatedrpc=accounts'\n+argument, and will be fully removed in V0.18.\n+\n+The label RPC methods mirror the account functionality, with the following functional differences:\n+\n+- Labels can be set on any address, not just receiving addresses. This functionality was previously only available through the GUI.\n+- Labels can be deleted by reassigning all addresses using the `setlabel` RPC method.\n+- There isn't support for sending transactions _from_ a label, or for determining which label a transaction was sent from.\n+- Labels do not have a balance.\n+\n+Here are the changes to RPC methods:\n+\n+| Deprecated Method       | New Method            | Notes       |\n+| :---------------------- | :-------------------- | :-----------|\n+| `getaccount`            | `getaddressinfo`      | `getaddressinfo` returns a json object with address information instead of just the name of the account as a string. |\n+| `getaccountaddress`     | n/a                   | There is no replacement for `getaccountaddress` since labels do not have an associated receive address. |\n+| `getaddressesbyaccount` | `getaddressesbylabel` | `getaddressesbylabel` returns a json object with the addresses as keys, instead of a list of strings. |\n+| `getreceivedbyaccount`  | `getreceivedbylabel`  | _no change in behavior_ |\n+| `listaccounts`          | `listlabels`          | `listlabels` does not return a balance or accept `minconf` and `watchonly` arguments. |\n+| `listreceivedbyaccount` | `listreceivedbylabel` | Both methods return new `label` fields, along with `account` fields for backward compatibility. |\n+| `move`                  | n/a                   | _no replacement_ |\n+| `sendfrom`              | n/a                   | _no replacement_ |\n+| `setaccount`            | `setlabel`            | Both methods now: <ul><li>allow assigning labels to any address, instead of raising an error if the address is not receiving address.<li>delete the previous label associated with an address when the final address using that label is reassigned to a different label, instead of making an implicit `getaccountaddress` call to ensure the previous label still has a receiving address. |\n+\n+| Changed Method         | Notes   |\n+| :--------------------- | :------ |\n+| `addmultisigaddress`   | Renamed `account` named parameter to `label`. Still accepts `account` for backward compatibility if running with '-deprecatedrpc=accounts'. |\n+| `getnewaddress`        | Renamed `account` named parameter to `label`. Still accepts `account` for backward compatibility. if running with '-deprecatedrpc=accounts' |\n+| `listunspent`          | Returns new `label` fields. `account` field will be returned for backward compatibility if running with '-deprecatedrpc=accounts' |\n+| `sendmany`             | The `account` named parameter has been renamed to `dummy`. If provided, the `dummy` parameter must be set to the empty string, unless running with the `-deprecatedrpc=accounts` argument (in which case functionality is unchanged). |\n+| `listtransactions`     | The `account` named parameter has been renamed to `dummy`. If provided, the `dummy` parameter must be set to the string `*`, unless running with the `-deprecatedrpc=accounts` argument (in which case functionality is unchanged). |\n+| `getbalance`           | `account`, `minconf` and `include_watchonly` parameters are deprecated, and can only be used if running with '-deprecatedrpc=accounts' |\n+\n+BIP 174 Partially Signed Bitcoin Transactions support\n+-----------------------------------------------------\n+\n+[BIP 174 PSBT](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki) is an interchange format for Bitcoin transactions that are not fully signed\n+yet, together with relevant metadata to help entities work towards signing it.\n+It is intended to simplify workflows where multiple parties need to cooperate to\n+produce a transaction. Examples include hardware wallets, multisig setups, and\n+[CoinJoin](https://bitcointalk.org/?topic=279249) transactions.\n+\n+### Overall workflow\n+\n+Overall, the construction of a fully signed Bitcoin transaction goes through the\n+following steps:\n+\n+- A **Creator** proposes a particular transaction to be created. He constructs\n+  a PSBT that contains certain inputs and outputs, but no additional metadata.\n+- For each input, an **Updater** adds information about the UTXOs being spent by\n+  the transaction to the PSBT.\n+- A potentially other Updater adds information about the scripts and public keys\n+  involved in each of the inputs (and possibly outputs) of the PSBT.\n+- **Signers** inspect the transaction and its metadata to decide whether they\n+  agree with the transaction. They can use amount information from the UTXOs\n+  to assess the values and fees involved. If they agree, they produce a\n+  partial signature for the inputs for which they have relevant key(s).\n+- A **Finalizer** is run for each input to convert the partial signatures and\n+  possibly script information into a final `scriptSig` and/or `scriptWitness`.\n+- An **Extractor** produces a valid Bitcoin transaction (in network format)\n+  from a PSBT for which all inputs are finalized.\n+\n+Generally, each of the above (excluding Creator and Extractor) will simply\n+add more and more data to a particular PSBT. In a naive workflow, they all have\n+to operate sequentially, passing the PSBT from one to the next, until the\n+Extractor can convert it to a real transaction. In order to permit parallel\n+operation, **Combiners** can be employed which merge metadata from different\n+PSBTs for the same unsigned transaction.\n+\n+The names above in bold are the names of the roles defined in BIP174. They're\n+useful in understanding the underlying steps, but in practice, software and\n+hardware implementations will typically implement multiple roles simultaneously.\n+\n+### RPCs\n+\n+- **`converttopsbt` (Creator)** is a utility RPC that converts an\n+  unsigned raw transaction to PSBT format. It ignores existing signatures.\n+- **`createpsbt` (Creator)** is a utility RPC that takes a list of inputs and\n+  outputs and converts them to a PSBT with no additional information. It is\n+  equivalent to calling `createrawtransaction` followed by `converttopsbt`.\n+- **`walletcreatefundedpsbt` (Creator, Updater)** is a wallet RPC that creates a\n+  PSBT with the specified inputs and outputs, adds additional inputs and change\n+  to it to balance it out, and adds relevant metadata. In particular, for inputs\n+  that the wallet knows about (counting towards its normal or watch-only\n+  balance), UTXO information will be added. For outputs and inputs with UTXO\n+  information present, key and script information will be added which the wallet\n+  knows about. It is equivalent to running `createrawtransaction`, followed by\n+  `fundrawtransaction`, and `converttopsbt`.\n+- **`walletprocesspsbt` (Updater, Signer, Finalizer)** is a wallet RPC that takes as\n+  input a PSBT, adds UTXO, key, and script data to inputs and outputs that miss\n+  it, and optionally signs inputs. Where possible it also finalizes the partial\n+  signatures.\n+- **`finalizepsbt` (Finalizer, Extractor)** is a utility RPC that finalizes any\n+  partial signatures, and if all inputs are finalized, converts the result to a\n+  fully signed transaction which can be broadcast with `sendrawtransaction`.\n+- **`combinepsbt` (Combiner)** is a utility RPC that implements a Combiner. It\n+  can be used at any point in the workflow to merge information added to\n+  different versions of the same PSBT. In particular it is useful to combine the\n+  output of multiple Updaters or Signers.\n+- **`decodepsbt`** is a diagnostic utility RPC which will show all information in\n+  a PSBT in human-readable form, as well as compute its eventual fee if known.\n+\n+Upgrading non-HD wallets to HD wallets\n+--------------------------------------\n+\n+Since Bitcoin Core 0.13.0, creating new BIP 32 Hierarchical Deterministic wallets has been supported by Bitcoin Core but old non-HD wallets could not be upgraded to HD. Now non-HD wallets can be upgraded to HD using the `-upgradewallet` command line option. This upgrade will result in the all keys in the keypool being marked as used and a new keypool generated. **A new backup must be made when this upgrade is performed.**\n+\n+Additionally, `-upgradewallet` can be used to upgraded from a non-split HD chain (all keys generated with `m/0'/0'/i'`) to a split HD chain (receiving keys generated with `'m/0'/0'/i'` and change keys generated with `m'/0'/1'/i'`). When this upgrade occurs, all keys already in the keypool will remain in the keypool to be used until all keys from before the upgrade are exhausted. This is to avoid issues with backups and downgrades when some keys may come from the change key keypool. Users can begin using the new split HD chain keypools by using the `newkeypool` RPC to mark all keys in the keypool as used and begin using a new keypool generated from the split HD chain.\n+\n+HD Master key rotation\n+----------------------\n+\n+A new RPC, `sethdseed`, has been introduced which allows users to set a new HD seed or set their own HD seed. This allows for a new HD seed to be used. **A new backup must be made when a new HD seed is set.**\n+\n+Low-level RPC changes\n+---------------------\n+\n+- The new RPC `scantxoutset` can be used to scan the UTXO set for entries\n+  that match certain output descriptors. Refer to the [output descriptors\n+  reference documentation](/doc/descriptors.md) for more details. This call\n+  is similar to `listunspent` but does not use a wallet, meaning that the\n+  wallet can be disabled at compile or run time. This call is experimental,\n+  as such, is subject to changes or removal in future releases.\n+\n+- The `createrawtransaction` RPC will now accept an array or dictionary (kept for compatibility) for the `outputs` parameter. This means the order of transaction outputs can be specified by the client.\n+- The `fundrawtransaction` RPC will reject the previously deprecated `reserveChangeKey` option.\n+- `sendmany` now shuffles outputs to improve privacy, so any previously expected behavior with regards to output ordering can no longer be relied upon.\n+- The new RPC `testmempoolaccept` can be used to test acceptance of a transaction to the mempool without adding it.\n+- JSON transaction decomposition now includes a `weight` field which provides\n+  the transaction's exact weight. This is included in REST /rest/tx/ and\n+  /rest/block/ endpoints when in json mode. This is also included in `getblock`\n+  (with verbosity=2), `listsinceblock`, `listtransactions`, and\n+  `getrawtransaction` RPC commands.\n+- New `fees` field introduced in `getrawmempool`, `getmempoolancestors`, `getmempooldescendants` and\n+   `getmempoolentry` when verbosity is set to `true` with sub-fields `ancestor`, `base`, `modified`\n+   and `descendant` denominated in BTC. This new field deprecates previous fee fields, such as\n+   `fee`, `modifiedfee`, `ancestorfee` and `descendantfee`.\n+- The new RPC `getzmqnotifications` returns information about active ZMQ\n+  notifications.\n+- When bitcoin is not started with any `-wallet=<path>` options, the name of\n+  the default wallet returned by `getwalletinfo` and `listwallets` RPCs is\n+  now the empty string `\"\"` instead of `\"wallet.dat\"`. If bitcoin is started\n+  with any `-wallet=<path>` options, there is no change in behavior, and the\n+  name of any wallet is just its `<path>` string.\n+- Passing an empty string (`\"\"`) as the `address_type` parameter to\n+  `getnewaddress`, `getrawchangeaddress`, `addmultisigaddress`,\n+  `fundrawtransaction` RPCs is now an error. Previously, this would fall back\n+  to using the default address type. It is still possible to pass null or leave\n+  the parameter unset to use the default address type.\n+\n+- Bare multisig outputs to our keys are no longer automatically treated as\n+  incoming payments. As this feature was only available for multisig outputs for\n+  which you had all private keys in your wallet, there was generally no use for\n+  them compared to single-key schemes. Furthermore, no address format for such\n+  outputs is defined, and wallet software can't easily send to it. These outputs\n+  will no longer show up in `listtransactions`, `listunspent`, or contribute to\n+  your balance, unless they are explicitly watched (using `importaddress` or\n+  `importmulti` with hex script argument). `signrawtransaction*` also still\n+  works for them.\n+\n+- The `getwalletinfo` RPC method now returns an `hdseedid` value, which is always the same as the incorrectly-named `hdmasterkeyid` value. `hdmasterkeyid` will be removed in V0.18.\n+- The `getaddressinfo` RPC method now returns an `hdseedid` value, which is always the same as the incorrectly-named `hdmasterkeyid` value. `hdmasterkeyid` will be removed in V0.18.\n+\n+- Parts of the `validateaddress` RPC method have been deprecated and moved to\n+  `getaddressinfo`. Clients must transition to using `getaddressinfo` to access\n+  this information before upgrading to v0.18. The following deprecated fields\n+  have moved to `getaddressinfo` and will only be shown with\n+  `-deprecatedrpc=validateaddress`: `ismine`, `iswatchonly`, `script`, `hex`,\n+  `pubkeys`, `sigsrequired`, `pubkey`, `addresses`, `embedded`, `iscompressed`,\n+  `account`, `timestamp`, `hdkeypath`, `hdmasterkeyid`.\n+- `signrawtransaction` is deprecated and will be fully removed in v0.18. To use\n+  `signrawtransaction` in v0.17, restart bitcoind with\n+  `-deprecatedrpc=signrawtransaction`. Projects should transition to using\n+  `signrawtransactionwithkey` and `signrawtransactionwithwallet` before\n+  upgrading to v0.18.\n+\n+Other API changes\n+-----------------\n+\n+- The `inactivehdmaster` property in the `dumpwallet` output has been corrected to `inactivehdseed`\n+\n+### Logging\n+\n+- The log timestamp format is now ISO 8601 (e.g. \"2018-02-28T12:34:56Z\").\n+\n+- When running bitcoind with `-debug` but without `-daemon`, logging to stdout\n+  is now the default behavior. Setting `-printtoconsole=1` no longer implicitly\n+  disables logging to debug.log. Instead, logging to file can be explicitly disabled\n+  by setting `-debuglogfile=0`.\n+\n+Transaction index changes\n+-------------------------\n+\n+The transaction index is now built separately from the main node procedure,\n+meaning the `-txindex` flag can be toggled without a full reindex. If bitcoind\n+is run with `-txindex` on a node that is already partially or fully synced\n+without one, the transaction index will be built in the background and become\n+available once caught up. When switching from running `-txindex` to running\n+without the flag, the transaction index database will *not* be deleted\n+automatically, meaning it could be turned back on at a later time without a full\n+resync.\n+\n+Miner block size removed\n+------------------------\n+\n+The `-blockmaxsize` option for miners to limit their blocks' sizes was\n+deprecated in V0.15.1, and has now been removed. Miners should use the\n+`-blockmaxweight` option if they want to limit the weight of their blocks.\n+\n+Python Support\n+--------------\n+\n+Support for Python 2 has been discontinued for all test files and tools.\n+\n+0.17.0 change log\n+=================\n+\n+### Consensus\n+- #12204 `3fa24bb` Fix overly eager BIP30 bypass (morcos)\n+\n+### Policy\n+- #12568 `ed6ae80` Allow dustrelayfee to be set to zero (luke-jr)\n+- #13120 `ca2a233` Treat segwit as always active (MarcoFalke)\n+- #13096 `062738c` Fix `MAX_STANDARD_TX_WEIGHT` check (jl2012)\n+\n+### Mining\n+- #12693 `df529dc` Remove unused variable in SortForBlock (drewx2)\n+- #12448 `84efa9a` Interrupt block generation on shutdown request (promag)\n+\n+### Block and transaction handling\n+- #12225 `67447ba` Mempool cleanups (sdaftuar)\n+- #12356 `fd65937` Fix 'mempool min fee not met' debug output (Empact)\n+- #12287 `bf3353d` Optimise lock behaviour for GuessVerificationProgress() (jonasschnelli)\n+- #11889 `47a7666` Drop extra script variable in ProduceSignature (ryanofsky)\n+- #11880 `d59b8d6` Stop special-casing phashBlock handling in validation for TBV (TheBlueMatt)\n+- #12431 `947c25e` Only call NotifyBlockTip when chainActive changes (jamesob)\n+- #12653 `534b8fa` Allow to optional specify the directory for the blocks storage (jonasschnelli)\n+- #12172 `3b62a91` Bugfix: RPC: savemempool: Don't save until LoadMempool() is finished (jtimon)\n+- #12167 `88430cb` Make segwit failure due to `CLEANSTACK` violation return a `SCRIPT_ERR_CLEANSTACK` error code (maaku)\n+- #12561 `24133b1` Check for block corruption in ConnectBlock() (sdaftuar)\n+- #11617 `1b5723e` Avoid lock: Call FlushStateToDisk(\u2026) regardless of fCheckForPruning (practicalswift)\n+- #11739 `0a8b7b4` Enforce `SCRIPT_VERIFY_P2SH` and `SCRIPT_VERIFY_WITNESS` from genesis (sdaftuar)\n+- #12885 `a49381d` Reduce implementation code inside CScript (sipa)\n+- #13032 `34dd1a6` Output values for \"min relay fee not met\" error (kristapsk)\n+- #13033 `a07e8ca` Build txindex in parallel with validation (jimpo)\n+- #13080 `66cc47b` Add compile time checking for ::mempool.cs runtime locking assertions (practicalswift)\n+- #13185 `08c1caf` Bugfix: the end of a reorged chain is invalid when connect fails (sipa)\n+- #11689 `0264836` Fix missing locking in CTxMemPool::check(\u2026) and CTxMemPool::setSanityCheck(\u2026) (practicalswift)\n+- #13011 `3c2a41a` Cache witness hash in CTransaction (MarcoFalke)\n+- #13191 `0de7cc8` Specialized double-SHA256 with 64 byte inputs with SSE4.1 and AVX2 (sipa)\n+- #13243 `ea263e1` Make reusable base class for auxiliary indices (jimpo)\n+- #13393 `a607d23` Enable double-SHA256-for-64-byte code on 32-bit x86 (sipa)\n+- #13428 `caabdea` validation: check the specified number of blocks (off-by-one) (kallewoof)\n+- #13438 `450055b` Improve coverage of SHA256 SelfTest code (sipa)\n+- #13431 `954f4a9` validation: count blocks correctly for check level < 3 (kallewoof)\n+- #13386 `3a3eabe` SHA256 implementations based on Intel SHA Extensions (sipa)\n+- #11658 `9a1ad2c` During IBD, when doing pruning, prune 10% extra to avoid pruning again soon after (luke-jr)\n+- #13794 `8ce55df` chainparams: Update with data from assumed valid chain (MarcoFalke)\n+- #13527 `e7ea858` Remove promiscuousmempoolflags (MarcoFalke)\n+\n+### P2P protocol and network code\n+- #12342 `eaeaa2d` Extend #11583 (\"Do not make it trivial for inbound peers to generate log entries\") to include \"version handshake timeout\" message (clemtaylor)\n+- #12218 `9a32114` Move misbehaving logging to net logging category (laanwj)\n+- #10387 `5c2aff8` Eventually connect to `NODE_NETWORK_LIMITED` peers (jonasschnelli)\n+- #9037 `a36834f` Add test-before-evict discipline to addrman (EthanHeilman)\n+- #12622 `e1d6e2a` Correct addrman logging (laanwj)\n+- #11962 `0a01843` add seed.bitcoin.sprovoost.nl to DNS seeds (Sjors)\n+- #12569 `23e7fe8` Increase signal-to-noise ratio in debug.log by adjusting log level when logging failed non-manual connect():s (practicalswift)\n+- #12855 `c199869` Minor accumulated cleanups (tjps)\n+- #13153 `ef46c99` Add missing newlines to debug logging (laanwj)\n+- #13162 `a174702` Don't incorrectly log that REJECT messages are unknown (jnewbery)\n+- #13151 `7f4db9a` Serve blocks directly from disk when possible (laanwj)\n+- #13134 `70d3541` Add option `-enablebip61` to configure sending of BIP61 notifications (laanwj)\n+- #13532 `7209fec` Log warning when deprecated network name 'tor' is used (wodry)\n+- #13615 `172f984` Remove unused interrupt from SendMessages (fanquake)\n+- #13417 `1e90862` Tighten scope in `net_processing` (skeees)\n+- #13298 `f8d470e` Bucketing INV delays (1 bucket) for incoming connections to hide tx time (naumenkogs)\n+- #13672 `0d8d6be` Modified `in_addr6` cast in CConman class to work with msvc (sipsorcery)\n+- #11637 `c575260` Remove dead service bits code (MarcoFalke)\n+- #13212 `a6f00ce` Fixed a race condition when disabling the network (lmanners)\n+- #13656 `1211b15` Remove the boost/algorithm/string/predicate.hpp dependency (251Labs)\n+- #13423 `f58674a` Thread safety annotations in `net_processing` (skeees)\n+- #13776 `7d36237` Add missing verification of IPv6 address in CNetAddr::GetIn6Addr(\u2026) (practicalswift)\n+- #13907 `48bf8ff` Introduce a maximum size for locators (gmaxwell)\n+- #13951 `8a9ffec` Hardcoded seeds update pre-0.17 branch (laanwj)\n+\n+### Wallet\n+- #12330 `2a30e67` Reduce scope of `cs_main` and `cs_wallet` locks in listtransactions (promag)\n+- #12298 `a1ffddb` Refactor HaveKeys to early return on false result (promag)\n+- #12282 `663911e` Disallow abandon of conflicted txes (MarcoFalke)\n+- #12333 `d405bee` Make CWallet::ListCoins atomic (promag)\n+- #12296 `8e6f9f4` Only fee-bump non-conflicted/non-confirmed txes (MarcoFalke)\n+- #11866 `6bb9c13` Do not un-mark fInMempool on wallet txn if ATMP fails (TheBlueMatt)\n+- #11882 `987a809` Disable default fallbackfee on mainnet (jonasschnelli)\n+- #9991 `4ca7c1e` listreceivedbyaddress Filter Address (NicolasDorier)\n+- #11687 `98bc27f` External wallet files (ryanofsky)\n+- #12658 `af88094` Sanitize some wallet serialization (sipa)\n+- #9680 `6acd870` Unify CWalletTx construction (ryanofsky)\n+- #10637 `e057589` Coin Selection with Murch's algorithm (achow101, Xekyo)\n+- #12408 `c39dd2e` Change output type globals to members (MarcoFalke)\n+- #12694 `9552dfb` Actually disable BnB when there are preset inputs (achow101)\n+- #11536 `cead84b` Rename account to label where appropriate (ryanofsky)\n+- #12709 `02b7e83` shuffle sendmany recipients ordering (instagibbs)\n+- #12699 `c948dc8` Shuffle transaction inputs before signing (instagibbs)\n+- #10762 `6d53663` Remove Wallet dependencies from init.cpp (jnewbery)\n+- #12857 `821980c` Avoid travis lint-include-guards error (ken2812221)\n+- #12702 `dab0d68` importprivkey: hint about importmulti (kallewoof)\n+- #12836 `9abdb7c` Make WalletInitInterface and DummyWalletInit private, fix nullptr deref (promag)\n+- #12785 `215158a` Initialize `m_last_block_processed` to nullptr (practicalswift)\n+- #12932 `8d651ae` Remove redundant lambda function arg in handleTransactionChanged (laanwj)\n+- #12749 `a84b056` feebumper: discard change outputs below discard rate (instagibbs)\n+- #12892 `9b3370d` introduce 'label' API for wallet (jnewbery)\n+- #12925 `6d3de17` Logprint the start of a rescan (jonasschnelli)\n+- #12888 `39439e5` debug log number of unknown wallet records on load (instagibbs)\n+- #12977 `434150a` Refactor `g_wallet_init_interface` to const reference (promag)\n+- #13017 `65d7083` Add wallets management functions (promag)\n+- #12953 `d1d54ae` Deprecate accounts (jnewbery)\n+- #12909 `476cb35` Make fee settings to be non-static members (MarcoFalke)\n+- #13002 `487dcbe` Do not treat bare multisig outputs as IsMine unless watched (sipa)\n+- #13028 `783bb64` Make vpwallets usage thread safe (promag)\n+- #12507 `2afdc29` Interrupt rescan on shutdown request (promag)\n+- #12729 `979150b` Get rid of ambiguous OutputType::NONE value (ryanofsky)\n+- #13079 `5778d44` Fix rescanblockchain rpc to properly report progress (Empact)\n+- #12560 `e03c0db` Upgrade path for non-HD wallets to HD (achow101)\n+- #13161 `7cc1bd3` Reset BerkeleyDB handle after connection fails (real-or-random)\n+- #13081 `0dec5b5` Add compile time checking for `cs_wallet` runtime locking assertions (practicalswift)\n+- #13127 `19a3a9e` Add Clang thread safety annotations for variables guarded by `cs_db` (practicalswift)\n+- #10740 `4cfe17c` `loadwallet` RPC - load wallet at runtime (jnewbery)\n+- #12924 `6738813` Fix hdmaster-key / seed-key confusion (scripted diff) (jnewbery)\n+- #13297 `d82c5d1` Fix incorrect comment for DeriveNewSeed (jnewbery)\n+- #13063 `6378eef` Use shared pointer to retain wallet instance (promag)\n+- #13142 `56fe3dc` Separate IsMine from solvability (sipa)\n+- #13194 `fd96d54` Remove template matching and pseudo opcodes (sipa)\n+- #13252 `c4cc8d9` Refactor ReserveKeyFromKeyPool for safety (Empact)\n+- #13058 `343d4e4` `createwallet` RPC - create new wallet at runtime (jnewbery)\n+- #13351 `2140f6c` Prevent segfault when sending to unspendable witness (MarcoFalke)\n+- #13060 `3f0f394` Remove getlabeladdress RPC (jnewbery)\n+- #13111 `000abbb` Add unloadwallet RPC (promag)\n+- #13160 `868cf43` Unlock spent outputs (promag)\n+- #13498 `f54f373` Fixups from account API deprecation (jnewbery)\n+- #13491 `61a044a` Improve handling of INVALID in IsMine (sipa)\n+- #13425 `028b0d9` Moving final scriptSig construction from CombineSignatures to ProduceSignature (PSBT signer logic) (achow101)\n+- #13564 `88a15eb` loadwallet shouldn't create new wallets (jnewbery)\n+- #12944 `619cd29` ScanforWalletTransactions should mark input txns as dirty (instagibbs)\n+- #13630 `d6b2235` Drop unused pindexRet arg to CMerkleTx::GetDepthInMainChain (Empact)\n+- #13566 `ad552a5` Fix get balance (jnewbery)\n+- #13500 `4a3e8c5` Decouple wallet version from client version (achow101)\n+- #13712 `aba2e66` Fix non-determinism in ParseHDKeypath(\u2026). Avoid using an uninitialized variable in path calculation (practicalswift)\n+- #9662 `6b6e854` Add createwallet \"disableprivatekeys\" option: a sane mode for watchonly-wallets (jonasschnelli)\n+- #13683 `e8c7434` Introduce assertion to document the assumption that cache and cache_used are always set in tandem (practicalswift)\n+- #12257 `5f7575e` Use destination groups instead of coins in coin select (kallewoof)\n+- #13773 `89a116d` Fix accidental use of the comma operator (practicalswift)\n+- #13805 `c88529a` Correctly limit output group size (sdaftuar)\n+- #12992 `26f59f5` Add wallet name to log messages (PierreRochard)\n+- #13667 `b81a8a5` Fix backupwallet for multiwallets (domob1812)\n+- #13657 `51c693d` assert to ensure accuracy of CMerkleTx::GetBlocksToMaturity (Empact)\n+- #13812 `9d86aad` sum ancestors rather than taking max in output groups (kallewoof)\n+- #13876 `8eb9870` Catch `filesystem_error` and raise `InitError` (MarcoFalke)\n+- #13808 `13d51a2` shuffle coins before grouping, where warranted (kallewoof)\n+- #13666 `2115cba` Always create signatures with Low R values (achow101)\n+- #13917 `0333914` Additional safety checks in PSBT signer (sipa)\n+- #13968 `65e7a8b` couple of walletcreatefundedpsbt fixes (instagibbs)\n+- #14055 `2307a6e` fix walletcreatefundedpsbt deriv paths, add test (instagibbs)\n+\n+### RPC and other APIs\n+- #12336 `3843780` Remove deprecated rpc options (jnewbery)\n+- #12193 `5dc00f6` Consistently use UniValue.pushKV instead of push_back(Pair()) (karel-3d) (MarcoFalke)\n+- #12409 `0cc45ed` Reject deprecated reserveChangeKey in fundrawtransaction (MarcoFalke)\n+- #10583 `8a98dfe` Split part of validateaddress into getaddressinfo (achow101)\n+- #10579 `ffc6e48` Split signrawtransaction into wallet and non-wallet RPC command (achow101)\n+- #12494 `e4ffcac` Declare CMutableTransaction a struct in rawtransaction.h (Empact)\n+- #12503 `0e26591` createmultisig no longer takes addresses (instagibbs)\n+- #12083 `228b086` Improve getchaintxstats test coverage (promag)\n+- #12479 `cd5e438` Add child transactions to getrawmempool verbose output (conscott)\n+- #11872 `702e8b7` createrawtransaction: Accept sorted outputs (MarcoFalke)\n+- #12700 `ebdf84c` Document RPC method aliasing (ryanofsky)\n+- #12727 `8ee5c7b` Remove unreachable help conditions in rpcwallet.cpp (lutangar)\n+- #12778 `b648974` Add username and ip logging for RPC method requests (GabrielDav)\n+- #12717 `ac898b6` rest: Handle utxo retrieval when ignoring the mempool (romanz)\n+- #12787 `cd99e5b` Adjust ifdef to avoid unreachable code (practicalswift)\n+- #11742 `18815b4` Add testmempoolaccept (MarcoFalke)\n+- #12942 `fefb817` Drop redundant testing of signrawtransaction prevtxs args (Empact)\n+- #11200 `5f2a399` Allow for aborting rescans in the GUI (achow101)\n+- #12791 `3a8a4dc` Expose a transaction's weight via RPC (TheBlueMatt)\n+- #12436 `6e67754` Adds a functional test to validate the transaction version number in the RPC output (251Labs)\n+- #12240 `6f8b345` Introduced a new `fees` structure that aggregates all sub-field fee types denominated in BTC (mryandao)\n+- #12321 `eac067a` p2wsh and p2sh-p2wsh address in decodescript (fivepiece)\n+- #13090 `17266a1` Remove Safe mode (achow101, laanwj)\n+- #12639 `7eb7076` Reduce `cs_main` lock in listunspent (promag)\n+- #10267 `7b966d9` New -includeconf argument for including external configuration files (kallewoof)\n+- #10757 `b9551d3` Introduce getblockstats to plot things (jtimon)\n+- #13288 `a589f53` Remove the need to include rpc/blockchain.cpp in order to put `GetDifficulty` under test (Empact)\n+- #13394 `e1f8dce` cli: Ignore libevent warnings (theuni)\n+- #13439 `3f398d7` Avoid \"duplicate\" return value for invalid submitblock (TheBlueMatt)\n+- #13570 `a247594` Add new \"getzmqnotifications\" method (domob1812)\n+- #13072 `b25a4c2` Update createmultisig RPC to support segwit (ajtowns)\n+- #12196 `8fceae0` Add scantxoutset RPC method (jonasschnelli)\n+- #13557 `b654723` BIP 174 PSBT Serializations and RPCs (achow101)\n+- #13697 `f030410` Support output descriptors in scantxoutset (sipa)\n+- #13927 `bced8ea` Use pushKV in some new PSBT RPCs (domob1812)\n+- #13918 `a9c56b6` Replace median fee rate with feerate percentiles in getblockstats (marcinja)\n+- #13721 `9f23c16` Bugfixes for BIP 174 combining and deserialization (achow101)\n+- #13960 `517010e` Fix PSBT deserialization of 0-input transactions (achow101)\n+\n+### GUI\n+- #12416 `c997f88` Fix Windows build errors introduced in #10498 (practicalswift)\n+- #11733 `e782099` Remove redundant locks (practicalswift)\n+- #12426 `bfa3911` Initialize members in WalletModel (MarcoFalke)\n+- #12489 `e117cfe` Bugfix: respect user defined configuration file (-conf) in QT settings (jonasschnelli)\n+- #12421 `be263fa` navigate to  transaction history page after send (Sjors)\n+- #12580 `ce56fdd` Show a transaction's virtual size in its details dialog (dooglus)\n+- #12501 `c8ea91a` Improved \"custom fee\" explanation in tooltip (randolf)\n+- #12616 `cff95a6` Set modal overlay hide button as default (promag)\n+- #12620 `8a43bdc` Remove TransactionTableModel::TxIDRole (promag)\n+- #12080 `56cc022` Add support to search the address book (promag)\n+- #12621 `2bac3e4` Avoid querying unnecessary model data when filtering transactions (promag)\n+- #12721 `e476826` remove \"new\" button during receive-mode in addressbook (jonasschnelli)\n+- #12723 `310dc61` Qt5: Warning users about invalid-BIP21 URI bitcoin:// (krab)\n+- #12610 `25cf18f` Multiwallet for the GUI (jonasschnelli)\n+- #12779 `f4353da` Remove unused method setupAmountWidget(\u2026) (practicalswift)\n+- #12795 `68484d6` do not truncate .dat extension for wallets in gui (instagibbs)\n+- #12870 `1d54004` make clean removes `src/qt/moc_` files (Sjors)\n+- #13055 `bdda14d` Don't log to console by default (laanwj)\n+- #13141 `57c57df` fixes broken link on readme (marcoagner)\n+- #12928 `ef006d9` Initialize non-static class members that were previously neither initialized where defined nor in constructor (practicalswift)\n+- #13158 `81c533c` Improve sendcoinsdialog readability (marcoagner)\n+- #11491 `40c34a0` Add proxy icon in statusbar (mess110)\n+- #13264 `2a7c53b` Satoshi unit (GreatSock)\n+- #13097 `e545503` Support wallets loaded dynamically (promag)\n+- #13284 `f8be434` fix visual \"overflow\" of amount input (brandonrninefive)\n+- #13275 `a315b79` use `[default wallet]` as name for wallet with no name (jonasschnelli)\n+- #13273 `3fd0c23` Qt/Bugfix: fix handling default wallet with no name (jonasschnelli)\n+- #13341 `25d2df2` Stop translating command line options (laanwj)\n+- #13043 `6e249e4` OptionsDialog: add prune setting (Sjors)\n+- #13506 `6579d80` load wallet in UI after possible init aborts (jonasschnelli)\n+- #13458 `dc53f7f` Drop qt4 support (laanwj)\n+- #13528 `b877c39` Move BitcoinGUI initializers to class, fix initializer order warning (laanwj)\n+- #13536 `baf3a3a` coincontrol: Remove unused qt4 workaround (MarcoFalke)\n+- #13537 `10ffca7` Peer table: Visualize inbound/outbound state for every row (wodry)\n+- #13791 `2c14c1f` Reject dialogs if key escape is pressed (promag)\n+\n+### Build system\n+- #12371 `c9ca4f6` Add gitian PGP key: akx20000 (ghost)\n+- #11966 `f4f4f51` clientversion: Use full commit hash for commit-based version descriptions (luke-jr)\n+- #12417 `ae0fbf0` Upgrade `mac_alias` to 2.0.7 (droark)\n+- #12444 `1f055ef` gitian: Bump descriptors for (0.)17 (theuni)\n+- #12402 `59e032b` expat 2.2.5, ccache 3.4.1, miniupnpc 2.0.20180203 (fanquake)\n+- #12029 `daa84b3` Add a makefile target for Doxygen documentation (Ov3rlo4d)\n+- #12466 `6645eaf` Only use `D_DARWIN_C_SOURCE` when building miniupnpc on darwin (fanquake)\n+- #11986 `765a3eb` zeromq 4.2.3 (fanquake)\n+- #12373 `f13d756` Add build support for profiling (murrayn)\n+- #12631 `a312e20` gitian: Alphabetize signing keys & add kallewoof key (kallewoof)\n+- #12607 `29fad97` Remove ccache (fanquake)\n+- #12625 `c4219ff` biplist 1.0.3 (fanquake)\n+- #12666 `05042d3` configure: UniValue 1.0.4 is required for pushKV(, bool) (luke-jr)\n+- #12678 `6324c68` Fix a few compilation issues with Clang 7 and -Werror (vasild)\n+- #12692 `de6bdfd` Add configure options for various -fsanitize flags (eklitzke)\n+- #12901 `7e23972` Show enabled sanitizers in configure output (practicalswift)\n+- #12899 `3076993` macOS: Prevent Xcode 9.3 build warnings (AkioNak)\n+- #12715 `8fd6243` Add 'make clean' rule (hkjn)\n+- #13133 `a024a18` Remove python2 from configure.ac (ken2812221)\n+- #13005 `cb088b1` Make --enable-debug to pick better options (practicalswift)\n+- #13254 `092b366` Remove improper `qt/moc_*` cleaning glob from the general Makefile (Empact)\n+- #13306 `f5a7733` split warnings out of CXXFLAGS (theuni)\n+- #13385 `7c7508c` Guard against accidental introduction of new Boost dependencies (practicalswift)\n+- #13041 `5779dc4` Add linter checking for accidental introduction of locale dependence (practicalswift)\n+- #13408 `70a03c6` crypto: cleanup sha256 build (theuni)\n+- #13435 `cf7ca60` When build fails due to lib missing, indicate which one (Empact)\n+- #13445 `8eb76f3` Reset default -g -O2 flags when enable debug (ken2812221)\n+- #13465 `81069a7` Avoid concurrency issue when make multiple target (ken2812221)\n+- #13454 `45c00f8` Make sure `LC_ALL=C` is set in all shell scripts (practicalswift)\n+- #13480 `31145a3` Avoid copies in range-for loops and add a warning to detect them (theuni)\n+- #13486 `66e1a08` Move rpc/util.cpp from libbitcoin-util to libbitcoin-server (ken2812221)\n+- #13580 `40334c7` Detect if char equals `int8_t` (ken2812221)\n+- #12788 `287e4ed` Tune wildcards for LIBSECP256K1 target (kallewoof)\n+- #13611 `b55f0c3` bugfix: Use `__cpuid_count` for gnu C to avoid gitian build fail (ken2812221)\n+- #12971 `a6d14b1` Upgrade Qt to 5.9.6 (TheCharlatan)\n+- #13543 `6c6a300` Add RISC-V support (laanwj)\n+- #13177 `dcb154e` GCC-7 and glibc-2.27 back compat code (ken2812221)\n+- #13659 `90b1c7e` add missing leveldb defines (theuni)\n+- #13368 `c0f1569` Update gitian-build.sh for docker (achow101)\n+- #13171 `19d8ca5` Change gitian-descriptors to use bionic instead (ken2812221)\n+- #13604 `75bea05` Add depends 32-bit arm support for bitcoin-qt (TheCharlatan)\n+- #13623 `9cdb19f` Migrate gitian-build.sh to python (ken2812221)\n+- #13689 `8c36432` disable Werror when building zmq (greenaddress)\n+- #13617 `cf7f9ae` release: Require macos 10.10+ (fanquake)\n+- #13750 `c883653` use MacOS friendly sed syntax in qt.mk (Sjors)\n+- #13095 `415f2bf` update `ax_boost_chrono`/`unit_test_framework` (fanquake)\n+- #13732 `e8ffec6` Fix Qt's rcc determinism (Fuzzbawls)\n+- #13782 `8284f1d` Fix osslsigncode compile issue in gitian-build (ken2812221)\n+- #13696 `2ab7208` Add aarch64 qt depends support for cross compiling bitcoin-qt (TheCharlatan)\n+- #13705 `b413ba0` Add format string linter (practicalswift)\n+- #14000 `48c8459` fix qt determinism (theuni)\n+- #14018 `3e4829a` Bugfix: NSIS: Exclude `Makefile*` from docs (luke-jr)\n+- #12906 `048ac83` Avoid `interface` keyword to fix windows gitian build (ryanofsky)\n+- #13314 `a9b6957` Fix FreeBSD build by including utilstrencodings.h (laanwj)\n+\n+### Tests and QA\n+- #12252 `8d57319` Require all tests to follow naming convention (ajtowns)\n+- #12295 `935eb8d` Enable flake8 warnings for all currently non-violated rules (practicalswift)\n+- #11858 `b4d8549` Prepare tests for Windows (MarcoFalke)\n+- #11771 `2dbc4a4` Change invalidtxrequest to use BitcoinTestFramework (jnewbery)\n+- #12200 `d09968f` Bind functional test nodes to 127.0.0.1 (Sjors)\n+- #12425 `26dc2da` Add some script tests (richardkiss)\n+- #12455 `23481fa` Fix bip68 sequence test to reflect updated rpc error message (Empact)\n+- #12477 `acd1e61` Plug memory leaks and stack-use-after-scope (MarcoFalke)\n+- #12443 `07090c5` Move common args to bitcoin.conf (MarcoFalke)\n+- #12570 `39dcac2` Add test cases for HexStr (`std::reverse_iterator` and corner cases) (kostaz)\n+- #12582 `6012f1c` Fix ListCoins test failure due to unset `g_wallet_allow_fallback_fee` (ryanofsky)\n+- #12516 `7f99964` Avoid unintentional unsigned integer wraparounds in tests (practicalswift)\n+- #12512 `955fd23` Don't test against the mempool min fee information in mempool_limit.py (Empact)\n+- #12600 `29088b1` Add a test for large tx output scripts with segwit input (richardkiss)\n+- #12627 `791c3ea` Fix some tests to work on native windows (MarcoFalke)\n+- #12405 `0f58d7f` travis: Full clone for git subtree check (MarcoFalke)\n+- #11772 `0630974` Change invalidblockrequest to use BitcoinTestFramework (jnewbery)\n+- #12681 `1846296` Fix ComputeTimeSmart test failure with `-DDEBUG_LOCKORDER` (ryanofsky)\n+- #12682 `9f04c8e` travis: Clone depth 1 unless `$check_doc` (MarcoFalke)\n+- #12710 `00d1680` Append scripts to new `test_list` array to fix bad assignment (jeffrade)\n+- #12720 `872c921` Avoiding 'file' function name from python2 (jeffrade)\n+- #12728 `4ba3d4f` rename TestNode to TestP2PConn in tests (jnewbery)\n+- #12746 `2405ce1` Remove unused argument `max_invalid` from `check_estimates(\u2026)` (practicalswift)\n+- #12718 `185d484` Require exact match in `assert_start_raises_init_eror` (jnewbery, MarcoFalke)\n+- #12076 `6d36f59` Use node.datadir instead of tmpdir in test framework (MarcoFalke)\n+- #12772 `b43aba8` ci: Bump travis timeout for make check to 50m (jnewbery)\n+- #12806 `18606eb` Fix function names in `feature_blocksdir` (MarcoFalke)\n+- #12811 `0d8fc8d` Make summary row bold-red if any test failed and show failed tests at end of table (laanwj)\n+- #12790 `490644d` Use blockmaxweight where tests previously had blockmaxsize (conscott)\n+- #11773 `f0f9732` Change `feature_block.py` to use BitcoinTestFramework (jnewbery)\n+- #12839 `40f4baf` Remove travis checkout depth (laanwj)\n+- #11817 `2a09a78` Change `feature_csv_activation.py` to use BitcoinTestFramework (jnewbery)\n+- #12284 `fa5825d` Remove assigned but never used local variables. Enable Travis checking for unused local variables (practicalswift)\n+- #12719 `9beded5` Add note about test suite naming convention in developer-notes.md (practicalswift)\n+- #12861 `c564424` Stop `feature_block.py` from blowing up memory (jnewbery)\n+- #12851 `648252e` travis: Run verify-commits only on cron jobs (MarcoFalke)\n+- #12853 `2106c4c` Match full plain text by default (MarcoFalke)\n+- #11818 `9a2db3b` I accidentally (deliberately) killed it (the ComparisonTestFramework) (jnewbery)\n+- #12766 `69310a3` Tidy up REST interface functional tests (romanz)\n+- #12849 `83c7533` Add logging in loops in `p2p_sendhears.py` (ccdle12)\n+- #12895 `d6f10b2` Add note about test suite name uniqueness requirement to developer notes (practicalswift)\n+- #12856 `27278df` Add Metaclass for BitcoinTestFramework (WillAyd)\n+- #12918 `6fc5a05` Assert on correct variable (kallewoof)\n+- #11878 `a04440f` Add Travis check for duplicate includes (practicalswift)\n+- #12917 `cf8073f` Windows fixups for functional tests (MarcoFalke)\n+- #12926 `dd1ca9e` Run unit tests in parallel (sipa)\n+- #12920 `b1fdfc1` Fix sign for expected values (kallewoof)\n+- #12947 `979f598` Wallet hd functional test speedup and clarification (instagibbs)\n+- #12993 `0d69921` Remove compatibility code not needed now when we're on Python 3 (practicalswift)\n+- #12996 `6a278e0` Remove redundant bytes(\u2026) calls (practicalswift)\n+- #12949 `6b46288` Avoid copies of CTransaction (MarcoFalke)\n+- #13007 `0d12570` Fix dangling wallet pointer in vpwallets (promag)\n+- #13048 `cac6d11` Fix `feature_block` flakiness (jnewbery)\n+- #12510 `d5b2e98` Add `rpc_bind` test to default-run tests (laanwj)\n+- #13022 `896a9d0` Attach node index to `test_node` AssertionError and print messages (jamesob)\n+- #13024 `018c7e5` Add rpcauth pair that generated by rpcauth.py (ken2812221)\n+- #13013 `a0079d4` bench: Amend `mempool_eviction` test for witness txs (MarcoFalke)\n+- #13051 `e074097` Normalize executable location (MarcoFalke)\n+- #13056 `106d929` Make rpcauth.py testable and add unit tests (nixbox)\n+- #13073 `a785bc3` add rpcauth-test to `AC_CONFIG_LINKS` to fix out-of-tree make check (laanwj)\n+- #12830 `25ad2f7` Clarify address book error messages, add tests (jamesob)\n+- #13082 `24106a8` don't test against min relay fee information in `mining_prioritisetransaction.py` (kristapsk)\n+- #13003 `8d045a0` Add test for orphan handling (MarcoFalke)\n+- #13105 `9e9b48d` Add --failfast option to functional test runner (jamesob)\n+- #13130 `3186ad4` Fix race in `rpc_deprecated.py` (jnewbery)\n+- #13136 `baf6b4e` Fix flake8 warnings in several wallet functional tests (jnewbery)\n+- #13094 `bf9b03d` Add test for 64-bit Windows PE, modify 32-bit test results (ken2812221)\n+- #13183 `9458b05` travis: New travis job for `check_docs` steps (glaksmono)\n+- #12265 `1834d4d` fundrawtransaction: lock watch-only shared address (kallewoof)\n+- #13188 `4a50ec0` Remove unused option --srcdir (MarcoFalke)\n+- #12755 `612ba35` Better stderr testing (jnewbery)\n+- #13198 `196c5a9` Avoid printing to console during cache creation (sdaftuar)\n+- #13075 `cb9bbf7` Remove 'account' API from wallet functional tests (jnewbery)\n+- #13221 `ffa86af` travis: Rename the build stage `check_doc` to `lint` (practicalswift)\n+- #13205 `3cbd25f` Remove spurious error log in `p2p_segwit.py` (jnewbery)\n+- #13291 `536120e` Don't include torcontrol.cpp into the test file (Empact)\n+- #13281 `2ac6315` Move linters to test/lint, add readme (MarcoFalke)\n+- #13215 `f8a29ca` travis: Build tests on ubuntu 18.04 with docker (ken2812221)\n+- #13349 `24f7011` bench: Don't return a bool from main (laanwj)\n+- #13347 `87a9d03` travis: Skip cache for lint stage (MarcoFalke)\n+- #13355 `0b1c0c4` Fix \"gmake check\" under OpenBSD 6.3 (probably `*BSD`): Avoid using GNU grep specific regexp handling (practicalswift)\n+- #13353 `d4f6dac` Fixup setting of PATH env var (MarcoFalke)\n+- #13352 `e24bf1c` Avoid checking reject code for now (MarcoFalke)\n+- #13383 `2722a1f` bench: Use non-throwing parsedouble(\u2026) instead of throwing boost::lexical_cast<double>(\u2026) (practicalswift)\n+- #13367 `264efdc` Increase includeconf test coverage (MarcoFalke)\n+- #13404 `3d3d8ae` speed up of `tx_validationcache_tests` by reusing of CTransaction (lucash-dev)\n+- #13421 `531a033` Remove `portseed_offset` from test runner (MarcoFalke)\n+- #13440 `5315660` Log as utf-8 (MarcoFalke)\n+- #13066 `fa4b906` Migrate verify-commits script to python, run in travis (ken2812221)\n+- #13447 `4b1edd3` travis: Increase `travis_wait` time while verifying commits (ken2812221)\n+- #13350 `f532d52` Add logging to provide anchor points when debugging p2p_sendheaders (lmanners)\n+- #13406 `4382f19` travis: Change mac goal to all deploy (ken2812221)\n+- #13457 `b222138` Drop variadic macro (MarcoFalke)\n+- #13512 `3a45493` mininode: Expose connection state through `is_connected` (MarcoFalke)\n+- #13496 `9ab4c2a` Harden lint-filenames.sh (wodry)\n+- #13219 `08516e0` bench: Add block assemble benchmark (MarcoFalke)\n+- #13530 `b1dc39d` bench: Add missing pow.h header (laanwj)\n+- #12686 `2643fa5` Add -ftrapv to CFLAGS and CXXFLAGS when --enable-debug is used. Enable -ftrapv in Travis (practicalswift)\n+- #12882 `d96bdd7` Make `test_bitcoin` pass under ThreadSanitzer (clang). Fix lock-order-inversion (potential deadlock) (practicalswift)\n+- #13535 `2328039` `wallet_basic`: Specify minimum required amount for listunspent (MarcoFalke)\n+- #13551 `c93c360` Fix incorrect documentation for test case `cuckoocache_hit_rate_ok` (practicalswift)\n+- #13563 `b330f3f` bench: Simplify coinselection (promag)\n+- #13517 `a6ed99a` Remove need to handle the network thread in tests (MarcoFalke)\n+- #13522 `686e97a` Fix `p2p_sendheaders` race (jnewbery)\n+- #13467 `3dc2dcf` Make `p2p_segwit` easier to debug (jnewbery)\n+- #13598 `0212187` bench: Fix incorrect behaviour in prevector.cpp (AkioNak)\n+- #13565 `b05ded1` Fix AreInputsStandard test to reference the proper scriptPubKey (Empact)\n+- #13145 `d3dae3d` Use common getPath method to create temp directory in tests (winder)\n+- #13645 `2ea7eb6` skip `rpc_zmq` functional test as necessary (jamesob)\n+- #13626 `8f1106d` Fix some TODOs in `p2p_segwit` (MarcoFalke)\n+- #13138 `8803c91` Remove accounts from `wallet_importprunedfunds.py` (jnewbery)\n+- #13663 `cbc9b50` Avoid read/write to default datadir (MarcoFalke)\n+- #13682 `f8a32a3` bench: Remove unused variable (practicalswift)\n+- #13638 `6fcdb5e` Use `MAX_SCRIPT_ELEMENT_SIZE` from script.py (domob1812)\n+- #13687 `9d26b69` travis: Check that ~/.bitcoin is never created (MarcoFalke)\n+- #13715 `e1260a7` fixes mininode's P2PConnection sending messages on closing transport (marcoagner)\n+- #13729 `aa9429a` travis: Avoid unnecessarily setting env variables on the lint build (Empact)\n+- #13747 `ab28b5b` Skip P2PConnection's `is_closing()` check when not available (domob1812)\n+- #13650 `7a9bca6` travis: Don't store debug info if --enable-debug is set (ken2812221)\n+- #13711 `f98d1e0` bench: Add benchmark for unserialize prevector (AkioNak)\n+- #13771 `365384f` travis: Retry to fetch docker image (MarcoFalke)\n+- #13806 `4d550ff` Fix `bench/block_assemble` assert failure (jamesob)\n+- #13779 `d25079a` travis: Improve readability of travis.yml and log outputs (scravy)\n+- #13822 `0fb9c87` bench: Make coinselection output groups pass eligibility filter (achow101)\n+- #13247 `e83d82a` Add tests to SingleThreadedSchedulerClient() and document the memory model (skeees)\n+- #13811 `660abc1` travis: Run `bench_bitcoin` once (MarcoFalke)\n+- #13837 `990e182` Extract `rpc_timewait` as test param (MarcoFalke)\n+- #13851 `9c4324d` fix locale for lint-shell (scravy)\n+- #13823 `489b51b` quote path in authproxy for external multiwallets (MarcoFalke)\n+- #13849 `2b67354` travis: Use only travis jobs: instead of mix of jobs+matrix (scravy)\n+- #13859 `2384323` Add emojis to `test_runner` path and wallet filename (MarcoFalke)\n+- #13916 `8ac7125` `wait_for_verack` by default (MarcoFalke)\n+- #13669 `f66e1c7` Cleanup `create_transaction` implementations (conscott)\n+- #13924 `09ada21` Simplify comparison in `rpc_blockchain.py` (domob1812)\n+- #13913 `a08533c` Remove redundant checkmempool/checkblockindex `extra_args` (MarcoFalke)\n+- #13915 `a04888a` Add test for max number of entries in locator (MarcoFalke)\n+- #13867 `1b04b55` Make extended tests pass on native Windows (MarcoFalke)\n+- #13944 `0df7a6c` Port usage of deprecated optparse module to argparse module (Kvaciral)\n+- #13928 `b8eb0df` blocktools enforce named args for amount (MarcoFalke)\n+- #13054 `bffb35f` Enable automatic detection of undefined names in Python tests scripts. Remove wildcard imports (practicalswift)\n+- #14069 `cf3d7f9` Use assert not `BOOST_CHECK_*` from multithreaded tests (skeees)\n+- #14071 `fab0fbe` Stop txindex thread before calling destructor (MarcoFalke)\n+\n+### Miscellaneous\n+- #11909 `8897135` contrib: Replace developer keys with list of pgp fingerprints (MarcoFalke)\n+- #12394 `fe53d5f` gitian-builder.sh: fix --setup doc, since lxc is default (Sjors)\n+- #12468 `294a766` Add missing newline in init.cpp log message (Aesti)\n+- #12308 `dcfe218` contrib: Add support for out-of-tree builds in gen-manpages.sh (laanwj)\n+- #12451 `aae64a2` Bump leveldb subtree (MarcoFalke)\n+- #12527 `d77b4a7` gitian-build.sh: fix signProg being recognized as two parameters (ken2812221)\n+- #12588 `d74b01d` utils: Remove deprecated pyzmq call from python zmq example (kosciej)\n+- #10271 `bc67982` Use `std::thread::hardware_concurrency`, instead of Boost, to determine available cores (fanquake)\n+- #12097 `14475e2` scripts: Lint-whitespace: use perl instead of grep -p (Sjors)\n+- #12098 `17c44b2` scripts: Lint-whitespace: add param to check last n commits (Sjors)\n+- #11900 `842f61a` script: Simplify checkminimalpush checks, add safety assert (instagibbs)\n+- #12567 `bb98aec` util: Print timestamp strings in logs using iso 8601 formatting (practicalswift)\n+- #12572 `d8d9162` script: Lint-whitespace: find errors more easily (AkioNak)\n+- #10694 `ae5bcc7` Remove redundant code in MutateTxSign(CMutableTransaction&, const std::string&) (practicalswift)\n+- #12659 `3d16f58` Improve Fatal LevelDB Log Messages (eklitzke)\n+- #12643 `0f0229d` util: Remove unused `sync_chain` (MarcoFalke)\n+- #12102 `7fb8fb4` Apply hardening measures in bitcoind systemd service file (Flowdalic)\n+- #12652 `55f490a` bitcoin-cli: Provide a better error message when bitcoind is not running (practicalswift)\n+- #12630 `c290508` Provide useful error message if datadir is not writable (murrayn)\n+- #11881 `624bee9` Remove Python2 support (jnewbery)\n+- #12821 `082e26c` contrib: Remove unused import string (MarcoFalke)\n+- #12829 `252c1b0` Python3 fixup (jnewbery)\n+- #12822 `ff48f62` Revert 7deba93bdc76616011a9f493cbc203d60084416f and fix expired-key-sigs properly (TheBlueMatt)\n+- #12820 `5e53b80` contrib: Fix check-doc script regexes (MarcoFalke)\n+- #12713 `4490871` Track negated options in the option parser (eklitzke)\n+- #12708 `b2e5fe8` Make verify-commits.sh test that merges are clean (sipa)\n+- #12891 `3190785` logging: Add lint-logs.sh to check for newline termination (jnewbery)\n+- #12923 `a7cbe38` util: Pass `pthread_self()` to `pthread_setschedparam` instead of 0 (laanwj)\n+- #12871 `fb17fae` Add shell script linting: Check for shellcheck warnings in shell scripts (practicalswift)\n+- #12970 `5df84de` logging: Bypass timestamp formatting when not logging (theuni)\n+- #12987 `fe8fa22` tests/tools: Enable additional Python flake8 rules for automatic linting via Travis (practicalswift)\n+- #12972 `0782508` Add python3 script shebang lint (ken2812221)\n+- #13004 `58bbc55` Print to console by default when not run with -daemon (practicalswift)\n+- #13039 `8b4081a` Add logging and error handling for file syncing (laanwj)\n+- #13020 `4741ca5` Consistently log CValidationState on call failure (Empact)\n+- #13031 `826acc9` Fix for utiltime to compile with msvc (sipsorcery)\n+- #13119 `81743b5` Remove script to clean up datadirs (MarcoFalke)\n+- #12954 `5a66642` util: Refactor logging code into a global object (jimpo)\n+- #12769 `35eb9d6` Add systemd service to bitcoind in debian package (ghost)\n+- #13146 `0bc980b` rpcauth: Make it possible to provide a custom password (laanwj)\n+- #13148 `b62b437` logging: Fix potential use-after-free in logprintstr(\u2026) (practicalswift)\n+- #13214 `0612d96` Enable Travis checking for two Python linting rules we are currently not violating (practicalswift)\n+- #13197 `6826989` util: Warn about ignored recursive -includeconf calls (kallewoof)\n+- #13176 `d9ebb63` Improve CRollingBloomFilter performance: replace modulus with FastMod (martinus)\n+- #13228 `d792e47` Add script to detect circular dependencies between source modules (sipa)\n+- #13320 `e08c130` Ensure gitian-build.sh uses bash (jhfrontz)\n+- #13301 `e4082d5` lint: Add linter to error on `#include <*.cpp>` (Empact)\n+- #13374 `56f6936` utils and libraries: checking for bitcoin address in translations (kaplanmaxe)\n+- #13230 `7c32b41` Simplify include analysis by enforcing the developer guide's include syntax (practicalswift)\n+- #13450 `32bf4c6` Add linter: Enforce the source code file naming convention described in the developer notes (practicalswift)\n+- #13479 `fa2ea37` contrib: Fix cve-2018-12356 by hardening the regex (loganaden)\n+- #13448 `a90ca40` Add linter: Make sure we explicitly open all text files using UTF-8 encoding in Python (practicalswift)\n+- #13494 `d67eff8` Follow-up to #13454: Fix broken build by exporting `LC_ALL=C` (practicalswift)\n+- #13510 `03f3925` Scripts and tools: Obsolete #!/bin/bash shebang (DesWurstes)\n+- #13577 `c9eb8d1` logging: Avoid nstart may be used uninitialized in appinitmain warning (mruddy)\n+- #13603 `453ae5e` bitcoin-tx: Stricter check for valid integers (domob1812)\n+- #13118 `c05c93c` RPCAuth Detection in Logs (Linrono)\n+- #13647 `4027ec1` Scripts and tools: Fix `BIND_NOW` check in security-check.py (conradoplg)\n+- #13692 `f5d166a` contrib: Clone core repo in gitian-build (MarcoFalke)\n+- #13699 `4c6d1b9` contrib: Correct version check (kallewoof)\n+- #13695 `dcc0cff` lint: Add linter for circular dependencies (Empact)\n+- #13733 `0d1ebf4` utils: Refactor argsmanager a little (AtsukiTak)\n+- #13714 `29b4ee6` contrib: Add lxc network setup for bionic host (ken2812221)\n+- #13764 `f8685f4` contrib: Fix test-security-check fail in ubuntu 18.04 (ken2812221)\n+- #13809 `77168f7` contrib: Remove debian and rpm subfolder (MarcoFalke)\n+- #13799 `230652c` Ignore unknown config file options; warn instead of error (sipa)\n+- #13894 `df9f712` shutdown: Stop threads before resetting ptrs (MarcoFalke)\n+- #13925 `71dec5c` Merge leveldb subtree (MarcoFalke)\n+- #13939 `ef86f26` lint: Make format string linter understand basic template parameter syntax (practicalswift)\n+- #14105 `eb202ea` util: Report parse errors in configuration file (laanwj)\n+- #12604 `9903537` Add DynamicMemoryUsage() to CDBWrapper to estimate LevelDB memory use (eklitzke)\n+- #12495 `047865e` Increase LevelDB `max_open_files` (eklitzke)\n+- #12784 `e80716d` Fix bug in memory usage calculation (unintended integer division) (practicalswift)\n+- #12618 `becd8dd` Set `SCHED_BATCH` priority on the loadblk thread (eklitzke)\n+- #12854 `5ca1509` Add P2P, Network, and Qt categories to the desktop icon (luke-jr)\n+- #11862 `4366f61` Network specific conf sections (ajtowns)\n+- #13441 `4a7e64f` Prevent shared conf files from failing with different available options in different binaries (achow101)\n+- #13471 `5eca4e8` For AVX2 code, also check for AVX, XSAVE, and OS support (sipa)\n+- #13503 `c655b2c` Document FreeBSD quirk. Fix FreeBSD build: Use std::min<int>(\u2026) to allow for compilation under certain FreeBSD versions (practicalswift)\n+- #13725 `07ce278` Fix bitcoin-cli --version (Empact)\n+\n+### Documentation\n+- #12306 `216f9a4` Improvements to UNIX documentation (axvr)\n+- #12309 `895fbd7` Explain how to update chainTxData in release process (laanwj)\n+- #12317 `85123be` Document method for reviewers to verify chainTxData (jnewbery)\n+- #12331 `d32528e` Properly alphabetize output of CLI --help option (murrayn)\n+- #12322 `c345148` Remove step making cloned repository world-writable for Windows build (murrayn)\n+- #12354 `b264528` add gpg key for fivepiece (fivepiece)\n+- #11761 `89005dd` initial QT documentation (Sjors)\n+- #12232 `fdc2188` Improve \"Turn Windows Features On or Off\" step (MCFX2)\n+- #12487 `4528f74` init: Remove translation for `-blockmaxsize` option help (laanwj)\n+- #12546 `a4a5fc7` Minor improvements to Compatibility Notes (randolf)\n+- #12434 `21e2670` dev-notes: Members should be initialized (MarcoFalke)\n+- #12452 `71f56da` clarified systemd installation instructions in init.md for Ubuntu users (DaveFromBinary)\n+- #12615 `1f93491` allow for SIGNER containing spaces (ken2812221)\n+- #12603 `85424d7` PeerLogicValidation interface (jamesob)\n+- #12581 `12ac2f0` Mention configure without wallet in FreeBSD instructions (dbolser)\n+- #12619 `8a709fb` Give hint about gitian not able to download (kallewoof)\n+- #12668 `de2fcaa` do update before fetching packages in WSL build guide (nvercamm)\n+- #12586 `e7721e6` Update osx brew install instruction (fanquake)\n+- #12760 `7466a26` Improve documentation on standard communication channels (jimpo)\n+- #12797 `0415b1e` init: Fix help message for checkblockindex (MarcoFalke)\n+- #12800 `2d97611` Add note about our preference for scoped enumerations (\"enum class\") (practicalswift)\n+- #12798 `174d016` Refer to witness reserved value as spec. in the BIP (MarcoFalke)\n+- #12759 `d3908e2` Improve formatting of developer notes (eklitzke)\n+- #12877 `2b54155` Use bitcoind in Tor documentation (knoxcard)\n+- #12896 `b15485e` Fix conflicting statements about initialization in developer notes (practicalswift)\n+- #12850 `319991d` add qrencode to brew install instructions (buddilla)\n+- #12007 `cd8e45b` Clarify the meaning of fee delta not being a fee rate in prioritisetransaction RPC (honzik666)\n+- #12927 `06ead15` fixed link, replaced QT with Qt (trulex)\n+- #12852 `ebd786b` devtools: Setup ots git integration (MarcoFalke)\n+- #12933 `3cf76c2` Refine header include policy (MarcoFalke)\n+- #12951 `6df0c6c` Fix comment in FindForkInGlobalIndex (jamesob)\n+- #12982 `a63b4e3` Fix inconsistent namespace formatting guidelines (ryanofsky)\n+- #13026 `9b3a67e` Fix include comment in src/interfaces/wallet.h (promag)\n+- #13012 `d1e3c5e` Add comments for chainparams.h, validation.cpp (jamesob)\n+- #13064 `569e381` List support for BIP173 in bips.md (sipa)\n+- #12997 `646b7f6` build-windows: Switch to Artful, since Zesty is EOL (MarcoFalke)\n+- #12384 `c5f7efe` Add version footnote to tor.md (Willtech)\n+- #13165 `627c376` Mention good first issue list in CONTRIBUTING.md (fanquake)\n+- #13295 `fb77310` Update OpenBSD build instructions for OpenBSD 6.3 (practicalswift)\n+- #13340 `3a8e3f4` remove leftover check-doc documentation (fanquake)\n+- #13346 `60f0358` update bitcoin-dot-org links in release-process.md (fanquake)\n+- #13372 `f014933` split FreeBSD build instructions out of build-unix.md (steverusso)\n+- #13366 `861de3b` Rename \u201cOS X\u201d to the newer \u201cmacOS\u201d convention (giulio92)\n+- #13369 `f8bcef3` update transifex doc link (mess110)\n+- #13312 `b22115d` Add a note about the source code filename naming convention (practicalswift)\n+- #13460 `1939536` Remove note to install all boost dev packages (MarcoFalke)\n+- #13476 `9501938` Fix incorrect shell quoting in FreeBSD build instructions (murrayn)\n+- #13402 `43fa355` Document validationinterace callback blocking deadlock potential (TheBlueMatt)\n+- #13488 `d6cf4bd` Improve readability of \"Squashing commits\" (wodry)\n+- #13531 `ee02deb` Clarify that mempool txiter is `const_iterator` (MarcoFalke)\n+- #13418 `01f9098` More precise explanation of parameter onlynet (wodry)\n+- #13592 `1756cb4` Modify policy to not translate command-line help (ken2812221)\n+- #13588 `b77c38e` Improve doc of options addnode, connect, seednode (wodry)\n+- #13614 `17e9106` Update command line help for -printtoconsole and -debuglogfile (satwo, fanquake)\n+- #13605 `8cc048e` corrected text to reflect new(er) process of specifying fingerprints (jhfrontz)\n+- #13481 `b641f60` Rewrite some validation docs as lock annotations (MarcoFalke)\n+- #13680 `30640f8` Remove outdated comment about miner ignoring CPFP (jamesob)\n+- #13625 `7146672` Add release notes for -printtoconsole and -debuglogfile changes (satwo)\n+- #13718 `f7f574d` Specify preferred Python string formatting technique (masonicboom)\n+- #12764 `10b9a81` Remove field in getblocktemplate help that has never been used (conscott)\n+- #13742 `d2186b3` Adjust bitcoincore.org links (MarcoFalke)\n+- #13706 `94dd89e` Minor improvements to release-process.md (MitchellCash)\n+- #13775 `ef4fac0` Remove newlines from error message (practicalswift)\n+- #13803 `feb7dd9` add note to contributor docs about warranted PR's (kallewoof)\n+- #13814 `67af7ef` Add BIP174 to list of implemented BIPs (sipa)\n+- #13835 `c1cba35` Fix memory consistency model in comment (skeees)\n+- #13824 `aa30e4b` Remove outdated net comment (MarcoFalke)\n+- #13853 `317477a` correct versions in dependencies.md (fanquake)\n+- #13872 `37ab117` Reformat -help output for help2man (real-or-random)\n+- #13717 `8c3c402` Link to python style guidelines from developer notes (masonicboom)\n+- #13895 `1cd5f2c` fix GetWarnings docs to reflect behavior (Empact)\n+- #13911 `3e3a50a` Revert translated string change, clarify wallet log messages (PierreRochard)\n+- #13908 `d6faea4` upgrade rescan time warning from minutes to >1 hour (masonicboom)\n+- #13905 `73a09b4` fixed bitcoin-cli -help output for help2man (hebasto)\n+- #14100 `2936dbc` Change documentation for =0 for non-boolean options (laanwj)\n+- #14096 `465a583` Add reference documentation for descriptors language (sipa)\n+- #12757 `0c5f67b` Clarify include guard naming convention (practicalswift)\n+- #13844 `d3325b0` Correct the help output for `-prune` (hebasto)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- 251\n+- 532479301\n+- Aaron Clauson\n+- Akio Nakamura\n+- Akira Takizawa\n+- Alex Morcos\n+- Alex Vear\n+- Alexey Ivanov\n+- Alin Rus\n+- Andrea Comand\n+- Andrew Chow\n+- Anthony Towns\n+- AtsukiTak\n+- Ben Woosley\n+- Bernhard M. Wiedemann\n+- Brandon Ruggles\n+- buddilla\n+- ccdle12\n+- Chris Moore\n+- Chun Kuan Lee\n+- Clem Taylor\n+- Conor Scott\n+- Conrado Gouvea\n+- Cory Fields\n+- Cristian Mircea Messel\n+- ctp-tsteenholdt\n+- Damian Williamson\n+- Dan Bolser\n+- Daniel Kraft\n+- Darko Jankovi\u0107\n+- DaveFromBinary\n+- David A. Harding\n+- DesWurstes\n+- Dimitris Apostolou\n+- donaloconnor\n+- Douglas Roark\n+- DrahtBot\n+- Drew Rasmussen\n+- e0\n+- Ernest Hemingway\n+- Ethan Heilman\n+- Evan Klitzke\n+- fanquake\n+- Felix Wolfsteller\n+- fivepiece\n+- Florian Schmaus\n+- Fuzzbawls\n+- Gabriel Davidian\n+- Giulio Lombardo\n+- Gleb\n+- Grady Laksmono\n+- GreatSock\n+- Gregory Maxwell\n+- Gregory Sanders\n+- Hennadii Stepanov\n+- Henrik Jonsson\n+- Indospace.io\n+- James O'Beirne\n+- Jan \u010capek\n+- Jeff Frontz\n+- Jeff Rade\n+- Jeremy Rubin\n+- JeremyRand\n+- Jesse Cohen\n+- Jim Posen\n+- joemphilips\n+- John Bampton\n+- John Newbery\n+- johnlow95\n+- Johnson Lau\n+- Jonas Nick\n+- Jonas Schnelli\n+- Jo\u00e3o Barbosa\n+- Jorge Tim\u00f3n\n+- Josh Hartshorn\n+- Julian Fleischer\n+- kallewoof\n+- Karel Bilek\n+- Karl-Johan Alm\n+- Ken Lee\n+- Kevin Pan\n+- Kosta Zertsekel\n+- Kristaps Kaupe\n+- Kvaciral\n+- Lawrence Nahum\n+- Linrono\n+- lmanners\n+- Loganaden Velvindron\n+- Lowell Manners\n+- lucash.dev@gmail.com\n+- Luke Dashjr\n+- lutangar\n+- Marcin Jachymiak\n+- marcoagner\n+- MarcoFalke\n+- Mark Erhardt\n+- Mark Friedenbach\n+- Martin Ankerl\n+- Mason Simon\n+- Matt Corallo\n+- Matteo Sumberaz\n+- Max Kaplan\n+- MeshCollider\n+- Micha\u0142 Zabielski\n+- Mitchell Cash\n+- mruddy\n+- mryandao\n+- murrayn\n+- Nick Vercammen\n+- Nicolas Dorier\n+- Nikolay Mitev\n+- okayplanet\n+- Pierre Rochard\n+- Pieter Wuille\n+- practicalswift\n+- Qasim Javed\n+- Randolf Richardson\n+- Richard Kiss\n+- Roman Zeyde\n+- Russell Yanofsky\n+- Samuel B. Atwood\n+- Sebastian Kung\n+- Sjors Provoost\n+- Steve Lee\n+- steverusso\n+- Suhas Daftuar\n+- Tamas Blummer\n+- TheCharlatan\n+- Thomas Kerin\n+- Thomas Snider\n+- Tim Ruffing\n+- Varunram\n+- Vasil Dimov\n+- Will Ayd\n+- William Robinson\n+- winder\n+- Wladimir J. van der Laan\n+- wodry\n+\n+And to those that reported security issues:\n+\n+- awemany (for CVE-2018-17144, previously credited as \"anonymous reporter\")\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "dafb32512a75c471f6f3bc963aef6b07443c3fe4",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -6,11 +6,12 @@ Before every release candidate:\n * Update translations (ping wumpus on IRC) see [translation_process.md](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md#synchronising-translations).\n \n * Update manpages, see [gen-manpages.sh](https://github.com/bitcoin/bitcoin/blob/master/contrib/devtools/README.md#gen-manpagessh).\n+* Update release candidate version in `configure.ac` (`CLIENT_VERSION_RC`)\n \n Before every minor and major release:\n \n * Update [bips.md](bips.md) to account for changes since the last release.\n-* Update version in `configure.ac` (don't forget to set `CLIENT_VERSION_IS_RELEASE` to `true`)\n+* Update version in `configure.ac` (don't forget to set `CLIENT_VERSION_IS_RELEASE` to `true`) (don't forget to set `CLIENT_VERSION_RC` to `0`)\n * Write release notes (see below)\n * Update `src/chainparams.cpp` nMinimumChainWork with information from the getblockchaininfo rpc.\n * Update `src/chainparams.cpp` defaultAssumeValid with information from the getblockhash rpc.\n@@ -296,6 +297,8 @@ bitcoin.org (see below for bitcoin.org update instructions).\n \n   - bitcoincore.org blog post\n \n+  - bitcoincore.org RPC documentation update\n+\n   - Update title of #bitcoin on Freenode IRC\n \n   - Optionally twitter, reddit /r/Bitcoin, ... but this will usually sort out itself"
      },
      {
        "sha": "dc0b88618a9996b8e9c41574caea73ddf53d9013",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -93,7 +93,7 @@ API, to create and destroy 'ephemeral' hidden services programmatically.\n Bitcoin Core has been updated to make use of this.\n \n This means that if Tor is running (and proper authentication has been configured),\n-Bitcoin Core automatically creates a hidden service to listen on. This will positively \n+Bitcoin Core automatically creates a hidden service to listen on. This will positively\n affect the number of available .onion nodes.\n \n This new feature is enabled by default if Bitcoin Core is listening (`-listen`), and\n@@ -102,8 +102,9 @@ and, if not disabled, configured using the `-torcontrol` and `-torpassword` sett\n To show verbose debugging information, pass `-debug=tor`.\n \n Connecting to Tor's control socket API requires one of two authentication methods to be\n-configured. For cookie authentication the user running bitcoind must have write access\n-to the `CookieAuthFile` specified in Tor configuration. In some cases, this is\n+configured. It also requires the control socket to be enabled, e.g. put `ControlPort 9051`\n+in `torrc` config file. For cookie authentication the user running bitcoind must have read\n+access to the `CookieAuthFile` specified in Tor configuration. In some cases this is\n preconfigured and the creation of a hidden service is automatic. If permission problems\n are seen with `-debug=tor` they can be resolved by adding both the user running Tor and\n the user running bitcoind to the same group and setting permissions appropriately. On"
      },
      {
        "sha": "7ffc5623b63abcd3f205e308628305994fed7bcc",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 16,
        "deletions": 3,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -33,8 +33,10 @@ buffering or reassembly.\n \n ## Prerequisites\n \n-The ZeroMQ feature in Bitcoin Core requires ZeroMQ API version 4.x or\n-newer. Typically, it is packaged by distributions as something like\n+The ZeroMQ feature in Bitcoin Core requires the ZeroMQ API >= 4.0.0\n+[libzmq](https://github.com/zeromq/libzmq/releases).\n+For version information, see [dependencies.md](dependencies.md).\n+Typically, it is packaged by distributions as something like\n *libzmq3-dev*. The C++ wrapper for ZeroMQ is *not* needed.\n \n In order to run the example Python client scripts in contrib/ one must\n@@ -64,10 +66,21 @@ Currently, the following notifications are supported:\n The socket type is PUB and the address must be a valid ZeroMQ socket\n address. The same address can be used in more than one notification.\n \n+The option to set the PUB socket's outbound message high water mark\n+(SNDHWM) may be set individually for each notification:\n+\n+    -zmqpubhashtxhwm=n\n+    -zmqpubhashblockhwm=n\n+    -zmqpubrawblockhwm=n\n+    -zmqpubrawtxhwm=n\n+\n+The high water mark value must be an integer greater than or equal to 0.\n+\n For instance:\n \n     $ bitcoind -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n-               -zmqpubrawtx=ipc:///tmp/bitcoind.tx.raw\n+               -zmqpubrawtx=ipc:///tmp/bitcoind.tx.raw \\\n+               -zmqpubhashtxhwm=10000\n \n Each PUB notification has a topic and body, where the header\n corresponds to the notification type. For instance, for the"
      },
      {
        "sha": "6062d49c4064dcb3f8d1a7273267ad299d170e0c",
        "filename": "share/examples/bitcoin.conf",
        "status": "modified",
        "additions": 7,
        "deletions": 10,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/share/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/share/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/examples/bitcoin.conf?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -71,12 +71,9 @@\n # is .cookie and found in the `-datadir` being used for bitcoind. This option is typically used\n # when the server and client are run as the same user.\n #\n-# If not, you must set rpcuser and rpcpassword to secure the JSON-RPC api. The first\n-# method(DEPRECATED) is to set this pair for the server and client:\n-#rpcuser=Ulysseys\n-#rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n+# If not, you must set rpcuser and rpcpassword to secure the JSON-RPC API.\n #\n-# The second method `rpcauth` can be added to server startup argument. It is set at initialization time\n+# The config option `rpcauth` can be added to server startup argument. It is set at initialization time\n # using the output from the script in share/rpcauth/rpcauth.py after providing a username:\n #\n # ./share/rpcauth/rpcauth.py alice\n@@ -116,21 +113,21 @@\n # running on another host using this option:\n #rpcconnect=127.0.0.1\n \n+# Wallet options\n+\n # Create transactions that have enough fees so they are likely to begin confirmation within n blocks (default: 6).\n # This setting is over-ridden by the -paytxfee option.\n #txconfirmtarget=n\n \n+# Pay a transaction fee every time you send bitcoins.\n+#paytxfee=0.000x\n+\n # Miscellaneous options\n \n # Pre-generate this many public/private key pairs, so wallet backups will be valid for\n # both prior transactions and several dozen future transactions.\n #keypool=100\n \n-# Pay an optional transaction fee every time you send bitcoins.  Transactions with fees\n-# are more likely than free transactions to be included in generated blocks, so may\n-# be validated sooner.\n-#paytxfee=0.00\n-\n # Enable pruning to reduce storage requirements by deleting old blocks. \n # This mode is incompatible with -txindex and -rescan.\n # 0 = default (no pruning)."
      },
      {
        "sha": "abe605efd0a3278efd6da2017bc13b85ff3722df",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -97,7 +97,7 @@\n   <key>NSHighResolutionCapable</key>\n     <string>True</string>\n \n-  <key>LSAppNapIsDisabled</key>\n+  <key>NSRequiresAquaSystemAppearance</key>\n     <string>True</string>\n   \n   <key>LSApplicationCategoryType</key>"
      },
      {
        "sha": "6f627b867bca0546a9301332865eec3e9389abb0",
        "filename": "share/rpcauth/README.md",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/share/rpcauth/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/share/rpcauth/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcauth/README.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -3,12 +3,16 @@ RPC Tools\n \n ### [RPCAuth](/share/rpcauth) ###\n \n-Create login credentials for a JSON-RPC user.\n+```\n+usage: rpcauth.py [-h] username [password]\n \n-Usage:\n+Create login credentials for a JSON-RPC user\n \n-    ./rpcauth.py <username>\n+positional arguments:\n+  username    the username for authentication\n+  password    leave empty to generate a random password or specify \"-\" to\n+              prompt for password\n \n-in which case the script will generate a password. To specify a custom password do:\n-\n-    ./rpcauth.py <username> <password>\n+optional arguments:\n+  -h, --help  show this help message and exit\n+  ```"
      },
      {
        "sha": "b14c80171e8ff8c91016004ee355b739f6bd20fb",
        "filename": "share/rpcauth/rpcauth.py",
        "status": "modified",
        "additions": 23,
        "deletions": 24,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/share/rpcauth/rpcauth.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/share/rpcauth/rpcauth.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcauth/rpcauth.py?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -3,45 +3,44 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-import sys\n-import os\n-from random import SystemRandom\n-import base64\n-import hmac\n+from argparse import ArgumentParser\n+from base64 import urlsafe_b64encode\n+from binascii import hexlify\n+from getpass import getpass\n+from os import urandom\n \n-def generate_salt():\n-    # This uses os.urandom() underneath\n-    cryptogen = SystemRandom()\n+import hmac\n \n-    # Create 16 byte hex salt\n-    salt_sequence = [cryptogen.randrange(256) for _ in range(16)]\n-    return ''.join([format(r, 'x') for r in salt_sequence])\n+def generate_salt(size):\n+    \"\"\"Create size byte hex salt\"\"\"\n+    return hexlify(urandom(size)).decode()\n \n def generate_password():\n     \"\"\"Create 32 byte b64 password\"\"\"\n-    return base64.urlsafe_b64encode(os.urandom(32)).decode('utf-8')\n+    return urlsafe_b64encode(urandom(32)).decode('utf-8')\n \n def password_to_hmac(salt, password):\n     m = hmac.new(bytearray(salt, 'utf-8'), bytearray(password, 'utf-8'), 'SHA256')\n     return m.hexdigest()\n \n def main():\n-    if len(sys.argv) < 2:\n-        sys.stderr.write('Please include username (and an optional password, will generate one if not provided) as an argument.\\n')\n-        sys.exit(0)\n+    parser = ArgumentParser(description='Create login credentials for a JSON-RPC user')\n+    parser.add_argument('username', help='the username for authentication')\n+    parser.add_argument('password', help='leave empty to generate a random password or specify \"-\" to prompt for password', nargs='?')\n+    args = parser.parse_args()\n \n-    username = sys.argv[1]\n+    if not args.password:\n+        args.password = generate_password()\n+    elif args.password == '-':\n+        args.password = getpass()\n \n-    salt = generate_salt()\n-    if len(sys.argv) > 2:\n-        password = sys.argv[2]\n-    else:\n-        password = generate_password()\n-    password_hmac = password_to_hmac(salt, password)\n+    # Create 16 byte hex salt\n+    salt = generate_salt(16)\n+    password_hmac = password_to_hmac(salt, args.password)\n \n     print('String to be appended to bitcoin.conf:')\n-    print('rpcauth={0}:{1}${2}'.format(username, salt, password_hmac))\n-    print('Your password:\\n{0}'.format(password))\n+    print('rpcauth={0}:{1}${2}'.format(args.username, salt, password_hmac))\n+    print('Your password:\\n{0}'.format(args.password))\n \n if __name__ == '__main__':\n     main()"
      },
      {
        "sha": "6542370f97e77f0b523ff0e50e62c18a5061bd64",
        "filename": "share/setup.nsi.in",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/share/setup.nsi.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/share/setup.nsi.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi.in?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -80,8 +80,9 @@ Section -Main SEC0000\n     SetOutPath $INSTDIR\\daemon\n     File @abs_top_srcdir@/release/@BITCOIN_DAEMON_NAME@@EXEEXT@\n     File @abs_top_srcdir@/release/@BITCOIN_CLI_NAME@@EXEEXT@\n+    File @abs_top_srcdir@/release/@BITCOIN_TX_NAME@@EXEEXT@\n     SetOutPath $INSTDIR\\doc\n-    File /r @abs_top_srcdir@/doc\\*.*\n+    File /r /x Makefile* @abs_top_srcdir@/doc\\*.*\n     SetOutPath $INSTDIR\n     WriteRegStr HKCU \"${REGKEY}\\Components\" Main 1\n SectionEnd"
      },
      {
        "sha": "09daaebd236a8c82bd81fad4af02c14f3679e6ed",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 38,
        "deletions": 17,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -83,19 +83,24 @@ if BUILD_BITCOIND\n   bin_PROGRAMS += bitcoind\n endif\n \n-if BUILD_BITCOIN_UTILS\n-  bin_PROGRAMS += bitcoin-cli bitcoin-tx\n+if BUILD_BITCOIN_CLI\n+  bin_PROGRAMS += bitcoin-cli\n+endif\n+if BUILD_BITCOIN_TX\n+  bin_PROGRAMS += bitcoin-tx\n endif\n \n .PHONY: FORCE check-symbols check-security\n # bitcoin core #\n BITCOIN_CORE_H = \\\n   addrdb.h \\\n   addrman.h \\\n+  attributes.h \\\n   base58.h \\\n   bech32.h \\\n   bloom.h \\\n   blockencodings.h \\\n+  blockfilter.h \\\n   chain.h \\\n   chainparams.h \\\n   chainparamsbase.h \\\n@@ -121,6 +126,7 @@ BITCOIN_CORE_H = \\\n   index/txindex.h \\\n   indirectmap.h \\\n   init.h \\\n+  interfaces/chain.h \\\n   interfaces/handler.h \\\n   interfaces/node.h \\\n   interfaces/wallet.h \\\n@@ -179,13 +185,15 @@ BITCOIN_CORE_H = \\\n   txmempool.h \\\n   ui_interface.h \\\n   undo.h \\\n-  util.h \\\n-  utilmemory.h \\\n-  utilmoneystr.h \\\n-  utiltime.h \\\n+  util/bytevectorhash.h \\\n+  util/system.h \\\n+  util/memory.h \\\n+  util/moneystr.h \\\n+  util/time.h \\\n   validation.h \\\n   validationinterface.h \\\n   versionbits.h \\\n+  versionbitsinfo.h \\\n   walletinitinterface.h \\\n   wallet/coincontrol.h \\\n   wallet/crypter.h \\\n@@ -219,13 +227,17 @@ libbitcoin_server_a_SOURCES = \\\n   addrman.cpp \\\n   bloom.cpp \\\n   blockencodings.cpp \\\n+  blockfilter.cpp \\\n   chain.cpp \\\n   checkpoints.cpp \\\n   consensus/tx_verify.cpp \\\n   httprpc.cpp \\\n   httpserver.cpp \\\n   index/base.cpp \\\n   index/txindex.cpp \\\n+  interfaces/chain.cpp \\\n+  interfaces/handler.cpp \\\n+  interfaces/node.cpp \\\n   init.cpp \\\n   dbwrapper.cpp \\\n   merkleblock.cpp \\\n@@ -258,6 +270,10 @@ libbitcoin_server_a_SOURCES = \\\n   versionbits.cpp \\\n   $(BITCOIN_CORE_H)\n \n+if !ENABLE_WALLET\n+libbitcoin_server_a_SOURCES += dummywallet.cpp\n+endif\n+\n if ENABLE_ZMQ\n libbitcoin_zmq_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(ZMQ_CFLAGS)\n libbitcoin_zmq_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n@@ -309,7 +325,9 @@ crypto_libbitcoin_crypto_base_a_SOURCES = \\\n   crypto/sha256.cpp \\\n   crypto/sha256.h \\\n   crypto/sha512.cpp \\\n-  crypto/sha512.h\n+  crypto/sha512.h \\\n+  crypto/siphash.cpp \\\n+  crypto/siphash.h\n \n if USE_ASM\n crypto_libbitcoin_crypto_base_a_SOURCES += crypto/sha256_sse4.cpp\n@@ -365,8 +383,8 @@ libbitcoin_consensus_a_SOURCES = \\\n   tinyformat.h \\\n   uint256.cpp \\\n   uint256.h \\\n-  utilstrencodings.cpp \\\n-  utilstrencodings.h \\\n+  util/strencodings.cpp \\\n+  util/strencodings.h \\\n   version.h\n \n # common: shared between bitcoind, and bitcoin-qt and non-server tools\n@@ -392,6 +410,7 @@ libbitcoin_common_a_SOURCES = \\\n   script/ismine.cpp \\\n   script/sign.cpp \\\n   script/standard.cpp \\\n+  versionbitsinfo.cpp \\\n   warnings.cpp \\\n   $(BITCOIN_CORE_H)\n \n@@ -408,18 +427,17 @@ libbitcoin_util_a_SOURCES = \\\n   compat/glibcxx_sanity.cpp \\\n   compat/strnlen.cpp \\\n   fs.cpp \\\n-  interfaces/handler.cpp \\\n-  interfaces/node.cpp \\\n   logging.cpp \\\n   random.cpp \\\n   rpc/protocol.cpp \\\n   support/cleanse.cpp \\\n   sync.cpp \\\n   threadinterrupt.cpp \\\n-  util.cpp \\\n-  utilmoneystr.cpp \\\n-  utilstrencodings.cpp \\\n-  utiltime.cpp \\\n+  util/bytevectorhash.cpp \\\n+  util/system.cpp \\\n+  util/moneystr.cpp \\\n+  util/strencodings.cpp \\\n+  util/time.cpp \\\n   $(BITCOIN_CORE_H)\n \n if GLIBC_BACK_COMPAT\n@@ -450,6 +468,7 @@ endif\n bitcoind_LDADD = \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_WALLET) \\\n+  $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_UTIL) \\\n@@ -461,7 +480,7 @@ bitcoind_LDADD = \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n-bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n+bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n \n # bitcoin-cli binary #\n bitcoin_cli_SOURCES = bitcoin-cli.cpp\n@@ -479,7 +498,7 @@ bitcoin_cli_LDADD = \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CRYPTO)\n \n-bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n+bitcoin_cli_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n #\n \n # bitcoin-tx binary #\n@@ -576,9 +595,11 @@ if HARDEN\n \t$(AM_V_at) READELF=$(READELF) OBJDUMP=$(OBJDUMP) $(top_srcdir)/contrib/devtools/security-check.py < $(bin_PROGRAMS)\n endif\n \n+if ENABLE_BIP70\n %.pb.cc %.pb.h: %.proto\n \t@test -f $(PROTOC)\n \t$(AM_V_GEN) $(PROTOC) --cpp_out=$(@D) --proto_path=$(<D) $<\n+endif\n \n if EMBEDDED_LEVELDB\n include Makefile.leveldb.include"
      },
      {
        "sha": "5e787ca222a50d43ef4e16c7867b5a0ac0e5f1b8",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -18,10 +18,12 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/block_assemble.cpp \\\n   bench/checkblock.cpp \\\n   bench/checkqueue.cpp \\\n+  bench/duplicate_inputs.cpp \\\n   bench/examples.cpp \\\n   bench/rollingbloom.cpp \\\n   bench/crypto_hash.cpp \\\n   bench/ccoins_caching.cpp \\\n+  bench/gcs_filter.cpp \\\n   bench/merkle_root.cpp \\\n   bench/mempool_eviction.cpp \\\n   bench/verify_script.cpp \\\n@@ -55,7 +57,7 @@ if ENABLE_WALLET\n bench_bench_bitcoin_SOURCES += bench/coin_selection.cpp\n endif\n \n-bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n+bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_BENCH_FILES)"
      },
      {
        "sha": "445849e3d81eedcb4305a69857dfdea0afc0684c",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 25,
        "deletions": 7,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -122,7 +122,6 @@ QT_MOC_CPP = \\\n   qt/moc_bitcoinamountfield.cpp \\\n   qt/moc_bitcoingui.cpp \\\n   qt/moc_bitcoinunits.cpp \\\n-  qt/moc_callback.cpp \\\n   qt/moc_clientmodel.cpp \\\n   qt/moc_coincontroldialog.cpp \\\n   qt/moc_coincontroltreewidget.cpp \\\n@@ -163,12 +162,12 @@ QT_MOC_CPP = \\\n \n BITCOIN_MM = \\\n   qt/macdockiconhandler.mm \\\n-  qt/macnotificationhandler.mm\n+  qt/macnotificationhandler.mm \\\n+  qt/macos_appnap.mm\n \n QT_MOC = \\\n   qt/bitcoin.moc \\\n   qt/bitcoinamountfield.moc \\\n-  qt/callback.moc \\\n   qt/intro.moc \\\n   qt/overviewpage.moc \\\n   qt/rpcconsole.moc\n@@ -178,9 +177,15 @@ QT_QRC = qt/bitcoin.qrc\n QT_QRC_LOCALE_CPP = qt/qrc_bitcoin_locale.cpp\n QT_QRC_LOCALE = qt/bitcoin_locale.qrc\n \n+if ENABLE_BIP70\n PROTOBUF_CC = qt/paymentrequest.pb.cc\n PROTOBUF_H = qt/paymentrequest.pb.h\n PROTOBUF_PROTO = qt/paymentrequest.proto\n+else\n+PROTOBUF_CC =\n+PROTOBUF_H =\n+PROTOBUF_PROTO =\n+endif\n \n BITCOIN_QT_H = \\\n   qt/addressbookpage.h \\\n@@ -191,7 +196,6 @@ BITCOIN_QT_H = \\\n   qt/bitcoinamountfield.h \\\n   qt/bitcoingui.h \\\n   qt/bitcoinunits.h \\\n-  qt/callback.h \\\n   qt/clientmodel.h \\\n   qt/coincontroldialog.h \\\n   qt/coincontroltreewidget.h \\\n@@ -202,6 +206,7 @@ BITCOIN_QT_H = \\\n   qt/intro.h \\\n   qt/macdockiconhandler.h \\\n   qt/macnotificationhandler.h \\\n+  qt/macos_appnap.h \\\n   qt/modaloverlay.h \\\n   qt/networkstyle.h \\\n   qt/notificator.h \\\n@@ -330,7 +335,6 @@ BITCOIN_QT_WALLET_CPP = \\\n   qt/editaddressdialog.cpp \\\n   qt/openuridialog.cpp \\\n   qt/overviewpage.cpp \\\n-  qt/paymentrequestplus.cpp \\\n   qt/paymentserver.cpp \\\n   qt/receivecoinsdialog.cpp \\\n   qt/receiverequestdialog.cpp \\\n@@ -349,13 +353,19 @@ BITCOIN_QT_WALLET_CPP = \\\n   qt/walletmodeltransaction.cpp \\\n   qt/walletview.cpp\n \n+BITCOIN_QT_WALLET_BIP70_CPP = \\\n+  qt/paymentrequestplus.cpp\n+\n BITCOIN_QT_CPP = $(BITCOIN_QT_BASE_CPP)\n if TARGET_WINDOWS\n BITCOIN_QT_CPP += $(BITCOIN_QT_WINDOWS_CPP)\n endif\n if ENABLE_WALLET\n BITCOIN_QT_CPP += $(BITCOIN_QT_WALLET_CPP)\n-endif\n+if ENABLE_BIP70\n+BITCOIN_QT_CPP += $(BITCOIN_QT_WALLET_BIP70_CPP)\n+endif # ENABLE_BIP70\n+endif # ENABLE_WALLET\n \n RES_IMAGES =\n \n@@ -409,8 +419,16 @@ if ENABLE_ZMQ\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \\\n-  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n+  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n+if ENABLE_BIP70\n+qt_bitcoin_qt_LDADD += $(SSL_LIBS)\n+else\n+if TARGET_WINDOWS\n+qt_bitcoin_qt_LDADD += $(SSL_LIBS)\n+endif\n+endif\n+qt_bitcoin_qt_LDADD += $(CRYPTO_LIBS)\n qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n qt_bitcoin_qt_LIBTOOLFLAGS = $(AM_LIBTOOLFLAGS) --tag CXX\n "
      },
      {
        "sha": "db7873e8b75952efdf11cda81ca66c7f75e08824",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -13,9 +13,12 @@ TEST_QT_MOC_CPP = \\\n if ENABLE_WALLET\n TEST_QT_MOC_CPP += \\\n   qt/test/moc_addressbooktests.cpp \\\n-  qt/test/moc_paymentservertests.cpp \\\n   qt/test/moc_wallettests.cpp\n-endif\n+if ENABLE_BIP70\n+TEST_QT_MOC_CPP += \\\n+  qt/test/moc_paymentservertests.cpp\n+endif # ENABLE_BIP70\n+endif # ENABLE_WALLET\n \n TEST_QT_H = \\\n   qt/test/addressbooktests.h \\\n@@ -48,10 +51,13 @@ qt_test_test_bitcoin_qt_SOURCES = \\\n if ENABLE_WALLET\n qt_test_test_bitcoin_qt_SOURCES += \\\n   qt/test/addressbooktests.cpp \\\n-  qt/test/paymentservertests.cpp \\\n   qt/test/wallettests.cpp \\\n   wallet/test/wallet_test_fixture.cpp\n-endif\n+if ENABLE_BIP70\n+qt_test_test_bitcoin_qt_SOURCES += \\\n+  qt/test/paymentservertests.cpp\n+endif # ENABLE_BIP70\n+endif # ENABLE_WALLET\n \n nodist_qt_test_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n "
      },
      {
        "sha": "a31852c94f69fd6b36fa30d3768e799cd1c6e0df",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 38,
        "deletions": 5,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -8,7 +8,9 @@ TEST_SRCDIR = test\n TEST_BINARY=test/test_bitcoin$(EXEEXT)\n \n JSON_TEST_FILES = \\\n+  test/data/script_tests.json \\\n   test/data/base58_encode_decode.json \\\n+  test/data/blockfilters.json \\\n   test/data/key_io_valid.json \\\n   test/data/key_io_invalid.json \\\n   test/data/script_tests.json \\\n@@ -39,6 +41,7 @@ BITCOIN_TESTS =\\\n   test/bip32_tests.cpp \\\n   test/blockchain_tests.cpp \\\n   test/blockencodings_tests.cpp \\\n+  test/blockfilter_tests.cpp \\\n   test/bloom_tests.cpp \\\n   test/bswap_tests.cpp \\\n   test/checkqueue_tests.cpp \\\n@@ -48,6 +51,7 @@ BITCOIN_TESTS =\\\n   test/cuckoocache_tests.cpp \\\n   test/denialofservice_tests.cpp \\\n   test/descriptor_tests.cpp \\\n+  test/fs_tests.cpp \\\n   test/getarg_tests.cpp \\\n   test/hash_tests.cpp \\\n   test/key_io_tests.cpp \\\n@@ -81,6 +85,7 @@ BITCOIN_TESTS =\\\n   test/sigopcount_tests.cpp \\\n   test/skiplist_tests.cpp \\\n   test/streams_tests.cpp \\\n+  test/sync_tests.cpp \\\n   test/timedata_tests.cpp \\\n   test/torcontrol_tests.cpp \\\n   test/transaction_tests.cpp \\\n@@ -92,17 +97,28 @@ BITCOIN_TESTS =\\\n   test/validation_block_tests.cpp \\\n   test/versionbits_tests.cpp\n \n+if ENABLE_PROPERTY_TESTS\n+BITCOIN_TESTS += \\\n+  test/key_properties.cpp\n+\n+BITCOIN_TEST_SUITE += \\\n+  test/gen/crypto_gen.cpp \\\n+  test/gen/crypto_gen.h\n+endif\n+\n if ENABLE_WALLET\n BITCOIN_TESTS += \\\n-  wallet/test/accounting_tests.cpp \\\n   wallet/test/psbt_wallet_tests.cpp \\\n   wallet/test/wallet_tests.cpp \\\n   wallet/test/wallet_crypto_tests.cpp \\\n-  wallet/test/coinselector_tests.cpp\n+  wallet/test/coinselector_tests.cpp \\\n+  wallet/test/init_tests.cpp\n \n BITCOIN_TEST_SUITE += \\\n   wallet/test/wallet_test_fixture.cpp \\\n-  wallet/test/wallet_test_fixture.h\n+  wallet/test/wallet_test_fixture.h \\\n+  wallet/test/init_test_fixture.cpp \\\n+  wallet/test/init_test_fixture.h\n endif\n \n test_test_bitcoin_SOURCES = $(BITCOIN_TEST_SUITE) $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n@@ -116,7 +132,7 @@ test_test_bitcoin_LDADD += $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_C\n   $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n-test_test_bitcoin_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n+test_test_bitcoin_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(RAPIDCHECK_LIBS)\n test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n \n if ENABLE_ZMQ\n@@ -149,11 +165,19 @@ nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n \n $(BITCOIN_TESTS): $(GENERATED_TEST_FILES)\n \n-CLEAN_BITCOIN_TEST = test/*.gcda test/*.gcno $(GENERATED_TEST_FILES)\n+CLEAN_BITCOIN_TEST = test/*.gcda test/*.gcno $(GENERATED_TEST_FILES) $(BITCOIN_TESTS:=.log)\n \n CLEANFILES += $(CLEAN_BITCOIN_TEST)\n \n+if TARGET_WINDOWS\n bitcoin_test: $(TEST_BINARY)\n+else\n+if ENABLE_BENCH\n+bitcoin_test: $(TEST_BINARY) $(BENCH_BINARY)\n+else\n+bitcoin_test: $(TEST_BINARY)\n+endif\n+endif\n \n bitcoin_test_check: $(TEST_BINARY) FORCE\n \t$(MAKE) check-TESTS TESTS=$^\n@@ -162,10 +186,19 @@ bitcoin_test_clean : FORCE\n \trm -f $(CLEAN_BITCOIN_TEST) $(test_test_bitcoin_OBJECTS) $(TEST_BINARY)\n \n check-local: $(BITCOIN_TESTS:.cpp=.cpp.test)\n+if BUILD_BITCOIN_TX\n \t@echo \"Running test/util/bitcoin-util-test.py...\"\n \t$(PYTHON) $(top_builddir)/test/util/bitcoin-util-test.py\n+endif\n \t@echo \"Running test/util/rpcauth-test.py...\"\n \t$(PYTHON) $(top_builddir)/test/util/rpcauth-test.py\n+if TARGET_WINDOWS\n+else\n+if ENABLE_BENCH\n+\t@echo \"Running bench/bench_bitcoin -evals=1 -scaling=0...\"\n+\t$(BENCH_BINARY) -evals=1 -scaling=0 > /dev/null\n+endif\n+endif\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C secp256k1 check\n if EMBEDDED_UNIVALUE\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue check"
      },
      {
        "sha": "1590bce074dde76d0e399760494f1507adfd5217",
        "filename": "src/addrdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/addrdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/addrdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -12,7 +12,7 @@\n #include <random.h>\n #include <streams.h>\n #include <tinyformat.h>\n-#include <util.h>\n+#include <util/system.h>\n \n namespace {\n "
      },
      {
        "sha": "b97feb6f086fe98db2797e15724b9b275bf12f41",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 28,
        "deletions": 27,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -11,7 +11,7 @@\n #include <random.h>\n #include <sync.h>\n #include <timedata.h>\n-#include <util.h>\n+#include <util/system.h>\n \n #include <map>\n #include <set>\n@@ -187,36 +187,37 @@ class CAddrInfo : public CAddress\n  */\n class CAddrMan\n {\n-private:\n+protected:\n     //! critical section to protect the inner data structures\n     mutable CCriticalSection cs;\n \n+private:\n     //! last used nId\n-    int nIdCount;\n+    int nIdCount GUARDED_BY(cs);\n \n     //! table with information about all nIds\n-    std::map<int, CAddrInfo> mapInfo;\n+    std::map<int, CAddrInfo> mapInfo GUARDED_BY(cs);\n \n     //! find an nId based on its network address\n-    std::map<CNetAddr, int> mapAddr;\n+    std::map<CNetAddr, int> mapAddr GUARDED_BY(cs);\n \n     //! randomly-ordered vector of all nIds\n-    std::vector<int> vRandom;\n+    std::vector<int> vRandom GUARDED_BY(cs);\n \n     // number of \"tried\" entries\n-    int nTried;\n+    int nTried GUARDED_BY(cs);\n \n     //! list of \"tried\" buckets\n-    int vvTried[ADDRMAN_TRIED_BUCKET_COUNT][ADDRMAN_BUCKET_SIZE];\n+    int vvTried[ADDRMAN_TRIED_BUCKET_COUNT][ADDRMAN_BUCKET_SIZE] GUARDED_BY(cs);\n \n     //! number of (unique) \"new\" entries\n-    int nNew;\n+    int nNew GUARDED_BY(cs);\n \n     //! list of \"new\" buckets\n-    int vvNew[ADDRMAN_NEW_BUCKET_COUNT][ADDRMAN_BUCKET_SIZE];\n+    int vvNew[ADDRMAN_NEW_BUCKET_COUNT][ADDRMAN_BUCKET_SIZE] GUARDED_BY(cs);\n \n     //! last time Good was called (memory only)\n-    int64_t nLastGood;\n+    int64_t nLastGood GUARDED_BY(cs);\n \n     //! Holds addrs inserted into tried table that collide with existing entries. Test-before-evict discipline used to resolve these collisions.\n     std::set<int> m_tried_collisions;\n@@ -229,58 +230,58 @@ class CAddrMan\n     FastRandomContext insecure_rand;\n \n     //! Find an entry.\n-    CAddrInfo* Find(const CNetAddr& addr, int *pnId = nullptr);\n+    CAddrInfo* Find(const CNetAddr& addr, int *pnId = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     //! find an entry, creating it if necessary.\n     //! nTime and nServices of the found node are updated, if necessary.\n-    CAddrInfo* Create(const CAddress &addr, const CNetAddr &addrSource, int *pnId = nullptr);\n+    CAddrInfo* Create(const CAddress &addr, const CNetAddr &addrSource, int *pnId = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     //! Swap two elements in vRandom.\n-    void SwapRandom(unsigned int nRandomPos1, unsigned int nRandomPos2);\n+    void SwapRandom(unsigned int nRandomPos1, unsigned int nRandomPos2) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     //! Move an entry from the \"new\" table(s) to the \"tried\" table\n-    void MakeTried(CAddrInfo& info, int nId);\n+    void MakeTried(CAddrInfo& info, int nId) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     //! Delete an entry. It must not be in tried, and have refcount 0.\n-    void Delete(int nId);\n+    void Delete(int nId) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     //! Clear a position in a \"new\" table. This is the only place where entries are actually deleted.\n-    void ClearNew(int nUBucket, int nUBucketPos);\n+    void ClearNew(int nUBucket, int nUBucketPos) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     //! Mark an entry \"good\", possibly moving it from \"new\" to \"tried\".\n-    void Good_(const CService &addr, bool test_before_evict, int64_t time);\n+    void Good_(const CService &addr, bool test_before_evict, int64_t time) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     //! Add an entry to the \"new\" table.\n-    bool Add_(const CAddress &addr, const CNetAddr& source, int64_t nTimePenalty);\n+    bool Add_(const CAddress &addr, const CNetAddr& source, int64_t nTimePenalty) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     //! Mark an entry as attempted to connect.\n-    void Attempt_(const CService &addr, bool fCountFailure, int64_t nTime);\n+    void Attempt_(const CService &addr, bool fCountFailure, int64_t nTime) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     //! Select an address to connect to, if newOnly is set to true, only the new table is selected from.\n-    CAddrInfo Select_(bool newOnly);\n+    CAddrInfo Select_(bool newOnly) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     //! See if any to-be-evicted tried table entries have been tested and if so resolve the collisions.\n-    void ResolveCollisions_();\n+    void ResolveCollisions_() EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     //! Return a random to-be-evicted tried table address.\n-    CAddrInfo SelectTriedCollision_();\n+    CAddrInfo SelectTriedCollision_() EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     //! Wraps GetRandInt to allow tests to override RandomInt and make it determinismistic.\n     virtual int RandomInt(int nMax);\n \n #ifdef DEBUG_ADDRMAN\n     //! Perform consistency check. Returns an error code or zero.\n-    int Check_();\n+    int Check_() EXCLUSIVE_LOCKS_REQUIRED(cs);\n #endif\n \n     //! Select several addresses at once.\n-    void GetAddr_(std::vector<CAddress> &vAddr);\n+    void GetAddr_(std::vector<CAddress> &vAddr) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     //! Mark an entry as currently-connected-to.\n-    void Connected_(const CService &addr, int64_t nTime);\n+    void Connected_(const CService &addr, int64_t nTime) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     //! Update an entry's service bits.\n-    void SetServices_(const CService &addr, ServiceFlags nServices);\n+    void SetServices_(const CService &addr, ServiceFlags nServices) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n public:\n     /**"
      },
      {
        "sha": "449fd1b15f6e0e7bb8e7f1b5f48394d291df4ac6",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -12,7 +12,6 @@\n typedef int64_t CAmount;\n \n static const CAmount COIN = 100000000;\n-static const CAmount CENT = 1000000;\n \n /** No amount larger than this (in satoshi) is valid.\n  *"
      },
      {
        "sha": "aa66d131021c875a9092650bfc1c4f8a99a7a15f",
        "filename": "src/arith_uint256.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/arith_uint256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/arith_uint256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -6,7 +6,7 @@\n #include <arith_uint256.h>\n \n #include <uint256.h>\n-#include <utilstrencodings.h>\n+#include <util/strencodings.h>\n #include <crypto/common.h>\n \n #include <stdio.h>\n@@ -176,7 +176,7 @@ unsigned int base_uint<BITS>::bits() const\n     for (int pos = WIDTH - 1; pos >= 0; pos--) {\n         if (pn[pos]) {\n             for (int nbits = 31; nbits > 0; nbits--) {\n-                if (pn[pos] & 1 << nbits)\n+                if (pn[pos] & 1U << nbits)\n                     return 32 * pos + nbits + 1;\n             }\n             return 32 * pos + 1;"
      },
      {
        "sha": "45099bd8b88025cb1e77bc6648f086660bf025dc",
        "filename": "src/attributes.h",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/attributes.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/attributes.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/attributes.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,22 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ATTRIBUTES_H\n+#define BITCOIN_ATTRIBUTES_H\n+\n+#if defined(__has_cpp_attribute)\n+#  if __has_cpp_attribute(nodiscard)\n+#    define NODISCARD [[nodiscard]]\n+#  endif\n+#endif\n+#ifndef NODISCARD\n+#  if defined(_MSC_VER) && _MSC_VER >= 1700\n+#    define NODISCARD _Check_return_\n+#  else\n+#    define NODISCARD __attribute__((warn_unused_result))\n+#  endif\n+#endif\n+\n+#endif // BITCOIN_ATTRIBUTES_H"
      },
      {
        "sha": "e3d28533999b4928b6e706fb6131222b4deb553e",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -6,6 +6,7 @@\n \n #include <hash.h>\n #include <uint256.h>\n+#include <util/strencodings.h>\n \n #include <assert.h>\n #include <string.h>\n@@ -34,7 +35,7 @@ static const int8_t mapBase58[256] = {\n bool DecodeBase58(const char* psz, std::vector<unsigned char>& vch)\n {\n     // Skip leading spaces.\n-    while (*psz && isspace(*psz))\n+    while (*psz && IsSpace(*psz))\n         psz++;\n     // Skip and count leading '1's.\n     int zeroes = 0;\n@@ -48,7 +49,7 @@ bool DecodeBase58(const char* psz, std::vector<unsigned char>& vch)\n     std::vector<unsigned char> b256(size);\n     // Process the characters.\n     static_assert(sizeof(mapBase58)/sizeof(mapBase58[0]) == 256, \"mapBase58.size() should be 256\"); // guarantee not out of range\n-    while (*psz && !isspace(*psz)) {\n+    while (*psz && !IsSpace(*psz)) {\n         // Decode base58 character\n         int carry = mapBase58[(uint8_t)*psz];\n         if (carry == -1)  // Invalid b58 character\n@@ -64,7 +65,7 @@ bool DecodeBase58(const char* psz, std::vector<unsigned char>& vch)\n         psz++;\n     }\n     // Skip trailing spaces.\n-    while (isspace(*psz))\n+    while (IsSpace(*psz))\n         psz++;\n     if (*psz != 0)\n         return false;"
      },
      {
        "sha": "d6e0299a1e9a0efa3b461f2f4412f2ce106695b3",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -14,6 +14,8 @@\n #ifndef BITCOIN_BASE58_H\n #define BITCOIN_BASE58_H\n \n+#include <attributes.h>\n+\n #include <string>\n #include <vector>\n \n@@ -33,13 +35,13 @@ std::string EncodeBase58(const std::vector<unsigned char>& vch);\n  * return true if decoding is successful.\n  * psz cannot be nullptr.\n  */\n-bool DecodeBase58(const char* psz, std::vector<unsigned char>& vchRet);\n+NODISCARD bool DecodeBase58(const char* psz, std::vector<unsigned char>& vchRet);\n \n /**\n  * Decode a base58-encoded string (str) into a byte vector (vchRet).\n  * return true if decoding is successful.\n  */\n-bool DecodeBase58(const std::string& str, std::vector<unsigned char>& vchRet);\n+NODISCARD bool DecodeBase58(const std::string& str, std::vector<unsigned char>& vchRet);\n \n /**\n  * Encode a byte vector into a base58-encoded string, including checksum\n@@ -50,12 +52,12 @@ std::string EncodeBase58Check(const std::vector<unsigned char>& vchIn);\n  * Decode a base58-encoded string (psz) that includes a checksum into a byte\n  * vector (vchRet), return true if decoding is successful\n  */\n-bool DecodeBase58Check(const char* psz, std::vector<unsigned char>& vchRet);\n+NODISCARD bool DecodeBase58Check(const char* psz, std::vector<unsigned char>& vchRet);\n \n /**\n  * Decode a base58-encoded string (str) that includes a checksum into a byte\n  * vector (vchRet), return true if decoding is successful\n  */\n-bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRet);\n+NODISCARD bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRet);\n \n #endif // BITCOIN_BASE58_H"
      },
      {
        "sha": "d6b29391a98eef1983f5a12c74882688b27ed356",
        "filename": "src/bech32.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bech32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bech32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bech32.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -62,7 +62,7 @@ uint32_t PolyMod(const data& v)\n     // v, it corresponds to x^2 + v0*x + v1 mod g(x). As 1 mod g(x) = 1, that is the starting value\n     // for `c`.\n     uint32_t c = 1;\n-    for (auto v_i : v) {\n+    for (const auto v_i : v) {\n         // We want to update `c` to correspond to a polynomial with one extra term. If the initial\n         // value of `c` consists of the coefficients of c(x) = f(x) mod g(x), we modify it to\n         // correspond to c'(x) = (f(x) * x + v_i) mod g(x), where v_i is the next input to\n@@ -149,7 +149,7 @@ std::string Encode(const std::string& hrp, const data& values) {\n     data combined = Cat(values, checksum);\n     std::string ret = hrp + '1';\n     ret.reserve(ret.size() + combined.size());\n-    for (auto c : combined) {\n+    for (const auto c : combined) {\n         ret += CHARSET[c];\n     }\n     return ret;"
      },
      {
        "sha": "e7702ec4619d6983e3b30ccf3bc903488e1d3aca",
        "filename": "src/bench/base58.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/base58.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -49,7 +49,7 @@ static void Base58Decode(benchmark::State& state)\n     const char* addr = \"17VZNX1SN5NtKa8UQFxwQbFeFc3iqRYhem\";\n     std::vector<unsigned char> vch;\n     while (state.KeepRunning()) {\n-        DecodeBase58(addr, vch);\n+        (void) DecodeBase58(addr, vch);\n     }\n }\n "
      },
      {
        "sha": "3c4b453a23aeffb863a65817ad3c5ca9486ea7bb",
        "filename": "src/bench/bech32.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/bech32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/bech32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bech32.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -6,7 +6,7 @@\n \n #include <validation.h>\n #include <bech32.h>\n-#include <utilstrencodings.h>\n+#include <util/strencodings.h>\n \n #include <vector>\n #include <string>"
      },
      {
        "sha": "32faba86b47aaf6489e811116241249a3fe8a78b",
        "filename": "src/bench/bench_bitcoin.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/bench_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/bench_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench_bitcoin.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -7,12 +7,14 @@\n #include <crypto/sha256.h>\n #include <key.h>\n #include <random.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n #include <validation.h>\n \n #include <memory>\n \n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n static const int64_t DEFAULT_BENCH_EVALUATIONS = 5;\n static const char* DEFAULT_BENCH_FILTER = \".*\";\n static const char* DEFAULT_BENCH_SCALING = \"1.0\";\n@@ -80,7 +82,7 @@ int main(int argc, char** argv)\n         return EXIT_FAILURE;\n     }\n \n-    std::unique_ptr<benchmark::Printer> printer(new benchmark::ConsolePrinter());\n+    std::unique_ptr<benchmark::Printer> printer = MakeUnique<benchmark::ConsolePrinter>();\n     std::string printer_arg = gArgs.GetArg(\"-printer\", DEFAULT_BENCH_PRINTER);\n     if (\"plot\" == printer_arg) {\n         printer.reset(new benchmark::PlotlyPrinter("
      },
      {
        "sha": "2def0b23e2e83460d989861681bd834da26eb24b",
        "filename": "src/bench/block_assemble.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/block_assemble.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/block_assemble.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/block_assemble.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -7,13 +7,14 @@\n #include <coins.h>\n #include <consensus/merkle.h>\n #include <consensus/validation.h>\n+#include <crypto/sha256.h>\n #include <miner.h>\n #include <policy/policy.h>\n #include <pow.h>\n #include <scheduler.h>\n #include <txdb.h>\n #include <txmempool.h>\n-#include <utiltime.h>\n+#include <util/time.h>\n #include <validation.h>\n #include <validationinterface.h>\n "
      },
      {
        "sha": "b8d82c0a89d92e7b5765e8d1dd9c7e23a4cfe204",
        "filename": "src/bench/ccoins_caching.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/ccoins_caching.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/ccoins_caching.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/ccoins_caching.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -12,8 +12,8 @@\n // FIXME: Dedup with SetupDummyInputs in test/transaction_tests.cpp.\n //\n // Helper: create two dummy transactions, each with\n-// two outputs.  The first has 11 and 50 CENT outputs\n-// paid to a TX_PUBKEY, the second 21 and 22 CENT outputs\n+// two outputs.  The first has 11 and 50 COIN outputs\n+// paid to a TX_PUBKEY, the second 21 and 22 COIN outputs\n // paid to a TX_PUBKEYHASH.\n //\n static std::vector<CMutableTransaction>\n@@ -31,16 +31,16 @@ SetupDummyInputs(CBasicKeyStore& keystoreRet, CCoinsViewCache& coinsRet)\n \n     // Create some dummy input transactions\n     dummyTransactions[0].vout.resize(2);\n-    dummyTransactions[0].vout[0].nValue = 11 * CENT;\n+    dummyTransactions[0].vout[0].nValue = 11 * COIN;\n     dummyTransactions[0].vout[0].scriptPubKey << ToByteVector(key[0].GetPubKey()) << OP_CHECKSIG;\n-    dummyTransactions[0].vout[1].nValue = 50 * CENT;\n+    dummyTransactions[0].vout[1].nValue = 50 * COIN;\n     dummyTransactions[0].vout[1].scriptPubKey << ToByteVector(key[1].GetPubKey()) << OP_CHECKSIG;\n     AddCoins(coinsRet, dummyTransactions[0], 0);\n \n     dummyTransactions[1].vout.resize(2);\n-    dummyTransactions[1].vout[0].nValue = 21 * CENT;\n+    dummyTransactions[1].vout[0].nValue = 21 * COIN;\n     dummyTransactions[1].vout[0].scriptPubKey = GetScriptForDestination(key[2].GetPubKey().GetID());\n-    dummyTransactions[1].vout[1].nValue = 22 * CENT;\n+    dummyTransactions[1].vout[1].nValue = 22 * COIN;\n     dummyTransactions[1].vout[1].scriptPubKey = GetScriptForDestination(key[3].GetPubKey().GetID());\n     AddCoins(coinsRet, dummyTransactions[1], 0);\n \n@@ -72,15 +72,15 @@ static void CCoinsCaching(benchmark::State& state)\n     t1.vin[2].prevout.n = 1;\n     t1.vin[2].scriptSig << std::vector<unsigned char>(65, 0) << std::vector<unsigned char>(33, 4);\n     t1.vout.resize(2);\n-    t1.vout[0].nValue = 90 * CENT;\n+    t1.vout[0].nValue = 90 * COIN;\n     t1.vout[0].scriptPubKey << OP_1;\n \n     // Benchmark.\n     while (state.KeepRunning()) {\n         bool success = AreInputsStandard(t1, coins);\n         assert(success);\n         CAmount value = coins.GetValueIn(t1);\n-        assert(value == (50 + 21 + 22) * CENT);\n+        assert(value == (50 + 21 + 22) * COIN);\n     }\n }\n "
      },
      {
        "sha": "e325333c01e26b24b91d9dbf3ea2767792f85d8f",
        "filename": "src/bench/checkblock.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/checkblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/checkblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkblock.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -20,7 +20,7 @@ namespace block_bench {\n static void DeserializeBlockTest(benchmark::State& state)\n {\n     CDataStream stream((const char*)block_bench::block413567,\n-            (const char*)&block_bench::block413567[sizeof(block_bench::block413567)],\n+            (const char*)block_bench::block413567 + sizeof(block_bench::block413567),\n             SER_NETWORK, PROTOCOL_VERSION);\n     char a = '\\0';\n     stream.write(&a, 1); // Prevent compaction\n@@ -36,7 +36,7 @@ static void DeserializeBlockTest(benchmark::State& state)\n static void DeserializeAndCheckBlockTest(benchmark::State& state)\n {\n     CDataStream stream((const char*)block_bench::block413567,\n-            (const char*)&block_bench::block413567[sizeof(block_bench::block413567)],\n+            (const char*)block_bench::block413567 + sizeof(block_bench::block413567),\n             SER_NETWORK, PROTOCOL_VERSION);\n     char a = '\\0';\n     stream.write(&a, 1); // Prevent compaction"
      },
      {
        "sha": "6ab542067aac3d6bc24eccf72acad1a5e15a6b38",
        "filename": "src/bench/checkqueue.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/checkqueue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/checkqueue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkqueue.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -3,7 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <bench/bench.h>\n-#include <util.h>\n+#include <util/system.h>\n #include <validation.h>\n #include <checkqueue.h>\n #include <prevector.h>"
      },
      {
        "sha": "8552ed34fd83d20cd436c859f3c78c5e61996f7b",
        "filename": "src/bench/coin_selection.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/coin_selection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/coin_selection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/coin_selection.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -3,6 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <bench/bench.h>\n+#include <interfaces/chain.h>\n #include <wallet/wallet.h>\n #include <wallet/coinselection.h>\n \n@@ -33,7 +34,8 @@ static void addCoin(const CAmount& nValue, const CWallet& wallet, std::vector<Ou\n // (https://github.com/bitcoin/bitcoin/issues/7883#issuecomment-224807484)\n static void CoinSelection(benchmark::State& state)\n {\n-    const CWallet wallet(\"dummy\", WalletDatabase::CreateDummy());\n+    auto chain = interfaces::MakeChain();\n+    const CWallet wallet(*chain, WalletLocation(), WalletDatabase::CreateDummy());\n     LOCK(wallet.cs_wallet);\n \n     // Add coins.\n@@ -57,7 +59,8 @@ static void CoinSelection(benchmark::State& state)\n }\n \n typedef std::set<CInputCoin> CoinSet;\n-static const CWallet testWallet(\"dummy\", WalletDatabase::CreateDummy());\n+static auto testChain = interfaces::MakeChain();\n+static const CWallet testWallet(*testChain, WalletLocation(), WalletDatabase::CreateDummy());\n std::vector<std::unique_ptr<CWalletTx>> wtxn;\n \n // Copied from src/wallet/test/coinselector_tests.cpp\n@@ -66,7 +69,7 @@ static void add_coin(const CAmount& nValue, int nInput, std::vector<OutputGroup>\n     CMutableTransaction tx;\n     tx.vout.resize(nInput + 1);\n     tx.vout[nInput].nValue = nValue;\n-    std::unique_ptr<CWalletTx> wtx(new CWalletTx(&testWallet, MakeTransactionRef(std::move(tx))));\n+    std::unique_ptr<CWalletTx> wtx = MakeUnique<CWalletTx>(&testWallet, MakeTransactionRef(std::move(tx)));\n     set.emplace_back(COutput(wtx.get(), nInput, 0, true, true, true).GetInputCoin(), 0, true, 0, 0);\n     wtxn.emplace_back(std::move(wtx));\n }"
      },
      {
        "sha": "dc0b05442027921e1968ecc1775c24520f623172",
        "filename": "src/bench/crypto_hash.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/crypto_hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/crypto_hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/crypto_hash.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -9,11 +9,12 @@\n #include <hash.h>\n #include <random.h>\n #include <uint256.h>\n-#include <utiltime.h>\n+#include <util/time.h>\n #include <crypto/ripemd160.h>\n #include <crypto/sha1.h>\n #include <crypto/sha256.h>\n #include <crypto/sha512.h>\n+#include <crypto/siphash.h>\n \n /* Number of bytes to hash per iteration */\n static const uint64_t BUFFER_SIZE = 1000*1000;\n@@ -80,18 +81,16 @@ static void SipHash_32b(benchmark::State& state)\n static void FastRandom_32bit(benchmark::State& state)\n {\n     FastRandomContext rng(true);\n-    uint32_t x = 0;\n     while (state.KeepRunning()) {\n-        x += rng.rand32();\n+        rng.rand32();\n     }\n }\n \n static void FastRandom_1bit(benchmark::State& state)\n {\n     FastRandomContext rng(true);\n-    uint32_t x = 0;\n     while (state.KeepRunning()) {\n-        x += rng.randbool();\n+        rng.randbool();\n     }\n }\n "
      },
      {
        "sha": "e0854e2c62cfab029d557770fc07f661ce2902dd",
        "filename": "src/bench/duplicate_inputs.cpp",
        "status": "added",
        "additions": 100,
        "deletions": 0,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/duplicate_inputs.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/duplicate_inputs.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/duplicate_inputs.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,100 @@\n+// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <consensus/merkle.h>\n+#include <consensus/validation.h>\n+#include <miner.h>\n+#include <policy/policy.h>\n+#include <pow.h>\n+#include <scheduler.h>\n+#include <txdb.h>\n+#include <txmempool.h>\n+#include <util/time.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <boost/thread.hpp>\n+\n+#include <list>\n+#include <vector>\n+\n+\n+static void DuplicateInputs(benchmark::State& state)\n+{\n+    const CScript SCRIPT_PUB{CScript(OP_TRUE)};\n+\n+    // Switch to regtest so we can mine faster\n+    // Also segwit is active, so we can include witness transactions\n+    SelectParams(CBaseChainParams::REGTEST);\n+\n+    InitScriptExecutionCache();\n+\n+    boost::thread_group thread_group;\n+    CScheduler scheduler;\n+    const CChainParams& chainparams = Params();\n+    {\n+        ::pblocktree.reset(new CBlockTreeDB(1 << 20, true));\n+        ::pcoinsdbview.reset(new CCoinsViewDB(1 << 23, true));\n+        ::pcoinsTip.reset(new CCoinsViewCache(pcoinsdbview.get()));\n+\n+        thread_group.create_thread(std::bind(&CScheduler::serviceQueue, &scheduler));\n+        GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n+        LoadGenesisBlock(chainparams);\n+        CValidationState cvstate;\n+        ActivateBestChain(cvstate, chainparams);\n+        assert(::chainActive.Tip() != nullptr);\n+        const bool witness_enabled{IsWitnessEnabled(::chainActive.Tip(), chainparams.GetConsensus())};\n+        assert(witness_enabled);\n+    }\n+\n+    CBlock block{};\n+    CMutableTransaction coinbaseTx{};\n+    CMutableTransaction naughtyTx{};\n+\n+    CBlockIndex* pindexPrev = ::chainActive.Tip();\n+    assert(pindexPrev != nullptr);\n+    block.nBits = GetNextWorkRequired(pindexPrev, &block, chainparams.GetConsensus());\n+    block.nNonce = 0;\n+    auto nHeight = pindexPrev->nHeight + 1;\n+\n+    // Make a coinbase TX\n+    coinbaseTx.vin.resize(1);\n+    coinbaseTx.vin[0].prevout.SetNull();\n+    coinbaseTx.vout.resize(1);\n+    coinbaseTx.vout[0].scriptPubKey = SCRIPT_PUB;\n+    coinbaseTx.vout[0].nValue = GetBlockSubsidy(nHeight, chainparams.GetConsensus());\n+    coinbaseTx.vin[0].scriptSig = CScript() << nHeight << OP_0;\n+\n+\n+    naughtyTx.vout.resize(1);\n+    naughtyTx.vout[0].nValue = 0;\n+    naughtyTx.vout[0].scriptPubKey = SCRIPT_PUB;\n+\n+    uint64_t n_inputs = (((MAX_BLOCK_SERIALIZED_SIZE / WITNESS_SCALE_FACTOR) - (CTransaction(coinbaseTx).GetTotalSize() + CTransaction(naughtyTx).GetTotalSize())) / 41) - 100;\n+    for (uint64_t x = 0; x < (n_inputs - 1); ++x) {\n+        naughtyTx.vin.emplace_back(GetRandHash(), 0, CScript(), 0);\n+    }\n+    naughtyTx.vin.emplace_back(naughtyTx.vin.back());\n+\n+    block.vtx.push_back(MakeTransactionRef(std::move(coinbaseTx)));\n+    block.vtx.push_back(MakeTransactionRef(std::move(naughtyTx)));\n+\n+    block.hashMerkleRoot = BlockMerkleRoot(block);\n+\n+    while (state.KeepRunning()) {\n+        CValidationState cvstate{};\n+        assert(!CheckBlock(block, cvstate, chainparams.GetConsensus(), false, false));\n+        assert(cvstate.GetRejectReason() == \"bad-txns-inputs-duplicate\");\n+    }\n+\n+    thread_group.interrupt_all();\n+    thread_group.join_all();\n+    GetMainSignals().FlushBackgroundCallbacks();\n+    GetMainSignals().UnregisterBackgroundSignalScheduler();\n+}\n+\n+BENCHMARK(DuplicateInputs, 10);"
      },
      {
        "sha": "e7ddd5a938ddbd603c8ba623e5be0722b93935e3",
        "filename": "src/bench/examples.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/examples.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/examples.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/examples.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -4,7 +4,7 @@\n \n #include <bench/bench.h>\n #include <validation.h>\n-#include <utiltime.h>\n+#include <util/time.h>\n \n // Sanity test: this should loop ten times, and\n // min/max/average should be close to 100ms."
      },
      {
        "sha": "6f4e384e3bf6e0f33496d46cb4997f02d514161b",
        "filename": "src/bench/gcs_filter.cpp",
        "status": "added",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/gcs_filter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/gcs_filter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/gcs_filter.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockfilter.h>\n+\n+static void ConstructGCSFilter(benchmark::State& state)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));\n+    }\n+\n+    uint64_t siphash_k0 = 0;\n+    while (state.KeepRunning()) {\n+        GCSFilter filter(siphash_k0, 0, 20, 1 << 20, elements);\n+\n+        siphash_k0++;\n+    }\n+}\n+\n+static void MatchGCSFilter(benchmark::State& state)\n+{\n+    GCSFilter::ElementSet elements;\n+    for (int i = 0; i < 10000; ++i) {\n+        GCSFilter::Element element(32);\n+        element[0] = static_cast<unsigned char>(i);\n+        element[1] = static_cast<unsigned char>(i >> 8);\n+        elements.insert(std::move(element));\n+    }\n+    GCSFilter filter(0, 0, 20, 1 << 20, elements);\n+\n+    while (state.KeepRunning()) {\n+        filter.Match(GCSFilter::Element());\n+    }\n+}\n+\n+BENCHMARK(ConstructGCSFilter, 1000);\n+BENCHMARK(MatchGCSFilter, 50 * 1000);"
      },
      {
        "sha": "3908a7d231d754f868ca85b80f5db5c06123612e",
        "filename": "src/bench/mempool_eviction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/mempool_eviction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/mempool_eviction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_eviction.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -16,7 +16,7 @@ static void AddTx(const CTransactionRef& tx, const CAmount& nFee, CTxMemPool& po\n     bool spendsCoinbase = false;\n     unsigned int sigOpCost = 4;\n     LockPoints lp;\n-    pool.addUnchecked(tx->GetHash(), CTxMemPoolEntry(\n+    pool.addUnchecked(CTxMemPoolEntry(\n                                          tx, nFee, nTime, nHeight,\n                                          spendsCoinbase, sigOpCost, lp));\n }"
      },
      {
        "sha": "00e5d7e7a04028fccb765c208838661075d03d00",
        "filename": "src/bench/prevector.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/prevector.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/prevector.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/prevector.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -2,13 +2,21 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <compat.h>\n #include <prevector.h>\n #include <serialize.h>\n #include <streams.h>\n+#include <type_traits>\n \n #include <bench/bench.h>\n \n+// GCC 4.8 is missing some C++11 type_traits,\n+// https://www.gnu.org/software/gcc/gcc-5/changes.html\n+#if defined(__GNUC__) && !defined(__clang__) && __GNUC__ < 5\n+#define IS_TRIVIALLY_CONSTRUCTIBLE std::has_trivial_default_constructor\n+#else\n+#define IS_TRIVIALLY_CONSTRUCTIBLE std::is_trivially_default_constructible\n+#endif\n+\n struct nontrivial_t {\n     int x;\n     nontrivial_t() :x(-1) {}"
      },
      {
        "sha": "0a99ea3184d57c3c0e32acbdac45812a38a40233",
        "filename": "src/bench/rollingbloom.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/rollingbloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bench/rollingbloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/rollingbloom.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -12,7 +12,6 @@ static void RollingBloom(benchmark::State& state)\n     CRollingBloomFilter filter(120000, 0.000001);\n     std::vector<unsigned char> data(32);\n     uint32_t count = 0;\n-    uint64_t match = 0;\n     while (state.KeepRunning()) {\n         count++;\n         data[0] = count;\n@@ -25,7 +24,7 @@ static void RollingBloom(benchmark::State& state)\n         data[1] = count >> 16;\n         data[2] = count >> 8;\n         data[3] = count;\n-        match += filter.contains(data);\n+        filter.contains(data);\n     }\n }\n "
      },
      {
        "sha": "262458a6840e9b614461352dc708509c5d023f33",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 10,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -12,18 +12,21 @@\n #include <fs.h>\n #include <rpc/client.h>\n #include <rpc/protocol.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n \n #include <memory>\n #include <stdio.h>\n+#include <tuple>\n \n #include <event2/buffer.h>\n #include <event2/keyvalq_struct.h>\n #include <support/events.h>\n \n #include <univalue.h>\n \n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n static const char DEFAULT_RPCCONNECT[] = \"127.0.0.1\";\n static const int DEFAULT_HTTP_CLIENT_TIMEOUT=900;\n static const bool DEFAULT_NAMED=false;\n@@ -33,6 +36,7 @@ static void SetupCliArgs()\n {\n     const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n     const auto testnetBaseParams = CreateBaseChainParams(CBaseChainParams::TESTNET);\n+    const auto regtestBaseParams = CreateBaseChainParams(CBaseChainParams::REGTEST);\n \n     gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-version\", \"Print version and exit\", false, OptionsCategory::OPTIONS);\n@@ -43,12 +47,12 @@ static void SetupCliArgs()\n     gArgs.AddArg(\"-named\", strprintf(\"Pass named instead of positional arguments (default: %s)\", DEFAULT_NAMED), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcclienttimeout=<n>\", strprintf(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\", DEFAULT_HTTP_CLIENT_TIMEOUT), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcconnect=<ip>\", strprintf(\"Send commands to node running on <ip> (default: %s)\", DEFAULT_RPCCONNECT), false, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-rpccookiefile=<loc>\", _(\"Location of the auth cookie. Relative paths will be prefixed by a net-specific datadir location. (default: data dir)\"), false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-rpccookiefile=<loc>\", \"Location of the auth cookie. Relative paths will be prefixed by a net-specific datadir location. (default: data dir)\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcpassword=<pw>\", \"Password for JSON-RPC connections\", false, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-rpcport=<port>\", strprintf(\"Connect to JSON-RPC on <port> (default: %u or testnet: %u)\", defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort()), false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-rpcport=<port>\", strprintf(\"Connect to JSON-RPC on <port> (default: %u, testnet: %u, regtest: %u)\", defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort(), regtestBaseParams->RPCPort()), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcuser=<user>\", \"Username for JSON-RPC connections\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-rpcwait\", \"Wait for RPC server to start\", false, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-rpcwallet=<walletname>\", \"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind)\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-rpcwallet=<walletname>\", \"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind). This changes the RPC endpoint used, e.g. http://127.0.0.1:8332/wallet/<walletname>\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-stdin\", \"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases). When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-stdinrpcpass\", \"Read RPC password from standard input as a single line. When combined with -stdin, the first line from standard input is used for the RPC password.\", false, OptionsCategory::OPTIONS);\n \n@@ -136,11 +140,6 @@ static int AppInitRPC(int argc, char* argv[])\n         fprintf(stderr, \"Error: %s\\n\", e.what());\n         return EXIT_FAILURE;\n     }\n-    if (gArgs.GetBoolArg(\"-rpcssl\", false))\n-    {\n-        fprintf(stderr, \"Error: SSL mode for RPC (-rpcssl) is no longer supported.\\n\");\n-        return EXIT_FAILURE;\n-    }\n     return CONTINUE_EXECUTION;\n }\n \n@@ -513,6 +512,10 @@ static int CommandLineRPC(int argc, char *argv[])\n \n int main(int argc, char* argv[])\n {\n+#ifdef WIN32\n+    util::WinCmdLineArgs winArgs;\n+    std::tie(argc, argv) = winArgs.get();\n+#endif\n     SetupEnvironment();\n     if (!SetupNetworking()) {\n         fprintf(stderr, \"Error: Initializing networking failed\\n\");"
      },
      {
        "sha": "bc91ca36417686a48f6ea0651e8c40aef2ec1cd2",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 10,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -18,9 +18,9 @@\n #include <script/script.h>\n #include <script/sign.h>\n #include <univalue.h>\n-#include <util.h>\n-#include <utilmoneystr.h>\n-#include <utilstrencodings.h>\n+#include <util/system.h>\n+#include <util/moneystr.h>\n+#include <util/strencodings.h>\n \n #include <memory>\n #include <stdio.h>\n@@ -31,6 +31,8 @@ static bool fCreateBlank;\n static std::map<std::string,UniValue> registers;\n static const int CONTINUE_EXECUTION=-1;\n \n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n static void SetupBitcoinTxArgs()\n {\n     gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n@@ -238,10 +240,10 @@ static void MutateTxAddInput(CMutableTransaction& tx, const std::string& strInpu\n         throw std::runtime_error(\"TX input missing separator\");\n \n     // extract and validate TXID\n-    std::string strTxid = vStrInputParts[0];\n-    if ((strTxid.size() != 64) || !IsHex(strTxid))\n+    uint256 txid;\n+    if (!ParseHashStr(vStrInputParts[0], txid)) {\n         throw std::runtime_error(\"invalid TX input txid\");\n-    uint256 txid(uint256S(strTxid));\n+    }\n \n     static const unsigned int minTxOutSz = 9;\n     static const unsigned int maxVout = MAX_BLOCK_WEIGHT / (WITNESS_SCALE_FACTOR * minTxOutSz);\n@@ -253,7 +255,7 @@ static void MutateTxAddInput(CMutableTransaction& tx, const std::string& strInpu\n         throw std::runtime_error(\"invalid TX input vout '\" + strVout + \"'\");\n \n     // extract the optional sequence number\n-    uint32_t nSequenceIn=std::numeric_limits<unsigned int>::max();\n+    uint32_t nSequenceIn = CTxIn::SEQUENCE_FINAL;\n     if (vStrInputParts.size() > 2)\n         nSequenceIn = std::stoul(vStrInputParts[2]);\n \n@@ -354,7 +356,7 @@ static void MutateTxAddOutMultiSig(CMutableTransaction& tx, const std::string& s\n     if (vStrInputParts.size() < numkeys + 3)\n         throw std::runtime_error(\"incorrect number of multisig pubkeys\");\n \n-    if (required < 1 || required > 20 || numkeys < 1 || numkeys > 20 || numkeys < required)\n+    if (required < 1 || required > MAX_PUBKEYS_PER_MULTISIG || numkeys < 1 || numkeys > MAX_PUBKEYS_PER_MULTISIG || numkeys < required)\n         throw std::runtime_error(\"multisig parameter mismatch. Required \" \\\n                             + std::to_string(required) + \" of \" + std::to_string(numkeys) + \"signatures.\");\n \n@@ -383,7 +385,7 @@ static void MutateTxAddOutMultiSig(CMutableTransaction& tx, const std::string& s\n     CScript scriptPubKey = GetScriptForMultisig(required, pubkeys);\n \n     if (bSegWit) {\n-        for (CPubKey& pubkey : pubkeys) {\n+        for (const CPubKey& pubkey : pubkeys) {\n             if (!pubkey.IsCompressed()) {\n                 throw std::runtime_error(\"Uncompressed pubkeys are not useable for SegWit outputs\");\n             }\n@@ -588,7 +590,10 @@ static void MutateTxSign(CMutableTransaction& tx, const std::string& flagStr)\n             if (!prevOut.checkObject(types))\n                 throw std::runtime_error(\"prevtxs internal object typecheck fail\");\n \n-            uint256 txid = ParseHashStr(prevOut[\"txid\"].get_str(), \"txid\");\n+            uint256 txid;\n+            if (!ParseHashStr(prevOut[\"txid\"].get_str(), txid)) {\n+                throw std::runtime_error(\"txid must be hexadecimal string (not '\" + prevOut[\"txid\"].get_str() + \"')\");\n+            }\n \n             const int nOut = prevOut[\"vout\"].get_int();\n             if (nOut < 0)"
      },
      {
        "sha": "dde75c1b12984b0cf81495c711258329e395ad19",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 5,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -11,18 +11,21 @@\n #include <clientversion.h>\n #include <compat.h>\n #include <fs.h>\n+#include <interfaces/chain.h>\n #include <rpc/server.h>\n #include <init.h>\n #include <noui.h>\n #include <shutdown.h>\n-#include <util.h>\n+#include <util/system.h>\n #include <httpserver.h>\n #include <httprpc.h>\n-#include <utilstrencodings.h>\n+#include <util/strencodings.h>\n #include <walletinitinterface.h>\n \n #include <stdio.h>\n \n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n /* Introduction text for doxygen: */\n \n /*! \\mainpage Developer documentation\n@@ -56,6 +59,9 @@ static void WaitForShutdown()\n //\n static bool AppInit(int argc, char* argv[])\n {\n+    InitInterfaces interfaces;\n+    interfaces.chain = interfaces::MakeChain();\n+\n     bool fRet = false;\n \n     //\n@@ -75,7 +81,7 @@ static bool AppInit(int argc, char* argv[])\n \n         if (gArgs.IsArgSet(\"-version\"))\n         {\n-            strUsage += FormatParagraph(LicenseInfo());\n+            strUsage += FormatParagraph(LicenseInfo()) + \"\\n\";\n         }\n         else\n         {\n@@ -162,7 +168,7 @@ static bool AppInit(int argc, char* argv[])\n             // If locking the data directory failed, exit immediately\n             return false;\n         }\n-        fRet = AppInitMain();\n+        fRet = AppInitMain(interfaces);\n     }\n     catch (const std::exception& e) {\n         PrintExceptionContinue(&e, \"AppInit()\");\n@@ -176,13 +182,17 @@ static bool AppInit(int argc, char* argv[])\n     } else {\n         WaitForShutdown();\n     }\n-    Shutdown();\n+    Shutdown(interfaces);\n \n     return fRet;\n }\n \n int main(int argc, char* argv[])\n {\n+#ifdef WIN32\n+    util::WinCmdLineArgs winArgs;\n+    std::tie(argc, argv) = winArgs.get();\n+#endif\n     SetupEnvironment();\n \n     // Connect bitcoind signal handlers"
      },
      {
        "sha": "10f51931f08ff6ebdc29138433baa7e17888cb07",
        "filename": "src/blockencodings.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/blockencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/blockencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -6,12 +6,13 @@\n #include <consensus/consensus.h>\n #include <consensus/validation.h>\n #include <chainparams.h>\n-#include <hash.h>\n+#include <crypto/sha256.h>\n+#include <crypto/siphash.h>\n #include <random.h>\n #include <streams.h>\n #include <txmempool.h>\n #include <validation.h>\n-#include <util.h>\n+#include <util/system.h>\n \n #include <unordered_map>\n \n@@ -162,7 +163,7 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n             break;\n     }\n \n-    LogPrint(BCLog::CMPCTBLOCK, \"Initialized PartiallyDownloadedBlock for block %s using a cmpctblock of size %lu\\n\", cmpctblock.header.GetHash().ToString(), GetSerializeSize(cmpctblock, SER_NETWORK, PROTOCOL_VERSION));\n+    LogPrint(BCLog::CMPCTBLOCK, \"Initialized PartiallyDownloadedBlock for block %s using a cmpctblock of size %lu\\n\", cmpctblock.header.GetHash().ToString(), GetSerializeSize(cmpctblock, PROTOCOL_VERSION));\n \n     return READ_STATUS_OK;\n }"
      },
      {
        "sha": "0c2b83ebcfafec942725fb5accc0236e2088f0ba",
        "filename": "src/blockencodings.h",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/blockencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/blockencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -52,12 +52,12 @@ class BlockTransactionsRequest {\n                 }\n             }\n \n-            uint16_t offset = 0;\n+            int32_t offset = 0;\n             for (size_t j = 0; j < indexes.size(); j++) {\n-                if (uint64_t(indexes[j]) + uint64_t(offset) > std::numeric_limits<uint16_t>::max())\n+                if (int32_t(indexes[j]) + offset > std::numeric_limits<uint16_t>::max())\n                     throw std::ios_base::failure(\"indexes overflowed 16 bits\");\n                 indexes[j] = indexes[j] + offset;\n-                offset = indexes[j] + 1;\n+                offset = int32_t(indexes[j]) + 1;\n             }\n         } else {\n             for (size_t i = 0; i < indexes.size(); i++) {\n@@ -186,6 +186,9 @@ class CBlockHeaderAndShortTxIDs {\n \n         READWRITE(prefilledtxn);\n \n+        if (BlockTxCount() > std::numeric_limits<uint16_t>::max())\n+            throw std::ios_base::failure(\"indexes overflowed 16 bits\");\n+\n         if (ser_action.ForRead())\n             FillShortTxIDSelector();\n     }"
      },
      {
        "sha": "163e2a52eff5f6779e76feb379fd420098d6be26",
        "filename": "src/blockfilter.cpp",
        "status": "added",
        "additions": 262,
        "deletions": 0,
        "changes": 262,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,262 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <crypto/siphash.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+static constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+static constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t P, uint64_t x)\n+{\n+    // Write quotient as unary-encoded: q 1's followed by one 0.\n+    uint64_t q = x >> P;\n+    while (q > 0) {\n+        int nbits = q <= 64 ? static_cast<int>(q) : 64;\n+        bitwriter.Write(~0ULL, nbits);\n+        q -= nbits;\n+    }\n+    bitwriter.Write(0, 1);\n+\n+    // Write the remainder in P bits. Since the remainder is just the bottom\n+    // P bits of x, there is no need to mask first.\n+    bitwriter.Write(x, P);\n+}\n+\n+template <typename IStream>\n+static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t P)\n+{\n+    // Read unary-encoded quotient: q 1's followed by one 0.\n+    uint64_t q = 0;\n+    while (bitreader.Read(1) == 1) {\n+        ++q;\n+    }\n+\n+    uint64_t r = bitreader.Read(P);\n+\n+    return (q << P) + r;\n+}\n+\n+// Map a value x that is uniformly distributed in the range [0, 2^64) to a\n+// value uniformly distributed in [0, n) by returning the upper 64 bits of\n+// x * n.\n+//\n+// See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n+static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n+{\n+#ifdef __SIZEOF_INT128__\n+    return (static_cast<unsigned __int128>(x) * static_cast<unsigned __int128>(n)) >> 64;\n+#else\n+    // To perform the calculation on 64-bit numbers without losing the\n+    // result to overflow, split the numbers into the most significant and\n+    // least significant 32 bits and perform multiplication piece-wise.\n+    //\n+    // See: https://stackoverflow.com/a/26855440\n+    uint64_t x_hi = x >> 32;\n+    uint64_t x_lo = x & 0xFFFFFFFF;\n+    uint64_t n_hi = n >> 32;\n+    uint64_t n_lo = n & 0xFFFFFFFF;\n+\n+    uint64_t ac = x_hi * n_hi;\n+    uint64_t ad = x_hi * n_lo;\n+    uint64_t bc = x_lo * n_hi;\n+    uint64_t bd = x_lo * n_lo;\n+\n+    uint64_t mid34 = (bd >> 32) + (bc & 0xFFFFFFFF) + (ad & 0xFFFFFFFF);\n+    uint64_t upper64 = ac + (bc >> 32) + (ad >> 32) + (mid34 >> 32);\n+    return upper64;\n+#endif\n+}\n+\n+uint64_t GCSFilter::HashToRange(const Element& element) const\n+{\n+    uint64_t hash = CSipHasher(m_siphash_k0, m_siphash_k1)\n+        .Write(element.data(), element.size())\n+        .Finalize();\n+    return MapIntoRange(hash, m_F);\n+}\n+\n+std::vector<uint64_t> GCSFilter::BuildHashedSet(const ElementSet& elements) const\n+{\n+    std::vector<uint64_t> hashed_elements;\n+    hashed_elements.reserve(elements.size());\n+    for (const Element& element : elements) {\n+        hashed_elements.push_back(HashToRange(element));\n+    }\n+    std::sort(hashed_elements.begin(), hashed_elements.end());\n+    return hashed_elements;\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M)\n+    : m_siphash_k0(siphash_k0), m_siphash_k1(siphash_k1), m_P(P), m_M(M), m_N(0), m_F(0)\n+{}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M,\n+                     std::vector<unsigned char> encoded_filter)\n+    : GCSFilter(siphash_k0, siphash_k1, P, M)\n+{\n+    m_encoded = std::move(encoded_filter);\n+\n+    VectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    uint64_t N = ReadCompactSize(stream);\n+    m_N = static_cast<uint32_t>(N);\n+    if (m_N != N) {\n+        throw std::ios_base::failure(\"N must be <2^32\");\n+    }\n+    m_F = static_cast<uint64_t>(m_N) * static_cast<uint64_t>(m_M);\n+\n+    // Verify that the encoded filter contains exactly N elements. If it has too much or too little\n+    // data, a std::ios_base::failure exception will be raised.\n+    BitStreamReader<VectorReader> bitreader(stream);\n+    for (uint64_t i = 0; i < m_N; ++i) {\n+        GolombRiceDecode(bitreader, m_P);\n+    }\n+    if (!stream.empty()) {\n+        throw std::ios_base::failure(\"encoded_filter contains excess data\");\n+    }\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M,\n+                     const ElementSet& elements)\n+    : GCSFilter(siphash_k0, siphash_k1, P, M)\n+{\n+    size_t N = elements.size();\n+    m_N = static_cast<uint32_t>(N);\n+    if (m_N != N) {\n+        throw std::invalid_argument(\"N must be <2^32\");\n+    }\n+    m_F = static_cast<uint64_t>(m_N) * static_cast<uint64_t>(m_M);\n+\n+    CVectorWriter stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    WriteCompactSize(stream, m_N);\n+\n+    if (elements.empty()) {\n+        return;\n+    }\n+\n+    BitStreamWriter<CVectorWriter> bitwriter(stream);\n+\n+    uint64_t last_value = 0;\n+    for (uint64_t value : BuildHashedSet(elements)) {\n+        uint64_t delta = value - last_value;\n+        GolombRiceEncode(bitwriter, m_P, delta);\n+        last_value = value;\n+    }\n+\n+    bitwriter.Flush();\n+}\n+\n+bool GCSFilter::MatchInternal(const uint64_t* element_hashes, size_t size) const\n+{\n+    VectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    // Seek forward by size of N\n+    uint64_t N = ReadCompactSize(stream);\n+    assert(N == m_N);\n+\n+    BitStreamReader<VectorReader> bitreader(stream);\n+\n+    uint64_t value = 0;\n+    size_t hashes_index = 0;\n+    for (uint32_t i = 0; i < m_N; ++i) {\n+        uint64_t delta = GolombRiceDecode(bitreader, m_P);\n+        value += delta;\n+\n+        while (true) {\n+            if (hashes_index == size) {\n+                return false;\n+            } else if (element_hashes[hashes_index] == value) {\n+                return true;\n+            } else if (element_hashes[hashes_index] > value) {\n+                break;\n+            }\n+\n+            hashes_index++;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool GCSFilter::Match(const Element& element) const\n+{\n+    uint64_t query = HashToRange(element);\n+    return MatchInternal(&query, 1);\n+}\n+\n+bool GCSFilter::MatchAny(const ElementSet& elements) const\n+{\n+    const std::vector<uint64_t> queries = BuildHashedSet(elements);\n+    return MatchInternal(queries.data(), queries.size());\n+}\n+\n+static GCSFilter::ElementSet BasicFilterElements(const CBlock& block,\n+                                                 const CBlockUndo& block_undo)\n+{\n+    GCSFilter::ElementSet elements;\n+\n+    for (const CTransactionRef& tx : block.vtx) {\n+        for (const CTxOut& txout : tx->vout) {\n+            const CScript& script = txout.scriptPubKey;\n+            if (script.empty() || script[0] == OP_RETURN) continue;\n+            elements.emplace(script.begin(), script.end());\n+        }\n+    }\n+\n+    for (const CTxUndo& tx_undo : block_undo.vtxundo) {\n+        for (const Coin& prevout : tx_undo.vprevout) {\n+            const CScript& script = prevout.out.scriptPubKey;\n+            if (script.empty()) continue;\n+            elements.emplace(script.begin(), script.end());\n+        }\n+    }\n+\n+    return elements;\n+}\n+\n+BlockFilter::BlockFilter(BlockFilterType filter_type, const CBlock& block, const CBlockUndo& block_undo)\n+    : m_filter_type(filter_type), m_block_hash(block.GetHash())\n+{\n+    switch (m_filter_type) {\n+    case BlockFilterType::BASIC:\n+        m_filter = GCSFilter(m_block_hash.GetUint64(0), m_block_hash.GetUint64(1),\n+                             BASIC_FILTER_P, BASIC_FILTER_M,\n+                             BasicFilterElements(block, block_undo));\n+        break;\n+\n+    default:\n+        throw std::invalid_argument(\"unknown filter_type\");\n+    }\n+}\n+\n+uint256 BlockFilter::GetHash() const\n+{\n+    const std::vector<unsigned char>& data = GetEncodedFilter();\n+\n+    uint256 result;\n+    CHash256().Write(data.data(), data.size()).Finalize(result.begin());\n+    return result;\n+}\n+\n+uint256 BlockFilter::ComputeHeader(const uint256& prev_header) const\n+{\n+    const uint256& filter_hash = GetHash();\n+\n+    uint256 result;\n+    CHash256()\n+        .Write(filter_hash.begin(), filter_hash.size())\n+        .Write(prev_header.begin(), prev_header.size())\n+        .Finalize(result.begin());\n+    return result;\n+}"
      },
      {
        "sha": "871be11769afa56d52cf324c6b0aa8f71f85b827",
        "filename": "src/blockfilter.h",
        "status": "added",
        "additions": 146,
        "deletions": 0,
        "changes": 146,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/blockfilter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/blockfilter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,146 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOCKFILTER_H\n+#define BITCOIN_BLOCKFILTER_H\n+\n+#include <stdint.h>\n+#include <unordered_set>\n+#include <vector>\n+\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <uint256.h>\n+#include <undo.h>\n+#include <util/bytevectorhash.h>\n+\n+/**\n+ * This implements a Golomb-coded set as defined in BIP 158. It is a\n+ * compact, probabilistic data structure for testing set membership.\n+ */\n+class GCSFilter\n+{\n+public:\n+    typedef std::vector<unsigned char> Element;\n+    typedef std::unordered_set<Element, ByteVectorHash> ElementSet;\n+\n+private:\n+    uint64_t m_siphash_k0;\n+    uint64_t m_siphash_k1;\n+    uint8_t m_P;  //!< Golomb-Rice coding parameter\n+    uint32_t m_M;  //!< Inverse false positive rate\n+    uint32_t m_N;  //!< Number of elements in the filter\n+    uint64_t m_F;  //!< Range of element hashes, F = N * M\n+    std::vector<unsigned char> m_encoded;\n+\n+    /** Hash a data element to an integer in the range [0, N * M). */\n+    uint64_t HashToRange(const Element& element) const;\n+\n+    std::vector<uint64_t> BuildHashedSet(const ElementSet& elements) const;\n+\n+    /** Helper method used to implement Match and MatchAny */\n+    bool MatchInternal(const uint64_t* sorted_element_hashes, size_t size) const;\n+\n+public:\n+\n+    /** Constructs an empty filter. */\n+    GCSFilter(uint64_t siphash_k0 = 0, uint64_t siphash_k1 = 0, uint8_t P = 0, uint32_t M = 0);\n+\n+    /** Reconstructs an already-created filter from an encoding. */\n+    GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M,\n+              std::vector<unsigned char> encoded_filter);\n+\n+    /** Builds a new filter from the params and set of elements. */\n+    GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M,\n+              const ElementSet& elements);\n+\n+    uint8_t GetP() const { return m_P; }\n+    uint32_t GetN() const { return m_N; }\n+    uint32_t GetM() const { return m_M; }\n+    const std::vector<unsigned char>& GetEncoded() const { return m_encoded; }\n+\n+    /**\n+     * Checks if the element may be in the set. False positives are possible\n+     * with probability 1/M.\n+     */\n+    bool Match(const Element& element) const;\n+\n+    /**\n+     * Checks if any of the given elements may be in the set. False positives\n+     * are possible with probability 1/M per element checked. This is more\n+     * efficient that checking Match on multiple elements separately.\n+     */\n+    bool MatchAny(const ElementSet& elements) const;\n+};\n+\n+constexpr uint8_t BASIC_FILTER_P = 19;\n+constexpr uint32_t BASIC_FILTER_M = 784931;\n+\n+enum BlockFilterType : uint8_t\n+{\n+    BASIC = 0,\n+};\n+\n+/**\n+ * Complete block filter struct as defined in BIP 157. Serialization matches\n+ * payload of \"cfilter\" messages.\n+ */\n+class BlockFilter\n+{\n+private:\n+    BlockFilterType m_filter_type;\n+    uint256 m_block_hash;\n+    GCSFilter m_filter;\n+\n+public:\n+\n+    // Construct a new BlockFilter of the specified type from a block.\n+    BlockFilter(BlockFilterType filter_type, const CBlock& block, const CBlockUndo& block_undo);\n+\n+    BlockFilterType GetFilterType() const { return m_filter_type; }\n+\n+    const GCSFilter& GetFilter() const { return m_filter; }\n+\n+    const std::vector<unsigned char>& GetEncodedFilter() const\n+    {\n+        return m_filter.GetEncoded();\n+    }\n+\n+    // Compute the filter hash.\n+    uint256 GetHash() const;\n+\n+    // Compute the filter header given the previous one.\n+    uint256 ComputeHeader(const uint256& prev_header) const;\n+\n+    template <typename Stream>\n+    void Serialize(Stream& s) const {\n+        s << m_block_hash\n+          << static_cast<uint8_t>(m_filter_type)\n+          << m_filter.GetEncoded();\n+    }\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s) {\n+        std::vector<unsigned char> encoded_filter;\n+        uint8_t filter_type;\n+\n+        s >> m_block_hash\n+          >> filter_type\n+          >> encoded_filter;\n+\n+        m_filter_type = static_cast<BlockFilterType>(filter_type);\n+\n+        switch (m_filter_type) {\n+        case BlockFilterType::BASIC:\n+            m_filter = GCSFilter(m_block_hash.GetUint64(0), m_block_hash.GetUint64(1),\n+                                 BASIC_FILTER_P, BASIC_FILTER_M, std::move(encoded_filter));\n+            break;\n+\n+        default:\n+            throw std::ios_base::failure(\"unknown filter_type\");\n+        }\n+    }\n+};\n+\n+#endif // BITCOIN_BLOCKFILTER_H"
      },
      {
        "sha": "7732cee27512b41e2e836c6ad341e83d906d72a1",
        "filename": "src/bloom.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/bloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -153,11 +153,11 @@ bool CBloomFilter::IsRelevantAndUpdate(const CTransaction& tx)\n                     insert(COutPoint(hash, i));\n                 else if ((nFlags & BLOOM_UPDATE_MASK) == BLOOM_UPDATE_P2PUBKEY_ONLY)\n                 {\n-                    txnouttype type;\n                     std::vector<std::vector<unsigned char> > vSolutions;\n-                    if (Solver(txout.scriptPubKey, type, vSolutions) &&\n-                            (type == TX_PUBKEY || type == TX_MULTISIG))\n+                    txnouttype type = Solver(txout.scriptPubKey, vSolutions);\n+                    if (type == TX_PUBKEY || type == TX_MULTISIG) {\n                         insert(COutPoint(hash, i));\n+                    }\n                 }\n                 break;\n             }"
      },
      {
        "sha": "4ce1b538804a2997d0f97d2edf6d3f96990d7393",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 55,
        "deletions": 27,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -4,15 +4,18 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <chainparams.h>\n-#include <consensus/merkle.h>\n \n+#include <chainparamsseeds.h>\n+#include <consensus/merkle.h>\n #include <tinyformat.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n+#include <versionbitsinfo.h>\n \n #include <assert.h>\n \n-#include <chainparamsseeds.h>\n+#include <boost/algorithm/string/classification.hpp>\n+#include <boost/algorithm/string/split.hpp>\n \n static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesisOutputScript, uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n@@ -53,23 +56,9 @@ static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits\n     return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n }\n \n-void CChainParams::UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n-{\n-    consensus.vDeployments[d].nStartTime = nStartTime;\n-    consensus.vDeployments[d].nTimeout = nTimeout;\n-}\n-\n /**\n  * Main network\n  */\n-/**\n- * What makes a good checkpoint block?\n- * + Is surrounded by blocks with reasonable timestamps\n- *   (no blocks before with a timestamp after, none after with\n- *    timestamp before)\n- * + Contains no strange transactions\n- */\n-\n class CMainParams : public CChainParams {\n public:\n     CMainParams() {\n@@ -279,7 +268,7 @@ class CTestNetParams : public CChainParams {\n  */\n class CRegTestParams : public CChainParams {\n public:\n-    CRegTestParams() {\n+    explicit CRegTestParams(const ArgsManager& args) {\n         strNetworkID = \"regtest\";\n         consensus.nSubsidyHalvingInterval = 150;\n         consensus.BIP16Exception = uint256();\n@@ -317,6 +306,8 @@ class CRegTestParams : public CChainParams {\n         nDefaultPort = 18444;\n         nPruneAfterHeight = 1000;\n \n+        UpdateVersionBitsParametersFromArgs(args);\n+\n         genesis = CreateGenesisBlock(1296688602, 2, 0x207fffff, 1, 50 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n         assert(consensus.hashGenesisBlock == uint256S(\"0x0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"));\n@@ -352,23 +343,65 @@ class CRegTestParams : public CChainParams {\n         /* enable fallback fee on regtest */\n         m_fallback_fee_enabled = true;\n     }\n+\n+    /**\n+     * Allows modifying the Version Bits regtest parameters.\n+     */\n+    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+    {\n+        consensus.vDeployments[d].nStartTime = nStartTime;\n+        consensus.vDeployments[d].nTimeout = nTimeout;\n+    }\n+    void UpdateVersionBitsParametersFromArgs(const ArgsManager& args);\n };\n \n-static std::unique_ptr<CChainParams> globalChainParams;\n+void CRegTestParams::UpdateVersionBitsParametersFromArgs(const ArgsManager& args)\n+{\n+    if (!args.IsArgSet(\"-vbparams\")) return;\n+\n+    for (const std::string& strDeployment : args.GetArgs(\"-vbparams\")) {\n+        std::vector<std::string> vDeploymentParams;\n+        boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n+        if (vDeploymentParams.size() != 3) {\n+            throw std::runtime_error(\"Version bits parameters malformed, expecting deployment:start:end\");\n+        }\n+        int64_t nStartTime, nTimeout;\n+        if (!ParseInt64(vDeploymentParams[1], &nStartTime)) {\n+            throw std::runtime_error(strprintf(\"Invalid nStartTime (%s)\", vDeploymentParams[1]));\n+        }\n+        if (!ParseInt64(vDeploymentParams[2], &nTimeout)) {\n+            throw std::runtime_error(strprintf(\"Invalid nTimeout (%s)\", vDeploymentParams[2]));\n+        }\n+        bool found = false;\n+        for (int j=0; j < (int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j) {\n+            if (vDeploymentParams[0] == VersionBitsDeploymentInfo[j].name) {\n+                UpdateVersionBitsParameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n+                found = true;\n+                LogPrintf(\"Setting version bits activation parameters for %s to start=%ld, timeout=%ld\\n\", vDeploymentParams[0], nStartTime, nTimeout);\n+                break;\n+            }\n+        }\n+        if (!found) {\n+            throw std::runtime_error(strprintf(\"Invalid deployment (%s)\", vDeploymentParams[0]));\n+        }\n+    }\n+}\n+\n+static std::unique_ptr<const CChainParams> globalChainParams;\n \n const CChainParams &Params() {\n     assert(globalChainParams);\n     return *globalChainParams;\n }\n \n-std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain)\n+std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain)\n {\n     if (chain == CBaseChainParams::MAIN)\n         return std::unique_ptr<CChainParams>(new CMainParams());\n     else if (chain == CBaseChainParams::TESTNET)\n         return std::unique_ptr<CChainParams>(new CTestNetParams());\n     else if (chain == CBaseChainParams::REGTEST)\n-        return std::unique_ptr<CChainParams>(new CRegTestParams());\n+        return std::unique_ptr<CChainParams>(new CRegTestParams(gArgs));\n     throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }\n \n@@ -377,8 +410,3 @@ void SelectParams(const std::string& network)\n     SelectBaseParams(network);\n     globalChainParams = CreateChainParams(network);\n }\n-\n-void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n-{\n-    globalChainParams->UpdateVersionBitsParameters(d, nStartTime, nTimeout);\n-}"
      },
      {
        "sha": "19818b40aff5c5a2d026a34718d5e8c8092dbd88",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -80,7 +80,6 @@ class CChainParams\n     const std::vector<SeedSpec6>& FixedSeeds() const { return vFixedSeeds; }\n     const CCheckpointData& Checkpoints() const { return checkpointData; }\n     const ChainTxData& TxData() const { return chainTxData; }\n-    void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout);\n protected:\n     CChainParams() {}\n \n@@ -107,7 +106,7 @@ class CChainParams\n  * @returns a CChainParams* of the chosen chain.\n  * @throws a std::runtime_error if the chain is not supported.\n  */\n-std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain);\n+std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain);\n \n /**\n  * Return the currently selected parameters. This won't change after app\n@@ -121,9 +120,4 @@ const CChainParams &Params();\n  */\n void SelectParams(const std::string& chain);\n \n-/**\n- * Allows modifying the Version Bits regtest parameters.\n- */\n-void UpdateVersionBitsParameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout);\n-\n #endif // BITCOIN_CHAINPARAMS_H"
      },
      {
        "sha": "f0559a319acb7c419da37be6e087e557d735d10c",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -6,8 +6,8 @@\n #include <chainparamsbase.h>\n \n #include <tinyformat.h>\n-#include <util.h>\n-#include <utilmemory.h>\n+#include <util/system.h>\n+#include <util/memory.h>\n \n #include <assert.h>\n \n@@ -20,6 +20,7 @@ void SetupChainParamsBaseOptions()\n     gArgs.AddArg(\"-regtest\", \"Enter regression test mode, which uses a special chain in which blocks can be solved instantly. \"\n                                    \"This is intended for regression testing tools and app development.\", true, OptionsCategory::CHAINPARAMS);\n     gArgs.AddArg(\"-testnet\", \"Use the test chain\", false, OptionsCategory::CHAINPARAMS);\n+    gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", true, OptionsCategory::CHAINPARAMS);\n }\n \n static std::unique_ptr<CBaseChainParams> globalChainBaseParams;"
      },
      {
        "sha": "3ef9e0463c45de85727405233d6adb297efbda8b",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -6,6 +6,7 @@\n \n #include <consensus/consensus.h>\n #include <random.h>\n+#include <version.h>\n \n bool CCoinsView::GetCoin(const COutPoint &outpoint, Coin &coin) const { return false; }\n uint256 CCoinsView::GetBestBlock() const { return uint256(); }\n@@ -244,7 +245,7 @@ bool CCoinsViewCache::HaveInputs(const CTransaction& tx) const\n     return true;\n }\n \n-static const size_t MIN_TRANSACTION_OUTPUT_WEIGHT = WITNESS_SCALE_FACTOR * ::GetSerializeSize(CTxOut(), SER_NETWORK, PROTOCOL_VERSION);\n+static const size_t MIN_TRANSACTION_OUTPUT_WEIGHT = WITNESS_SCALE_FACTOR * ::GetSerializeSize(CTxOut(), PROTOCOL_VERSION);\n static const size_t MAX_OUTPUTS_PER_BLOCK = MAX_BLOCK_WEIGHT / MIN_TRANSACTION_OUTPUT_WEIGHT;\n \n const Coin& AccessByTxid(const CCoinsViewCache& view, const uint256& txid)"
      },
      {
        "sha": "94493453f0ddc97e25b8df5dc1ac0117b96c850d",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -9,7 +9,7 @@\n #include <primitives/transaction.h>\n #include <compressor.h>\n #include <core_memusage.h>\n-#include <hash.h>\n+#include <crypto/siphash.h>\n #include <memusage.h>\n #include <serialize.h>\n #include <uint256.h>\n@@ -285,8 +285,8 @@ class CCoinsViewCache : public CCoinsViewBacked\n      * Note that lightweight clients may not know anything besides the hash of previous transactions,\n      * so may not be able to calculate this.\n      *\n-     * @param[in] tx\ttransaction for which we are checking input total\n-     * @return\tSum of value of all inputs (scriptSigs)\n+     * @param[in] tx    transaction for which we are checking input total\n+     * @return  Sum of value of all inputs (scriptSigs)\n      */\n     CAmount GetValueIn(const CTransaction& tx) const;\n "
      },
      {
        "sha": "049579c36539fd26baa47a65d6f602d73808ea7e",
        "filename": "src/compat.h",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/compat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/compat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -10,16 +10,6 @@\n #include <config/bitcoin-config.h>\n #endif\n \n-#include <type_traits>\n-\n-// GCC 4.8 is missing some C++11 type_traits,\n-// https://www.gnu.org/software/gcc/gcc-5/changes.html\n-#if defined(__GNUC__) && __GNUC__ < 5\n-#define IS_TRIVIALLY_CONSTRUCTIBLE std::is_trivial\n-#else\n-#define IS_TRIVIALLY_CONSTRUCTIBLE std::is_trivially_constructible\n-#endif\n-\n #ifdef WIN32\n #ifdef _WIN32_WINNT\n #undef _WIN32_WINNT"
      },
      {
        "sha": "b47d9774ca62be6a4b78d3181d68fd153862f67c",
        "filename": "src/consensus/merkle.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/consensus/merkle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/consensus/merkle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/merkle.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -4,7 +4,7 @@\n \n #include <consensus/merkle.h>\n #include <hash.h>\n-#include <utilstrencodings.h>\n+#include <util/strencodings.h>\n \n /*     WARNING! If you're reading this because you're learning about crypto\n        and/or designing a new system that will use merkle trees, keep in mind"
      },
      {
        "sha": "b17a8bb31dc037537974b8236acb6fc00220e6c2",
        "filename": "src/consensus/tx_verify.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/consensus/tx_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/consensus/tx_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -12,7 +12,7 @@\n // TODO remove the following dependencies\n #include <chain.h>\n #include <coins.h>\n-#include <utilmoneystr.h>\n+#include <util/moneystr.h>\n \n bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n {\n@@ -164,7 +164,7 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n     if (tx.vout.empty())\n         return state.DoS(10, false, REJECT_INVALID, \"bad-txns-vout-empty\");\n     // Size limits (this doesn't take the witness into account, as that hasn't been checked for malleability)\n-    if (::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n+    if (::GetSerializeSize(tx, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * WITNESS_SCALE_FACTOR > MAX_BLOCK_WEIGHT)\n         return state.DoS(100, false, REJECT_INVALID, \"bad-txns-oversize\");\n \n     // Check for negative or overflow output values"
      },
      {
        "sha": "f2e2c3585a9df790b4658009dbd1d16a3da341bc",
        "filename": "src/consensus/validation.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/consensus/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/consensus/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/validation.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -95,16 +95,16 @@ class CValidationState {\n // weight = (stripped_size * 3) + total_size.\n static inline int64_t GetTransactionWeight(const CTransaction& tx)\n {\n-    return ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n+    return ::GetSerializeSize(tx, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(tx, PROTOCOL_VERSION);\n }\n static inline int64_t GetBlockWeight(const CBlock& block)\n {\n-    return ::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION);\n+    return ::GetSerializeSize(block, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(block, PROTOCOL_VERSION);\n }\n static inline int64_t GetTransactionInputWeight(const CTxIn& txin)\n {\n     // scriptWitness size is added here because witnesses and txins are split up in segwit serialization.\n-    return ::GetSerializeSize(txin, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, SER_NETWORK, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, SER_NETWORK, PROTOCOL_VERSION);\n+    return ::GetSerializeSize(txin, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, PROTOCOL_VERSION);\n }\n \n #endif // BITCOIN_CONSENSUS_VALIDATION_H"
      },
      {
        "sha": "6f87161f46acade891eec47f419aa64c0a67e220",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 14,
        "deletions": 4,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -6,6 +6,7 @@\n #define BITCOIN_CORE_IO_H\n \n #include <amount.h>\n+#include <attributes.h>\n \n #include <string>\n #include <vector>\n@@ -22,12 +23,21 @@ class UniValue;\n // core_read.cpp\n CScript ParseScript(const std::string& s);\n std::string ScriptToAsmStr(const CScript& script, const bool fAttemptSighashDecode = false);\n-bool DecodeHexTx(CMutableTransaction& tx, const std::string& hex_tx, bool try_no_witness = false, bool try_witness = true);\n-bool DecodeHexBlk(CBlock&, const std::string& strHexBlk);\n+NODISCARD bool DecodeHexTx(CMutableTransaction& tx, const std::string& hex_tx, bool try_no_witness = false, bool try_witness = true);\n+NODISCARD bool DecodeHexBlk(CBlock&, const std::string& strHexBlk);\n bool DecodeHexBlockHeader(CBlockHeader&, const std::string& hex_header);\n-uint256 ParseHashStr(const std::string&, const std::string& strName);\n+\n+/**\n+ * Parse a hex string into 256 bits\n+ * @param[in] strHex a hex-formatted, 64-character string\n+ * @param[out] result the result of the parasing\n+ * @returns true if successful, false if not\n+ *\n+ * @see ParseHashV for an RPC-oriented version of this\n+ */\n+bool ParseHashStr(const std::string& strHex, uint256& result);\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n-bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);\n+NODISCARD bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx, std::string& error);\n int ParseSighashString(const UniValue& sighash);\n \n // core_write.cpp"
      },
      {
        "sha": "3b82b2853c849cd569d283015ae01b5a6ea33b1a",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -11,8 +11,8 @@\n #include <serialize.h>\n #include <streams.h>\n #include <univalue.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n #include <version.h>\n \n #include <boost/algorithm/string/classification.hpp>\n@@ -193,14 +193,13 @@ bool DecodePSBT(PartiallySignedTransaction& psbt, const std::string& base64_tx,\n     return true;\n }\n \n-uint256 ParseHashStr(const std::string& strHex, const std::string& strName)\n+bool ParseHashStr(const std::string& strHex, uint256& result)\n {\n-    if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n-        throw std::runtime_error(strName + \" must be hexadecimal string (not '\" + strHex + \"')\");\n+    if ((strHex.size() != 64) || !IsHex(strHex))\n+        return false;\n \n-    uint256 result;\n     result.SetHex(strHex);\n-    return result;\n+    return true;\n }\n \n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName)"
      },
      {
        "sha": "765a170307e31b21b5aa62915385fe103e232c9a",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -12,9 +12,9 @@\n #include <serialize.h>\n #include <streams.h>\n #include <univalue.h>\n-#include <util.h>\n-#include <utilmoneystr.h>\n-#include <utilstrencodings.h>\n+#include <util/system.h>\n+#include <util/moneystr.h>\n+#include <util/strencodings.h>\n \n UniValue ValueFromAmount(const CAmount& amount)\n {\n@@ -141,8 +141,7 @@ void ScriptToUniv(const CScript& script, UniValue& out, bool include_address)\n     out.pushKV(\"hex\", HexStr(script.begin(), script.end()));\n \n     std::vector<std::vector<unsigned char>> solns;\n-    txnouttype type;\n-    Solver(script, type, solns);\n+    txnouttype type = Solver(script, solns);\n     out.pushKV(\"type\", GetTxnOutputType(type));\n \n     CTxDestination address;\n@@ -182,7 +181,7 @@ void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry,\n     entry.pushKV(\"txid\", tx.GetHash().GetHex());\n     entry.pushKV(\"hash\", tx.GetWitnessHash().GetHex());\n     entry.pushKV(\"version\", tx.nVersion);\n-    entry.pushKV(\"size\", (int)::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION));\n+    entry.pushKV(\"size\", (int)::GetSerializeSize(tx, PROTOCOL_VERSION));\n     entry.pushKV(\"vsize\", (GetTransactionWeight(tx) + WITNESS_SCALE_FACTOR - 1) / WITNESS_SCALE_FACTOR);\n     entry.pushKV(\"weight\", GetTransactionWeight(tx));\n     entry.pushKV(\"locktime\", (int64_t)tx.nLockTime);"
      },
      {
        "sha": "e81957111ad26b85e3faf17edf0a1268cc5995c9",
        "filename": "src/crypto/siphash.cpp",
        "status": "added",
        "additions": 173,
        "deletions": 0,
        "changes": 173,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/crypto/siphash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/crypto/siphash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/siphash.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,173 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <crypto/siphash.h>\n+\n+#define ROTL(x, b) (uint64_t)(((x) << (b)) | ((x) >> (64 - (b))))\n+\n+#define SIPROUND do { \\\n+    v0 += v1; v1 = ROTL(v1, 13); v1 ^= v0; \\\n+    v0 = ROTL(v0, 32); \\\n+    v2 += v3; v3 = ROTL(v3, 16); v3 ^= v2; \\\n+    v0 += v3; v3 = ROTL(v3, 21); v3 ^= v0; \\\n+    v2 += v1; v1 = ROTL(v1, 17); v1 ^= v2; \\\n+    v2 = ROTL(v2, 32); \\\n+} while (0)\n+\n+CSipHasher::CSipHasher(uint64_t k0, uint64_t k1)\n+{\n+    v[0] = 0x736f6d6570736575ULL ^ k0;\n+    v[1] = 0x646f72616e646f6dULL ^ k1;\n+    v[2] = 0x6c7967656e657261ULL ^ k0;\n+    v[3] = 0x7465646279746573ULL ^ k1;\n+    count = 0;\n+    tmp = 0;\n+}\n+\n+CSipHasher& CSipHasher::Write(uint64_t data)\n+{\n+    uint64_t v0 = v[0], v1 = v[1], v2 = v[2], v3 = v[3];\n+\n+    assert(count % 8 == 0);\n+\n+    v3 ^= data;\n+    SIPROUND;\n+    SIPROUND;\n+    v0 ^= data;\n+\n+    v[0] = v0;\n+    v[1] = v1;\n+    v[2] = v2;\n+    v[3] = v3;\n+\n+    count += 8;\n+    return *this;\n+}\n+\n+CSipHasher& CSipHasher::Write(const unsigned char* data, size_t size)\n+{\n+    uint64_t v0 = v[0], v1 = v[1], v2 = v[2], v3 = v[3];\n+    uint64_t t = tmp;\n+    int c = count;\n+\n+    while (size--) {\n+        t |= ((uint64_t)(*(data++))) << (8 * (c % 8));\n+        c++;\n+        if ((c & 7) == 0) {\n+            v3 ^= t;\n+            SIPROUND;\n+            SIPROUND;\n+            v0 ^= t;\n+            t = 0;\n+        }\n+    }\n+\n+    v[0] = v0;\n+    v[1] = v1;\n+    v[2] = v2;\n+    v[3] = v3;\n+    count = c;\n+    tmp = t;\n+\n+    return *this;\n+}\n+\n+uint64_t CSipHasher::Finalize() const\n+{\n+    uint64_t v0 = v[0], v1 = v[1], v2 = v[2], v3 = v[3];\n+\n+    uint64_t t = tmp | (((uint64_t)count) << 56);\n+\n+    v3 ^= t;\n+    SIPROUND;\n+    SIPROUND;\n+    v0 ^= t;\n+    v2 ^= 0xFF;\n+    SIPROUND;\n+    SIPROUND;\n+    SIPROUND;\n+    SIPROUND;\n+    return v0 ^ v1 ^ v2 ^ v3;\n+}\n+\n+uint64_t SipHashUint256(uint64_t k0, uint64_t k1, const uint256& val)\n+{\n+    /* Specialized implementation for efficiency */\n+    uint64_t d = val.GetUint64(0);\n+\n+    uint64_t v0 = 0x736f6d6570736575ULL ^ k0;\n+    uint64_t v1 = 0x646f72616e646f6dULL ^ k1;\n+    uint64_t v2 = 0x6c7967656e657261ULL ^ k0;\n+    uint64_t v3 = 0x7465646279746573ULL ^ k1 ^ d;\n+\n+    SIPROUND;\n+    SIPROUND;\n+    v0 ^= d;\n+    d = val.GetUint64(1);\n+    v3 ^= d;\n+    SIPROUND;\n+    SIPROUND;\n+    v0 ^= d;\n+    d = val.GetUint64(2);\n+    v3 ^= d;\n+    SIPROUND;\n+    SIPROUND;\n+    v0 ^= d;\n+    d = val.GetUint64(3);\n+    v3 ^= d;\n+    SIPROUND;\n+    SIPROUND;\n+    v0 ^= d;\n+    v3 ^= ((uint64_t)4) << 59;\n+    SIPROUND;\n+    SIPROUND;\n+    v0 ^= ((uint64_t)4) << 59;\n+    v2 ^= 0xFF;\n+    SIPROUND;\n+    SIPROUND;\n+    SIPROUND;\n+    SIPROUND;\n+    return v0 ^ v1 ^ v2 ^ v3;\n+}\n+\n+uint64_t SipHashUint256Extra(uint64_t k0, uint64_t k1, const uint256& val, uint32_t extra)\n+{\n+    /* Specialized implementation for efficiency */\n+    uint64_t d = val.GetUint64(0);\n+\n+    uint64_t v0 = 0x736f6d6570736575ULL ^ k0;\n+    uint64_t v1 = 0x646f72616e646f6dULL ^ k1;\n+    uint64_t v2 = 0x6c7967656e657261ULL ^ k0;\n+    uint64_t v3 = 0x7465646279746573ULL ^ k1 ^ d;\n+\n+    SIPROUND;\n+    SIPROUND;\n+    v0 ^= d;\n+    d = val.GetUint64(1);\n+    v3 ^= d;\n+    SIPROUND;\n+    SIPROUND;\n+    v0 ^= d;\n+    d = val.GetUint64(2);\n+    v3 ^= d;\n+    SIPROUND;\n+    SIPROUND;\n+    v0 ^= d;\n+    d = val.GetUint64(3);\n+    v3 ^= d;\n+    SIPROUND;\n+    SIPROUND;\n+    v0 ^= d;\n+    d = (((uint64_t)36) << 56) | extra;\n+    v3 ^= d;\n+    SIPROUND;\n+    SIPROUND;\n+    v0 ^= d;\n+    v2 ^= 0xFF;\n+    SIPROUND;\n+    SIPROUND;\n+    SIPROUND;\n+    SIPROUND;\n+    return v0 ^ v1 ^ v2 ^ v3;\n+}"
      },
      {
        "sha": "b312f913f9360abe5295afcbc737489ff9ab4450",
        "filename": "src/crypto/siphash.h",
        "status": "added",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/crypto/siphash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/crypto/siphash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/siphash.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,47 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CRYPTO_SIPHASH_H\n+#define BITCOIN_CRYPTO_SIPHASH_H\n+\n+#include <stdint.h>\n+\n+#include <uint256.h>\n+\n+/** SipHash-2-4 */\n+class CSipHasher\n+{\n+private:\n+    uint64_t v[4];\n+    uint64_t tmp;\n+    int count;\n+\n+public:\n+    /** Construct a SipHash calculator initialized with 128-bit key (k0, k1) */\n+    CSipHasher(uint64_t k0, uint64_t k1);\n+    /** Hash a 64-bit integer worth of data\n+     *  It is treated as if this was the little-endian interpretation of 8 bytes.\n+     *  This function can only be used when a multiple of 8 bytes have been written so far.\n+     */\n+    CSipHasher& Write(uint64_t data);\n+    /** Hash arbitrary bytes. */\n+    CSipHasher& Write(const unsigned char* data, size_t size);\n+    /** Compute the 64-bit SipHash-2-4 of the data written so far. The object remains untouched. */\n+    uint64_t Finalize() const;\n+};\n+\n+/** Optimized SipHash-2-4 implementation for uint256.\n+ *\n+ *  It is identical to:\n+ *    SipHasher(k0, k1)\n+ *      .Write(val.GetUint64(0))\n+ *      .Write(val.GetUint64(1))\n+ *      .Write(val.GetUint64(2))\n+ *      .Write(val.GetUint64(3))\n+ *      .Finalize()\n+ */\n+uint64_t SipHashUint256(uint64_t k0, uint64_t k1, const uint256& val);\n+uint64_t SipHashUint256Extra(uint64_t k0, uint64_t k1, const uint256& val, uint32_t extra);\n+\n+#endif // BITCOIN_CRYPTO_SIPHASH_H"
      },
      {
        "sha": "4d0b094fa2fa6889ff1a78f02d8a0e82bd004604",
        "filename": "src/cuckoocache.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/cuckoocache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/cuckoocache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/cuckoocache.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -397,15 +397,15 @@ class cache\n         std::array<uint32_t, 8> locs = compute_hashes(e);\n         // Make sure we have not already inserted this element\n         // If we have, make sure that it does not get deleted\n-        for (uint32_t loc : locs)\n+        for (const uint32_t loc : locs)\n             if (table[loc] == e) {\n                 please_keep(loc);\n                 epoch_flags[loc] = last_epoch;\n                 return;\n             }\n         for (uint8_t depth = 0; depth < depth_limit; ++depth) {\n             // First try to insert to an empty slot, if one exists\n-            for (uint32_t loc : locs) {\n+            for (const uint32_t loc : locs) {\n                 if (!collection_flags.bit_is_set(loc))\n                     continue;\n                 table[loc] = std::move(e);\n@@ -467,7 +467,7 @@ class cache\n     inline bool contains(const Element& e, const bool erase) const\n     {\n         std::array<uint32_t, 8> locs = compute_hashes(e);\n-        for (uint32_t loc : locs)\n+        for (const uint32_t loc : locs)\n             if (table[loc] == e) {\n                 if (erase)\n                     allow_erase(loc);"
      },
      {
        "sha": "58d8cc2c9d03fef45e1d4f9cb7ae6e2413cc7e1b",
        "filename": "src/dbwrapper.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/dbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/dbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -78,7 +78,7 @@ static void SetMaxOpenFiles(leveldb::Options *options) {\n     // do not interfere with select() loops. On 64-bit Unix hosts this value is\n     // also OK, because up to that amount LevelDB will use an mmap\n     // implementation that does not use extra file descriptors (the fds are\n-    // closed after being mmaped).\n+    // closed after being mmap'ed).\n     //\n     // Increasing the value beyond the default is dangerous because LevelDB will\n     // fall back to a non-mmap implementation when the file count is too large."
      },
      {
        "sha": "416f5e83997a6c69edf3989c317b0c7f1350c6e4",
        "filename": "src/dbwrapper.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/dbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/dbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -9,8 +9,8 @@\n #include <fs.h>\n #include <serialize.h>\n #include <streams.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n #include <version.h>\n \n #include <leveldb/db.h>"
      },
      {
        "sha": "9211a7596b8a47d10362809d2534d2c29cad9623",
        "filename": "src/dummywallet.cpp",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/dummywallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/dummywallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dummywallet.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,55 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <stdio.h>\n+#include <util/system.h>\n+#include <walletinitinterface.h>\n+\n+class CWallet;\n+\n+class DummyWalletInit : public WalletInitInterface {\n+public:\n+\n+    bool HasWalletSupport() const override {return false;}\n+    void AddWalletOptions() const override;\n+    bool ParameterInteraction() const override {return true;}\n+    void Construct(InitInterfaces& interfaces) const override {LogPrintf(\"No wallet support compiled in!\\n\");}\n+};\n+\n+void DummyWalletInit::AddWalletOptions() const\n+{\n+    std::vector<std::string> opts = {\"-addresstype\", \"-changetype\", \"-disablewallet\", \"-discardfee=<amt>\", \"-fallbackfee=<amt>\",\n+        \"-keypool=<n>\", \"-mintxfee=<amt>\", \"-paytxfee=<amt>\", \"-rescan\", \"-salvagewallet\", \"-spendzeroconfchange\",  \"-txconfirmtarget=<n>\",\n+        \"-upgradewallet\", \"-wallet=<path>\", \"-walletbroadcast\", \"-walletdir=<dir>\", \"-walletnotify=<cmd>\", \"-walletrbf\", \"-zapwallettxes=<mode>\",\n+        \"-dblogsize=<n>\", \"-flushwallet\", \"-privdb\", \"-walletrejectlongchains\"};\n+    gArgs.AddHiddenArgs(opts);\n+}\n+\n+const WalletInitInterface& g_wallet_init_interface = DummyWalletInit();\n+\n+fs::path GetWalletDir()\n+{\n+    throw std::logic_error(\"Wallet function called in non-wallet build.\");\n+}\n+\n+std::vector<fs::path> ListWalletDir()\n+{\n+    throw std::logic_error(\"Wallet function called in non-wallet build.\");\n+}\n+\n+std::vector<std::shared_ptr<CWallet>> GetWallets()\n+{\n+    throw std::logic_error(\"Wallet function called in non-wallet build.\");\n+}\n+\n+namespace interfaces {\n+\n+class Wallet;\n+\n+std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet)\n+{\n+    throw std::logic_error(\"Wallet function called in non-wallet build.\");\n+}\n+\n+} // namespace interfaces"
      },
      {
        "sha": "3c8f4c02472dd775e4b02c6992feec375b6774ef",
        "filename": "src/fs.cpp",
        "status": "modified",
        "additions": 206,
        "deletions": 2,
        "changes": 208,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/fs.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/fs.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/fs.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -1,15 +1,219 @@\n #include <fs.h>\n \n+#ifndef WIN32\n+#include <fcntl.h>\n+#else\n+#define NOMINMAX\n+#include <codecvt>\n+#include <windows.h>\n+#endif\n+\n namespace fsbridge {\n \n FILE *fopen(const fs::path& p, const char *mode)\n {\n+#ifndef WIN32\n     return ::fopen(p.string().c_str(), mode);\n+#else\n+    std::wstring_convert<std::codecvt_utf8_utf16<wchar_t>,wchar_t> utf8_cvt;\n+    return ::_wfopen(p.wstring().c_str(), utf8_cvt.from_bytes(mode).c_str());\n+#endif\n+}\n+\n+#ifndef WIN32\n+\n+static std::string GetErrorReason() {\n+    return std::strerror(errno);\n+}\n+\n+FileLock::FileLock(const fs::path& file)\n+{\n+    fd = open(file.string().c_str(), O_RDWR);\n+    if (fd == -1) {\n+        reason = GetErrorReason();\n+    }\n+}\n+\n+FileLock::~FileLock()\n+{\n+    if (fd != -1) {\n+        close(fd);\n+    }\n+}\n+\n+bool FileLock::TryLock()\n+{\n+    if (fd == -1) {\n+        return false;\n+    }\n+    struct flock lock;\n+    lock.l_type = F_WRLCK;\n+    lock.l_whence = SEEK_SET;\n+    lock.l_start = 0;\n+    lock.l_len = 0;\n+    if (fcntl(fd, F_SETLK, &lock) == -1) {\n+        reason = GetErrorReason();\n+        return false;\n+    }\n+    return true;\n+}\n+#else\n+\n+static std::string GetErrorReason() {\n+    wchar_t* err;\n+    FormatMessageW(FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS,\n+        nullptr, GetLastError(), MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), reinterpret_cast<WCHAR*>(&err), 0, nullptr);\n+    std::wstring err_str(err);\n+    LocalFree(err);\n+    return std::wstring_convert<std::codecvt_utf8_utf16<wchar_t>>().to_bytes(err_str);\n+}\n+\n+FileLock::FileLock(const fs::path& file)\n+{\n+    hFile = CreateFileW(file.wstring().c_str(),  GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE,\n+        nullptr, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, nullptr);\n+    if (hFile == INVALID_HANDLE_VALUE) {\n+        reason = GetErrorReason();\n+    }\n+}\n+\n+FileLock::~FileLock()\n+{\n+    if (hFile != INVALID_HANDLE_VALUE) {\n+        CloseHandle(hFile);\n+    }\n+}\n+\n+bool FileLock::TryLock()\n+{\n+    if (hFile == INVALID_HANDLE_VALUE) {\n+        return false;\n+    }\n+    _OVERLAPPED overlapped = {0};\n+    if (!LockFileEx(hFile, LOCKFILE_EXCLUSIVE_LOCK | LOCKFILE_FAIL_IMMEDIATELY, 0, std::numeric_limits<DWORD>::max(), std::numeric_limits<DWORD>::max(), &overlapped)) {\n+        reason = GetErrorReason();\n+        return false;\n+    }\n+    return true;\n+}\n+#endif\n+\n+std::string get_filesystem_error_message(const fs::filesystem_error& e)\n+{\n+#ifndef WIN32\n+    return e.what();\n+#else\n+    // Convert from Multi Byte to utf-16\n+    std::string mb_string(e.what());\n+    int size = MultiByteToWideChar(CP_ACP, 0, mb_string.c_str(), mb_string.size(), nullptr, 0);\n+\n+    std::wstring utf16_string(size, L'\\0');\n+    MultiByteToWideChar(CP_ACP, 0, mb_string.c_str(), mb_string.size(), &*utf16_string.begin(), size);\n+    // Convert from utf-16 to utf-8\n+    return std::wstring_convert<std::codecvt_utf8_utf16<wchar_t>, wchar_t>().to_bytes(utf16_string);\n+#endif\n+}\n+\n+#ifdef WIN32\n+#ifdef __GLIBCXX__\n+\n+// reference: https://github.com/gcc-mirror/gcc/blob/gcc-7_3_0-release/libstdc%2B%2B-v3/include/std/fstream#L270\n+\n+static std::string openmodeToStr(std::ios_base::openmode mode)\n+{\n+    switch (mode & ~std::ios_base::ate) {\n+    case std::ios_base::out:\n+    case std::ios_base::out | std::ios_base::trunc:\n+        return \"w\";\n+    case std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::app:\n+        return \"a\";\n+    case std::ios_base::in:\n+        return \"r\";\n+    case std::ios_base::in | std::ios_base::out:\n+        return \"r+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc:\n+        return \"w+\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app:\n+    case std::ios_base::in | std::ios_base::app:\n+        return \"a+\";\n+    case std::ios_base::out | std::ios_base::binary:\n+    case std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"wb\";\n+    case std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::app | std::ios_base::binary:\n+        return \"ab\";\n+    case std::ios_base::in | std::ios_base::binary:\n+        return \"rb\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::binary:\n+        return \"r+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n+        return \"w+b\";\n+    case std::ios_base::in | std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n+    case std::ios_base::in | std::ios_base::app | std::ios_base::binary:\n+        return \"a+b\";\n+    default:\n+        return std::string();\n+    }\n }\n \n-FILE *freopen(const fs::path& p, const char *mode, FILE *stream)\n+void ifstream::open(const fs::path& p, std::ios_base::openmode mode)\n {\n-    return ::freopen(p.string().c_str(), mode, stream);\n+    close();\n+    m_file = fsbridge::fopen(p, openmodeToStr(mode).c_str());\n+    if (m_file == nullptr) {\n+        return;\n+    }\n+    m_filebuf = __gnu_cxx::stdio_filebuf<char>(m_file, mode);\n+    rdbuf(&m_filebuf);\n+    if (mode & std::ios_base::ate) {\n+        seekg(0, std::ios_base::end);\n+    }\n }\n \n+void ifstream::close()\n+{\n+    if (m_file != nullptr) {\n+        m_filebuf.close();\n+        fclose(m_file);\n+    }\n+    m_file = nullptr;\n+}\n+\n+void ofstream::open(const fs::path& p, std::ios_base::openmode mode)\n+{\n+    close();\n+    m_file = fsbridge::fopen(p, openmodeToStr(mode).c_str());\n+    if (m_file == nullptr) {\n+        return;\n+    }\n+    m_filebuf = __gnu_cxx::stdio_filebuf<char>(m_file, mode);\n+    rdbuf(&m_filebuf);\n+    if (mode & std::ios_base::ate) {\n+        seekp(0, std::ios_base::end);\n+    }\n+}\n+\n+void ofstream::close()\n+{\n+    if (m_file != nullptr) {\n+        m_filebuf.close();\n+        fclose(m_file);\n+    }\n+    m_file = nullptr;\n+}\n+#else // __GLIBCXX__\n+\n+static_assert(sizeof(*fs::path().BOOST_FILESYSTEM_C_STR) == sizeof(wchar_t),\n+    \"Warning: This build is using boost::filesystem ofstream and ifstream \"\n+    \"implementations which will fail to open paths containing multibyte \"\n+    \"characters. You should delete this static_assert to ignore this warning, \"\n+    \"or switch to a different C++ standard library like the Microsoft C++ \"\n+    \"Standard Library (where boost uses non-standard extensions to construct \"\n+    \"stream objects with wide filenames), or the GNU libstdc++ library (where \"\n+    \"a more complicated workaround has been implemented above).\");\n+\n+#endif // __GLIBCXX__\n+#endif // WIN32\n+\n } // fsbridge"
      },
      {
        "sha": "bdccb1523229077fad04c762dc3d9e7556b8acc2",
        "filename": "src/fs.h",
        "status": "modified",
        "additions": 73,
        "deletions": 2,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/fs.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/fs.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/fs.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -7,18 +7,89 @@\n \n #include <stdio.h>\n #include <string>\n+#if defined WIN32 && defined __GLIBCXX__\n+#include <ext/stdio_filebuf.h>\n+#endif\n \n #include <boost/filesystem.hpp>\n #include <boost/filesystem/fstream.hpp>\n-#include <boost/filesystem/detail/utf8_codecvt_facet.hpp>\n \n /** Filesystem operations and types */\n namespace fs = boost::filesystem;\n \n /** Bridge operations to C stdio */\n namespace fsbridge {\n     FILE *fopen(const fs::path& p, const char *mode);\n-    FILE *freopen(const fs::path& p, const char *mode, FILE *stream);\n+\n+    class FileLock\n+    {\n+    public:\n+        FileLock() = delete;\n+        FileLock(const FileLock&) = delete;\n+        FileLock(FileLock&&) = delete;\n+        explicit FileLock(const fs::path& file);\n+        ~FileLock();\n+        bool TryLock();\n+        std::string GetReason() { return reason; }\n+\n+    private:\n+        std::string reason;\n+#ifndef WIN32\n+        int fd = -1;\n+#else\n+        void* hFile = (void*)-1; // INVALID_HANDLE_VALUE\n+#endif\n+    };\n+\n+    std::string get_filesystem_error_message(const fs::filesystem_error& e);\n+\n+    // GNU libstdc++ specific workaround for opening UTF-8 paths on Windows.\n+    //\n+    // On Windows, it is only possible to reliably access multibyte file paths through\n+    // `wchar_t` APIs, not `char` APIs. But because the C++ standard doesn't\n+    // require ifstream/ofstream `wchar_t` constructors, and the GNU library doesn't\n+    // provide them (in contrast to the Microsoft C++ library, see\n+    // https://stackoverflow.com/questions/821873/how-to-open-an-stdfstream-ofstream-or-ifstream-with-a-unicode-filename/822032#822032),\n+    // Boost is forced to fall back to `char` constructors which may not work properly.\n+    //\n+    // Work around this issue by creating stream objects with `_wfopen` in\n+    // combination with `__gnu_cxx::stdio_filebuf`. This workaround can be removed\n+    // with an upgrade to C++17, where streams can be constructed directly from\n+    // `std::filesystem::path` objects.\n+\n+#if defined WIN32 && defined __GLIBCXX__\n+    class ifstream : public std::istream\n+    {\n+    public:\n+        ifstream() = default;\n+        explicit ifstream(const fs::path& p, std::ios_base::openmode mode = std::ios_base::in) { open(p, mode); }\n+        ~ifstream() { close(); }\n+        void open(const fs::path& p, std::ios_base::openmode mode = std::ios_base::in);\n+        bool is_open() { return m_filebuf.is_open(); }\n+        void close();\n+\n+    private:\n+        __gnu_cxx::stdio_filebuf<char> m_filebuf;\n+        FILE* m_file = nullptr;\n+    };\n+    class ofstream : public std::ostream\n+    {\n+    public:\n+        ofstream() = default;\n+        explicit ofstream(const fs::path& p, std::ios_base::openmode mode = std::ios_base::out) { open(p, mode); }\n+        ~ofstream() { close(); }\n+        void open(const fs::path& p, std::ios_base::openmode mode = std::ios_base::out);\n+        bool is_open() { return m_filebuf.is_open(); }\n+        void close();\n+\n+    private:\n+        __gnu_cxx::stdio_filebuf<char> m_filebuf;\n+        FILE* m_file = nullptr;\n+    };\n+#else  // !(WIN32 && __GLIBCXX__)\n+    typedef fs::ifstream ifstream;\n+    typedef fs::ofstream ofstream;\n+#endif // WIN32 && __GLIBCXX__\n };\n \n #endif // BITCOIN_FS_H"
      },
      {
        "sha": "26150e5ca8aaa0f5f42b820a7d4e12f12617bacc",
        "filename": "src/hash.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 168,
        "changes": 168,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -77,171 +77,3 @@ void BIP32Hash(const ChainCode &chainCode, unsigned int nChild, unsigned char he\n     num[3] = (nChild >>  0) & 0xFF;\n     CHMAC_SHA512(chainCode.begin(), chainCode.size()).Write(&header, 1).Write(data, 32).Write(num, 4).Finalize(output);\n }\n-\n-#define ROTL(x, b) (uint64_t)(((x) << (b)) | ((x) >> (64 - (b))))\n-\n-#define SIPROUND do { \\\n-    v0 += v1; v1 = ROTL(v1, 13); v1 ^= v0; \\\n-    v0 = ROTL(v0, 32); \\\n-    v2 += v3; v3 = ROTL(v3, 16); v3 ^= v2; \\\n-    v0 += v3; v3 = ROTL(v3, 21); v3 ^= v0; \\\n-    v2 += v1; v1 = ROTL(v1, 17); v1 ^= v2; \\\n-    v2 = ROTL(v2, 32); \\\n-} while (0)\n-\n-CSipHasher::CSipHasher(uint64_t k0, uint64_t k1)\n-{\n-    v[0] = 0x736f6d6570736575ULL ^ k0;\n-    v[1] = 0x646f72616e646f6dULL ^ k1;\n-    v[2] = 0x6c7967656e657261ULL ^ k0;\n-    v[3] = 0x7465646279746573ULL ^ k1;\n-    count = 0;\n-    tmp = 0;\n-}\n-\n-CSipHasher& CSipHasher::Write(uint64_t data)\n-{\n-    uint64_t v0 = v[0], v1 = v[1], v2 = v[2], v3 = v[3];\n-\n-    assert(count % 8 == 0);\n-\n-    v3 ^= data;\n-    SIPROUND;\n-    SIPROUND;\n-    v0 ^= data;\n-\n-    v[0] = v0;\n-    v[1] = v1;\n-    v[2] = v2;\n-    v[3] = v3;\n-\n-    count += 8;\n-    return *this;\n-}\n-\n-CSipHasher& CSipHasher::Write(const unsigned char* data, size_t size)\n-{\n-    uint64_t v0 = v[0], v1 = v[1], v2 = v[2], v3 = v[3];\n-    uint64_t t = tmp;\n-    int c = count;\n-\n-    while (size--) {\n-        t |= ((uint64_t)(*(data++))) << (8 * (c % 8));\n-        c++;\n-        if ((c & 7) == 0) {\n-            v3 ^= t;\n-            SIPROUND;\n-            SIPROUND;\n-            v0 ^= t;\n-            t = 0;\n-        }\n-    }\n-\n-    v[0] = v0;\n-    v[1] = v1;\n-    v[2] = v2;\n-    v[3] = v3;\n-    count = c;\n-    tmp = t;\n-\n-    return *this;\n-}\n-\n-uint64_t CSipHasher::Finalize() const\n-{\n-    uint64_t v0 = v[0], v1 = v[1], v2 = v[2], v3 = v[3];\n-\n-    uint64_t t = tmp | (((uint64_t)count) << 56);\n-\n-    v3 ^= t;\n-    SIPROUND;\n-    SIPROUND;\n-    v0 ^= t;\n-    v2 ^= 0xFF;\n-    SIPROUND;\n-    SIPROUND;\n-    SIPROUND;\n-    SIPROUND;\n-    return v0 ^ v1 ^ v2 ^ v3;\n-}\n-\n-uint64_t SipHashUint256(uint64_t k0, uint64_t k1, const uint256& val)\n-{\n-    /* Specialized implementation for efficiency */\n-    uint64_t d = val.GetUint64(0);\n-\n-    uint64_t v0 = 0x736f6d6570736575ULL ^ k0;\n-    uint64_t v1 = 0x646f72616e646f6dULL ^ k1;\n-    uint64_t v2 = 0x6c7967656e657261ULL ^ k0;\n-    uint64_t v3 = 0x7465646279746573ULL ^ k1 ^ d;\n-\n-    SIPROUND;\n-    SIPROUND;\n-    v0 ^= d;\n-    d = val.GetUint64(1);\n-    v3 ^= d;\n-    SIPROUND;\n-    SIPROUND;\n-    v0 ^= d;\n-    d = val.GetUint64(2);\n-    v3 ^= d;\n-    SIPROUND;\n-    SIPROUND;\n-    v0 ^= d;\n-    d = val.GetUint64(3);\n-    v3 ^= d;\n-    SIPROUND;\n-    SIPROUND;\n-    v0 ^= d;\n-    v3 ^= ((uint64_t)4) << 59;\n-    SIPROUND;\n-    SIPROUND;\n-    v0 ^= ((uint64_t)4) << 59;\n-    v2 ^= 0xFF;\n-    SIPROUND;\n-    SIPROUND;\n-    SIPROUND;\n-    SIPROUND;\n-    return v0 ^ v1 ^ v2 ^ v3;\n-}\n-\n-uint64_t SipHashUint256Extra(uint64_t k0, uint64_t k1, const uint256& val, uint32_t extra)\n-{\n-    /* Specialized implementation for efficiency */\n-    uint64_t d = val.GetUint64(0);\n-\n-    uint64_t v0 = 0x736f6d6570736575ULL ^ k0;\n-    uint64_t v1 = 0x646f72616e646f6dULL ^ k1;\n-    uint64_t v2 = 0x6c7967656e657261ULL ^ k0;\n-    uint64_t v3 = 0x7465646279746573ULL ^ k1 ^ d;\n-\n-    SIPROUND;\n-    SIPROUND;\n-    v0 ^= d;\n-    d = val.GetUint64(1);\n-    v3 ^= d;\n-    SIPROUND;\n-    SIPROUND;\n-    v0 ^= d;\n-    d = val.GetUint64(2);\n-    v3 ^= d;\n-    SIPROUND;\n-    SIPROUND;\n-    v0 ^= d;\n-    d = val.GetUint64(3);\n-    v3 ^= d;\n-    SIPROUND;\n-    SIPROUND;\n-    v0 ^= d;\n-    d = (((uint64_t)36) << 56) | extra;\n-    v3 ^= d;\n-    SIPROUND;\n-    SIPROUND;\n-    v0 ^= d;\n-    v2 ^= 0xFF;\n-    SIPROUND;\n-    SIPROUND;\n-    SIPROUND;\n-    SIPROUND;\n-    return v0 ^ v1 ^ v2 ^ v3;\n-}"
      },
      {
        "sha": "6acab0b1610dfae19e30905a5a40a7a7b7223f50",
        "filename": "src/hash.h",
        "status": "modified",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -194,39 +194,4 @@ unsigned int MurmurHash3(unsigned int nHashSeed, const std::vector<unsigned char\n \n void BIP32Hash(const ChainCode &chainCode, unsigned int nChild, unsigned char header, const unsigned char data[32], unsigned char output[64]);\n \n-/** SipHash-2-4 */\n-class CSipHasher\n-{\n-private:\n-    uint64_t v[4];\n-    uint64_t tmp;\n-    int count;\n-\n-public:\n-    /** Construct a SipHash calculator initialized with 128-bit key (k0, k1) */\n-    CSipHasher(uint64_t k0, uint64_t k1);\n-    /** Hash a 64-bit integer worth of data\n-     *  It is treated as if this was the little-endian interpretation of 8 bytes.\n-     *  This function can only be used when a multiple of 8 bytes have been written so far.\n-     */\n-    CSipHasher& Write(uint64_t data);\n-    /** Hash arbitrary bytes. */\n-    CSipHasher& Write(const unsigned char* data, size_t size);\n-    /** Compute the 64-bit SipHash-2-4 of the data written so far. The object remains untouched. */\n-    uint64_t Finalize() const;\n-};\n-\n-/** Optimized SipHash-2-4 implementation for uint256.\n- *\n- *  It is identical to:\n- *    SipHasher(k0, k1)\n- *      .Write(val.GetUint64(0))\n- *      .Write(val.GetUint64(1))\n- *      .Write(val.GetUint64(2))\n- *      .Write(val.GetUint64(3))\n- *      .Finalize()\n- */\n-uint64_t SipHashUint256(uint64_t k0, uint64_t k1, const uint256& val);\n-uint64_t SipHashUint256Extra(uint64_t k0, uint64_t k1, const uint256& val, uint32_t extra);\n-\n #endif // BITCOIN_HASH_H"
      },
      {
        "sha": "fcf760a4c6fe68878b78aba6c7b2ac811ca46b99",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -11,9 +11,10 @@\n #include <rpc/server.h>\n #include <random.h>\n #include <sync.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n #include <ui_interface.h>\n+#include <walletinitinterface.h>\n #include <crypto/hmac_sha256.h>\n #include <stdio.h>\n \n@@ -30,7 +31,7 @@ static const char* WWW_AUTH_HEADER_DATA = \"Basic realm=\\\"jsonrpc\\\"\";\n class HTTPRPCTimer : public RPCTimerBase\n {\n public:\n-    HTTPRPCTimer(struct event_base* eventBase, std::function<void(void)>& func, int64_t millis) :\n+    HTTPRPCTimer(struct event_base* eventBase, std::function<void()>& func, int64_t millis) :\n         ev(eventBase, false, func)\n     {\n         struct timeval tv;\n@@ -52,7 +53,7 @@ class HTTPRPCTimerInterface : public RPCTimerInterface\n     {\n         return \"HTTP\";\n     }\n-    RPCTimerBase* NewTimer(std::function<void(void)>& func, int64_t millis) override\n+    RPCTimerBase* NewTimer(std::function<void()>& func, int64_t millis) override\n     {\n         return new HTTPRPCTimer(base, func, millis);\n     }\n@@ -240,10 +241,9 @@ bool StartHTTPRPC()\n         return false;\n \n     RegisterHTTPHandler(\"/\", true, HTTPReq_JSONRPC);\n-#ifdef ENABLE_WALLET\n-    // ifdef can be removed once we switch to better endpoint support and API versioning\n-    RegisterHTTPHandler(\"/wallet/\", false, HTTPReq_JSONRPC);\n-#endif\n+    if (g_wallet_init_interface.HasWalletSupport()) {\n+        RegisterHTTPHandler(\"/wallet/\", false, HTTPReq_JSONRPC);\n+    }\n     struct event_base* eventBase = EventBase();\n     assert(eventBase);\n     httpRPCTimerInterface = MakeUnique<HTTPRPCTimerInterface>(eventBase);\n@@ -260,9 +260,9 @@ void StopHTTPRPC()\n {\n     LogPrint(BCLog::RPC, \"Stopping HTTP RPC server\\n\");\n     UnregisterHTTPHandler(\"/\", true);\n-#ifdef ENABLE_WALLET\n-    UnregisterHTTPHandler(\"/wallet/\", false);\n-#endif\n+    if (g_wallet_init_interface.HasWalletSupport()) {\n+        UnregisterHTTPHandler(\"/wallet/\", false);\n+    }\n     if (httpRPCTimerInterface) {\n         RPCUnsetTimerInterface(httpRPCTimerInterface.get());\n         httpRPCTimerInterface.reset();"
      },
      {
        "sha": "00434169cd2a5a6932dca970cd0434bec64f7199",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 29,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -6,8 +6,8 @@\n \n #include <chainparamsbase.h>\n #include <compat.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n #include <netbase.h>\n #include <rpc/protocol.h> // For HTTP status codes\n #include <sync.h>\n@@ -69,7 +69,7 @@ class WorkQueue\n {\n private:\n     /** Mutex protects entire object */\n-    std::mutex cs;\n+    Mutex cs;\n     std::condition_variable cond;\n     std::deque<std::unique_ptr<WorkItem>> queue;\n     bool running;\n@@ -88,7 +88,7 @@ class WorkQueue\n     /** Enqueue a work item */\n     bool Enqueue(WorkItem* item)\n     {\n-        std::unique_lock<std::mutex> lock(cs);\n+        LOCK(cs);\n         if (queue.size() >= maxDepth) {\n             return false;\n         }\n@@ -102,7 +102,7 @@ class WorkQueue\n         while (true) {\n             std::unique_ptr<WorkItem> i;\n             {\n-                std::unique_lock<std::mutex> lock(cs);\n+                WAIT_LOCK(cs, lock);\n                 while (running && queue.empty())\n                     cond.wait(lock);\n                 if (!running)\n@@ -116,7 +116,7 @@ class WorkQueue\n     /** Interrupt and exit loops */\n     void Interrupt()\n     {\n-        std::unique_lock<std::mutex> lock(cs);\n+        LOCK(cs);\n         running = false;\n         cond.notify_all();\n     }\n@@ -224,21 +224,25 @@ static void http_request_cb(struct evhttp_request* req, void* arg)\n     }\n     std::unique_ptr<HTTPRequest> hreq(new HTTPRequest(req));\n \n-    LogPrint(BCLog::HTTP, \"Received a %s request for %s from %s\\n\",\n-             RequestMethodString(hreq->GetRequestMethod()), hreq->GetURI(), hreq->GetPeer().ToString());\n-\n     // Early address-based allow check\n     if (!ClientAllowed(hreq->GetPeer())) {\n+        LogPrint(BCLog::HTTP, \"HTTP request from %s rejected: Client network is not allowed RPC access\\n\",\n+                 hreq->GetPeer().ToString());\n         hreq->WriteReply(HTTP_FORBIDDEN);\n         return;\n     }\n \n     // Early reject unknown HTTP methods\n     if (hreq->GetRequestMethod() == HTTPRequest::UNKNOWN) {\n+        LogPrint(BCLog::HTTP, \"HTTP request from %s rejected: Unknown HTTP request method\\n\",\n+                 hreq->GetPeer().ToString());\n         hreq->WriteReply(HTTP_BADMETHOD);\n         return;\n     }\n \n+    LogPrint(BCLog::HTTP, \"Received a %s request for %s from %s\\n\",\n+             RequestMethodString(hreq->GetRequestMethod()), SanitizeString(hreq->GetURI(), SAFE_CHARS_URI).substr(0, 100), hreq->GetPeer().ToString());\n+\n     // Find registered handler for prefix\n     std::string strURI = hreq->GetURI();\n     std::string path;\n@@ -292,33 +296,37 @@ static bool ThreadHTTP(struct event_base* base)\n /** Bind HTTP server to specified addresses */\n static bool HTTPBindAddresses(struct evhttp* http)\n {\n-    int defaultPort = gArgs.GetArg(\"-rpcport\", BaseParams().RPCPort());\n+    int http_port = gArgs.GetArg(\"-rpcport\", BaseParams().RPCPort());\n     std::vector<std::pair<std::string, uint16_t> > endpoints;\n \n     // Determine what addresses to bind to\n-    if (!gArgs.IsArgSet(\"-rpcallowip\")) { // Default to loopback if not allowing external IPs\n-        endpoints.push_back(std::make_pair(\"::1\", defaultPort));\n-        endpoints.push_back(std::make_pair(\"127.0.0.1\", defaultPort));\n+    if (!(gArgs.IsArgSet(\"-rpcallowip\") && gArgs.IsArgSet(\"-rpcbind\"))) { // Default to loopback if not allowing external IPs\n+        endpoints.push_back(std::make_pair(\"::1\", http_port));\n+        endpoints.push_back(std::make_pair(\"127.0.0.1\", http_port));\n+        if (gArgs.IsArgSet(\"-rpcallowip\")) {\n+            LogPrintf(\"WARNING: option -rpcallowip was specified without -rpcbind; this doesn't usually make sense\\n\");\n+        }\n         if (gArgs.IsArgSet(\"-rpcbind\")) {\n             LogPrintf(\"WARNING: option -rpcbind was ignored because -rpcallowip was not specified, refusing to allow everyone to connect\\n\");\n         }\n     } else if (gArgs.IsArgSet(\"-rpcbind\")) { // Specific bind address\n         for (const std::string& strRPCBind : gArgs.GetArgs(\"-rpcbind\")) {\n-            int port = defaultPort;\n+            int port = http_port;\n             std::string host;\n             SplitHostPort(strRPCBind, port, host);\n             endpoints.push_back(std::make_pair(host, port));\n         }\n-    } else { // No specific bind address specified, bind to any\n-        endpoints.push_back(std::make_pair(\"::\", defaultPort));\n-        endpoints.push_back(std::make_pair(\"0.0.0.0\", defaultPort));\n     }\n \n     // Bind addresses\n     for (std::vector<std::pair<std::string, uint16_t> >::iterator i = endpoints.begin(); i != endpoints.end(); ++i) {\n         LogPrint(BCLog::HTTP, \"Binding RPC on address %s port %i\\n\", i->first, i->second);\n         evhttp_bound_socket *bind_handle = evhttp_bind_socket_with_handle(http, i->first.empty() ? nullptr : i->first.c_str(), i->second);\n         if (bind_handle) {\n+            CNetAddr addr;\n+            if (i->first.empty() || (LookupHost(i->first.c_str(), addr, false) && addr.IsBindAny())) {\n+                LogPrintf(\"WARNING: the RPC server is not safe to expose to untrusted networks such as the public internet\\n\");\n+            }\n             boundSockets.push_back(bind_handle);\n         } else {\n             LogPrintf(\"Binding RPC on address %s port %i failed.\\n\", i->first, i->second);\n@@ -352,13 +360,6 @@ bool InitHTTPServer()\n     if (!InitHTTPAllowList())\n         return false;\n \n-    if (gArgs.GetBoolArg(\"-rpcssl\", false)) {\n-        uiInterface.ThreadSafeMessageBox(\n-            \"SSL mode for RPC (-rpcssl) is no longer supported.\",\n-            \"\", CClientUIInterface::MSG_ERROR);\n-        return false;\n-    }\n-\n     // Redirect libevent's logging to our own log\n     event_set_log_callback(&libevent_log_cb);\n     // Update libevent's log handling. Returns false if our version of\n@@ -505,7 +506,7 @@ static void httpevent_callback_fn(evutil_socket_t, short, void* data)\n         delete self;\n }\n \n-HTTPEvent::HTTPEvent(struct event_base* base, bool _deleteWhenTriggered, const std::function<void(void)>& _handler):\n+HTTPEvent::HTTPEvent(struct event_base* base, bool _deleteWhenTriggered, const std::function<void()>& _handler):\n     deleteWhenTriggered(_deleteWhenTriggered), handler(_handler)\n {\n     ev = event_new(base, -1, 0, httpevent_callback_fn, this);\n@@ -536,7 +537,7 @@ HTTPRequest::~HTTPRequest()\n     // evhttpd cleans up the request, as long as a reply was sent.\n }\n \n-std::pair<bool, std::string> HTTPRequest::GetHeader(const std::string& hdr)\n+std::pair<bool, std::string> HTTPRequest::GetHeader(const std::string& hdr) const\n {\n     const struct evkeyvalq* headers = evhttp_request_get_input_headers(req);\n     assert(headers);\n@@ -606,7 +607,7 @@ void HTTPRequest::WriteReply(int nStatus, const std::string& strReply)\n     req = nullptr; // transferred back to main thread\n }\n \n-CService HTTPRequest::GetPeer()\n+CService HTTPRequest::GetPeer() const\n {\n     evhttp_connection* con = evhttp_request_get_connection(req);\n     CService peer;\n@@ -620,12 +621,12 @@ CService HTTPRequest::GetPeer()\n     return peer;\n }\n \n-std::string HTTPRequest::GetURI()\n+std::string HTTPRequest::GetURI() const\n {\n     return evhttp_request_get_uri(req);\n }\n \n-HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod()\n+HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod() const\n {\n     switch (evhttp_request_get_command(req)) {\n     case EVHTTP_REQ_GET:"
      },
      {
        "sha": "63f96734f8e3f911aa06107369596156de84b6e8",
        "filename": "src/httpserver.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -74,21 +74,21 @@ class HTTPRequest\n \n     /** Get requested URI.\n      */\n-    std::string GetURI();\n+    std::string GetURI() const;\n \n     /** Get CService (address:ip) for the origin of the http request.\n      */\n-    CService GetPeer();\n+    CService GetPeer() const;\n \n     /** Get request method.\n      */\n-    RequestMethod GetRequestMethod();\n+    RequestMethod GetRequestMethod() const;\n \n     /**\n      * Get the request header specified by hdr, or an empty string.\n      * Return a pair (isPresent,string).\n      */\n-    std::pair<bool, std::string> GetHeader(const std::string& hdr);\n+    std::pair<bool, std::string> GetHeader(const std::string& hdr) const;\n \n     /**\n      * Read request body.\n@@ -134,7 +134,7 @@ class HTTPEvent\n      * deleteWhenTriggered deletes this event object after the event is triggered (and the handler called)\n      * handler is the handler to call when the event is triggered.\n      */\n-    HTTPEvent(struct event_base* base, bool deleteWhenTriggered, const std::function<void(void)>& handler);\n+    HTTPEvent(struct event_base* base, bool deleteWhenTriggered, const std::function<void()>& handler);\n     ~HTTPEvent();\n \n     /** Trigger the event. If tv is 0, trigger it immediately. Otherwise trigger it after\n@@ -143,7 +143,7 @@ class HTTPEvent\n     void trigger(struct timeval* tv);\n \n     bool deleteWhenTriggered;\n-    std::function<void(void)> handler;\n+    std::function<void()> handler;\n private:\n     struct event* ev;\n };"
      },
      {
        "sha": "4d4a7e1502336832e2e3beee7d60de5be539f393",
        "filename": "src/index/base.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/index/base.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/index/base.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -7,7 +7,7 @@\n #include <shutdown.h>\n #include <tinyformat.h>\n #include <ui_interface.h>\n-#include <util.h>\n+#include <util/system.h>\n #include <validation.h>\n #include <warnings.h>\n \n@@ -65,7 +65,7 @@ bool BaseIndex::Init()\n     return true;\n }\n \n-static const CBlockIndex* NextSyncBlock(const CBlockIndex* pindex_prev)\n+static const CBlockIndex* NextSyncBlock(const CBlockIndex* pindex_prev) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n     AssertLockHeld(cs_main);\n "
      },
      {
        "sha": "ba1c44765f0db9185a577db2e726920535275aeb",
        "filename": "src/index/txindex.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/index/txindex.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/index/txindex.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/txindex.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -5,7 +5,7 @@\n #include <index/txindex.h>\n #include <shutdown.h>\n #include <ui_interface.h>\n-#include <util.h>\n+#include <util/system.h>\n #include <validation.h>\n \n #include <boost/thread.hpp>\n@@ -250,7 +250,7 @@ bool TxIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n     vPos.reserve(block.vtx.size());\n     for (const auto& tx : block.vtx) {\n         vPos.emplace_back(tx->GetHash(), pos);\n-        pos.nTxOffset += ::GetSerializeSize(*tx, SER_DISK, CLIENT_VERSION);\n+        pos.nTxOffset += ::GetSerializeSize(*tx, CLIENT_VERSION);\n     }\n     return m_db->WriteTxs(vPos);\n }"
      },
      {
        "sha": "31212a355b52e6818024c2c58f982b57464d05fa",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 100,
        "deletions": 117,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -19,6 +19,7 @@\n #include <fs.h>\n #include <httpserver.h>\n #include <httprpc.h>\n+#include <interfaces/chain.h>\n #include <index/txindex.h>\n #include <key.h>\n #include <validation.h>\n@@ -32,6 +33,7 @@\n #include <rpc/server.h>\n #include <rpc/register.h>\n #include <rpc/blockchain.h>\n+#include <rpc/util.h>\n #include <script/standard.h>\n #include <script/sigcache.h>\n #include <scheduler.h>\n@@ -41,8 +43,8 @@\n #include <txmempool.h>\n #include <torcontrol.h>\n #include <ui_interface.h>\n-#include <util.h>\n-#include <utilmoneystr.h>\n+#include <util/system.h>\n+#include <util/moneystr.h>\n #include <validationinterface.h>\n #include <warnings.h>\n #include <walletinitinterface.h>\n@@ -51,17 +53,18 @@\n \n #ifndef WIN32\n #include <signal.h>\n+#include <sys/stat.h>\n #endif\n \n #include <boost/algorithm/string/classification.hpp>\n #include <boost/algorithm/string/replace.hpp>\n #include <boost/algorithm/string/split.hpp>\n #include <boost/bind.hpp>\n-#include <boost/interprocess/sync/file_lock.hpp>\n #include <boost/thread.hpp>\n #include <openssl/crypto.h>\n \n #if ENABLE_ZMQ\n+#include <zmq/zmqabstractnotifier.h>\n #include <zmq/zmqnotificationinterface.h>\n #include <zmq/zmqrpc.h>\n #endif\n@@ -74,33 +77,6 @@ static const bool DEFAULT_STOPAFTERBLOCKIMPORT = false;\n std::unique_ptr<CConnman> g_connman;\n std::unique_ptr<PeerLogicValidation> peerLogic;\n \n-#if !(ENABLE_WALLET)\n-class DummyWalletInit : public WalletInitInterface {\n-public:\n-\n-    void AddWalletOptions() const override;\n-    bool ParameterInteraction() const override {return true;}\n-    void RegisterRPC(CRPCTable &) const override {}\n-    bool Verify() const override {return true;}\n-    bool Open() const override {LogPrintf(\"No wallet support compiled in!\\n\"); return true;}\n-    void Start(CScheduler& scheduler) const override {}\n-    void Flush() const override {}\n-    void Stop() const override {}\n-    void Close() const override {}\n-};\n-\n-void DummyWalletInit::AddWalletOptions() const\n-{\n-    std::vector<std::string> opts = {\"-addresstype\", \"-changetype\", \"-disablewallet\", \"-discardfee=<amt>\", \"-fallbackfee=<amt>\",\n-        \"-keypool=<n>\", \"-mintxfee=<amt>\", \"-paytxfee=<amt>\", \"-rescan\", \"-salvagewallet\", \"-spendzeroconfchange\",  \"-txconfirmtarget=<n>\",\n-        \"-upgradewallet\", \"-wallet=<path>\", \"-walletbroadcast\", \"-walletdir=<dir>\", \"-walletnotify=<cmd>\", \"-walletrbf\", \"-zapwallettxes=<mode>\",\n-        \"-dblogsize=<n>\", \"-flushwallet\", \"-privdb\", \"-walletrejectlongchains\"};\n-    gArgs.AddHiddenArgs(opts);\n-}\n-\n-const WalletInitInterface& g_wallet_init_interface = DummyWalletInit();\n-#endif\n-\n #ifdef WIN32\n // Win32 LevelDB doesn't use filedescriptors, and the ones used for\n // accessing block files don't count towards the fd_set size limit\n@@ -183,7 +159,7 @@ void Interrupt()\n     }\n }\n \n-void Shutdown()\n+void Shutdown(InitInterfaces& interfaces)\n {\n     LogPrintf(\"%s: In progress...\\n\", __func__);\n     static CCriticalSection cs_Shutdown;\n@@ -202,7 +178,9 @@ void Shutdown()\n     StopREST();\n     StopRPC();\n     StopHTTPServer();\n-    g_wallet_init_interface.Flush();\n+    for (const auto& client : interfaces.chain_clients) {\n+        client->flush();\n+    }\n     StopMapPort();\n \n     // Because these depend on each-other, we make sure that neither can be\n@@ -265,7 +243,9 @@ void Shutdown()\n         pcoinsdbview.reset();\n         pblocktree.reset();\n     }\n-    g_wallet_init_interface.Stop();\n+    for (const auto& client : interfaces.chain_clients) {\n+        client->stop();\n+    }\n \n #if ENABLE_ZMQ\n     if (g_zmq_notification_interface) {\n@@ -285,7 +265,7 @@ void Shutdown()\n     UnregisterAllValidationInterfaces();\n     GetMainSignals().UnregisterBackgroundSignalScheduler();\n     GetMainSignals().UnregisterWithMempoolSignals(mempool);\n-    g_wallet_init_interface.Close();\n+    interfaces.chain_clients.clear();\n     globalVerifyHandle.reset();\n     ECC_Stop();\n     LogPrintf(\"%s: done\\n\", __func__);\n@@ -343,12 +323,14 @@ void SetupServerArgs()\n {\n     const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n     const auto testnetBaseParams = CreateBaseChainParams(CBaseChainParams::TESTNET);\n+    const auto regtestBaseParams = CreateBaseChainParams(CBaseChainParams::REGTEST);\n     const auto defaultChainParams = CreateChainParams(CBaseChainParams::MAIN);\n     const auto testnetChainParams = CreateChainParams(CBaseChainParams::TESTNET);\n+    const auto regtestChainParams = CreateChainParams(CBaseChainParams::REGTEST);\n \n     // Hidden Options\n-    std::vector<std::string> hidden_args = {\"-rpcssl\", \"-benchmark\", \"-h\", \"-help\", \"-socks\", \"-tor\", \"-debugnet\", \"-whitelistalwaysrelay\",\n-        \"-prematurewitness\", \"-walletprematurewitness\", \"-promiscuousmempoolflags\", \"-blockminsize\", \"-dbcrashratio\", \"-forcecompactdb\", \"-usehd\",\n+    std::vector<std::string> hidden_args = {\"-h\", \"-help\",\n+        \"-dbcrashratio\", \"-forcecompactdb\",\n         // GUI args. These will be overwritten by SetupUIArgs for the GUI\n         \"-allowselfsignedrootcertificates\", \"-choosedatadir\", \"-lang=<lang>\", \"-min\", \"-resetguisettings\", \"-rootcertificates=<file>\", \"-splash\", \"-uiplatform\"};\n \n@@ -366,7 +348,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize), true, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-dbcache=<n>\", strprintf(\"Set database cache size in megabytes (%d to %d, default: %d)\", nMinDbCache, nMaxDbCache, nDefaultDbCache), false, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-debuglogfile=<file>\", strprintf(\"Specify location of debug log file. Relative paths will be prefixed by a net-specific datadir location. (0 to disable; default: %s)\", DEFAULT_DEBUGLOGFILE), false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-debuglogfile=<file>\", strprintf(\"Specify location of debug log file. Relative paths will be prefixed by a net-specific datadir location. (-nodebuglogfile to disable; default: %s)\", DEFAULT_DEBUGLOGFILE), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-feefilter\", strprintf(\"Tell other nodes to filter invs to us by our mempool min fee (default: %u)\", DEFAULT_FEEFILTER), true, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-includeconf=<file>\", \"Specify additional configuration file, relative to the -datadir path (only useable from configuration file, not command line)\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-loadblock=<file>\", \"Imports blocks from external blk000??.dat file on startup\", false, OptionsCategory::OPTIONS);\n@@ -386,7 +368,7 @@ void SetupServerArgs()\n             \"Warning: Reverting this setting requires re-downloading the entire blockchain. \"\n             \"(default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, >=%u = automatically prune block files to stay under the specified target size in MiB)\", MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-reindex\", \"Rebuild chain state and block index from the blk*.dat files on disk\", false, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-reindex-chainstate\", \"Rebuild chain state from the currently indexed blocks\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-reindex-chainstate\", \"Rebuild chain state from the currently indexed blocks. When in pruning mode or if blocks on disk might be corrupted, use full -reindex instead.\", false, OptionsCategory::OPTIONS);\n #ifndef WIN32\n     gArgs.AddArg(\"-sysperms\", \"Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)\", false, OptionsCategory::OPTIONS);\n #else\n@@ -398,7 +380,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-banscore=<n>\", strprintf(\"Threshold for disconnecting misbehaving peers (default: %u)\", DEFAULT_BANSCORE_THRESHOLD), false, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-bantime=<n>\", strprintf(\"Number of seconds to keep misbehaving peers from reconnecting (default: %u)\", DEFAULT_MISBEHAVING_BANTIME), false, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-bind=<addr>\", \"Bind to given address and always listen on it. Use [host]:port notation for IPv6\", false, OptionsCategory::CONNECTION);\n-    gArgs.AddArg(\"-connect=<ip>\", \"Connect only to the specified node; -connect=0 disables automatic connections (the rules for this peer are the same as for -addnode). This option can be specified multiple times to connect to multiple nodes.\", false, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-connect=<ip>\", \"Connect only to the specified node; -noconnect disables automatic connections (the rules for this peer are the same as for -addnode). This option can be specified multiple times to connect to multiple nodes.\", false, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-discover\", \"Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)\", false, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-dns\", strprintf(\"Allow DNS lookups for -addnode, -seednode and -connect (default: %u)\", DEFAULT_NAME_LOOKUP), false, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-dnsseed\", \"Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect used)\", false, OptionsCategory::CONNECTION);\n@@ -412,12 +394,12 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-maxsendbuffer=<n>\", strprintf(\"Maximum per-connection send buffer, <n>*1000 bytes (default: %u)\", DEFAULT_MAXSENDBUFFER), false, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-maxtimeadjustment\", strprintf(\"Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by peers forward or backward by this amount. (default: %u seconds)\", DEFAULT_MAX_TIME_ADJUSTMENT), false, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-maxuploadtarget=<n>\", strprintf(\"Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: %d)\", DEFAULT_MAX_UPLOAD_TARGET), false, OptionsCategory::CONNECTION);\n-    gArgs.AddArg(\"-onion=<ip:port>\", \"Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)\", false, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-onion=<ip:port>\", \"Use separate SOCKS5 proxy to reach peers via Tor hidden services, set -noonion to disable (default: -proxy)\", false, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-onlynet=<net>\", \"Make outgoing connections only through network <net> (ipv4, ipv6 or onion). Incoming connections are not affected by this option. This option can be specified multiple times to allow multiple networks.\", false, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-peerbloomfilters\", strprintf(\"Support filtering of blocks and transaction with bloom filters (default: %u)\", DEFAULT_PEERBLOOMFILTERS), false, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-permitbaremultisig\", strprintf(\"Relay non-P2SH multisig (default: %u)\", DEFAULT_PERMIT_BAREMULTISIG), false, OptionsCategory::CONNECTION);\n-    gArgs.AddArg(\"-port=<port>\", strprintf(\"Listen for connections on <port> (default: %u or testnet: %u)\", defaultChainParams->GetDefaultPort(), testnetChainParams->GetDefaultPort()), false, OptionsCategory::CONNECTION);\n-    gArgs.AddArg(\"-proxy=<ip:port>\", \"Connect through SOCKS5 proxy\", false, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-port=<port>\", strprintf(\"Listen for connections on <port> (default: %u, testnet: %u, regtest: %u)\", defaultChainParams->GetDefaultPort(), testnetChainParams->GetDefaultPort(), regtestChainParams->GetDefaultPort()), false, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-proxy=<ip:port>\", \"Connect through SOCKS5 proxy, set -noproxy to disable (default: disabled)\", false, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-proxyrandomize\", strprintf(\"Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)\", DEFAULT_PROXYRANDOMIZE), false, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-seednode=<ip>\", \"Connect to a node to retrieve peer addresses, and disconnect. This option can be specified multiple times to connect to multiple nodes.\", false, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-timeout=<n>\", strprintf(\"Specify connection timeout in milliseconds (minimum: 1, default: %d)\", DEFAULT_CONNECT_TIMEOUT), false, OptionsCategory::CONNECTION);\n@@ -443,17 +425,32 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-zmqpubhashtx=<address>\", \"Enable publish hash transaction in <address>\", false, OptionsCategory::ZMQ);\n     gArgs.AddArg(\"-zmqpubrawblock=<address>\", \"Enable publish raw block in <address>\", false, OptionsCategory::ZMQ);\n     gArgs.AddArg(\"-zmqpubrawtx=<address>\", \"Enable publish raw transaction in <address>\", false, OptionsCategory::ZMQ);\n+    gArgs.AddArg(\"-zmqpubhashblockhwm=<n>\", strprintf(\"Set publish hash block outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), false, OptionsCategory::ZMQ);\n+    gArgs.AddArg(\"-zmqpubhashtxhwm=<n>\", strprintf(\"Set publish hash transaction outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), false, OptionsCategory::ZMQ);\n+    gArgs.AddArg(\"-zmqpubrawblockhwm=<n>\", strprintf(\"Set publish raw block outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), false, OptionsCategory::ZMQ);\n+    gArgs.AddArg(\"-zmqpubrawtxhwm=<n>\", strprintf(\"Set publish raw transaction outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), false, OptionsCategory::ZMQ);\n #else\n     hidden_args.emplace_back(\"-zmqpubhashblock=<address>\");\n     hidden_args.emplace_back(\"-zmqpubhashtx=<address>\");\n     hidden_args.emplace_back(\"-zmqpubrawblock=<address>\");\n     hidden_args.emplace_back(\"-zmqpubrawtx=<address>\");\n+    hidden_args.emplace_back(\"-zmqpubhashblockhwm=<n>\");\n+    hidden_args.emplace_back(\"-zmqpubhashtxhwm=<n>\");\n+    hidden_args.emplace_back(\"-zmqpubrawblockhwm=<n>\");\n+    hidden_args.emplace_back(\"-zmqpubrawtxhwm=<n>\");\n #endif\n \n     gArgs.AddArg(\"-checkblocks=<n>\", strprintf(\"How many blocks to check at startup (default: %u, 0 = all)\", DEFAULT_CHECKBLOCKS), true, OptionsCategory::DEBUG_TEST);\n-    gArgs.AddArg(\"-checklevel=<n>\", strprintf(\"How thorough the block verification of -checkblocks is (0-4, default: %u)\", DEFAULT_CHECKLEVEL), true, OptionsCategory::DEBUG_TEST);\n-    gArgs.AddArg(\"-checkblockindex\", strprintf(\"Do a full consistency check for mapBlockIndex, setBlockIndexCandidates, chainActive and mapBlocksUnlinked occasionally. (default: %u)\", defaultChainParams->DefaultConsistencyChecks()), true, OptionsCategory::DEBUG_TEST);\n-    gArgs.AddArg(\"-checkmempool=<n>\", strprintf(\"Run checks every <n> transactions (default: %u)\", defaultChainParams->DefaultConsistencyChecks()), true, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-checklevel=<n>\", strprintf(\"How thorough the block verification of -checkblocks is: \"\n+        \"level 0 reads the blocks from disk, \"\n+        \"level 1 verifies block validity, \"\n+        \"level 2 verifies undo data, \"\n+        \"level 3 checks disconnection of tip blocks, \"\n+        \"and level 4 tries to reconnect the blocks, \"\n+        \"each level includes the checks of the previous levels \"\n+        \"(0-4, default: %u)\", DEFAULT_CHECKLEVEL), true, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-checkblockindex\", strprintf(\"Do a full consistency check for mapBlockIndex, setBlockIndexCandidates, chainActive and mapBlocksUnlinked occasionally. (default: %u, regtest: %u)\", defaultChainParams->DefaultConsistencyChecks(), regtestChainParams->DefaultConsistencyChecks()), true, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-checkmempool=<n>\", strprintf(\"Run checks every <n> transactions (default: %u, regtest: %u)\", defaultChainParams->DefaultConsistencyChecks(), regtestChainParams->DefaultConsistencyChecks()), true, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-checkpoints\", strprintf(\"Disable expensive verification for known chain history (default: %u)\", DEFAULT_CHECKPOINTS_ENABLED), true, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-deprecatedrpc=<method>\", \"Allows deprecated RPC method(s) to be used\", true, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-dropmessagestest=<n>\", \"Randomly drop 1 of every <n> network messages\", true, OptionsCategory::DEBUG_TEST);\n@@ -463,12 +460,11 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-limitancestorsize=<n>\", strprintf(\"Do not accept transactions whose size with all in-mempool ancestors exceeds <n> kilobytes (default: %u)\", DEFAULT_ANCESTOR_SIZE_LIMIT), true, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-limitdescendantcount=<n>\", strprintf(\"Do not accept transactions if any ancestor would have <n> or more in-mempool descendants (default: %u)\", DEFAULT_DESCENDANT_LIMIT), true, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT), true, OptionsCategory::DEBUG_TEST);\n-    gArgs.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", true, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-addrmantest\", \"Allows to test address relay on localhost\", true, OptionsCategory::DEBUG_TEST);\n-    gArgs.AddArg(\"-debug=<category>\", strprintf(\"Output debugging information (default: %u, supplying <category> is optional)\", 0) + \". \" +\n+    gArgs.AddArg(\"-debug=<category>\", \"Output debugging information (default: -nodebug, supplying <category> is optional). \"\n         \"If <category> is not supplied or if <category> = 1, output all debugging information. <category> can be: \" + ListLogCategories() + \".\", false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-debugexclude=<category>\", strprintf(\"Exclude debugging information for a category. Can be used in conjunction with -debug=1 to output debug logs for all categories except one or more specified categories.\"), false, OptionsCategory::DEBUG_TEST);\n-    gArgs.AddArg(\"-help-debug\", \"Show all debugging options (usage: --help -help-debug)\", false, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-help-debug\", \"Print help message with debugging options and exit\", false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logips\", strprintf(\"Include IP addresses in debug output (default: %u)\", DEFAULT_LOGIPS), false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logtimestamps\", strprintf(\"Prepend debug output with timestamp (default: %u)\", DEFAULT_LOGTIMESTAMPS), false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS), true, OptionsCategory::DEBUG_TEST);\n@@ -478,7 +474,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-maxtxfee=<amt>\", strprintf(\"Maximum total fees (in %s) to use in a single wallet transaction or raw transaction; setting this too low may abort large transactions (default: %s)\",\n         CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MAXFEE)), false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-printpriority\", strprintf(\"Log transaction fee per kB when mining blocks (default: %u)\", DEFAULT_PRINTPRIORITY), true, OptionsCategory::DEBUG_TEST);\n-    gArgs.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set debuglogfile=0)\", false, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-uacomment=<cmt>\", \"Append comment to the user agent string\", false, OptionsCategory::DEBUG_TEST);\n \n@@ -504,10 +500,10 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-rest\", strprintf(\"Accept public REST requests (default: %u)\", DEFAULT_REST_ENABLE), false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcallowip=<ip>\", \"Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcauth=<userpw>\", \"Username and hashed password for JSON-RPC connections. The field <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A canonical python script is included in share/rpcauth. The client then connects normally using the rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This option can be specified multiple times\", false, OptionsCategory::RPC);\n-    gArgs.AddArg(\"-rpcbind=<addr>[:port]\", \"Bind to given address to listen for JSON-RPC connections. This option is ignored unless -rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6. This option can be specified multiple times (default: 127.0.0.1 and ::1 i.e., localhost, or if -rpcallowip has been specified, 0.0.0.0 and :: i.e., all addresses)\", false, OptionsCategory::RPC);\n+    gArgs.AddArg(\"-rpcbind=<addr>[:port]\", \"Bind to given address to listen for JSON-RPC connections. Do not expose the RPC server to untrusted networks such as the public internet! This option is ignored unless -rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6. This option can be specified multiple times (default: 127.0.0.1 and ::1 i.e., localhost)\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpccookiefile=<loc>\", \"Location of the auth cookie. Relative paths will be prefixed by a net-specific datadir location. (default: data dir)\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcpassword=<pw>\", \"Password for JSON-RPC connections\", false, OptionsCategory::RPC);\n-    gArgs.AddArg(\"-rpcport=<port>\", strprintf(\"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\", defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort()), false, OptionsCategory::RPC);\n+    gArgs.AddArg(\"-rpcport=<port>\", strprintf(\"Listen for JSON-RPC connections on <port> (default: %u, testnet: %u, regtest: %u)\", defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort(), regtestBaseParams->RPCPort()), false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcserialversion\", strprintf(\"Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)\", DEFAULT_RPC_SERIALIZE_VERSION), false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcservertimeout=<n>\", strprintf(\"Timeout during HTTP requests (default: %d)\", DEFAULT_HTTP_SERVER_TIMEOUT), true, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcthreads=<n>\", strprintf(\"Set the number of threads to service RPC calls (default: %d)\", DEFAULT_HTTP_THREADS), false, OptionsCategory::RPC);\n@@ -561,17 +557,17 @@ static void BlockNotifyCallback(bool initialSync, const CBlockIndex *pBlockIndex\n }\n \n static bool fHaveGenesis = false;\n-static CWaitableCriticalSection cs_GenesisWait;\n-static CConditionVariable condvar_GenesisWait;\n+static Mutex g_genesis_wait_mutex;\n+static std::condition_variable g_genesis_wait_cv;\n \n static void BlockNotifyGenesisWait(bool, const CBlockIndex *pBlockIndex)\n {\n     if (pBlockIndex != nullptr) {\n         {\n-            WaitableLock lock_GenesisWait(cs_GenesisWait);\n+            LOCK(g_genesis_wait_mutex);\n             fHaveGenesis = true;\n         }\n-        condvar_GenesisWait.notify_all();\n+        g_genesis_wait_cv.notify_all();\n     }\n }\n \n@@ -709,7 +705,7 @@ static void ThreadImport(std::vector<fs::path> vImportFiles)\n  *  Ensure that Bitcoin is running in a usable environment with all\n  *  necessary library support.\n  */\n-static bool InitSanityCheck(void)\n+static bool InitSanityCheck()\n {\n     if(!ECC_InitSanityCheck()) {\n         InitError(\"Elliptic curve cryptography sanity check failure. Aborting.\");\n@@ -807,7 +803,15 @@ void InitParameterInteraction()\n     // Warn if network-specific options (-addnode, -connect, etc) are\n     // specified in default section of config file, but not overridden\n     // on the command line or in this network's section of the config file.\n-    gArgs.WarnForSectionOnlyArgs();\n+    std::string network = gArgs.GetChainName();\n+    for (const auto& arg : gArgs.GetUnsuitableSectionOnlyArgs()) {\n+        InitWarning(strprintf(_(\"Config setting for %s only applied on %s network when in [%s] section.\"), arg, network, network));\n+    }\n+\n+    // Warn if unrecognized section name are present in the config file.\n+    for (const auto& section : gArgs.GetUnrecognizedSections()) {\n+        InitWarning(strprintf(_(\"Section [%s] is not recognized.\"), section));\n+    }\n }\n \n static std::string ResolveErrMsg(const char * const optname, const std::string& strBind)\n@@ -979,25 +983,6 @@ bool AppInitParameterInteraction()\n         }\n     }\n \n-    // Check for -debugnet\n-    if (gArgs.GetBoolArg(\"-debugnet\", false))\n-        InitWarning(_(\"Unsupported argument -debugnet ignored, use -debug=net.\"));\n-    // Check for -socks - as this is a privacy risk to continue, exit here\n-    if (gArgs.IsArgSet(\"-socks\"))\n-        return InitError(_(\"Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.\"));\n-    // Check for -tor - as this is a privacy risk to continue, exit here\n-    if (gArgs.GetBoolArg(\"-tor\", false))\n-        return InitError(_(\"Unsupported argument -tor found, use -onion.\"));\n-\n-    if (gArgs.GetBoolArg(\"-benchmark\", false))\n-        InitWarning(_(\"Unsupported argument -benchmark ignored, use -debug=bench.\"));\n-\n-    if (gArgs.GetBoolArg(\"-whitelistalwaysrelay\", false))\n-        InitWarning(_(\"Unsupported argument -whitelistalwaysrelay ignored, use -whitelistrelay and/or -whitelistforcerelay.\"));\n-\n-    if (gArgs.IsArgSet(\"-blockminsize\"))\n-        InitWarning(\"Unsupported argument -blockminsize ignored.\");\n-\n     // Checkmempool and checkblockindex default to true in regtest mode\n     int ratio = std::min<int>(std::max<int>(gArgs.GetArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks() ? 1 : 0), 0), 1000000);\n     if (ratio != 0) {\n@@ -1138,39 +1123,6 @@ bool AppInitParameterInteraction()\n         fEnableReplacement = (std::find(vstrReplacementModes.begin(), vstrReplacementModes.end(), \"fee\") != vstrReplacementModes.end());\n     }\n \n-    if (gArgs.IsArgSet(\"-vbparams\")) {\n-        // Allow overriding version bits parameters for testing\n-        if (!chainparams.MineBlocksOnDemand()) {\n-            return InitError(\"Version bits parameters may only be overridden on regtest.\");\n-        }\n-        for (const std::string& strDeployment : gArgs.GetArgs(\"-vbparams\")) {\n-            std::vector<std::string> vDeploymentParams;\n-            boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n-            if (vDeploymentParams.size() != 3) {\n-                return InitError(\"Version bits parameters malformed, expecting deployment:start:end\");\n-            }\n-            int64_t nStartTime, nTimeout;\n-            if (!ParseInt64(vDeploymentParams[1], &nStartTime)) {\n-                return InitError(strprintf(\"Invalid nStartTime (%s)\", vDeploymentParams[1]));\n-            }\n-            if (!ParseInt64(vDeploymentParams[2], &nTimeout)) {\n-                return InitError(strprintf(\"Invalid nTimeout (%s)\", vDeploymentParams[2]));\n-            }\n-            bool found = false;\n-            for (int j=0; j<(int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j)\n-            {\n-                if (vDeploymentParams[0].compare(VersionBitsDeploymentInfo[j].name) == 0) {\n-                    UpdateVersionBitsParameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n-                    found = true;\n-                    LogPrintf(\"Setting version bits activation parameters for %s to start=%ld, timeout=%ld\\n\", vDeploymentParams[0], nStartTime, nTimeout);\n-                    break;\n-                }\n-            }\n-            if (!found) {\n-                return InitError(strprintf(\"Invalid deployment (%s)\", vDeploymentParams[0]));\n-            }\n-        }\n-    }\n     return true;\n }\n \n@@ -1220,7 +1172,7 @@ bool AppInitLockDataDirectory()\n     return true;\n }\n \n-bool AppInitMain()\n+bool AppInitMain(InitInterfaces& interfaces)\n {\n     const CChainParams& chainparams = Params();\n     // ********************************************************* Step 4a: application initialization\n@@ -1243,7 +1195,19 @@ bool AppInitMain()\n         LogPrintf(\"Startup time: %s\\n\", FormatISO8601DateTime(GetTime()));\n     LogPrintf(\"Default data directory %s\\n\", GetDefaultDataDir().string());\n     LogPrintf(\"Using data directory %s\\n\", GetDataDir().string());\n-    LogPrintf(\"Using config file %s\\n\", GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME)).string());\n+\n+    // Only log conf file usage message if conf file actually exists.\n+    fs::path config_file_path = GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME));\n+    if (fs::exists(config_file_path)) {\n+        LogPrintf(\"Config file: %s\\n\", config_file_path.string());\n+    } else if (gArgs.IsArgSet(\"-conf\")) {\n+        // Warn if no conf file exists at path provided by user\n+        InitWarning(strprintf(_(\"The specified config file %s does not exist\\n\"), config_file_path.string()));\n+    } else {\n+        // Not categorizing as \"Warning\" because it's the default behavior\n+        LogPrintf(\"Config file: %s (not found, skipping)\\n\", config_file_path.string());\n+    }\n+\n     LogPrintf(\"Using at most %i automatic connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n \n     // Warn about relative -datadir path.\n@@ -1271,11 +1235,20 @@ bool AppInitMain()\n     GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n     GetMainSignals().RegisterWithMempoolSignals(mempool);\n \n+    // Create client interfaces for wallets that are supposed to be loaded\n+    // according to -wallet and -disablewallet options. This only constructs\n+    // the interfaces, it doesn't load wallet data. Wallets actually get loaded\n+    // when load() and start() interface methods are called below.\n+    g_wallet_init_interface.Construct(interfaces);\n+\n     /* Register RPC commands regardless of -server setting so they will be\n      * available in the GUI RPC console even if external calls are disabled.\n      */\n     RegisterAllCoreRPCCommands(tableRPC);\n-    g_wallet_init_interface.RegisterRPC(tableRPC);\n+    for (const auto& client : interfaces.chain_clients) {\n+        client->registerRpcs();\n+    }\n+    g_rpc_interfaces = &interfaces;\n #if ENABLE_ZMQ\n     RegisterZMQRPCCommands(tableRPC);\n #endif\n@@ -1293,7 +1266,11 @@ bool AppInitMain()\n     }\n \n     // ********************************************************* Step 5: verify wallet database integrity\n-    if (!g_wallet_init_interface.Verify()) return false;\n+    for (const auto& client : interfaces.chain_clients) {\n+        if (!client->verify()) {\n+            return false;\n+        }\n+    }\n \n     // ********************************************************* Step 6: network initialization\n     // Note that we absolutely cannot open any actual connections\n@@ -1612,7 +1589,11 @@ bool AppInitMain()\n     }\n \n     // ********************************************************* Step 9: load wallet\n-    if (!g_wallet_init_interface.Open()) return false;\n+    for (const auto& client : interfaces.chain_clients) {\n+        if (!client->load()) {\n+            return false;\n+        }\n+    }\n \n     // ********************************************************* Step 10: data directory maintenance\n \n@@ -1661,12 +1642,12 @@ bool AppInitMain()\n \n     // Wait for genesis block to be processed\n     {\n-        WaitableLock lock(cs_GenesisWait);\n+        WAIT_LOCK(g_genesis_wait_mutex, lock);\n         // We previously could hang here if StartShutdown() is called prior to\n         // ThreadImport getting started, so instead we just wait on a timer to\n         // check ShutdownRequested() regularly.\n         while (!fHaveGenesis && !ShutdownRequested()) {\n-            condvar_GenesisWait.wait_for(lock, std::chrono::milliseconds(500));\n+            g_genesis_wait_cv.wait_for(lock, std::chrono::milliseconds(500));\n         }\n         uiInterface.NotifyBlockTip_disconnect(BlockNotifyGenesisWait);\n     }\n@@ -1758,7 +1739,9 @@ bool AppInitMain()\n     SetRPCWarmupFinished();\n     uiInterface.InitMessage(_(\"Done loading\"));\n \n-    g_wallet_init_interface.Start(scheduler);\n+    for (const auto& client : interfaces.chain_clients) {\n+        client->start(scheduler);\n+    }\n \n     return true;\n }"
      },
      {
        "sha": "1c59ca069edf2d706bc5c1bd5a36380e42bc1784",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 13,
        "deletions": 7,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -8,13 +8,19 @@\n \n #include <memory>\n #include <string>\n-#include <util.h>\n+#include <util/system.h>\n \n-class CScheduler;\n-class CWallet;\n+namespace interfaces {\n+class Chain;\n+class ChainClient;\n+} // namespace interfaces\n \n-class WalletInitInterface;\n-extern const WalletInitInterface& g_wallet_init_interface;\n+//! Pointers to interfaces used during init and destroyed on shutdown.\n+struct InitInterfaces\n+{\n+    std::unique_ptr<interfaces::Chain> chain;\n+    std::vector<std::unique_ptr<interfaces::ChainClient>> chain_clients;\n+};\n \n namespace boost\n {\n@@ -23,7 +29,7 @@ class thread_group;\n \n /** Interrupt threads */\n void Interrupt();\n-void Shutdown();\n+void Shutdown(InitInterfaces& interfaces);\n //!Initialize the logging infrastructure\n void InitLogging();\n //!Parameter interaction: change current parameters depending on various rules\n@@ -57,7 +63,7 @@ bool AppInitLockDataDirectory();\n  * @note This should only be done after daemonization. Call Shutdown() if this function fails.\n  * @pre Parameters should be parsed and config file should be read, AppInitLockDataDirectory should have been called.\n  */\n-bool AppInitMain();\n+bool AppInitMain(InitInterfaces& interfaces);\n \n /**\n  * Setup the arguments for gArgs"
      },
      {
        "sha": "57d41df746b1d786708c6b107b487e687e33cd92",
        "filename": "src/interfaces/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/interfaces/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/interfaces/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/README.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -4,7 +4,7 @@ The following interfaces are defined here:\n \n * [`Chain`](chain.h) \u2014 used by wallet to access blockchain and mempool state. Added in [#10973](https://github.com/bitcoin/bitcoin/pull/10973).\n \n-* [`Chain::Client`](chain.h) \u2014 used by node to start & stop `Chain` clients. Added in [#10973](https://github.com/bitcoin/bitcoin/pull/10973).\n+* [`ChainClient`](chain.h) \u2014 used by node to start & stop `Chain` clients. Added in [#10973](https://github.com/bitcoin/bitcoin/pull/10973).\n \n * [`Node`](node.h) \u2014 used by GUI to start & stop bitcoin node. Added in [#10244](https://github.com/bitcoin/bitcoin/pull/10244).\n "
      },
      {
        "sha": "2571a91031f98c3c475b7957fe746c7a9e49ab6c",
        "filename": "src/interfaces/chain.cpp",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,44 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/chain.h>\n+\n+#include <sync.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+#include <memory>\n+#include <utility>\n+\n+namespace interfaces {\n+namespace {\n+\n+class LockImpl : public Chain::Lock\n+{\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class ChainImpl : public Chain\n+{\n+public:\n+    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    {\n+        auto result = MakeUnique<LockingStateImpl>(::cs_main, \"cs_main\", __FILE__, __LINE__, try_lock);\n+        if (try_lock && result && !*result) return {};\n+        // std::move necessary on some compilers due to conversion from\n+        // LockingStateImpl to Lock pointer\n+        return std::move(result);\n+    }\n+    std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+};\n+\n+} // namespace\n+\n+std::unique_ptr<Chain> MakeChain() { return MakeUnique<ChainImpl>(); }\n+\n+} // namespace interfaces"
      },
      {
        "sha": "fe5658de4b73c78ff2f14080b78b0f1fc6c16d23",
        "filename": "src/interfaces/chain.h",
        "status": "added",
        "additions": 84,
        "deletions": 0,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/interfaces/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/interfaces/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,84 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_INTERFACES_CHAIN_H\n+#define BITCOIN_INTERFACES_CHAIN_H\n+\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+class CScheduler;\n+\n+namespace interfaces {\n+\n+//! Interface for giving wallet processes access to blockchain state.\n+class Chain\n+{\n+public:\n+    virtual ~Chain() {}\n+\n+    //! Interface for querying locked chain state, used by legacy code that\n+    //! assumes state won't change between calls. New code should avoid using\n+    //! the Lock interface and instead call higher-level Chain methods\n+    //! that return more information so the chain doesn't need to stay locked\n+    //! between calls.\n+    class Lock\n+    {\n+    public:\n+        virtual ~Lock() {}\n+    };\n+\n+    //! Return Lock interface. Chain is locked when this is called, and\n+    //! unlocked when the returned interface is freed.\n+    virtual std::unique_ptr<Lock> lock(bool try_lock = false) = 0;\n+\n+    //! Return Lock interface assuming chain is already locked. This\n+    //! method is temporary and is only used in a few places to avoid changing\n+    //! behavior while code is transitioned to use the Chain::Lock interface.\n+    virtual std::unique_ptr<Lock> assumeLocked() = 0;\n+};\n+\n+//! Interface to let node manage chain clients (wallets, or maybe tools for\n+//! monitoring and analysis in the future).\n+class ChainClient\n+{\n+public:\n+    virtual ~ChainClient() {}\n+\n+    //! Register rpcs.\n+    virtual void registerRpcs() = 0;\n+\n+    //! Check for errors before loading.\n+    virtual bool verify() = 0;\n+\n+    //! Load saved state.\n+    virtual bool load() = 0;\n+\n+    //! Start client execution and provide a scheduler.\n+    virtual void start(CScheduler& scheduler) = 0;\n+\n+    //! Save state to disk.\n+    virtual void flush() = 0;\n+\n+    //! Shut down client.\n+    virtual void stop() = 0;\n+};\n+\n+//! Return implementation of Chain interface.\n+std::unique_ptr<Chain> MakeChain();\n+\n+//! Return implementation of ChainClient interface for a wallet client. This\n+//! function will be undefined in builds where ENABLE_WALLET is false.\n+//!\n+//! Currently, wallets are the only chain clients. But in the future, other\n+//! types of chain clients could be added, such as tools for monitoring,\n+//! analysis, or fee estimation. These clients need to expose their own\n+//! MakeXXXClient functions returning their implementations of the ChainClient\n+//! interface.\n+std::unique_ptr<ChainClient> MakeWalletClient(Chain& chain, std::vector<std::string> wallet_filenames);\n+\n+} // namespace interfaces\n+\n+#endif // BITCOIN_INTERFACES_CHAIN_H"
      },
      {
        "sha": "92601fc4e99c88579e6761687edf4b06d82e16bd",
        "filename": "src/interfaces/handler.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/interfaces/handler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/interfaces/handler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/handler.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -4,7 +4,7 @@\n \n #include <interfaces/handler.h>\n \n-#include <utilmemory.h>\n+#include <util/memory.h>\n \n #include <boost/signals2/connection.hpp>\n #include <utility>\n@@ -15,7 +15,7 @@ namespace {\n class HandlerImpl : public Handler\n {\n public:\n-    HandlerImpl(boost::signals2::connection connection) : m_connection(std::move(connection)) {}\n+    explicit HandlerImpl(boost::signals2::connection connection) : m_connection(std::move(connection)) {}\n \n     void disconnect() override { m_connection.disconnect(); }\n "
      },
      {
        "sha": "bd7e414ff31a9614e5abfa9307a667fcf442d946",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 17,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -9,6 +9,7 @@\n #include <chain.h>\n #include <chainparams.h>\n #include <init.h>\n+#include <interfaces/chain.h>\n #include <interfaces/handler.h>\n #include <interfaces/wallet.h>\n #include <net.h>\n@@ -25,30 +26,32 @@\n #include <sync.h>\n #include <txmempool.h>\n #include <ui_interface.h>\n-#include <util.h>\n+#include <util/system.h>\n #include <validation.h>\n #include <warnings.h>\n \n #if defined(HAVE_CONFIG_H)\n #include <config/bitcoin-config.h>\n #endif\n-#ifdef ENABLE_WALLET\n-#include <wallet/fees.h>\n-#include <wallet/wallet.h>\n-#define CHECK_WALLET(x) x\n-#else\n-#define CHECK_WALLET(x) throw std::logic_error(\"Wallet function called in non-wallet build.\")\n-#endif\n \n #include <atomic>\n-#include <boost/thread/thread.hpp>\n #include <univalue.h>\n \n+class CWallet;\n+fs::path GetWalletDir();\n+std::vector<fs::path> ListWalletDir();\n+std::vector<std::shared_ptr<CWallet>> GetWallets();\n+\n namespace interfaces {\n+\n+class Wallet;\n+\n namespace {\n \n class NodeImpl : public Node\n {\n+public:\n+    NodeImpl() { m_interfaces.chain = MakeChain(); }\n     bool parseParameters(int argc, const char* const argv[], std::string& error) override\n     {\n         return gArgs.ParseParameters(argc, argv, error);\n@@ -67,11 +70,11 @@ class NodeImpl : public Node\n         return AppInitBasicSetup() && AppInitParameterInteraction() && AppInitSanityChecks() &&\n                AppInitLockDataDirectory();\n     }\n-    bool appInitMain() override { return AppInitMain(); }\n+    bool appInitMain() override { return AppInitMain(m_interfaces); }\n     void appShutdown() override\n     {\n         Interrupt();\n-        Shutdown();\n+        Shutdown(m_interfaces);\n     }\n     void startShutdown() override { StartShutdown(); }\n     bool shutdownRequested() override { return ShutdownRequested(); }\n@@ -219,17 +222,25 @@ class NodeImpl : public Node\n         LOCK(::cs_main);\n         return ::pcoinsTip->GetCoin(output, coin);\n     }\n+    std::string getWalletDir() override\n+    {\n+        return GetWalletDir().string();\n+    }\n+    std::vector<std::string> listWalletDir() override\n+    {\n+        std::vector<std::string> paths;\n+        for (auto& path : ListWalletDir()) {\n+            paths.push_back(path.string());\n+        }\n+        return paths;\n+    }\n     std::vector<std::unique_ptr<Wallet>> getWallets() override\n     {\n-#ifdef ENABLE_WALLET\n         std::vector<std::unique_ptr<Wallet>> wallets;\n         for (const std::shared_ptr<CWallet>& wallet : GetWallets()) {\n             wallets.emplace_back(MakeWallet(wallet));\n         }\n         return wallets;\n-#else\n-        throw std::logic_error(\"Node::getWallets() called in non-wallet build.\");\n-#endif\n     }\n     std::unique_ptr<Handler> handleInitMessage(InitMessageFn fn) override\n     {\n@@ -249,8 +260,7 @@ class NodeImpl : public Node\n     }\n     std::unique_ptr<Handler> handleLoadWallet(LoadWalletFn fn) override\n     {\n-        CHECK_WALLET(\n-            return MakeHandler(::uiInterface.LoadWallet_connect([fn](std::shared_ptr<CWallet> wallet) { fn(MakeWallet(wallet)); })));\n+        return MakeHandler(::uiInterface.LoadWallet_connect([fn](std::shared_ptr<CWallet> wallet) { fn(MakeWallet(wallet)); }));\n     }\n     std::unique_ptr<Handler> handleNotifyNumConnectionsChanged(NotifyNumConnectionsChangedFn fn) override\n     {\n@@ -283,6 +293,7 @@ class NodeImpl : public Node\n                     GuessVerificationProgress(Params().TxData(), block));\n             }));\n     }\n+    InitInterfaces m_interfaces;\n };\n \n } // namespace"
      },
      {
        "sha": "1f8bbbff7a8c0a1a89c018b4fa7e9302ed98d0d8",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -173,6 +173,12 @@ class Node\n     //! Get unspent outputs associated with a transaction.\n     virtual bool getUnspentOutput(const COutPoint& output, Coin& coin) = 0;\n \n+    //! Return default wallet directory.\n+    virtual std::string getWalletDir() = 0;\n+\n+    //! Return available wallets in wallet directory.\n+    virtual std::vector<std::string> listWalletDir() = 0;\n+\n     //! Return interfaces for accessing wallets (if any).\n     virtual std::vector<std::unique_ptr<Wallet>> getWallets() = 0;\n "
      },
      {
        "sha": "672a557d4165cd59ce449eb5d5b137f1bbec70dc",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 104,
        "deletions": 50,
        "changes": 154,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -7,44 +7,56 @@\n #include <amount.h>\n #include <chain.h>\n #include <consensus/validation.h>\n+#include <init.h>\n+#include <interfaces/chain.h>\n #include <interfaces/handler.h>\n #include <net.h>\n #include <policy/feerate.h>\n #include <policy/fees.h>\n #include <policy/policy.h>\n #include <primitives/transaction.h>\n+#include <rpc/server.h>\n+#include <scheduler.h>\n #include <script/ismine.h>\n #include <script/standard.h>\n #include <support/allocators/secure.h>\n #include <sync.h>\n #include <timedata.h>\n #include <ui_interface.h>\n #include <uint256.h>\n+#include <util/system.h>\n #include <validation.h>\n #include <wallet/feebumper.h>\n #include <wallet/fees.h>\n+#include <wallet/rpcwallet.h>\n #include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+#include <memory>\n+#include <string>\n+#include <utility>\n+#include <vector>\n \n namespace interfaces {\n namespace {\n \n class PendingWalletTxImpl : public PendingWalletTx\n {\n public:\n-    PendingWalletTxImpl(CWallet& wallet) : m_wallet(wallet), m_key(&wallet) {}\n+    explicit PendingWalletTxImpl(CWallet& wallet) : m_wallet(wallet), m_key(&wallet) {}\n \n     const CTransaction& get() override { return *m_tx; }\n \n     int64_t getVirtualSize() override { return GetVirtualTransactionSize(*m_tx); }\n \n     bool commit(WalletValueMap value_map,\n         WalletOrderForm order_form,\n-        std::string from_account,\n         std::string& reject_reason) override\n     {\n-        LOCK2(cs_main, m_wallet.cs_wallet);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n         CValidationState state;\n-        if (!m_wallet.CommitTransaction(m_tx, std::move(value_map), std::move(order_form), std::move(from_account), m_key, g_connman.get(), state)) {\n+        if (!m_wallet.CommitTransaction(m_tx, std::move(value_map), std::move(order_form), m_key, g_connman.get(), state)) {\n             reject_reason = state.GetRejectReason();\n             return false;\n         }\n@@ -57,7 +69,7 @@ class PendingWalletTxImpl : public PendingWalletTx\n };\n \n //! Construct wallet tx struct.\n-WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n+WalletTx MakeWalletTx(interfaces::Chain::Lock& locked_chain, CWallet& wallet, const CWalletTx& wtx)\n {\n     WalletTx result;\n     result.tx = wtx.tx;\n@@ -75,7 +87,7 @@ WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n                                                       IsMine(wallet, result.txout_address.back()) :\n                                                       ISMINE_NO);\n     }\n-    result.credit = wtx.GetCredit(ISMINE_ALL);\n+    result.credit = wtx.GetCredit(locked_chain, ISMINE_ALL);\n     result.debit = wtx.GetDebit(ISMINE_ALL);\n     result.change = wtx.GetChange();\n     result.time = wtx.GetTxTime();\n@@ -85,39 +97,45 @@ WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n }\n \n //! Construct wallet tx status struct.\n-WalletTxStatus MakeWalletTxStatus(const CWalletTx& wtx)\n+WalletTxStatus MakeWalletTxStatus(interfaces::Chain::Lock& locked_chain, const CWalletTx& wtx)\n {\n+    LockAnnotation lock(::cs_main); // Temporary, for CheckFinalTx below. Removed in upcoming commit.\n+\n     WalletTxStatus result;\n     auto mi = ::mapBlockIndex.find(wtx.hashBlock);\n     CBlockIndex* block = mi != ::mapBlockIndex.end() ? mi->second : nullptr;\n     result.block_height = (block ? block->nHeight : std::numeric_limits<int>::max());\n-    result.blocks_to_maturity = wtx.GetBlocksToMaturity();\n-    result.depth_in_main_chain = wtx.GetDepthInMainChain();\n+    result.blocks_to_maturity = wtx.GetBlocksToMaturity(locked_chain);\n+    result.depth_in_main_chain = wtx.GetDepthInMainChain(locked_chain);\n     result.time_received = wtx.nTimeReceived;\n     result.lock_time = wtx.tx->nLockTime;\n     result.is_final = CheckFinalTx(*wtx.tx);\n-    result.is_trusted = wtx.IsTrusted();\n+    result.is_trusted = wtx.IsTrusted(locked_chain);\n     result.is_abandoned = wtx.isAbandoned();\n     result.is_coinbase = wtx.IsCoinBase();\n-    result.is_in_main_chain = wtx.IsInMainChain();\n+    result.is_in_main_chain = wtx.IsInMainChain(locked_chain);\n     return result;\n }\n \n //! Construct wallet TxOut struct.\n-WalletTxOut MakeWalletTxOut(CWallet& wallet, const CWalletTx& wtx, int n, int depth)\n+WalletTxOut MakeWalletTxOut(interfaces::Chain::Lock& locked_chain,\n+    CWallet& wallet,\n+    const CWalletTx& wtx,\n+    int n,\n+    int depth) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet)\n {\n     WalletTxOut result;\n     result.txout = wtx.tx->vout[n];\n     result.time = wtx.GetTxTime();\n     result.depth_in_main_chain = depth;\n-    result.is_spent = wallet.IsSpent(wtx.GetHash(), n);\n+    result.is_spent = wallet.IsSpent(locked_chain, wtx.GetHash(), n);\n     return result;\n }\n \n class WalletImpl : public Wallet\n {\n public:\n-    WalletImpl(const std::shared_ptr<CWallet>& wallet) : m_shared_wallet(wallet), m_wallet(*wallet.get()) {}\n+    explicit WalletImpl(const std::shared_ptr<CWallet>& wallet) : m_shared_wallet(wallet), m_wallet(*wallet.get()) {}\n \n     bool encryptWallet(const SecureString& wallet_passphrase) override\n     {\n@@ -198,22 +216,26 @@ class WalletImpl : public Wallet\n     }\n     void lockCoin(const COutPoint& output) override\n     {\n-        LOCK2(cs_main, m_wallet.cs_wallet);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n         return m_wallet.LockCoin(output);\n     }\n     void unlockCoin(const COutPoint& output) override\n     {\n-        LOCK2(cs_main, m_wallet.cs_wallet);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n         return m_wallet.UnlockCoin(output);\n     }\n     bool isLockedCoin(const COutPoint& output) override\n     {\n-        LOCK2(cs_main, m_wallet.cs_wallet);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n         return m_wallet.IsLockedCoin(output.hash, output.n);\n     }\n     void listLockedCoins(std::vector<COutPoint>& outputs) override\n     {\n-        LOCK2(cs_main, m_wallet.cs_wallet);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n         return m_wallet.ListLockedCoins(outputs);\n     }\n     std::unique_ptr<PendingWalletTx> createTransaction(const std::vector<CRecipient>& recipients,\n@@ -223,9 +245,10 @@ class WalletImpl : public Wallet\n         CAmount& fee,\n         std::string& fail_reason) override\n     {\n-        LOCK2(cs_main, m_wallet.cs_wallet);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n         auto pending = MakeUnique<PendingWalletTxImpl>(m_wallet);\n-        if (!m_wallet.CreateTransaction(recipients, pending->m_tx, pending->m_key, fee, change_pos,\n+        if (!m_wallet.CreateTransaction(*locked_chain, recipients, pending->m_tx, pending->m_key, fee, change_pos,\n                 fail_reason, coin_control, sign)) {\n             return {};\n         }\n@@ -234,8 +257,9 @@ class WalletImpl : public Wallet\n     bool transactionCanBeAbandoned(const uint256& txid) override { return m_wallet.TransactionCanBeAbandoned(txid); }\n     bool abandonTransaction(const uint256& txid) override\n     {\n-        LOCK2(cs_main, m_wallet.cs_wallet);\n-        return m_wallet.AbandonTransaction(txid);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n+        return m_wallet.AbandonTransaction(*locked_chain, txid);\n     }\n     bool transactionCanBeBumped(const uint256& txid) override\n     {\n@@ -263,7 +287,8 @@ class WalletImpl : public Wallet\n     }\n     CTransactionRef getTx(const uint256& txid) override\n     {\n-        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n         auto mi = m_wallet.mapWallet.find(txid);\n         if (mi != m_wallet.mapWallet.end()) {\n             return mi->second.tx;\n@@ -272,29 +297,30 @@ class WalletImpl : public Wallet\n     }\n     WalletTx getWalletTx(const uint256& txid) override\n     {\n-        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n         auto mi = m_wallet.mapWallet.find(txid);\n         if (mi != m_wallet.mapWallet.end()) {\n-            return MakeWalletTx(m_wallet, mi->second);\n+            return MakeWalletTx(*locked_chain, m_wallet, mi->second);\n         }\n         return {};\n     }\n     std::vector<WalletTx> getWalletTxs() override\n     {\n-        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n         std::vector<WalletTx> result;\n         result.reserve(m_wallet.mapWallet.size());\n         for (const auto& entry : m_wallet.mapWallet) {\n-            result.emplace_back(MakeWalletTx(m_wallet, entry.second));\n+            result.emplace_back(MakeWalletTx(*locked_chain, m_wallet, entry.second));\n         }\n         return result;\n     }\n     bool tryGetTxStatus(const uint256& txid,\n         interfaces::WalletTxStatus& tx_status,\n-        int& num_blocks,\n-        int64_t& adjusted_time) override\n+        int& num_blocks) override\n     {\n-        TRY_LOCK(::cs_main, locked_chain);\n+        auto locked_chain = m_wallet.chain().lock(true /* try_lock */);\n         if (!locked_chain) {\n             return false;\n         }\n@@ -307,26 +333,24 @@ class WalletImpl : public Wallet\n             return false;\n         }\n         num_blocks = ::chainActive.Height();\n-        adjusted_time = GetAdjustedTime();\n-        tx_status = MakeWalletTxStatus(mi->second);\n+        tx_status = MakeWalletTxStatus(*locked_chain, mi->second);\n         return true;\n     }\n     WalletTx getWalletTxDetails(const uint256& txid,\n         WalletTxStatus& tx_status,\n         WalletOrderForm& order_form,\n         bool& in_mempool,\n-        int& num_blocks,\n-        int64_t& adjusted_time) override\n+        int& num_blocks) override\n     {\n-        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n         auto mi = m_wallet.mapWallet.find(txid);\n         if (mi != m_wallet.mapWallet.end()) {\n             num_blocks = ::chainActive.Height();\n-            adjusted_time = GetAdjustedTime();\n             in_mempool = mi->second.InMempool();\n             order_form = mi->second.vOrderForm;\n-            tx_status = MakeWalletTxStatus(mi->second);\n-            return MakeWalletTx(m_wallet, mi->second);\n+            tx_status = MakeWalletTxStatus(*locked_chain, mi->second);\n+            return MakeWalletTx(*locked_chain, m_wallet, mi->second);\n         }\n         return {};\n     }\n@@ -346,7 +370,7 @@ class WalletImpl : public Wallet\n     }\n     bool tryGetBalances(WalletBalances& balances, int& num_blocks) override\n     {\n-        TRY_LOCK(cs_main, locked_chain);\n+        auto locked_chain = m_wallet.chain().lock(true /* try_lock */);\n         if (!locked_chain) return false;\n         TRY_LOCK(m_wallet.cs_wallet, locked_wallet);\n         if (!locked_wallet) {\n@@ -363,49 +387,55 @@ class WalletImpl : public Wallet\n     }\n     isminetype txinIsMine(const CTxIn& txin) override\n     {\n-        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n         return m_wallet.IsMine(txin);\n     }\n     isminetype txoutIsMine(const CTxOut& txout) override\n     {\n-        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n         return m_wallet.IsMine(txout);\n     }\n     CAmount getDebit(const CTxIn& txin, isminefilter filter) override\n     {\n-        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n         return m_wallet.GetDebit(txin, filter);\n     }\n     CAmount getCredit(const CTxOut& txout, isminefilter filter) override\n     {\n-        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n         return m_wallet.GetCredit(txout, filter);\n     }\n     CoinsList listCoins() override\n     {\n-        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n         CoinsList result;\n-        for (const auto& entry : m_wallet.ListCoins()) {\n+        for (const auto& entry : m_wallet.ListCoins(*locked_chain)) {\n             auto& group = result[entry.first];\n             for (const auto& coin : entry.second) {\n-                group.emplace_back(\n-                    COutPoint(coin.tx->GetHash(), coin.i), MakeWalletTxOut(m_wallet, *coin.tx, coin.i, coin.nDepth));\n+                group.emplace_back(COutPoint(coin.tx->GetHash(), coin.i),\n+                    MakeWalletTxOut(*locked_chain, m_wallet, *coin.tx, coin.i, coin.nDepth));\n             }\n         }\n         return result;\n     }\n     std::vector<WalletTxOut> getCoins(const std::vector<COutPoint>& outputs) override\n     {\n-        LOCK2(::cs_main, m_wallet.cs_wallet);\n+        auto locked_chain = m_wallet.chain().lock();\n+        LOCK(m_wallet.cs_wallet);\n         std::vector<WalletTxOut> result;\n         result.reserve(outputs.size());\n         for (const auto& output : outputs) {\n             result.emplace_back();\n             auto it = m_wallet.mapWallet.find(output.hash);\n             if (it != m_wallet.mapWallet.end()) {\n-                int depth = it->second.GetDepthInMainChain();\n+                int depth = it->second.GetDepthInMainChain(*locked_chain);\n                 if (depth >= 0) {\n-                    result.back() = MakeWalletTxOut(m_wallet, it->second, output.n, depth);\n+                    result.back() = MakeWalletTxOut(*locked_chain, m_wallet, it->second, output.n, depth);\n                 }\n             }\n         }\n@@ -461,8 +491,32 @@ class WalletImpl : public Wallet\n     CWallet& m_wallet;\n };\n \n+class WalletClientImpl : public ChainClient\n+{\n+public:\n+    WalletClientImpl(Chain& chain, std::vector<std::string> wallet_filenames)\n+        : m_chain(chain), m_wallet_filenames(std::move(wallet_filenames))\n+    {\n+    }\n+    void registerRpcs() override { return RegisterWalletRPCCommands(::tableRPC); }\n+    bool verify() override { return VerifyWallets(m_chain, m_wallet_filenames); }\n+    bool load() override { return LoadWallets(m_chain, m_wallet_filenames); }\n+    void start(CScheduler& scheduler) override { return StartWallets(scheduler); }\n+    void flush() override { return FlushWallets(); }\n+    void stop() override { return StopWallets(); }\n+    ~WalletClientImpl() override { UnloadWallets(); }\n+\n+    Chain& m_chain;\n+    std::vector<std::string> m_wallet_filenames;\n+};\n+\n } // namespace\n \n std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet) { return MakeUnique<WalletImpl>(wallet); }\n \n+std::unique_ptr<ChainClient> MakeWalletClient(Chain& chain, std::vector<std::string> wallet_filenames)\n+{\n+    return MakeUnique<WalletClientImpl>(chain, std::move(wallet_filenames));\n+}\n+\n } // namespace interfaces"
      },
      {
        "sha": "c79b9afce3090971a1d0387f041f5303367e5c7f",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -178,16 +178,14 @@ class Wallet\n     //! Try to get updated status for a particular transaction, if possible without blocking.\n     virtual bool tryGetTxStatus(const uint256& txid,\n         WalletTxStatus& tx_status,\n-        int& num_blocks,\n-        int64_t& adjusted_time) = 0;\n+        int& num_blocks) = 0;\n \n     //! Get transaction details.\n     virtual WalletTx getWalletTxDetails(const uint256& txid,\n         WalletTxStatus& tx_status,\n         WalletOrderForm& order_form,\n         bool& in_mempool,\n-        int& num_blocks,\n-        int64_t& adjusted_time) = 0;\n+        int& num_blocks) = 0;\n \n     //! Get balances.\n     virtual WalletBalances getBalances() = 0;\n@@ -289,7 +287,6 @@ class PendingWalletTx\n     //! Send pending transaction and commit to wallet.\n     virtual bool commit(WalletValueMap value_map,\n         WalletOrderForm order_form,\n-        std::string from_account,\n         std::string& reject_reason) = 0;\n };\n \n@@ -367,8 +364,8 @@ struct WalletTxOut\n     bool is_spent = false;\n };\n \n-//! Return implementation of Wallet interface. This function will be undefined\n-//! in builds where ENABLE_WALLET is false.\n+//! Return implementation of Wallet interface. This function is defined in\n+//! dummywallet.cpp and throws if the wallet component is not compiled.\n std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet);\n \n } // namespace interfaces"
      },
      {
        "sha": "80d6589a3c36b823402b81d759ff43520037c43a",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -89,7 +89,7 @@ static int ec_privkey_import_der(const secp256k1_context* ctx, unsigned char *ou\n  * will be set to the number of bytes used in the buffer.\n  * key32 must point to a 32-byte raw private key.\n  */\n-static int ec_privkey_export_der(const secp256k1_context *ctx, unsigned char *privkey, size_t *privkeylen, const unsigned char *key32, int compressed) {\n+static int ec_privkey_export_der(const secp256k1_context *ctx, unsigned char *privkey, size_t *privkeylen, const unsigned char *key32, bool compressed) {\n     assert(*privkeylen >= CKey::PRIVATE_KEY_SIZE);\n     secp256k1_pubkey pubkey;\n     size_t pubkeylen = 0;\n@@ -170,7 +170,7 @@ CPrivKey CKey::GetPrivKey() const {\n     size_t privkeylen;\n     privkey.resize(PRIVATE_KEY_SIZE);\n     privkeylen = PRIVATE_KEY_SIZE;\n-    ret = ec_privkey_export_der(secp256k1_context_sign, privkey.data(), &privkeylen, begin(), fCompressed ? SECP256K1_EC_COMPRESSED : SECP256K1_EC_UNCOMPRESSED);\n+    ret = ec_privkey_export_der(secp256k1_context_sign, privkey.data(), &privkeylen, begin(), fCompressed);\n     assert(ret);\n     privkey.resize(privkeylen);\n     return privkey;"
      },
      {
        "sha": "0f695c07b7985563c92a632f762ee73ab5f96522",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -181,12 +181,12 @@ struct CExtKey {\n };\n \n /** Initialize the elliptic curve support. May not be called twice without calling ECC_Stop first. */\n-void ECC_Start(void);\n+void ECC_Start();\n \n /** Deinitialize the elliptic curve support. No-op if ECC_Start wasn't called first. */\n-void ECC_Stop(void);\n+void ECC_Stop();\n \n /** Check that required EC support is available at runtime. */\n-bool ECC_InitSanityCheck(void);\n+bool ECC_InitSanityCheck();\n \n #endif // BITCOIN_KEY_H"
      },
      {
        "sha": "282385f50dcccccd3a47b84f076bedcbd7f213e1",
        "filename": "src/key_io.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/key_io.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/key_io.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key_io.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -7,7 +7,7 @@\n #include <base58.h>\n #include <bech32.h>\n #include <script/script.h>\n-#include <utilstrencodings.h>\n+#include <util/strencodings.h>\n \n #include <boost/variant/apply_visitor.hpp>\n #include <boost/variant/static_visitor.hpp>\n@@ -24,7 +24,7 @@ class DestinationEncoder : public boost::static_visitor<std::string>\n     const CChainParams& m_params;\n \n public:\n-    DestinationEncoder(const CChainParams& params) : m_params(params) {}\n+    explicit DestinationEncoder(const CChainParams& params) : m_params(params) {}\n \n     std::string operator()(const CKeyID& id) const\n     {"
      },
      {
        "sha": "148979cf3598c4bf4c1d0abac1d623f0c62c1338",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -5,7 +5,7 @@\n \n #include <keystore.h>\n \n-#include <util.h>\n+#include <util/system.h>\n \n void CBasicKeyStore::ImplicitlyLearnRelatedKeyScripts(const CPubKey& pubkey)\n {"
      },
      {
        "sha": "77dc2d093941ea8ab2d95f51e25ca881e6086310",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -4,7 +4,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <logging.h>\n-#include <utiltime.h>\n+#include <util/time.h>\n \n const char * const DEFAULT_DEBUGLOGFILE = \"debug.log\";\n \n@@ -219,13 +219,13 @@ void BCLog::Logger::LogPrintStr(const std::string &str)\n             // reopen the log file, if requested\n             if (m_reopen_file) {\n                 m_reopen_file = false;\n-                m_fileout = fsbridge::freopen(m_file_path, \"a\", m_fileout);\n-                if (!m_fileout) {\n-                    return;\n+                FILE* new_fileout = fsbridge::fopen(m_file_path, \"a\");\n+                if (new_fileout) {\n+                    setbuf(new_fileout, nullptr); // unbuffered\n+                    fclose(m_fileout);\n+                    m_fileout = new_fileout;\n                 }\n-                setbuf(m_fileout, nullptr); // unbuffered\n             }\n-\n             FileWriteStr(strTimestamped, m_fileout);\n         }\n     }"
      },
      {
        "sha": "0c8e7f52910b2a01621b004982315b2543655306",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 22,
        "deletions": 33,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -125,42 +125,31 @@ std::vector<CLogCategoryActive> ListActiveLogCategories();\n /** Return true if str parses as a log category and set the flag */\n bool GetLogCategory(BCLog::LogFlags& flag, const std::string& str);\n \n-/** Get format string from VA_ARGS for error reporting */\n-template<typename... Args> std::string FormatStringFromLogArgs(const char *fmt, const Args&... args) { return fmt; }\n-\n-static inline void MarkUsed() {}\n-template<typename T, typename... Args> static inline void MarkUsed(const T& t, const Args&... args)\n-{\n-    (void)t;\n-    MarkUsed(args...);\n-}\n-\n // Be conservative when using LogPrintf/error or other things which\n // unconditionally log to debug.log! It should not be the case that an inbound\n // peer can fill up a user's disk with debug.log entries.\n \n-#ifdef USE_COVERAGE\n-#define LogPrintf(...) do { MarkUsed(__VA_ARGS__); } while(0)\n-#define LogPrint(category, ...) do { MarkUsed(__VA_ARGS__); } while(0)\n-#else\n-#define LogPrintf(...) do { \\\n-    if (g_logger->Enabled()) { \\\n-        std::string _log_msg_; /* Unlikely name to avoid shadowing variables */ \\\n-        try { \\\n-            _log_msg_ = tfm::format(__VA_ARGS__); \\\n-        } catch (tinyformat::format_error &fmterr) { \\\n-            /* Original format string will have newline so don't add one here */ \\\n-            _log_msg_ = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + FormatStringFromLogArgs(__VA_ARGS__); \\\n-        } \\\n-        g_logger->LogPrintStr(_log_msg_); \\\n-    } \\\n-} while(0)\n-\n-#define LogPrint(category, ...) do { \\\n-    if (LogAcceptCategory((category))) { \\\n-        LogPrintf(__VA_ARGS__); \\\n-    } \\\n-} while(0)\n-#endif\n+template <typename... Args>\n+static inline void LogPrintf(const char* fmt, const Args&... args)\n+{\n+    if (g_logger->Enabled()) {\n+        std::string log_msg;\n+        try {\n+            log_msg = tfm::format(fmt, args...);\n+        } catch (tinyformat::format_error& fmterr) {\n+            /* Original format string will have newline so don't add one here */\n+            log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n+        }\n+        g_logger->LogPrintStr(log_msg);\n+    }\n+}\n+\n+template <typename... Args>\n+static inline void LogPrint(const BCLog::LogFlags& category, const Args&... args)\n+{\n+    if (LogAcceptCategory((category))) {\n+        LogPrintf(args...);\n+    }\n+}\n \n #endif // BITCOIN_LOGGING_H"
      },
      {
        "sha": "0c37bab1f865469499e6feea7c7abd5d2968a888",
        "filename": "src/merkleblock.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/merkleblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/merkleblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -7,7 +7,7 @@\n \n #include <hash.h>\n #include <consensus/consensus.h>\n-#include <utilstrencodings.h>\n+#include <util/strencodings.h>\n \n \n CMerkleBlock::CMerkleBlock(const CBlock& block, CBloomFilter* filter, const std::set<uint256>* txids)"
      },
      {
        "sha": "96c9cd6d2a1cdd186e23e79b9035555c18d8a4a1",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -21,8 +21,8 @@\n #include <primitives/transaction.h>\n #include <script/standard.h>\n #include <timedata.h>\n-#include <util.h>\n-#include <utilmoneystr.h>\n+#include <util/system.h>\n+#include <util/moneystr.h>\n #include <validationinterface.h>\n \n #include <algorithm>\n@@ -70,9 +70,8 @@ static BlockAssembler::Options DefaultOptions()\n     // If -blockmaxweight is not given, limit to DEFAULT_BLOCK_MAX_WEIGHT\n     BlockAssembler::Options options;\n     options.nBlockMaxWeight = gArgs.GetArg(\"-blockmaxweight\", DEFAULT_BLOCK_MAX_WEIGHT);\n-    if (gArgs.IsArgSet(\"-blockmintxfee\")) {\n-        CAmount n = 0;\n-        ParseMoney(gArgs.GetArg(\"-blockmintxfee\", \"\"), n);\n+    CAmount n = 0;\n+    if (gArgs.IsArgSet(\"-blockmintxfee\") && ParseMoney(gArgs.GetArg(\"-blockmintxfee\", \"\"), n)) {\n         options.blockMinFeeRate = CFeeRate(n);\n     } else {\n         options.blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);"
      },
      {
        "sha": "e065ac0f2838e5448cf0bcd62f451e985f3b7070",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 262,
        "deletions": 247,
        "changes": 509,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -18,7 +18,7 @@\n #include <netbase.h>\n #include <scheduler.h>\n #include <ui_interface.h>\n-#include <utilstrencodings.h>\n+#include <util/strencodings.h>\n \n #ifdef WIN32\n #include <string.h>\n@@ -344,7 +344,7 @@ CNode* CConnman::FindNode(const CService& addr)\n bool CConnman::CheckIncomingNonce(uint64_t nonce)\n {\n     LOCK(cs_vNodes);\n-    for (CNode* pnode : vNodes) {\n+    for (const CNode* pnode : vNodes) {\n         if (!pnode->fSuccessfullyConnected && !pnode->fInbound && pnode->GetLocalNonce() == nonce)\n             return false;\n     }\n@@ -715,6 +715,7 @@ void CNode::copyStats(CNodeStats &stats)\n         X(nRecvBytes);\n     }\n     X(fWhitelisted);\n+    X(minFeeFilter);\n \n     // It is common for nodes with good ping times to suddenly become lagged,\n     // due to a new block arriving or other large transfer.\n@@ -1010,6 +1011,7 @@ bool CConnman::AttemptToEvictConnection()\n                 continue;\n             if (node->fDisconnect)\n                 continue;\n+            LOCK(node->cs_filter);\n             NodeEvictionCandidate candidate = {node->GetId(), node->nTimeConnected, node->nMinPingUsecTime,\n                                                node->nLastBlockTime, node->nLastTXTime,\n                                                HasAllDesirableServiceFlags(node->nServices),\n@@ -1152,310 +1154,322 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     }\n }\n \n-void CConnman::ThreadSocketHandler()\n+void CConnman::DisconnectNodes()\n {\n-    unsigned int nPrevNodeCount = 0;\n-    while (!interruptNet)\n     {\n-        //\n-        // Disconnect nodes\n-        //\n-        {\n-            LOCK(cs_vNodes);\n+        LOCK(cs_vNodes);\n \n-            if (!fNetworkActive) {\n-                // Disconnect any connected nodes\n-                for (CNode* pnode : vNodes) {\n-                    if (!pnode->fDisconnect) {\n-                        LogPrint(BCLog::NET, \"Network not active, dropping peer=%d\\n\", pnode->GetId());\n-                        pnode->fDisconnect = true;\n-                    }\n+        if (!fNetworkActive) {\n+            // Disconnect any connected nodes\n+            for (CNode* pnode : vNodes) {\n+                if (!pnode->fDisconnect) {\n+                    LogPrint(BCLog::NET, \"Network not active, dropping peer=%d\\n\", pnode->GetId());\n+                    pnode->fDisconnect = true;\n                 }\n             }\n+        }\n \n-            // Disconnect unused nodes\n-            std::vector<CNode*> vNodesCopy = vNodes;\n-            for (CNode* pnode : vNodesCopy)\n+        // Disconnect unused nodes\n+        std::vector<CNode*> vNodesCopy = vNodes;\n+        for (CNode* pnode : vNodesCopy)\n+        {\n+            if (pnode->fDisconnect)\n             {\n-                if (pnode->fDisconnect)\n-                {\n-                    // remove from vNodes\n-                    vNodes.erase(remove(vNodes.begin(), vNodes.end(), pnode), vNodes.end());\n+                // remove from vNodes\n+                vNodes.erase(remove(vNodes.begin(), vNodes.end(), pnode), vNodes.end());\n \n-                    // release outbound grant (if any)\n-                    pnode->grantOutbound.Release();\n+                // release outbound grant (if any)\n+                pnode->grantOutbound.Release();\n \n-                    // close socket and cleanup\n-                    pnode->CloseSocketDisconnect();\n+                // close socket and cleanup\n+                pnode->CloseSocketDisconnect();\n \n-                    // hold in disconnected pool until all refs are released\n-                    pnode->Release();\n-                    vNodesDisconnected.push_back(pnode);\n-                }\n+                // hold in disconnected pool until all refs are released\n+                pnode->Release();\n+                vNodesDisconnected.push_back(pnode);\n             }\n         }\n+    }\n+    {\n+        // Delete disconnected nodes\n+        std::list<CNode*> vNodesDisconnectedCopy = vNodesDisconnected;\n+        for (CNode* pnode : vNodesDisconnectedCopy)\n         {\n-            // Delete disconnected nodes\n-            std::list<CNode*> vNodesDisconnectedCopy = vNodesDisconnected;\n-            for (CNode* pnode : vNodesDisconnectedCopy)\n-            {\n-                // wait until threads are done using it\n-                if (pnode->GetRefCount() <= 0) {\n-                    bool fDelete = false;\n-                    {\n-                        TRY_LOCK(pnode->cs_inventory, lockInv);\n-                        if (lockInv) {\n-                            TRY_LOCK(pnode->cs_vSend, lockSend);\n-                            if (lockSend) {\n-                                fDelete = true;\n-                            }\n+            // wait until threads are done using it\n+            if (pnode->GetRefCount() <= 0) {\n+                bool fDelete = false;\n+                {\n+                    TRY_LOCK(pnode->cs_inventory, lockInv);\n+                    if (lockInv) {\n+                        TRY_LOCK(pnode->cs_vSend, lockSend);\n+                        if (lockSend) {\n+                            fDelete = true;\n                         }\n                     }\n-                    if (fDelete) {\n-                        vNodesDisconnected.remove(pnode);\n-                        DeleteNode(pnode);\n-                    }\n+                }\n+                if (fDelete) {\n+                    vNodesDisconnected.remove(pnode);\n+                    DeleteNode(pnode);\n                 }\n             }\n         }\n-        size_t vNodesSize;\n+    }\n+}\n+\n+void CConnman::NotifyNumConnectionsChanged()\n+{\n+    size_t vNodesSize;\n+    {\n+        LOCK(cs_vNodes);\n+        vNodesSize = vNodes.size();\n+    }\n+    if(vNodesSize != nPrevNodeCount) {\n+        nPrevNodeCount = vNodesSize;\n+        if(clientInterface)\n+            clientInterface->NotifyNumConnectionsChanged(vNodesSize);\n+    }\n+}\n+\n+void CConnman::InactivityCheck(CNode *pnode)\n+{\n+    int64_t nTime = GetSystemTimeInSeconds();\n+    if (nTime - pnode->nTimeConnected > 60)\n+    {\n+        if (pnode->nLastRecv == 0 || pnode->nLastSend == 0)\n         {\n-            LOCK(cs_vNodes);\n-            vNodesSize = vNodes.size();\n+            LogPrint(BCLog::NET, \"socket no message in first 60 seconds, %d %d from %d\\n\", pnode->nLastRecv != 0, pnode->nLastSend != 0, pnode->GetId());\n+            pnode->fDisconnect = true;\n         }\n-        if(vNodesSize != nPrevNodeCount) {\n-            nPrevNodeCount = vNodesSize;\n-            if(clientInterface)\n-                clientInterface->NotifyNumConnectionsChanged(nPrevNodeCount);\n+        else if (nTime - pnode->nLastSend > TIMEOUT_INTERVAL)\n+        {\n+            LogPrintf(\"socket sending timeout: %is\\n\", nTime - pnode->nLastSend);\n+            pnode->fDisconnect = true;\n+        }\n+        else if (nTime - pnode->nLastRecv > (pnode->nVersion > BIP0031_VERSION ? TIMEOUT_INTERVAL : 90*60))\n+        {\n+            LogPrintf(\"socket receive timeout: %is\\n\", nTime - pnode->nLastRecv);\n+            pnode->fDisconnect = true;\n         }\n+        else if (pnode->nPingNonceSent && pnode->nPingUsecStart + TIMEOUT_INTERVAL * 1000000 < GetTimeMicros())\n+        {\n+            LogPrintf(\"ping timeout: %fs\\n\", 0.000001 * (GetTimeMicros() - pnode->nPingUsecStart));\n+            pnode->fDisconnect = true;\n+        }\n+        else if (!pnode->fSuccessfullyConnected)\n+        {\n+            LogPrint(BCLog::NET, \"version handshake timeout from %d\\n\", pnode->GetId());\n+            pnode->fDisconnect = true;\n+        }\n+    }\n+}\n \n-        //\n-        // Find which sockets have data to receive\n-        //\n-        struct timeval timeout;\n-        timeout.tv_sec  = 0;\n-        timeout.tv_usec = 50000; // frequency to poll pnode->vSend\n-\n-        fd_set fdsetRecv;\n-        fd_set fdsetSend;\n-        fd_set fdsetError;\n-        FD_ZERO(&fdsetRecv);\n-        FD_ZERO(&fdsetSend);\n-        FD_ZERO(&fdsetError);\n-        SOCKET hSocketMax = 0;\n-        bool have_fds = false;\n+void CConnman::SocketHandler()\n+{\n+    //\n+    // Find which sockets have data to receive\n+    //\n+    struct timeval timeout;\n+    timeout.tv_sec  = 0;\n+    timeout.tv_usec = 50000; // frequency to poll pnode->vSend\n \n-        for (const ListenSocket& hListenSocket : vhListenSocket) {\n-            FD_SET(hListenSocket.socket, &fdsetRecv);\n-            hSocketMax = std::max(hSocketMax, hListenSocket.socket);\n-            have_fds = true;\n-        }\n+    fd_set fdsetRecv;\n+    fd_set fdsetSend;\n+    fd_set fdsetError;\n+    FD_ZERO(&fdsetRecv);\n+    FD_ZERO(&fdsetSend);\n+    FD_ZERO(&fdsetError);\n+    SOCKET hSocketMax = 0;\n+    bool have_fds = false;\n \n+    for (const ListenSocket& hListenSocket : vhListenSocket) {\n+        FD_SET(hListenSocket.socket, &fdsetRecv);\n+        hSocketMax = std::max(hSocketMax, hListenSocket.socket);\n+        have_fds = true;\n+    }\n+\n+    {\n+        LOCK(cs_vNodes);\n+        for (CNode* pnode : vNodes)\n         {\n-            LOCK(cs_vNodes);\n-            for (CNode* pnode : vNodes)\n+            // Implement the following logic:\n+            // * If there is data to send, select() for sending data. As this only\n+            //   happens when optimistic write failed, we choose to first drain the\n+            //   write buffer in this case before receiving more. This avoids\n+            //   needlessly queueing received data, if the remote peer is not themselves\n+            //   receiving data. This means properly utilizing TCP flow control signalling.\n+            // * Otherwise, if there is space left in the receive buffer, select() for\n+            //   receiving data.\n+            // * Hand off all complete messages to the processor, to be handled without\n+            //   blocking here.\n+\n+            bool select_recv = !pnode->fPauseRecv;\n+            bool select_send;\n             {\n-                // Implement the following logic:\n-                // * If there is data to send, select() for sending data. As this only\n-                //   happens when optimistic write failed, we choose to first drain the\n-                //   write buffer in this case before receiving more. This avoids\n-                //   needlessly queueing received data, if the remote peer is not themselves\n-                //   receiving data. This means properly utilizing TCP flow control signalling.\n-                // * Otherwise, if there is space left in the receive buffer, select() for\n-                //   receiving data.\n-                // * Hand off all complete messages to the processor, to be handled without\n-                //   blocking here.\n-\n-                bool select_recv = !pnode->fPauseRecv;\n-                bool select_send;\n-                {\n-                    LOCK(pnode->cs_vSend);\n-                    select_send = !pnode->vSendMsg.empty();\n-                }\n+                LOCK(pnode->cs_vSend);\n+                select_send = !pnode->vSendMsg.empty();\n+            }\n \n-                LOCK(pnode->cs_hSocket);\n-                if (pnode->hSocket == INVALID_SOCKET)\n-                    continue;\n+            LOCK(pnode->cs_hSocket);\n+            if (pnode->hSocket == INVALID_SOCKET)\n+                continue;\n \n-                FD_SET(pnode->hSocket, &fdsetError);\n-                hSocketMax = std::max(hSocketMax, pnode->hSocket);\n-                have_fds = true;\n+            FD_SET(pnode->hSocket, &fdsetError);\n+            hSocketMax = std::max(hSocketMax, pnode->hSocket);\n+            have_fds = true;\n \n-                if (select_send) {\n-                    FD_SET(pnode->hSocket, &fdsetSend);\n-                    continue;\n-                }\n-                if (select_recv) {\n-                    FD_SET(pnode->hSocket, &fdsetRecv);\n-                }\n+            if (select_send) {\n+                FD_SET(pnode->hSocket, &fdsetSend);\n+                continue;\n+            }\n+            if (select_recv) {\n+                FD_SET(pnode->hSocket, &fdsetRecv);\n             }\n         }\n+    }\n \n-        int nSelect = select(have_fds ? hSocketMax + 1 : 0,\n-                             &fdsetRecv, &fdsetSend, &fdsetError, &timeout);\n-        if (interruptNet)\n-            return;\n+    int nSelect = select(have_fds ? hSocketMax + 1 : 0,\n+                         &fdsetRecv, &fdsetSend, &fdsetError, &timeout);\n+    if (interruptNet)\n+        return;\n \n-        if (nSelect == SOCKET_ERROR)\n+    if (nSelect == SOCKET_ERROR)\n+    {\n+        if (have_fds)\n         {\n-            if (have_fds)\n-            {\n-                int nErr = WSAGetLastError();\n-                LogPrintf(\"socket select error %s\\n\", NetworkErrorString(nErr));\n-                for (unsigned int i = 0; i <= hSocketMax; i++)\n-                    FD_SET(i, &fdsetRecv);\n-            }\n-            FD_ZERO(&fdsetSend);\n-            FD_ZERO(&fdsetError);\n-            if (!interruptNet.sleep_for(std::chrono::milliseconds(timeout.tv_usec/1000)))\n-                return;\n+            int nErr = WSAGetLastError();\n+            LogPrintf(\"socket select error %s\\n\", NetworkErrorString(nErr));\n+            for (unsigned int i = 0; i <= hSocketMax; i++)\n+                FD_SET(i, &fdsetRecv);\n         }\n+        FD_ZERO(&fdsetSend);\n+        FD_ZERO(&fdsetError);\n+        if (!interruptNet.sleep_for(std::chrono::milliseconds(timeout.tv_usec/1000)))\n+            return;\n+    }\n \n-        //\n-        // Accept new connections\n-        //\n-        for (const ListenSocket& hListenSocket : vhListenSocket)\n+    //\n+    // Accept new connections\n+    //\n+    for (const ListenSocket& hListenSocket : vhListenSocket)\n+    {\n+        if (hListenSocket.socket != INVALID_SOCKET && FD_ISSET(hListenSocket.socket, &fdsetRecv))\n         {\n-            if (hListenSocket.socket != INVALID_SOCKET && FD_ISSET(hListenSocket.socket, &fdsetRecv))\n-            {\n-                AcceptConnection(hListenSocket);\n-            }\n+            AcceptConnection(hListenSocket);\n         }\n+    }\n+\n+    //\n+    // Service each socket\n+    //\n+    std::vector<CNode*> vNodesCopy;\n+    {\n+        LOCK(cs_vNodes);\n+        vNodesCopy = vNodes;\n+        for (CNode* pnode : vNodesCopy)\n+            pnode->AddRef();\n+    }\n+    for (CNode* pnode : vNodesCopy)\n+    {\n+        if (interruptNet)\n+            return;\n \n         //\n-        // Service each socket\n+        // Receive\n         //\n-        std::vector<CNode*> vNodesCopy;\n+        bool recvSet = false;\n+        bool sendSet = false;\n+        bool errorSet = false;\n         {\n-            LOCK(cs_vNodes);\n-            vNodesCopy = vNodes;\n-            for (CNode* pnode : vNodesCopy)\n-                pnode->AddRef();\n+            LOCK(pnode->cs_hSocket);\n+            if (pnode->hSocket == INVALID_SOCKET)\n+                continue;\n+            recvSet = FD_ISSET(pnode->hSocket, &fdsetRecv);\n+            sendSet = FD_ISSET(pnode->hSocket, &fdsetSend);\n+            errorSet = FD_ISSET(pnode->hSocket, &fdsetError);\n         }\n-        for (CNode* pnode : vNodesCopy)\n+        if (recvSet || errorSet)\n         {\n-            if (interruptNet)\n-                return;\n-\n-            //\n-            // Receive\n-            //\n-            bool recvSet = false;\n-            bool sendSet = false;\n-            bool errorSet = false;\n+            // typical socket buffer is 8K-64K\n+            char pchBuf[0x10000];\n+            int nBytes = 0;\n             {\n                 LOCK(pnode->cs_hSocket);\n                 if (pnode->hSocket == INVALID_SOCKET)\n                     continue;\n-                recvSet = FD_ISSET(pnode->hSocket, &fdsetRecv);\n-                sendSet = FD_ISSET(pnode->hSocket, &fdsetSend);\n-                errorSet = FD_ISSET(pnode->hSocket, &fdsetError);\n+                nBytes = recv(pnode->hSocket, pchBuf, sizeof(pchBuf), MSG_DONTWAIT);\n             }\n-            if (recvSet || errorSet)\n+            if (nBytes > 0)\n             {\n-                // typical socket buffer is 8K-64K\n-                char pchBuf[0x10000];\n-                int nBytes = 0;\n-                {\n-                    LOCK(pnode->cs_hSocket);\n-                    if (pnode->hSocket == INVALID_SOCKET)\n-                        continue;\n-                    nBytes = recv(pnode->hSocket, pchBuf, sizeof(pchBuf), MSG_DONTWAIT);\n-                }\n-                if (nBytes > 0)\n-                {\n-                    bool notify = false;\n-                    if (!pnode->ReceiveMsgBytes(pchBuf, nBytes, notify))\n-                        pnode->CloseSocketDisconnect();\n-                    RecordBytesRecv(nBytes);\n-                    if (notify) {\n-                        size_t nSizeAdded = 0;\n-                        auto it(pnode->vRecvMsg.begin());\n-                        for (; it != pnode->vRecvMsg.end(); ++it) {\n-                            if (!it->complete())\n-                                break;\n-                            nSizeAdded += it->vRecv.size() + CMessageHeader::HEADER_SIZE;\n-                        }\n-                        {\n-                            LOCK(pnode->cs_vProcessMsg);\n-                            pnode->vProcessMsg.splice(pnode->vProcessMsg.end(), pnode->vRecvMsg, pnode->vRecvMsg.begin(), it);\n-                            pnode->nProcessQueueSize += nSizeAdded;\n-                            pnode->fPauseRecv = pnode->nProcessQueueSize > nReceiveFloodSize;\n-                        }\n-                        WakeMessageHandler();\n-                    }\n-                }\n-                else if (nBytes == 0)\n-                {\n-                    // socket closed gracefully\n-                    if (!pnode->fDisconnect) {\n-                        LogPrint(BCLog::NET, \"socket closed\\n\");\n-                    }\n+                bool notify = false;\n+                if (!pnode->ReceiveMsgBytes(pchBuf, nBytes, notify))\n                     pnode->CloseSocketDisconnect();\n-                }\n-                else if (nBytes < 0)\n-                {\n-                    // error\n-                    int nErr = WSAGetLastError();\n-                    if (nErr != WSAEWOULDBLOCK && nErr != WSAEMSGSIZE && nErr != WSAEINTR && nErr != WSAEINPROGRESS)\n+                RecordBytesRecv(nBytes);\n+                if (notify) {\n+                    size_t nSizeAdded = 0;\n+                    auto it(pnode->vRecvMsg.begin());\n+                    for (; it != pnode->vRecvMsg.end(); ++it) {\n+                        if (!it->complete())\n+                            break;\n+                        nSizeAdded += it->vRecv.size() + CMessageHeader::HEADER_SIZE;\n+                    }\n                     {\n-                        if (!pnode->fDisconnect)\n-                            LogPrintf(\"socket recv error %s\\n\", NetworkErrorString(nErr));\n-                        pnode->CloseSocketDisconnect();\n+                        LOCK(pnode->cs_vProcessMsg);\n+                        pnode->vProcessMsg.splice(pnode->vProcessMsg.end(), pnode->vRecvMsg, pnode->vRecvMsg.begin(), it);\n+                        pnode->nProcessQueueSize += nSizeAdded;\n+                        pnode->fPauseRecv = pnode->nProcessQueueSize > nReceiveFloodSize;\n                     }\n+                    WakeMessageHandler();\n                 }\n             }\n-\n-            //\n-            // Send\n-            //\n-            if (sendSet)\n+            else if (nBytes == 0)\n             {\n-                LOCK(pnode->cs_vSend);\n-                size_t nBytes = SocketSendData(pnode);\n-                if (nBytes) {\n-                    RecordBytesSent(nBytes);\n+                // socket closed gracefully\n+                if (!pnode->fDisconnect) {\n+                    LogPrint(BCLog::NET, \"socket closed\\n\");\n                 }\n+                pnode->CloseSocketDisconnect();\n             }\n-\n-            //\n-            // Inactivity checking\n-            //\n-            int64_t nTime = GetSystemTimeInSeconds();\n-            if (nTime - pnode->nTimeConnected > 60)\n+            else if (nBytes < 0)\n             {\n-                if (pnode->nLastRecv == 0 || pnode->nLastSend == 0)\n-                {\n-                    LogPrint(BCLog::NET, \"socket no message in first 60 seconds, %d %d from %d\\n\", pnode->nLastRecv != 0, pnode->nLastSend != 0, pnode->GetId());\n-                    pnode->fDisconnect = true;\n-                }\n-                else if (nTime - pnode->nLastSend > TIMEOUT_INTERVAL)\n-                {\n-                    LogPrintf(\"socket sending timeout: %is\\n\", nTime - pnode->nLastSend);\n-                    pnode->fDisconnect = true;\n-                }\n-                else if (nTime - pnode->nLastRecv > (pnode->nVersion > BIP0031_VERSION ? TIMEOUT_INTERVAL : 90*60))\n-                {\n-                    LogPrintf(\"socket receive timeout: %is\\n\", nTime - pnode->nLastRecv);\n-                    pnode->fDisconnect = true;\n-                }\n-                else if (pnode->nPingNonceSent && pnode->nPingUsecStart + TIMEOUT_INTERVAL * 1000000 < GetTimeMicros())\n-                {\n-                    LogPrintf(\"ping timeout: %fs\\n\", 0.000001 * (GetTimeMicros() - pnode->nPingUsecStart));\n-                    pnode->fDisconnect = true;\n-                }\n-                else if (!pnode->fSuccessfullyConnected)\n+                // error\n+                int nErr = WSAGetLastError();\n+                if (nErr != WSAEWOULDBLOCK && nErr != WSAEMSGSIZE && nErr != WSAEINTR && nErr != WSAEINPROGRESS)\n                 {\n-                    LogPrint(BCLog::NET, \"version handshake timeout from %d\\n\", pnode->GetId());\n-                    pnode->fDisconnect = true;\n+                    if (!pnode->fDisconnect)\n+                        LogPrintf(\"socket recv error %s\\n\", NetworkErrorString(nErr));\n+                    pnode->CloseSocketDisconnect();\n                 }\n             }\n         }\n+\n+        //\n+        // Send\n+        //\n+        if (sendSet)\n         {\n-            LOCK(cs_vNodes);\n-            for (CNode* pnode : vNodesCopy)\n-                pnode->Release();\n+            LOCK(pnode->cs_vSend);\n+            size_t nBytes = SocketSendData(pnode);\n+            if (nBytes) {\n+                RecordBytesSent(nBytes);\n+            }\n         }\n+\n+        InactivityCheck(pnode);\n+    }\n+    {\n+        LOCK(cs_vNodes);\n+        for (CNode* pnode : vNodesCopy)\n+            pnode->Release();\n+    }\n+}\n+\n+void CConnman::ThreadSocketHandler()\n+{\n+    while (!interruptNet)\n+    {\n+        DisconnectNodes();\n+        NotifyNumConnectionsChanged();\n+        SocketHandler();\n     }\n }\n \n@@ -1613,7 +1627,7 @@ void CConnman::ThreadDNSAddressSeed()\n \n         LOCK(cs_vNodes);\n         int nRelevant = 0;\n-        for (auto pnode : vNodes) {\n+        for (const CNode* pnode : vNodes) {\n             nRelevant += pnode->fSuccessfullyConnected && !pnode->fFeeler && !pnode->fOneShot && !pnode->m_manual_connection && !pnode->fInbound;\n         }\n         if (nRelevant >= 2) {\n@@ -1732,7 +1746,7 @@ int CConnman::GetExtraOutboundCount()\n     int nOutbound = 0;\n     {\n         LOCK(cs_vNodes);\n-        for (CNode* pnode : vNodes) {\n+        for (const CNode* pnode : vNodes) {\n             if (!pnode->fInbound && !pnode->m_manual_connection && !pnode->fFeeler && !pnode->fDisconnect && !pnode->fOneShot && pnode->fSuccessfullyConnected) {\n                 ++nOutbound;\n             }\n@@ -1802,7 +1816,7 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         std::set<std::vector<unsigned char> > setConnected;\n         {\n             LOCK(cs_vNodes);\n-            for (CNode* pnode : vNodes) {\n+            for (const CNode* pnode : vNodes) {\n                 if (!pnode->fInbound && !pnode->m_manual_connection) {\n                     // Netgroups for inbound and addnode peers are not excluded because our goal here\n                     // is to not use multiple of our limited outbound slots on a single netgroup\n@@ -2064,7 +2078,7 @@ void CConnman::ThreadMessageHandler()\n                 pnode->Release();\n         }\n \n-        std::unique_lock<std::mutex> lock(mutexMsgProc);\n+        WAIT_LOCK(mutexMsgProc, lock);\n         if (!fMoreWork) {\n             condMsgProc.wait_until(lock, std::chrono::steady_clock::now() + std::chrono::milliseconds(100), [this] { return fMsgProcWake; });\n         }\n@@ -2166,7 +2180,7 @@ void Discover()\n             }\n         }\n     }\n-#else\n+#elif (HAVE_DECL_GETIFADDRS && HAVE_DECL_FREEIFADDRS)\n     // Get local host ip\n     struct ifaddrs* myaddrs;\n     if (getifaddrs(&myaddrs) == 0)\n@@ -2216,6 +2230,7 @@ CConnman::CConnman(uint64_t nSeed0In, uint64_t nSeed1In) : nSeed0(nSeed0In), nSe\n     setBannedIsDirty = false;\n     fAddressesInitialized = false;\n     nLastNodeId = 0;\n+    nPrevNodeCount = 0;\n     nSendBufferMaxSize = 0;\n     nReceiveFloodSize = 0;\n     flagInterruptMsgProc = false;\n@@ -2346,7 +2361,7 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     flagInterruptMsgProc = false;\n \n     {\n-        std::unique_lock<std::mutex> lock(mutexMsgProc);\n+        LOCK(mutexMsgProc);\n         fMsgProcWake = false;\n     }\n "
      },
      {
        "sha": "32cc02f5a9c27de58ff1202207810bd9a4106141",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 16,
        "deletions": 7,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -11,6 +11,7 @@\n #include <amount.h>\n #include <bloom.h>\n #include <compat.h>\n+#include <crypto/siphash.h>\n #include <hash.h>\n #include <limitedmap.h>\n #include <netaddress.h>\n@@ -149,6 +150,7 @@ class CConnman\n         nLocalServices = connOptions.nLocalServices;\n         nMaxConnections = connOptions.nMaxConnections;\n         nMaxOutbound = std::min(connOptions.nMaxOutbound, connOptions.nMaxConnections);\n+        m_use_addrman_outgoing = connOptions.m_use_addrman_outgoing;\n         nMaxAddnode = connOptions.nMaxAddnode;\n         nMaxFeeler = connOptions.nMaxFeeler;\n         nBestHeight = connOptions.nBestHeight;\n@@ -174,6 +176,7 @@ class CConnman\n     void Stop();\n     void Interrupt();\n     bool GetNetworkActive() const { return fNetworkActive; };\n+    bool GetUseAddrmanOutgoing() const { return m_use_addrman_outgoing; };\n     void SetNetworkActive(bool active);\n     void OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSemaphoreGrant *grantOutbound = nullptr, const char *strDest = nullptr, bool fOneShot = false, bool fFeeler = false, bool manual_connection = false);\n     bool CheckIncomingNonce(uint64_t nonce);\n@@ -336,6 +339,10 @@ class CConnman\n     void ThreadOpenConnections(std::vector<std::string> connect);\n     void ThreadMessageHandler();\n     void AcceptConnection(const ListenSocket& hListenSocket);\n+    void DisconnectNodes();\n+    void NotifyNumConnectionsChanged();\n+    void InactivityCheck(CNode *pnode);\n+    void SocketHandler();\n     void ThreadSocketHandler();\n     void ThreadDNSAddressSeed();\n \n@@ -406,6 +413,7 @@ class CConnman\n     std::list<CNode*> vNodesDisconnected;\n     mutable CCriticalSection cs_vNodes;\n     std::atomic<NodeId> nLastNodeId;\n+    unsigned int nPrevNodeCount;\n \n     /** Services this instance offers */\n     ServiceFlags nLocalServices;\n@@ -416,6 +424,7 @@ class CConnman\n     int nMaxOutbound;\n     int nMaxAddnode;\n     int nMaxFeeler;\n+    bool m_use_addrman_outgoing;\n     std::atomic<int> nBestHeight;\n     CClientUIInterface* clientInterface;\n     NetEventsInterface* m_msgproc;\n@@ -427,7 +436,7 @@ class CConnman\n     bool fMsgProcWake;\n \n     std::condition_variable condMsgProc;\n-    std::mutex mutexMsgProc;\n+    Mutex mutexMsgProc;\n     std::atomic<bool> flagInterruptMsgProc;\n \n     CThreadInterrupt interruptNet;\n@@ -558,6 +567,7 @@ class CNodeStats\n     double dPingTime;\n     double dPingWait;\n     double dMinPing;\n+    CAmount minFeeFilter;\n     // Our address, as reported by the peer\n     std::string addrLocal;\n     // Address of this peer\n@@ -667,10 +677,10 @@ class CNode\n     // a) it allows us to not relay tx invs before receiving the peer's version message\n     // b) the peer may tell us in its version message that we should not relay tx invs\n     //    unless it loads a bloom filter.\n-    bool fRelayTxes; //protected by cs_filter\n+    bool fRelayTxes GUARDED_BY(cs_filter);\n     bool fSentAddr;\n     CSemaphoreGrant grantOutbound;\n-    CCriticalSection cs_filter;\n+    mutable CCriticalSection cs_filter;\n     std::unique_ptr<CBloomFilter> pfilter;\n     std::atomic<int> nRefCount;\n \n@@ -708,10 +718,9 @@ class CNode\n     std::multimap<int64_t, CInv> mapAskFor;\n     int64_t nNextInvSend;\n     // Used for headers announcements - unfiltered blocks to relay\n-    // Also protected by cs_inventory\n-    std::vector<uint256> vBlockHashesToAnnounce;\n-    // Used for BIP35 mempool sending, also protected by cs_inventory\n-    bool fSendMempool;\n+    std::vector<uint256> vBlockHashesToAnnounce GUARDED_BY(cs_inventory);\n+    // Used for BIP35 mempool sending\n+    bool fSendMempool GUARDED_BY(cs_inventory);\n \n     // Last time a \"MEMPOOL\" request was serviced.\n     std::atomic<int64_t> timeLastMempoolReq;"
      },
      {
        "sha": "f4ab3aa153fdc2b3ff57092deda8a629a13da9d9",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 80,
        "deletions": 86,
        "changes": 166,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -25,9 +25,9 @@\n #include <tinyformat.h>\n #include <txmempool.h>\n #include <ui_interface.h>\n-#include <util.h>\n-#include <utilmoneystr.h>\n-#include <utilstrencodings.h>\n+#include <util/system.h>\n+#include <util/moneystr.h>\n+#include <util/strencodings.h>\n \n #include <memory>\n \n@@ -70,7 +70,7 @@ struct COrphanTx {\n     NodeId fromPeer;\n     int64_t nTimeExpire;\n };\n-static CCriticalSection g_cs_orphans;\n+CCriticalSection g_cs_orphans;\n std::map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(g_cs_orphans);\n \n void EraseOrphansFor(NodeId peer);\n@@ -442,7 +442,7 @@ static void UpdateBlockAvailability(NodeId nodeid, const uint256 &hash) EXCLUSIV\n  * lNodesAnnouncingHeaderAndIDs, and keeping that list under a certain size by\n  * removing the first element if necessary.\n  */\n-static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman* connman)\n+static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman* connman) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n     AssertLockHeld(cs_main);\n     CNodeState* nodestate = State(nodeid);\n@@ -831,7 +831,7 @@ void Misbehaving(NodeId pnode, int howmuch, const std::string& message) EXCLUSIV\n // active chain if they are no more than a month older (both in time, and in\n // best equivalent proof of work) than the best header chain we know about and\n // we fully-validated them at some point.\n-static bool BlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Params& consensusParams)\n+static bool BlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Params& consensusParams) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n     AssertLockHeld(cs_main);\n     if (chainActive.Contains(pindex)) return true;\n@@ -882,7 +882,7 @@ void PeerLogicValidation::BlockConnected(const std::shared_ptr<const CBlock>& pb\n     // Erase orphan transactions included or precluded by this block\n     if (vOrphanErase.size()) {\n         int nErased = 0;\n-        for (uint256 &orphanHash : vOrphanErase) {\n+        for (const uint256& orphanHash : vOrphanErase) {\n             nErased += EraseOrphanTx(orphanHash);\n         }\n         LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx included or conflicted by block\\n\", nErased);\n@@ -1260,7 +1260,7 @@ void static ProcessGetBlockData(CNode* pfrom, const CChainParams& chainparams, c\n     }\n }\n \n-void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnman* connman, const std::atomic<bool>& interruptMsgProc)\n+void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnman* connman, const std::atomic<bool>& interruptMsgProc) LOCKS_EXCLUDED(cs_main)\n {\n     AssertLockNotHeld(cs_main);\n \n@@ -1618,8 +1618,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         return true;\n     }\n \n-    else if (strCommand == NetMsgType::VERSION)\n-    {\n+    if (strCommand == NetMsgType::VERSION) {\n         // Each connection can only send one version message\n         if (pfrom->nVersion != 0)\n         {\n@@ -1662,8 +1661,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             return false;\n         }\n \n-        if (nVersion < MIN_PEER_PROTO_VERSION)\n-        {\n+        if (nVersion < MIN_PEER_PROTO_VERSION) {\n             // disconnect from peers older than this proto version\n             LogPrint(BCLog::NET, \"peer=%d using obsolete version %i; disconnecting\\n\", pfrom->GetId(), nVersion);\n             if (enable_bip61) {\n@@ -1674,8 +1672,6 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             return false;\n         }\n \n-        if (nVersion == 10300)\n-            nVersion = 300;\n         if (!vRecv.empty())\n             vRecv >> addrFrom >> nNonce;\n         if (!vRecv.empty()) {\n@@ -1796,9 +1792,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         return true;\n     }\n \n-\n-    else if (pfrom->nVersion == 0)\n-    {\n+    if (pfrom->nVersion == 0) {\n         // Must have a version message before anything else\n         LOCK(cs_main);\n         Misbehaving(pfrom->GetId(), 1);\n@@ -1842,18 +1836,17 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n         }\n         pfrom->fSuccessfullyConnected = true;\n+        return true;\n     }\n \n-    else if (!pfrom->fSuccessfullyConnected)\n-    {\n+    if (!pfrom->fSuccessfullyConnected) {\n         // Must have a verack message before anything else\n         LOCK(cs_main);\n         Misbehaving(pfrom->GetId(), 1);\n         return false;\n     }\n \n-    else if (strCommand == NetMsgType::ADDR)\n-    {\n+    if (strCommand == NetMsgType::ADDR) {\n         std::vector<CAddress> vAddr;\n         vRecv >> vAddr;\n \n@@ -1900,16 +1893,16 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             pfrom->fGetAddr = false;\n         if (pfrom->fOneShot)\n             pfrom->fDisconnect = true;\n+        return true;\n     }\n \n-    else if (strCommand == NetMsgType::SENDHEADERS)\n-    {\n+    if (strCommand == NetMsgType::SENDHEADERS) {\n         LOCK(cs_main);\n         State(pfrom->GetId())->fPreferHeaders = true;\n+        return true;\n     }\n \n-    else if (strCommand == NetMsgType::SENDCMPCT)\n-    {\n+    if (strCommand == NetMsgType::SENDCMPCT) {\n         bool fAnnounceUsingCMPCTBLOCK = false;\n         uint64_t nCMPCTBLOCKVersion = 0;\n         vRecv >> fAnnounceUsingCMPCTBLOCK >> nCMPCTBLOCKVersion;\n@@ -1929,11 +1922,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     State(pfrom->GetId())->fSupportsDesiredCmpctVersion = (nCMPCTBLOCKVersion == 1);\n             }\n         }\n+        return true;\n     }\n \n-\n-    else if (strCommand == NetMsgType::INV)\n-    {\n+    if (strCommand == NetMsgType::INV) {\n         std::vector<CInv> vInv;\n         vRecv >> vInv;\n         if (vInv.size() > MAX_INV_SZ)\n@@ -1987,11 +1979,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 }\n             }\n         }\n+        return true;\n     }\n \n-\n-    else if (strCommand == NetMsgType::GETDATA)\n-    {\n+    if (strCommand == NetMsgType::GETDATA) {\n         std::vector<CInv> vInv;\n         vRecv >> vInv;\n         if (vInv.size() > MAX_INV_SZ)\n@@ -2009,11 +2000,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n \n         pfrom->vRecvGetData.insert(pfrom->vRecvGetData.end(), vInv.begin(), vInv.end());\n         ProcessGetData(pfrom, chainparams, connman, interruptMsgProc);\n+        return true;\n     }\n \n-\n-    else if (strCommand == NetMsgType::GETBLOCKS)\n-    {\n+    if (strCommand == NetMsgType::GETBLOCKS) {\n         CBlockLocator locator;\n         uint256 hashStop;\n         vRecv >> locator >> hashStop;\n@@ -2078,11 +2068,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 break;\n             }\n         }\n+        return true;\n     }\n \n-\n-    else if (strCommand == NetMsgType::GETBLOCKTXN)\n-    {\n+    if (strCommand == NetMsgType::GETBLOCKTXN) {\n         BlockTransactionsRequest req;\n         vRecv >> req;\n \n@@ -2128,11 +2117,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         assert(ret);\n \n         SendBlockTransactions(block, req, pfrom, connman);\n+        return true;\n     }\n \n-\n-    else if (strCommand == NetMsgType::GETHEADERS)\n-    {\n+    if (strCommand == NetMsgType::GETHEADERS) {\n         CBlockLocator locator;\n         uint256 hashStop;\n         vRecv >> locator >> hashStop;\n@@ -2196,11 +2184,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         // in the SendMessages logic.\n         nodestate->pindexBestHeaderSent = pindex ? pindex : chainActive.Tip();\n         connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::HEADERS, vHeaders));\n+        return true;\n     }\n \n-\n-    else if (strCommand == NetMsgType::TX)\n-    {\n+    if (strCommand == NetMsgType::TX) {\n         // Stop processing the transaction early if\n         // We are in blocks only mode and peer is either not whitelisted or whitelistrelay is off\n         if (!fRelayTxes && (!pfrom->fWhitelisted || !gArgs.GetBoolArg(\"-whitelistrelay\", DEFAULT_WHITELISTRELAY)))\n@@ -2301,7 +2288,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 }\n             }\n \n-            for (uint256 hash : vEraseQueue)\n+            for (const uint256& hash : vEraseQueue)\n                 EraseOrphanTx(hash);\n         }\n         else if (fMissingInputs)\n@@ -2370,6 +2357,23 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         for (const CTransactionRef& removedTx : lRemovedTxn)\n             AddToCompactExtraTransactions(removedTx);\n \n+        // If a tx has been detected by recentRejects, we will have reached\n+        // this point and the tx will have been ignored. Because we haven't run\n+        // the tx through AcceptToMemoryPool, we won't have computed a DoS\n+        // score for it or determined exactly why we consider it invalid.\n+        //\n+        // This means we won't penalize any peer subsequently relaying a DoSy\n+        // tx (even if we penalized the first peer who gave it to us) because\n+        // we have to account for recentRejects showing false positives. In\n+        // other words, we shouldn't penalize a peer if we aren't *sure* they\n+        // submitted a DoSy tx.\n+        //\n+        // Note that recentRejects doesn't just record DoSy or invalid\n+        // transactions, but any tx not accepted by the mempool, which may be\n+        // due to node policy (vs. consensus). So we can't blanket penalize a\n+        // peer simply for relaying a tx that our recentRejects has caught,\n+        // regardless of false positives.\n+\n         int nDoS = 0;\n         if (state.IsInvalid(nDoS))\n         {\n@@ -2384,10 +2388,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 Misbehaving(pfrom->GetId(), nDoS);\n             }\n         }\n+        return true;\n     }\n \n-\n-    else if (strCommand == NetMsgType::CMPCTBLOCK && !fImporting && !fReindex) // Ignore blocks received while importing\n+    if (strCommand == NetMsgType::CMPCTBLOCK && !fImporting && !fReindex) // Ignore blocks received while importing\n     {\n         CBlockHeaderAndShortTxIDs cmpctblock;\n         vRecv >> cmpctblock;\n@@ -2605,10 +2609,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 MarkBlockAsReceived(pblock->GetHash());\n             }\n         }\n-\n+        return true;\n     }\n \n-    else if (strCommand == NetMsgType::BLOCKTXN && !fImporting && !fReindex) // Ignore blocks received while importing\n+    if (strCommand == NetMsgType::BLOCKTXN && !fImporting && !fReindex) // Ignore blocks received while importing\n     {\n         BlockTransactions resp;\n         vRecv >> resp;\n@@ -2680,10 +2684,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 mapBlockSource.erase(pblock->GetHash());\n             }\n         }\n+        return true;\n     }\n \n-\n-    else if (strCommand == NetMsgType::HEADERS && !fImporting && !fReindex) // Ignore headers received while importing\n+    if (strCommand == NetMsgType::HEADERS && !fImporting && !fReindex) // Ignore headers received while importing\n     {\n         std::vector<CBlockHeader> headers;\n \n@@ -2708,7 +2712,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         return ProcessHeadersMessage(pfrom, connman, headers, chainparams, should_punish);\n     }\n \n-    else if (strCommand == NetMsgType::BLOCK && !fImporting && !fReindex) // Ignore blocks received while importing\n+    if (strCommand == NetMsgType::BLOCK && !fImporting && !fReindex) // Ignore blocks received while importing\n     {\n         std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n         vRecv >> *pblock;\n@@ -2734,11 +2738,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             LOCK(cs_main);\n             mapBlockSource.erase(pblock->GetHash());\n         }\n+        return true;\n     }\n \n-\n-    else if (strCommand == NetMsgType::GETADDR)\n-    {\n+    if (strCommand == NetMsgType::GETADDR) {\n         // This asymmetric behavior for inbound and outbound connections was introduced\n         // to prevent a fingerprinting attack: an attacker can send specific fake addresses\n         // to users' AddrMan and later request them by sending getaddr messages.\n@@ -2762,11 +2765,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         FastRandomContext insecure_rand;\n         for (const CAddress &addr : vAddr)\n             pfrom->PushAddress(addr, insecure_rand);\n+        return true;\n     }\n \n-\n-    else if (strCommand == NetMsgType::MEMPOOL)\n-    {\n+    if (strCommand == NetMsgType::MEMPOOL) {\n         if (!(pfrom->GetLocalServices() & NODE_BLOOM) && !pfrom->fWhitelisted)\n         {\n             LogPrint(BCLog::NET, \"mempool request with bloom filters disabled, disconnect peer=%d\\n\", pfrom->GetId());\n@@ -2783,11 +2785,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n \n         LOCK(pfrom->cs_inventory);\n         pfrom->fSendMempool = true;\n+        return true;\n     }\n \n-\n-    else if (strCommand == NetMsgType::PING)\n-    {\n+    if (strCommand == NetMsgType::PING) {\n         if (pfrom->nVersion > BIP0031_VERSION)\n         {\n             uint64_t nonce = 0;\n@@ -2805,11 +2806,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             // return very quickly.\n             connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::PONG, nonce));\n         }\n+        return true;\n     }\n \n-\n-    else if (strCommand == NetMsgType::PONG)\n-    {\n+    if (strCommand == NetMsgType::PONG) {\n         int64_t pingUsecEnd = nTimeReceived;\n         uint64_t nonce = 0;\n         size_t nAvail = vRecv.in_avail();\n@@ -2862,11 +2862,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         if (bPingFinished) {\n             pfrom->nPingNonceSent = 0;\n         }\n+        return true;\n     }\n \n-\n-    else if (strCommand == NetMsgType::FILTERLOAD)\n-    {\n+    if (strCommand == NetMsgType::FILTERLOAD) {\n         CBloomFilter filter;\n         vRecv >> filter;\n \n@@ -2883,11 +2882,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             pfrom->pfilter->UpdateEmptyFull();\n             pfrom->fRelayTxes = true;\n         }\n+        return true;\n     }\n \n-\n-    else if (strCommand == NetMsgType::FILTERADD)\n-    {\n+    if (strCommand == NetMsgType::FILTERADD) {\n         std::vector<unsigned char> vData;\n         vRecv >> vData;\n \n@@ -2908,19 +2906,19 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             LOCK(cs_main);\n             Misbehaving(pfrom->GetId(), 100);\n         }\n+        return true;\n     }\n \n-\n-    else if (strCommand == NetMsgType::FILTERCLEAR)\n-    {\n+    if (strCommand == NetMsgType::FILTERCLEAR) {\n         LOCK(pfrom->cs_filter);\n         if (pfrom->GetLocalServices() & NODE_BLOOM) {\n             pfrom->pfilter.reset(new CBloomFilter());\n         }\n         pfrom->fRelayTxes = true;\n+        return true;\n     }\n \n-    else if (strCommand == NetMsgType::FEEFILTER) {\n+    if (strCommand == NetMsgType::FEEFILTER) {\n         CAmount newFeeFilter = 0;\n         vRecv >> newFeeFilter;\n         if (MoneyRange(newFeeFilter)) {\n@@ -2930,24 +2928,21 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             }\n             LogPrint(BCLog::NET, \"received: feefilter of %s from peer=%d\\n\", CFeeRate(newFeeFilter).ToString(), pfrom->GetId());\n         }\n+        return true;\n     }\n \n-    else if (strCommand == NetMsgType::NOTFOUND) {\n+    if (strCommand == NetMsgType::NOTFOUND) {\n         // We do not care about the NOTFOUND message, but logging an Unknown Command\n         // message would be undesirable as we transmit it ourselves.\n+        return true;\n     }\n \n-    else {\n-        // Ignore unknown commands for extensibility\n-        LogPrint(BCLog::NET, \"Unknown command \\\"%s\\\" from peer=%d\\n\", SanitizeString(strCommand), pfrom->GetId());\n-    }\n-\n-\n-\n+    // Ignore unknown commands for extensibility\n+    LogPrint(BCLog::NET, \"Unknown command \\\"%s\\\" from peer=%d\\n\", SanitizeString(strCommand), pfrom->GetId());\n     return true;\n }\n \n-static bool SendRejectsAndCheckIfBanned(CNode* pnode, CConnman* connman, bool enable_bip61)\n+static bool SendRejectsAndCheckIfBanned(CNode* pnode, CConnman* connman, bool enable_bip61) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n     AssertLockHeld(cs_main);\n     CNodeState &state = *State(pnode->GetId());\n@@ -3166,8 +3161,6 @@ void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n         NodeId worst_peer = -1;\n         int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n \n-        LOCK(cs_main);\n-\n         connman->ForEachNode([&](CNode* pnode) {\n             AssertLockHeld(cs_main);\n \n@@ -3215,17 +3208,18 @@ void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n \n void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams)\n {\n+    LOCK(cs_main);\n+\n     if (connman == nullptr) return;\n \n     int64_t time_in_seconds = GetTime();\n \n     EvictExtraOutboundPeers(time_in_seconds);\n \n     if (time_in_seconds > m_stale_tip_check_time) {\n-        LOCK(cs_main);\n         // Check whether our tip is stale, and if so, allow using an extra\n         // outbound peer\n-        if (TipMayBeStale(consensusParams)) {\n+        if (!fImporting && !fReindex && connman->GetNetworkActive() && connman->GetUseAddrmanOutgoing() && TipMayBeStale(consensusParams)) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\", time_in_seconds - g_last_tip_update);\n             connman->SetTryNewOutboundPeer(true);\n         } else if (connman->GetTryNewOutboundPeer()) {"
      },
      {
        "sha": "0113e25f7e206f7e445c501f0a076f68597c38d9",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -9,13 +9,16 @@\n #include <net.h>\n #include <validationinterface.h>\n #include <consensus/params.h>\n+#include <sync.h>\n+\n+extern CCriticalSection cs_main;\n \n /** Default for -maxorphantx, maximum number of orphan transactions kept in memory */\n static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n /** Default number of orphan+recently-replaced txn to keep around for block reconstruction */\n static const unsigned int DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN = 100;\n /** Default for BIP61 (sending reject messages) */\n-static constexpr bool DEFAULT_ENABLE_BIP61 = true;\n+static constexpr bool DEFAULT_ENABLE_BIP61{false};\n \n class PeerLogicValidation final : public CValidationInterface, public NetEventsInterface {\n private:\n@@ -61,14 +64,14 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n \n     /** Consider evicting an outbound peer based on the amount of time they've been behind our tip */\n-    void ConsiderEviction(CNode *pto, int64_t time_in_seconds);\n+    void ConsiderEviction(CNode *pto, int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     /** Evict extra outbound peers. If we think our tip may be stale, connect to an extra outbound */\n     void CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams);\n     /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\n-    void EvictExtraOutboundPeers(int64_t time_in_seconds);\n+    void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n private:\n-    int64_t m_stale_tip_check_time; //! Next time to check for stale tip\n+    int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n     /** Enable BIP61 (sending reject messages) */\n     const bool m_enable_bip61;"
      },
      {
        "sha": "a0c7f8e3c2737e13d4d75c7e72c4ddf6c7d0f848",
        "filename": "src/netaddress.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -5,7 +5,7 @@\n \n #include <netaddress.h>\n #include <hash.h>\n-#include <utilstrencodings.h>\n+#include <util/strencodings.h>\n #include <tinyformat.h>\n \n static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n@@ -17,7 +17,6 @@ static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87,\n CNetAddr::CNetAddr()\n {\n     memset(ip, 0, sizeof(ip));\n-    scopeId = 0;\n }\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n@@ -83,6 +82,16 @@ unsigned int CNetAddr::GetByte(int n) const\n     return ip[15-n];\n }\n \n+bool CNetAddr::IsBindAny() const\n+{\n+    const int cmplen = IsIPv4() ? 4 : 16;\n+    for (int i = 0; i < cmplen; ++i) {\n+        if (GetByte(i)) return false;\n+    }\n+\n+    return true;\n+}\n+\n bool CNetAddr::IsIPv4() const\n {\n     return (memcmp(ip, pchIPv4, sizeof(pchIPv4)) == 0);"
      },
      {
        "sha": "ca435d17dcd440577953dff7318c301b72a9066f",
        "filename": "src/netaddress.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/netaddress.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/netaddress.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -33,7 +33,7 @@ class CNetAddr\n {\n     protected:\n         unsigned char ip[16]; // in network byte order\n-        uint32_t scopeId; // for scoped/link-local ipv6 addresses\n+        uint32_t scopeId{0}; // for scoped/link-local ipv6 addresses\n \n     public:\n         CNetAddr();\n@@ -55,6 +55,7 @@ class CNetAddr\n         bool SetInternal(const std::string& name);\n \n         bool SetSpecial(const std::string &strName); // for Tor addresses\n+        bool IsBindAny() const; // INADDR_ANY equivalent\n         bool IsIPv4() const;    // IPv4 mapped address (::FFFF:0:0/96, 0.0.0.0/0)\n         bool IsIPv6() const;    // IPv6 address (not mapped IPv4, not Tor)\n         bool IsRFC1918() const; // IPv4 private networks (10.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12)"
      },
      {
        "sha": "6a750d5141060527b887def2c957c1f9a44f0e49",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 22,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -10,17 +10,17 @@\n #include <uint256.h>\n #include <random.h>\n #include <tinyformat.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n \n #include <atomic>\n \n #ifndef WIN32\n #include <fcntl.h>\n+#else\n+#include <codecvt>\n #endif\n \n-#include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n-\n #if !defined(MSG_NOSIGNAL)\n #define MSG_NOSIGNAL 0\n #endif\n@@ -37,7 +37,7 @@ static const int SOCKS5_RECV_TIMEOUT = 20 * 1000;\n static std::atomic<bool> interruptSocks5Recv(false);\n \n enum Network ParseNetwork(std::string net) {\n-    boost::to_lower(net);\n+    Downcase(net);\n     if (net == \"ipv4\") return NET_IPV4;\n     if (net == \"ipv6\") return NET_IPV6;\n     if (net == \"onion\") return NET_ONION;\n@@ -191,10 +191,10 @@ enum SOCKSVersion: uint8_t {\n \n /** Values defined for METHOD in RFC1928 */\n enum SOCKS5Method: uint8_t {\n-    NOAUTH = 0x00,        //! No authentication required\n-    GSSAPI = 0x01,        //! GSSAPI\n-    USER_PASS = 0x02,     //! Username/password\n-    NO_ACCEPTABLE = 0xff, //! No acceptable methods\n+    NOAUTH = 0x00,        //!< No authentication required\n+    GSSAPI = 0x01,        //!< GSSAPI\n+    USER_PASS = 0x02,     //!< Username/password\n+    NO_ACCEPTABLE = 0xff, //!< No acceptable methods\n };\n \n /** Values defined for CMD in RFC1928 */\n@@ -206,15 +206,15 @@ enum SOCKS5Command: uint8_t {\n \n /** Values defined for REP in RFC1928 */\n enum SOCKS5Reply: uint8_t {\n-    SUCCEEDED = 0x00,        //! Succeeded\n-    GENFAILURE = 0x01,       //! General failure\n-    NOTALLOWED = 0x02,       //! Connection not allowed by ruleset\n-    NETUNREACHABLE = 0x03,   //! Network unreachable\n-    HOSTUNREACHABLE = 0x04,  //! Network unreachable\n-    CONNREFUSED = 0x05,      //! Connection refused\n-    TTLEXPIRED = 0x06,       //! TTL expired\n-    CMDUNSUPPORTED = 0x07,   //! Command not supported\n-    ATYPEUNSUPPORTED = 0x08, //! Address type not supported\n+    SUCCEEDED = 0x00,        //!< Succeeded\n+    GENFAILURE = 0x01,       //!< General failure\n+    NOTALLOWED = 0x02,       //!< Connection not allowed by ruleset\n+    NETUNREACHABLE = 0x03,   //!< Network unreachable\n+    HOSTUNREACHABLE = 0x04,  //!< Network unreachable\n+    CONNREFUSED = 0x05,      //!< Connection refused\n+    TTLEXPIRED = 0x06,       //!< TTL expired\n+    CMDUNSUPPORTED = 0x07,   //!< Command not supported\n+    ATYPEUNSUPPORTED = 0x08, //!< Address type not supported\n };\n \n /** Values defined for ATYPE in RFC1928 */\n@@ -651,13 +651,13 @@ bool LookupSubNet(const char* pszName, CSubNet& ret)\n #ifdef WIN32\n std::string NetworkErrorString(int err)\n {\n-    char buf[256];\n+    wchar_t buf[256];\n     buf[0] = 0;\n-    if(FormatMessageA(FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS | FORMAT_MESSAGE_MAX_WIDTH_MASK,\n+    if(FormatMessageW(FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS | FORMAT_MESSAGE_MAX_WIDTH_MASK,\n             nullptr, err, MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n-            buf, sizeof(buf), nullptr))\n+            buf, ARRAYSIZE(buf), nullptr))\n     {\n-        return strprintf(\"%s (%d)\", buf, err);\n+        return strprintf(\"%s (%d)\", std::wstring_convert<std::codecvt_utf8_utf16<wchar_t>,wchar_t>().to_bytes(buf), err);\n     }\n     else\n     {"
      },
      {
        "sha": "c7d8fee0ba70c5cc30b1b2bd67a2bf5c777cc2e5",
        "filename": "src/noui.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/noui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/noui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/noui.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -6,13 +6,15 @@\n #include <noui.h>\n \n #include <ui_interface.h>\n-#include <util.h>\n+#include <util/system.h>\n \n #include <cstdio>\n #include <stdint.h>\n #include <string>\n \n-static bool noui_ThreadSafeMessageBox(const std::string& message, const std::string& caption, unsigned int style)\n+#include <boost/signals2/connection.hpp>\n+\n+bool noui_ThreadSafeMessageBox(const std::string& message, const std::string& caption, unsigned int style)\n {\n     bool fSecure = style & CClientUIInterface::SECURE;\n     style &= ~CClientUIInterface::SECURE;\n@@ -39,19 +41,18 @@ static bool noui_ThreadSafeMessageBox(const std::string& message, const std::str\n     return false;\n }\n \n-static bool noui_ThreadSafeQuestion(const std::string& /* ignored interactive message */, const std::string& message, const std::string& caption, unsigned int style)\n+bool noui_ThreadSafeQuestion(const std::string& /* ignored interactive message */, const std::string& message, const std::string& caption, unsigned int style)\n {\n     return noui_ThreadSafeMessageBox(message, caption, style);\n }\n \n-static void noui_InitMessage(const std::string& message)\n+void noui_InitMessage(const std::string& message)\n {\n     LogPrintf(\"init message: %s\\n\", message);\n }\n \n void noui_connect()\n {\n-    // Connect bitcoind signal handlers\n     uiInterface.ThreadSafeMessageBox_connect(noui_ThreadSafeMessageBox);\n     uiInterface.ThreadSafeQuestion_connect(noui_ThreadSafeQuestion);\n     uiInterface.InitMessage_connect(noui_InitMessage);"
      },
      {
        "sha": "169c2bbd7fccd576cb0839264747d4475bc1a1d2",
        "filename": "src/noui.h",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/noui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/noui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/noui.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -5,6 +5,16 @@\n #ifndef BITCOIN_NOUI_H\n #define BITCOIN_NOUI_H\n \n-extern void noui_connect();\n+#include <string>\n+\n+/** Non-GUI handler, which logs and prints messages. */\n+bool noui_ThreadSafeMessageBox(const std::string& message, const std::string& caption, unsigned int style);\n+/** Non-GUI handler, which logs and prints questions. */\n+bool noui_ThreadSafeQuestion(const std::string& /* ignored interactive message */, const std::string& message, const std::string& caption, unsigned int style);\n+/** Non-GUI handler, which only logs a message. */\n+void noui_InitMessage(const std::string& message);\n+\n+/** Connect all bitcoind signal handlers */\n+void noui_connect();\n \n #endif // BITCOIN_NOUI_H"
      },
      {
        "sha": "6c30fd19505fb02c6e139c0d567c9d1be79f31a0",
        "filename": "src/outputtype.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/outputtype.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/outputtype.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/outputtype.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -6,6 +6,7 @@\n #ifndef BITCOIN_OUTPUTTYPE_H\n #define BITCOIN_OUTPUTTYPE_H\n \n+#include <attributes.h>\n #include <keystore.h>\n #include <script/standard.h>\n \n@@ -26,7 +27,7 @@ enum class OutputType {\n     CHANGE_AUTO,\n };\n \n-bool ParseOutputType(const std::string& str, OutputType& output_type);\n+NODISCARD bool ParseOutputType(const std::string& str, OutputType& output_type);\n const std::string& FormatOutputType(OutputType type);\n \n /**"
      },
      {
        "sha": "3afe6fe1b795099e536576a4f2636db42b99d783",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -10,7 +10,7 @@\n #include <primitives/transaction.h>\n #include <streams.h>\n #include <txmempool.h>\n-#include <util.h>\n+#include <util/system.h>\n \n static constexpr double INF_FEERATE = 1e99;\n "
      },
      {
        "sha": "90f159b48cff03d38ead431b8fcbe97cec7585d7",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 47,
        "deletions": 49,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -22,51 +22,6 @@ class CTxMemPoolEntry;\n class CTxMemPool;\n class TxConfirmStats;\n \n-/** \\class CBlockPolicyEstimator\n- * The BlockPolicyEstimator is used for estimating the feerate needed\n- * for a transaction to be included in a block within a certain number of\n- * blocks.\n- *\n- * At a high level the algorithm works by grouping transactions into buckets\n- * based on having similar feerates and then tracking how long it\n- * takes transactions in the various buckets to be mined.  It operates under\n- * the assumption that in general transactions of higher feerate will be\n- * included in blocks before transactions of lower feerate.   So for\n- * example if you wanted to know what feerate you should put on a transaction to\n- * be included in a block within the next 5 blocks, you would start by looking\n- * at the bucket with the highest feerate transactions and verifying that a\n- * sufficiently high percentage of them were confirmed within 5 blocks and\n- * then you would look at the next highest feerate bucket, and so on, stopping at\n- * the last bucket to pass the test.   The average feerate of transactions in this\n- * bucket will give you an indication of the lowest feerate you can put on a\n- * transaction and still have a sufficiently high chance of being confirmed\n- * within your desired 5 blocks.\n- *\n- * Here is a brief description of the implementation:\n- * When a transaction enters the mempool, we track the height of the block chain\n- * at entry.  All further calculations are conducted only on this set of \"seen\"\n- * transactions. Whenever a block comes in, we count the number of transactions\n- * in each bucket and the total amount of feerate paid in each bucket. Then we\n- * calculate how many blocks Y it took each transaction to be mined.  We convert\n- * from a number of blocks to a number of periods Y' each encompassing \"scale\"\n- * blocks.  This is tracked in 3 different data sets each up to a maximum\n- * number of periods. Within each data set we have an array of counters in each\n- * feerate bucket and we increment all the counters from Y' up to max periods\n- * representing that a tx was successfully confirmed in less than or equal to\n- * that many periods. We want to save a history of this information, so at any\n- * time we have a counter of the total number of transactions that happened in a\n- * given feerate bucket and the total number that were confirmed in each of the\n- * periods or less for any bucket.  We save this history by keeping an\n- * exponentially decaying moving average of each one of these stats.  This is\n- * done for a different decay in each of the 3 data sets to keep relevant data\n- * from different time horizons.  Furthermore we also keep track of the number\n- * unmined (in mempool or left mempool without being included in a block)\n- * transactions in each bucket and for how many blocks they have been\n- * outstanding and use both of these numbers to increase the number of transactions\n- * we've seen in that feerate bucket when calculating an estimate for any number\n- * of confirmations below the number of blocks they've been outstanding.\n- */\n-\n /* Identifier for each of the 3 different TxConfirmStats which will track\n  * history over different time horizons. */\n enum class FeeEstimateHorizon {\n@@ -95,9 +50,9 @@ std::string StringForFeeReason(FeeReason reason);\n \n /* Used to determine type of fee estimation requested */\n enum class FeeEstimateMode {\n-    UNSET,        //! Use default settings based on other criteria\n-    ECONOMICAL,   //! Force estimateSmartFee to use non-conservative estimates\n-    CONSERVATIVE, //! Force estimateSmartFee to use conservative estimates\n+    UNSET,        //!< Use default settings based on other criteria\n+    ECONOMICAL,   //!< Force estimateSmartFee to use non-conservative estimates\n+    CONSERVATIVE, //!< Force estimateSmartFee to use conservative estimates\n };\n \n bool FeeModeFromString(const std::string& mode_string, FeeEstimateMode& fee_estimate_mode);\n@@ -130,7 +85,50 @@ struct FeeCalculation\n     int returnedTarget = 0;\n };\n \n-/**\n+/** \\class CBlockPolicyEstimator\n+ * The BlockPolicyEstimator is used for estimating the feerate needed\n+ * for a transaction to be included in a block within a certain number of\n+ * blocks.\n+ *\n+ * At a high level the algorithm works by grouping transactions into buckets\n+ * based on having similar feerates and then tracking how long it\n+ * takes transactions in the various buckets to be mined.  It operates under\n+ * the assumption that in general transactions of higher feerate will be\n+ * included in blocks before transactions of lower feerate.   So for\n+ * example if you wanted to know what feerate you should put on a transaction to\n+ * be included in a block within the next 5 blocks, you would start by looking\n+ * at the bucket with the highest feerate transactions and verifying that a\n+ * sufficiently high percentage of them were confirmed within 5 blocks and\n+ * then you would look at the next highest feerate bucket, and so on, stopping at\n+ * the last bucket to pass the test.   The average feerate of transactions in this\n+ * bucket will give you an indication of the lowest feerate you can put on a\n+ * transaction and still have a sufficiently high chance of being confirmed\n+ * within your desired 5 blocks.\n+ *\n+ * Here is a brief description of the implementation:\n+ * When a transaction enters the mempool, we track the height of the block chain\n+ * at entry.  All further calculations are conducted only on this set of \"seen\"\n+ * transactions. Whenever a block comes in, we count the number of transactions\n+ * in each bucket and the total amount of feerate paid in each bucket. Then we\n+ * calculate how many blocks Y it took each transaction to be mined.  We convert\n+ * from a number of blocks to a number of periods Y' each encompassing \"scale\"\n+ * blocks.  This is tracked in 3 different data sets each up to a maximum\n+ * number of periods. Within each data set we have an array of counters in each\n+ * feerate bucket and we increment all the counters from Y' up to max periods\n+ * representing that a tx was successfully confirmed in less than or equal to\n+ * that many periods. We want to save a history of this information, so at any\n+ * time we have a counter of the total number of transactions that happened in a\n+ * given feerate bucket and the total number that were confirmed in each of the\n+ * periods or less for any bucket.  We save this history by keeping an\n+ * exponentially decaying moving average of each one of these stats.  This is\n+ * done for a different decay in each of the 3 data sets to keep relevant data\n+ * from different time horizons.  Furthermore we also keep track of the number\n+ * unmined (in mempool or left mempool without being included in a block)\n+ * transactions in each bucket and for how many blocks they have been\n+ * outstanding and use both of these numbers to increase the number of transactions\n+ * we've seen in that feerate bucket when calculating an estimate for any number\n+ * of confirmations below the number of blocks they've been outstanding.\n+ *\n  *  We want to be able to estimate feerates that are needed on tx's to be included in\n  * a certain number of blocks.  Every time a block is added to the best chain, this class records\n  * stats on the transactions included in that block"
      },
      {
        "sha": "d4cc538492b322b9a595bca87d8c187655062c10",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 16,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -11,8 +11,8 @@\n #include <validation.h>\n #include <coins.h>\n #include <tinyformat.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n \n \n CAmount GetDustThreshold(const CTxOut& txout, const CFeeRate& dustRelayFeeIn)\n@@ -34,7 +34,7 @@ CAmount GetDustThreshold(const CTxOut& txout, const CFeeRate& dustRelayFeeIn)\n     if (txout.scriptPubKey.IsUnspendable())\n         return 0;\n \n-    size_t nSize = GetSerializeSize(txout, SER_DISK, 0);\n+    size_t nSize = GetSerializeSize(txout);\n     int witnessversion = 0;\n     std::vector<unsigned char> witnessprogram;\n \n@@ -57,11 +57,11 @@ bool IsDust(const CTxOut& txout, const CFeeRate& dustRelayFeeIn)\n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType)\n {\n     std::vector<std::vector<unsigned char> > vSolutions;\n-    if (!Solver(scriptPubKey, whichType, vSolutions))\n-        return false;\n+    whichType = Solver(scriptPubKey, vSolutions);\n \n-    if (whichType == TX_MULTISIG)\n-    {\n+    if (whichType == TX_NONSTANDARD || whichType == TX_WITNESS_UNKNOWN) {\n+        return false;\n+    } else if (whichType == TX_MULTISIG) {\n         unsigned char m = vSolutions.front()[0];\n         unsigned char n = vSolutions.back()[0];\n         // Support up to x-of-3 multisig txns as standard\n@@ -70,10 +70,11 @@ bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType)\n         if (m < 1 || m > n)\n             return false;\n     } else if (whichType == TX_NULL_DATA &&\n-               (!fAcceptDatacarrier || scriptPubKey.size() > nMaxDatacarrierBytes))\n+               (!fAcceptDatacarrier || scriptPubKey.size() > nMaxDatacarrierBytes)) {\n           return false;\n+    }\n \n-    return whichType != TX_NONSTANDARD && whichType != TX_WITNESS_UNKNOWN;\n+    return true;\n }\n \n bool IsStandardTx(const CTransaction& tx, std::string& reason)\n@@ -166,14 +167,10 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n         const CTxOut& prev = mapInputs.AccessCoin(tx.vin[i].prevout).out;\n \n         std::vector<std::vector<unsigned char> > vSolutions;\n-        txnouttype whichType;\n-        // get the scriptPubKey corresponding to this input:\n-        const CScript& prevScript = prev.scriptPubKey;\n-        if (!Solver(prevScript, whichType, vSolutions))\n+        txnouttype whichType = Solver(prev.scriptPubKey, vSolutions);\n+        if (whichType == TX_NONSTANDARD) {\n             return false;\n-\n-        if (whichType == TX_SCRIPTHASH)\n-        {\n+        } else if (whichType == TX_SCRIPTHASH) {\n             std::vector<std::vector<unsigned char> > stack;\n             // convert the scriptSig into a stack, so we can inspect the redeemScript\n             if (!EvalScript(stack, tx.vin[i].scriptSig, SCRIPT_VERIFY_NONE, BaseSignatureChecker(), SigVersion::BASE))"
      },
      {
        "sha": "0dc130d104b3e2bfccb098fcaa77284f3c775e4c",
        "filename": "src/policy/rbf.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/policy/rbf.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/policy/rbf.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -7,7 +7,7 @@\n bool SignalsOptInRBF(const CTransaction &tx)\n {\n     for (const CTxIn &txin : tx.vin) {\n-        if (txin.nSequence < std::numeric_limits<unsigned int>::max()-1) {\n+        if (txin.nSequence <= MAX_BIP125_RBF_SEQUENCE) {\n             return true;\n         }\n     }"
      },
      {
        "sha": "99e57516343525d7ad9e97524ff8859a86f98505",
        "filename": "src/prevector.h",
        "status": "modified",
        "additions": 8,
        "deletions": 24,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/prevector.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/prevector.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/prevector.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -10,12 +10,11 @@\n #include <stdint.h>\n #include <string.h>\n \n+#include <algorithm>\n #include <cstddef>\n #include <iterator>\n #include <type_traits>\n \n-#include <compat.h>\n-\n #pragma pack(push, 1)\n /** Implements a drop-in replacement for std::vector<T> which stores up to N\n  *  elements directly (without heap allocation). The types Size and Diff are\n@@ -197,23 +196,8 @@ class prevector {\n     T* item_ptr(difference_type pos) { return is_direct() ? direct_ptr(pos) : indirect_ptr(pos); }\n     const T* item_ptr(difference_type pos) const { return is_direct() ? direct_ptr(pos) : indirect_ptr(pos); }\n \n-    void fill(T* dst, ptrdiff_t count) {\n-        if (IS_TRIVIALLY_CONSTRUCTIBLE<T>::value) {\n-            // The most common use of prevector is where T=unsigned char. For\n-            // trivially constructible types, we can use memset() to avoid\n-            // looping.\n-            ::memset(dst, 0, count * sizeof(T));\n-        } else {\n-            for (auto i = 0; i < count; ++i) {\n-                new(static_cast<void*>(dst + i)) T();\n-            }\n-        }\n-    }\n-\n-    void fill(T* dst, ptrdiff_t count, const T& value) {\n-        for (auto i = 0; i < count; ++i) {\n-            new(static_cast<void*>(dst + i)) T(value);\n-        }\n+    void fill(T* dst, ptrdiff_t count, const T& value = T{}) {\n+        std::fill_n(dst, count, value);\n     }\n \n     template<typename InputIterator>\n@@ -248,32 +232,32 @@ class prevector {\n \n     prevector() : _size(0), _union{{}} {}\n \n-    explicit prevector(size_type n) : _size(0) {\n+    explicit prevector(size_type n) : prevector() {\n         resize(n);\n     }\n \n-    explicit prevector(size_type n, const T& val = T()) : _size(0) {\n+    explicit prevector(size_type n, const T& val) : prevector() {\n         change_capacity(n);\n         _size += n;\n         fill(item_ptr(0), n, val);\n     }\n \n     template<typename InputIterator>\n-    prevector(InputIterator first, InputIterator last) : _size(0) {\n+    prevector(InputIterator first, InputIterator last) : prevector() {\n         size_type n = last - first;\n         change_capacity(n);\n         _size += n;\n         fill(item_ptr(0), first, last);\n     }\n \n-    prevector(const prevector<N, T, Size, Diff>& other) : _size(0) {\n+    prevector(const prevector<N, T, Size, Diff>& other) : prevector() {\n         size_type n = other.size();\n         change_capacity(n);\n         _size += n;\n         fill(item_ptr(0), other.begin(),  other.end());\n     }\n \n-    prevector(prevector<N, T, Size, Diff>&& other) : _size(0) {\n+    prevector(prevector<N, T, Size, Diff>&& other) : prevector() {\n         swap(other);\n     }\n "
      },
      {
        "sha": "a0c2e3f1257497e4bcb9e4eb7add10e41d0e625c",
        "filename": "src/primitives/block.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/primitives/block.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/primitives/block.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -7,7 +7,7 @@\n \n #include <hash.h>\n #include <tinyformat.h>\n-#include <utilstrencodings.h>\n+#include <util/strencodings.h>\n #include <crypto/common.h>\n \n uint256 CBlockHeader::GetHash() const"
      },
      {
        "sha": "28c145f71d0c795d210b2863ae2440a7dbe56fba",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -7,7 +7,7 @@\n \n #include <hash.h>\n #include <tinyformat.h>\n-#include <utilstrencodings.h>\n+#include <util/strencodings.h>\n \n std::string COutPoint::ToString() const\n {\n@@ -93,7 +93,7 @@ CAmount CTransaction::GetValueOut() const\n \n unsigned int CTransaction::GetTotalSize() const\n {\n-    return ::GetSerializeSize(*this, SER_NETWORK, PROTOCOL_VERSION);\n+    return ::GetSerializeSize(*this, PROTOCOL_VERSION);\n }\n \n std::string CTransaction::ToString() const"
      },
      {
        "sha": "0f834eb8c14ffd6a30561eedbf6c629ac55bf889",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -64,7 +64,7 @@ class CTxIn\n     COutPoint prevout;\n     CScript scriptSig;\n     uint32_t nSequence;\n-    CScriptWitness scriptWitness; //! Only serialized through CTransaction\n+    CScriptWitness scriptWitness; //!< Only serialized through CTransaction\n \n     /* Setting nSequence to this value for every input in a transaction\n      * disables nLockTime. */\n@@ -73,7 +73,7 @@ class CTxIn\n     /* Below flags apply in the context of BIP 68*/\n     /* If this flag set, CTxIn::nSequence is NOT interpreted as a\n      * relative lock-time. */\n-    static const uint32_t SEQUENCE_LOCKTIME_DISABLE_FLAG = (1 << 31);\n+    static const uint32_t SEQUENCE_LOCKTIME_DISABLE_FLAG = (1U << 31);\n \n     /* If CTxIn::nSequence encodes a relative lock-time and this flag\n      * is set, the relative lock-time has units of 512 seconds,"
      },
      {
        "sha": "bdf236c2c76b203391a637ee383b9bf340727f1b",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -5,8 +5,8 @@\n \n #include <protocol.h>\n \n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n \n #ifndef WIN32\n # include <arpa/inet.h>"
      },
      {
        "sha": "0eb18f7cd5fdc716051b29a7eb5bf14ecd8dbf1d",
        "filename": "src/qt/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/README.md?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -64,8 +64,8 @@ Represents the view to a single wallet.\n * `callback.h`\n * `guiconstants.h`: UI colors, app name, etc\n * `guiutil.h`: several helper functions\n-* `macdockiconhandler.(h/cpp)`\n-* `macdockiconhandler.(h/cpp)`: display notifications in macOS\n+* `macdockiconhandler.(h/mm)`: macOS dock icon handler\n+* `macnotificationhandler.(h/mm)`: display notifications in macOS\n \n ## Contribute\n "
      },
      {
        "sha": "26bdf60d4a0f7b4c1d9868b6e67f561e62af1ca4",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -85,7 +85,7 @@ AddressBookPage::AddressBookPage(const PlatformStyle *platformStyle, Mode _mode,\n         case SendingTab: setWindowTitle(tr(\"Choose the address to send coins to\")); break;\n         case ReceivingTab: setWindowTitle(tr(\"Choose the address to receive coins with\")); break;\n         }\n-        connect(ui->tableView, SIGNAL(doubleClicked(QModelIndex)), this, SLOT(accept()));\n+        connect(ui->tableView, &QTableView::doubleClicked, this, &QDialog::accept);\n         ui->tableView->setEditTriggers(QAbstractItemView::NoEditTriggers);\n         ui->tableView->setFocus();\n         ui->closeButton->setText(tr(\"C&hoose\"));\n@@ -129,14 +129,14 @@ AddressBookPage::AddressBookPage(const PlatformStyle *platformStyle, Mode _mode,\n     contextMenu->addSeparator();\n \n     // Connect signals for context menu actions\n-    connect(copyAddressAction, SIGNAL(triggered()), this, SLOT(on_copyAddress_clicked()));\n-    connect(copyLabelAction, SIGNAL(triggered()), this, SLOT(onCopyLabelAction()));\n-    connect(editAction, SIGNAL(triggered()), this, SLOT(onEditAction()));\n-    connect(deleteAction, SIGNAL(triggered()), this, SLOT(on_deleteAddress_clicked()));\n+    connect(copyAddressAction, &QAction::triggered, this, &AddressBookPage::on_copyAddress_clicked);\n+    connect(copyLabelAction, &QAction::triggered, this, &AddressBookPage::onCopyLabelAction);\n+    connect(editAction, &QAction::triggered, this, &AddressBookPage::onEditAction);\n+    connect(deleteAction, &QAction::triggered, this, &AddressBookPage::on_deleteAddress_clicked);\n \n-    connect(ui->tableView, SIGNAL(customContextMenuRequested(QPoint)), this, SLOT(contextualMenu(QPoint)));\n+    connect(ui->tableView, &QWidget::customContextMenuRequested, this, &AddressBookPage::contextualMenu);\n \n-    connect(ui->closeButton, SIGNAL(clicked()), this, SLOT(accept()));\n+    connect(ui->closeButton, &QPushButton::clicked, this, &QDialog::accept);\n }\n \n AddressBookPage::~AddressBookPage()\n@@ -154,7 +154,7 @@ void AddressBookPage::setModel(AddressTableModel *_model)\n     proxyModel = new AddressBookSortFilterProxyModel(type, this);\n     proxyModel->setSourceModel(_model);\n \n-    connect(ui->searchLineEdit, SIGNAL(textChanged(QString)), proxyModel, SLOT(setFilterWildcard(QString)));\n+    connect(ui->searchLineEdit, &QLineEdit::textChanged, proxyModel, &QSortFilterProxyModel::setFilterWildcard);\n \n     ui->tableView->setModel(proxyModel);\n     ui->tableView->sortByColumn(0, Qt::AscendingOrder);\n@@ -163,11 +163,11 @@ void AddressBookPage::setModel(AddressTableModel *_model)\n     ui->tableView->horizontalHeader()->setSectionResizeMode(AddressTableModel::Label, QHeaderView::Stretch);\n     ui->tableView->horizontalHeader()->setSectionResizeMode(AddressTableModel::Address, QHeaderView::ResizeToContents);\n \n-    connect(ui->tableView->selectionModel(), SIGNAL(selectionChanged(QItemSelection,QItemSelection)),\n-        this, SLOT(selectionChanged()));\n+    connect(ui->tableView->selectionModel(), &QItemSelectionModel::selectionChanged,\n+        this, &AddressBookPage::selectionChanged);\n \n     // Select row for newly created address\n-    connect(_model, SIGNAL(rowsInserted(QModelIndex,int,int)), this, SLOT(selectNewAddress(QModelIndex,int,int)));\n+    connect(_model, &AddressTableModel::rowsInserted, this, &AddressBookPage::selectNewAddress);\n \n     selectionChanged();\n }"
      },
      {
        "sha": "2f88e15d21ba49750f90f12f26c68856e0f5c94c",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -71,7 +71,7 @@ class AddressTablePriv\n     QList<AddressTableEntry> cachedAddressTable;\n     AddressTableModel *parent;\n \n-    AddressTablePriv(AddressTableModel *_parent):\n+    explicit AddressTablePriv(AddressTableModel *_parent):\n         parent(_parent) {}\n \n     void refreshAddressTable(interfaces::Wallet& wallet)"
      },
      {
        "sha": "821c23c4674623662b89f8ae6ece025a476fd619",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -70,10 +70,10 @@ AskPassphraseDialog::AskPassphraseDialog(Mode _mode, QWidget *parent) :\n             break;\n     }\n     textChanged();\n-    connect(ui->toggleShowPasswordButton, SIGNAL(toggled(bool)), this, SLOT(toggleShowPassword(bool)));\n-    connect(ui->passEdit1, SIGNAL(textChanged(QString)), this, SLOT(textChanged()));\n-    connect(ui->passEdit2, SIGNAL(textChanged(QString)), this, SLOT(textChanged()));\n-    connect(ui->passEdit3, SIGNAL(textChanged(QString)), this, SLOT(textChanged()));\n+    connect(ui->toggleShowPasswordButton, &QPushButton::toggled, this, &AskPassphraseDialog::toggleShowPassword);\n+    connect(ui->passEdit1, &QLineEdit::textChanged, this, &AskPassphraseDialog::textChanged);\n+    connect(ui->passEdit2, &QLineEdit::textChanged, this, &AskPassphraseDialog::textChanged);\n+    connect(ui->passEdit3, &QLineEdit::textChanged, this, &AskPassphraseDialog::textChanged);\n }\n \n AskPassphraseDialog::~AskPassphraseDialog()\n@@ -123,16 +123,15 @@ void AskPassphraseDialog::accept()\n                 {\n                     QMessageBox::warning(this, tr(\"Wallet encrypted\"),\n                                          \"<qt>\" +\n-                                         tr(\"%1 will close now to finish the encryption process. \"\n+                                         tr(\"Your wallet is now encrypted. \"\n                                          \"Remember that encrypting your wallet cannot fully protect \"\n-                                         \"your bitcoins from being stolen by malware infecting your computer.\").arg(tr(PACKAGE_NAME)) +\n+                                         \"your bitcoins from being stolen by malware infecting your computer.\") +\n                                          \"<br><br><b>\" +\n                                          tr(\"IMPORTANT: Any previous backups you have made of your wallet file \"\n                                          \"should be replaced with the newly generated, encrypted wallet file. \"\n                                          \"For security reasons, previous backups of the unencrypted wallet file \"\n                                          \"will become useless as soon as you start using the new, encrypted wallet.\") +\n                                          \"</b></qt>\");\n-                    QApplication::quit();\n                 }\n                 else\n                 {\n@@ -153,14 +152,15 @@ void AskPassphraseDialog::accept()\n         }\n         } break;\n     case Unlock:\n-        if(!model->setWalletLocked(false, oldpass))\n-        {\n-            QMessageBox::critical(this, tr(\"Wallet unlock failed\"),\n-                                  tr(\"The passphrase entered for the wallet decryption was incorrect.\"));\n-        }\n-        else\n-        {\n-            QDialog::accept(); // Success\n+        try {\n+            if (!model->setWalletLocked(false, oldpass)) {\n+                QMessageBox::critical(this, tr(\"Wallet unlock failed\"),\n+                                      tr(\"The passphrase entered for the wallet decryption was incorrect.\"));\n+            } else {\n+                QDialog::accept(); // Success\n+            }\n+        } catch (const std::runtime_error& e) {\n+            QMessageBox::critical(this, tr(\"Wallet unlock failed\"), e.what());\n         }\n         break;\n     case Decrypt:"
      },
      {
        "sha": "dcfe3dcc57e71c8c389e7bd9eaaa2c5342fcc452",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -10,7 +10,7 @@\n \n #include <interfaces/node.h>\n #include <sync.h>\n-#include <utiltime.h>\n+#include <util/time.h>\n \n #include <QDebug>\n #include <QList>"
      },
      {
        "sha": "de236a016f6186c0d147816b82c418c2d5264e86",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 43,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -28,10 +28,11 @@\n \n #include <interfaces/handler.h>\n #include <interfaces/node.h>\n+#include <noui.h>\n #include <rpc/server.h>\n #include <ui_interface.h>\n #include <uint256.h>\n-#include <util.h>\n+#include <util/system.h>\n #include <warnings.h>\n \n #include <walletinitinterface.h>\n@@ -50,7 +51,6 @@\n #include <QThread>\n #include <QTimer>\n #include <QTranslator>\n-#include <QSslConfiguration>\n \n #if defined(QT_STATICPLUGIN)\n #include <QtPlugin>\n@@ -71,18 +71,15 @@ Q_DECLARE_METATYPE(bool*)\n Q_DECLARE_METATYPE(CAmount)\n Q_DECLARE_METATYPE(uint256)\n \n-static void InitMessage(const std::string &message)\n+static void InitMessage(const std::string& message)\n {\n-    LogPrintf(\"init message: %s\\n\", message);\n+    noui_InitMessage(message);\n }\n \n-/*\n-   Translate string to current locale using Qt.\n- */\n-static std::string Translate(const char* psz)\n-{\n+/** Translate string to current locale using Qt. */\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = [](const char* psz) {\n     return QCoreApplication::translate(\"bitcoin-core\", psz).toStdString();\n-}\n+};\n \n static QString GetLangTerritory()\n {\n@@ -353,7 +350,7 @@ void BitcoinApplication::createWindow(const NetworkStyle *networkStyle)\n     window = new BitcoinGUI(m_node, platformStyle, networkStyle, 0);\n \n     pollShutdownTimer = new QTimer(window);\n-    connect(pollShutdownTimer, SIGNAL(timeout()), window, SLOT(detectShutdown()));\n+    connect(pollShutdownTimer, &QTimer::timeout, window, &BitcoinGUI::detectShutdown);\n }\n \n void BitcoinApplication::createSplashScreen(const NetworkStyle *networkStyle)\n@@ -362,8 +359,8 @@ void BitcoinApplication::createSplashScreen(const NetworkStyle *networkStyle)\n     // We don't hold a direct pointer to the splash screen after creation, but the splash\n     // screen will take care of deleting itself when slotFinish happens.\n     splash->show();\n-    connect(this, SIGNAL(splashFinished(QWidget*)), splash, SLOT(slotFinish(QWidget*)));\n-    connect(this, SIGNAL(requestedShutdown()), splash, SLOT(close()));\n+    connect(this, &BitcoinApplication::splashFinished, splash, &SplashScreen::slotFinish);\n+    connect(this, &BitcoinApplication::requestedShutdown, splash, &QWidget::close);\n }\n \n void BitcoinApplication::startThread()\n@@ -375,14 +372,14 @@ void BitcoinApplication::startThread()\n     executor->moveToThread(coreThread);\n \n     /*  communication to and from thread */\n-    connect(executor, SIGNAL(initializeResult(bool)), this, SLOT(initializeResult(bool)));\n-    connect(executor, SIGNAL(shutdownResult()), this, SLOT(shutdownResult()));\n-    connect(executor, SIGNAL(runawayException(QString)), this, SLOT(handleRunawayException(QString)));\n-    connect(this, SIGNAL(requestedInitialize()), executor, SLOT(initialize()));\n-    connect(this, SIGNAL(requestedShutdown()), executor, SLOT(shutdown()));\n+    connect(executor, &BitcoinCore::initializeResult, this, &BitcoinApplication::initializeResult);\n+    connect(executor, &BitcoinCore::shutdownResult, this, &BitcoinApplication::shutdownResult);\n+    connect(executor, &BitcoinCore::runawayException, this, &BitcoinApplication::handleRunawayException);\n+    connect(this, &BitcoinApplication::requestedInitialize, executor, &BitcoinCore::initialize);\n+    connect(this, &BitcoinApplication::requestedShutdown, executor, &BitcoinCore::shutdown);\n     /*  make sure executor object is deleted in its own thread */\n-    connect(this, SIGNAL(stopThread()), executor, SLOT(deleteLater()));\n-    connect(this, SIGNAL(stopThread()), coreThread, SLOT(quit()));\n+    connect(this, &BitcoinApplication::stopThread, executor, &QObject::deleteLater);\n+    connect(this, &BitcoinApplication::stopThread, coreThread, &QThread::quit);\n \n     coreThread->start();\n }\n@@ -419,7 +416,7 @@ void BitcoinApplication::requestShutdown()\n \n #ifdef ENABLE_WALLET\n     window->removeAllWallets();\n-    for (WalletModel *walletModel : m_wallet_models) {\n+    for (const WalletModel* walletModel : m_wallet_models) {\n         delete walletModel;\n     }\n     m_wallet_models.clear();\n@@ -442,9 +439,11 @@ void BitcoinApplication::addWallet(WalletModel* walletModel)\n         window->setCurrentWallet(walletModel->getWalletName());\n     }\n \n-    connect(walletModel, SIGNAL(coinsSent(WalletModel*, SendCoinsRecipient, QByteArray)),\n-        paymentServer, SLOT(fetchPaymentACK(WalletModel*, const SendCoinsRecipient&, QByteArray)));\n-    connect(walletModel, SIGNAL(unload()), this, SLOT(removeWallet()));\n+#ifdef ENABLE_BIP70\n+    connect(walletModel, &WalletModel::coinsSent,\n+        paymentServer, &PaymentServer::fetchPaymentACK);\n+#endif\n+    connect(walletModel, &WalletModel::unload, this, &BitcoinApplication::removeWallet);\n \n     m_wallet_models.push_back(walletModel);\n #endif\n@@ -470,7 +469,9 @@ void BitcoinApplication::initializeResult(bool success)\n         // Log this only after AppInitMain finishes, as then logging setup is guaranteed complete\n         qWarning() << \"Platform customization:\" << platformStyle->getName();\n #ifdef ENABLE_WALLET\n+#ifdef ENABLE_BIP70\n         PaymentServer::LoadRootCAs();\n+#endif\n         paymentServer->setOptionsModel(optionsModel);\n #endif\n \n@@ -504,13 +505,12 @@ void BitcoinApplication::initializeResult(bool success)\n #ifdef ENABLE_WALLET\n         // Now that initialization/startup is done, process any command-line\n         // bitcoin: URIs or payment requests:\n-        connect(paymentServer, SIGNAL(receivedPaymentRequest(SendCoinsRecipient)),\n-                         window, SLOT(handlePaymentRequest(SendCoinsRecipient)));\n-        connect(window, SIGNAL(receivedURI(QString)),\n-                         paymentServer, SLOT(handleURIOrFile(QString)));\n-        connect(paymentServer, SIGNAL(message(QString,QString,unsigned int)),\n-                         window, SLOT(message(QString,QString,unsigned int)));\n-        QTimer::singleShot(100, paymentServer, SLOT(uiReady()));\n+        connect(paymentServer, &PaymentServer::receivedPaymentRequest, window, &BitcoinGUI::handlePaymentRequest);\n+        connect(window, &BitcoinGUI::receivedURI, paymentServer, &PaymentServer::handleURIOrFile);\n+        connect(paymentServer, &PaymentServer::message, [this](const QString& title, const QString& message, unsigned int style) {\n+            window->message(title, message, style);\n+        });\n+        QTimer::singleShot(100, paymentServer, &PaymentServer::uiReady);\n #endif\n         pollShutdownTimer->start(200);\n     } else {\n@@ -540,7 +540,7 @@ WId BitcoinApplication::getMainWinId() const\n \n static void SetupUIArgs()\n {\n-#ifdef ENABLE_WALLET\n+#if defined(ENABLE_WALLET) && defined(ENABLE_BIP70)\n     gArgs.AddArg(\"-allowselfsignedrootcertificates\", strprintf(\"Allow self signed root certificates (default: %u)\", DEFAULT_SELFSIGNED_ROOTCERTS), true, OptionsCategory::GUI);\n #endif\n     gArgs.AddArg(\"-choosedatadir\", strprintf(\"Choose data directory on startup (default: %u)\", DEFAULT_CHOOSE_DATADIR), false, OptionsCategory::GUI);\n@@ -555,6 +555,10 @@ static void SetupUIArgs()\n #ifndef BITCOIN_QT_TEST\n int main(int argc, char *argv[])\n {\n+#ifdef WIN32\n+    util::WinCmdLineArgs winArgs;\n+    std::tie(argc, argv) = winArgs.get();\n+#endif\n     SetupEnvironment();\n \n     std::unique_ptr<interfaces::Node> node = interfaces::MakeNode();\n@@ -566,30 +570,21 @@ int main(int argc, char *argv[])\n     Q_INIT_RESOURCE(bitcoin_locale);\n \n     BitcoinApplication app(*node, argc, argv);\n-#if QT_VERSION > 0x050100\n     // Generate high-dpi pixmaps\n     QApplication::setAttribute(Qt::AA_UseHighDpiPixmaps);\n-#endif\n #if QT_VERSION >= 0x050600\n     QGuiApplication::setAttribute(Qt::AA_EnableHighDpiScaling);\n #endif\n #ifdef Q_OS_MAC\n     QApplication::setAttribute(Qt::AA_DontShowIconsInMenus);\n #endif\n-#if QT_VERSION >= 0x050500\n-    // Because of the POODLE attack it is recommended to disable SSLv3 (https://disablessl3.com/),\n-    // so set SSL protocols to TLS1.0+.\n-    QSslConfiguration sslconf = QSslConfiguration::defaultConfiguration();\n-    sslconf.setProtocol(QSsl::TlsV1_0OrLater);\n-    QSslConfiguration::setDefaultConfiguration(sslconf);\n-#endif\n \n     // Register meta types used for QMetaObject::invokeMethod\n     qRegisterMetaType< bool* >();\n     //   Need to pass name here as CAmount is a typedef (see http://qt-project.org/doc/qt-5/qmetatype.html#qRegisterMetaType)\n     //   IMPORTANT if it is no longer a typedef use the normal variant above\n     qRegisterMetaType< CAmount >(\"CAmount\");\n-    qRegisterMetaType< std::function<void(void)> >(\"std::function<void(void)>\");\n+    qRegisterMetaType< std::function<void()> >(\"std::function<void()>\");\n #ifdef ENABLE_WALLET\n     qRegisterMetaType<WalletModel*>(\"WalletModel*\");\n #endif\n@@ -619,7 +614,6 @@ int main(int argc, char *argv[])\n     // Now that QSettings are accessible, initialize translations\n     QTranslator qtTranslatorBase, qtTranslator, translatorBase, translator;\n     initTranslations(qtTranslatorBase, qtTranslator, translatorBase, translator);\n-    translationInterface.Translate.connect(Translate);\n \n     // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n     // but before showing splash screen."
      },
      {
        "sha": "558fcf50bab7f7288c7824a6e997f95e36999ffd",
        "filename": "src/qt/bitcoinamountfield.cpp",
        "status": "modified",
        "additions": 56,
        "deletions": 17,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/bitcoinamountfield.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/bitcoinamountfield.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -23,13 +23,11 @@ class AmountSpinBox: public QAbstractSpinBox\n \n public:\n     explicit AmountSpinBox(QWidget *parent):\n-        QAbstractSpinBox(parent),\n-        currentUnit(BitcoinUnits::BTC),\n-        singleStep(100000) // satoshis\n+        QAbstractSpinBox(parent)\n     {\n         setAlignment(Qt::AlignRight);\n \n-        connect(lineEdit(), SIGNAL(textEdited(QString)), this, SIGNAL(valueChanged()));\n+        connect(lineEdit(), &QLineEdit::textEdited, this, &AmountSpinBox::valueChanged);\n     }\n \n     QValidator::State validate(QString &text, int &pos) const\n@@ -44,10 +42,19 @@ class AmountSpinBox: public QAbstractSpinBox\n \n     void fixup(QString &input) const\n     {\n-        bool valid = false;\n-        CAmount val = parse(input, &valid);\n-        if(valid)\n-        {\n+        bool valid;\n+        CAmount val;\n+\n+        if (input.isEmpty() && !m_allow_empty) {\n+            valid = true;\n+            val = m_min_amount;\n+        } else {\n+            valid = false;\n+            val = parse(input, &valid);\n+        }\n+\n+        if (valid) {\n+            val = qBound(m_min_amount, val, m_max_amount);\n             input = BitcoinUnits::format(currentUnit, val, false, BitcoinUnits::separatorAlways);\n             lineEdit()->setText(input);\n         }\n@@ -64,12 +71,27 @@ class AmountSpinBox: public QAbstractSpinBox\n         Q_EMIT valueChanged();\n     }\n \n+    void SetAllowEmpty(bool allow)\n+    {\n+        m_allow_empty = allow;\n+    }\n+\n+    void SetMinValue(const CAmount& value)\n+    {\n+        m_min_amount = value;\n+    }\n+\n+    void SetMaxValue(const CAmount& value)\n+    {\n+        m_max_amount = value;\n+    }\n+\n     void stepBy(int steps)\n     {\n         bool valid = false;\n         CAmount val = value(&valid);\n         val = val + steps * singleStep;\n-        val = qMin(qMax(val, CAmount(0)), BitcoinUnits::maxMoney());\n+        val = qBound(m_min_amount, val, m_max_amount);\n         setValue(val);\n     }\n \n@@ -125,9 +147,12 @@ class AmountSpinBox: public QAbstractSpinBox\n     }\n \n private:\n-    int currentUnit;\n-    CAmount singleStep;\n+    int currentUnit{BitcoinUnits::BTC};\n+    CAmount singleStep{CAmount(100000)}; // satoshis\n     mutable QSize cachedMinimumSizeHint;\n+    bool m_allow_empty{true};\n+    CAmount m_min_amount{CAmount(0)};\n+    CAmount m_max_amount{BitcoinUnits::maxMoney()};\n \n     /**\n      * Parse a string into a number of base monetary units and\n@@ -174,11 +199,10 @@ class AmountSpinBox: public QAbstractSpinBox\n         StepEnabled rv = 0;\n         bool valid = false;\n         CAmount val = value(&valid);\n-        if(valid)\n-        {\n-            if(val > 0)\n+        if (valid) {\n+            if (val > m_min_amount)\n                 rv |= StepDownEnabled;\n-            if(val < BitcoinUnits::maxMoney())\n+            if (val < m_max_amount)\n                 rv |= StepUpEnabled;\n         }\n         return rv;\n@@ -213,8 +237,8 @@ BitcoinAmountField::BitcoinAmountField(QWidget *parent) :\n     setFocusProxy(amount);\n \n     // If one if the widgets changes, the combined content changes as well\n-    connect(amount, SIGNAL(valueChanged()), this, SIGNAL(valueChanged()));\n-    connect(unit, SIGNAL(currentIndexChanged(int)), this, SLOT(unitChanged(int)));\n+    connect(amount, &AmountSpinBox::valueChanged, this, &BitcoinAmountField::valueChanged);\n+    connect(unit, static_cast<void (QComboBox::*)(int)>(&QComboBox::currentIndexChanged), this, &BitcoinAmountField::unitChanged);\n \n     // Set default based on configuration\n     unitChanged(unit->currentIndex());\n@@ -275,6 +299,21 @@ void BitcoinAmountField::setValue(const CAmount& value)\n     amount->setValue(value);\n }\n \n+void BitcoinAmountField::SetAllowEmpty(bool allow)\n+{\n+    amount->SetAllowEmpty(allow);\n+}\n+\n+void BitcoinAmountField::SetMinValue(const CAmount& value)\n+{\n+    amount->SetMinValue(value);\n+}\n+\n+void BitcoinAmountField::SetMaxValue(const CAmount& value)\n+{\n+    amount->SetMaxValue(value);\n+}\n+\n void BitcoinAmountField::setReadOnly(bool fReadOnly)\n {\n     amount->setReadOnly(fReadOnly);"
      },
      {
        "sha": "650481e30d514e370671c19aac0323184ee0672a",
        "filename": "src/qt/bitcoinamountfield.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/bitcoinamountfield.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/bitcoinamountfield.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -31,6 +31,15 @@ class BitcoinAmountField: public QWidget\n     CAmount value(bool *value=0) const;\n     void setValue(const CAmount& value);\n \n+    /** If allow empty is set to false the field will be set to the minimum allowed value if left empty. **/\n+    void SetAllowEmpty(bool allow);\n+\n+    /** Set the minimum value in satoshis **/\n+    void SetMinValue(const CAmount& value);\n+\n+    /** Set the maximum value in satoshis **/\n+    void SetMaxValue(const CAmount& value);\n+\n     /** Set single step in satoshis **/\n     void setSingleStep(const CAmount& step);\n "
      },
      {
        "sha": "ef82351551f92bc550fb94b849d19970400b64c0",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 123,
        "deletions": 101,
        "changes": 224,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -31,8 +31,9 @@\n #include <chainparams.h>\n #include <interfaces/handler.h>\n #include <interfaces/node.h>\n+#include <noui.h>\n #include <ui_interface.h>\n-#include <util.h>\n+#include <util/system.h>\n \n #include <iostream>\n \n@@ -57,6 +58,8 @@\n #include <QUrlQuery>\n #include <QVBoxLayout>\n \n+#include <boost/bind.hpp>\n+\n const std::string BitcoinGUI::DEFAULT_UIPLATFORM =\n #if defined(Q_OS_MAC)\n         \"macosx\"\n@@ -89,12 +92,8 @@ BitcoinGUI::BitcoinGUI(interfaces::Node& node, const PlatformStyle *_platformSty\n         windowTitle += tr(\"Node\");\n     }\n     windowTitle += \" \" + networkStyle->getTitleAddText();\n-#ifndef Q_OS_MAC\n     QApplication::setWindowIcon(networkStyle->getTrayAndWindowIcon());\n     setWindowIcon(networkStyle->getTrayAndWindowIcon());\n-#else\n-    MacDockIconHandler::instance()->setIcon(networkStyle->getAppIcon());\n-#endif\n     setWindowTitle(windowTitle);\n \n     rpcConsole = new RPCConsole(node, _platformStyle, 0);\n@@ -128,7 +127,9 @@ BitcoinGUI::BitcoinGUI(interfaces::Node& node, const PlatformStyle *_platformSty\n     createToolBars();\n \n     // Create system tray icon and notification\n-    createTrayIcon(networkStyle);\n+    if (QSystemTrayIcon::isSystemTrayAvailable()) {\n+        createTrayIcon(networkStyle);\n+    }\n \n     // Create status bar\n     statusBar();\n@@ -146,7 +147,7 @@ BitcoinGUI::BitcoinGUI(interfaces::Node& node, const PlatformStyle *_platformSty\n     unitDisplayControl = new UnitDisplayStatusBarControl(platformStyle);\n     labelWalletEncryptionIcon = new QLabel();\n     labelWalletHDStatusIcon = new QLabel();\n-    labelProxyIcon = new QLabel();\n+    labelProxyIcon = new GUIUtil::ClickableLabel();\n     connectionsControl = new GUIUtil::ClickableLabel();\n     labelBlocksIcon = new GUIUtil::ClickableLabel();\n     if(enableWallet)\n@@ -193,16 +194,25 @@ BitcoinGUI::BitcoinGUI(interfaces::Node& node, const PlatformStyle *_platformSty\n     // Subscribe to notifications from core\n     subscribeToCoreSignals();\n \n-    connect(connectionsControl, SIGNAL(clicked(QPoint)), this, SLOT(toggleNetworkActive()));\n+    connect(connectionsControl, &GUIUtil::ClickableLabel::clicked, [this] {\n+        m_node.setNetworkActive(!m_node.getNetworkActive());\n+    });\n+    connect(labelProxyIcon, &GUIUtil::ClickableLabel::clicked, [this] {\n+        openOptionsDialogWithTab(OptionsDialog::TAB_NETWORK);\n+    });\n \n     modalOverlay = new ModalOverlay(this->centralWidget());\n #ifdef ENABLE_WALLET\n     if(enableWallet) {\n-        connect(walletFrame, SIGNAL(requestedSyncWarningInfo()), this, SLOT(showModalOverlay()));\n-        connect(labelBlocksIcon, SIGNAL(clicked(QPoint)), this, SLOT(showModalOverlay()));\n-        connect(progressBar, SIGNAL(clicked(QPoint)), this, SLOT(showModalOverlay()));\n+        connect(walletFrame, &WalletFrame::requestedSyncWarningInfo, this, &BitcoinGUI::showModalOverlay);\n+        connect(labelBlocksIcon, &GUIUtil::ClickableLabel::clicked, this, &BitcoinGUI::showModalOverlay);\n+        connect(progressBar, &GUIUtil::ClickableProgressBar::clicked, this, &BitcoinGUI::showModalOverlay);\n     }\n #endif\n+\n+#ifdef Q_OS_MAC\n+    m_app_nap_inhibitor = new CAppNapInhibitor;\n+#endif\n }\n \n BitcoinGUI::~BitcoinGUI()\n@@ -215,6 +225,7 @@ BitcoinGUI::~BitcoinGUI()\n     if(trayIcon) // Hide tray icon, as deleting will let it linger until quit (on Ubuntu)\n         trayIcon->hide();\n #ifdef Q_OS_MAC\n+    delete m_app_nap_inhibitor;\n     delete appMenuBar;\n     MacDockIconHandler::cleanup();\n #endif\n@@ -265,18 +276,18 @@ void BitcoinGUI::createActions()\n #ifdef ENABLE_WALLET\n     // These showNormalIfMinimized are needed because Send Coins and Receive Coins\n     // can be triggered from the tray menu, and need to show the GUI to be useful.\n-    connect(overviewAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n-    connect(overviewAction, SIGNAL(triggered()), this, SLOT(gotoOverviewPage()));\n-    connect(sendCoinsAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n-    connect(sendCoinsAction, SIGNAL(triggered()), this, SLOT(gotoSendCoinsPage()));\n-    connect(sendCoinsMenuAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n-    connect(sendCoinsMenuAction, SIGNAL(triggered()), this, SLOT(gotoSendCoinsPage()));\n-    connect(receiveCoinsAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n-    connect(receiveCoinsAction, SIGNAL(triggered()), this, SLOT(gotoReceiveCoinsPage()));\n-    connect(receiveCoinsMenuAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n-    connect(receiveCoinsMenuAction, SIGNAL(triggered()), this, SLOT(gotoReceiveCoinsPage()));\n-    connect(historyAction, SIGNAL(triggered()), this, SLOT(showNormalIfMinimized()));\n-    connect(historyAction, SIGNAL(triggered()), this, SLOT(gotoHistoryPage()));\n+    connect(overviewAction, &QAction::triggered, [this]{ showNormalIfMinimized(); });\n+    connect(overviewAction, &QAction::triggered, this, &BitcoinGUI::gotoOverviewPage);\n+    connect(sendCoinsAction, &QAction::triggered, [this]{ showNormalIfMinimized(); });\n+    connect(sendCoinsAction, &QAction::triggered, [this]{ gotoSendCoinsPage(); });\n+    connect(sendCoinsMenuAction, &QAction::triggered, [this]{ showNormalIfMinimized(); });\n+    connect(sendCoinsMenuAction, &QAction::triggered, [this]{ gotoSendCoinsPage(); });\n+    connect(receiveCoinsAction, &QAction::triggered, [this]{ showNormalIfMinimized(); });\n+    connect(receiveCoinsAction, &QAction::triggered, this, &BitcoinGUI::gotoReceiveCoinsPage);\n+    connect(receiveCoinsMenuAction, &QAction::triggered, [this]{ showNormalIfMinimized(); });\n+    connect(receiveCoinsMenuAction, &QAction::triggered, this, &BitcoinGUI::gotoReceiveCoinsPage);\n+    connect(historyAction, &QAction::triggered, [this]{ showNormalIfMinimized(); });\n+    connect(historyAction, &QAction::triggered, this, &BitcoinGUI::gotoHistoryPage);\n #endif // ENABLE_WALLET\n \n     quitAction = new QAction(platformStyle->TextColorIcon(\":/icons/quit\"), tr(\"E&xit\"), this);\n@@ -326,32 +337,34 @@ void BitcoinGUI::createActions()\n     showHelpMessageAction->setMenuRole(QAction::NoRole);\n     showHelpMessageAction->setStatusTip(tr(\"Show the %1 help message to get a list with possible Bitcoin command-line options\").arg(tr(PACKAGE_NAME)));\n \n-    connect(quitAction, SIGNAL(triggered()), qApp, SLOT(quit()));\n-    connect(aboutAction, SIGNAL(triggered()), this, SLOT(aboutClicked()));\n-    connect(aboutQtAction, SIGNAL(triggered()), qApp, SLOT(aboutQt()));\n-    connect(optionsAction, SIGNAL(triggered()), this, SLOT(optionsClicked()));\n-    connect(toggleHideAction, SIGNAL(triggered()), this, SLOT(toggleHidden()));\n-    connect(showHelpMessageAction, SIGNAL(triggered()), this, SLOT(showHelpMessageClicked()));\n-    connect(openRPCConsoleAction, SIGNAL(triggered()), this, SLOT(showDebugWindow()));\n+    connect(quitAction, &QAction::triggered, qApp, QApplication::quit);\n+    connect(aboutAction, &QAction::triggered, this, &BitcoinGUI::aboutClicked);\n+    connect(aboutQtAction, &QAction::triggered, qApp, QApplication::aboutQt);\n+    connect(optionsAction, &QAction::triggered, this, &BitcoinGUI::optionsClicked);\n+    connect(toggleHideAction, &QAction::triggered, this, &BitcoinGUI::toggleHidden);\n+    connect(showHelpMessageAction, &QAction::triggered, this, &BitcoinGUI::showHelpMessageClicked);\n+    connect(openRPCConsoleAction, &QAction::triggered, this, &BitcoinGUI::showDebugWindow);\n     // prevents an open debug window from becoming stuck/unusable on client shutdown\n-    connect(quitAction, SIGNAL(triggered()), rpcConsole, SLOT(hide()));\n+    connect(quitAction, &QAction::triggered, rpcConsole, &QWidget::hide);\n \n #ifdef ENABLE_WALLET\n     if(walletFrame)\n     {\n-        connect(encryptWalletAction, SIGNAL(triggered(bool)), walletFrame, SLOT(encryptWallet(bool)));\n-        connect(backupWalletAction, SIGNAL(triggered()), walletFrame, SLOT(backupWallet()));\n-        connect(changePassphraseAction, SIGNAL(triggered()), walletFrame, SLOT(changePassphrase()));\n-        connect(signMessageAction, SIGNAL(triggered()), this, SLOT(gotoSignMessageTab()));\n-        connect(verifyMessageAction, SIGNAL(triggered()), this, SLOT(gotoVerifyMessageTab()));\n-        connect(usedSendingAddressesAction, SIGNAL(triggered()), walletFrame, SLOT(usedSendingAddresses()));\n-        connect(usedReceivingAddressesAction, SIGNAL(triggered()), walletFrame, SLOT(usedReceivingAddresses()));\n-        connect(openAction, SIGNAL(triggered()), this, SLOT(openClicked()));\n+        connect(encryptWalletAction, &QAction::triggered, walletFrame, &WalletFrame::encryptWallet);\n+        connect(backupWalletAction, &QAction::triggered, walletFrame, &WalletFrame::backupWallet);\n+        connect(changePassphraseAction, &QAction::triggered, walletFrame, &WalletFrame::changePassphrase);\n+        connect(signMessageAction, &QAction::triggered, [this]{ showNormalIfMinimized(); });\n+        connect(signMessageAction, &QAction::triggered, [this]{ gotoSignMessageTab(); });\n+        connect(verifyMessageAction, &QAction::triggered, [this]{ showNormalIfMinimized(); });\n+        connect(verifyMessageAction, &QAction::triggered, [this]{ gotoVerifyMessageTab(); });\n+        connect(usedSendingAddressesAction, &QAction::triggered, walletFrame, &WalletFrame::usedSendingAddresses);\n+        connect(usedReceivingAddressesAction, &QAction::triggered, walletFrame, &WalletFrame::usedReceivingAddresses);\n+        connect(openAction, &QAction::triggered, this, &BitcoinGUI::openClicked);\n     }\n #endif // ENABLE_WALLET\n \n-    new QShortcut(QKeySequence(Qt::CTRL + Qt::SHIFT + Qt::Key_C), this, SLOT(showDebugWindowActivateConsole()));\n-    new QShortcut(QKeySequence(Qt::CTRL + Qt::SHIFT + Qt::Key_D), this, SLOT(showDebugWindow()));\n+    connect(new QShortcut(QKeySequence(Qt::CTRL + Qt::SHIFT + Qt::Key_C), this), &QShortcut::activated, this, &BitcoinGUI::showDebugWindowActivateConsole);\n+    connect(new QShortcut(QKeySequence(Qt::CTRL + Qt::SHIFT + Qt::Key_D), this), &QShortcut::activated, this, &BitcoinGUI::showDebugWindow);\n }\n \n void BitcoinGUI::createMenuBar()\n@@ -420,7 +433,7 @@ void BitcoinGUI::createToolBars()\n         toolbar->addWidget(spacer);\n \n         m_wallet_selector = new QComboBox();\n-        connect(m_wallet_selector, SIGNAL(currentIndexChanged(int)), this, SLOT(setCurrentWalletBySelectorIndex(int)));\n+        connect(m_wallet_selector, static_cast<void (QComboBox::*)(int)>(&QComboBox::currentIndexChanged), this, &BitcoinGUI::setCurrentWalletBySelectorIndex);\n \n         m_wallet_selector_label = new QLabel();\n         m_wallet_selector_label->setText(tr(\"Wallet:\") + \" \");\n@@ -446,18 +459,20 @@ void BitcoinGUI::setClientModel(ClientModel *_clientModel)\n \n         // Keep up to date with client\n         updateNetworkState();\n-        connect(_clientModel, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n-        connect(_clientModel, SIGNAL(networkActiveChanged(bool)), this, SLOT(setNetworkActive(bool)));\n+        connect(_clientModel, &ClientModel::numConnectionsChanged, this, &BitcoinGUI::setNumConnections);\n+        connect(_clientModel, &ClientModel::networkActiveChanged, this, &BitcoinGUI::setNetworkActive);\n \n         modalOverlay->setKnownBestHeight(_clientModel->getHeaderTipHeight(), QDateTime::fromTime_t(_clientModel->getHeaderTipTime()));\n         setNumBlocks(m_node.getNumBlocks(), QDateTime::fromTime_t(m_node.getLastBlockTime()), m_node.getVerificationProgress(), false);\n-        connect(_clientModel, SIGNAL(numBlocksChanged(int,QDateTime,double,bool)), this, SLOT(setNumBlocks(int,QDateTime,double,bool)));\n+        connect(_clientModel, &ClientModel::numBlocksChanged, this, &BitcoinGUI::setNumBlocks);\n \n         // Receive and report messages from client model\n-        connect(_clientModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n+        connect(_clientModel, &ClientModel::message, [this](const QString &title, const QString &message, unsigned int style){\n+            this->message(title, message, style);\n+        });\n \n         // Show progress dialog\n-        connect(_clientModel, SIGNAL(showProgress(QString,int)), this, SLOT(showProgress(QString,int)));\n+        connect(_clientModel, &ClientModel::showProgress, this, &BitcoinGUI::showProgress);\n \n         rpcConsole->setClientModel(_clientModel);\n \n@@ -475,7 +490,7 @@ void BitcoinGUI::setClientModel(ClientModel *_clientModel)\n         if(optionsModel)\n         {\n             // be aware of the tray icon disable state change reported by the OptionsModel object.\n-            connect(optionsModel,SIGNAL(hideTrayIconChanged(bool)),this,SLOT(setTrayIconVisible(bool)));\n+            connect(optionsModel, &OptionsModel::hideTrayIconChanged, this, &BitcoinGUI::setTrayIconVisible);\n \n             // initialize the disable state of the tray icon with the current value in the model.\n             setTrayIconVisible(optionsModel->getHideTrayIcon());\n@@ -575,6 +590,8 @@ void BitcoinGUI::setWalletActionsEnabled(bool enabled)\n \n void BitcoinGUI::createTrayIcon(const NetworkStyle *networkStyle)\n {\n+    assert(QSystemTrayIcon::isSystemTrayAvailable());\n+\n #ifndef Q_OS_MAC\n     trayIcon = new QSystemTrayIcon(this);\n     QString toolTip = tr(\"%1 client\").arg(tr(PACKAGE_NAME)) + \" \" + networkStyle->getTitleAddText();\n@@ -589,34 +606,40 @@ void BitcoinGUI::createTrayIcon(const NetworkStyle *networkStyle)\n void BitcoinGUI::createTrayIconMenu()\n {\n #ifndef Q_OS_MAC\n-    // return if trayIcon is unset (only on non-Mac OSes)\n+    // return if trayIcon is unset (only on non-macOSes)\n     if (!trayIcon)\n         return;\n \n     trayIconMenu = new QMenu(this);\n     trayIcon->setContextMenu(trayIconMenu);\n \n-    connect(trayIcon, SIGNAL(activated(QSystemTrayIcon::ActivationReason)),\n-            this, SLOT(trayIconActivated(QSystemTrayIcon::ActivationReason)));\n+    connect(trayIcon, &QSystemTrayIcon::activated, this, &BitcoinGUI::trayIconActivated);\n #else\n-    // Note: On Mac, the dock icon is used to provide the tray's functionality.\n+    // Note: On macOS, the Dock icon is used to provide the tray's functionality.\n     MacDockIconHandler *dockIconHandler = MacDockIconHandler::instance();\n-    dockIconHandler->setMainWindow(static_cast<QMainWindow*>(this));\n-    trayIconMenu = dockIconHandler->dockMenu();\n+    connect(dockIconHandler, &MacDockIconHandler::dockIconClicked, this, &BitcoinGUI::macosDockIconActivated);\n+\n+    trayIconMenu = new QMenu(this);\n+    trayIconMenu->setAsDockMenu();\n #endif\n \n-    // Configuration of the tray icon (or dock icon) icon menu\n+    // Configuration of the tray icon (or Dock icon) menu\n+#ifndef Q_OS_MAC\n+    // Note: On macOS, the Dock icon's menu already has Show / Hide action.\n     trayIconMenu->addAction(toggleHideAction);\n     trayIconMenu->addSeparator();\n-    trayIconMenu->addAction(sendCoinsMenuAction);\n-    trayIconMenu->addAction(receiveCoinsMenuAction);\n-    trayIconMenu->addSeparator();\n-    trayIconMenu->addAction(signMessageAction);\n-    trayIconMenu->addAction(verifyMessageAction);\n-    trayIconMenu->addSeparator();\n+#endif\n+    if (enableWallet) {\n+        trayIconMenu->addAction(sendCoinsMenuAction);\n+        trayIconMenu->addAction(receiveCoinsMenuAction);\n+        trayIconMenu->addSeparator();\n+        trayIconMenu->addAction(signMessageAction);\n+        trayIconMenu->addAction(verifyMessageAction);\n+        trayIconMenu->addSeparator();\n+        trayIconMenu->addAction(openRPCConsoleAction);\n+    }\n     trayIconMenu->addAction(optionsAction);\n-    trayIconMenu->addAction(openRPCConsoleAction);\n-#ifndef Q_OS_MAC // This is built-in on Mac\n+#ifndef Q_OS_MAC // This is built-in on macOS\n     trayIconMenu->addSeparator();\n     trayIconMenu->addAction(quitAction);\n #endif\n@@ -631,16 +654,17 @@ void BitcoinGUI::trayIconActivated(QSystemTrayIcon::ActivationReason reason)\n         toggleHidden();\n     }\n }\n+#else\n+void BitcoinGUI::macosDockIconActivated()\n+{\n+    show();\n+    activateWindow();\n+}\n #endif\n \n void BitcoinGUI::optionsClicked()\n {\n-    if(!clientModel || !clientModel->getOptionsModel())\n-        return;\n-\n-    OptionsDialog dlg(this, enableWallet);\n-    dlg.setModel(clientModel->getOptionsModel());\n-    dlg.exec();\n+    openOptionsDialogWithTab(OptionsDialog::TAB_MAIN);\n }\n \n void BitcoinGUI::aboutClicked()\n@@ -654,10 +678,7 @@ void BitcoinGUI::aboutClicked()\n \n void BitcoinGUI::showDebugWindow()\n {\n-    rpcConsole->showNormal();\n-    rpcConsole->show();\n-    rpcConsole->raise();\n-    rpcConsole->activateWindow();\n+    GUIUtil::bringToFront(rpcConsole);\n }\n \n void BitcoinGUI::showDebugWindowActivateConsole()\n@@ -764,8 +785,24 @@ void BitcoinGUI::updateHeadersSyncProgressLabel()\n         progressBarLabel->setText(tr(\"Syncing Headers (%1%)...\").arg(QString::number(100.0 / (headersTipHeight+estHeadersLeft)*headersTipHeight, 'f', 1)));\n }\n \n+void BitcoinGUI::openOptionsDialogWithTab(OptionsDialog::Tab tab)\n+{\n+    if (!clientModel || !clientModel->getOptionsModel())\n+        return;\n+\n+    OptionsDialog dlg(this, enableWallet);\n+    dlg.setCurrentTab(tab);\n+    dlg.setModel(clientModel->getOptionsModel());\n+    dlg.exec();\n+}\n+\n void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress, bool header)\n {\n+// Disabling macOS App Nap on initial sync, disk and reindex operations.\n+#ifdef Q_OS_MAC\n+    (m_node.isInitialBlockDownload() || m_node.getReindex() || m_node.getImporting()) ? m_app_nap_inhibitor->disableAppNap() : m_app_nap_inhibitor->enableAppNap();\n+#endif\n+\n     if (modalOverlay)\n     {\n         if (header)\n@@ -945,12 +982,12 @@ void BitcoinGUI::changeEvent(QEvent *e)\n             QWindowStateChangeEvent *wsevt = static_cast<QWindowStateChangeEvent*>(e);\n             if(!(wsevt->oldState() & Qt::WindowMinimized) && isMinimized())\n             {\n-                QTimer::singleShot(0, this, SLOT(hide()));\n+                QTimer::singleShot(0, this, &BitcoinGUI::hide);\n                 e->ignore();\n             }\n             else if((wsevt->oldState() & Qt::WindowMinimized) && !isMinimized())\n             {\n-                QTimer::singleShot(0, this, SLOT(show()));\n+                QTimer::singleShot(0, this, &BitcoinGUI::show);\n                 e->ignore();\n             }\n         }\n@@ -1128,24 +1165,11 @@ void BitcoinGUI::showNormalIfMinimized(bool fToggleHidden)\n     if(!clientModel)\n         return;\n \n-    // activateWindow() (sometimes) helps with keyboard focus on Windows\n-    if (isHidden())\n-    {\n-        show();\n-        activateWindow();\n-    }\n-    else if (isMinimized())\n-    {\n-        showNormal();\n-        activateWindow();\n-    }\n-    else if (GUIUtil::isObscured(this))\n-    {\n-        raise();\n-        activateWindow();\n-    }\n-    else if(fToggleHidden)\n+    if (!isHidden() && !isMinimized() && !GUIUtil::isObscured(this) && fToggleHidden) {\n         hide();\n+    } else {\n+        GUIUtil::bringToFront(this);\n+    }\n }\n \n void BitcoinGUI::toggleHidden()\n@@ -1200,8 +1224,11 @@ void BitcoinGUI::showModalOverlay()\n         modalOverlay->toggleVisibility();\n }\n \n-static bool ThreadSafeMessageBox(BitcoinGUI *gui, const std::string& message, const std::string& caption, unsigned int style)\n+static bool ThreadSafeMessageBox(BitcoinGUI* gui, const std::string& message, const std::string& caption, unsigned int style)\n {\n+    // Redundantly log and print message in non-gui fashion\n+    noui_ThreadSafeMessageBox(message, caption, style);\n+\n     bool modal = (style & CClientUIInterface::MODAL);\n     // The SECURE flag has no effect in the Qt GUI.\n     // bool secure = (style & CClientUIInterface::SECURE);\n@@ -1231,11 +1258,6 @@ void BitcoinGUI::unsubscribeFromCoreSignals()\n     m_handler_question->disconnect();\n }\n \n-void BitcoinGUI::toggleNetworkActive()\n-{\n-    m_node.setNetworkActive(!m_node.getNetworkActive());\n-}\n-\n UnitDisplayStatusBarControl::UnitDisplayStatusBarControl(const PlatformStyle *platformStyle) :\n     optionsModel(0),\n     menu(0)\n@@ -1264,13 +1286,13 @@ void UnitDisplayStatusBarControl::mousePressEvent(QMouseEvent *event)\n void UnitDisplayStatusBarControl::createContextMenu()\n {\n     menu = new QMenu(this);\n-    for (BitcoinUnits::Unit u : BitcoinUnits::availableUnits())\n+    for (const BitcoinUnits::Unit u : BitcoinUnits::availableUnits())\n     {\n         QAction *menuAction = new QAction(QString(BitcoinUnits::longName(u)), this);\n         menuAction->setData(QVariant(u));\n         menu->addAction(menuAction);\n     }\n-    connect(menu,SIGNAL(triggered(QAction*)),this,SLOT(onMenuSelection(QAction*)));\n+    connect(menu, &QMenu::triggered, this, &UnitDisplayStatusBarControl::onMenuSelection);\n }\n \n /** Lets the control know about the Options Model (and its signals) */\n@@ -1281,7 +1303,7 @@ void UnitDisplayStatusBarControl::setOptionsModel(OptionsModel *_optionsModel)\n         this->optionsModel = _optionsModel;\n \n         // be aware of a display unit change reported by the OptionsModel object.\n-        connect(_optionsModel,SIGNAL(displayUnitChanged(int)),this,SLOT(updateDisplayUnit(int)));\n+        connect(_optionsModel, &OptionsModel::displayUnitChanged, this, &UnitDisplayStatusBarControl::updateDisplayUnit);\n \n         // initialize the display units label with the current value in the model.\n         updateDisplayUnit(_optionsModel->getDisplayUnit());"
      },
      {
        "sha": "e8b857c17cd795a583e864def210be47ce342952",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 29,
        "deletions": 10,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -9,6 +9,8 @@\n #include <config/bitcoin-config.h>\n #endif\n \n+#include <qt/optionsdialog.h>\n+\n #include <amount.h>\n \n #include <QLabel>\n@@ -18,6 +20,10 @@\n #include <QPoint>\n #include <QSystemTrayIcon>\n \n+#ifdef Q_OS_MAC\n+#include <qt/macos_appnap.h>\n+#endif\n+\n #include <memory>\n \n class ClientModel;\n@@ -45,6 +51,11 @@ class QProgressBar;\n class QProgressDialog;\n QT_END_NAMESPACE\n \n+namespace GUIUtil {\n+class ClickableLabel;\n+class ClickableProgressBar;\n+}\n+\n /**\n   Bitcoin GUI main class. This class represents the main window of the Bitcoin UI. It communicates with both the client and\n   wallet models to give the user an up-to-date view of the current core state.\n@@ -93,11 +104,11 @@ class BitcoinGUI : public QMainWindow\n     UnitDisplayStatusBarControl* unitDisplayControl = nullptr;\n     QLabel* labelWalletEncryptionIcon = nullptr;\n     QLabel* labelWalletHDStatusIcon = nullptr;\n-    QLabel* labelProxyIcon = nullptr;\n-    QLabel* connectionsControl = nullptr;\n-    QLabel* labelBlocksIcon = nullptr;\n+    GUIUtil::ClickableLabel* labelProxyIcon = nullptr;\n+    GUIUtil::ClickableLabel* connectionsControl = nullptr;\n+    GUIUtil::ClickableLabel* labelBlocksIcon = nullptr;\n     QLabel* progressBarLabel = nullptr;\n-    QProgressBar* progressBar = nullptr;\n+    GUIUtil::ClickableProgressBar* progressBar = nullptr;\n     QProgressDialog* progressDialog = nullptr;\n \n     QMenuBar* appMenuBar = nullptr;\n@@ -136,6 +147,10 @@ class BitcoinGUI : public QMainWindow\n     HelpMessageDialog* helpMessageDialog = nullptr;\n     ModalOverlay* modalOverlay = nullptr;\n \n+#ifdef Q_OS_MAC\n+    CAppNapInhibitor* m_app_nap_inhibitor = nullptr;\n+#endif\n+\n     /** Keep track of previous number of blocks, to detect progress */\n     int prevBlocks = 0;\n     int spinnerFrame = 0;\n@@ -166,6 +181,9 @@ class BitcoinGUI : public QMainWindow\n \n     void updateHeadersSyncProgressLabel();\n \n+    /** Open the OptionsDialog on the specified tab index */\n+    void openOptionsDialogWithTab(OptionsDialog::Tab tab);\n+\n Q_SIGNALS:\n     /** Signal raised when a URI was entered or dragged to the GUI */\n     void receivedURI(const QString &uri);\n@@ -202,7 +220,7 @@ public Q_SLOTS:\n     void setEncryptionStatus(int status);\n \n     /** Set the hd-enabled status as shown in the UI.\n-     @param[in] status            current hd enabled status\n+     @param[in] hdEnabled         current hd enabled status\n      @see WalletModel::EncryptionStatus\n      */\n     void setHDStatus(int hdEnabled);\n@@ -218,7 +236,7 @@ public Q_SLOTS:\n     /** Set the proxy-enabled icon as shown in the UI. */\n     void updateProxyIcon();\n \n-private Q_SLOTS:\n+public Q_SLOTS:\n #ifdef ENABLE_WALLET\n     /** Switch to overview (home) page */\n     void gotoOverviewPage();\n@@ -250,10 +268,14 @@ private Q_SLOTS:\n #ifndef Q_OS_MAC\n     /** Handle tray icon clicked */\n     void trayIconActivated(QSystemTrayIcon::ActivationReason reason);\n+#else\n+    /** Handle macOS Dock icon clicked */\n+    void macosDockIconActivated();\n #endif\n \n     /** Show window if hidden, unminimize when minimized, rise when obscured or show if hidden and fToggleHidden is true */\n-    void showNormalIfMinimized(bool fToggleHidden = false);\n+    void showNormalIfMinimized() { showNormalIfMinimized(false); }\n+    void showNormalIfMinimized(bool fToggleHidden);\n     /** Simply calls showNormalIfMinimized(true) for use in SLOT() macro */\n     void toggleHidden();\n \n@@ -266,9 +288,6 @@ private Q_SLOTS:\n     /** When hideTrayIcon setting is changed in OptionsModel hide or show the icon accordingly. */\n     void setTrayIconVisible(bool);\n \n-    /** Toggle networking */\n-    void toggleNetworkActive();\n-\n     void showModalOverlay();\n };\n "
      },
      {
        "sha": "da6b0c4c2e3c5363f120e279b7292082a25be983",
        "filename": "src/qt/callback.h",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8bd1e54a27267b9bb09d9817e5dc47935df493/src/qt/callback.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8bd1e54a27267b9bb09d9817e5dc47935df493/src/qt/callback.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/callback.h?ref=fa8bd1e54a27267b9bb09d9817e5dc47935df493",
        "patch": "@@ -1,30 +0,0 @@\n-#ifndef BITCOIN_QT_CALLBACK_H\n-#define BITCOIN_QT_CALLBACK_H\n-\n-#include <QObject>\n-\n-class Callback : public QObject\n-{\n-    Q_OBJECT\n-public Q_SLOTS:\n-    virtual void call() = 0;\n-};\n-\n-template <typename F>\n-class FunctionCallback : public Callback\n-{\n-    F f;\n-\n-public:\n-    explicit FunctionCallback(F f_) : f(std::move(f_)) {}\n-    ~FunctionCallback() override {}\n-    void call() override { f(this); }\n-};\n-\n-template <typename F>\n-FunctionCallback<F>* makeCallback(F f)\n-{\n-    return new FunctionCallback<F>(std::move(f));\n-}\n-\n-#endif // BITCOIN_QT_CALLBACK_H"
      },
      {
        "sha": "75012b279cb81f8c67620f091d51cc3f6ca4bdc1",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -20,7 +20,7 @@\n #include <netbase.h>\n #include <txmempool.h>\n #include <ui_interface.h>\n-#include <util.h>\n+#include <util/system.h>\n #include <warnings.h>\n \n #include <stdint.h>\n@@ -44,7 +44,7 @@ ClientModel::ClientModel(interfaces::Node& node, OptionsModel *_optionsModel, QO\n     peerTableModel = new PeerTableModel(m_node, this);\n     banTableModel = new BanTableModel(m_node, this);\n     pollTimer = new QTimer(this);\n-    connect(pollTimer, SIGNAL(timeout()), this, SLOT(updateTimer()));\n+    connect(pollTimer, &QTimer::timeout, this, &ClientModel::updateTimer);\n     pollTimer->start(MODEL_UPDATE_DELAY);\n \n     subscribeToCoreSignals();\n@@ -177,6 +177,11 @@ QString ClientModel::dataDir() const\n     return GUIUtil::boostPathToQString(GetDataDir());\n }\n \n+QString ClientModel::blocksDir() const\n+{\n+    return GUIUtil::boostPathToQString(GetBlocksDir());\n+}\n+\n void ClientModel::updateBanlist()\n {\n     banTableModel->refresh();"
      },
      {
        "sha": "79e7074cca1f6a698fa66b35619ff208050a5957",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -69,6 +69,7 @@ class ClientModel : public QObject\n     bool isReleaseVersion() const;\n     QString formatClientStartupTime() const;\n     QString dataDir() const;\n+    QString blocksDir() const;\n \n     bool getProxyInfo(std::string& ip_port) const;\n "
      },
      {
        "sha": "ea970c0bc9a40b3975a4e50d50d616fd66829d7f",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 20,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -2,10 +2,15 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n #include <qt/coincontroldialog.h>\n #include <qt/forms/ui_coincontroldialog.h>\n \n #include <qt/addresstablemodel.h>\n+#include <base58.h>\n #include <qt/bitcoinunits.h>\n #include <qt/guiutil.h>\n #include <qt/optionsmodel.h>\n@@ -68,13 +73,13 @@ CoinControlDialog::CoinControlDialog(const PlatformStyle *_platformStyle, QWidge\n     contextMenu->addAction(unlockAction);\n \n     // context menu signals\n-    connect(ui->treeWidget, SIGNAL(customContextMenuRequested(QPoint)), this, SLOT(showMenu(QPoint)));\n-    connect(copyAddressAction, SIGNAL(triggered()), this, SLOT(copyAddress()));\n-    connect(copyLabelAction, SIGNAL(triggered()), this, SLOT(copyLabel()));\n-    connect(copyAmountAction, SIGNAL(triggered()), this, SLOT(copyAmount()));\n-    connect(copyTransactionHashAction, SIGNAL(triggered()), this, SLOT(copyTransactionHash()));\n-    connect(lockAction, SIGNAL(triggered()), this, SLOT(lockCoin()));\n-    connect(unlockAction, SIGNAL(triggered()), this, SLOT(unlockCoin()));\n+    connect(ui->treeWidget, &QWidget::customContextMenuRequested, this, &CoinControlDialog::showMenu);\n+    connect(copyAddressAction, &QAction::triggered, this, &CoinControlDialog::copyAddress);\n+    connect(copyLabelAction, &QAction::triggered, this, &CoinControlDialog::copyLabel);\n+    connect(copyAmountAction, &QAction::triggered, this, &CoinControlDialog::copyAmount);\n+    connect(copyTransactionHashAction, &QAction::triggered, this, &CoinControlDialog::copyTransactionHash);\n+    connect(lockAction, &QAction::triggered, this, &CoinControlDialog::lockCoin);\n+    connect(unlockAction, &QAction::triggered, this, &CoinControlDialog::unlockCoin);\n \n     // clipboard actions\n     QAction *clipboardQuantityAction = new QAction(tr(\"Copy quantity\"), this);\n@@ -85,13 +90,13 @@ CoinControlDialog::CoinControlDialog(const PlatformStyle *_platformStyle, QWidge\n     QAction *clipboardLowOutputAction = new QAction(tr(\"Copy dust\"), this);\n     QAction *clipboardChangeAction = new QAction(tr(\"Copy change\"), this);\n \n-    connect(clipboardQuantityAction, SIGNAL(triggered()), this, SLOT(clipboardQuantity()));\n-    connect(clipboardAmountAction, SIGNAL(triggered()), this, SLOT(clipboardAmount()));\n-    connect(clipboardFeeAction, SIGNAL(triggered()), this, SLOT(clipboardFee()));\n-    connect(clipboardAfterFeeAction, SIGNAL(triggered()), this, SLOT(clipboardAfterFee()));\n-    connect(clipboardBytesAction, SIGNAL(triggered()), this, SLOT(clipboardBytes()));\n-    connect(clipboardLowOutputAction, SIGNAL(triggered()), this, SLOT(clipboardLowOutput()));\n-    connect(clipboardChangeAction, SIGNAL(triggered()), this, SLOT(clipboardChange()));\n+    connect(clipboardQuantityAction, &QAction::triggered, this, &CoinControlDialog::clipboardQuantity);\n+    connect(clipboardAmountAction, &QAction::triggered, this, &CoinControlDialog::clipboardAmount);\n+    connect(clipboardFeeAction, &QAction::triggered, this, &CoinControlDialog::clipboardFee);\n+    connect(clipboardAfterFeeAction, &QAction::triggered, this, &CoinControlDialog::clipboardAfterFee);\n+    connect(clipboardBytesAction, &QAction::triggered, this, &CoinControlDialog::clipboardBytes);\n+    connect(clipboardLowOutputAction, &QAction::triggered, this, &CoinControlDialog::clipboardLowOutput);\n+    connect(clipboardChangeAction, &QAction::triggered, this, &CoinControlDialog::clipboardChange);\n \n     ui->labelCoinControlQuantity->addAction(clipboardQuantityAction);\n     ui->labelCoinControlAmount->addAction(clipboardAmountAction);\n@@ -102,21 +107,21 @@ CoinControlDialog::CoinControlDialog(const PlatformStyle *_platformStyle, QWidge\n     ui->labelCoinControlChange->addAction(clipboardChangeAction);\n \n     // toggle tree/list mode\n-    connect(ui->radioTreeMode, SIGNAL(toggled(bool)), this, SLOT(radioTreeMode(bool)));\n-    connect(ui->radioListMode, SIGNAL(toggled(bool)), this, SLOT(radioListMode(bool)));\n+    connect(ui->radioTreeMode, &QRadioButton::toggled, this, &CoinControlDialog::radioTreeMode);\n+    connect(ui->radioListMode, &QRadioButton::toggled, this, &CoinControlDialog::radioListMode);\n \n     // click on checkbox\n-    connect(ui->treeWidget, SIGNAL(itemChanged(QTreeWidgetItem*, int)), this, SLOT(viewItemChanged(QTreeWidgetItem*, int)));\n+    connect(ui->treeWidget, &QTreeWidget::itemChanged, this, &CoinControlDialog::viewItemChanged);\n \n     // click on header\n     ui->treeWidget->header()->setSectionsClickable(true);\n-    connect(ui->treeWidget->header(), SIGNAL(sectionClicked(int)), this, SLOT(headerSectionClicked(int)));\n+    connect(ui->treeWidget->header(), &QHeaderView::sectionClicked, this, &CoinControlDialog::headerSectionClicked);\n \n     // ok button\n-    connect(ui->buttonBox, SIGNAL(clicked( QAbstractButton*)), this, SLOT(buttonBoxClicked(QAbstractButton*)));\n+    connect(ui->buttonBox, &QDialogButtonBox::clicked, this, &CoinControlDialog::buttonBoxClicked);\n \n     // (un)select all\n-    connect(ui->pushButtonSelectAll, SIGNAL(clicked()), this, SLOT(buttonSelectAllClicked()));\n+    connect(ui->pushButtonSelectAll, &QPushButton::clicked, this, &CoinControlDialog::buttonSelectAllClicked);\n \n     ui->treeWidget->setColumnWidth(COLUMN_CHECKBOX, 84);\n     ui->treeWidget->setColumnWidth(COLUMN_AMOUNT, 110);"
      },
      {
        "sha": "dca16d6f787491f2afc4183e3125de24834afd5b",
        "filename": "src/qt/forms/debugwindow.ui",
        "status": "modified",
        "additions": 50,
        "deletions": 18,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/forms/debugwindow.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/forms/debugwindow.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/debugwindow.ui?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -127,6 +127,9 @@\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n          </property>\n+         <property name=\"toolTip\">\n+          <string>To specify a non-default location of the data directory use the '%1' option.</string>\n+         </property>\n          <property name=\"text\">\n           <string>N/A</string>\n          </property>\n@@ -142,13 +145,42 @@\n         </widget>\n        </item>\n        <item row=\"5\" column=\"0\">\n+        <widget class=\"QLabel\" name=\"label_11\">\n+         <property name=\"text\">\n+          <string>Blocksdir</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"5\" column=\"1\" colspan=\"2\">\n+        <widget class=\"QLabel\" name=\"blocksDir\">\n+         <property name=\"cursor\">\n+          <cursorShape>IBeamCursor</cursorShape>\n+         </property>\n+         <property name=\"toolTip\">\n+          <string>To specify a non-default location of the blocks directory use the '%1' option.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>N/A</string>\n+         </property>\n+         <property name=\"textFormat\">\n+          <enum>Qt::PlainText</enum>\n+         </property>\n+         <property name=\"wordWrap\">\n+          <bool>true</bool>\n+         </property>\n+         <property name=\"textInteractionFlags\">\n+          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"6\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_13\">\n          <property name=\"text\">\n           <string>Startup time</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"5\" column=\"1\" colspan=\"2\">\n+       <item row=\"6\" column=\"1\" colspan=\"2\">\n         <widget class=\"QLabel\" name=\"startupTime\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -164,7 +196,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"6\" column=\"0\">\n+       <item row=\"7\" column=\"0\">\n            <widget class=\"QLabel\" name=\"labelNetwork\">\n                <property name=\"font\">\n                    <font>\n@@ -177,14 +209,14 @@\n                </property>\n            </widget>\n        </item>\n-       <item row=\"7\" column=\"0\">\n+       <item row=\"8\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_8\">\n          <property name=\"text\">\n           <string>Name</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"7\" column=\"1\" colspan=\"2\">\n+       <item row=\"8\" column=\"1\" colspan=\"2\">\n         <widget class=\"QLabel\" name=\"networkName\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -200,14 +232,14 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"8\" column=\"0\">\n+       <item row=\"9\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_7\">\n          <property name=\"text\">\n           <string>Number of connections</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"8\" column=\"1\" colspan=\"2\">\n+       <item row=\"9\" column=\"1\" colspan=\"2\">\n         <widget class=\"QLabel\" name=\"numberOfConnections\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -223,7 +255,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"9\" column=\"0\">\n+       <item row=\"10\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_10\">\n          <property name=\"font\">\n           <font>\n@@ -236,14 +268,14 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"10\" column=\"0\">\n+       <item row=\"11\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_3\">\n          <property name=\"text\">\n           <string>Current number of blocks</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"10\" column=\"1\" colspan=\"2\">\n+       <item row=\"11\" column=\"1\" colspan=\"2\">\n         <widget class=\"QLabel\" name=\"numberOfBlocks\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -259,14 +291,14 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"11\" column=\"0\">\n+       <item row=\"12\" column=\"0\">\n         <widget class=\"QLabel\" name=\"labelLastBlockTime\">\n          <property name=\"text\">\n           <string>Last block time</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"11\" column=\"1\" colspan=\"2\">\n+       <item row=\"12\" column=\"1\" colspan=\"2\">\n         <widget class=\"QLabel\" name=\"lastBlockTime\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -282,7 +314,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"12\" column=\"0\">\n+       <item row=\"13\" column=\"0\">\n         <widget class=\"QLabel\" name=\"labelMempoolTitle\">\n          <property name=\"font\">\n           <font>\n@@ -295,14 +327,14 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"13\" column=\"0\">\n+       <item row=\"14\" column=\"0\">\n         <widget class=\"QLabel\" name=\"labelNumberOfTransactions\">\n          <property name=\"text\">\n           <string>Current number of transactions</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"13\" column=\"1\">\n+       <item row=\"14\" column=\"1\">\n         <widget class=\"QLabel\" name=\"mempoolNumberTxs\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -318,14 +350,14 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"14\" column=\"0\">\n+       <item row=\"15\" column=\"0\">\n         <widget class=\"QLabel\" name=\"labelMemoryUsage\">\n          <property name=\"text\">\n           <string>Memory usage</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"14\" column=\"1\">\n+       <item row=\"15\" column=\"1\">\n         <widget class=\"QLabel\" name=\"mempoolSize\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -341,7 +373,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"12\" column=\"2\" rowspan=\"3\">\n+       <item row=\"13\" column=\"2\" rowspan=\"3\">\n         <layout class=\"QVBoxLayout\" name=\"verticalLayoutDebugButton\">\n          <property name=\"spacing\">\n           <number>3</number>\n@@ -381,7 +413,7 @@\n          </item>\n         </layout>\n        </item>\n-       <item row=\"15\" column=\"0\">\n+       <item row=\"16\" column=\"0\">\n         <spacer name=\"verticalSpacer\">\n          <property name=\"orientation\">\n           <enum>Qt::Vertical</enum>"
      },
      {
        "sha": "386d5592818b1ca889f41cfda8b7d9650f515168",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 3,
        "deletions": 38,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -878,28 +878,15 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n                <item>\n                 <layout class=\"QHBoxLayout\" name=\"horizontalLayoutFee8\">\n                  <item>\n-                  <widget class=\"QCheckBox\" name=\"checkBoxMinimumFee\">\n-                   <property name=\"toolTip\">\n-                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</string>\n-                   </property>\n-                   <property name=\"text\">\n-                    <string/>\n-                   </property>\n-                  </widget>\n-                 </item>\n-                 <item>\n-                  <widget class=\"QLabel\" name=\"labelMinFeeWarning\">\n+                  <widget class=\"QLabel\" name=\"labelCustomFeeWarning\">\n                    <property name=\"enabled\">\n                     <bool>true</bool>\n                    </property>\n                    <property name=\"toolTip\">\n-                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</string>\n+                    <string>When there is less transaction volume than space in the blocks, miners as well as relaying nodes may enforce a minimum fee. Paying only this minimum fee is just fine, but be aware that this can result in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</string>\n                    </property>\n                    <property name=\"text\">\n-                    <string>(read the tooltip)</string>\n-                   </property>\n-                   <property name=\"margin\">\n-                    <number>5</number>\n+                    <string>A too low fee might result in a never confirming transaction (read the tooltip)</string>\n                    </property>\n                   </widget>\n                  </item>\n@@ -992,9 +979,6 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n                    <property name=\"text\">\n                     <string/>\n                    </property>\n-                   <property name=\"margin\">\n-                    <number>2</number>\n-                   </property>\n                   </widget>\n                  </item>\n                  <item>\n@@ -1009,9 +993,6 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n                    <property name=\"text\">\n                     <string>(Smart fee not initialized yet. This usually takes a few blocks...)</string>\n                    </property>\n-                   <property name=\"margin\">\n-                    <number>2</number>\n-                   </property>\n                   </widget>\n                  </item>\n                  <item>\n@@ -1038,24 +1019,8 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n                      <property name=\"text\">\n                       <string>Confirmation time target:</string>\n                      </property>\n-                     <property name=\"margin\">\n-                      <number>2</number>\n-                     </property>\n                     </widget>\n                    </item>\n-                   <item>\n-                    <spacer name=\"verticalSpacer_3\">\n-                     <property name=\"orientation\">\n-                      <enum>Qt::Vertical</enum>\n-                     </property>\n-                     <property name=\"sizeHint\" stdset=\"0\">\n-                      <size>\n-                       <width>1</width>\n-                       <height>1</height>\n-                      </size>\n-                     </property>\n-                    </spacer>\n-                   </item>\n                   </layout>\n                  </item>\n                  <item>"
      },
      {
        "sha": "0e9aca21b1da4803cfb5023f867d939b64ae7eb3",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 44,
        "deletions": 49,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -18,7 +18,7 @@\n #include <protocol.h>\n #include <script/script.h>\n #include <script/standard.h>\n-#include <util.h>\n+#include <util/system.h>\n \n #ifdef WIN32\n #ifdef _WIN32_WINNT\n@@ -38,8 +38,6 @@\n #include <shlwapi.h>\n #endif\n \n-#include <boost/scoped_array.hpp>\n-\n #include <QAbstractItemView>\n #include <QApplication>\n #include <QClipboard>\n@@ -49,6 +47,7 @@\n #include <QDoubleValidator>\n #include <QFileDialog>\n #include <QFont>\n+#include <QFontDatabase>\n #include <QKeyEvent>\n #include <QLineEdit>\n #include <QSettings>\n@@ -57,13 +56,14 @@\n #include <QUrlQuery>\n #include <QMouseEvent>\n \n+#if defined(Q_OS_MAC)\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n \n-#if QT_VERSION >= 0x50200\n-#include <QFontDatabase>\n+#include <objc/objc-runtime.h>\n+#include <CoreServices/CoreServices.h>\n #endif\n \n-static fs::detail::utf8_codecvt_facet utf8;\n-\n namespace GUIUtil {\n \n QString dateTimeStr(const QDateTime &date)\n@@ -78,13 +78,7 @@ QString dateTimeStr(qint64 nTime)\n \n QFont fixedPitchFont()\n {\n-#if QT_VERSION >= 0x50200\n     return QFontDatabase::systemFont(QFontDatabase::FixedFont);\n-#else\n-    QFont font(\"Monospace\");\n-    font.setStyleHint(QFont::Monospace);\n-    return font;\n-#endif\n }\n \n // Just some dummy data to generate a convincing random-looking (but consistent) address\n@@ -357,6 +351,27 @@ bool isObscured(QWidget *w)\n         && checkPoint(QPoint(w->width() / 2, w->height() / 2), w));\n }\n \n+void bringToFront(QWidget* w)\n+{\n+#ifdef Q_OS_MAC\n+    // Force application activation on macOS. With Qt 5.4 this is required when\n+    // an action in the dock menu is triggered.\n+    id app = objc_msgSend((id) objc_getClass(\"NSApplication\"), sel_registerName(\"sharedApplication\"));\n+    objc_msgSend(app, sel_registerName(\"activateIgnoringOtherApps:\"), YES);\n+#endif\n+\n+    if (w) {\n+        // activateWindow() (sometimes) helps with keyboard focus on Windows\n+        if (w->isMinimized()) {\n+            w->showNormal();\n+        } else {\n+            w->show();\n+        }\n+        w->activateWindow();\n+        w->raise();\n+    }\n+}\n+\n void openDebugLogfile()\n {\n     fs::path pathDebug = GetDataDir() / \"debug.log\";\n@@ -371,7 +386,7 @@ bool openBitcoinConf()\n     fs::path pathConfig = GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME));\n \n     /* Create the file */\n-    fs::ofstream configFile(pathConfig, std::ios_base::app);\n+    fsbridge::ofstream configFile(pathConfig, std::ios_base::app);\n \n     if (!configFile.good())\n         return false;\n@@ -409,15 +424,15 @@ bool ToolTipToRichTextFilter::eventFilter(QObject *obj, QEvent *evt)\n \n void TableViewLastColumnResizingFixer::connectViewHeadersSignals()\n {\n-    connect(tableView->horizontalHeader(), SIGNAL(sectionResized(int,int,int)), this, SLOT(on_sectionResized(int,int,int)));\n-    connect(tableView->horizontalHeader(), SIGNAL(geometriesChanged()), this, SLOT(on_geometriesChanged()));\n+    connect(tableView->horizontalHeader(), &QHeaderView::sectionResized, this, &TableViewLastColumnResizingFixer::on_sectionResized);\n+    connect(tableView->horizontalHeader(), &QHeaderView::geometriesChanged, this, &TableViewLastColumnResizingFixer::on_geometriesChanged);\n }\n \n // We need to disconnect these while handling the resize events, otherwise we can enter infinite loops.\n void TableViewLastColumnResizingFixer::disconnectViewHeadersSignals()\n {\n-    disconnect(tableView->horizontalHeader(), SIGNAL(sectionResized(int,int,int)), this, SLOT(on_sectionResized(int,int,int)));\n-    disconnect(tableView->horizontalHeader(), SIGNAL(geometriesChanged()), this, SLOT(on_geometriesChanged()));\n+    disconnect(tableView->horizontalHeader(), &QHeaderView::sectionResized, this, &TableViewLastColumnResizingFixer::on_sectionResized);\n+    disconnect(tableView->horizontalHeader(), &QHeaderView::geometriesChanged, this, &TableViewLastColumnResizingFixer::on_geometriesChanged);\n }\n \n // Setup the resize mode, handles compatibility for Qt5 and below as the method signatures changed.\n@@ -548,52 +563,37 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n         CoInitialize(nullptr);\n \n         // Get a pointer to the IShellLink interface.\n-        IShellLink* psl = nullptr;\n+        IShellLinkW* psl = nullptr;\n         HRESULT hres = CoCreateInstance(CLSID_ShellLink, nullptr,\n-            CLSCTX_INPROC_SERVER, IID_IShellLink,\n+            CLSCTX_INPROC_SERVER, IID_IShellLinkW,\n             reinterpret_cast<void**>(&psl));\n \n         if (SUCCEEDED(hres))\n         {\n             // Get the current executable path\n-            TCHAR pszExePath[MAX_PATH];\n-            GetModuleFileName(nullptr, pszExePath, sizeof(pszExePath));\n+            WCHAR pszExePath[MAX_PATH];\n+            GetModuleFileNameW(nullptr, pszExePath, ARRAYSIZE(pszExePath));\n \n             // Start client minimized\n             QString strArgs = \"-min\";\n             // Set -testnet /-regtest options\n             strArgs += QString::fromStdString(strprintf(\" -testnet=%d -regtest=%d\", gArgs.GetBoolArg(\"-testnet\", false), gArgs.GetBoolArg(\"-regtest\", false)));\n \n-#ifdef UNICODE\n-            boost::scoped_array<TCHAR> args(new TCHAR[strArgs.length() + 1]);\n-            // Convert the QString to TCHAR*\n-            strArgs.toWCharArray(args.get());\n-            // Add missing '\\0'-termination to string\n-            args[strArgs.length()] = '\\0';\n-#endif\n-\n             // Set the path to the shortcut target\n             psl->SetPath(pszExePath);\n-            PathRemoveFileSpec(pszExePath);\n+            PathRemoveFileSpecW(pszExePath);\n             psl->SetWorkingDirectory(pszExePath);\n             psl->SetShowCmd(SW_SHOWMINNOACTIVE);\n-#ifndef UNICODE\n-            psl->SetArguments(strArgs.toStdString().c_str());\n-#else\n-            psl->SetArguments(args.get());\n-#endif\n+            psl->SetArguments(strArgs.toStdWString().c_str());\n \n             // Query IShellLink for the IPersistFile interface for\n             // saving the shortcut in persistent storage.\n             IPersistFile* ppf = nullptr;\n             hres = psl->QueryInterface(IID_IPersistFile, reinterpret_cast<void**>(&ppf));\n             if (SUCCEEDED(hres))\n             {\n-                WCHAR pwsz[MAX_PATH];\n-                // Ensure that the string is ANSI.\n-                MultiByteToWideChar(CP_ACP, 0, StartupShortcutPath().string().c_str(), -1, pwsz, MAX_PATH);\n                 // Save the link by calling IPersistFile::Save.\n-                hres = ppf->Save(pwsz, TRUE);\n+                hres = ppf->Save(StartupShortcutPath().wstring().c_str(), TRUE);\n                 ppf->Release();\n                 psl->Release();\n                 CoUninitialize();\n@@ -630,7 +630,7 @@ fs::path static GetAutostartFilePath()\n \n bool GetStartOnSystemStartup()\n {\n-    fs::ifstream optionFile(GetAutostartFilePath());\n+    fsbridge::ifstream optionFile(GetAutostartFilePath());\n     if (!optionFile.good())\n         return false;\n     // Scan through file for \"Hidden=true\":\n@@ -661,7 +661,7 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n \n         fs::create_directories(GetAutostartDir());\n \n-        fs::ofstream optionFile(GetAutostartFilePath(), std::ios_base::out|std::ios_base::trunc);\n+        fsbridge::ofstream optionFile(GetAutostartFilePath(), std::ios_base::out | std::ios_base::trunc);\n         if (!optionFile.good())\n             return false;\n         std::string chain = gArgs.GetChainName();\n@@ -682,13 +682,8 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n \n \n #elif defined(Q_OS_MAC)\n-#pragma GCC diagnostic push\n-#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n // based on: https://github.com/Mozketo/LaunchAtLoginController/blob/master/LaunchAtLoginController.m\n \n-#include <CoreFoundation/CoreFoundation.h>\n-#include <CoreServices/CoreServices.h>\n-\n LSSharedFileListItemRef findStartupItemInList(LSSharedFileListRef list, CFURLRef findUrl);\n LSSharedFileListItemRef findStartupItemInList(LSSharedFileListRef list, CFURLRef findUrl)\n {\n@@ -781,12 +776,12 @@ void setClipboard(const QString& str)\n \n fs::path qstringToBoostPath(const QString &path)\n {\n-    return fs::path(path.toStdString(), utf8);\n+    return fs::path(path.toStdString());\n }\n \n QString boostPathToQString(const fs::path &path)\n {\n-    return QString::fromStdString(path.string(utf8));\n+    return QString::fromStdString(path.string());\n }\n \n QString formatDurationStr(int secs)"
      },
      {
        "sha": "f1d0aa48efc79cc4d7efc62f9e78f834929ad34c",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -115,6 +115,9 @@ namespace GUIUtil\n     // Determine whether a widget is hidden behind other windows\n     bool isObscured(QWidget *w);\n \n+    // Activate, show and raise the widget\n+    void bringToFront(QWidget* w);\n+\n     // Open debug.log\n     void openDebugLogfile();\n "
      },
      {
        "sha": "0b61b05318dbf9c0b584a6900de81c5c9a07c1b4",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -13,7 +13,7 @@\n #include <qt/guiutil.h>\n \n #include <interfaces/node.h>\n-#include <util.h>\n+#include <util/system.h>\n \n #include <QFileDialog>\n #include <QSettings>\n@@ -303,11 +303,11 @@ void Intro::startThread()\n     FreespaceChecker *executor = new FreespaceChecker(this);\n     executor->moveToThread(thread);\n \n-    connect(executor, SIGNAL(reply(int,QString,quint64)), this, SLOT(setStatus(int,QString,quint64)));\n-    connect(this, SIGNAL(requestCheck()), executor, SLOT(check()));\n+    connect(executor, &FreespaceChecker::reply, this, &Intro::setStatus);\n+    connect(this, &Intro::requestCheck, executor, &FreespaceChecker::check);\n     /*  make sure executor object is deleted in its own thread */\n-    connect(this, SIGNAL(stopThread()), executor, SLOT(deleteLater()));\n-    connect(this, SIGNAL(stopThread()), thread, SLOT(quit()));\n+    connect(this, &Intro::stopThread, executor, &QObject::deleteLater);\n+    connect(this, &Intro::stopThread, thread, &QThread::quit);\n \n     thread->start();\n }"
      },
      {
        "sha": "ff867e21a79c010f70c473978f85f10a22e55972",
        "filename": "src/qt/macdockiconhandler.h",
        "status": "modified",
        "additions": 2,
        "deletions": 19,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/macdockiconhandler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/macdockiconhandler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macdockiconhandler.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -1,44 +1,27 @@\n-// Copyright (c) 2011-2015 The Bitcoin Core developers\n+// Copyright (c) 2011-2018 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #ifndef BITCOIN_QT_MACDOCKICONHANDLER_H\n #define BITCOIN_QT_MACDOCKICONHANDLER_H\n \n-#include <QMainWindow>\n #include <QObject>\n \n-QT_BEGIN_NAMESPACE\n-class QIcon;\n-class QMenu;\n-class QWidget;\n-QT_END_NAMESPACE\n-\n-/** Macintosh-specific dock icon handler.\n+/** macOS-specific Dock icon handler.\n  */\n class MacDockIconHandler : public QObject\n {\n     Q_OBJECT\n \n public:\n-    ~MacDockIconHandler();\n-\n-    QMenu *dockMenu();\n-    void setIcon(const QIcon &icon);\n-    void setMainWindow(QMainWindow *window);\n     static MacDockIconHandler *instance();\n     static void cleanup();\n-    void handleDockIconClickEvent();\n \n Q_SIGNALS:\n     void dockIconClicked();\n \n private:\n     MacDockIconHandler();\n-\n-    QWidget *m_dummyWidget;\n-    QMenu *m_dockMenu;\n-    QMainWindow *mainWindow;\n };\n \n #endif // BITCOIN_QT_MACDOCKICONHANDLER_H"
      },
      {
        "sha": "102adce6c5fb61159b5f8b0df94f500aa38f23b9",
        "filename": "src/qt/macdockiconhandler.mm",
        "status": "modified",
        "additions": 9,
        "deletions": 91,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/macdockiconhandler.mm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/macdockiconhandler.mm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macdockiconhandler.mm?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -1,107 +1,36 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2018 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"macdockiconhandler.h\"\n \n-#include <QImageWriter>\n-#include <QMenu>\n-#include <QBuffer>\n-#include <QWidget>\n-\n #undef slots\n-#include <Cocoa/Cocoa.h>\n #include <objc/objc.h>\n #include <objc/message.h>\n \n static MacDockIconHandler *s_instance = nullptr;\n \n-bool dockClickHandler(id self,SEL _cmd,...) {\n+bool dockClickHandler(id self, SEL _cmd, ...) {\n     Q_UNUSED(self)\n     Q_UNUSED(_cmd)\n \n-    s_instance->handleDockIconClickEvent();\n+    Q_EMIT s_instance->dockIconClicked();\n \n-    // Return NO (false) to suppress the default OS X actions\n+    // Return NO (false) to suppress the default macOS actions\n     return false;\n }\n \n void setupDockClickHandler() {\n-    Class cls = objc_getClass(\"NSApplication\");\n-    id appInst = objc_msgSend((id)cls, sel_registerName(\"sharedApplication\"));\n-\n-    if (appInst != nullptr) {\n-        id delegate = objc_msgSend(appInst, sel_registerName(\"delegate\"));\n-        Class delClass = (Class)objc_msgSend(delegate,  sel_registerName(\"class\"));\n-        SEL shouldHandle = sel_registerName(\"applicationShouldHandleReopen:hasVisibleWindows:\");\n-        if (class_getInstanceMethod(delClass, shouldHandle))\n-            class_replaceMethod(delClass, shouldHandle, (IMP)dockClickHandler, \"B@:\");\n-        else\n-            class_addMethod(delClass, shouldHandle, (IMP)dockClickHandler,\"B@:\");\n-    }\n+    id app = objc_msgSend((id)objc_getClass(\"NSApplication\"), sel_registerName(\"sharedApplication\"));\n+    id delegate = objc_msgSend(app, sel_registerName(\"delegate\"));\n+    Class delClass = (Class)objc_msgSend(delegate, sel_registerName(\"class\"));\n+    SEL shouldHandle = sel_registerName(\"applicationShouldHandleReopen:hasVisibleWindows:\");\n+    class_replaceMethod(delClass, shouldHandle, (IMP)dockClickHandler, \"B@:\");\n }\n \n-\n MacDockIconHandler::MacDockIconHandler() : QObject()\n {\n-    NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];\n-\n     setupDockClickHandler();\n-    this->m_dummyWidget = new QWidget();\n-    this->m_dockMenu = new QMenu(this->m_dummyWidget);\n-    this->setMainWindow(nullptr);\n-#if QT_VERSION >= 0x050200\n-    this->m_dockMenu->setAsDockMenu();\n-#endif\n-    [pool release];\n-}\n-\n-void MacDockIconHandler::setMainWindow(QMainWindow *window) {\n-    this->mainWindow = window;\n-}\n-\n-MacDockIconHandler::~MacDockIconHandler()\n-{\n-    delete this->m_dummyWidget;\n-    this->setMainWindow(nullptr);\n-}\n-\n-QMenu *MacDockIconHandler::dockMenu()\n-{\n-    return this->m_dockMenu;\n-}\n-\n-void MacDockIconHandler::setIcon(const QIcon &icon)\n-{\n-    NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];\n-    NSImage *image = nil;\n-    if (icon.isNull())\n-        image = [[NSImage imageNamed:@\"NSApplicationIcon\"] retain];\n-    else {\n-        // generate NSImage from QIcon and use this as dock icon.\n-        QSize size = icon.actualSize(QSize(128, 128));\n-        QPixmap pixmap = icon.pixmap(size);\n-\n-        // Write image into a R/W buffer from raw pixmap, then save the image.\n-        QBuffer notificationBuffer;\n-        if (!pixmap.isNull() && notificationBuffer.open(QIODevice::ReadWrite)) {\n-            QImageWriter writer(&notificationBuffer, \"PNG\");\n-            if (writer.write(pixmap.toImage())) {\n-                NSData* macImgData = [NSData dataWithBytes:notificationBuffer.buffer().data()\n-                                             length:notificationBuffer.buffer().size()];\n-                image =  [[NSImage alloc] initWithData:macImgData];\n-            }\n-        }\n-\n-        if(!image) {\n-            // if testnet image could not be created, load std. app icon\n-            image = [[NSImage imageNamed:@\"NSApplicationIcon\"] retain];\n-        }\n-    }\n-\n-    [NSApp setApplicationIconImage:image];\n-    [image release];\n-    [pool release];\n }\n \n MacDockIconHandler *MacDockIconHandler::instance()\n@@ -115,14 +44,3 @@ void setupDockClickHandler() {\n {\n     delete s_instance;\n }\n-\n-void MacDockIconHandler::handleDockIconClickEvent()\n-{\n-    if (this->mainWindow)\n-    {\n-        this->mainWindow->activateWindow();\n-        this->mainWindow->show();\n-    }\n-\n-    Q_EMIT this->dockIconClicked();\n-}"
      },
      {
        "sha": "03c744c12e262bf005ad9af2f18980cbc6f3cf4d",
        "filename": "src/qt/macnotificationhandler.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/macnotificationhandler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/macnotificationhandler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macnotificationhandler.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -19,7 +19,7 @@ class MacNotificationHandler : public QObject\n     void showNotification(const QString &title, const QString &text);\n \n     /** check if OS can handle UserNotifications */\n-    bool hasUserNotificationCenterSupport(void);\n+    bool hasUserNotificationCenterSupport();\n     static MacNotificationHandler *instance();\n };\n "
      },
      {
        "sha": "8c2cd840b01c8738e94a58188aff008adc3d2be3",
        "filename": "src/qt/macos_appnap.h",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/macos_appnap.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/macos_appnap.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macos_appnap.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_QT_MACOS_APPNAP_H\n+#define BITCOIN_QT_MACOS_APPNAP_H\n+\n+#include <memory>\n+\n+class CAppNapInhibitor final\n+{\n+public:\n+    explicit CAppNapInhibitor();\n+    ~CAppNapInhibitor();\n+\n+    void disableAppNap();\n+    void enableAppNap();\n+\n+private:\n+    class CAppNapImpl;\n+    std::unique_ptr<CAppNapImpl> impl;\n+};\n+\n+#endif // BITCOIN_QT_MACOS_APPNAP_H"
      },
      {
        "sha": "22a88782abe39d978ee6f4207c81f5df3b54e338",
        "filename": "src/qt/macos_appnap.mm",
        "status": "added",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/macos_appnap.mm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/macos_appnap.mm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macos_appnap.mm?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -0,0 +1,71 @@\n+// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"macos_appnap.h\"\n+\n+#include <AvailabilityMacros.h>\n+#include <Foundation/NSProcessInfo.h>\n+#include <Foundation/Foundation.h>\n+\n+class CAppNapInhibitor::CAppNapImpl\n+{\n+public:\n+    ~CAppNapImpl()\n+    {\n+        if(activityId)\n+            enableAppNap();\n+    }\n+\n+    void disableAppNap()\n+    {\n+        if (!activityId)\n+        {\n+            @autoreleasepool {\n+                const NSActivityOptions activityOptions =\n+                NSActivityUserInitiatedAllowingIdleSystemSleep &\n+                ~(NSActivitySuddenTerminationDisabled |\n+                NSActivityAutomaticTerminationDisabled);\n+\n+                id processInfo = [NSProcessInfo processInfo];\n+                if ([processInfo respondsToSelector:@selector(beginActivityWithOptions:reason:)])\n+                {\n+                    activityId = [processInfo beginActivityWithOptions: activityOptions reason:@\"Temporarily disable App Nap for bitcoin-qt.\"];\n+                    [activityId retain];\n+                }\n+            }\n+        }\n+    }\n+\n+    void enableAppNap()\n+    {\n+        if(activityId)\n+        {\n+            @autoreleasepool {\n+                id processInfo = [NSProcessInfo processInfo];\n+                if ([processInfo respondsToSelector:@selector(endActivity:)])\n+                    [processInfo endActivity:activityId];\n+\n+                [activityId release];\n+                activityId = nil;\n+            }\n+        }\n+    }\n+\n+private:\n+    NSObject* activityId;\n+};\n+\n+CAppNapInhibitor::CAppNapInhibitor() : impl(new CAppNapImpl()) {}\n+\n+CAppNapInhibitor::~CAppNapInhibitor() = default;\n+\n+void CAppNapInhibitor::disableAppNap()\n+{\n+    impl->disableAppNap();\n+}\n+\n+void CAppNapInhibitor::enableAppNap()\n+{\n+    impl->enableAppNap();\n+}"
      },
      {
        "sha": "c5bedf007a6aea90a29fa95d24a711c8da8b25e9",
        "filename": "src/qt/modaloverlay.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/modaloverlay.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/modaloverlay.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/modaloverlay.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -21,7 +21,7 @@ layerIsVisible(false),\n userClosed(false)\n {\n     ui->setupUi(this);\n-    connect(ui->closeButton, SIGNAL(clicked()), this, SLOT(closeClicked()));\n+    connect(ui->closeButton, &QPushButton::clicked, this, &ModalOverlay::closeClicked);\n     if (parent) {\n         parent->installEventFilter(this);\n         raise();"
      },
      {
        "sha": "c9871f6c669526e6ea6d7550db1d79904aaeb90c",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 45,
        "deletions": 25,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -23,6 +23,7 @@\n #include <QIntValidator>\n #include <QLocale>\n #include <QMessageBox>\n+#include <QSystemTrayIcon>\n #include <QTimer>\n \n OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n@@ -46,7 +47,7 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n     ui->pruneWarning->setStyleSheet(\"QLabel { color: red; }\");\n \n     ui->pruneSize->setEnabled(false);\n-    connect(ui->prune, SIGNAL(toggled(bool)), ui->pruneSize, SLOT(setEnabled(bool)));\n+    connect(ui->prune, &QPushButton::toggled, ui->pruneSize, &QWidget::setEnabled);\n \n     /* Network elements init */\n #ifndef USE_UPNP\n@@ -61,13 +62,13 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n     ui->proxyPortTor->setEnabled(false);\n     ui->proxyPortTor->setValidator(new QIntValidator(1, 65535, this));\n \n-    connect(ui->connectSocks, SIGNAL(toggled(bool)), ui->proxyIp, SLOT(setEnabled(bool)));\n-    connect(ui->connectSocks, SIGNAL(toggled(bool)), ui->proxyPort, SLOT(setEnabled(bool)));\n-    connect(ui->connectSocks, SIGNAL(toggled(bool)), this, SLOT(updateProxyValidationState()));\n+    connect(ui->connectSocks, &QPushButton::toggled, ui->proxyIp, &QWidget::setEnabled);\n+    connect(ui->connectSocks, &QPushButton::toggled, ui->proxyPort, &QWidget::setEnabled);\n+    connect(ui->connectSocks, &QPushButton::toggled, this, &OptionsDialog::updateProxyValidationState);\n \n-    connect(ui->connectSocksTor, SIGNAL(toggled(bool)), ui->proxyIpTor, SLOT(setEnabled(bool)));\n-    connect(ui->connectSocksTor, SIGNAL(toggled(bool)), ui->proxyPortTor, SLOT(setEnabled(bool)));\n-    connect(ui->connectSocksTor, SIGNAL(toggled(bool)), this, SLOT(updateProxyValidationState()));\n+    connect(ui->connectSocksTor, &QPushButton::toggled, ui->proxyIpTor, &QWidget::setEnabled);\n+    connect(ui->connectSocksTor, &QPushButton::toggled, ui->proxyPortTor, &QWidget::setEnabled);\n+    connect(ui->connectSocksTor, &QPushButton::toggled, this, &OptionsDialog::updateProxyValidationState);\n \n     /* Window elements init */\n #ifdef Q_OS_MAC\n@@ -122,10 +123,17 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n     /* setup/change UI elements when proxy IPs are invalid/valid */\n     ui->proxyIp->setCheckValidator(new ProxyAddressValidator(parent));\n     ui->proxyIpTor->setCheckValidator(new ProxyAddressValidator(parent));\n-    connect(ui->proxyIp, SIGNAL(validationDidChange(QValidatedLineEdit *)), this, SLOT(updateProxyValidationState()));\n-    connect(ui->proxyIpTor, SIGNAL(validationDidChange(QValidatedLineEdit *)), this, SLOT(updateProxyValidationState()));\n-    connect(ui->proxyPort, SIGNAL(textChanged(const QString&)), this, SLOT(updateProxyValidationState()));\n-    connect(ui->proxyPortTor, SIGNAL(textChanged(const QString&)), this, SLOT(updateProxyValidationState()));\n+    connect(ui->proxyIp, &QValidatedLineEdit::validationDidChange, this, &OptionsDialog::updateProxyValidationState);\n+    connect(ui->proxyIpTor, &QValidatedLineEdit::validationDidChange, this, &OptionsDialog::updateProxyValidationState);\n+    connect(ui->proxyPort, &QLineEdit::textChanged, this, &OptionsDialog::updateProxyValidationState);\n+    connect(ui->proxyPortTor, &QLineEdit::textChanged, this, &OptionsDialog::updateProxyValidationState);\n+\n+    if (!QSystemTrayIcon::isSystemTrayAvailable()) {\n+        ui->hideTrayIcon->setChecked(true);\n+        ui->hideTrayIcon->setEnabled(false);\n+        ui->minimizeToTray->setChecked(false);\n+        ui->minimizeToTray->setEnabled(false);\n+    }\n }\n \n OptionsDialog::~OptionsDialog()\n@@ -158,20 +166,30 @@ void OptionsDialog::setModel(OptionsModel *_model)\n     /* warn when one of the following settings changes by user action (placed here so init via mapper doesn't trigger them) */\n \n     /* Main */\n-    connect(ui->prune, SIGNAL(clicked(bool)), this, SLOT(showRestartWarning()));\n-    connect(ui->prune, SIGNAL(clicked(bool)), this, SLOT(togglePruneWarning(bool)));\n-    connect(ui->pruneSize, SIGNAL(valueChanged(int)), this, SLOT(showRestartWarning()));\n-    connect(ui->databaseCache, SIGNAL(valueChanged(int)), this, SLOT(showRestartWarning()));\n-    connect(ui->threadsScriptVerif, SIGNAL(valueChanged(int)), this, SLOT(showRestartWarning()));\n+    connect(ui->prune, &QCheckBox::clicked, this, &OptionsDialog::showRestartWarning);\n+    connect(ui->prune, &QCheckBox::clicked, this, &OptionsDialog::togglePruneWarning);\n+    connect(ui->pruneSize, static_cast<void (QSpinBox::*)(int)>(&QSpinBox::valueChanged), this, &OptionsDialog::showRestartWarning);\n+    connect(ui->databaseCache, static_cast<void (QSpinBox::*)(int)>(&QSpinBox::valueChanged), this, &OptionsDialog::showRestartWarning);\n+    connect(ui->threadsScriptVerif, static_cast<void (QSpinBox::*)(int)>(&QSpinBox::valueChanged), this, &OptionsDialog::showRestartWarning);\n     /* Wallet */\n-    connect(ui->spendZeroConfChange, SIGNAL(clicked(bool)), this, SLOT(showRestartWarning()));\n+    connect(ui->spendZeroConfChange, &QCheckBox::clicked, this, &OptionsDialog::showRestartWarning);\n     /* Network */\n-    connect(ui->allowIncoming, SIGNAL(clicked(bool)), this, SLOT(showRestartWarning()));\n-    connect(ui->connectSocks, SIGNAL(clicked(bool)), this, SLOT(showRestartWarning()));\n-    connect(ui->connectSocksTor, SIGNAL(clicked(bool)), this, SLOT(showRestartWarning()));\n+    connect(ui->allowIncoming, &QCheckBox::clicked, this, &OptionsDialog::showRestartWarning);\n+    connect(ui->connectSocks, &QCheckBox::clicked, this, &OptionsDialog::showRestartWarning);\n+    connect(ui->connectSocksTor, &QCheckBox::clicked, this, &OptionsDialog::showRestartWarning);\n     /* Display */\n-    connect(ui->lang, SIGNAL(valueChanged()), this, SLOT(showRestartWarning()));\n-    connect(ui->thirdPartyTxUrls, SIGNAL(textChanged(const QString &)), this, SLOT(showRestartWarning()));\n+    connect(ui->lang, static_cast<void (QValueComboBox::*)()>(&QValueComboBox::valueChanged), [this]{ showRestartWarning(); });\n+    connect(ui->thirdPartyTxUrls, &QLineEdit::textChanged, [this]{ showRestartWarning(); });\n+}\n+\n+void OptionsDialog::setCurrentTab(OptionsDialog::Tab tab)\n+{\n+    QWidget *tab_widget = nullptr;\n+    if (tab == OptionsDialog::Tab::TAB_NETWORK) tab_widget = ui->tabNetwork;\n+    if (tab == OptionsDialog::Tab::TAB_MAIN) tab_widget = ui->tabMain;\n+    if (tab_widget && ui->tabWidget->currentWidget() != tab_widget) {\n+        ui->tabWidget->setCurrentWidget(tab_widget);\n+    }\n }\n \n void OptionsDialog::setMapper()\n@@ -201,8 +219,10 @@ void OptionsDialog::setMapper()\n \n     /* Window */\n #ifndef Q_OS_MAC\n-    mapper->addMapping(ui->hideTrayIcon, OptionsModel::HideTrayIcon);\n-    mapper->addMapping(ui->minimizeToTray, OptionsModel::MinimizeToTray);\n+    if (QSystemTrayIcon::isSystemTrayAvailable()) {\n+        mapper->addMapping(ui->hideTrayIcon, OptionsModel::HideTrayIcon);\n+        mapper->addMapping(ui->minimizeToTray, OptionsModel::MinimizeToTray);\n+    }\n     mapper->addMapping(ui->minimizeOnClose, OptionsModel::MinimizeOnClose);\n #endif\n \n@@ -290,7 +310,7 @@ void OptionsDialog::showRestartWarning(bool fPersistent)\n         ui->statusLabel->setText(tr(\"This change would require a client restart.\"));\n         // clear non-persistent status label after 10 seconds\n         // Todo: should perhaps be a class attribute, if we extend the use of statusLabel\n-        QTimer::singleShot(10000, this, SLOT(clearStatusLabel()));\n+        QTimer::singleShot(10000, this, &OptionsDialog::clearStatusLabel);\n     }\n }\n "
      },
      {
        "sha": "9bc1c8ae4f1dc025f365f63156104abd7286fc49",
        "filename": "src/qt/optionsdialog.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/optionsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/optionsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -40,8 +40,14 @@ class OptionsDialog : public QDialog\n     explicit OptionsDialog(QWidget *parent, bool enableWallet);\n     ~OptionsDialog();\n \n+    enum Tab {\n+        TAB_MAIN,\n+        TAB_NETWORK,\n+    };\n+\n     void setModel(OptionsModel *model);\n     void setMapper();\n+    void setCurrentTab(OptionsDialog::Tab tab);\n \n private Q_SLOTS:\n     /* set OK button state (enabled / disabled) */"
      },
      {
        "sha": "1db9609979d2afa36f0c7a14a308a74804c4d6e0",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -133,12 +133,12 @@ OverviewPage::OverviewPage(const PlatformStyle *platformStyle, QWidget *parent)\n     ui->listTransactions->setMinimumHeight(NUM_ITEMS * (DECORATION_SIZE + 2));\n     ui->listTransactions->setAttribute(Qt::WA_MacShowFocusRect, false);\n \n-    connect(ui->listTransactions, SIGNAL(clicked(QModelIndex)), this, SLOT(handleTransactionClicked(QModelIndex)));\n+    connect(ui->listTransactions, &QListView::clicked, this, &OverviewPage::handleTransactionClicked);\n \n     // start with displaying the \"out of sync\" warnings\n     showOutOfSyncWarning(true);\n-    connect(ui->labelWalletStatus, SIGNAL(clicked()), this, SLOT(handleOutOfSyncWarningClicks()));\n-    connect(ui->labelTransactionsStatus, SIGNAL(clicked()), this, SLOT(handleOutOfSyncWarningClicks()));\n+    connect(ui->labelWalletStatus, &QPushButton::clicked, this, &OverviewPage::handleOutOfSyncWarningClicks);\n+    connect(ui->labelTransactionsStatus, &QPushButton::clicked, this, &OverviewPage::handleOutOfSyncWarningClicks);\n }\n \n void OverviewPage::handleTransactionClicked(const QModelIndex &index)\n@@ -201,7 +201,7 @@ void OverviewPage::setClientModel(ClientModel *model)\n     if(model)\n     {\n         // Show warning if this is a prerelease version\n-        connect(model, SIGNAL(alertsChanged(QString)), this, SLOT(updateAlerts(QString)));\n+        connect(model, &ClientModel::alertsChanged, this, &OverviewPage::updateAlerts);\n         updateAlerts(model->getStatusBarWarnings());\n     }\n }\n@@ -227,12 +227,12 @@ void OverviewPage::setWalletModel(WalletModel *model)\n         interfaces::Wallet& wallet = model->wallet();\n         interfaces::WalletBalances balances = wallet.getBalances();\n         setBalance(balances);\n-        connect(model, SIGNAL(balanceChanged(interfaces::WalletBalances)), this, SLOT(setBalance(interfaces::WalletBalances)));\n+        connect(model, &WalletModel::balanceChanged, this, &OverviewPage::setBalance);\n \n-        connect(model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n+        connect(model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &OverviewPage::updateDisplayUnit);\n \n         updateWatchOnlyLabels(wallet.haveWatchOnly());\n-        connect(model, SIGNAL(notifyWatchonlyChanged(bool)), this, SLOT(updateWatchOnlyLabels(bool)));\n+        connect(model, &WalletModel::notifyWatchonlyChanged, this, &OverviewPage::updateWatchOnlyLabels);\n     }\n \n     // update the display unit, to not use the default (\"BTC\")"
      },
      {
        "sha": "b962ab1ef210b1145da6651bec8abda0f59ff44a",
        "filename": "src/qt/paymentrequestplus.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/paymentrequestplus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/paymentrequestplus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -9,7 +9,7 @@\n \n #include <qt/paymentrequestplus.h>\n \n-#include <util.h>\n+#include <util/system.h>\n \n #include <stdexcept>\n \n@@ -142,7 +142,6 @@ bool PaymentRequestPlus::getMerchant(X509_STORE* certStore, QString& merchant) c\n         if (result != 1) {\n             int error = X509_STORE_CTX_get_error(store_ctx);\n             // For testing payment requests, we allow self signed root certs!\n-            // This option is just shown in the UI options, if -help-debug is enabled.\n             if (!(error == X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT && gArgs.GetBoolArg(\"-allowselfsignedrootcertificates\", DEFAULT_SELFSIGNED_ROOTCERTS))) {\n                 throw SSLVerifyError(X509_verify_cert_error_string(error));\n             } else {"
      },
      {
        "sha": "8148986b51dee0143e77950a1c85dd95fdb2e10b",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 169,
        "deletions": 141,
        "changes": 310,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -2,6 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n #include <qt/paymentserver.h>\n \n #include <qt/bitcoinunits.h>\n@@ -13,7 +17,7 @@\n #include <policy/policy.h>\n #include <key_io.h>\n #include <ui_interface.h>\n-#include <util.h>\n+#include <util/system.h>\n #include <wallet/wallet.h>\n \n #include <cstdlib>\n@@ -45,28 +49,15 @@\n \n const int BITCOIN_IPC_CONNECT_TIMEOUT = 1000; // milliseconds\n const QString BITCOIN_IPC_PREFIX(\"bitcoin:\");\n+#ifdef ENABLE_BIP70\n // BIP70 payment protocol messages\n const char* BIP70_MESSAGE_PAYMENTACK = \"PaymentACK\";\n const char* BIP70_MESSAGE_PAYMENTREQUEST = \"PaymentRequest\";\n // BIP71 payment protocol media types\n const char* BIP71_MIMETYPE_PAYMENT = \"application/bitcoin-payment\";\n const char* BIP71_MIMETYPE_PAYMENTACK = \"application/bitcoin-paymentack\";\n const char* BIP71_MIMETYPE_PAYMENTREQUEST = \"application/bitcoin-paymentrequest\";\n-\n-struct X509StoreDeleter {\n-      void operator()(X509_STORE* b) {\n-          X509_STORE_free(b);\n-      }\n-};\n-\n-struct X509Deleter {\n-      void operator()(X509* b) { X509_free(b); }\n-};\n-\n-namespace // Anon namespace\n-{\n-    std::unique_ptr<X509_STORE, X509StoreDeleter> certStore;\n-}\n+#endif\n \n //\n // Create a name that is unique for:\n@@ -93,94 +84,6 @@ static QString ipcServerName()\n \n static QList<QString> savedPaymentRequests;\n \n-static void ReportInvalidCertificate(const QSslCertificate& cert)\n-{\n-    qDebug() << QString(\"%1: Payment server found an invalid certificate: \").arg(__func__) << cert.serialNumber() << cert.subjectInfo(QSslCertificate::CommonName) << cert.subjectInfo(QSslCertificate::DistinguishedNameQualifier) << cert.subjectInfo(QSslCertificate::OrganizationalUnitName);\n-}\n-\n-//\n-// Load OpenSSL's list of root certificate authorities\n-//\n-void PaymentServer::LoadRootCAs(X509_STORE* _store)\n-{\n-    // Unit tests mostly use this, to pass in fake root CAs:\n-    if (_store)\n-    {\n-        certStore.reset(_store);\n-        return;\n-    }\n-\n-    // Normal execution, use either -rootcertificates or system certs:\n-    certStore.reset(X509_STORE_new());\n-\n-    // Note: use \"-system-\" default here so that users can pass -rootcertificates=\"\"\n-    // and get 'I don't like X.509 certificates, don't trust anybody' behavior:\n-    QString certFile = QString::fromStdString(gArgs.GetArg(\"-rootcertificates\", \"-system-\"));\n-\n-    // Empty store\n-    if (certFile.isEmpty()) {\n-        qDebug() << QString(\"PaymentServer::%1: Payment request authentication via X.509 certificates disabled.\").arg(__func__);\n-        return;\n-    }\n-\n-    QList<QSslCertificate> certList;\n-\n-    if (certFile != \"-system-\") {\n-            qDebug() << QString(\"PaymentServer::%1: Using \\\"%2\\\" as trusted root certificate.\").arg(__func__).arg(certFile);\n-\n-        certList = QSslCertificate::fromPath(certFile);\n-        // Use those certificates when fetching payment requests, too:\n-        QSslSocket::setDefaultCaCertificates(certList);\n-    } else\n-        certList = QSslSocket::systemCaCertificates();\n-\n-    int nRootCerts = 0;\n-    const QDateTime currentTime = QDateTime::currentDateTime();\n-\n-    for (const QSslCertificate& cert : certList) {\n-        // Don't log NULL certificates\n-        if (cert.isNull())\n-            continue;\n-\n-        // Not yet active/valid, or expired certificate\n-        if (currentTime < cert.effectiveDate() || currentTime > cert.expiryDate()) {\n-            ReportInvalidCertificate(cert);\n-            continue;\n-        }\n-\n-        // Blacklisted certificate\n-        if (cert.isBlacklisted()) {\n-            ReportInvalidCertificate(cert);\n-            continue;\n-        }\n-        QByteArray certData = cert.toDer();\n-        const unsigned char *data = (const unsigned char *)certData.data();\n-\n-        std::unique_ptr<X509, X509Deleter> x509(d2i_X509(0, &data, certData.size()));\n-        if (x509 && X509_STORE_add_cert(certStore.get(), x509.get()))\n-        {\n-            // Note: X509_STORE increases the reference count to the X509 object,\n-            // we still have to release our reference to it.\n-            ++nRootCerts;\n-        }\n-        else\n-        {\n-            ReportInvalidCertificate(cert);\n-            continue;\n-        }\n-    }\n-    qWarning() << \"PaymentServer::LoadRootCAs: Loaded \" << nRootCerts << \" root certificates\";\n-\n-    // Project for another day:\n-    // Fetch certificate revocation lists, and add them to certStore.\n-    // Issues to consider:\n-    //   performance (start a thread to fetch in background?)\n-    //   privacy (fetch through tor/proxy so IP address isn't revealed)\n-    //   would it be easier to just use a compiled-in blacklist?\n-    //    or use Qt's blacklist?\n-    //   \"certificate stapling\" with server-side caching is more efficient\n-}\n-\n //\n // Sending to the server is done synchronously, at startup.\n // If the server isn't already running, startup continues,\n@@ -221,6 +124,7 @@ void PaymentServer::ipcParseCommandLine(interfaces::Node& node, int argc, char*\n                 }\n             }\n         }\n+#ifdef ENABLE_BIP70\n         else if (QFile::exists(arg)) // Filename\n         {\n             savedPaymentRequests.append(arg);\n@@ -244,6 +148,7 @@ void PaymentServer::ipcParseCommandLine(interfaces::Node& node, int argc, char*\n             // GUI hasn't started yet so we can't pop up a message box.\n             qWarning() << \"PaymentServer::ipcSendCommandLine: Payment request file does not exist: \" << arg;\n         }\n+#endif\n     }\n }\n \n@@ -290,12 +195,16 @@ PaymentServer::PaymentServer(QObject* parent, bool startLocalServer) :\n     QObject(parent),\n     saveURIs(true),\n     uriServer(0),\n-    netManager(0),\n     optionsModel(0)\n+#ifdef ENABLE_BIP70\n+    ,netManager(0)\n+#endif\n {\n+#ifdef ENABLE_BIP70\n     // Verify that the version of the library that we linked against is\n     // compatible with the version of the headers we compiled against.\n     GOOGLE_PROTOBUF_VERIFY_VERSION;\n+#endif\n \n     // Install global event filter to catch QFileOpenEvents\n     // on Mac: sent when you click bitcoin: links\n@@ -318,15 +227,19 @@ PaymentServer::PaymentServer(QObject* parent, bool startLocalServer) :\n                 tr(\"Cannot start bitcoin: click-to-pay handler\"));\n         }\n         else {\n-            connect(uriServer, SIGNAL(newConnection()), this, SLOT(handleURIConnection()));\n-            connect(this, SIGNAL(receivedPaymentACK(QString)), this, SLOT(handlePaymentACK(QString)));\n+            connect(uriServer, &QLocalServer::newConnection, this, &PaymentServer::handleURIConnection);\n+#ifdef ENABLE_BIP70\n+            connect(this, &PaymentServer::receivedPaymentACK, this, &PaymentServer::handlePaymentACK);\n+#endif\n         }\n     }\n }\n \n PaymentServer::~PaymentServer()\n {\n+#ifdef ENABLE_BIP70\n     google::protobuf::ShutdownProtobufLibrary();\n+#endif\n }\n \n //\n@@ -349,35 +262,11 @@ bool PaymentServer::eventFilter(QObject *object, QEvent *event)\n     return QObject::eventFilter(object, event);\n }\n \n-void PaymentServer::initNetManager()\n-{\n-    if (!optionsModel)\n-        return;\n-    delete netManager;\n-\n-    // netManager is used to fetch paymentrequests given in bitcoin: URIs\n-    netManager = new QNetworkAccessManager(this);\n-\n-    QNetworkProxy proxy;\n-\n-    // Query active SOCKS5 proxy\n-    if (optionsModel->getProxySettings(proxy)) {\n-        netManager->setProxy(proxy);\n-\n-        qDebug() << \"PaymentServer::initNetManager: Using SOCKS5 proxy\" << proxy.hostName() << \":\" << proxy.port();\n-    }\n-    else\n-        qDebug() << \"PaymentServer::initNetManager: No active proxy server found.\";\n-\n-    connect(netManager, SIGNAL(finished(QNetworkReply*)),\n-            this, SLOT(netRequestFinished(QNetworkReply*)));\n-    connect(netManager, SIGNAL(sslErrors(QNetworkReply*, const QList<QSslError> &)),\n-            this, SLOT(reportSslErrors(QNetworkReply*, const QList<QSslError> &)));\n-}\n-\n void PaymentServer::uiReady()\n {\n+#ifdef ENABLE_BIP70\n     initNetManager();\n+#endif\n \n     saveURIs = false;\n     for (const QString& s : savedPaymentRequests)\n@@ -405,6 +294,10 @@ void PaymentServer::handleURIOrFile(const QString& s)\n         QUrlQuery uri((QUrl(s)));\n         if (uri.hasQueryItem(\"r\")) // payment request URI\n         {\n+#ifdef ENABLE_BIP70\n+            Q_EMIT message(tr(\"URI handling\"),\n+                tr(\"You are using a BIP70 URL which will be unsupported in the future.\"),\n+                CClientUIInterface::ICON_WARNING);\n             QByteArray temp;\n             temp.append(uri.queryItemValue(\"r\"));\n             QString decoded = QUrl::fromPercentEncoding(temp);\n@@ -422,7 +315,11 @@ void PaymentServer::handleURIOrFile(const QString& s)\n                     tr(\"Payment request fetch URL is invalid: %1\").arg(fetchUrl.toString()),\n                     CClientUIInterface::ICON_WARNING);\n             }\n-\n+#else\n+            Q_EMIT message(tr(\"URI handling\"),\n+                tr(\"Cannot process payment request because BIP70 support was not compiled in.\"),\n+                CClientUIInterface::ICON_WARNING);\n+#endif\n             return;\n         }\n         else // normal URI\n@@ -446,6 +343,7 @@ void PaymentServer::handleURIOrFile(const QString& s)\n         }\n     }\n \n+#ifdef ENABLE_BIP70\n     if (QFile::exists(s)) // payment request file\n     {\n         PaymentRequestPlus request;\n@@ -461,6 +359,7 @@ void PaymentServer::handleURIOrFile(const QString& s)\n \n         return;\n     }\n+#endif\n }\n \n void PaymentServer::handleURIConnection()\n@@ -470,8 +369,7 @@ void PaymentServer::handleURIConnection()\n     while (clientConnection->bytesAvailable() < (int)sizeof(quint32))\n         clientConnection->waitForReadyRead();\n \n-    connect(clientConnection, SIGNAL(disconnected()),\n-            clientConnection, SLOT(deleteLater()));\n+    connect(clientConnection, &QLocalSocket::disconnected, clientConnection, &QLocalSocket::deleteLater);\n \n     QDataStream in(clientConnection);\n     in.setVersion(QDataStream::Qt_4_0);\n@@ -484,6 +382,140 @@ void PaymentServer::handleURIConnection()\n     handleURIOrFile(msg);\n }\n \n+void PaymentServer::setOptionsModel(OptionsModel *_optionsModel)\n+{\n+    this->optionsModel = _optionsModel;\n+}\n+\n+#ifdef ENABLE_BIP70\n+struct X509StoreDeleter {\n+      void operator()(X509_STORE* b) {\n+          X509_STORE_free(b);\n+      }\n+};\n+\n+struct X509Deleter {\n+      void operator()(X509* b) { X509_free(b); }\n+};\n+\n+namespace // Anon namespace\n+{\n+    std::unique_ptr<X509_STORE, X509StoreDeleter> certStore;\n+}\n+\n+static void ReportInvalidCertificate(const QSslCertificate& cert)\n+{\n+    qDebug() << QString(\"%1: Payment server found an invalid certificate: \").arg(__func__) << cert.serialNumber() << cert.subjectInfo(QSslCertificate::CommonName) << cert.subjectInfo(QSslCertificate::DistinguishedNameQualifier) << cert.subjectInfo(QSslCertificate::OrganizationalUnitName);\n+}\n+\n+//\n+// Load OpenSSL's list of root certificate authorities\n+//\n+void PaymentServer::LoadRootCAs(X509_STORE* _store)\n+{\n+    // Unit tests mostly use this, to pass in fake root CAs:\n+    if (_store)\n+    {\n+        certStore.reset(_store);\n+        return;\n+    }\n+\n+    // Normal execution, use either -rootcertificates or system certs:\n+    certStore.reset(X509_STORE_new());\n+\n+    // Note: use \"-system-\" default here so that users can pass -rootcertificates=\"\"\n+    // and get 'I don't like X.509 certificates, don't trust anybody' behavior:\n+    QString certFile = QString::fromStdString(gArgs.GetArg(\"-rootcertificates\", \"-system-\"));\n+\n+    // Empty store\n+    if (certFile.isEmpty()) {\n+        qDebug() << QString(\"PaymentServer::%1: Payment request authentication via X.509 certificates disabled.\").arg(__func__);\n+        return;\n+    }\n+\n+    QList<QSslCertificate> certList;\n+\n+    if (certFile != \"-system-\") {\n+            qDebug() << QString(\"PaymentServer::%1: Using \\\"%2\\\" as trusted root certificate.\").arg(__func__).arg(certFile);\n+\n+        certList = QSslCertificate::fromPath(certFile);\n+        // Use those certificates when fetching payment requests, too:\n+        QSslSocket::setDefaultCaCertificates(certList);\n+    } else\n+        certList = QSslSocket::systemCaCertificates();\n+\n+    int nRootCerts = 0;\n+    const QDateTime currentTime = QDateTime::currentDateTime();\n+\n+    for (const QSslCertificate& cert : certList) {\n+        // Don't log NULL certificates\n+        if (cert.isNull())\n+            continue;\n+\n+        // Not yet active/valid, or expired certificate\n+        if (currentTime < cert.effectiveDate() || currentTime > cert.expiryDate()) {\n+            ReportInvalidCertificate(cert);\n+            continue;\n+        }\n+\n+        // Blacklisted certificate\n+        if (cert.isBlacklisted()) {\n+            ReportInvalidCertificate(cert);\n+            continue;\n+        }\n+\n+        QByteArray certData = cert.toDer();\n+        const unsigned char *data = (const unsigned char *)certData.data();\n+\n+        std::unique_ptr<X509, X509Deleter> x509(d2i_X509(0, &data, certData.size()));\n+        if (x509 && X509_STORE_add_cert(certStore.get(), x509.get()))\n+        {\n+            // Note: X509_STORE increases the reference count to the X509 object,\n+            // we still have to release our reference to it.\n+            ++nRootCerts;\n+        }\n+        else\n+        {\n+            ReportInvalidCertificate(cert);\n+            continue;\n+        }\n+    }\n+    qWarning() << \"PaymentServer::LoadRootCAs: Loaded \" << nRootCerts << \" root certificates\";\n+\n+    // Project for another day:\n+    // Fetch certificate revocation lists, and add them to certStore.\n+    // Issues to consider:\n+    //   performance (start a thread to fetch in background?)\n+    //   privacy (fetch through tor/proxy so IP address isn't revealed)\n+    //   would it be easier to just use a compiled-in blacklist?\n+    //    or use Qt's blacklist?\n+    //   \"certificate stapling\" with server-side caching is more efficient\n+}\n+\n+void PaymentServer::initNetManager()\n+{\n+    if (!optionsModel)\n+        return;\n+    delete netManager;\n+\n+    // netManager is used to fetch paymentrequests given in bitcoin: URIs\n+    netManager = new QNetworkAccessManager(this);\n+\n+    QNetworkProxy proxy;\n+\n+    // Query active SOCKS5 proxy\n+    if (optionsModel->getProxySettings(proxy)) {\n+        netManager->setProxy(proxy);\n+\n+        qDebug() << \"PaymentServer::initNetManager: Using SOCKS5 proxy\" << proxy.hostName() << \":\" << proxy.port();\n+    }\n+    else\n+        qDebug() << \"PaymentServer::initNetManager: No active proxy server found.\";\n+\n+    connect(netManager, &QNetworkAccessManager::finished, this, &PaymentServer::netRequestFinished);\n+    connect(netManager, &QNetworkAccessManager::sslErrors, this, &PaymentServer::reportSslErrors);\n+}\n+\n //\n // Warning: readPaymentRequestFromFile() is used in ipcSendCommandLine()\n // so don't use \"Q_EMIT message()\", but \"QMessageBox::\"!\n@@ -734,11 +766,6 @@ void PaymentServer::reportSslErrors(QNetworkReply* reply, const QList<QSslError>\n     Q_EMIT message(tr(\"Network request error\"), errString, CClientUIInterface::MSG_ERROR);\n }\n \n-void PaymentServer::setOptionsModel(OptionsModel *_optionsModel)\n-{\n-    this->optionsModel = _optionsModel;\n-}\n-\n void PaymentServer::handlePaymentACK(const QString& paymentACKMsg)\n {\n     // currently we don't further process or store the paymentACK message\n@@ -797,3 +824,4 @@ X509_STORE* PaymentServer::getCertStore()\n {\n     return certStore.get();\n }\n+#endif"
      },
      {
        "sha": "30b5bc3b6d6d74fc9fd9486d58abf8172e8bcd66",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 29,
        "deletions": 15,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -32,7 +32,13 @@\n // sends them to the server.\n //\n \n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#ifdef ENABLE_BIP70\n #include <qt/paymentrequestplus.h>\n+#endif\n #include <qt/walletmodel.h>\n \n #include <QObject>\n@@ -73,6 +79,10 @@ class PaymentServer : public QObject\n     explicit PaymentServer(QObject* parent, bool startLocalServer = true);\n     ~PaymentServer();\n \n+    // OptionsModel is used for getting proxy settings and display unit\n+    void setOptionsModel(OptionsModel *optionsModel);\n+\n+#ifdef ENABLE_BIP70\n     // Load root certificate authorities. Pass nullptr (default)\n     // to read from the file specified in the -rootcertificates setting,\n     // or, if that's not set, to use the system default root certificates.\n@@ -83,9 +93,6 @@ class PaymentServer : public QObject\n     // Return certificate store\n     static X509_STORE* getCertStore();\n \n-    // OptionsModel is used for getting proxy settings and display unit\n-    void setOptionsModel(OptionsModel *optionsModel);\n-\n     // Verify that the payment request network matches the client network\n     static bool verifyNetwork(interfaces::Node& node, const payments::PaymentDetails& requestDetails);\n     // Verify if the payment request is expired\n@@ -94,53 +101,60 @@ class PaymentServer : public QObject\n     static bool verifySize(qint64 requestSize);\n     // Verify the payment request amount is valid\n     static bool verifyAmount(const CAmount& requestAmount);\n+#endif\n \n Q_SIGNALS:\n     // Fired when a valid payment request is received\n     void receivedPaymentRequest(SendCoinsRecipient);\n \n-    // Fired when a valid PaymentACK is received\n-    void receivedPaymentACK(const QString &paymentACKMsg);\n-\n     // Fired when a message should be reported to the user\n     void message(const QString &title, const QString &message, unsigned int style);\n \n+#ifdef ENABLE_BIP70\n+    // Fired when a valid PaymentACK is received\n+    void receivedPaymentACK(const QString &paymentACKMsg);\n+#endif\n+\n public Q_SLOTS:\n     // Signal this when the main window's UI is ready\n     // to display payment requests to the user\n     void uiReady();\n \n-    // Submit Payment message to a merchant, get back PaymentACK:\n-    void fetchPaymentACK(WalletModel* walletModel, const SendCoinsRecipient& recipient, QByteArray transaction);\n-\n     // Handle an incoming URI, URI with local file scheme or file\n     void handleURIOrFile(const QString& s);\n \n+#ifdef ENABLE_BIP70\n+    // Submit Payment message to a merchant, get back PaymentACK:\n+    void fetchPaymentACK(WalletModel* walletModel, const SendCoinsRecipient& recipient, QByteArray transaction);\n+#endif\n+\n private Q_SLOTS:\n     void handleURIConnection();\n+#ifdef ENABLE_BIP70\n     void netRequestFinished(QNetworkReply*);\n     void reportSslErrors(QNetworkReply*, const QList<QSslError> &);\n     void handlePaymentACK(const QString& paymentACKMsg);\n+#endif\n \n protected:\n     // Constructor registers this on the parent QApplication to\n     // receive QEvent::FileOpen and QEvent:Drop events\n     bool eventFilter(QObject *object, QEvent *event);\n \n private:\n+    bool saveURIs;                      // true during startup\n+    QLocalServer* uriServer;\n+    OptionsModel *optionsModel;\n+\n+#ifdef ENABLE_BIP70\n     static bool readPaymentRequestFromFile(const QString& filename, PaymentRequestPlus& request);\n     bool processPaymentRequest(const PaymentRequestPlus& request, SendCoinsRecipient& recipient);\n     void fetchRequest(const QUrl& url);\n \n     // Setup networking\n     void initNetManager();\n-\n-    bool saveURIs;                      // true during startup\n-    QLocalServer* uriServer;\n-\n     QNetworkAccessManager* netManager;  // Used to fetch payment requests\n-\n-    OptionsModel *optionsModel;\n+#endif\n };\n \n #endif // BITCOIN_QT_PAYMENTSERVER_H"
      },
      {
        "sha": "8cfedca57fc7df927f93986dff86703e4398374e",
        "filename": "src/qt/peertablemodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/peertablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/peertablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -65,7 +65,7 @@ class PeerTablePriv\n             interfaces::Node::NodesStats nodes_stats;\n             node.getNodesStats(nodes_stats);\n             cachedNodeStats.reserve(nodes_stats.size());\n-            for (auto& node_stats : nodes_stats)\n+            for (const auto& node_stats : nodes_stats)\n             {\n                 CNodeCombinedStats stats;\n                 stats.nodeStats = std::get<0>(node_stats);\n@@ -113,7 +113,7 @@ PeerTableModel::PeerTableModel(interfaces::Node& node, ClientModel *parent) :\n \n     // set up timer for auto refresh\n     timer = new QTimer(this);\n-    connect(timer, SIGNAL(timeout()), SLOT(refresh()));\n+    connect(timer, &QTimer::timeout, this, &PeerTableModel::refresh);\n     timer->setInterval(MODEL_UPDATE_DELAY);\n \n     // load initial data"
      },
      {
        "sha": "85c5a58a843c381802e14ae3d90bb77c14d32feb",
        "filename": "src/qt/qvalidatedlineedit.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/qvalidatedlineedit.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/qvalidatedlineedit.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qvalidatedlineedit.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -12,7 +12,7 @@ QValidatedLineEdit::QValidatedLineEdit(QWidget *parent) :\n     valid(true),\n     checkValidator(0)\n {\n-    connect(this, SIGNAL(textChanged(QString)), this, SLOT(markValid()));\n+    connect(this, &QValidatedLineEdit::textChanged, this, &QValidatedLineEdit::markValid);\n }\n \n void QValidatedLineEdit::setValid(bool _valid)"
      },
      {
        "sha": "76f94ecf85debd3eea701324ed81566fc1fe4b47",
        "filename": "src/qt/qvaluecombobox.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/qvaluecombobox.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/qvaluecombobox.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qvaluecombobox.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -7,7 +7,7 @@\n QValueComboBox::QValueComboBox(QWidget *parent) :\n         QComboBox(parent), role(Qt::UserRole)\n {\n-    connect(this, SIGNAL(currentIndexChanged(int)), this, SLOT(handleSelectionChanged(int)));\n+    connect(this, static_cast<void (QComboBox::*)(int)>(&QComboBox::currentIndexChanged), this, &QValueComboBox::handleSelectionChanged);\n }\n \n QVariant QValueComboBox::value() const"
      },
      {
        "sha": "a7cc5da19e12b95215e79ff33ef94a8026b0aba0",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -57,13 +57,13 @@ ReceiveCoinsDialog::ReceiveCoinsDialog(const PlatformStyle *_platformStyle, QWid\n     contextMenu->addAction(copyAmountAction);\n \n     // context menu signals\n-    connect(ui->recentRequestsView, SIGNAL(customContextMenuRequested(QPoint)), this, SLOT(showMenu(QPoint)));\n-    connect(copyURIAction, SIGNAL(triggered()), this, SLOT(copyURI()));\n-    connect(copyLabelAction, SIGNAL(triggered()), this, SLOT(copyLabel()));\n-    connect(copyMessageAction, SIGNAL(triggered()), this, SLOT(copyMessage()));\n-    connect(copyAmountAction, SIGNAL(triggered()), this, SLOT(copyAmount()));\n+    connect(ui->recentRequestsView, &QWidget::customContextMenuRequested, this, &ReceiveCoinsDialog::showMenu);\n+    connect(copyURIAction, &QAction::triggered, this, &ReceiveCoinsDialog::copyURI);\n+    connect(copyLabelAction, &QAction::triggered, this, &ReceiveCoinsDialog::copyLabel);\n+    connect(copyMessageAction, &QAction::triggered, this, &ReceiveCoinsDialog::copyMessage);\n+    connect(copyAmountAction, &QAction::triggered, this, &ReceiveCoinsDialog::copyAmount);\n \n-    connect(ui->clearButton, SIGNAL(clicked()), this, SLOT(clear()));\n+    connect(ui->clearButton, &QPushButton::clicked, this, &ReceiveCoinsDialog::clear);\n }\n \n void ReceiveCoinsDialog::setModel(WalletModel *_model)\n@@ -73,7 +73,7 @@ void ReceiveCoinsDialog::setModel(WalletModel *_model)\n     if(_model && _model->getOptionsModel())\n     {\n         _model->getRecentRequestsTableModel()->sort(RecentRequestsTableModel::Date, Qt::DescendingOrder);\n-        connect(_model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n+        connect(_model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &ReceiveCoinsDialog::updateDisplayUnit);\n         updateDisplayUnit();\n \n         QTableView* tableView = ui->recentRequestsView;\n@@ -89,8 +89,8 @@ void ReceiveCoinsDialog::setModel(WalletModel *_model)\n         tableView->setColumnWidth(RecentRequestsTableModel::Amount, AMOUNT_MINIMUM_COLUMN_WIDTH);\n \n         connect(tableView->selectionModel(),\n-            SIGNAL(selectionChanged(QItemSelection, QItemSelection)), this,\n-            SLOT(recentRequestsView_selectionChanged(QItemSelection, QItemSelection)));\n+            &QItemSelectionModel::selectionChanged, this,\n+            &ReceiveCoinsDialog::recentRequestsView_selectionChanged);\n         // Last 2 columns are set by the columnResizingFixer, when the table geometry is ready.\n         columnResizingFixer = new GUIUtil::TableViewLastColumnResizingFixer(tableView, AMOUNT_MINIMUM_COLUMN_WIDTH, DATE_COLUMN_WIDTH, this);\n "
      },
      {
        "sha": "c561d948beb56f73e79434ec258161fad358f9b2",
        "filename": "src/qt/receiverequestdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/receiverequestdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/receiverequestdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -30,10 +30,10 @@ QRImageWidget::QRImageWidget(QWidget *parent):\n {\n     contextMenu = new QMenu(this);\n     QAction *saveImageAction = new QAction(tr(\"&Save Image...\"), this);\n-    connect(saveImageAction, SIGNAL(triggered()), this, SLOT(saveImage()));\n+    connect(saveImageAction, &QAction::triggered, this, &QRImageWidget::saveImage);\n     contextMenu->addAction(saveImageAction);\n     QAction *copyImageAction = new QAction(tr(\"&Copy Image\"), this);\n-    connect(copyImageAction, SIGNAL(triggered()), this, SLOT(copyImage()));\n+    connect(copyImageAction, &QAction::triggered, this, &QRImageWidget::copyImage);\n     contextMenu->addAction(copyImageAction);\n }\n \n@@ -97,7 +97,7 @@ ReceiveRequestDialog::ReceiveRequestDialog(QWidget *parent) :\n     ui->lblQRCode->setVisible(false);\n #endif\n \n-    connect(ui->btnSaveAs, SIGNAL(clicked()), ui->lblQRCode, SLOT(saveImage()));\n+    connect(ui->btnSaveAs, &QPushButton::clicked, ui->lblQRCode, &QRImageWidget::saveImage);\n }\n \n ReceiveRequestDialog::~ReceiveRequestDialog()\n@@ -110,7 +110,7 @@ void ReceiveRequestDialog::setModel(WalletModel *_model)\n     this->model = _model;\n \n     if (_model)\n-        connect(_model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(update()));\n+        connect(_model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &ReceiveRequestDialog::update);\n \n     // update the display unit if necessary\n     update();"
      },
      {
        "sha": "82ab48ac20c144f5fd1b26b5b590a6fb1ba73c3c",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -26,7 +26,7 @@ RecentRequestsTableModel::RecentRequestsTableModel(WalletModel *parent) :\n     /* These columns must match the indices in the ColumnIndex enumeration */\n     columns << tr(\"Date\") << tr(\"Label\") << tr(\"Message\") << getAmountTitle();\n \n-    connect(walletModel->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n+    connect(walletModel->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &RecentRequestsTableModel::updateDisplayUnit);\n }\n \n RecentRequestsTableModel::~RecentRequestsTableModel()"
      },
      {
        "sha": "606f1d2910ef2dc066264a371ef44269e5beb9b6",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 37,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -18,7 +18,7 @@\n #include <netbase.h>\n #include <rpc/server.h>\n #include <rpc/client.h>\n-#include <util.h>\n+#include <util/system.h>\n \n #include <openssl/crypto.h>\n \n@@ -82,7 +82,7 @@ class RPCExecutor : public QObject\n {\n     Q_OBJECT\n public:\n-    RPCExecutor(interfaces::Node& node) : m_node(node) {}\n+    explicit RPCExecutor(interfaces::Node& node) : m_node(node) {}\n \n public Q_SLOTS:\n     void request(const QString &command, const QString &walletID);\n@@ -101,27 +101,25 @@ class QtRPCTimerBase: public QObject, public RPCTimerBase\n {\n     Q_OBJECT\n public:\n-    QtRPCTimerBase(std::function<void(void)>& _func, int64_t millis):\n+    QtRPCTimerBase(std::function<void()>& _func, int64_t millis):\n         func(_func)\n     {\n         timer.setSingleShot(true);\n-        connect(&timer, SIGNAL(timeout()), this, SLOT(timeout()));\n+        connect(&timer, &QTimer::timeout, [this]{ func(); });\n         timer.start(millis);\n     }\n     ~QtRPCTimerBase() {}\n-private Q_SLOTS:\n-    void timeout() { func(); }\n private:\n     QTimer timer;\n-    std::function<void(void)> func;\n+    std::function<void()> func;\n };\n \n class QtRPCTimerInterface: public RPCTimerInterface\n {\n public:\n     ~QtRPCTimerInterface() {}\n     const char *Name() { return \"Qt\"; }\n-    RPCTimerBase* NewTimer(std::function<void(void)>& func, int64_t millis)\n+    RPCTimerBase* NewTimer(std::function<void()>& func, int64_t millis)\n     {\n         return new QtRPCTimerBase(func, millis);\n     }\n@@ -144,7 +142,7 @@ class QtRPCTimerInterface: public RPCTimerInterface\n  *   - Within single quotes, no escaping is possible and no special interpretation takes place\n  *\n  * @param[in]    node    optional node to execute command on\n- * @param[out]   result      stringified Result from the executed command(chain)\n+ * @param[out]   strResult   stringified result from the executed command(chain)\n  * @param[in]    strCommand  Command line to split\n  * @param[in]    fExecute    set true if you want the command to be executed\n  * @param[out]   pstrFilteredOut  Command line, filtered to remove any sensitive data\n@@ -461,6 +459,9 @@ RPCConsole::RPCConsole(interfaces::Node& node, const PlatformStyle *_platformSty\n         move(QApplication::desktop()->availableGeometry().center() - frameGeometry().center());\n     }\n \n+    QChar nonbreaking_hyphen(8209);\n+    ui->dataDir->setToolTip(ui->dataDir->toolTip().arg(QString(nonbreaking_hyphen) + \"datadir\"));\n+    ui->blocksDir->setToolTip(ui->blocksDir->toolTip().arg(QString(nonbreaking_hyphen) + \"blocksdir\"));\n     ui->openDebugLogfileButton->setToolTip(ui->openDebugLogfileButton->toolTip().arg(tr(PACKAGE_NAME)));\n \n     if (platformStyle->getImagesOnButtons()) {\n@@ -474,10 +475,10 @@ RPCConsole::RPCConsole(interfaces::Node& node, const PlatformStyle *_platformSty\n     ui->lineEdit->installEventFilter(this);\n     ui->messagesWidget->installEventFilter(this);\n \n-    connect(ui->clearButton, SIGNAL(clicked()), this, SLOT(clear()));\n-    connect(ui->fontBiggerButton, SIGNAL(clicked()), this, SLOT(fontBigger()));\n-    connect(ui->fontSmallerButton, SIGNAL(clicked()), this, SLOT(fontSmaller()));\n-    connect(ui->btnClearTrafficGraph, SIGNAL(clicked()), ui->trafficGraph, SLOT(clear()));\n+    connect(ui->clearButton, &QPushButton::clicked, this, &RPCConsole::clear);\n+    connect(ui->fontBiggerButton, &QPushButton::clicked, this, &RPCConsole::fontBigger);\n+    connect(ui->fontSmallerButton, &QPushButton::clicked, this, &RPCConsole::fontSmaller);\n+    connect(ui->btnClearTrafficGraph, &QPushButton::clicked, ui->trafficGraph, &TrafficGraphWidget::clear);\n \n     // disable the wallet selector by default\n     ui->WalletSelector->setVisible(false);\n@@ -538,6 +539,7 @@ bool RPCConsole::eventFilter(QObject* obj, QEvent *event)\n             // forward these events to lineEdit\n             if(obj == autoCompleter->popup()) {\n                 QApplication::postEvent(ui->lineEdit, new QKeyEvent(*keyevt));\n+                autoCompleter->popup()->hide();\n                 return true;\n             }\n             break;\n@@ -565,19 +567,19 @@ void RPCConsole::setClientModel(ClientModel *model)\n     if (model && clientModel->getPeerTableModel() && clientModel->getBanTableModel()) {\n         // Keep up to date with client\n         setNumConnections(model->getNumConnections());\n-        connect(model, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n+        connect(model, &ClientModel::numConnectionsChanged, this, &RPCConsole::setNumConnections);\n \n         interfaces::Node& node = clientModel->node();\n         setNumBlocks(node.getNumBlocks(), QDateTime::fromTime_t(node.getLastBlockTime()), node.getVerificationProgress(), false);\n-        connect(model, SIGNAL(numBlocksChanged(int,QDateTime,double,bool)), this, SLOT(setNumBlocks(int,QDateTime,double,bool)));\n+        connect(model, &ClientModel::numBlocksChanged, this, &RPCConsole::setNumBlocks);\n \n         updateNetworkState();\n-        connect(model, SIGNAL(networkActiveChanged(bool)), this, SLOT(setNetworkActive(bool)));\n+        connect(model, &ClientModel::networkActiveChanged, this, &RPCConsole::setNetworkActive);\n \n         updateTrafficStats(node.getTotalBytesRecv(), node.getTotalBytesSent());\n-        connect(model, SIGNAL(bytesChanged(quint64,quint64)), this, SLOT(updateTrafficStats(quint64, quint64)));\n+        connect(model, &ClientModel::bytesChanged, this, &RPCConsole::updateTrafficStats);\n \n-        connect(model, SIGNAL(mempoolSizeChanged(long,size_t)), this, SLOT(setMempoolSize(long,size_t)));\n+        connect(model, &ClientModel::mempoolSizeChanged, this, &RPCConsole::setMempoolSize);\n \n         // set up peer table\n         ui->peerWidget->setModel(model->getPeerTableModel());\n@@ -614,23 +616,22 @@ void RPCConsole::setClientModel(ClientModel *model)\n         signalMapper->setMapping(banAction24h, 60*60*24);\n         signalMapper->setMapping(banAction7d, 60*60*24*7);\n         signalMapper->setMapping(banAction365d, 60*60*24*365);\n-        connect(banAction1h, SIGNAL(triggered()), signalMapper, SLOT(map()));\n-        connect(banAction24h, SIGNAL(triggered()), signalMapper, SLOT(map()));\n-        connect(banAction7d, SIGNAL(triggered()), signalMapper, SLOT(map()));\n-        connect(banAction365d, SIGNAL(triggered()), signalMapper, SLOT(map()));\n-        connect(signalMapper, SIGNAL(mapped(int)), this, SLOT(banSelectedNode(int)));\n+        connect(banAction1h, &QAction::triggered, signalMapper, static_cast<void (QSignalMapper::*)()>(&QSignalMapper::map));\n+        connect(banAction24h, &QAction::triggered, signalMapper, static_cast<void (QSignalMapper::*)()>(&QSignalMapper::map));\n+        connect(banAction7d, &QAction::triggered, signalMapper, static_cast<void (QSignalMapper::*)()>(&QSignalMapper::map));\n+        connect(banAction365d, &QAction::triggered, signalMapper, static_cast<void (QSignalMapper::*)()>(&QSignalMapper::map));\n+        connect(signalMapper, static_cast<void (QSignalMapper::*)(int)>(&QSignalMapper::mapped), this, &RPCConsole::banSelectedNode);\n \n         // peer table context menu signals\n-        connect(ui->peerWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showPeersTableContextMenu(const QPoint&)));\n-        connect(disconnectAction, SIGNAL(triggered()), this, SLOT(disconnectSelectedNode()));\n+        connect(ui->peerWidget, &QTableView::customContextMenuRequested, this, &RPCConsole::showPeersTableContextMenu);\n+        connect(disconnectAction, &QAction::triggered, this, &RPCConsole::disconnectSelectedNode);\n \n         // peer table signal handling - update peer details when selecting new node\n-        connect(ui->peerWidget->selectionModel(), SIGNAL(selectionChanged(const QItemSelection &, const QItemSelection &)),\n-            this, SLOT(peerSelected(const QItemSelection &, const QItemSelection &)));\n+        connect(ui->peerWidget->selectionModel(), &QItemSelectionModel::selectionChanged, this, &RPCConsole::peerSelected);\n         // peer table signal handling - update peer details when new nodes are added to the model\n-        connect(model->getPeerTableModel(), SIGNAL(layoutChanged()), this, SLOT(peerLayoutChanged()));\n+        connect(model->getPeerTableModel(), &PeerTableModel::layoutChanged, this, &RPCConsole::peerLayoutChanged);\n         // peer table signal handling - cache selected node ids\n-        connect(model->getPeerTableModel(), SIGNAL(layoutAboutToBeChanged()), this, SLOT(peerLayoutAboutToChange()));\n+        connect(model->getPeerTableModel(), &PeerTableModel::layoutAboutToBeChanged, this, &RPCConsole::peerLayoutAboutToChange);\n \n         // set up ban table\n         ui->banlistWidget->setModel(model->getBanTableModel());\n@@ -651,19 +652,20 @@ void RPCConsole::setClientModel(ClientModel *model)\n         banTableContextMenu->addAction(unbanAction);\n \n         // ban table context menu signals\n-        connect(ui->banlistWidget, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(showBanTableContextMenu(const QPoint&)));\n-        connect(unbanAction, SIGNAL(triggered()), this, SLOT(unbanSelectedNode()));\n+        connect(ui->banlistWidget, &QTableView::customContextMenuRequested, this, &RPCConsole::showBanTableContextMenu);\n+        connect(unbanAction, &QAction::triggered, this, &RPCConsole::unbanSelectedNode);\n \n         // ban table signal handling - clear peer details when clicking a peer in the ban table\n-        connect(ui->banlistWidget, SIGNAL(clicked(const QModelIndex&)), this, SLOT(clearSelectedNode()));\n+        connect(ui->banlistWidget, &QTableView::clicked, this, &RPCConsole::clearSelectedNode);\n         // ban table signal handling - ensure ban table is shown or hidden (if empty)\n-        connect(model->getBanTableModel(), SIGNAL(layoutChanged()), this, SLOT(showOrHideBanTableIfRequired()));\n+        connect(model->getBanTableModel(), &BanTableModel::layoutChanged, this, &RPCConsole::showOrHideBanTableIfRequired);\n         showOrHideBanTableIfRequired();\n \n         // Provide initial values\n         ui->clientVersion->setText(model->formatFullVersion());\n         ui->clientUserAgent->setText(model->formatSubVersion());\n         ui->dataDir->setText(model->dataDir());\n+        ui->blocksDir->setText(model->blocksDir());\n         ui->startupTime->setText(model->formatClientStartupTime());\n         ui->networkName->setText(QString::fromStdString(Params().NetworkIDString()));\n \n@@ -972,15 +974,16 @@ void RPCConsole::startExecutor()\n     executor->moveToThread(&thread);\n \n     // Replies from executor object must go to this object\n-    connect(executor, SIGNAL(reply(int,QString)), this, SLOT(message(int,QString)));\n+    connect(executor, &RPCExecutor::reply, this, static_cast<void (RPCConsole::*)(int, const QString&)>(&RPCConsole::message));\n+\n     // Requests from this object must go to executor\n-    connect(this, SIGNAL(cmdRequest(QString, QString)), executor, SLOT(request(QString, QString)));\n+    connect(this, &RPCConsole::cmdRequest, executor, &RPCExecutor::request);\n \n     // On stopExecutor signal\n     // - quit the Qt event loop in the execution thread\n-    connect(this, SIGNAL(stopExecutor()), &thread, SLOT(quit()));\n+    connect(this, &RPCConsole::stopExecutor, &thread, &QThread::quit);\n     // - queue executor for deletion (in execution thread)\n-    connect(&thread, SIGNAL(finished()), executor, SLOT(deleteLater()), Qt::DirectConnection);\n+    connect(&thread, &QThread::finished, executor, &RPCExecutor::deleteLater, Qt::DirectConnection);\n \n     // Default implementation of QThread::run() simply spins up an event loop in the thread,\n     // which is what we want."
      },
      {
        "sha": "db77043951db841d864bddb826030060d6d16e86",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -96,7 +96,8 @@ public Q_SLOTS:\n     void fontSmaller();\n     void setFontSize(int newSize);\n     /** Append the message to the message widget */\n-    void message(int category, const QString &message, bool html = false);\n+    void message(int category, const QString &msg) { message(category, msg, false); }\n+    void message(int category, const QString &message, bool html);\n     /** Set number of connections shown in the UI */\n     void setNumConnections(int count);\n     /** Set network state shown in the UI */"
      },
      {
        "sha": "65db0280b70e7bceda3d17399d3458bd632b4a32",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 48,
        "deletions": 57,
        "changes": 105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -2,6 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n #include <qt/sendcoinsdialog.h>\n #include <qt/forms/ui_sendcoinsdialog.h>\n \n@@ -72,13 +76,13 @@ SendCoinsDialog::SendCoinsDialog(const PlatformStyle *_platformStyle, QWidget *p\n \n     addEntry();\n \n-    connect(ui->addButton, SIGNAL(clicked()), this, SLOT(addEntry()));\n-    connect(ui->clearButton, SIGNAL(clicked()), this, SLOT(clear()));\n+    connect(ui->addButton, &QPushButton::clicked, this, &SendCoinsDialog::addEntry);\n+    connect(ui->clearButton, &QPushButton::clicked, this, &SendCoinsDialog::clear);\n \n     // Coin Control\n-    connect(ui->pushButtonCoinControl, SIGNAL(clicked()), this, SLOT(coinControlButtonClicked()));\n-    connect(ui->checkBoxCoinControlChange, SIGNAL(stateChanged(int)), this, SLOT(coinControlChangeChecked(int)));\n-    connect(ui->lineEditCoinControlChange, SIGNAL(textEdited(const QString &)), this, SLOT(coinControlChangeEdited(const QString &)));\n+    connect(ui->pushButtonCoinControl, &QPushButton::clicked, this, &SendCoinsDialog::coinControlButtonClicked);\n+    connect(ui->checkBoxCoinControlChange, &QCheckBox::stateChanged, this, &SendCoinsDialog::coinControlChangeChecked);\n+    connect(ui->lineEditCoinControlChange, &QValidatedLineEdit::textEdited, this, &SendCoinsDialog::coinControlChangeEdited);\n \n     // Coin Control: clipboard actions\n     QAction *clipboardQuantityAction = new QAction(tr(\"Copy quantity\"), this);\n@@ -88,13 +92,13 @@ SendCoinsDialog::SendCoinsDialog(const PlatformStyle *_platformStyle, QWidget *p\n     QAction *clipboardBytesAction = new QAction(tr(\"Copy bytes\"), this);\n     QAction *clipboardLowOutputAction = new QAction(tr(\"Copy dust\"), this);\n     QAction *clipboardChangeAction = new QAction(tr(\"Copy change\"), this);\n-    connect(clipboardQuantityAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardQuantity()));\n-    connect(clipboardAmountAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardAmount()));\n-    connect(clipboardFeeAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardFee()));\n-    connect(clipboardAfterFeeAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardAfterFee()));\n-    connect(clipboardBytesAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardBytes()));\n-    connect(clipboardLowOutputAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardLowOutput()));\n-    connect(clipboardChangeAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardChange()));\n+    connect(clipboardQuantityAction, &QAction::triggered, this, &SendCoinsDialog::coinControlClipboardQuantity);\n+    connect(clipboardAmountAction, &QAction::triggered, this, &SendCoinsDialog::coinControlClipboardAmount);\n+    connect(clipboardFeeAction, &QAction::triggered, this, &SendCoinsDialog::coinControlClipboardFee);\n+    connect(clipboardAfterFeeAction, &QAction::triggered, this, &SendCoinsDialog::coinControlClipboardAfterFee);\n+    connect(clipboardBytesAction, &QAction::triggered, this, &SendCoinsDialog::coinControlClipboardBytes);\n+    connect(clipboardLowOutputAction, &QAction::triggered, this, &SendCoinsDialog::coinControlClipboardLowOutput);\n+    connect(clipboardChangeAction, &QAction::triggered, this, &SendCoinsDialog::coinControlClipboardChange);\n     ui->labelCoinControlQuantity->addAction(clipboardQuantityAction);\n     ui->labelCoinControlAmount->addAction(clipboardAmountAction);\n     ui->labelCoinControlFee->addAction(clipboardFeeAction);\n@@ -115,13 +119,11 @@ SendCoinsDialog::SendCoinsDialog(const PlatformStyle *_platformStyle, QWidget *p\n         settings.setValue(\"nSmartFeeSliderPosition\", 0);\n     if (!settings.contains(\"nTransactionFee\"))\n         settings.setValue(\"nTransactionFee\", (qint64)DEFAULT_PAY_TX_FEE);\n-    if (!settings.contains(\"fPayOnlyMinFee\"))\n-        settings.setValue(\"fPayOnlyMinFee\", false);\n     ui->groupFee->setId(ui->radioSmartFee, 0);\n     ui->groupFee->setId(ui->radioCustomFee, 1);\n     ui->groupFee->button((int)std::max(0, std::min(1, settings.value(\"nFeeRadio\").toInt())))->setChecked(true);\n+    ui->customFee->SetAllowEmpty(false);\n     ui->customFee->setValue(settings.value(\"nTransactionFee\").toLongLong());\n-    ui->checkBoxMinimumFee->setChecked(settings.value(\"fPayOnlyMinFee\").toBool());\n     minimizeFeeSection(settings.value(\"fFeeSectionMinimized\").toBool());\n }\n \n@@ -130,7 +132,7 @@ void SendCoinsDialog::setClientModel(ClientModel *_clientModel)\n     this->clientModel = _clientModel;\n \n     if (_clientModel) {\n-        connect(_clientModel, SIGNAL(numBlocksChanged(int,QDateTime,double,bool)), this, SLOT(updateSmartFeeLabel()));\n+        connect(_clientModel, &ClientModel::numBlocksChanged, this, &SendCoinsDialog::updateSmartFeeLabel);\n     }\n }\n \n@@ -151,33 +153,34 @@ void SendCoinsDialog::setModel(WalletModel *_model)\n \n         interfaces::WalletBalances balances = _model->wallet().getBalances();\n         setBalance(balances);\n-        connect(_model, SIGNAL(balanceChanged(interfaces::WalletBalances)), this, SLOT(setBalance(interfaces::WalletBalances)));\n-        connect(_model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n+        connect(_model, &WalletModel::balanceChanged, this, &SendCoinsDialog::setBalance);\n+        connect(_model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &SendCoinsDialog::updateDisplayUnit);\n         updateDisplayUnit();\n \n         // Coin Control\n-        connect(_model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(coinControlUpdateLabels()));\n-        connect(_model->getOptionsModel(), SIGNAL(coinControlFeaturesChanged(bool)), this, SLOT(coinControlFeatureChanged(bool)));\n+        connect(_model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &SendCoinsDialog::coinControlUpdateLabels);\n+        connect(_model->getOptionsModel(), &OptionsModel::coinControlFeaturesChanged, this, &SendCoinsDialog::coinControlFeatureChanged);\n         ui->frameCoinControl->setVisible(_model->getOptionsModel()->getCoinControlFeatures());\n         coinControlUpdateLabels();\n \n         // fee section\n         for (const int n : confTargets) {\n             ui->confTargetSelector->addItem(tr(\"%1 (%2 blocks)\").arg(GUIUtil::formatNiceTimeOffset(n*Params().GetConsensus().nPowTargetSpacing)).arg(n));\n         }\n-        connect(ui->confTargetSelector, SIGNAL(currentIndexChanged(int)), this, SLOT(updateSmartFeeLabel()));\n-        connect(ui->confTargetSelector, SIGNAL(currentIndexChanged(int)), this, SLOT(coinControlUpdateLabels()));\n-        connect(ui->groupFee, SIGNAL(buttonClicked(int)), this, SLOT(updateFeeSectionControls()));\n-        connect(ui->groupFee, SIGNAL(buttonClicked(int)), this, SLOT(coinControlUpdateLabels()));\n-        connect(ui->customFee, SIGNAL(valueChanged()), this, SLOT(coinControlUpdateLabels()));\n-        connect(ui->checkBoxMinimumFee, SIGNAL(stateChanged(int)), this, SLOT(setMinimumFee()));\n-        connect(ui->checkBoxMinimumFee, SIGNAL(stateChanged(int)), this, SLOT(updateFeeSectionControls()));\n-        connect(ui->checkBoxMinimumFee, SIGNAL(stateChanged(int)), this, SLOT(coinControlUpdateLabels()));\n-        connect(ui->optInRBF, SIGNAL(stateChanged(int)), this, SLOT(updateSmartFeeLabel()));\n-        connect(ui->optInRBF, SIGNAL(stateChanged(int)), this, SLOT(coinControlUpdateLabels()));\n-        ui->customFee->setSingleStep(model->wallet().getRequiredFee(1000));\n+        connect(ui->confTargetSelector, static_cast<void (QComboBox::*)(int)>(&QComboBox::currentIndexChanged), this, &SendCoinsDialog::updateSmartFeeLabel);\n+        connect(ui->confTargetSelector, static_cast<void (QComboBox::*)(int)>(&QComboBox::currentIndexChanged), this, &SendCoinsDialog::coinControlUpdateLabels);\n+        connect(ui->groupFee, static_cast<void (QButtonGroup::*)(int)>(&QButtonGroup::buttonClicked), this, &SendCoinsDialog::updateFeeSectionControls);\n+        connect(ui->groupFee, static_cast<void (QButtonGroup::*)(int)>(&QButtonGroup::buttonClicked), this, &SendCoinsDialog::coinControlUpdateLabels);\n+        connect(ui->customFee, &BitcoinAmountField::valueChanged, this, &SendCoinsDialog::coinControlUpdateLabels);\n+        connect(ui->optInRBF, &QCheckBox::stateChanged, this, &SendCoinsDialog::updateSmartFeeLabel);\n+        connect(ui->optInRBF, &QCheckBox::stateChanged, this, &SendCoinsDialog::coinControlUpdateLabels);\n+        CAmount requiredFee = model->wallet().getRequiredFee(1000);\n+        ui->customFee->SetMinValue(requiredFee);\n+        if (ui->customFee->value() < requiredFee) {\n+            ui->customFee->setValue(requiredFee);\n+        }\n+        ui->customFee->setSingleStep(requiredFee);\n         updateFeeSectionControls();\n-        updateMinFeeLabel();\n         updateSmartFeeLabel();\n \n         // set default rbf checkbox state\n@@ -206,7 +209,6 @@ SendCoinsDialog::~SendCoinsDialog()\n     settings.setValue(\"nFeeRadio\", ui->groupFee->checkedId());\n     settings.setValue(\"nConfTarget\", getConfTargetForIndex(ui->confTargetSelector->currentIndex()));\n     settings.setValue(\"nTransactionFee\", (qint64)ui->customFee->value());\n-    settings.setValue(\"fPayOnlyMinFee\", ui->checkBoxMinimumFee->isChecked());\n \n     delete ui;\n }\n@@ -290,7 +292,9 @@ void SendCoinsDialog::on_sendButton_clicked()\n         QString recipientElement;\n         recipientElement = \"<br />\";\n \n+#ifdef ENABLE_BIP70\n         if (!rcp.paymentRequest.IsInitialized()) // normal payment\n+#endif\n         {\n             if(rcp.label.length() > 0) // label with address\n             {\n@@ -302,6 +306,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n                 recipientElement.append(tr(\"%1 to %2\").arg(amount, address));\n             }\n         }\n+#ifdef ENABLE_BIP70\n         else if(!rcp.authenticatedMerchant.isEmpty()) // authenticated payment request\n         {\n             recipientElement.append(tr(\"%1 to %2\").arg(amount, GUIUtil::HtmlEscape(rcp.authenticatedMerchant)));\n@@ -310,6 +315,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n         {\n             recipientElement.append(tr(\"%1 to %2\").arg(amount, address));\n         }\n+#endif\n \n         formatted.append(recipientElement);\n     }\n@@ -348,7 +354,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n     questionString.append(\"<hr />\");\n     CAmount totalAmount = currentTransaction.getTotalTransactionAmount() + txFee;\n     QStringList alternativeUnits;\n-    for (BitcoinUnits::Unit u : BitcoinUnits::availableUnits())\n+    for (const BitcoinUnits::Unit u : BitcoinUnits::availableUnits())\n     {\n         if(u != model->getOptionsModel()->getDisplayUnit())\n             alternativeUnits.append(BitcoinUnits::formatHtmlWithUnit(u, totalAmount));\n@@ -417,10 +423,10 @@ SendCoinsEntry *SendCoinsDialog::addEntry()\n     SendCoinsEntry *entry = new SendCoinsEntry(platformStyle, this);\n     entry->setModel(model);\n     ui->entries->addWidget(entry);\n-    connect(entry, SIGNAL(removeEntry(SendCoinsEntry*)), this, SLOT(removeEntry(SendCoinsEntry*)));\n-    connect(entry, SIGNAL(useAvailableBalance(SendCoinsEntry*)), this, SLOT(useAvailableBalance(SendCoinsEntry*)));\n-    connect(entry, SIGNAL(payAmountChanged()), this, SLOT(coinControlUpdateLabels()));\n-    connect(entry, SIGNAL(subtractFeeFromAmountChanged()), this, SLOT(coinControlUpdateLabels()));\n+    connect(entry, &SendCoinsEntry::removeEntry, this, &SendCoinsDialog::removeEntry);\n+    connect(entry, &SendCoinsEntry::useAvailableBalance, this, &SendCoinsDialog::useAvailableBalance);\n+    connect(entry, &SendCoinsEntry::payAmountChanged, this, &SendCoinsDialog::coinControlUpdateLabels);\n+    connect(entry, &SendCoinsEntry::subtractFeeFromAmountChanged, this, &SendCoinsDialog::coinControlUpdateLabels);\n \n     // Focus the field, so that entry can start immediately\n     entry->clear();\n@@ -534,7 +540,6 @@ void SendCoinsDialog::updateDisplayUnit()\n {\n     setBalance(model->wallet().getBalances());\n     ui->customFee->setDisplayUnit(model->getOptionsModel()->getDisplayUnit());\n-    updateMinFeeLabel();\n     updateSmartFeeLabel();\n }\n \n@@ -634,22 +639,16 @@ void SendCoinsDialog::useAvailableBalance(SendCoinsEntry* entry)\n     }\n }\n \n-void SendCoinsDialog::setMinimumFee()\n-{\n-    ui->customFee->setValue(model->wallet().getRequiredFee(1000));\n-}\n-\n void SendCoinsDialog::updateFeeSectionControls()\n {\n     ui->confTargetSelector      ->setEnabled(ui->radioSmartFee->isChecked());\n     ui->labelSmartFee           ->setEnabled(ui->radioSmartFee->isChecked());\n     ui->labelSmartFee2          ->setEnabled(ui->radioSmartFee->isChecked());\n     ui->labelSmartFee3          ->setEnabled(ui->radioSmartFee->isChecked());\n     ui->labelFeeEstimation      ->setEnabled(ui->radioSmartFee->isChecked());\n-    ui->checkBoxMinimumFee      ->setEnabled(ui->radioCustomFee->isChecked());\n-    ui->labelMinFeeWarning      ->setEnabled(ui->radioCustomFee->isChecked());\n-    ui->labelCustomPerKilobyte  ->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked());\n-    ui->customFee               ->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked());\n+    ui->labelCustomFeeWarning   ->setEnabled(ui->radioCustomFee->isChecked());\n+    ui->labelCustomPerKilobyte  ->setEnabled(ui->radioCustomFee->isChecked());\n+    ui->customFee               ->setEnabled(ui->radioCustomFee->isChecked());\n }\n \n void SendCoinsDialog::updateFeeMinimizedLabel()\n@@ -664,14 +663,6 @@ void SendCoinsDialog::updateFeeMinimizedLabel()\n     }\n }\n \n-void SendCoinsDialog::updateMinFeeLabel()\n-{\n-    if (model && model->getOptionsModel())\n-        ui->checkBoxMinimumFee->setText(tr(\"Pay only the required fee of %1\").arg(\n-            BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), model->wallet().getRequiredFee(1000)) + \"/kB\")\n-        );\n-}\n-\n void SendCoinsDialog::updateCoinControlState(CCoinControl& ctrl)\n {\n     if (ui->radioCustomFee->isChecked()) {\n@@ -897,7 +888,7 @@ SendConfirmationDialog::SendConfirmationDialog(const QString &title, const QStri\n     setDefaultButton(QMessageBox::Cancel);\n     yesButton = button(QMessageBox::Yes);\n     updateYesButton();\n-    connect(&countDownTimer, SIGNAL(timeout()), this, SLOT(countDown()));\n+    connect(&countDownTimer, &QTimer::timeout, this, &SendConfirmationDialog::countDown);\n }\n \n int SendConfirmationDialog::exec()"
      },
      {
        "sha": "e1ebc77d59c9e71e527e7028e948bb15757ebb65",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -92,9 +92,7 @@ private Q_SLOTS:\n     void coinControlClipboardBytes();\n     void coinControlClipboardLowOutput();\n     void coinControlClipboardChange();\n-    void setMinimumFee();\n     void updateFeeSectionControls();\n-    void updateMinFeeLabel();\n     void updateSmartFeeLabel();\n \n Q_SIGNALS:"
      },
      {
        "sha": "76c942c8b9c0b9fc44c08eccef12f28da333024c",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 7,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -2,6 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n #include <qt/sendcoinsentry.h>\n #include <qt/forms/ui_sendcoinsentry.h>\n \n@@ -40,12 +44,12 @@ SendCoinsEntry::SendCoinsEntry(const PlatformStyle *_platformStyle, QWidget *par\n     ui->payTo_is->setFont(GUIUtil::fixedPitchFont());\n \n     // Connect signals\n-    connect(ui->payAmount, SIGNAL(valueChanged()), this, SIGNAL(payAmountChanged()));\n-    connect(ui->checkboxSubtractFeeFromAmount, SIGNAL(toggled(bool)), this, SIGNAL(subtractFeeFromAmountChanged()));\n-    connect(ui->deleteButton, SIGNAL(clicked()), this, SLOT(deleteClicked()));\n-    connect(ui->deleteButton_is, SIGNAL(clicked()), this, SLOT(deleteClicked()));\n-    connect(ui->deleteButton_s, SIGNAL(clicked()), this, SLOT(deleteClicked()));\n-    connect(ui->useAvailableBalanceButton, SIGNAL(clicked()), this, SLOT(useAvailableBalanceClicked()));\n+    connect(ui->payAmount, &BitcoinAmountField::valueChanged, this, &SendCoinsEntry::payAmountChanged);\n+    connect(ui->checkboxSubtractFeeFromAmount, &QCheckBox::toggled, this, &SendCoinsEntry::subtractFeeFromAmountChanged);\n+    connect(ui->deleteButton, &QPushButton::clicked, this, &SendCoinsEntry::deleteClicked);\n+    connect(ui->deleteButton_is, &QPushButton::clicked, this, &SendCoinsEntry::deleteClicked);\n+    connect(ui->deleteButton_s, &QPushButton::clicked, this, &SendCoinsEntry::deleteClicked);\n+    connect(ui->useAvailableBalanceButton, &QPushButton::clicked, this, &SendCoinsEntry::useAvailableBalanceClicked);\n }\n \n SendCoinsEntry::~SendCoinsEntry()\n@@ -82,7 +86,7 @@ void SendCoinsEntry::setModel(WalletModel *_model)\n     this->model = _model;\n \n     if (_model && _model->getOptionsModel())\n-        connect(_model->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n+        connect(_model->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &SendCoinsEntry::updateDisplayUnit);\n \n     clear();\n }\n@@ -133,9 +137,11 @@ bool SendCoinsEntry::validate(interfaces::Node& node)\n     // Check input validity\n     bool retval = true;\n \n+#ifdef ENABLE_BIP70\n     // Skip checks for payment request\n     if (recipient.paymentRequest.IsInitialized())\n         return retval;\n+#endif\n \n     if (!model->validateAddress(ui->payTo->text()))\n     {\n@@ -166,9 +172,11 @@ bool SendCoinsEntry::validate(interfaces::Node& node)\n \n SendCoinsRecipient SendCoinsEntry::getValue()\n {\n+#ifdef ENABLE_BIP70\n     // Payment request\n     if (recipient.paymentRequest.IsInitialized())\n         return recipient;\n+#endif\n \n     // Normal payment\n     recipient.address = ui->payTo->text();\n@@ -196,6 +204,7 @@ void SendCoinsEntry::setValue(const SendCoinsRecipient &value)\n {\n     recipient = value;\n \n+#ifdef ENABLE_BIP70\n     if (recipient.paymentRequest.IsInitialized()) // payment request\n     {\n         if (recipient.authenticatedMerchant.isEmpty()) // unauthenticated\n@@ -216,6 +225,7 @@ void SendCoinsEntry::setValue(const SendCoinsRecipient &value)\n         }\n     }\n     else // normal payment\n+#endif\n     {\n         // message\n         ui->messageTextLabel->setText(recipient.message);"
      },
      {
        "sha": "df38285d087f09ef9c49db8391a99dd7ee60a243",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -14,8 +14,8 @@\n #include <interfaces/handler.h>\n #include <interfaces/node.h>\n #include <interfaces/wallet.h>\n-#include <util.h>\n #include <ui_interface.h>\n+#include <util/system.h>\n #include <version.h>\n \n #include <QApplication>\n@@ -24,6 +24,8 @@\n #include <QPainter>\n #include <QRadialGradient>\n \n+#include <boost/bind.hpp>\n+\n SplashScreen::SplashScreen(interfaces::Node& node, Qt::WindowFlags f, const NetworkStyle *networkStyle) :\n     QWidget(0, f), curAlignment(0), m_node(node)\n {\n@@ -35,9 +37,7 @@ SplashScreen::SplashScreen(interfaces::Node& node, Qt::WindowFlags f, const Netw\n \n     float fontFactor            = 1.0;\n     float devicePixelRatio      = 1.0;\n-#if QT_VERSION > 0x050100\n     devicePixelRatio = static_cast<QGuiApplication*>(QCoreApplication::instance())->devicePixelRatio();\n-#endif\n \n     // define text to place\n     QString titleText       = tr(PACKAGE_NAME);\n@@ -51,10 +51,8 @@ SplashScreen::SplashScreen(interfaces::Node& node, Qt::WindowFlags f, const Netw\n     QSize splashSize(480*devicePixelRatio,320*devicePixelRatio);\n     pixmap = QPixmap(splashSize);\n \n-#if QT_VERSION > 0x050100\n     // change to HiDPI if it makes sense\n     pixmap.setDevicePixelRatio(devicePixelRatio);\n-#endif\n \n     QPainter pixPaint(&pixmap);\n     pixPaint.setPen(QColor(100,100,100));\n@@ -198,7 +196,7 @@ void SplashScreen::unsubscribeFromCoreSignals()\n     // Disconnect signals from client\n     m_handler_init_message->disconnect();\n     m_handler_show_progress->disconnect();\n-    for (auto& handler : m_connected_wallet_handlers) {\n+    for (const auto& handler : m_connected_wallet_handlers) {\n         handler->disconnect();\n     }\n     m_connected_wallet_handlers.clear();"
      },
      {
        "sha": "3e414df1f0acfac3add1a8ec6e1d089bbed0c12c",
        "filename": "src/qt/test/addressbooktests.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 3,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/test/addressbooktests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/test/addressbooktests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/addressbooktests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -2,21 +2,22 @@\n #include <qt/test/util.h>\n #include <test/test_bitcoin.h>\n \n+#include <interfaces/chain.h>\n #include <interfaces/node.h>\n #include <qt/addressbookpage.h>\n #include <qt/addresstablemodel.h>\n #include <qt/editaddressdialog.h>\n-#include <qt/callback.h>\n #include <qt/optionsmodel.h>\n #include <qt/platformstyle.h>\n #include <qt/qvalidatedlineedit.h>\n #include <qt/walletmodel.h>\n \n #include <key.h>\n-#include <pubkey.h>\n #include <key_io.h>\n+#include <pubkey.h>\n #include <wallet/wallet.h>\n \n+#include <QApplication>\n #include <QTimer>\n #include <QMessageBox>\n \n@@ -56,7 +57,8 @@ void EditAddressAndSubmit(\n void TestAddAddressesToSendBook()\n {\n     TestChain100Setup test;\n-    std::shared_ptr<CWallet> wallet = std::make_shared<CWallet>(\"mock\", WalletDatabase::CreateMock());\n+    auto chain = interfaces::MakeChain();\n+    std::shared_ptr<CWallet> wallet = std::make_shared<CWallet>(*chain, WalletLocation(), WalletDatabase::CreateMock());\n     bool firstRun;\n     wallet->LoadWallet(firstRun);\n \n@@ -139,5 +141,16 @@ void TestAddAddressesToSendBook()\n \n void AddressBookTests::addressBookTests()\n {\n+#ifdef Q_OS_MAC\n+    if (QApplication::platformName() == \"minimal\") {\n+        // Disable for mac on \"minimal\" platform to avoid crashes inside the Qt\n+        // framework when it tries to look up unimplemented cocoa functions,\n+        // and fails to handle returned nulls\n+        // (https://bugreports.qt.io/browse/QTBUG-49686).\n+        QWARN(\"Skipping AddressBookTests on mac build with 'minimal' platform set due to Qt bugs. To run AppTests, invoke \"\n+              \"with 'test_bitcoin-qt -platform cocoa' on mac, or else use a linux or windows build.\");\n+        return;\n+    }\n+#endif\n     TestAddAddressesToSendBook();\n }"
      },
      {
        "sha": "6750c543da2f1291f9a229a58b5546e7116219d2",
        "filename": "src/qt/test/compattests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/test/compattests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/test/compattests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/compattests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -2,7 +2,13 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#if defined(ENABLE_WALLET) && defined(ENABLE_BIP70)\n #include <qt/paymentrequestplus.h> // this includes protobuf's port.h which defines its own bswap macos\n+#endif\n \n #include <qt/test/compattests.h>\n "
      },
      {
        "sha": "94907595f54bebaa7ac98316422a2efb5e094d7f",
        "filename": "src/qt/test/paymentservertests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/test/paymentservertests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/test/paymentservertests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/paymentservertests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -13,8 +13,8 @@\n #include <random.h>\n #include <script/script.h>\n #include <script/standard.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n \n #include <openssl/x509.h>\n #include <openssl/x509_vfy.h>\n@@ -39,8 +39,8 @@ X509 *parse_b64der_cert(const char* cert_data)\n static SendCoinsRecipient handleRequest(PaymentServer* server, std::vector<unsigned char>& data)\n {\n     RecipientCatcher sigCatcher;\n-    QObject::connect(server, SIGNAL(receivedPaymentRequest(SendCoinsRecipient)),\n-        &sigCatcher, SLOT(getRecipient(SendCoinsRecipient)));\n+    QObject::connect(server, &PaymentServer::receivedPaymentRequest,\n+        &sigCatcher, &RecipientCatcher::getRecipient);\n \n     // Write data to a temp file:\n     QTemporaryFile f;\n@@ -57,8 +57,8 @@ static SendCoinsRecipient handleRequest(PaymentServer* server, std::vector<unsig\n     // which will lead to a test failure anyway.\n     QCoreApplication::sendEvent(&object, &event);\n \n-    QObject::disconnect(server, SIGNAL(receivedPaymentRequest(SendCoinsRecipient)),\n-        &sigCatcher, SLOT(getRecipient(SendCoinsRecipient)));\n+    QObject::disconnect(server, &PaymentServer::receivedPaymentRequest,\n+        &sigCatcher, &RecipientCatcher::getRecipient);\n \n     // Return results from sigCatcher\n     return sigCatcher.recipient;"
      },
      {
        "sha": "ed453336daef4cdfe128147a058b10cf5ad1140c",
        "filename": "src/qt/test/rpcnestedtests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/test/rpcnestedtests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/test/rpcnestedtests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/rpcnestedtests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -14,7 +14,7 @@\n #include <qt/rpcconsole.h>\n #include <test/test_bitcoin.h>\n #include <univalue.h>\n-#include <util.h>\n+#include <util/system.h>\n \n #include <QDir>\n #include <QtGlobal>"
      },
      {
        "sha": "b6523604fda52498d4422f54512bec52dc6cdd7d",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -8,15 +8,17 @@\n \n #include <chainparams.h>\n #include <qt/test/rpcnestedtests.h>\n-#include <util.h>\n+#include <util/system.h>\n #include <qt/test/uritests.h>\n #include <qt/test/compattests.h>\n \n #ifdef ENABLE_WALLET\n #include <qt/test/addressbooktests.h>\n+#ifdef ENABLE_BIP70\n #include <qt/test/paymentservertests.h>\n+#endif // ENABLE_BIP70\n #include <qt/test/wallettests.h>\n-#endif\n+#endif // ENABLE_WALLET\n \n #include <QApplication>\n #include <QObject>\n@@ -74,7 +76,7 @@ int main(int argc, char *argv[])\n     if (QTest::qExec(&test1) != 0) {\n         fInvalid = true;\n     }\n-#ifdef ENABLE_WALLET\n+#if defined(ENABLE_WALLET) && defined(ENABLE_BIP70)\n     PaymentServerTests test2;\n     if (QTest::qExec(&test2) != 0) {\n         fInvalid = true;"
      },
      {
        "sha": "ae2fb93bf7963e8c5bd03ab5dd6ab32cde6d389b",
        "filename": "src/qt/test/util.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/test/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/test/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/util.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -1,22 +1,19 @@\n-#include <qt/callback.h>\n-\n #include <QApplication>\n #include <QMessageBox>\n-#include <QTimer>\n-#include <QString>\n #include <QPushButton>\n+#include <QString>\n+#include <QTimer>\n #include <QWidget>\n \n void ConfirmMessage(QString* text, int msec)\n {\n-    QTimer::singleShot(msec, makeCallback([text](Callback* callback) {\n+    QTimer::singleShot(msec, [text]() {\n         for (QWidget* widget : QApplication::topLevelWidgets()) {\n             if (widget->inherits(\"QMessageBox\")) {\n                 QMessageBox* messageBox = qobject_cast<QMessageBox*>(widget);\n                 if (text) *text = messageBox->text();\n                 messageBox->defaultButton()->click();\n             }\n         }\n-        delete callback;\n-    }), SLOT(call()));\n+    });\n }"
      },
      {
        "sha": "377f07dcba9c8873cc92ec803ebcae32772b4e6b",
        "filename": "src/qt/test/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/test/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/test/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/util.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -1,11 +1,13 @@\n #ifndef BITCOIN_QT_TEST_UTIL_H\n #define BITCOIN_QT_TEST_UTIL_H\n \n+#include <QString>\n+\n /**\n  * Press \"Ok\" button in message box dialog.\n  *\n  * @param text - Optionally store dialog text.\n- * @param msec - Number of miliseconds to pause before triggering the callback.\n+ * @param msec - Number of milliseconds to pause before triggering the callback.\n  */\n void ConfirmMessage(QString* text = nullptr, int msec = 0);\n "
      },
      {
        "sha": "f02fd8aea7f7fc06de1760fea09dffe655cbdd67",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 6,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -1,9 +1,10 @@\n #include <qt/test/wallettests.h>\n #include <qt/test/util.h>\n \n+#include <interfaces/chain.h>\n #include <interfaces/node.h>\n+#include <base58.h>\n #include <qt/bitcoinamountfield.h>\n-#include <qt/callback.h>\n #include <qt/optionsmodel.h>\n #include <qt/platformstyle.h>\n #include <qt/qvalidatedlineedit.h>\n@@ -39,7 +40,7 @@ namespace\n //! Press \"Yes\" or \"Cancel\" buttons in modal send confirmation dialog.\n void ConfirmSend(QString* text = nullptr, bool cancel = false)\n {\n-    QTimer::singleShot(0, makeCallback([text, cancel](Callback* callback) {\n+    QTimer::singleShot(0, [text, cancel]() {\n         for (QWidget* widget : QApplication::topLevelWidgets()) {\n             if (widget->inherits(\"SendConfirmationDialog\")) {\n                 SendConfirmationDialog* dialog = qobject_cast<SendConfirmationDialog*>(widget);\n@@ -49,8 +50,7 @@ void ConfirmSend(QString* text = nullptr, bool cancel = false)\n                 button->click();\n             }\n         }\n-        delete callback;\n-    }), SLOT(call()));\n+    });\n }\n \n //! Send coins to address and return txid.\n@@ -133,7 +133,8 @@ void TestGUI()\n     for (int i = 0; i < 5; ++i) {\n         test.CreateAndProcessBlock({}, GetScriptForRawPubKey(test.coinbaseKey.GetPubKey()));\n     }\n-    std::shared_ptr<CWallet> wallet = std::make_shared<CWallet>(\"mock\", WalletDatabase::CreateMock());\n+    auto chain = interfaces::MakeChain();\n+    std::shared_ptr<CWallet> wallet = std::make_shared<CWallet>(*chain, WalletLocation(), WalletDatabase::CreateMock());\n     bool firstRun;\n     wallet->LoadWallet(firstRun);\n     {\n@@ -142,7 +143,7 @@ void TestGUI()\n         wallet->AddKeyPubKey(test.coinbaseKey, test.coinbaseKey.GetPubKey());\n     }\n     {\n-        LOCK(cs_main);\n+        auto locked_chain = wallet->chain().lock();\n         WalletRescanReserver reserver(wallet.get());\n         reserver.reserve();\n         wallet->ScanForWalletTransactions(chainActive.Genesis(), nullptr, reserver, true);\n@@ -243,5 +244,16 @@ void TestGUI()\n \n void WalletTests::walletTests()\n {\n+#ifdef Q_OS_MAC\n+    if (QApplication::platformName() == \"minimal\") {\n+        // Disable for mac on \"minimal\" platform to avoid crashes inside the Qt\n+        // framework when it tries to look up unimplemented cocoa functions,\n+        // and fails to handle returned nulls\n+        // (https://bugreports.qt.io/browse/QTBUG-49686).\n+        QWARN(\"Skipping WalletTests on mac build with 'minimal' platform set due to Qt bugs. To run AppTests, invoke \"\n+              \"with 'test_bitcoin-qt -platform cocoa' on mac, or else use a linux or windows build.\");\n+        return;\n+    }\n+#endif\n     TestGUI();\n }"
      },
      {
        "sha": "3aed3f2b978844754cc6bb86ce3e53f57fc1db27",
        "filename": "src/qt/trafficgraphwidget.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/trafficgraphwidget.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/trafficgraphwidget.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/trafficgraphwidget.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -29,7 +29,7 @@ TrafficGraphWidget::TrafficGraphWidget(QWidget *parent) :\n     clientModel(0)\n {\n     timer = new QTimer(this);\n-    connect(timer, SIGNAL(timeout()), SLOT(updateRates()));\n+    connect(timer, &QTimer::timeout, this, &TrafficGraphWidget::updateRates);\n }\n \n void TrafficGraphWidget::setClientModel(ClientModel *model)\n@@ -141,10 +141,10 @@ void TrafficGraphWidget::updateRates()\n     }\n \n     float tmax = 0.0f;\n-    for (float f : vSamplesIn) {\n+    for (const float f : vSamplesIn) {\n         if(f > tmax) tmax = f;\n     }\n-    for (float f : vSamplesOut) {\n+    for (const float f : vSamplesOut) {\n         if(f > tmax) tmax = f;\n     }\n     fMax = tmax;"
      },
      {
        "sha": "0d070d9e87cd70d1a377ea03364ce741da4b05cd",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 7,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -2,6 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#ifdef HAVE_CONFIG_H\n+#include <config/bitcoin-config.h>\n+#endif\n+\n #include <qt/transactiondesc.h>\n \n #include <qt/bitcoinunits.h>\n@@ -15,15 +19,15 @@\n #include <validation.h>\n #include <script/script.h>\n #include <timedata.h>\n-#include <util.h>\n+#include <util/system.h>\n #include <wallet/db.h>\n #include <wallet/wallet.h>\n #include <policy/policy.h>\n \n #include <stdint.h>\n #include <string>\n \n-QString TransactionDesc::FormatTxStatus(const interfaces::WalletTx& wtx, const interfaces::WalletTxStatus& status, bool inMempool, int numBlocks, int64_t adjustedTime)\n+QString TransactionDesc::FormatTxStatus(const interfaces::WalletTx& wtx, const interfaces::WalletTxStatus& status, bool inMempool, int numBlocks)\n {\n     if (!status.is_final)\n     {\n@@ -49,11 +53,10 @@ QString TransactionDesc::FormatTxStatus(const interfaces::WalletTx& wtx, const i\n QString TransactionDesc::toHTML(interfaces::Node& node, interfaces::Wallet& wallet, TransactionRecord *rec, int unit)\n {\n     int numBlocks;\n-    int64_t adjustedTime;\n     interfaces::WalletTxStatus status;\n     interfaces::WalletOrderForm orderForm;\n     bool inMempool;\n-    interfaces::WalletTx wtx = wallet.getWalletTxDetails(rec->hash, status, orderForm, inMempool, numBlocks, adjustedTime);\n+    interfaces::WalletTx wtx = wallet.getWalletTxDetails(rec->hash, status, orderForm, inMempool, numBlocks);\n \n     QString strHTML;\n \n@@ -65,7 +68,7 @@ QString TransactionDesc::toHTML(interfaces::Node& node, interfaces::Wallet& wall\n     CAmount nDebit = wtx.debit;\n     CAmount nNet = nCredit - nDebit;\n \n-    strHTML += \"<b>\" + tr(\"Status\") + \":</b> \" + FormatTxStatus(wtx, status, inMempool, numBlocks, adjustedTime);\n+    strHTML += \"<b>\" + tr(\"Status\") + \":</b> \" + FormatTxStatus(wtx, status, inMempool, numBlocks);\n     strHTML += \"<br>\";\n \n     strHTML += \"<b>\" + tr(\"Date\") + \":</b> \" + (nTime ? GUIUtil::dateTimeStr(nTime) : \"\") + \"<br>\";\n@@ -152,13 +155,13 @@ QString TransactionDesc::toHTML(interfaces::Node& node, interfaces::Wallet& wall\n     else\n     {\n         isminetype fAllFromMe = ISMINE_SPENDABLE;\n-        for (isminetype mine : wtx.txin_is_mine)\n+        for (const isminetype mine : wtx.txin_is_mine)\n         {\n             if(fAllFromMe > mine) fAllFromMe = mine;\n         }\n \n         isminetype fAllToMe = ISMINE_SPENDABLE;\n-        for (isminetype mine : wtx.txout_is_mine)\n+        for (const isminetype mine : wtx.txout_is_mine)\n         {\n             if(fAllToMe > mine) fAllToMe = mine;\n         }\n@@ -257,6 +260,7 @@ QString TransactionDesc::toHTML(interfaces::Node& node, interfaces::Wallet& wall\n         if (r.first == \"Message\")\n             strHTML += \"<br><b>\" + tr(\"Message\") + \":</b><br>\" + GUIUtil::HtmlEscape(r.second, true) + \"<br>\";\n \n+#ifdef ENABLE_BIP70\n     //\n     // PaymentRequest info:\n     //\n@@ -271,6 +275,7 @@ QString TransactionDesc::toHTML(interfaces::Node& node, interfaces::Wallet& wall\n                 strHTML += \"<b>\" + tr(\"Merchant\") + \":</b> \" + GUIUtil::HtmlEscape(merchant) + \"<br>\";\n         }\n     }\n+#endif\n \n     if (wtx.is_coinbase)\n     {"
      },
      {
        "sha": "cf955a433c86f2de2b885587d2d45f509b788bf3",
        "filename": "src/qt/transactiondesc.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/transactiondesc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/transactiondesc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -29,7 +29,7 @@ class TransactionDesc: public QObject\n private:\n     TransactionDesc() {}\n \n-    static QString FormatTxStatus(const interfaces::WalletTx& wtx, const interfaces::WalletTxStatus& status, bool inMempool, int numBlocks, int64_t adjustedTime);\n+    static QString FormatTxStatus(const interfaces::WalletTx& wtx, const interfaces::WalletTxStatus& status, bool inMempool, int numBlocks);\n };\n \n #endif // BITCOIN_QT_TRANSACTIONDESC_H"
      },
      {
        "sha": "d88cfe52ed81d7a121d2644d886b2db728e86f76",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -77,14 +77,14 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const interface\n     {\n         bool involvesWatchAddress = false;\n         isminetype fAllFromMe = ISMINE_SPENDABLE;\n-        for (isminetype mine : wtx.txin_is_mine)\n+        for (const isminetype mine : wtx.txin_is_mine)\n         {\n             if(mine & ISMINE_WATCH_ONLY) involvesWatchAddress = true;\n             if(fAllFromMe > mine) fAllFromMe = mine;\n         }\n \n         isminetype fAllToMe = ISMINE_SPENDABLE;\n-        for (isminetype mine : wtx.txout_is_mine)\n+        for (const isminetype mine : wtx.txout_is_mine)\n         {\n             if(mine & ISMINE_WATCH_ONLY) involvesWatchAddress = true;\n             if(fAllToMe > mine) fAllToMe = mine;\n@@ -158,7 +158,7 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const interface\n     return parts;\n }\n \n-void TransactionRecord::updateStatus(const interfaces::WalletTxStatus& wtx, int numBlocks, int64_t adjustedTime)\n+void TransactionRecord::updateStatus(const interfaces::WalletTxStatus& wtx, int numBlocks)\n {\n     // Determine transaction status\n "
      },
      {
        "sha": "470f70e2ab424e04eda096693b83a2e4d1b1de11",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -138,7 +138,7 @@ class TransactionRecord\n \n     /** Update status from core wallet tx.\n      */\n-    void updateStatus(const interfaces::WalletTxStatus& wtx, int numBlocks, int64_t adjustedTime);\n+    void updateStatus(const interfaces::WalletTxStatus& wtx, int numBlocks);\n \n     /** Return whether a status update is needed.\n      */"
      },
      {
        "sha": "1983c3bc9244aa08adc9c30d66658bd1fa648808",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -16,17 +16,19 @@\n #include <core_io.h>\n #include <interfaces/handler.h>\n #include <interfaces/node.h>\n-#include <validation.h>\n #include <sync.h>\n #include <uint256.h>\n-#include <util.h>\n+#include <util/system.h>\n+#include <validation.h>\n \n #include <QColor>\n #include <QDateTime>\n #include <QDebug>\n #include <QIcon>\n #include <QList>\n \n+#include <boost/bind.hpp>\n+\n // Amount column is right-aligned it contains numbers\n static int column_alignments[] = {\n         Qt::AlignLeft|Qt::AlignVCenter, /* status */\n@@ -58,7 +60,7 @@ struct TxLessThan\n class TransactionTablePriv\n {\n public:\n-    TransactionTablePriv(TransactionTableModel *_parent) :\n+    explicit TransactionTablePriv(TransactionTableModel *_parent) :\n         parent(_parent)\n     {\n     }\n@@ -191,9 +193,8 @@ class TransactionTablePriv\n             // simply re-use the cached status.\n             interfaces::WalletTxStatus wtx;\n             int numBlocks;\n-            int64_t adjustedTime;\n-            if (wallet.tryGetTxStatus(rec->hash, wtx, numBlocks, adjustedTime) && rec->statusUpdateNeeded(numBlocks)) {\n-                rec->updateStatus(wtx, numBlocks, adjustedTime);\n+            if (wallet.tryGetTxStatus(rec->hash, wtx, numBlocks) && rec->statusUpdateNeeded(numBlocks)) {\n+                rec->updateStatus(wtx, numBlocks);\n             }\n             return rec;\n         }\n@@ -226,7 +227,7 @@ TransactionTableModel::TransactionTableModel(const PlatformStyle *_platformStyle\n     columns << QString() << QString() << tr(\"Date\") << tr(\"Type\") << tr(\"Label\") << BitcoinUnits::getAmountColumnTitle(walletModel->getOptionsModel()->getDisplayUnit());\n     priv->refreshWallet(walletModel->wallet());\n \n-    connect(walletModel->getOptionsModel(), SIGNAL(displayUnitChanged(int)), this, SLOT(updateDisplayUnit()));\n+    connect(walletModel->getOptionsModel(), &OptionsModel::displayUnitChanged, this, &TransactionTableModel::updateDisplayUnit);\n \n     subscribeToCoreSignals();\n }"
      },
      {
        "sha": "68410c8bd66f9963d7b6c4b6550eb020e012f4b1",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 45,
        "deletions": 29,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -19,6 +19,7 @@\n \n #include <ui_interface.h>\n \n+#include <QApplication>\n #include <QComboBox>\n #include <QDateTimeEdit>\n #include <QDesktopServices>\n@@ -105,7 +106,11 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     } else {\n         amountWidget->setFixedWidth(100);\n     }\n-    amountWidget->setValidator(new QDoubleValidator(0, 1e20, 8, this));\n+    QDoubleValidator *amountValidator = new QDoubleValidator(0, 1e20, 8, this);\n+    QLocale amountLocale(QLocale::C);\n+    amountLocale.setNumberOptions(QLocale::RejectGroupSeparator);\n+    amountValidator->setLocale(amountLocale);\n+    amountWidget->setValidator(amountValidator);\n     hlayout->addWidget(amountWidget);\n \n     // Delay before filtering transactions in ms\n@@ -175,29 +180,35 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     mapperThirdPartyTxUrls = new QSignalMapper(this);\n \n     // Connect actions\n-    connect(mapperThirdPartyTxUrls, SIGNAL(mapped(QString)), this, SLOT(openThirdPartyTxUrl(QString)));\n-\n-    connect(dateWidget, SIGNAL(activated(int)), this, SLOT(chooseDate(int)));\n-    connect(typeWidget, SIGNAL(activated(int)), this, SLOT(chooseType(int)));\n-    connect(watchOnlyWidget, SIGNAL(activated(int)), this, SLOT(chooseWatchonly(int)));\n-    connect(amountWidget, SIGNAL(textChanged(QString)), amount_typing_delay, SLOT(start()));\n-    connect(amount_typing_delay, SIGNAL(timeout()), this, SLOT(changedAmount()));\n-    connect(search_widget, SIGNAL(textChanged(QString)), prefix_typing_delay, SLOT(start()));\n-    connect(prefix_typing_delay, SIGNAL(timeout()), this, SLOT(changedSearch()));\n-\n-    connect(view, SIGNAL(doubleClicked(QModelIndex)), this, SIGNAL(doubleClicked(QModelIndex)));\n-    connect(view, SIGNAL(customContextMenuRequested(QPoint)), this, SLOT(contextualMenu(QPoint)));\n-\n-    connect(bumpFeeAction, SIGNAL(triggered()), this, SLOT(bumpFee()));\n-    connect(abandonAction, SIGNAL(triggered()), this, SLOT(abandonTx()));\n-    connect(copyAddressAction, SIGNAL(triggered()), this, SLOT(copyAddress()));\n-    connect(copyLabelAction, SIGNAL(triggered()), this, SLOT(copyLabel()));\n-    connect(copyAmountAction, SIGNAL(triggered()), this, SLOT(copyAmount()));\n-    connect(copyTxIDAction, SIGNAL(triggered()), this, SLOT(copyTxID()));\n-    connect(copyTxHexAction, SIGNAL(triggered()), this, SLOT(copyTxHex()));\n-    connect(copyTxPlainText, SIGNAL(triggered()), this, SLOT(copyTxPlainText()));\n-    connect(editLabelAction, SIGNAL(triggered()), this, SLOT(editLabel()));\n-    connect(showDetailsAction, SIGNAL(triggered()), this, SLOT(showDetails()));\n+    connect(mapperThirdPartyTxUrls, static_cast<void (QSignalMapper::*)(const QString&)>(&QSignalMapper::mapped), this, &TransactionView::openThirdPartyTxUrl);\n+\n+    connect(dateWidget, static_cast<void (QComboBox::*)(int)>(&QComboBox::activated), this, &TransactionView::chooseDate);\n+    connect(typeWidget, static_cast<void (QComboBox::*)(int)>(&QComboBox::activated), this, &TransactionView::chooseType);\n+    connect(watchOnlyWidget, static_cast<void (QComboBox::*)(int)>(&QComboBox::activated), this, &TransactionView::chooseWatchonly);\n+    connect(amountWidget, &QLineEdit::textChanged, amount_typing_delay, static_cast<void (QTimer::*)()>(&QTimer::start));\n+    connect(amount_typing_delay, &QTimer::timeout, this, &TransactionView::changedAmount);\n+    connect(search_widget, &QLineEdit::textChanged, prefix_typing_delay, static_cast<void (QTimer::*)()>(&QTimer::start));\n+    connect(prefix_typing_delay, &QTimer::timeout, this, &TransactionView::changedSearch);\n+\n+    connect(view, &QTableView::doubleClicked, this, &TransactionView::doubleClicked);\n+    connect(view, &QTableView::customContextMenuRequested, this, &TransactionView::contextualMenu);\n+\n+    connect(bumpFeeAction, &QAction::triggered, this, &TransactionView::bumpFee);\n+    connect(abandonAction, &QAction::triggered, this, &TransactionView::abandonTx);\n+    connect(copyAddressAction, &QAction::triggered, this, &TransactionView::copyAddress);\n+    connect(copyLabelAction, &QAction::triggered, this, &TransactionView::copyLabel);\n+    connect(copyAmountAction, &QAction::triggered, this, &TransactionView::copyAmount);\n+    connect(copyTxIDAction, &QAction::triggered, this, &TransactionView::copyTxID);\n+    connect(copyTxHexAction, &QAction::triggered, this, &TransactionView::copyTxHex);\n+    connect(copyTxPlainText, &QAction::triggered, this, &TransactionView::copyTxPlainText);\n+    connect(editLabelAction, &QAction::triggered, this, &TransactionView::editLabel);\n+    connect(showDetailsAction, &QAction::triggered, this, &TransactionView::showDetails);\n+    // Double-clicking on a transaction on the transaction history page shows details\n+    connect(this, &TransactionView::doubleClicked, this, &TransactionView::showDetails);\n+    // Highlight transaction after fee bump\n+    connect(this, &TransactionView::bumpedFee, [this](const uint256& txid) {\n+      focusTransaction(txid);\n+    });\n }\n \n void TransactionView::setModel(WalletModel *_model)\n@@ -243,7 +254,7 @@ void TransactionView::setModel(WalletModel *_model)\n                     if (i == 0)\n                         contextMenu->addSeparator();\n                     contextMenu->addAction(thirdPartyTxUrlAction);\n-                    connect(thirdPartyTxUrlAction, SIGNAL(triggered()), mapperThirdPartyTxUrls, SLOT(map()));\n+                    connect(thirdPartyTxUrlAction, &QAction::triggered, mapperThirdPartyTxUrls, static_cast<void (QSignalMapper::*)()>(&QSignalMapper::map));\n                     mapperThirdPartyTxUrls->setMapping(thirdPartyTxUrlAction, listUrls[i].trimmed());\n                 }\n             }\n@@ -253,7 +264,7 @@ void TransactionView::setModel(WalletModel *_model)\n         updateWatchOnlyColumn(_model->wallet().haveWatchOnly());\n \n         // Watch-only signal\n-        connect(_model, SIGNAL(notifyWatchonlyChanged(bool)), this, SLOT(updateWatchOnlyColumn(bool)));\n+        connect(_model, &WalletModel::notifyWatchonlyChanged, this, &TransactionView::updateWatchOnlyColumn);\n     }\n }\n \n@@ -428,9 +439,14 @@ void TransactionView::bumpFee()\n     hash.SetHex(hashQStr.toStdString());\n \n     // Bump tx fee over the walletModel\n-    if (model->bumpFee(hash)) {\n+    uint256 newHash;\n+    if (model->bumpFee(hash, newHash)) {\n         // Update the table\n+        transactionView->selectionModel()->clearSelection();\n         model->getTransactionTableModel()->updateTransaction(hashQStr, CT_UPDATED, true);\n+\n+        qApp->processEvents();\n+        Q_EMIT bumpedFee(newHash);\n     }\n }\n \n@@ -562,8 +578,8 @@ QWidget *TransactionView::createDateRangeWidget()\n     dateRangeWidget->setVisible(false);\n \n     // Notify on change\n-    connect(dateFrom, SIGNAL(dateChanged(QDate)), this, SLOT(dateRangeChanged()));\n-    connect(dateTo, SIGNAL(dateChanged(QDate)), this, SLOT(dateRangeChanged()));\n+    connect(dateFrom, &QDateTimeEdit::dateChanged, this, &TransactionView::dateRangeChanged);\n+    connect(dateTo, &QDateTimeEdit::dateChanged, this, &TransactionView::dateRangeChanged);\n \n     return dateRangeWidget;\n }"
      },
      {
        "sha": "fdd8b069c7e00c7aec0b8ff8e6ac4b5a6ef838a9",
        "filename": "src/qt/transactionview.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/transactionview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/transactionview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -110,6 +110,8 @@ private Q_SLOTS:\n     /**  Fired when a message should be reported to the user */\n     void message(const QString &title, const QString &message, unsigned int style);\n \n+    void bumpedFee(const uint256& txid);\n+\n public Q_SLOTS:\n     void chooseDate(int idx);\n     void chooseType(int idx);"
      },
      {
        "sha": "b051dd159b6bcc34e4e1a0e36e1d48aba1ae9e46",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -14,13 +14,16 @@\n #include <qt/clientmodel.h>\n #include <qt/guiconstants.h>\n #include <qt/intro.h>\n+#ifdef ENABLE_BIP70\n #include <qt/paymentrequestplus.h>\n+#endif\n #include <qt/guiutil.h>\n \n #include <clientversion.h>\n #include <init.h>\n #include <interfaces/node.h>\n-#include <util.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n \n #include <stdio.h>\n \n@@ -52,9 +55,9 @@ HelpMessageDialog::HelpMessageDialog(interfaces::Node& node, QWidget *parent, bo\n     {\n         setWindowTitle(tr(\"About %1\").arg(tr(PACKAGE_NAME)));\n \n+        std::string licenseInfo = LicenseInfo();\n         /// HTML-format the license message from the core\n-        QString licenseInfo = QString::fromStdString(LicenseInfo());\n-        QString licenseInfoHTML = licenseInfo;\n+        QString licenseInfoHTML = QString::fromStdString(LicenseInfo());\n         // Make URLs clickable\n         QRegExp uri(\"<(.*)>\", Qt::CaseSensitive, QRegExp::RegExp2);\n         uri.setMinimal(true); // use non-greedy matching\n@@ -64,7 +67,7 @@ HelpMessageDialog::HelpMessageDialog(interfaces::Node& node, QWidget *parent, bo\n \n         ui->aboutMessage->setTextFormat(Qt::RichText);\n         ui->scrollArea->setVerticalScrollBarPolicy(Qt::ScrollBarAsNeeded);\n-        text = version + \"\\n\" + licenseInfo;\n+        text = version + \"\\n\" + QString::fromStdString(FormatParagraph(licenseInfo));\n         ui->aboutMessage->setText(version + \"<br><br>\" + licenseInfoHTML);\n         ui->aboutMessage->setWordWrap(true);\n         ui->helpMessage->setVisible(false);"
      },
      {
        "sha": "d15bd95b8ee5f9735b3d47ec130da05ecab56f3b",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -68,9 +68,11 @@ bool WalletFrame::addWallet(WalletModel *walletModel)\n     mapWalletViews[name] = walletView;\n \n     // Ensure a walletView is able to show the main window\n-    connect(walletView, SIGNAL(showNormalIfMinimized()), gui, SLOT(showNormalIfMinimized()));\n+    connect(walletView, &WalletView::showNormalIfMinimized, [this]{\n+      gui->showNormalIfMinimized();\n+    });\n \n-    connect(walletView, SIGNAL(outOfSyncWarningClicked()), this, SLOT(outOfSyncWarningClicked()));\n+    connect(walletView, &WalletView::outOfSyncWarningClicked, this, &WalletFrame::outOfSyncWarningClicked);\n \n     return true;\n }"
      },
      {
        "sha": "353da0c9b4441e6be0e86648f9c61f2e4a7f3961",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 7,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -2,6 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n #include <qt/walletmodel.h>\n \n #include <qt/addresstablemodel.h>\n@@ -16,7 +20,7 @@\n #include <interfaces/node.h>\n #include <key_io.h>\n #include <ui_interface.h>\n-#include <util.h> // for GetBoolArg\n+#include <util/system.h> // for GetBoolArg\n #include <wallet/coincontrol.h>\n #include <wallet/wallet.h>\n \n@@ -44,7 +48,7 @@ WalletModel::WalletModel(std::unique_ptr<interfaces::Wallet> wallet, interfaces:\n \n     // This timer will be fired repeatedly to update the balance\n     pollTimer = new QTimer(this);\n-    connect(pollTimer, SIGNAL(timeout()), this, SLOT(pollBalanceChanged()));\n+    connect(pollTimer, &QTimer::timeout, this, &WalletModel::pollBalanceChanged);\n     pollTimer->start(MODEL_UPDATE_DELAY);\n \n     subscribeToCoreSignals();\n@@ -142,6 +146,7 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n         if (rcp.fSubtractFeeFromAmount)\n             fSubtractFeeFromAmount = true;\n \n+#ifdef ENABLE_BIP70\n         if (rcp.paymentRequest.IsInitialized())\n         {   // PaymentRequest...\n             CAmount subtotal = 0;\n@@ -164,6 +169,7 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n             total += subtotal;\n         }\n         else\n+#endif\n         {   // User-entered bitcoin address / amount:\n             if(!validateAddress(rcp.address))\n             {\n@@ -235,6 +241,7 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(WalletModelTransaction &tran\n         std::vector<std::pair<std::string, std::string>> vOrderForm;\n         for (const SendCoinsRecipient &rcp : transaction.getRecipients())\n         {\n+#ifdef ENABLE_BIP70\n             if (rcp.paymentRequest.IsInitialized())\n             {\n                 // Make sure any payment requests involved are still valid.\n@@ -247,13 +254,15 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(WalletModelTransaction &tran\n                 rcp.paymentRequest.SerializeToString(&value);\n                 vOrderForm.emplace_back(\"PaymentRequest\", std::move(value));\n             }\n-            else if (!rcp.message.isEmpty()) // Message from normal bitcoin:URI (bitcoin:123...?message=example)\n+            else\n+#endif\n+            if (!rcp.message.isEmpty()) // Message from normal bitcoin:URI (bitcoin:123...?message=example)\n                 vOrderForm.emplace_back(\"Message\", rcp.message.toStdString());\n         }\n \n         auto& newTx = transaction.getWtx();\n         std::string rejectReason;\n-        if (!newTx->commit({} /* mapValue */, std::move(vOrderForm), {} /* fromAccount */, rejectReason))\n+        if (!newTx->commit({} /* mapValue */, std::move(vOrderForm), rejectReason))\n             return SendCoinsReturn(TransactionCommitFailed, QString::fromStdString(rejectReason));\n \n         CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n@@ -266,7 +275,9 @@ WalletModel::SendCoinsReturn WalletModel::sendCoins(WalletModelTransaction &tran\n     for (const SendCoinsRecipient &rcp : transaction.getRecipients())\n     {\n         // Don't touch the address book when we have a payment request\n+#ifdef ENABLE_BIP70\n         if (!rcp.paymentRequest.IsInitialized())\n+#endif\n         {\n             std::string strAddress = rcp.address.toStdString();\n             CTxDestination dest = DecodeDestination(strAddress);\n@@ -492,7 +503,7 @@ bool WalletModel::saveReceiveRequest(const std::string &sAddress, const int64_t\n         return m_wallet->addDestData(dest, key, sRequest);\n }\n \n-bool WalletModel::bumpFee(uint256 hash)\n+bool WalletModel::bumpFee(uint256 hash, uint256& new_hash)\n {\n     CCoinControl coin_control;\n     coin_control.m_signal_bip125_rbf = true;\n@@ -544,8 +555,7 @@ bool WalletModel::bumpFee(uint256 hash)\n         return false;\n     }\n     // commit the bumped transaction\n-    uint256 txid;\n-    if(!m_wallet->commitBumpTransaction(hash, std::move(mtx), errors, txid)) {\n+    if(!m_wallet->commitBumpTransaction(hash, std::move(mtx), errors, new_hash)) {\n         QMessageBox::critical(0, tr(\"Fee bump error\"), tr(\"Could not commit transaction\") + \"<br />(\" +\n             QString::fromStdString(errors[0])+\")\");\n          return false;"
      },
      {
        "sha": "ec4c5a2a6c4d3d338f8b702ca15e7874abc869b1",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 17,
        "deletions": 1,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -10,7 +10,13 @@\n #include <serialize.h>\n #include <script/standard.h>\n \n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#ifdef ENABLE_BIP70\n #include <qt/paymentrequestplus.h>\n+#endif\n #include <qt/walletmodeltransaction.h>\n \n #include <interfaces/wallet.h>\n@@ -63,8 +69,14 @@ class SendCoinsRecipient\n     // If from a payment request, this is used for storing the memo\n     QString message;\n \n+#ifdef ENABLE_BIP70\n     // If from a payment request, paymentRequest.IsInitialized() will be true\n     PaymentRequestPlus paymentRequest;\n+#else\n+    // If building with BIP70 is disabled, keep the payment request around as\n+    // serialized string to ensure load/store is lossless\n+    std::string sPaymentRequest;\n+#endif\n     // Empty if no authentication or invalid signature/cert/etc.\n     QString authenticatedMerchant;\n \n@@ -80,9 +92,11 @@ class SendCoinsRecipient\n         std::string sAddress = address.toStdString();\n         std::string sLabel = label.toStdString();\n         std::string sMessage = message.toStdString();\n+#ifdef ENABLE_BIP70\n         std::string sPaymentRequest;\n         if (!ser_action.ForRead() && paymentRequest.IsInitialized())\n             paymentRequest.SerializeToString(&sPaymentRequest);\n+#endif\n         std::string sAuthenticatedMerchant = authenticatedMerchant.toStdString();\n \n         READWRITE(this->nVersion);\n@@ -98,8 +112,10 @@ class SendCoinsRecipient\n             address = QString::fromStdString(sAddress);\n             label = QString::fromStdString(sLabel);\n             message = QString::fromStdString(sMessage);\n+#ifdef ENABLE_BIP70\n             if (!sPaymentRequest.empty())\n                 paymentRequest.parse(QByteArray::fromRawData(sPaymentRequest.data(), sPaymentRequest.size()));\n+#endif\n             authenticatedMerchant = QString::fromStdString(sAuthenticatedMerchant);\n         }\n     }\n@@ -194,7 +210,7 @@ class WalletModel : public QObject\n     void loadReceiveRequests(std::vector<std::string>& vReceiveRequests);\n     bool saveReceiveRequest(const std::string &sAddress, const int64_t nId, const std::string &sRequest);\n \n-    bool bumpFee(uint256 hash);\n+    bool bumpFee(uint256 hash, uint256& new_hash);\n \n     static bool isWalletEnabled();\n     bool privateKeysDisabled() const;"
      },
      {
        "sha": "eb3b0baf088c530a8a624b7afb9f7ff76159ea2e",
        "filename": "src/qt/walletmodeltransaction.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/walletmodeltransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/walletmodeltransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -2,6 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#ifdef HAVE_CONFIG_H\n+#include <config/bitcoin-config.h>\n+#endif\n+\n #include <qt/walletmodeltransaction.h>\n \n #include <interfaces/node.h>\n@@ -46,6 +50,7 @@ void WalletModelTransaction::reassignAmounts(int nChangePosRet)\n     {\n         SendCoinsRecipient& rcp = (*it);\n \n+#ifdef ENABLE_BIP70\n         if (rcp.paymentRequest.IsInitialized())\n         {\n             CAmount subtotal = 0;\n@@ -62,6 +67,7 @@ void WalletModelTransaction::reassignAmounts(int nChangePosRet)\n             rcp.amount = subtotal;\n         }\n         else // normal recipient (no payment request)\n+#endif\n         {\n             if (i == nChangePosRet)\n                 i++;"
      },
      {
        "sha": "289aee847b0754f0b083f3e50f61dd50f99499d3",
        "filename": "src/qt/walletmodeltransaction.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/walletmodeltransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/walletmodeltransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -8,6 +8,7 @@\n #include <qt/walletmodel.h>\n \n #include <memory>\n+#include <amount.h>\n \n #include <QObject>\n "
      },
      {
        "sha": "a6199923440b40ccf1f4e3a0b069177eaac615be",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 27,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -66,22 +66,20 @@ WalletView::WalletView(const PlatformStyle *_platformStyle, QWidget *parent):\n     addWidget(sendCoinsPage);\n \n     // Clicking on a transaction on the overview pre-selects the transaction on the transaction history page\n-    connect(overviewPage, SIGNAL(transactionClicked(QModelIndex)), transactionView, SLOT(focusTransaction(QModelIndex)));\n-    connect(overviewPage, SIGNAL(outOfSyncWarningClicked()), this, SLOT(requestedSyncWarningInfo()));\n+    connect(overviewPage, &OverviewPage::transactionClicked, transactionView, static_cast<void (TransactionView::*)(const QModelIndex&)>(&TransactionView::focusTransaction));\n \n-    // Highlight transaction after send\n-    connect(sendCoinsPage, SIGNAL(coinsSent(uint256)), transactionView, SLOT(focusTransaction(uint256)));\n+    connect(overviewPage, &OverviewPage::outOfSyncWarningClicked, this, &WalletView::requestedSyncWarningInfo);\n \n-    // Double-clicking on a transaction on the transaction history page shows details\n-    connect(transactionView, SIGNAL(doubleClicked(QModelIndex)), transactionView, SLOT(showDetails()));\n+    // Highlight transaction after send\n+    connect(sendCoinsPage, &SendCoinsDialog::coinsSent, transactionView, static_cast<void (TransactionView::*)(const uint256&)>(&TransactionView::focusTransaction));\n \n     // Clicking on \"Export\" allows to export the transaction list\n-    connect(exportButton, SIGNAL(clicked()), transactionView, SLOT(exportClicked()));\n+    connect(exportButton, &QPushButton::clicked, transactionView, &TransactionView::exportClicked);\n \n     // Pass through messages from sendCoinsPage\n-    connect(sendCoinsPage, SIGNAL(message(QString,QString,unsigned int)), this, SIGNAL(message(QString,QString,unsigned int)));\n+    connect(sendCoinsPage, &SendCoinsDialog::message, this, &WalletView::message);\n     // Pass through messages from transactionView\n-    connect(transactionView, SIGNAL(message(QString,QString,unsigned int)), this, SIGNAL(message(QString,QString,unsigned int)));\n+    connect(transactionView, &TransactionView::message, this, &WalletView::message);\n }\n \n WalletView::~WalletView()\n@@ -93,22 +91,24 @@ void WalletView::setBitcoinGUI(BitcoinGUI *gui)\n     if (gui)\n     {\n         // Clicking on a transaction on the overview page simply sends you to transaction history page\n-        connect(overviewPage, SIGNAL(transactionClicked(QModelIndex)), gui, SLOT(gotoHistoryPage()));\n+        connect(overviewPage, &OverviewPage::transactionClicked, gui, &BitcoinGUI::gotoHistoryPage);\n \n         // Navigate to transaction history page after send\n-        connect(sendCoinsPage, SIGNAL(coinsSent(uint256)), gui, SLOT(gotoHistoryPage()));\n+        connect(sendCoinsPage, &SendCoinsDialog::coinsSent, gui, &BitcoinGUI::gotoHistoryPage);\n \n         // Receive and report messages\n-        connect(this, SIGNAL(message(QString,QString,unsigned int)), gui, SLOT(message(QString,QString,unsigned int)));\n+        connect(this, &WalletView::message, [gui](const QString &title, const QString &message, unsigned int style) {\n+            gui->message(title, message, style);\n+        });\n \n         // Pass through encryption status changed signals\n-        connect(this, SIGNAL(encryptionStatusChanged()), gui, SLOT(updateWalletStatus()));\n+        connect(this, &WalletView::encryptionStatusChanged, gui, &BitcoinGUI::updateWalletStatus);\n \n         // Pass through transaction notifications\n-        connect(this, SIGNAL(incomingTransaction(QString,int,CAmount,QString,QString,QString,QString)), gui, SLOT(incomingTransaction(QString,int,CAmount,QString,QString,QString,QString)));\n+        connect(this, &WalletView::incomingTransaction, gui, &BitcoinGUI::incomingTransaction);\n \n         // Connect HD enabled state signal\n-        connect(this, SIGNAL(hdEnabledStatusChanged()), gui, SLOT(updateWalletStatus()));\n+        connect(this, &WalletView::hdEnabledStatusChanged, gui, &BitcoinGUI::updateWalletStatus);\n     }\n }\n \n@@ -135,24 +135,23 @@ void WalletView::setWalletModel(WalletModel *_walletModel)\n     if (_walletModel)\n     {\n         // Receive and pass through messages from wallet model\n-        connect(_walletModel, SIGNAL(message(QString,QString,unsigned int)), this, SIGNAL(message(QString,QString,unsigned int)));\n+        connect(_walletModel, &WalletModel::message, this, &WalletView::message);\n \n         // Handle changes in encryption status\n-        connect(_walletModel, SIGNAL(encryptionStatusChanged()), this, SIGNAL(encryptionStatusChanged()));\n+        connect(_walletModel, &WalletModel::encryptionStatusChanged, this, &WalletView::encryptionStatusChanged);\n         updateEncryptionStatus();\n \n         // update HD status\n         Q_EMIT hdEnabledStatusChanged();\n \n         // Balloon pop-up for new transaction\n-        connect(_walletModel->getTransactionTableModel(), SIGNAL(rowsInserted(QModelIndex,int,int)),\n-                this, SLOT(processNewTransaction(QModelIndex,int,int)));\n+        connect(_walletModel->getTransactionTableModel(), &TransactionTableModel::rowsInserted, this, &WalletView::processNewTransaction);\n \n         // Ask for passphrase if needed\n-        connect(_walletModel, SIGNAL(requireUnlock()), this, SLOT(unlockWallet()));\n+        connect(_walletModel, &WalletModel::requireUnlock, this, &WalletView::unlockWallet);\n \n         // Show progress dialog\n-        connect(_walletModel, SIGNAL(showProgress(QString,int)), this, SLOT(showProgress(QString,int)));\n+        connect(_walletModel, &WalletModel::showProgress, this, &WalletView::showProgress);\n     }\n }\n \n@@ -293,19 +292,15 @@ void WalletView::usedSendingAddresses()\n     if(!walletModel)\n         return;\n \n-    usedSendingAddressesPage->show();\n-    usedSendingAddressesPage->raise();\n-    usedSendingAddressesPage->activateWindow();\n+    GUIUtil::bringToFront(usedSendingAddressesPage);\n }\n \n void WalletView::usedReceivingAddresses()\n {\n     if(!walletModel)\n         return;\n \n-    usedReceivingAddressesPage->show();\n-    usedReceivingAddressesPage->raise();\n-    usedReceivingAddressesPage->activateWindow();\n+    GUIUtil::bringToFront(usedReceivingAddressesPage);\n }\n \n void WalletView::showProgress(const QString &title, int nProgress)"
      },
      {
        "sha": "08cae76addc94eba9d9cad04e61056c7bc4efc1c",
        "filename": "src/qt/winshutdownmonitor.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/winshutdownmonitor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/qt/winshutdownmonitor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/winshutdownmonitor.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -6,7 +6,7 @@\n \n #if defined(Q_OS_WIN)\n #include <shutdown.h>\n-#include <util.h>\n+#include <util/system.h>\n \n #include <windows.h>\n "
      },
      {
        "sha": "a34c70e1d50c39314759e3bf68bac70369cd7822",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -12,7 +12,8 @@\n #include <wincrypt.h>\n #endif\n #include <logging.h>  // for LogPrint()\n-#include <utiltime.h> // for GetTime()\n+#include <sync.h>     // for WAIT_LOCK\n+#include <util/time.h> // for GetTime()\n \n #include <stdlib.h>\n #include <chrono>\n@@ -34,7 +35,7 @@\n #include <sys/random.h>\n #endif\n #ifdef HAVE_SYSCTL_ARND\n-#include <utilstrencodings.h> // for ARRAYLEN\n+#include <util/strencodings.h> // for ARRAYLEN\n #include <sys/sysctl.h>\n #endif\n \n@@ -295,7 +296,7 @@ void RandAddSeedSleep()\n }\n \n \n-static std::mutex cs_rng_state;\n+static Mutex cs_rng_state;\n static unsigned char rng_state[32] = {0};\n static uint64_t rng_counter = 0;\n \n@@ -305,7 +306,7 @@ static void AddDataToRng(void* data, size_t len) {\n     hasher.Write((const unsigned char*)data, len);\n     unsigned char buf[64];\n     {\n-        std::unique_lock<std::mutex> lock(cs_rng_state);\n+        WAIT_LOCK(cs_rng_state, lock);\n         hasher.Write(rng_state, sizeof(rng_state));\n         hasher.Write((const unsigned char*)&rng_counter, sizeof(rng_counter));\n         ++rng_counter;\n@@ -337,7 +338,7 @@ void GetStrongRandBytes(unsigned char* out, int num)\n \n     // Combine with and update state\n     {\n-        std::unique_lock<std::mutex> lock(cs_rng_state);\n+        WAIT_LOCK(cs_rng_state, lock);\n         hasher.Write(rng_state, sizeof(rng_state));\n         hasher.Write((const unsigned char*)&rng_counter, sizeof(rng_counter));\n         ++rng_counter;"
      },
      {
        "sha": "4988e6ed268081f7fe68243737faabc002bbb472",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 24,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -3,20 +3,21 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <attributes.h>\n #include <chain.h>\n #include <chainparams.h>\n #include <core_io.h>\n+#include <httpserver.h>\n #include <index/txindex.h>\n #include <primitives/block.h>\n #include <primitives/transaction.h>\n-#include <validation.h>\n-#include <httpserver.h>\n #include <rpc/blockchain.h>\n #include <rpc/server.h>\n #include <streams.h>\n #include <sync.h>\n #include <txmempool.h>\n-#include <utilstrencodings.h>\n+#include <util/strencodings.h>\n+#include <validation.h>\n #include <version.h>\n \n #include <boost/algorithm/string.hpp>\n@@ -105,15 +106,6 @@ static std::string AvailableDataFormatsString()\n     return formats;\n }\n \n-static bool ParseHashStr(const std::string& strReq, uint256& v)\n-{\n-    if (!IsHex(strReq) || (strReq.size() != 64))\n-        return false;\n-\n-    v.SetHex(strReq);\n-    return true;\n-}\n-\n static bool CheckWarmup(HTTPRequest* req)\n {\n     std::string statusmessage;\n@@ -157,20 +149,25 @@ static bool rest_headers(HTTPRequest* req,\n         }\n     }\n \n-    CDataStream ssHeader(SER_NETWORK, PROTOCOL_VERSION);\n-    for (const CBlockIndex *pindex : headers) {\n-        ssHeader << pindex->GetBlockHeader();\n-    }\n-\n     switch (rf) {\n     case RetFormat::BINARY: {\n+        CDataStream ssHeader(SER_NETWORK, PROTOCOL_VERSION);\n+        for (const CBlockIndex *pindex : headers) {\n+            ssHeader << pindex->GetBlockHeader();\n+        }\n+\n         std::string binaryHeader = ssHeader.str();\n         req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n         req->WriteReply(HTTP_OK, binaryHeader);\n         return true;\n     }\n \n     case RetFormat::HEX: {\n+        CDataStream ssHeader(SER_NETWORK, PROTOCOL_VERSION);\n+        for (const CBlockIndex *pindex : headers) {\n+            ssHeader << pindex->GetBlockHeader();\n+        }\n+\n         std::string strHex = HexStr(ssHeader.begin(), ssHeader.end()) + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"text/plain\");\n         req->WriteReply(HTTP_OK, strHex);\n@@ -224,18 +221,19 @@ static bool rest_block(HTTPRequest* req,\n             return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n     }\n \n-    CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n-    ssBlock << block;\n-\n     switch (rf) {\n     case RetFormat::BINARY: {\n+        CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+        ssBlock << block;\n         std::string binaryBlock = ssBlock.str();\n         req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n         req->WriteReply(HTTP_OK, binaryBlock);\n         return true;\n     }\n \n     case RetFormat::HEX: {\n+        CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+        ssBlock << block;\n         std::string strHex = HexStr(ssBlock.begin(), ssBlock.end()) + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"text/plain\");\n         req->WriteReply(HTTP_OK, strHex);\n@@ -360,18 +358,21 @@ static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\n     if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n         return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n \n-    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n-    ssTx << tx;\n-\n     switch (rf) {\n     case RetFormat::BINARY: {\n+        CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+        ssTx << tx;\n+\n         std::string binaryTx = ssTx.str();\n         req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n         req->WriteReply(HTTP_OK, binaryTx);\n         return true;\n     }\n \n     case RetFormat::HEX: {\n+        CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+        ssTx << tx;\n+\n         std::string strHex = HexStr(ssTx.begin(), ssTx.end()) + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"text/plain\");\n         req->WriteReply(HTTP_OK, strHex);\n@@ -464,7 +465,7 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\n                 oss >> fCheckMemPool;\n                 oss >> vOutPoints;\n             }\n-        } catch (const std::ios_base::failure& e) {\n+        } catch (const std::ios_base::failure&) {\n             // abort in case of unreadable binary data\n             return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error\");\n         }"
      },
      {
        "sha": "403e3e397cb2659cf1316d615762bc62543a0a07",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 256,
        "deletions": 127,
        "changes": 383,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -12,31 +12,33 @@\n #include <checkpoints.h>\n #include <coins.h>\n #include <consensus/validation.h>\n-#include <validation.h>\n #include <core_io.h>\n+#include <hash.h>\n #include <index/txindex.h>\n #include <key_io.h>\n #include <policy/feerate.h>\n #include <policy/policy.h>\n+#include <policy/rbf.h>\n #include <primitives/transaction.h>\n #include <rpc/server.h>\n+#include <rpc/util.h>\n #include <script/descriptor.h>\n #include <streams.h>\n #include <sync.h>\n #include <txdb.h>\n #include <txmempool.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n-#include <hash.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <validation.h>\n #include <validationinterface.h>\n+#include <versionbitsinfo.h>\n #include <warnings.h>\n \n #include <assert.h>\n #include <stdint.h>\n \n #include <univalue.h>\n \n-#include <boost/algorithm/string.hpp>\n #include <boost/thread/thread.hpp> // boost::thread::interrupt\n \n #include <memory>\n@@ -49,7 +51,7 @@ struct CUpdatedBlock\n     int height;\n };\n \n-static std::mutex cs_blockchange;\n+static Mutex cs_blockchange;\n static std::condition_variable cond_blockchange;\n static CUpdatedBlock latestblock;\n \n@@ -120,8 +122,8 @@ UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool tx\n     if (chainActive.Contains(blockindex))\n         confirmations = chainActive.Height() - blockindex->nHeight + 1;\n     result.pushKV(\"confirmations\", confirmations);\n-    result.pushKV(\"strippedsize\", (int)::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS));\n-    result.pushKV(\"size\", (int)::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION));\n+    result.pushKV(\"strippedsize\", (int)::GetSerializeSize(block, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS));\n+    result.pushKV(\"size\", (int)::GetSerializeSize(block, PROTOCOL_VERSION));\n     result.pushKV(\"weight\", (int)::GetBlockWeight(block));\n     result.pushKV(\"height\", blockindex->nHeight);\n     result.pushKV(\"version\", block.nVersion);\n@@ -160,8 +162,9 @@ static UniValue getblockcount(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n         throw std::runtime_error(\n-            \"getblockcount\\n\"\n-            \"\\nReturns the number of blocks in the longest blockchain.\\n\"\n+            RPCHelpMan{\"getblockcount\",\n+                \"\\nReturns the number of blocks in the longest blockchain.\\n\", {}}\n+                .ToString() +\n             \"\\nResult:\\n\"\n             \"n    (numeric) The current block count\\n\"\n             \"\\nExamples:\\n\"\n@@ -177,10 +180,11 @@ static UniValue getbestblockhash(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n         throw std::runtime_error(\n-            \"getbestblockhash\\n\"\n-            \"\\nReturns the hash of the best (tip) block in the longest blockchain.\\n\"\n+            RPCHelpMan{\"getbestblockhash\",\n+                \"\\nReturns the hash of the best (tip) block in the longest blockchain.\\n\", {}}\n+                .ToString() +\n             \"\\nResult:\\n\"\n-            \"\\\"hex\\\"      (string) the block hash hex encoded\\n\"\n+            \"\\\"hex\\\"      (string) the block hash, hex-encoded\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getbestblockhash\", \"\")\n             + HelpExampleRpc(\"getbestblockhash\", \"\")\n@@ -204,9 +208,13 @@ static UniValue waitfornewblock(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 1)\n         throw std::runtime_error(\n-            \"waitfornewblock (timeout)\\n\"\n-            \"\\nWaits for a specific new block and returns useful info about it.\\n\"\n-            \"\\nReturns the current block on timeout or exit.\\n\"\n+            RPCHelpMan{\"waitfornewblock\",\n+                \"\\nWaits for a specific new block and returns useful info about it.\\n\"\n+                \"\\nReturns the current block on timeout or exit.\\n\",\n+                {\n+                    {\"timeout\", RPCArg::Type::NUM, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. timeout (int, optional, default=0) Time in milliseconds to wait for a response. 0 indicates no timeout.\\n\"\n             \"\\nResult:\\n\"\n@@ -224,7 +232,7 @@ static UniValue waitfornewblock(const JSONRPCRequest& request)\n \n     CUpdatedBlock block;\n     {\n-        std::unique_lock<std::mutex> lock(cs_blockchange);\n+        WAIT_LOCK(cs_blockchange, lock);\n         block = latestblock;\n         if(timeout)\n             cond_blockchange.wait_for(lock, std::chrono::milliseconds(timeout), [&block]{return latestblock.height != block.height || latestblock.hash != block.hash || !IsRPCRunning(); });\n@@ -242,9 +250,14 @@ static UniValue waitforblock(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"waitforblock <blockhash> (timeout)\\n\"\n-            \"\\nWaits for a specific new block and returns useful info about it.\\n\"\n-            \"\\nReturns the current block on timeout or exit.\\n\"\n+            RPCHelpMan{\"waitforblock\",\n+                \"\\nWaits for a specific new block and returns useful info about it.\\n\"\n+                \"\\nReturns the current block on timeout or exit.\\n\",\n+                {\n+                    {\"blockhash\", RPCArg::Type::STR, false},\n+                    {\"timeout\", RPCArg::Type::NUM, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"blockhash\\\" (required, string) Block hash to wait for.\\n\"\n             \"2. timeout       (int, optional, default=0) Time in milliseconds to wait for a response. 0 indicates no timeout.\\n\"\n@@ -259,14 +272,14 @@ static UniValue waitforblock(const JSONRPCRequest& request)\n         );\n     int timeout = 0;\n \n-    uint256 hash = uint256S(request.params[0].get_str());\n+    uint256 hash(ParseHashV(request.params[0], \"blockhash\"));\n \n     if (!request.params[1].isNull())\n         timeout = request.params[1].get_int();\n \n     CUpdatedBlock block;\n     {\n-        std::unique_lock<std::mutex> lock(cs_blockchange);\n+        WAIT_LOCK(cs_blockchange, lock);\n         if(timeout)\n             cond_blockchange.wait_for(lock, std::chrono::milliseconds(timeout), [&hash]{return latestblock.hash == hash || !IsRPCRunning();});\n         else\n@@ -284,12 +297,17 @@ static UniValue waitforblockheight(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"waitforblockheight <height> (timeout)\\n\"\n-            \"\\nWaits for (at least) block height and returns the height and hash\\n\"\n-            \"of the current tip.\\n\"\n-            \"\\nReturns the current block on timeout or exit.\\n\"\n+            RPCHelpMan{\"waitforblockheight\",\n+                \"\\nWaits for (at least) block height and returns the height and hash\\n\"\n+                \"of the current tip.\\n\"\n+                \"\\nReturns the current block on timeout or exit.\\n\",\n+                {\n+                    {\"height\", RPCArg::Type::NUM, false},\n+                    {\"timeout\", RPCArg::Type::NUM, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n-            \"1. height  (required, int) Block height to wait for (int)\\n\"\n+            \"1. height  (int, required) Block height to wait for.\\n\"\n             \"2. timeout (int, optional, default=0) Time in milliseconds to wait for a response. 0 indicates no timeout.\\n\"\n             \"\\nResult:\\n\"\n             \"{                           (json object)\\n\"\n@@ -309,7 +327,7 @@ static UniValue waitforblockheight(const JSONRPCRequest& request)\n \n     CUpdatedBlock block;\n     {\n-        std::unique_lock<std::mutex> lock(cs_blockchange);\n+        WAIT_LOCK(cs_blockchange, lock);\n         if(timeout)\n             cond_blockchange.wait_for(lock, std::chrono::milliseconds(timeout), [&height]{return latestblock.height >= height || !IsRPCRunning();});\n         else\n@@ -326,8 +344,9 @@ static UniValue syncwithvalidationinterfacequeue(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 0) {\n         throw std::runtime_error(\n-            \"syncwithvalidationinterfacequeue\\n\"\n-            \"\\nWaits for the validation interface queue to catch up on everything that was there when we entered this function.\\n\"\n+            RPCHelpMan{\"syncwithvalidationinterfacequeue\",\n+                \"\\nWaits for the validation interface queue to catch up on everything that was there when we entered this function.\\n\", {}}\n+                .ToString() +\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"syncwithvalidationinterfacequeue\",\"\")\n             + HelpExampleRpc(\"syncwithvalidationinterfacequeue\",\"\")\n@@ -341,8 +360,9 @@ static UniValue getdifficulty(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n         throw std::runtime_error(\n-            \"getdifficulty\\n\"\n-            \"\\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.\\n\"\n+            RPCHelpMan{\"getdifficulty\",\n+                \"\\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.\\n\", {}}\n+                .ToString() +\n             \"\\nResult:\\n\"\n             \"n.nnn       (numeric) the proof-of-work difficulty as a multiple of the minimum difficulty.\\n\"\n             \"\\nExamples:\\n\"\n@@ -379,7 +399,8 @@ static std::string EntryDescriptionString()\n            \"       ... ]\\n\"\n            \"    \\\"spentby\\\" : [           (array) unconfirmed transactions spending outputs from this transaction\\n\"\n            \"        \\\"transactionid\\\",    (string) child transaction id\\n\"\n-           \"       ... ]\\n\";\n+           \"       ... ]\\n\"\n+           \"    \\\"bip125-replaceable\\\" : true|false,  (boolean) Whether this transaction could be replaced due to BIP125 (replace-by-fee)\\n\";\n }\n \n static void entryToJSON(UniValue &info, const CTxMemPoolEntry &e) EXCLUSIVE_LOCKS_REQUIRED(::mempool.cs)\n@@ -424,11 +445,22 @@ static void entryToJSON(UniValue &info, const CTxMemPoolEntry &e) EXCLUSIVE_LOCK\n     UniValue spent(UniValue::VARR);\n     const CTxMemPool::txiter &it = mempool.mapTx.find(tx.GetHash());\n     const CTxMemPool::setEntries &setChildren = mempool.GetMemPoolChildren(it);\n-    for (const CTxMemPool::txiter &childiter : setChildren) {\n+    for (CTxMemPool::txiter childiter : setChildren) {\n         spent.push_back(childiter->GetTx().GetHash().ToString());\n     }\n \n     info.pushKV(\"spentby\", spent);\n+\n+    // Add opt-in RBF status\n+    bool rbfStatus = false;\n+    RBFTransactionState rbfState = IsRBFOptIn(tx, mempool);\n+    if (rbfState == RBFTransactionState::UNKNOWN) {\n+        throw JSONRPCError(RPC_MISC_ERROR, \"Transaction is not in mempool\");\n+    } else if (rbfState == RBFTransactionState::REPLACEABLE_BIP125) {\n+        rbfStatus = true;\n+    }\n+\n+    info.pushKV(\"bip125-replaceable\", rbfStatus);\n }\n \n UniValue mempoolToJSON(bool fVerbose)\n@@ -463,8 +495,12 @@ static UniValue getrawmempool(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 1)\n         throw std::runtime_error(\n-            \"getrawmempool ( verbose )\\n\"\n-            \"\\nReturns all transaction ids in memory pool as a json array of string transaction ids.\\n\"\n+            RPCHelpMan{\"getrawmempool\",\n+                \"\\nReturns all transaction ids in memory pool as a json array of string transaction ids.\\n\",\n+                {\n+                    {\"verbose\", RPCArg::Type::BOOL, true},\n+                }}\n+                .ToString() +\n             \"\\nHint: use getmempoolentry to fetch a specific transaction from the mempool.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. verbose (boolean, optional, default=false) True for a json object, false for array of transaction ids\\n\"\n@@ -495,17 +531,22 @@ static UniValue getmempoolancestors(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n         throw std::runtime_error(\n-            \"getmempoolancestors txid (verbose)\\n\"\n-            \"\\nIf txid is in the mempool, returns all in-mempool ancestors.\\n\"\n+            RPCHelpMan{\"getmempoolancestors\",\n+                \"\\nIf txid is in the mempool, returns all in-mempool ancestors.\\n\",\n+                {\n+                    {\"txid\", RPCArg::Type::STR_HEX, false},\n+                    {\"verbose\", RPCArg::Type::BOOL, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"                 (string, required) The transaction id (must be in mempool)\\n\"\n             \"2. verbose                  (boolean, optional, default=false) True for a json object, false for array of transaction ids\\n\"\n-            \"\\nResult (for verbose=false):\\n\"\n+            \"\\nResult (for verbose = false):\\n\"\n             \"[                       (json array of strings)\\n\"\n             \"  \\\"transactionid\\\"           (string) The transaction id of an in-mempool ancestor transaction\\n\"\n             \"  ,...\\n\"\n             \"]\\n\"\n-            \"\\nResult (for verbose=true):\\n\"\n+            \"\\nResult (for verbose = true):\\n\"\n             \"{                           (json object)\\n\"\n             \"  \\\"transactionid\\\" : {       (json object)\\n\"\n             + EntryDescriptionString()\n@@ -559,17 +600,22 @@ static UniValue getmempooldescendants(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n         throw std::runtime_error(\n-            \"getmempooldescendants txid (verbose)\\n\"\n-            \"\\nIf txid is in the mempool, returns all in-mempool descendants.\\n\"\n+            RPCHelpMan{\"getmempooldescendants\",\n+                \"\\nIf txid is in the mempool, returns all in-mempool descendants.\\n\",\n+                {\n+                    {\"txid\", RPCArg::Type::STR_HEX, false},\n+                    {\"verbose\", RPCArg::Type::BOOL, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"                 (string, required) The transaction id (must be in mempool)\\n\"\n             \"2. verbose                  (boolean, optional, default=false) True for a json object, false for array of transaction ids\\n\"\n-            \"\\nResult (for verbose=false):\\n\"\n+            \"\\nResult (for verbose = false):\\n\"\n             \"[                       (json array of strings)\\n\"\n             \"  \\\"transactionid\\\"           (string) The transaction id of an in-mempool descendant transaction\\n\"\n             \"  ,...\\n\"\n             \"]\\n\"\n-            \"\\nResult (for verbose=true):\\n\"\n+            \"\\nResult (for verbose = true):\\n\"\n             \"{                           (json object)\\n\"\n             \"  \\\"transactionid\\\" : {       (json object)\\n\"\n             + EntryDescriptionString()\n@@ -623,8 +669,12 @@ static UniValue getmempoolentry(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1) {\n         throw std::runtime_error(\n-            \"getmempoolentry txid\\n\"\n-            \"\\nReturns mempool data for given transaction\\n\"\n+            RPCHelpMan{\"getmempoolentry\",\n+                \"\\nReturns mempool data for given transaction\\n\",\n+                {\n+                    {\"txid\", RPCArg::Type::STR_HEX, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"                   (string, required) The transaction id (must be in mempool)\\n\"\n             \"\\nResult:\\n\"\n@@ -656,8 +706,12 @@ static UniValue getblockhash(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n-            \"getblockhash height\\n\"\n-            \"\\nReturns hash of block in best-block-chain at height provided.\\n\"\n+            RPCHelpMan{\"getblockhash\",\n+                \"\\nReturns hash of block in best-block-chain at height provided.\\n\",\n+                {\n+                    {\"height\", RPCArg::Type::NUM, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. height         (numeric, required) The height index\\n\"\n             \"\\nResult:\\n\"\n@@ -681,12 +735,17 @@ static UniValue getblockheader(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getblockheader \\\"hash\\\" ( verbose )\\n\"\n-            \"\\nIf verbose is false, returns a string that is serialized, hex-encoded data for blockheader 'hash'.\\n\"\n-            \"If verbose is true, returns an Object with information about blockheader <hash>.\\n\"\n+            RPCHelpMan{\"getblockheader\",\n+                \"\\nIf verbose is false, returns a string that is serialized, hex-encoded data for blockheader 'hash'.\\n\"\n+                \"If verbose is true, returns an Object with information about blockheader <hash>.\\n\",\n+                {\n+                    {\"blockhash\", RPCArg::Type::STR_HEX, false},\n+                    {\"verbose\", RPCArg::Type::BOOL, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n-            \"1. \\\"hash\\\"          (string, required) The block hash\\n\"\n-            \"2. verbose           (boolean, optional, default=true) true for a json object, false for the hex encoded data\\n\"\n+            \"1. \\\"blockhash\\\"     (string, required) The block hash\\n\"\n+            \"2. verbose           (boolean, optional, default=true) true for a json object, false for the hex-encoded data\\n\"\n             \"\\nResult (for verbose = true):\\n\"\n             \"{\\n\"\n             \"  \\\"hash\\\" : \\\"hash\\\",     (string) the block hash (same as provided)\\n\"\n@@ -714,8 +773,7 @@ static UniValue getblockheader(const JSONRPCRequest& request)\n \n     LOCK(cs_main);\n \n-    std::string strHash = request.params[0].get_str();\n-    uint256 hash(uint256S(strHash));\n+    uint256 hash(ParseHashV(request.params[0], \"hash\"));\n \n     bool fVerbose = true;\n     if (!request.params[1].isNull())\n@@ -760,13 +818,18 @@ static UniValue getblock(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getblock \\\"blockhash\\\" ( verbosity ) \\n\"\n-            \"\\nIf verbosity is 0, returns a string that is serialized, hex-encoded data for block 'hash'.\\n\"\n-            \"If verbosity is 1, returns an Object with information about block <hash>.\\n\"\n-            \"If verbosity is 2, returns an Object with information about block <hash> and information about each transaction. \\n\"\n+            RPCHelpMan{\"getblock\",\n+                \"\\nIf verbosity is 0, returns a string that is serialized, hex-encoded data for block 'hash'.\\n\"\n+                \"If verbosity is 1, returns an Object with information about block <hash>.\\n\"\n+                \"If verbosity is 2, returns an Object with information about block <hash> and information about each transaction. \\n\",\n+                {\n+                    {\"blockhash\", RPCArg::Type::STR_HEX, false},\n+                    {\"verbosity\", RPCArg::Type::NUM, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"blockhash\\\"          (string, required) The block hash\\n\"\n-            \"2. verbosity              (numeric, optional, default=1) 0 for hex encoded data, 1 for a json object, and 2 for json object with transaction data\\n\"\n+            \"2. verbosity              (numeric, optional, default=1) 0 for hex-encoded data, 1 for a json object, and 2 for json object with transaction data\\n\"\n             \"\\nResult (for verbosity = 0):\\n\"\n             \"\\\"data\\\"             (string) A string that is serialized, hex-encoded data for block 'hash'.\\n\"\n             \"\\nResult (for verbosity = 1):\\n\"\n@@ -809,8 +872,7 @@ static UniValue getblock(const JSONRPCRequest& request)\n \n     LOCK(cs_main);\n \n-    std::string strHash = request.params[0].get_str();\n-    uint256 hash(uint256S(strHash));\n+    uint256 hash(ParseHashV(request.params[0], \"blockhash\"));\n \n     int verbosity = 1;\n     if (!request.params[1].isNull()) {\n@@ -913,7 +975,11 @@ static UniValue pruneblockchain(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n-            \"pruneblockchain\\n\"\n+            RPCHelpMan{\"pruneblockchain\", \"\",\n+                {\n+                    {\"height\", RPCArg::Type::NUM, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"height\\\"       (numeric, required) The block height to prune up to. May be set to a discrete height, or a unix timestamp\\n\"\n             \"                  to prune blocks whose block time is at least 2 hours older than the provided timestamp.\\n\"\n@@ -962,9 +1028,11 @@ static UniValue gettxoutsetinfo(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n         throw std::runtime_error(\n-            \"gettxoutsetinfo\\n\"\n-            \"\\nReturns statistics about the unspent transaction output set.\\n\"\n-            \"Note this call may take some time.\\n\"\n+            RPCHelpMan{\"gettxoutsetinfo\",\n+                \"\\nReturns statistics about the unspent transaction output set.\\n\"\n+                \"Note this call may take some time.\\n\",\n+                {}}\n+                .ToString() +\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"height\\\":n,     (numeric) The current block height (index)\\n\"\n@@ -1004,8 +1072,14 @@ UniValue gettxout(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 2 || request.params.size() > 3)\n         throw std::runtime_error(\n-            \"gettxout \\\"txid\\\" n ( include_mempool )\\n\"\n-            \"\\nReturns details about an unspent transaction output.\\n\"\n+            RPCHelpMan{\"gettxout\",\n+                \"\\nReturns details about an unspent transaction output.\\n\",\n+                {\n+                    {\"txid\", RPCArg::Type::STR, false},\n+                    {\"n\", RPCArg::Type::NUM, false},\n+                    {\"include_mempool\", RPCArg::Type::BOOL, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"             (string, required) The transaction id\\n\"\n             \"2. \\\"n\\\"                (numeric, required) vout number\\n\"\n@@ -1034,16 +1108,15 @@ UniValue gettxout(const JSONRPCRequest& request)\n             + HelpExampleCli(\"listunspent\", \"\") +\n             \"\\nView the details\\n\"\n             + HelpExampleCli(\"gettxout\", \"\\\"txid\\\" 1\") +\n-            \"\\nAs a json rpc call\\n\"\n+            \"\\nAs a JSON-RPC call\\n\"\n             + HelpExampleRpc(\"gettxout\", \"\\\"txid\\\", 1\")\n         );\n \n     LOCK(cs_main);\n \n     UniValue ret(UniValue::VOBJ);\n \n-    std::string strHash = request.params[0].get_str();\n-    uint256 hash(uint256S(strHash));\n+    uint256 hash(ParseHashV(request.params[0], \"txid\"));\n     int n = request.params[1].get_int();\n     COutPoint out(hash, n);\n     bool fMempool = true;\n@@ -1085,8 +1158,13 @@ static UniValue verifychain(const JSONRPCRequest& request)\n     int nCheckDepth = gArgs.GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS);\n     if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"verifychain ( checklevel nblocks )\\n\"\n-            \"\\nVerifies blockchain database.\\n\"\n+            RPCHelpMan{\"verifychain\",\n+                \"\\nVerifies blockchain database.\\n\",\n+                {\n+                    {\"checklevel\", RPCArg::Type::NUM, true},\n+                    {\"nblocks\", RPCArg::Type::NUM, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. checklevel   (numeric, optional, 0-4, default=\" + strprintf(\"%d\", nCheckLevel) + \") How thorough the block verification is.\\n\"\n             \"2. nblocks      (numeric, optional, default=\" + strprintf(\"%d\", nCheckDepth) + \", 0=all) The number of blocks to check.\\n\"\n@@ -1182,8 +1260,9 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n         throw std::runtime_error(\n-            \"getblockchaininfo\\n\"\n-            \"Returns an object containing various state info regarding blockchain processing.\\n\"\n+            RPCHelpMan{\"getblockchaininfo\",\n+                \"Returns an object containing various state info regarding blockchain processing.\\n\", {}}\n+                .ToString() +\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"chain\\\": \\\"xxxx\\\",              (string) current network name as defined in BIP70 (main, test, regtest)\\n\"\n@@ -1299,9 +1378,11 @@ static UniValue getchaintips(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n         throw std::runtime_error(\n-            \"getchaintips\\n\"\n-            \"Return information about all known tips in the block tree,\"\n-            \" including the main chain as well as orphaned branches.\\n\"\n+            RPCHelpMan{\"getchaintips\",\n+                \"Return information about all known tips in the block tree,\"\n+                \" including the main chain as well as orphaned branches.\\n\",\n+                {}}\n+                .ToString() +\n             \"\\nResult:\\n\"\n             \"[\\n\"\n             \"  {\\n\"\n@@ -1416,8 +1497,9 @@ static UniValue getmempoolinfo(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n         throw std::runtime_error(\n-            \"getmempoolinfo\\n\"\n-            \"\\nReturns details on the active state of the TX memory pool.\\n\"\n+            RPCHelpMan{\"getmempoolinfo\",\n+                \"\\nReturns details on the active state of the TX memory pool.\\n\", {}}\n+                .ToString() +\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"size\\\": xxxxx,               (numeric) Current tx count\\n\"\n@@ -1439,10 +1521,14 @@ static UniValue preciousblock(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n-            \"preciousblock \\\"blockhash\\\"\\n\"\n-            \"\\nTreats a block as if it were received before others with the same work.\\n\"\n-            \"\\nA later preciousblock call can override the effect of an earlier one.\\n\"\n-            \"\\nThe effects of preciousblock are not retained across restarts.\\n\"\n+            RPCHelpMan{\"preciousblock\",\n+                \"\\nTreats a block as if it were received before others with the same work.\\n\"\n+                \"\\nA later preciousblock call can override the effect of an earlier one.\\n\"\n+                \"\\nThe effects of preciousblock are not retained across restarts.\\n\",\n+                {\n+                    {\"blockhash\", RPCArg::Type::STR_HEX, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"blockhash\\\"   (string, required) the hash of the block to mark as precious\\n\"\n             \"\\nResult:\\n\"\n@@ -1451,8 +1537,7 @@ static UniValue preciousblock(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"preciousblock\", \"\\\"blockhash\\\"\")\n         );\n \n-    std::string strHash = request.params[0].get_str();\n-    uint256 hash(uint256S(strHash));\n+    uint256 hash(ParseHashV(request.params[0], \"blockhash\"));\n     CBlockIndex* pblockindex;\n \n     {\n@@ -1477,8 +1562,12 @@ static UniValue invalidateblock(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n-            \"invalidateblock \\\"blockhash\\\"\\n\"\n-            \"\\nPermanently marks a block as invalid, as if it violated a consensus rule.\\n\"\n+            RPCHelpMan{\"invalidateblock\",\n+                \"\\nPermanently marks a block as invalid, as if it violated a consensus rule.\\n\",\n+                {\n+                    {\"blockhash\", RPCArg::Type::STR_HEX, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"blockhash\\\"   (string, required) the hash of the block to mark as invalid\\n\"\n             \"\\nResult:\\n\"\n@@ -1487,8 +1576,7 @@ static UniValue invalidateblock(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"invalidateblock\", \"\\\"blockhash\\\"\")\n         );\n \n-    std::string strHash = request.params[0].get_str();\n-    uint256 hash(uint256S(strHash));\n+    uint256 hash(ParseHashV(request.params[0], \"blockhash\"));\n     CValidationState state;\n \n     {\n@@ -1516,9 +1604,13 @@ static UniValue reconsiderblock(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n-            \"reconsiderblock \\\"blockhash\\\"\\n\"\n-            \"\\nRemoves invalidity status of a block and its descendants, reconsider them for activation.\\n\"\n-            \"This can be used to undo the effects of invalidateblock.\\n\"\n+            RPCHelpMan{\"reconsiderblock\",\n+                \"\\nRemoves invalidity status of a block and its descendants, reconsider them for activation.\\n\"\n+                \"This can be used to undo the effects of invalidateblock.\\n\",\n+                {\n+                    {\"blockhash\", RPCArg::Type::STR_HEX, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"blockhash\\\"   (string, required) the hash of the block to reconsider\\n\"\n             \"\\nResult:\\n\"\n@@ -1527,8 +1619,7 @@ static UniValue reconsiderblock(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"reconsiderblock\", \"\\\"blockhash\\\"\")\n         );\n \n-    std::string strHash = request.params[0].get_str();\n-    uint256 hash(uint256S(strHash));\n+    uint256 hash(ParseHashV(request.params[0], \"blockhash\"));\n \n     {\n         LOCK(cs_main);\n@@ -1554,8 +1645,13 @@ static UniValue getchaintxstats(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getchaintxstats ( nblocks blockhash )\\n\"\n-            \"\\nCompute statistics about the total number and rate of transactions in the chain.\\n\"\n+            RPCHelpMan{\"getchaintxstats\",\n+                \"\\nCompute statistics about the total number and rate of transactions in the chain.\\n\",\n+                {\n+                    {\"nblocks\", RPCArg::Type::NUM, true},\n+                    {\"blockhash\", RPCArg::Type::STR_HEX, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. nblocks      (numeric, optional) Size of the window in number of blocks (default: one month).\\n\"\n             \"2. \\\"blockhash\\\"  (string, optional) The hash of the block that ends the window.\\n\"\n@@ -1581,7 +1677,7 @@ static UniValue getchaintxstats(const JSONRPCRequest& request)\n         LOCK(cs_main);\n         pindex = chainActive.Tip();\n     } else {\n-        uint256 hash = uint256S(request.params[1].get_str());\n+        uint256 hash(ParseHashV(request.params[1], \"blockhash\"));\n         LOCK(cs_main);\n         pindex = LookupBlockIndex(hash);\n         if (!pindex) {\n@@ -1684,10 +1780,20 @@ static UniValue getblockstats(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 4) {\n         throw std::runtime_error(\n-            \"getblockstats hash_or_height ( stats )\\n\"\n-            \"\\nCompute per block statistics for a given window. All amounts are in satoshis.\\n\"\n-            \"It won't work for some heights with pruning.\\n\"\n-            \"It won't work without -txindex for utxo_size_inc, *fee or *feerate stats.\\n\"\n+            RPCHelpMan{\"getblockstats\",\n+                \"\\nCompute per block statistics for a given window. All amounts are in satoshis.\\n\"\n+                \"It won't work for some heights with pruning.\\n\"\n+                \"It won't work without -txindex for utxo_size_inc, *fee or *feerate stats.\\n\",\n+                {\n+                    {\"hash_or_height\", RPCArg::Type::NUM, false},\n+                    {\"stats\", RPCArg::Type::ARR,\n+                        {\n+                            {\"height\", RPCArg::Type::STR, true},\n+                            {\"time\", RPCArg::Type::STR, true},\n+                        },\n+                        true, \"stats\"},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"hash_or_height\\\"     (string or numeric, required) The block hash or height of the target block\\n\"\n             \"2. \\\"stats\\\"              (array,  optional) Values to plot, by default all values (see result below)\\n\"\n@@ -1755,8 +1861,7 @@ static UniValue getblockstats(const JSONRPCRequest& request)\n \n         pindex = chainActive[height];\n     } else {\n-        const std::string strHash = request.params[0].get_str();\n-        const uint256 hash(uint256S(strHash));\n+        const uint256 hash(ParseHashV(request.params[0], \"hash_or_height\"));\n         pindex = LookupBlockIndex(hash);\n         if (!pindex) {\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n@@ -1791,6 +1896,10 @@ static UniValue getblockstats(const JSONRPCRequest& request)\n     const bool do_calculate_weight = do_all || SetHasKeys(stats, \"total_weight\", \"avgfeerate\", \"swtotal_weight\", \"avgfeerate\", \"feerate_percentiles\", \"minfeerate\", \"maxfeerate\");\n     const bool do_calculate_sw = do_all || SetHasKeys(stats, \"swtxs\", \"swtotal_size\", \"swtotal_weight\");\n \n+    if (loop_inputs && !g_txindex) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more of the selected stats requires -txindex enabled\");\n+    }\n+\n     CAmount maxfee = 0;\n     CAmount maxfeerate = 0;\n     CAmount minfee = MAX_MONEY;\n@@ -1818,7 +1927,7 @@ static UniValue getblockstats(const JSONRPCRequest& request)\n         if (loop_outputs) {\n             for (const CTxOut& out : tx->vout) {\n                 tx_total_out += out.nValue;\n-                utxo_size_inc += GetSerializeSize(out, SER_NETWORK, PROTOCOL_VERSION) + PER_UTXO_OVERHEAD;\n+                utxo_size_inc += GetSerializeSize(out, PROTOCOL_VERSION) + PER_UTXO_OVERHEAD;\n             }\n         }\n \n@@ -1854,10 +1963,6 @@ static UniValue getblockstats(const JSONRPCRequest& request)\n         }\n \n         if (loop_inputs) {\n-\n-            if (!g_txindex) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, \"One or more of the selected stats requires -txindex enabled\");\n-            }\n             CAmount tx_total_in = 0;\n             for (const CTxIn& in : tx->vin) {\n                 CTransactionRef tx_in;\n@@ -1869,7 +1974,7 @@ static UniValue getblockstats(const JSONRPCRequest& request)\n                 CTxOut prevoutput = tx_in->vout[in.prevout.n];\n \n                 tx_total_in += prevoutput.nValue;\n-                utxo_size_inc -= GetSerializeSize(prevoutput, SER_NETWORK, PROTOCOL_VERSION) + PER_UTXO_OVERHEAD;\n+                utxo_size_inc -= GetSerializeSize(prevoutput, PROTOCOL_VERSION) + PER_UTXO_OVERHEAD;\n             }\n \n             CAmount txfee = tx_total_in - tx_total_out;\n@@ -1949,8 +2054,9 @@ static UniValue savemempool(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0) {\n         throw std::runtime_error(\n-            \"savemempool\\n\"\n-            \"\\nDumps the mempool to disk. It will fail until the previous dump is fully loaded.\\n\"\n+            RPCHelpMan{\"savemempool\",\n+                \"\\nDumps the mempool to disk. It will fail until the previous dump is fully loaded.\\n\", {}}\n+                .ToString() +\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"savemempool\", \"\")\n             + HelpExampleRpc(\"savemempool\", \"\")\n@@ -2032,20 +2138,34 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"scantxoutset <action> ( <scanobjects> )\\n\"\n-            \"\\nEXPERIMENTAL warning: this call may be removed or changed in future releases.\\n\"\n-            \"\\nScans the unspent transaction output set for entries that match certain output descriptors.\\n\"\n-            \"Examples of output descriptors are:\\n\"\n-            \"    addr(<address>)                      Outputs whose scriptPubKey corresponds to the specified address (does not include P2PK)\\n\"\n-            \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n-            \"    combo(<pubkey>)                      P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH outputs for the given pubkey\\n\"\n-            \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n-            \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n-            \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n-            \"or more path elements separated by \\\"/\\\", and optionally ending in \\\"/*\\\" (unhardened), or \\\"/*'\\\" or \\\"/*h\\\" (hardened) to specify all\\n\"\n-            \"unhardened or hardened child keys.\\n\"\n-            \"In the latter case, a range needs to be specified by below if different from 1000.\\n\"\n-            \"For more information on output descriptors, see the documentation at TODO\\n\"\n+            RPCHelpMan{\"scantxoutset\",\n+                \"\\nEXPERIMENTAL warning: this call may be removed or changed in future releases.\\n\"\n+                \"\\nScans the unspent transaction output set for entries that match certain output descriptors.\\n\"\n+                \"Examples of output descriptors are:\\n\"\n+                \"    addr(<address>)                      Outputs whose scriptPubKey corresponds to the specified address (does not include P2PK)\\n\"\n+                \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+                \"    combo(<pubkey>)                      P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH outputs for the given pubkey\\n\"\n+                \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+                \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+                \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+                \"or more path elements separated by \\\"/\\\", and optionally ending in \\\"/*\\\" (unhardened), or \\\"/*'\\\" or \\\"/*h\\\" (hardened) to specify all\\n\"\n+                \"unhardened or hardened child keys.\\n\"\n+                \"In the latter case, a range needs to be specified by below if different from 1000.\\n\"\n+                \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\",\n+                {\n+                    {\"action\", RPCArg::Type::STR, false},\n+                    {\"scanobjects\", RPCArg::Type::ARR,\n+                        {\n+                            {\"descriptor\", RPCArg::Type::OBJ,\n+                                {\n+                                    {\"desc\", RPCArg::Type::STR, false},\n+                                    {\"range\", RPCArg::Type::NUM, true},\n+                                },\n+                                false, \"scanobjects\"},\n+                        },\n+                        false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"action\\\"                       (string, required) The action to execute\\n\"\n             \"                                      \\\"start\\\" for starting a scan\\n\"\n@@ -2067,6 +2187,7 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n             \"    \\\"txid\\\" : \\\"transactionid\\\",     (string) The transaction id\\n\"\n             \"    \\\"vout\\\": n,                    (numeric) the vout value\\n\"\n             \"    \\\"scriptPubKey\\\" : \\\"script\\\",    (string) the script key\\n\"\n+            \"    \\\"desc\\\" : \\\"descriptor\\\",        (string) A specialized descriptor for the matched scriptPubKey\\n\"\n             \"    \\\"amount\\\" : x.xxx,             (numeric) The total amount in \" + CURRENCY_UNIT + \" of the unspent output\\n\"\n             \"    \\\"height\\\" : n,                 (numeric) Height of the unspent transaction output\\n\"\n             \"   }\\n\"\n@@ -2101,6 +2222,7 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Scan already in progress, use action \\\"abort\\\" or \\\"status\\\"\");\n         }\n         std::set<CScript> needles;\n+        std::map<CScript, std::string> descriptors;\n         CAmount total_in = 0;\n \n         // loop through the scan objects\n@@ -2133,7 +2255,11 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n                 if (!desc->Expand(i, provider, scripts, provider)) {\n                     throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys: '%s'\", desc_str));\n                 }\n-                needles.insert(scripts.begin(), scripts.end());\n+                for (const auto& script : scripts) {\n+                    std::string inferred = InferDescriptor(script, provider)->ToString();\n+                    needles.emplace(script);\n+                    descriptors.emplace(std::move(script), std::move(inferred));\n+                }\n             }\n         }\n \n@@ -2166,6 +2292,7 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n             unspent.pushKV(\"txid\", outpoint.hash.GetHex());\n             unspent.pushKV(\"vout\", (int32_t)outpoint.n);\n             unspent.pushKV(\"scriptPubKey\", HexStr(txo.scriptPubKey.begin(), txo.scriptPubKey.end()));\n+            unspent.pushKV(\"desc\", descriptors[txo.scriptPubKey]);\n             unspent.pushKV(\"amount\", ValueFromAmount(txo.nValue));\n             unspent.pushKV(\"height\", (int32_t)coin.nHeight);\n \n@@ -2179,6 +2306,7 @@ UniValue scantxoutset(const JSONRPCRequest& request)\n     return result;\n }\n \n+// clang-format off\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         argNames\n   //  --------------------- ------------------------  -----------------------  ----------\n@@ -2214,6 +2342,7 @@ static const CRPCCommand commands[] =\n     { \"hidden\",             \"waitforblockheight\",     &waitforblockheight,     {\"height\",\"timeout\"} },\n     { \"hidden\",             \"syncwithvalidationinterfacequeue\", &syncwithvalidationinterfacequeue, {} },\n };\n+// clang-format on\n \n void RegisterBlockchainRPCCommands(CRPCTable &t)\n {"
      },
      {
        "sha": "add335eb8a899d8b49f8603cf060e22e9bead808",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -16,8 +16,7 @@ class UniValue;\n static constexpr int NUM_GETBLOCKSTATS_PERCENTILES = 5;\n \n /**\n- * Get the difficulty of the net wrt to the given block index, or the chain tip if\n- * not provided.\n+ * Get the difficulty of the net wrt to the given block index.\n  *\n  * @return A floating point number that is a multiple of the main net minimum\n  * difficulty (4295032833 hashes)."
      },
      {
        "sha": "2b99808c07d58adaf951cc5d5621dfcaf1597433",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 16,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -5,7 +5,7 @@\n \n #include <rpc/client.h>\n #include <rpc/protocol.h>\n-#include <util.h>\n+#include <util/system.h>\n \n #include <set>\n #include <stdint.h>\n@@ -18,6 +18,7 @@ class CRPCConvertParam\n     std::string paramName;  //!< parameter name\n };\n \n+// clang-format off\n /**\n  * Specify a (method, idx, name) here if the argument is a non-string RPC\n  * argument and needs to be converted from JSON.\n@@ -40,15 +41,10 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"settxfee\", 0, \"amount\" },\n     { \"sethdseed\", 0, \"newkeypool\" },\n     { \"getreceivedbyaddress\", 1, \"minconf\" },\n-    { \"getreceivedbyaccount\", 1, \"minconf\" },\n     { \"getreceivedbylabel\", 1, \"minconf\" },\n     { \"listreceivedbyaddress\", 0, \"minconf\" },\n     { \"listreceivedbyaddress\", 1, \"include_empty\" },\n     { \"listreceivedbyaddress\", 2, \"include_watchonly\" },\n-    { \"listreceivedbyaddress\", 3, \"address_filter\" },\n-    { \"listreceivedbyaccount\", 0, \"minconf\" },\n-    { \"listreceivedbyaccount\", 1, \"include_empty\" },\n-    { \"listreceivedbyaccount\", 2, \"include_watchonly\" },\n     { \"listreceivedbylabel\", 0, \"minconf\" },\n     { \"listreceivedbylabel\", 1, \"include_empty\" },\n     { \"listreceivedbylabel\", 2, \"include_watchonly\" },\n@@ -59,15 +55,9 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"waitforblockheight\", 1, \"timeout\" },\n     { \"waitforblock\", 1, \"timeout\" },\n     { \"waitfornewblock\", 0, \"timeout\" },\n-    { \"move\", 2, \"amount\" },\n-    { \"move\", 3, \"minconf\" },\n-    { \"sendfrom\", 2, \"amount\" },\n-    { \"sendfrom\", 3, \"minconf\" },\n     { \"listtransactions\", 1, \"count\" },\n     { \"listtransactions\", 2, \"skip\" },\n     { \"listtransactions\", 3, \"include_watchonly\" },\n-    { \"listaccounts\", 0, \"minconf\" },\n-    { \"listaccounts\", 1, \"include_watchonly\" },\n     { \"walletpassphrase\", 1, \"timeout\" },\n     { \"getblocktemplate\", 0, \"template_request\" },\n     { \"listsinceblock\", 1, \"target_confirmations\" },\n@@ -113,9 +103,8 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"walletcreatefundedpsbt\", 0, \"inputs\" },\n     { \"walletcreatefundedpsbt\", 1, \"outputs\" },\n     { \"walletcreatefundedpsbt\", 2, \"locktime\" },\n-    { \"walletcreatefundedpsbt\", 3, \"replaceable\" },\n-    { \"walletcreatefundedpsbt\", 4, \"options\" },\n-    { \"walletcreatefundedpsbt\", 5, \"bip32derivs\" },\n+    { \"walletcreatefundedpsbt\", 3, \"options\" },\n+    { \"walletcreatefundedpsbt\", 4, \"bip32derivs\" },\n     { \"walletprocesspsbt\", 1, \"sign\" },\n     { \"walletprocesspsbt\", 3, \"bip32derivs\" },\n     { \"createpsbt\", 0, \"inputs\" },\n@@ -158,7 +147,6 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"logging\", 0, \"include\" },\n     { \"logging\", 1, \"exclude\" },\n     { \"disconnectnode\", 1, \"nodeid\" },\n-    { \"addwitnessaddress\", 1, \"p2sh\" },\n     // Echo with conversion (For testing only)\n     { \"echojson\", 0, \"arg0\" },\n     { \"echojson\", 1, \"arg1\" },\n@@ -173,7 +161,9 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"rescanblockchain\", 0, \"start_height\"},\n     { \"rescanblockchain\", 1, \"stop_height\"},\n     { \"createwallet\", 1, \"disable_private_keys\"},\n+    { \"getnodeaddresses\", 0, \"count\"},\n };\n+// clang-format on\n \n class CRPCConvertTable\n {"
      },
      {
        "sha": "c0287ec17f0f5c4c13cb97a1ff4bac4952362508",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 108,
        "deletions": 60,
        "changes": 168,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -18,12 +18,14 @@\n #include <rpc/blockchain.h>\n #include <rpc/mining.h>\n #include <rpc/server.h>\n+#include <rpc/util.h>\n #include <shutdown.h>\n #include <txmempool.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n #include <validation.h>\n #include <validationinterface.h>\n+#include <versionbitsinfo.h>\n #include <warnings.h>\n \n #include <memory>\n@@ -85,10 +87,15 @@ static UniValue getnetworkhashps(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getnetworkhashps ( nblocks height )\\n\"\n-            \"\\nReturns the estimated network hashes per second based on the last n blocks.\\n\"\n-            \"Pass in [blocks] to override # of blocks, -1 specifies since last difficulty change.\\n\"\n-            \"Pass in [height] to estimate the network speed at the time when a certain block was found.\\n\"\n+            RPCHelpMan{\"getnetworkhashps\",\n+                \"\\nReturns the estimated network hashes per second based on the last n blocks.\\n\"\n+                \"Pass in [blocks] to override # of blocks, -1 specifies since last difficulty change.\\n\"\n+                \"Pass in [height] to estimate the network speed at the time when a certain block was found.\\n\",\n+                {\n+                    {\"nblocks\", RPCArg::Type::NUM, true},\n+                    {\"height\", RPCArg::Type::NUM, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. nblocks     (numeric, optional, default=120) The number of blocks, or -1 for blocks since last difficulty change.\\n\"\n             \"2. height      (numeric, optional, default=-1) To estimate at the time of the given height.\\n\"\n@@ -155,8 +162,14 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 2 || request.params.size() > 3)\n         throw std::runtime_error(\n-            \"generatetoaddress nblocks address (maxtries)\\n\"\n-            \"\\nMine blocks immediately to a specified address (before the RPC call returns)\\n\"\n+            RPCHelpMan{\"generatetoaddress\",\n+                \"\\nMine blocks immediately to a specified address (before the RPC call returns)\\n\",\n+                {\n+                    {\"nblocks\", RPCArg::Type::NUM, false},\n+                    {\"address\", RPCArg::Type::STR, false},\n+                    {\"maxtries\", RPCArg::Type::NUM, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. nblocks      (numeric, required) How many blocks are generated immediately.\\n\"\n             \"2. address      (string, required) The address to send the newly generated bitcoin to.\\n\"\n@@ -166,6 +179,8 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n             \"\\nExamples:\\n\"\n             \"\\nGenerate 11 blocks to myaddress\\n\"\n             + HelpExampleCli(\"generatetoaddress\", \"11 \\\"myaddress\\\"\")\n+            + \"If you are running the bitcoin core wallet, you can get a new address to send the newly generated bitcoin to with:\\n\"\n+            + HelpExampleCli(\"getnewaddress\", \"\")\n         );\n \n     int nGenerate = request.params[0].get_int();\n@@ -189,8 +204,9 @@ static UniValue getmininginfo(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n         throw std::runtime_error(\n-            \"getmininginfo\\n\"\n-            \"\\nReturns a json object containing mining-related information.\"\n+            RPCHelpMan{\"getmininginfo\",\n+                \"\\nReturns a json object containing mining-related information.\", {}}\n+                .ToString() +\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"blocks\\\": nnn,             (numeric) The current block\\n\"\n@@ -228,8 +244,14 @@ static UniValue prioritisetransaction(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 3)\n         throw std::runtime_error(\n-            \"prioritisetransaction <txid> <dummy value> <fee delta>\\n\"\n-            \"Accepts the transaction into mined blocks at a higher (or lower) priority\\n\"\n+            RPCHelpMan{\"prioritisetransaction\",\n+                \"Accepts the transaction into mined blocks at a higher (or lower) priority\\n\",\n+                {\n+                    {\"txid\", RPCArg::Type::STR, false},\n+                    {\"dummy\", RPCArg::Type::NUM, false},\n+                    {\"fee_delta\", RPCArg::Type::NUM, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"       (string, required) The transaction id.\\n\"\n             \"2. dummy          (numeric, optional) API-Compatibility for previous API. Must be zero or null.\\n\"\n@@ -247,7 +269,7 @@ static UniValue prioritisetransaction(const JSONRPCRequest& request)\n \n     LOCK(cs_main);\n \n-    uint256 hash = ParseHashStr(request.params[0].get_str(), \"txid\");\n+    uint256 hash(ParseHashV(request.params[0], \"txid\"));\n     CAmount nAmount = request.params[2].get_int64();\n \n     if (!(request.params[1].isNull() || request.params[1].get_real() == 0)) {\n@@ -291,15 +313,32 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 1)\n         throw std::runtime_error(\n-            \"getblocktemplate ( TemplateRequest )\\n\"\n-            \"\\nIf the request parameters include a 'mode' key, that is used to explicitly select between the default 'template' request or a 'proposal'.\\n\"\n-            \"It returns data needed to construct a block to work on.\\n\"\n-            \"For full specification, see BIPs 22, 23, 9, and 145:\\n\"\n-            \"    https://github.com/bitcoin/bips/blob/master/bip-0022.mediawiki\\n\"\n-            \"    https://github.com/bitcoin/bips/blob/master/bip-0023.mediawiki\\n\"\n-            \"    https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki#getblocktemplate_changes\\n\"\n-            \"    https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki\\n\"\n-\n+            RPCHelpMan{\"getblocktemplate\",\n+                \"\\nIf the request parameters include a 'mode' key, that is used to explicitly select between the default 'template' request or a 'proposal'.\\n\"\n+                \"It returns data needed to construct a block to work on.\\n\"\n+                \"For full specification, see BIPs 22, 23, 9, and 145:\\n\"\n+                \"    https://github.com/bitcoin/bips/blob/master/bip-0022.mediawiki\\n\"\n+                \"    https://github.com/bitcoin/bips/blob/master/bip-0023.mediawiki\\n\"\n+                \"    https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki#getblocktemplate_changes\\n\"\n+                \"    https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki\\n\",\n+                {\n+                    {\"template_request\", RPCArg::Type::OBJ,\n+                        {\n+                            {\"mode\", RPCArg::Type::STR, true},\n+                            {\"capabilities\", RPCArg::Type::ARR,\n+                                {\n+                                    {\"support\", RPCArg::Type::STR, true},\n+                                },\n+                                true},\n+                            {\"rules\", RPCArg::Type::ARR,\n+                                {\n+                                    {\"support\", RPCArg::Type::STR, true},\n+                                },\n+                                true},\n+                        },\n+                        true, \"\\\"template_request\\\"\"},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. template_request         (json object, optional) A json object in the following spec\\n\"\n             \"     {\\n\"\n@@ -361,8 +400,8 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n             \"}\\n\"\n \n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getblocktemplate\", \"\")\n-            + HelpExampleRpc(\"getblocktemplate\", \"\")\n+            + HelpExampleCli(\"getblocktemplate\", \"{\\\"rules\\\": [\\\"segwit\\\"]}\")\n+            + HelpExampleRpc(\"getblocktemplate\", \"{\\\"rules\\\": [\\\"segwit\\\"]}\")\n          );\n \n     LOCK(cs_main);\n@@ -455,7 +494,7 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n             // Format: <hashBestChain><nTransactionsUpdatedLast>\n             std::string lpstr = lpval.get_str();\n \n-            hashWatchedChain.SetHex(lpstr.substr(0, 64));\n+            hashWatchedChain = ParseHashV(lpstr.substr(0, 64), \"longpollid\");\n             nTransactionsUpdatedLastLP = atoi64(lpstr.substr(64));\n         }\n         else\n@@ -470,7 +509,7 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n         {\n             checktxtime = std::chrono::steady_clock::now() + std::chrono::minutes(1);\n \n-            WaitableLock lock(g_best_block_mutex);\n+            WAIT_LOCK(g_best_block_mutex, lock);\n             while (g_best_block == hashWatchedChain && IsRPCRunning())\n             {\n                 if (g_best_block_cv.wait_until(lock, checktxtime) == std::cv_status::timeout)\n@@ -699,10 +738,14 @@ static UniValue submitblock(const JSONRPCRequest& request)\n     // We allow 2 arguments for compliance with BIP22. Argument 2 is ignored.\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n         throw std::runtime_error(\n-            \"submitblock \\\"hexdata\\\"  ( \\\"dummy\\\" )\\n\"\n-            \"\\nAttempts to submit new block to network.\\n\"\n-            \"See https://en.bitcoin.it/wiki/BIP_0022 for full specification.\\n\"\n-\n+            RPCHelpMan{\"submitblock\",\n+                \"\\nAttempts to submit new block to network.\\n\"\n+                \"See https://en.bitcoin.it/wiki/BIP_0022 for full specification.\\n\",\n+                {\n+                    {\"hexdata\", RPCArg::Type::STR_HEX, false},\n+                    {\"dummy\", RPCArg::Type::STR, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments\\n\"\n             \"1. \\\"hexdata\\\"        (string, required) the hex-encoded block data to submit\\n\"\n             \"2. \\\"dummy\\\"          (optional) dummy value, for compatibility with BIP22. This value is ignored.\\n\"\n@@ -750,11 +793,7 @@ static UniValue submitblock(const JSONRPCRequest& request)\n     RegisterValidationInterface(&sc);\n     bool accepted = ProcessNewBlock(Params(), blockptr, /* fForceProcessing */ true, /* fNewBlock */ &new_block);\n     UnregisterValidationInterface(&sc);\n-    if (!new_block) {\n-        if (!accepted) {\n-            // TODO Maybe pass down fNewBlock to AcceptBlockHeader, so it is properly set to true in this case?\n-            return \"invalid\";\n-        }\n+    if (!new_block && accepted) {\n         return \"duplicate\";\n     }\n     if (!sc.found) {\n@@ -767,9 +806,13 @@ static UniValue submitheader(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1) {\n         throw std::runtime_error(\n-            \"submitheader \\\"hexdata\\\"\\n\"\n-            \"\\nDecode the given hexdata as a header and submit it as a candidate chain tip if valid.\"\n-            \"\\nThrows when the header is invalid.\\n\"\n+            RPCHelpMan{\"submitheader\",\n+                \"\\nDecode the given hexdata as a header and submit it as a candidate chain tip if valid.\"\n+                \"\\nThrows when the header is invalid.\\n\",\n+                {\n+                    {\"hexdata\", RPCArg::Type::STR_HEX, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments\\n\"\n             \"1. \\\"hexdata\\\"        (string, required) the hex-encoded block header data\\n\"\n             \"\\nResult:\\n\"\n@@ -799,21 +842,20 @@ static UniValue submitheader(const JSONRPCRequest& request)\n     throw JSONRPCError(RPC_VERIFY_ERROR, state.GetRejectReason());\n }\n \n-static UniValue estimatefee(const JSONRPCRequest& request)\n-{\n-    throw JSONRPCError(RPC_METHOD_DEPRECATED, \"estimatefee was removed in v0.17.\\n\"\n-        \"Clients should use estimatesmartfee.\");\n-}\n-\n static UniValue estimatesmartfee(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"estimatesmartfee conf_target (\\\"estimate_mode\\\")\\n\"\n-            \"\\nEstimates the approximate fee per kilobyte needed for a transaction to begin\\n\"\n-            \"confirmation within conf_target blocks if possible and return the number of blocks\\n\"\n-            \"for which the estimate is valid. Uses virtual transaction size as defined\\n\"\n-            \"in BIP 141 (witness data is discounted).\\n\"\n+            RPCHelpMan{\"estimatesmartfee\",\n+                \"\\nEstimates the approximate fee per kilobyte needed for a transaction to begin\\n\"\n+                \"confirmation within conf_target blocks if possible and return the number of blocks\\n\"\n+                \"for which the estimate is valid. Uses virtual transaction size as defined\\n\"\n+                \"in BIP 141 (witness data is discounted).\\n\",\n+                {\n+                    {\"conf_target\", RPCArg::Type::NUM, false},\n+                    {\"estimate_mode\", RPCArg::Type::STR, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. conf_target     (numeric) Confirmation target in blocks (1 - 1008)\\n\"\n             \"2. \\\"estimate_mode\\\" (string, optional, default=CONSERVATIVE) The fee estimate mode.\\n\"\n@@ -822,7 +864,7 @@ static UniValue estimatesmartfee(const JSONRPCRequest& request)\n             \"                   higher feerate and is more likely to be sufficient for the desired\\n\"\n             \"                   target, but is not as responsive to short term drops in the\\n\"\n             \"                   prevailing fee market.  Must be one of:\\n\"\n-            \"       \\\"UNSET\\\" (defaults to CONSERVATIVE)\\n\"\n+            \"       \\\"UNSET\\\"\\n\"\n             \"       \\\"ECONOMICAL\\\"\\n\"\n             \"       \\\"CONSERVATIVE\\\"\\n\"\n             \"\\nResult:\\n\"\n@@ -870,14 +912,19 @@ static UniValue estimaterawfee(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"estimaterawfee conf_target (threshold)\\n\"\n-            \"\\nWARNING: This interface is unstable and may disappear or change!\\n\"\n-            \"\\nWARNING: This is an advanced API call that is tightly coupled to the specific\\n\"\n-            \"         implementation of fee estimation. The parameters it can be called with\\n\"\n-            \"         and the results it returns will change if the internal implementation changes.\\n\"\n-            \"\\nEstimates the approximate fee per kilobyte needed for a transaction to begin\\n\"\n-            \"confirmation within conf_target blocks if possible. Uses virtual transaction size as\\n\"\n-            \"defined in BIP 141 (witness data is discounted).\\n\"\n+            RPCHelpMan{\"estimaterawfee\",\n+                \"\\nWARNING: This interface is unstable and may disappear or change!\\n\"\n+                \"\\nWARNING: This is an advanced API call that is tightly coupled to the specific\\n\"\n+                \"         implementation of fee estimation. The parameters it can be called with\\n\"\n+                \"         and the results it returns will change if the internal implementation changes.\\n\"\n+                \"\\nEstimates the approximate fee per kilobyte needed for a transaction to begin\\n\"\n+                \"confirmation within conf_target blocks if possible. Uses virtual transaction size as\\n\"\n+                \"defined in BIP 141 (witness data is discounted).\\n\",\n+                {\n+                    {\"conf_target\", RPCArg::Type::NUM, false},\n+                    {\"threshold\", RPCArg::Type::NUM, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. conf_target (numeric) Confirmation target in blocks (1 - 1008)\\n\"\n             \"2. threshold   (numeric, optional) The proportion of transactions in a given feerate range that must have been\\n\"\n@@ -922,7 +969,7 @@ static UniValue estimaterawfee(const JSONRPCRequest& request)\n \n     UniValue result(UniValue::VOBJ);\n \n-    for (FeeEstimateHorizon horizon : {FeeEstimateHorizon::SHORT_HALFLIFE, FeeEstimateHorizon::MED_HALFLIFE, FeeEstimateHorizon::LONG_HALFLIFE}) {\n+    for (const FeeEstimateHorizon horizon : {FeeEstimateHorizon::SHORT_HALFLIFE, FeeEstimateHorizon::MED_HALFLIFE, FeeEstimateHorizon::LONG_HALFLIFE}) {\n         CFeeRate feeRate;\n         EstimationResult buckets;\n \n@@ -968,6 +1015,7 @@ static UniValue estimaterawfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+// clang-format off\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         argNames\n   //  --------------------- ------------------------  -----------------------  ----------\n@@ -981,11 +1029,11 @@ static const CRPCCommand commands[] =\n \n     { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      {\"nblocks\",\"address\",\"maxtries\"} },\n \n-    { \"hidden\",             \"estimatefee\",            &estimatefee,            {} },\n     { \"util\",               \"estimatesmartfee\",       &estimatesmartfee,       {\"conf_target\", \"estimate_mode\"} },\n \n     { \"hidden\",             \"estimaterawfee\",         &estimaterawfee,         {\"conf_target\", \"threshold\"} },\n };\n+// clang-format on\n \n void RegisterMiningRPCCommands(CRPCTable &t)\n {"
      },
      {
        "sha": "5543035885b587843f22eb16edc7af7b295e4888",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 68,
        "deletions": 52,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -17,13 +17,8 @@\n #include <rpc/server.h>\n #include <rpc/util.h>\n #include <timedata.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n-#ifdef ENABLE_WALLET\n-#include <wallet/rpcwallet.h>\n-#include <wallet/wallet.h>\n-#include <wallet/walletdb.h>\n-#endif\n+#include <util/system.h>\n+#include <util/strencodings.h>\n #include <warnings.h>\n \n #include <stdint.h>\n@@ -37,19 +32,23 @@ static UniValue validateaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n-            \"validateaddress \\\"address\\\"\\n\"\n-            \"\\nReturn information about the given bitcoin address.\\n\"\n-            \"DEPRECATION WARNING: Parts of this command have been deprecated and moved to getaddressinfo. Clients must\\n\"\n-            \"transition to using getaddressinfo to access this information before upgrading to v0.18. The following deprecated\\n\"\n-            \"fields have moved to getaddressinfo and will only be shown here with -deprecatedrpc=validateaddress: ismine, iswatchonly,\\n\"\n-            \"script, hex, pubkeys, sigsrequired, pubkey, addresses, embedded, iscompressed, account, timestamp, hdkeypath, kdmasterkeyid.\\n\"\n+            RPCHelpMan{\"validateaddress\",\n+                \"\\nReturn information about the given bitcoin address.\\n\"\n+                \"DEPRECATION WARNING: Parts of this command have been deprecated and moved to getaddressinfo. Clients must\\n\"\n+                \"transition to using getaddressinfo to access this information before upgrading to v0.18. The following deprecated\\n\"\n+                \"fields have moved to getaddressinfo and will only be shown here with -deprecatedrpc=validateaddress: ismine, iswatchonly,\\n\"\n+                \"script, hex, pubkeys, sigsrequired, pubkey, addresses, embedded, iscompressed, account, timestamp, hdkeypath, kdmasterkeyid.\\n\",\n+                {\n+                    {\"address\", RPCArg::Type::STR, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"address\\\"                    (string, required) The bitcoin address to validate\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n             \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n-            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n+            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex-encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n             \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is a witness address\\n\"\n             \"  \\\"witness_version\\\" : version   (numeric, optional) The version number of the witness program\\n\"\n@@ -67,29 +66,18 @@ static UniValue validateaddress(const JSONRPCRequest& request)\n     ret.pushKV(\"isvalid\", isValid);\n     if (isValid)\n     {\n+        std::string currentAddress = EncodeDestination(dest);\n+        ret.pushKV(\"address\", currentAddress);\n \n-#ifdef ENABLE_WALLET\n-        if (HasWallets() && IsDeprecatedRPCEnabled(\"validateaddress\")) {\n-            ret.pushKVs(getaddressinfo(request));\n-        }\n-#endif\n-        if (ret[\"address\"].isNull()) {\n-            std::string currentAddress = EncodeDestination(dest);\n-            ret.pushKV(\"address\", currentAddress);\n-\n-            CScript scriptPubKey = GetScriptForDestination(dest);\n-            ret.pushKV(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end()));\n+        CScript scriptPubKey = GetScriptForDestination(dest);\n+        ret.pushKV(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end()));\n \n-            UniValue detail = DescribeAddress(dest);\n-            ret.pushKVs(detail);\n-        }\n+        UniValue detail = DescribeAddress(dest);\n+        ret.pushKVs(detail);\n     }\n     return ret;\n }\n \n-// Needed even with !ENABLE_WALLET, to pass (ignored) pointers around\n-class CWallet;\n-\n static UniValue createmultisig(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 2 || request.params.size() > 3)\n@@ -115,7 +103,7 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n             \"\\nExamples:\\n\"\n             \"\\nCreate a multisig address from 2 public keys\\n\"\n             + HelpExampleCli(\"createmultisig\", \"2 \\\"[\\\\\\\"03789ed0bb717d88f7d321a368d905e7430207ebbd82bd342cf11ae157a7ace5fd\\\\\\\",\\\\\\\"03dbc6764b8884a92e871274b87583e6d5c2a58819473e17e107ef3f6aa5a61626\\\\\\\"]\\\"\") +\n-            \"\\nAs a json rpc call\\n\"\n+            \"\\nAs a JSON-RPC call\\n\"\n             + HelpExampleRpc(\"createmultisig\", \"2, \\\"[\\\\\\\"03789ed0bb717d88f7d321a368d905e7430207ebbd82bd342cf11ae157a7ace5fd\\\\\\\",\\\\\\\"03dbc6764b8884a92e871274b87583e6d5c2a58819473e17e107ef3f6aa5a61626\\\\\\\"]\\\"\")\n         ;\n         throw std::runtime_error(msg);\n@@ -130,8 +118,7 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n         if (IsHex(keys[i].get_str()) && (keys[i].get_str().length() == 66 || keys[i].get_str().length() == 130)) {\n             pubkeys.push_back(HexToPubKey(keys[i].get_str()));\n         } else {\n-            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Invalid public key: %s\\nNote that from v0.16, createmultisig no longer accepts addresses.\"\n-            \" Users must use addmultisigaddress to create multisig addresses with addresses known to the wallet.\", keys[i].get_str()));\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Invalid public key: %s\\n.\", keys[i].get_str()));\n         }\n     }\n \n@@ -159,8 +146,14 @@ static UniValue verifymessage(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 3)\n         throw std::runtime_error(\n-            \"verifymessage \\\"address\\\" \\\"signature\\\" \\\"message\\\"\\n\"\n-            \"\\nVerify a signed message\\n\"\n+            RPCHelpMan{\"verifymessage\",\n+                \"\\nVerify a signed message\\n\",\n+                {\n+                    {\"address\", RPCArg::Type::STR, false},\n+                    {\"signature\", RPCArg::Type::STR, false},\n+                    {\"message\", RPCArg::Type::STR, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"address\\\"         (string, required) The bitcoin address to use for the signature.\\n\"\n             \"2. \\\"signature\\\"       (string, required) The signature provided by the signer in base 64 encoding (see signmessage).\\n\"\n@@ -174,7 +167,7 @@ static UniValue verifymessage(const JSONRPCRequest& request)\n             + HelpExampleCli(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"my message\\\"\") +\n             \"\\nVerify the signature\\n\"\n             + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"signature\\\" \\\"my message\\\"\") +\n-            \"\\nAs json rpc\\n\"\n+            \"\\nAs a JSON-RPC call\\n\"\n             + HelpExampleRpc(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\", \\\"signature\\\", \\\"my message\\\"\")\n         );\n \n@@ -215,8 +208,13 @@ static UniValue signmessagewithprivkey(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 2)\n         throw std::runtime_error(\n-            \"signmessagewithprivkey \\\"privkey\\\" \\\"message\\\"\\n\"\n-            \"\\nSign a message with the private key of an address\\n\"\n+            RPCHelpMan{\"signmessagewithprivkey\",\n+                \"\\nSign a message with the private key of an address\\n\",\n+                {\n+                    {\"privkey\", RPCArg::Type::STR, false},\n+                    {\"message\", RPCArg::Type::STR, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"privkey\\\"         (string, required) The private key to sign the message with.\\n\"\n             \"2. \\\"message\\\"         (string, required) The message to create a signature of.\\n\"\n@@ -227,7 +225,7 @@ static UniValue signmessagewithprivkey(const JSONRPCRequest& request)\n             + HelpExampleCli(\"signmessagewithprivkey\", \"\\\"privkey\\\" \\\"my message\\\"\") +\n             \"\\nVerify the signature\\n\"\n             + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"signature\\\" \\\"my message\\\"\") +\n-            \"\\nAs json rpc\\n\"\n+            \"\\nAs a JSON-RPC call\\n\"\n             + HelpExampleRpc(\"signmessagewithprivkey\", \"\\\"privkey\\\", \\\"my message\\\"\")\n         );\n \n@@ -254,8 +252,12 @@ static UniValue setmocktime(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n-            \"setmocktime timestamp\\n\"\n-            \"\\nSet the local time to given timestamp (-regtest only)\\n\"\n+            RPCHelpMan{\"setmocktime\",\n+                \"\\nSet the local time to given timestamp (-regtest only)\\n\",\n+                {\n+                    {\"timestamp\", RPCArg::Type::NUM, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. timestamp  (integer, required) Unix seconds-since-epoch timestamp\\n\"\n             \"   Pass 0 to go back to using the system time.\"\n@@ -316,8 +318,12 @@ static UniValue getmemoryinfo(const JSONRPCRequest& request)\n      */\n     if (request.fHelp || request.params.size() > 1)\n         throw std::runtime_error(\n-            \"getmemoryinfo (\\\"mode\\\")\\n\"\n-            \"Returns an object containing information about memory usage.\\n\"\n+            RPCHelpMan{\"getmemoryinfo\",\n+                \"Returns an object containing information about memory usage.\\n\",\n+                {\n+                    {\"mode\", RPCArg::Type::STR, true},\n+                }}\n+                .ToString() +\n             \"Arguments:\\n\"\n             \"1. \\\"mode\\\" determines what kind of information is returned. This argument is optional, the default mode is \\\"stats\\\".\\n\"\n             \"  - \\\"stats\\\" returns general statistics about memory usage in the daemon.\\n\"\n@@ -378,7 +384,7 @@ UniValue logging(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 2) {\n         throw std::runtime_error(\n-            \"logging ( <include> <exclude> )\\n\"\n+            RPCHelpMan{\"logging\",\n             \"Gets and sets the logging configuration.\\n\"\n             \"When called without an argument, returns the list of categories with status that are currently being debug logged or not.\\n\"\n             \"When called with arguments, adds or removes categories from debug logging and return the lists above.\\n\"\n@@ -388,6 +394,12 @@ UniValue logging(const JSONRPCRequest& request)\n             \"In addition, the following are available as category names with special meanings:\\n\"\n             \"  - \\\"all\\\",  \\\"1\\\" : represent all logging categories.\\n\"\n             \"  - \\\"none\\\", \\\"0\\\" : even if other logging categories are specified, ignore all of them.\\n\"\n+            ,\n+                {\n+                    {\"include\", RPCArg::Type::STR, true},\n+                    {\"exclude\", RPCArg::Type::STR, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"include\\\"        (array of strings, optional) A json array of categories to add debug logging\\n\"\n             \"     [\\n\"\n@@ -447,22 +459,25 @@ static UniValue echo(const JSONRPCRequest& request)\n {\n     if (request.fHelp)\n         throw std::runtime_error(\n-            \"echo|echojson \\\"message\\\" ...\\n\"\n-            \"\\nSimply echo back the input arguments. This command is for testing.\\n\"\n-            \"\\nThe difference between echo and echojson is that echojson has argument conversion enabled in the client-side table in\"\n-            \"bitcoin-cli and the GUI. There is no server-side difference.\"\n-        );\n+            RPCHelpMan{\"echo|echojson ...\",\n+                \"\\nSimply echo back the input arguments. This command is for testing.\\n\"\n+                \"\\nThe difference between echo and echojson is that echojson has argument conversion enabled in the client-side table in \"\n+                \"bitcoin-cli and the GUI. There is no server-side difference.\",\n+                {}}\n+                .ToString() +\n+            \"\");\n \n     return request.params;\n }\n \n+// clang-format off\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         argNames\n   //  --------------------- ------------------------  -----------------------  ----------\n     { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          {\"mode\"} },\n     { \"control\",            \"logging\",                &logging,                {\"include\", \"exclude\"}},\n-    { \"util\",               \"validateaddress\",        &validateaddress,        {\"address\"} }, /* uses wallet if enabled */\n-    { \"util\",               \"createmultisig\",         &createmultisig,         {\"nrequired\",\"keys\"} },\n+    { \"util\",               \"validateaddress\",        &validateaddress,        {\"address\"} },\n+    { \"util\",               \"createmultisig\",         &createmultisig,         {\"nrequired\",\"keys\",\"address_type\"} },\n     { \"util\",               \"verifymessage\",          &verifymessage,          {\"address\",\"signature\",\"message\"} },\n     { \"util\",               \"signmessagewithprivkey\", &signmessagewithprivkey, {\"privkey\",\"message\"} },\n \n@@ -471,6 +486,7 @@ static const CRPCCommand commands[] =\n     { \"hidden\",             \"echo\",                   &echo,                   {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n     { \"hidden\",             \"echojson\",               &echo,                   {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n };\n+// clang-format on\n \n void RegisterMiscRPCCommands(CRPCTable &t)\n {"
      },
      {
        "sha": "795b9b089b1d08e9b2732ff8c257286915747033",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 134,
        "deletions": 38,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -7,17 +7,18 @@\n #include <chainparams.h>\n #include <clientversion.h>\n #include <core_io.h>\n-#include <validation.h>\n #include <net.h>\n #include <net_processing.h>\n #include <netbase.h>\n #include <policy/policy.h>\n #include <rpc/protocol.h>\n+#include <rpc/util.h>\n #include <sync.h>\n #include <timedata.h>\n #include <ui_interface.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n+#include <validation.h>\n #include <version.h>\n #include <warnings.h>\n \n@@ -27,8 +28,9 @@ static UniValue getconnectioncount(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n         throw std::runtime_error(\n-            \"getconnectioncount\\n\"\n-            \"\\nReturns the number of connections to other nodes.\\n\"\n+            RPCHelpMan{\"getconnectioncount\",\n+                \"\\nReturns the number of connections to other nodes.\\n\", {}}\n+                .ToString() +\n             \"\\nResult:\\n\"\n             \"n          (numeric) The connection count\\n\"\n             \"\\nExamples:\\n\"\n@@ -46,10 +48,12 @@ static UniValue ping(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n         throw std::runtime_error(\n-            \"ping\\n\"\n-            \"\\nRequests that a ping be sent to all other nodes, to measure ping time.\\n\"\n-            \"Results provided in getpeerinfo, pingtime and pingwait fields are decimal seconds.\\n\"\n-            \"Ping command is handled in queue with all other commands, so it measures processing backlog, not just network ping.\\n\"\n+            RPCHelpMan{\"ping\",\n+                \"\\nRequests that a ping be sent to all other nodes, to measure ping time.\\n\"\n+                \"Results provided in getpeerinfo, pingtime and pingwait fields are decimal seconds.\\n\"\n+                \"Ping command is handled in queue with all other commands, so it measures processing backlog, not just network ping.\\n\",\n+                {}}\n+                .ToString() +\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"ping\", \"\")\n             + HelpExampleRpc(\"ping\", \"\")\n@@ -69,8 +73,9 @@ static UniValue getpeerinfo(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n         throw std::runtime_error(\n-            \"getpeerinfo\\n\"\n-            \"\\nReturns data about each connected network node as a json array of objects.\\n\"\n+            RPCHelpMan{\"getpeerinfo\",\n+                \"\\nReturns data about each connected network node as a json array of objects.\\n\", {}}\n+                .ToString() +\n             \"\\nResult:\\n\"\n             \"[\\n\"\n             \"  {\\n\"\n@@ -102,6 +107,7 @@ static UniValue getpeerinfo(const JSONRPCRequest& request)\n             \"       ...\\n\"\n             \"    ],\\n\"\n             \"    \\\"whitelisted\\\": true|false, (boolean) Whether the peer is whitelisted\\n\"\n+            \"    \\\"minfeefilter\\\": n,         (numeric) The minimum fee rate for transactions this peer accepts\\n\"\n             \"    \\\"bytessent_per_msg\\\": {\\n\"\n             \"       \\\"addr\\\": n,              (numeric) The total bytes sent aggregated by message type\\n\"\n             \"       ...\\n\"\n@@ -163,12 +169,13 @@ static UniValue getpeerinfo(const JSONRPCRequest& request)\n             obj.pushKV(\"synced_headers\", statestats.nSyncHeight);\n             obj.pushKV(\"synced_blocks\", statestats.nCommonHeight);\n             UniValue heights(UniValue::VARR);\n-            for (int height : statestats.vHeightInFlight) {\n+            for (const int height : statestats.vHeightInFlight) {\n                 heights.push_back(height);\n             }\n             obj.pushKV(\"inflight\", heights);\n         }\n         obj.pushKV(\"whitelisted\", stats.fWhitelisted);\n+        obj.pushKV(\"minfeefilter\", ValueFromAmount(stats.minFeeFilter));\n \n         UniValue sendPerMsgCmd(UniValue::VOBJ);\n         for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n@@ -198,11 +205,16 @@ static UniValue addnode(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() != 2 ||\n         (strCommand != \"onetry\" && strCommand != \"add\" && strCommand != \"remove\"))\n         throw std::runtime_error(\n-            \"addnode \\\"node\\\" \\\"add|remove|onetry\\\"\\n\"\n-            \"\\nAttempts to add or remove a node from the addnode list.\\n\"\n-            \"Or try a connection to a node once.\\n\"\n-            \"Nodes added using addnode (or -connect) are protected from DoS disconnection and are not required to be\\n\"\n-            \"full nodes/support SegWit as other outbound peers are (though such peers will not be synced from).\\n\"\n+            RPCHelpMan{\"addnode\",\n+                \"\\nAttempts to add or remove a node from the addnode list.\\n\"\n+                \"Or try a connection to a node once.\\n\"\n+                \"Nodes added using addnode (or -connect) are protected from DoS disconnection and are not required to be\\n\"\n+                \"full nodes/support SegWit as other outbound peers are (though such peers will not be synced from).\\n\",\n+                {\n+                    {\"node\", RPCArg::Type::STR, false},\n+                    {\"command\", RPCArg::Type::STR, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"node\\\"     (string, required) The node (see getpeerinfo for nodes)\\n\"\n             \"2. \\\"command\\\"  (string, required) 'add' to add a node to the list, 'remove' to remove a node from the list, 'onetry' to try a connection to the node once\\n\"\n@@ -241,13 +253,18 @@ static UniValue disconnectnode(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() == 0 || request.params.size() >= 3)\n         throw std::runtime_error(\n-            \"disconnectnode \\\"[address]\\\" [nodeid]\\n\"\n-            \"\\nImmediately disconnects from the specified peer node.\\n\"\n-            \"\\nStrictly one out of 'address' and 'nodeid' can be provided to identify the node.\\n\"\n-            \"\\nTo disconnect by nodeid, either set 'address' to the empty string, or call using the named 'nodeid' argument only.\\n\"\n+            RPCHelpMan{\"disconnectnode\",\n+                \"\\nImmediately disconnects from the specified peer node.\\n\"\n+                \"\\nStrictly one out of 'address' and 'nodeid' can be provided to identify the node.\\n\"\n+                \"\\nTo disconnect by nodeid, either set 'address' to the empty string, or call using the named 'nodeid' argument only.\\n\",\n+                {\n+                    {\"address\", RPCArg::Type::STR, true},\n+                    {\"nodeid\", RPCArg::Type::NUM, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"address\\\"     (string, optional) The IP address/port of the node\\n\"\n-            \"2. \\\"nodeid\\\"      (number, optional) The node ID (see getpeerinfo for node IDs)\\n\"\n+            \"2. nodeid        (number, optional) The node ID (see getpeerinfo for node IDs)\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"disconnectnode\", \"\\\"192.168.0.6:8333\\\"\")\n             + HelpExampleCli(\"disconnectnode\", \"\\\"\\\" 1\")\n@@ -284,9 +301,13 @@ static UniValue getaddednodeinfo(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 1)\n         throw std::runtime_error(\n-            \"getaddednodeinfo ( \\\"node\\\" )\\n\"\n-            \"\\nReturns information about the given added node, or all added nodes\\n\"\n-            \"(note that onetry addnodes are not listed here)\\n\"\n+            RPCHelpMan{\"getaddednodeinfo\",\n+                \"\\nReturns information about the given added node, or all added nodes\\n\"\n+                \"(note that onetry addnodes are not listed here)\\n\",\n+                {\n+                    {\"node\", RPCArg::Type::STR, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"node\\\"   (string, optional) If provided, return information about this specific node, otherwise all nodes are returned.\\n\"\n             \"\\nResult:\\n\"\n@@ -351,9 +372,11 @@ static UniValue getnettotals(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 0)\n         throw std::runtime_error(\n-            \"getnettotals\\n\"\n-            \"\\nReturns information about network traffic, including bytes in, bytes out,\\n\"\n-            \"and current time.\\n\"\n+            RPCHelpMan{\"getnettotals\",\n+                \"\\nReturns information about network traffic, including bytes in, bytes out,\\n\"\n+                \"and current time.\\n\",\n+                {}}\n+                .ToString() +\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"totalbytesrecv\\\": n,   (numeric) Total bytes received\\n\"\n@@ -417,8 +440,9 @@ static UniValue getnetworkinfo(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n         throw std::runtime_error(\n-            \"getnetworkinfo\\n\"\n-            \"Returns an object containing various state info regarding P2P networking.\\n\"\n+            RPCHelpMan{\"getnetworkinfo\",\n+                \"Returns an object containing various state info regarding P2P networking.\\n\", {}}\n+                .ToString() +\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"version\\\": xxxxx,                      (numeric) the server version\\n\"\n@@ -497,8 +521,15 @@ static UniValue setban(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() < 2 ||\n         (strCommand != \"add\" && strCommand != \"remove\"))\n         throw std::runtime_error(\n-                            \"setban \\\"subnet\\\" \\\"add|remove\\\" (bantime) (absolute)\\n\"\n-                            \"\\nAttempts to add or remove an IP/Subnet from the banned list.\\n\"\n+            RPCHelpMan{\"setban\",\n+                \"\\nAttempts to add or remove an IP/Subnet from the banned list.\\n\",\n+                {\n+                    {\"subnet\", RPCArg::Type::STR, false},\n+                    {\"command\", RPCArg::Type::STR, false},\n+                    {\"bantime\", RPCArg::Type::NUM, true},\n+                    {\"absolute\", RPCArg::Type::NUM, true},\n+                }}\n+                .ToString() +\n                             \"\\nArguments:\\n\"\n                             \"1. \\\"subnet\\\"       (string, required) The IP/Subnet (see getpeerinfo for nodes IP) with an optional netmask (default is /32 = single IP)\\n\"\n                             \"2. \\\"command\\\"      (string, required) 'add' to add an IP/Subnet to the list, 'remove' to remove an IP/Subnet from the list\\n\"\n@@ -557,8 +588,9 @@ static UniValue listbanned(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n         throw std::runtime_error(\n-                            \"listbanned\\n\"\n-                            \"\\nList all banned IPs/Subnets.\\n\"\n+            RPCHelpMan{\"listbanned\",\n+                \"\\nList all banned IPs/Subnets.\\n\", {}}\n+                .ToString() +\n                             \"\\nExamples:\\n\"\n                             + HelpExampleCli(\"listbanned\", \"\")\n                             + HelpExampleRpc(\"listbanned\", \"\")\n@@ -590,8 +622,9 @@ static UniValue clearbanned(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n         throw std::runtime_error(\n-                            \"clearbanned\\n\"\n-                            \"\\nClear all banned IPs.\\n\"\n+            RPCHelpMan{\"clearbanned\",\n+                \"\\nClear all banned IPs.\\n\", {}}\n+                .ToString() +\n                             \"\\nExamples:\\n\"\n                             + HelpExampleCli(\"clearbanned\", \"\")\n                             + HelpExampleRpc(\"clearbanned\", \"\")\n@@ -608,8 +641,12 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1) {\n         throw std::runtime_error(\n-            \"setnetworkactive true|false\\n\"\n-            \"\\nDisable/enable all p2p network activity.\\n\"\n+            RPCHelpMan{\"setnetworkactive\",\n+                \"\\nDisable/enable all p2p network activity.\\n\",\n+                {\n+                    {\"state\", RPCArg::Type::BOOL, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"state\\\"        (boolean, required) true to enable networking, false to disable\\n\"\n         );\n@@ -624,6 +661,63 @@ static UniValue setnetworkactive(const JSONRPCRequest& request)\n     return g_connman->GetNetworkActive();\n }\n \n+static UniValue getnodeaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            RPCHelpMan{\"getnodeaddresses\",\n+                \"\\nReturn known addresses which can potentially be used to find new nodes in the network\\n\",\n+                {\n+                    {\"count\", RPCArg::Type::NUM, true},\n+                }}\n+                .ToString() +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"count\\\"    (numeric, optional) How many addresses to return. Limited to the smaller of \" + std::to_string(ADDRMAN_GETADDR_MAX) +\n+                \" or \" + std::to_string(ADDRMAN_GETADDR_MAX_PCT) + \"% of all known addresses. (default = 1)\\n\"\n+            \"\\nResult:\\n\"\n+            \"[\\n\"\n+            \"  {\\n\"\n+            \"    \\\"time\\\": ttt,                (numeric) Timestamp in seconds since epoch (Jan 1 1970 GMT) keeping track of when the node was last seen\\n\"\n+            \"    \\\"services\\\": n,              (numeric) The services offered\\n\"\n+            \"    \\\"address\\\": \\\"host\\\",          (string) The address of the node\\n\"\n+            \"    \\\"port\\\": n                   (numeric) The port of the node\\n\"\n+            \"  }\\n\"\n+            \"  ,....\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getnodeaddresses\", \"8\")\n+            + HelpExampleRpc(\"getnodeaddresses\", \"8\")\n+        );\n+    }\n+    if (!g_connman) {\n+        throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n+    }\n+\n+    int count = 1;\n+    if (!request.params[0].isNull()) {\n+        count = request.params[0].get_int();\n+        if (count <= 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Address count out of range\");\n+        }\n+    }\n+    // returns a shuffled list of CAddress\n+    std::vector<CAddress> vAddr = g_connman->GetAddresses();\n+    UniValue ret(UniValue::VARR);\n+\n+    int address_return_count = std::min<int>(count, vAddr.size());\n+    for (int i = 0; i < address_return_count; ++i) {\n+        UniValue obj(UniValue::VOBJ);\n+        const CAddress& addr = vAddr[i];\n+        obj.pushKV(\"time\", (int)addr.nTime);\n+        obj.pushKV(\"services\", (uint64_t)addr.nServices);\n+        obj.pushKV(\"address\", addr.ToStringIP());\n+        obj.pushKV(\"port\", addr.GetPort());\n+        ret.push_back(obj);\n+    }\n+    return ret;\n+}\n+\n+// clang-format off\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         argNames\n   //  --------------------- ------------------------  -----------------------  ----------\n@@ -639,7 +733,9 @@ static const CRPCCommand commands[] =\n     { \"network\",            \"listbanned\",             &listbanned,             {} },\n     { \"network\",            \"clearbanned\",            &clearbanned,            {} },\n     { \"network\",            \"setnetworkactive\",       &setnetworkactive,       {\"state\"} },\n+    { \"network\",            \"getnodeaddresses\",       &getnodeaddresses,       {\"count\"} },\n };\n+// clang-format on\n \n void RegisterNetRPCCommands(CRPCTable &t)\n {"
      },
      {
        "sha": "23999b305a0ded59419eb9fb6fe2ba752441c3a4",
        "filename": "src/rpc/protocol.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/protocol.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -7,13 +7,11 @@\n \n #include <random.h>\n #include <tinyformat.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n-#include <utiltime.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n+#include <util/time.h>\n #include <version.h>\n \n-#include <fstream>\n-\n /**\n  * JSON-RPC protocol.  Bitcoin speaks version 1.0 for maximum compatibility,\n  * but uses JSON-RPC 1.1/2.0 standards for parts of the 1.0 standard that were\n@@ -85,9 +83,9 @@ bool GenerateAuthCookie(std::string *cookie_out)\n     /** the umask determines what permissions are used to create this file -\n      * these are set to 077 in init.cpp unless overridden with -sysperms.\n      */\n-    std::ofstream file;\n+    fsbridge::ofstream file;\n     fs::path filepath_tmp = GetAuthCookieFile(true);\n-    file.open(filepath_tmp.string().c_str());\n+    file.open(filepath_tmp);\n     if (!file.is_open()) {\n         LogPrintf(\"Unable to open cookie authentication file %s for writing\\n\", filepath_tmp.string());\n         return false;\n@@ -109,10 +107,10 @@ bool GenerateAuthCookie(std::string *cookie_out)\n \n bool GetAuthCookie(std::string *cookie_out)\n {\n-    std::ifstream file;\n+    fsbridge::ifstream file;\n     std::string cookie;\n     fs::path filepath = GetAuthCookieFile();\n-    file.open(filepath.string().c_str());\n+    file.open(filepath);\n     if (!file.is_open())\n         return false;\n     std::getline(file, cookie);\n@@ -128,7 +126,7 @@ void DeleteAuthCookie()\n     try {\n         fs::remove(GetAuthCookieFile());\n     } catch (const fs::filesystem_error& e) {\n-        LogPrintf(\"%s: Unable to remove random auth cookie file: %s\\n\", __func__, e.what());\n+        LogPrintf(\"%s: Unable to remove random auth cookie file: %s\\n\", __func__, fsbridge::get_filesystem_error_message(e));\n     }\n }\n "
      },
      {
        "sha": "41f3ac6b4a433dafb66399b5541bd676d87785ba",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 214,
        "deletions": 206,
        "changes": 420,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -9,27 +9,26 @@\n #include <consensus/validation.h>\n #include <core_io.h>\n #include <index/txindex.h>\n-#include <keystore.h>\n-#include <validation.h>\n-#include <validationinterface.h>\n+#include <init.h>\n #include <key_io.h>\n+#include <keystore.h>\n #include <merkleblock.h>\n #include <net.h>\n #include <policy/policy.h>\n #include <policy/rbf.h>\n #include <primitives/transaction.h>\n #include <rpc/rawtransaction.h>\n #include <rpc/server.h>\n+#include <rpc/util.h>\n #include <script/script.h>\n #include <script/script_error.h>\n #include <script/sign.h>\n #include <script/standard.h>\n #include <txmempool.h>\n #include <uint256.h>\n-#include <utilstrencodings.h>\n-#ifdef ENABLE_WALLET\n-#include <wallet/rpcwallet.h>\n-#endif\n+#include <util/strencodings.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n \n #include <future>\n #include <stdint.h>\n@@ -67,13 +66,18 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n         throw std::runtime_error(\n-            \"getrawtransaction \\\"txid\\\" ( verbose \\\"blockhash\\\" )\\n\"\n-\n-            \"\\nNOTE: By default this function only works for mempool transactions. If the -txindex option is\\n\"\n-            \"enabled, it also works for blockchain transactions. If the block which contains the transaction\\n\"\n-            \"is known, its hash can be provided even for nodes without -txindex. Note that if a blockhash is\\n\"\n-            \"provided, only that block will be searched and if the transaction is in the mempool or other\\n\"\n-            \"blocks, or if this node does not have the given block available, the transaction will not be found.\\n\"\n+            RPCHelpMan{\"getrawtransaction\",\n+                \"\\nNOTE: By default this function only works for mempool transactions. If the -txindex option is\\n\"\n+                \"enabled, it also works for blockchain transactions. If the block which contains the transaction\\n\"\n+                \"is known, its hash can be provided even for nodes without -txindex. Note that if a blockhash is\\n\"\n+                \"provided, only that block will be searched and if the transaction is in the mempool or other\\n\"\n+                \"blocks, or if this node does not have the given block available, the transaction will not be found.\\n\",\n+                {\n+                    {\"txid\", RPCArg::Type::STR_HEX, false},\n+                    {\"verbose\", RPCArg::Type::BOOL, true},\n+                    {\"blockhash\", RPCArg::Type::STR_HEX, true},\n+                }}\n+                .ToString() +\n             \"DEPRECATED: for now, it also works for transactions with unspent outputs.\\n\"\n \n             \"\\nReturn the raw transaction data.\\n\"\n@@ -207,12 +211,21 @@ static UniValue gettxoutproof(const JSONRPCRequest& request)\n {\n     if (request.fHelp || (request.params.size() != 1 && request.params.size() != 2))\n         throw std::runtime_error(\n-            \"gettxoutproof [\\\"txid\\\",...] ( blockhash )\\n\"\n-            \"\\nReturns a hex-encoded proof that \\\"txid\\\" was included in a block.\\n\"\n-            \"\\nNOTE: By default this function only works sometimes. This is when there is an\\n\"\n-            \"unspent output in the utxo for this transaction. To make it always work,\\n\"\n-            \"you need to maintain a transaction index, using the -txindex command line option or\\n\"\n-            \"specify the block in which the transaction is included manually (by blockhash).\\n\"\n+            RPCHelpMan{\"gettxoutproof\",\n+                \"\\nReturns a hex-encoded proof that \\\"txid\\\" was included in a block.\\n\"\n+                \"\\nNOTE: By default this function only works sometimes. This is when there is an\\n\"\n+                \"unspent output in the utxo for this transaction. To make it always work,\\n\"\n+                \"you need to maintain a transaction index, using the -txindex command line option or\\n\"\n+                \"specify the block in which the transaction is included manually (by blockhash).\\n\",\n+                {\n+                    {\"txids\", RPCArg::Type::ARR,\n+                        {\n+                            {\"txid\", RPCArg::Type::STR_HEX, false},\n+                        },\n+                        false},\n+                    {\"blockhash\", RPCArg::Type::STR_HEX, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"txids\\\"       (string) A json array of txids to filter\\n\"\n             \"    [\\n\"\n@@ -229,9 +242,7 @@ static UniValue gettxoutproof(const JSONRPCRequest& request)\n     UniValue txids = request.params[0].get_array();\n     for (unsigned int idx = 0; idx < txids.size(); idx++) {\n         const UniValue& txid = txids[idx];\n-        if (txid.get_str().length() != 64 || !IsHex(txid.get_str()))\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, std::string(\"Invalid txid \")+txid.get_str());\n-        uint256 hash(uint256S(txid.get_str()));\n+        uint256 hash(ParseHashV(txid, \"txid\"));\n         if (setTxids.count(hash))\n             throw JSONRPCError(RPC_INVALID_PARAMETER, std::string(\"Invalid parameter, duplicated txid: \")+txid.get_str());\n        setTxids.insert(hash);\n@@ -242,7 +253,7 @@ static UniValue gettxoutproof(const JSONRPCRequest& request)\n     uint256 hashBlock;\n     if (!request.params[1].isNull()) {\n         LOCK(cs_main);\n-        hashBlock = uint256S(request.params[1].get_str());\n+        hashBlock = ParseHashV(request.params[1], \"blockhash\");\n         pblockindex = LookupBlockIndex(hashBlock);\n         if (!pblockindex) {\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n@@ -301,9 +312,13 @@ static UniValue verifytxoutproof(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n-            \"verifytxoutproof \\\"proof\\\"\\n\"\n-            \"\\nVerifies that a proof points to a transaction in a block, returning the transaction it commits to\\n\"\n-            \"and throwing an RPC error if the block is not in our best chain\\n\"\n+            RPCHelpMan{\"verifytxoutproof\",\n+                \"\\nVerifies that a proof points to a transaction in a block, returning the transaction it commits to\\n\"\n+                \"and throwing an RPC error if the block is not in our best chain\\n\",\n+                {\n+                    {\"proof\", RPCArg::Type::STR, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"proof\\\"    (string, required) The hex-encoded proof generated by gettxoutproof\\n\"\n             \"\\nResult:\\n\"\n@@ -351,7 +366,7 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n \n     if (!locktime.isNull()) {\n         int64_t nLockTime = locktime.get_int64();\n-        if (nLockTime < 0 || nLockTime > std::numeric_limits<uint32_t>::max())\n+        if (nLockTime < 0 || nLockTime > LOCKTIME_MAX)\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, locktime out of range\");\n         rawTx.nLockTime = nLockTime;\n     }\n@@ -373,18 +388,18 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n \n         uint32_t nSequence;\n         if (rbfOptIn) {\n-            nSequence = MAX_BIP125_RBF_SEQUENCE;\n+            nSequence = MAX_BIP125_RBF_SEQUENCE; /* CTxIn::SEQUENCE_FINAL - 2 */\n         } else if (rawTx.nLockTime) {\n-            nSequence = std::numeric_limits<uint32_t>::max() - 1;\n+            nSequence = CTxIn::SEQUENCE_FINAL - 1;\n         } else {\n-            nSequence = std::numeric_limits<uint32_t>::max();\n+            nSequence = CTxIn::SEQUENCE_FINAL;\n         }\n \n         // set the sequence number if passed in the parameters object\n         const UniValue& sequenceObj = find_value(o, \"sequence\");\n         if (sequenceObj.isNum()) {\n             int64_t seqNr64 = sequenceObj.get_int64();\n-            if (seqNr64 < 0 || seqNr64 > std::numeric_limits<uint32_t>::max()) {\n+            if (seqNr64 < 0 || seqNr64 > CTxIn::SEQUENCE_FINAL) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, sequence number is out of range\");\n             } else {\n                 nSequence = (uint32_t)seqNr64;\n@@ -436,7 +451,7 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n         }\n     }\n \n-    if (!rbf.isNull() && rbfOptIn != SignalsOptInRBF(rawTx)) {\n+    if (!rbf.isNull() && rawTx.vin.size() > 0 && rbfOptIn != SignalsOptInRBF(rawTx)) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter combination: Sequence number(s) contradict replaceable option\");\n     }\n \n@@ -471,13 +486,13 @@ static UniValue createrawtransaction(const JSONRPCRequest& request)\n             \"      \\\"address\\\": x.xxx,    (obj, optional) A key-value pair. The key (string) is the bitcoin address, the value (float or string) is the amount in \" + CURRENCY_UNIT + \"\\n\"\n             \"    },\\n\"\n             \"    {\\n\"\n-            \"      \\\"data\\\": \\\"hex\\\"        (obj, optional) A key-value pair. The key must be \\\"data\\\", the value is hex encoded data\\n\"\n+            \"      \\\"data\\\": \\\"hex\\\"        (obj, optional) A key-value pair. The key must be \\\"data\\\", the value is hex-encoded data\\n\"\n             \"    }\\n\"\n             \"    ,...                     More key-value pairs of the above form. For compatibility reasons, a dictionary, which holds the key-value pairs directly, is also\\n\"\n             \"                             accepted as second parameter.\\n\"\n             \"   ]\\n\"\n             \"3. locktime                  (numeric, optional, default=0) Raw locktime. Non-0 value also locktime-activates inputs\\n\"\n-            \"4. replaceable               (boolean, optional, default=false) Marks this transaction as BIP125 replaceable.\\n\"\n+            \"4. replaceable               (boolean, optional, default=false) Marks this transaction as BIP125-replaceable.\\n\"\n             \"                             Allows this transaction to be replaced by a transaction with higher fees. If provided, it is an error if explicit sequence numbers are incompatible.\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"transaction\\\"              (string) hex string of the transaction\\n\"\n@@ -508,9 +523,13 @@ static UniValue decoderawtransaction(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"decoderawtransaction \\\"hexstring\\\" ( iswitness )\\n\"\n-            \"\\nReturn a JSON object representing the serialized, hex-encoded transaction.\\n\"\n-\n+            RPCHelpMan{\"decoderawtransaction\",\n+                \"\\nReturn a JSON object representing the serialized, hex-encoded transaction.\\n\",\n+                {\n+                    {\"hexstring\", RPCArg::Type::STR_HEX, false},\n+                    {\"iswitness\", RPCArg::Type::BOOL, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"hexstring\\\"      (string, required) The transaction hex string\\n\"\n             \"2. iswitness          (boolean, optional) Whether the transaction hex is a serialized witness transaction\\n\"\n@@ -562,7 +581,6 @@ static UniValue decoderawtransaction(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"decoderawtransaction\", \"\\\"hexstring\\\"\")\n         );\n \n-    LOCK(cs_main);\n     RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VBOOL});\n \n     CMutableTransaction mtx;\n@@ -584,14 +602,18 @@ static UniValue decodescript(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n-            \"decodescript \\\"hexstring\\\"\\n\"\n-            \"\\nDecode a hex-encoded script.\\n\"\n+            RPCHelpMan{\"decodescript\",\n+                \"\\nDecode a hex-encoded script.\\n\",\n+                {\n+                    {\"hexstring\", RPCArg::Type::STR_HEX, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n-            \"1. \\\"hexstring\\\"     (string) the hex encoded script\\n\"\n+            \"1. \\\"hexstring\\\"     (string) the hex-encoded script\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"asm\\\":\\\"asm\\\",   (string) Script public key\\n\"\n-            \"  \\\"hex\\\":\\\"hex\\\",   (string) hex encoded public key\\n\"\n+            \"  \\\"hex\\\":\\\"hex\\\",   (string) hex-encoded public key\\n\"\n             \"  \\\"type\\\":\\\"type\\\", (string) The output type\\n\"\n             \"  \\\"reqSigs\\\": n,    (numeric) The required signatures\\n\"\n             \"  \\\"addresses\\\": [   (json array of string)\\n\"\n@@ -627,9 +649,8 @@ static UniValue decodescript(const JSONRPCRequest& request)\n         // P2SH and witness programs cannot be wrapped in P2WSH, if this script\n         // is a witness program, don't return addresses for a segwit programs.\n         if (type.get_str() == \"pubkey\" || type.get_str() == \"pubkeyhash\" || type.get_str() == \"multisig\" || type.get_str() == \"nonstandard\") {\n-            txnouttype which_type;\n             std::vector<std::vector<unsigned char>> solutions_data;\n-            Solver(script, which_type, solutions_data);\n+            txnouttype which_type = Solver(script, solutions_data);\n             // Uncompressed pubkeys cannot be used with segwit checksigs.\n             // If the script contains an uncompressed pubkey, skip encoding of a segwit program.\n             if ((which_type == TX_PUBKEY) || (which_type == TX_MULTISIG)) {\n@@ -678,14 +699,20 @@ static void TxInErrorToJSON(const CTxIn& txin, UniValue& vErrorsRet, const std::\n \n static UniValue combinerawtransaction(const JSONRPCRequest& request)\n {\n-\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n-            \"combinerawtransaction [\\\"hexstring\\\",...]\\n\"\n-            \"\\nCombine multiple partially signed transactions into one transaction.\\n\"\n-            \"The combined transaction may be another partially signed transaction or a \\n\"\n-            \"fully signed transaction.\"\n-\n+            RPCHelpMan{\"combinerawtransaction\",\n+                \"\\nCombine multiple partially signed transactions into one transaction.\\n\"\n+                \"The combined transaction may be another partially signed transaction or a \\n\"\n+                \"fully signed transaction.\",\n+                {\n+                    {\"txs\", RPCArg::Type::ARR,\n+                        {\n+                            {\"hexstring\", RPCArg::Type::STR_HEX, false},\n+                        },\n+                        false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"txs\\\"         (string) A json array of hex strings of partially signed transactions\\n\"\n             \"    [\\n\"\n@@ -761,7 +788,7 @@ static UniValue combinerawtransaction(const JSONRPCRequest& request)\n     return EncodeHexTx(mergedTx);\n }\n \n-UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival, CBasicKeyStore *keystore, bool is_temp_keystore, const UniValue& hashType)\n+UniValue SignTransaction(interfaces::Chain& chain, CMutableTransaction& mtx, const UniValue& prevTxsUnival, CBasicKeyStore *keystore, bool is_temp_keystore, const UniValue& hashType)\n {\n     // Fetch previous transactions (inputs):\n     CCoinsView viewDummy;\n@@ -826,8 +853,7 @@ UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival\n                 view.AddCoin(out, std::move(newcoin), true);\n             }\n \n-            // if redeemScript given and not using the local wallet (private keys\n-            // given), add redeemScript to the keystore so it can be signed:\n+            // if redeemScript and private keys were given, add redeemScript to the keystore so it can be signed\n             if (is_temp_keystore && (scriptPubKey.IsPayToScriptHash() || scriptPubKey.IsPayToWitnessScriptHash())) {\n                 RPCTypeCheckObj(prevOut,\n                     {\n@@ -905,13 +931,35 @@ static UniValue signrawtransactionwithkey(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 2 || request.params.size() > 4)\n         throw std::runtime_error(\n-            \"signrawtransactionwithkey \\\"hexstring\\\" [\\\"privatekey1\\\",...] ( [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n,\\\"scriptPubKey\\\":\\\"hex\\\",\\\"redeemScript\\\":\\\"hex\\\"},...] sighashtype )\\n\"\n-            \"\\nSign inputs for raw transaction (serialized, hex-encoded).\\n\"\n-            \"The second argument is an array of base58-encoded private\\n\"\n-            \"keys that will be the only keys used to sign the transaction.\\n\"\n-            \"The third optional argument (may be null) is an array of previous transaction outputs that\\n\"\n-            \"this transaction depends on but may not yet be in the block chain.\\n\"\n-\n+            RPCHelpMan{\"signrawtransactionwithkey\",\n+                \"\\nSign inputs for raw transaction (serialized, hex-encoded).\\n\"\n+                \"The second argument is an array of base58-encoded private\\n\"\n+                \"keys that will be the only keys used to sign the transaction.\\n\"\n+                \"The third optional argument (may be null) is an array of previous transaction outputs that\\n\"\n+                \"this transaction depends on but may not yet be in the block chain.\\n\",\n+                {\n+                    {\"hexstring\", RPCArg::Type::STR, false},\n+                    {\"privkeys\", RPCArg::Type::ARR,\n+                        {\n+                            {\"privatekey\", RPCArg::Type::STR_HEX, false},\n+                        },\n+                        false},\n+                    {\"prevtxs\", RPCArg::Type::ARR,\n+                        {\n+                            {\"\", RPCArg::Type::OBJ,\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, false},\n+                                    {\"vout\", RPCArg::Type::NUM, false},\n+                                    {\"scriptPubKey\", RPCArg::Type::STR_HEX, false},\n+                                    {\"redeemScript\", RPCArg::Type::STR_HEX, false},\n+                                    {\"amount\", RPCArg::Type::AMOUNT, false},\n+                                },\n+                                true},\n+                        },\n+                        true},\n+                    {\"sighashtype\", RPCArg::Type::STR, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"hexstring\\\"                      (string, required) The transaction hex string\\n\"\n             \"2. \\\"privkeys\\\"                       (string, required) A json array of base58-encoded private keys for signing\\n\"\n@@ -930,7 +978,7 @@ static UniValue signrawtransactionwithkey(const JSONRPCRequest& request)\n             \"       }\\n\"\n             \"       ,...\\n\"\n             \"    ]\\n\"\n-            \"4. \\\"sighashtype\\\"                    (string, optional, default=ALL) The signature hash type. Must be one of\\n\"\n+            \"4. \\\"sighashtype\\\"                    (string, optional, default=ALL) The signature hash type. Must be one of:\\n\"\n             \"       \\\"ALL\\\"\\n\"\n             \"       \\\"NONE\\\"\\n\"\n             \"       \\\"SINGLE\\\"\\n\"\n@@ -977,116 +1025,29 @@ static UniValue signrawtransactionwithkey(const JSONRPCRequest& request)\n         keystore.AddKey(key);\n     }\n \n-    return SignTransaction(mtx, request.params[2], &keystore, true, request.params[3]);\n+    return SignTransaction(*g_rpc_interfaces->chain, mtx, request.params[2], &keystore, true, request.params[3]);\n }\n \n UniValue signrawtransaction(const JSONRPCRequest& request)\n {\n-#ifdef ENABLE_WALLET\n-    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n-#endif\n-\n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n-        throw std::runtime_error(\n-            \"signrawtransaction \\\"hexstring\\\" ( [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n,\\\"scriptPubKey\\\":\\\"hex\\\",\\\"redeemScript\\\":\\\"hex\\\"},...] [\\\"privatekey1\\\",...] sighashtype )\\n\"\n-            \"\\nDEPRECATED. Sign inputs for raw transaction (serialized, hex-encoded).\\n\"\n-            \"The second optional argument (may be null) is an array of previous transaction outputs that\\n\"\n-            \"this transaction depends on but may not yet be in the block chain.\\n\"\n-            \"The third optional argument (may be null) is an array of base58-encoded private\\n\"\n-            \"keys that, if given, will be the only keys used to sign the transaction.\\n\"\n-#ifdef ENABLE_WALLET\n-            + HelpRequiringPassphrase(pwallet) + \"\\n\"\n-#endif\n-            \"\\nArguments:\\n\"\n-            \"1. \\\"hexstring\\\"     (string, required) The transaction hex string\\n\"\n-            \"2. \\\"prevtxs\\\"       (string, optional) An json array of previous dependent transaction outputs\\n\"\n-            \"     [               (json array of json objects, or 'null' if none provided)\\n\"\n-            \"       {\\n\"\n-            \"         \\\"txid\\\":\\\"id\\\",             (string, required) The transaction id\\n\"\n-            \"         \\\"vout\\\":n,                  (numeric, required) The output number\\n\"\n-            \"         \\\"scriptPubKey\\\": \\\"hex\\\",   (string, required) script key\\n\"\n-            \"         \\\"redeemScript\\\": \\\"hex\\\",   (string, required for P2SH or P2WSH) redeem script\\n\"\n-            \"         \\\"amount\\\": value            (numeric, required) The amount spent\\n\"\n-            \"       }\\n\"\n-            \"       ,...\\n\"\n-            \"    ]\\n\"\n-            \"3. \\\"privkeys\\\"     (string, optional) A json array of base58-encoded private keys for signing\\n\"\n-            \"    [                  (json array of strings, or 'null' if none provided)\\n\"\n-            \"      \\\"privatekey\\\"   (string) private key in base58-encoding\\n\"\n-            \"      ,...\\n\"\n-            \"    ]\\n\"\n-            \"4. \\\"sighashtype\\\"     (string, optional, default=ALL) The signature hash type. Must be one of\\n\"\n-            \"       \\\"ALL\\\"\\n\"\n-            \"       \\\"NONE\\\"\\n\"\n-            \"       \\\"SINGLE\\\"\\n\"\n-            \"       \\\"ALL|ANYONECANPAY\\\"\\n\"\n-            \"       \\\"NONE|ANYONECANPAY\\\"\\n\"\n-            \"       \\\"SINGLE|ANYONECANPAY\\\"\\n\"\n-\n-            \"\\nResult:\\n\"\n-            \"{\\n\"\n-            \"  \\\"hex\\\" : \\\"value\\\",           (string) The hex-encoded raw transaction with signature(s)\\n\"\n-            \"  \\\"complete\\\" : true|false,   (boolean) If the transaction has a complete set of signatures\\n\"\n-            \"  \\\"errors\\\" : [                 (json array of objects) Script verification errors (if there are any)\\n\"\n-            \"    {\\n\"\n-            \"      \\\"txid\\\" : \\\"hash\\\",           (string) The hash of the referenced, previous transaction\\n\"\n-            \"      \\\"vout\\\" : n,                (numeric) The index of the output to spent and used as input\\n\"\n-            \"      \\\"scriptSig\\\" : \\\"hex\\\",       (string) The hex-encoded signature script\\n\"\n-            \"      \\\"sequence\\\" : n,            (numeric) Script sequence number\\n\"\n-            \"      \\\"error\\\" : \\\"text\\\"           (string) Verification or signing error related to the input\\n\"\n-            \"    }\\n\"\n-            \"    ,...\\n\"\n-            \"  ]\\n\"\n-            \"}\\n\"\n-\n-            \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\")\n-            + HelpExampleRpc(\"signrawtransaction\", \"\\\"myhex\\\"\")\n-        );\n-\n-    if (!IsDeprecatedRPCEnabled(\"signrawtransaction\")) {\n-        throw JSONRPCError(RPC_METHOD_DEPRECATED, \"signrawtransaction is deprecated and will be fully removed in v0.18. \"\n-            \"To use signrawtransaction in v0.17, restart bitcoind with -deprecatedrpc=signrawtransaction.\\n\"\n-            \"Projects should transition to using signrawtransactionwithkey and signrawtransactionwithwallet before upgrading to v0.18\");\n-    }\n-\n-    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VARR, UniValue::VARR, UniValue::VSTR}, true);\n-\n-    // Make a JSONRPCRequest to pass on to the right signrawtransaction* command\n-    JSONRPCRequest new_request;\n-    new_request.id = request.id;\n-    new_request.params.setArray();\n-\n-    // For signing with private keys\n-    if (!request.params[2].isNull()) {\n-        new_request.params.push_back(request.params[0]);\n-        // Note: the prevtxs and privkeys are reversed for signrawtransactionwithkey\n-        new_request.params.push_back(request.params[2]);\n-        new_request.params.push_back(request.params[1]);\n-        new_request.params.push_back(request.params[3]);\n-        return signrawtransactionwithkey(new_request);\n-    } else {\n-#ifdef ENABLE_WALLET\n-        // Otherwise sign with the wallet which does not take a privkeys parameter\n-        new_request.params.push_back(request.params[0]);\n-        new_request.params.push_back(request.params[1]);\n-        new_request.params.push_back(request.params[3]);\n-        return signrawtransactionwithwallet(new_request);\n-#else\n-        // If we have made it this far, then wallet is disabled and no private keys were given, so fail here.\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"No private keys available.\");\n-#endif\n-    }\n+    // This method should be removed entirely in V0.19, along with the entries in the\n+    // CRPCCommand table and rpc/client.cpp.\n+    throw JSONRPCError(RPC_METHOD_DEPRECATED, \"signrawtransaction was removed in v0.18.\\n\"\n+        \"Clients should transition to using signrawtransactionwithkey and signrawtransactionwithwallet\");\n }\n \n static UniValue sendrawtransaction(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"sendrawtransaction \\\"hexstring\\\" ( allowhighfees )\\n\"\n-            \"\\nSubmits raw transaction (serialized, hex-encoded) to local node and network.\\n\"\n-            \"\\nAlso see createrawtransaction and signrawtransaction calls.\\n\"\n+            RPCHelpMan{\"sendrawtransaction\",\n+                \"\\nSubmits raw transaction (serialized, hex-encoded) to local node and network.\\n\"\n+                \"\\nAlso see createrawtransaction and signrawtransactionwithkey calls.\\n\",\n+                {\n+                    {\"hexstring\", RPCArg::Type::STR_HEX, false},\n+                    {\"allowhighfees\", RPCArg::Type::BOOL, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"hexstring\\\"    (string, required) The hex string of the raw transaction)\\n\"\n             \"2. allowhighfees    (boolean, optional, default=false) Allow high fees\\n\"\n@@ -1096,10 +1057,10 @@ static UniValue sendrawtransaction(const JSONRPCRequest& request)\n             \"\\nCreate a transaction\\n\"\n             + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n             \"Sign the transaction, and get back the hex\\n\"\n-            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            + HelpExampleCli(\"signrawtransactionwithwallet\", \"\\\"myhex\\\"\") +\n             \"\\nSend the transaction (signed hex)\\n\"\n             + HelpExampleCli(\"sendrawtransaction\", \"\\\"signedhex\\\"\") +\n-            \"\\nAs a json rpc call\\n\"\n+            \"\\nAs a JSON-RPC call\\n\"\n             + HelpExampleRpc(\"sendrawtransaction\", \"\\\"signedhex\\\"\")\n         );\n \n@@ -1181,7 +1142,7 @@ static UniValue testmempoolaccept(const JSONRPCRequest& request)\n         throw std::runtime_error(\n             // clang-format off\n             \"testmempoolaccept [\\\"rawtxs\\\"] ( allowhighfees )\\n\"\n-            \"\\nReturns if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n+            \"\\nReturns result of mempool acceptance tests indicating if raw transaction (serialized, hex-encoded) would be accepted by mempool.\\n\"\n             \"\\nThis checks if the transaction violates the consensus or policy rules.\\n\"\n             \"\\nSee sendrawtransaction call.\\n\"\n             \"\\nArguments:\\n\"\n@@ -1201,10 +1162,10 @@ static UniValue testmempoolaccept(const JSONRPCRequest& request)\n             \"\\nCreate a transaction\\n\"\n             + HelpExampleCli(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\" : \\\\\\\"mytxid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n             \"Sign the transaction, and get back the hex\\n\"\n-            + HelpExampleCli(\"signrawtransaction\", \"\\\"myhex\\\"\") +\n+            + HelpExampleCli(\"signrawtransactionwithwallet\", \"\\\"myhex\\\"\") +\n             \"\\nTest acceptance of the transaction (signed hex)\\n\"\n             + HelpExampleCli(\"testmempoolaccept\", \"\\\"signedhex\\\"\") +\n-            \"\\nAs a json rpc call\\n\"\n+            \"\\nAs a JSON-RPC call\\n\"\n             + HelpExampleRpc(\"testmempoolaccept\", \"[\\\"signedhex\\\"]\")\n             // clang-format on\n             );\n@@ -1277,9 +1238,12 @@ UniValue decodepsbt(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n-            \"decodepsbt \\\"psbt\\\"\\n\"\n-            \"\\nReturn a JSON object representing the serialized, base64-encoded partially signed Bitcoin transaction.\\n\"\n-\n+            RPCHelpMan{\"decodepsbt\",\n+                \"\\nReturn a JSON object representing the serialized, base64-encoded partially signed Bitcoin transaction.\\n\",\n+                {\n+                    {\"psbt\", RPCArg::Type::STR, false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"psbt\\\"            (string, required) The PSBT base64 string\\n\"\n \n@@ -1460,11 +1424,8 @@ UniValue decodepsbt(const JSONRPCRequest& request)\n                 UniValue keypath(UniValue::VOBJ);\n                 keypath.pushKV(\"pubkey\", HexStr(entry.first));\n \n-                uint32_t fingerprint = entry.second.at(0);\n-                keypath.pushKV(\"master_fingerprint\", strprintf(\"%08x\", bswap_32(fingerprint)));\n-\n-                entry.second.erase(entry.second.begin());\n-                keypath.pushKV(\"path\", WriteHDKeypath(entry.second));\n+                keypath.pushKV(\"master_fingerprint\", strprintf(\"%08x\", ReadBE32(entry.second.fingerprint)));\n+                keypath.pushKV(\"path\", WriteHDKeypath(entry.second.path));\n                 keypaths.push_back(keypath);\n             }\n             in.pushKV(\"bip32_derivs\", keypaths);\n@@ -1522,12 +1483,8 @@ UniValue decodepsbt(const JSONRPCRequest& request)\n             for (auto entry : output.hd_keypaths) {\n                 UniValue keypath(UniValue::VOBJ);\n                 keypath.pushKV(\"pubkey\", HexStr(entry.first));\n-\n-                uint32_t fingerprint = entry.second.at(0);\n-                keypath.pushKV(\"master_fingerprint\", strprintf(\"%08x\", bswap_32(fingerprint)));\n-\n-                entry.second.erase(entry.second.begin());\n-                keypath.pushKV(\"path\", WriteHDKeypath(entry.second));\n+                keypath.pushKV(\"master_fingerprint\", strprintf(\"%08x\", ReadBE32(entry.second.fingerprint)));\n+                keypath.pushKV(\"path\", WriteHDKeypath(entry.second.path));\n                 keypaths.push_back(keypath);\n             }\n             out.pushKV(\"bip32_derivs\", keypaths);\n@@ -1559,9 +1516,17 @@ UniValue combinepsbt(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n-            \"combinepsbt [\\\"psbt\\\",...]\\n\"\n-            \"\\nCombine multiple partially signed Bitcoin transactions into one transaction.\\n\"\n-            \"Implements the Combiner role.\\n\"\n+            RPCHelpMan{\"combinepsbt\",\n+                \"\\nCombine multiple partially signed Bitcoin transactions into one transaction.\\n\"\n+                \"Implements the Combiner role.\\n\",\n+                {\n+                    {\"txs\", RPCArg::Type::ARR,\n+                        {\n+                            {\"psbt\", RPCArg::Type::STR_HEX, false},\n+                        },\n+                        false},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"txs\\\"                   (string) A json array of base64 strings of partially signed transactions\\n\"\n             \"    [\\n\"\n@@ -1612,11 +1577,16 @@ UniValue finalizepsbt(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"finalizepsbt \\\"psbt\\\" ( extract )\\n\"\n-            \"Finalize the inputs of a PSBT. If the transaction is fully signed, it will produce a\\n\"\n-            \"network serialized transaction which can be broadcast with sendrawtransaction. Otherwise a PSBT will be\\n\"\n-            \"created which has the final_scriptSig and final_scriptWitness fields filled for inputs that are complete.\\n\"\n-            \"Implements the Finalizer and Extractor roles.\\n\"\n+            RPCHelpMan{\"finalizepsbt\",\n+                \"Finalize the inputs of a PSBT. If the transaction is fully signed, it will produce a\\n\"\n+                \"network serialized transaction which can be broadcast with sendrawtransaction. Otherwise a PSBT will be\\n\"\n+                \"created which has the final_scriptSig and final_scriptWitness fields filled for inputs that are complete.\\n\"\n+                \"Implements the Finalizer and Extractor roles.\\n\",\n+                {\n+                    {\"psbt\", RPCArg::Type::STR, false},\n+                    {\"extract\", RPCArg::Type::BOOL, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"psbt\\\"                 (string) A base64 string of a PSBT\\n\"\n             \"2. \\\"extract\\\"              (boolean, optional, default=true) If true and the transaction is complete, \\n\"\n@@ -1643,13 +1613,13 @@ UniValue finalizepsbt(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"TX decode failed %s\", error));\n     }\n \n-    // Get all of the previous transactions\n+    // Finalize input signatures -- in case we have partial signatures that add up to a complete\n+    //   signature, but have not combined them yet (e.g. because the combiner that created this\n+    //   PartiallySignedTransaction did not understand them), this will combine them into a final\n+    //   script.\n     bool complete = true;\n     for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n-        PSBTInput& input = psbtx.inputs.at(i);\n-\n-        SignatureData sigdata;\n-        complete &= SignPSBTInput(DUMMY_SIGNING_PROVIDER, *psbtx.tx, input, sigdata, i, 1);\n+        complete &= SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, SIGHASH_ALL);\n     }\n \n     UniValue result(UniValue::VOBJ);\n@@ -1662,10 +1632,10 @@ UniValue finalizepsbt(const JSONRPCRequest& request)\n             mtx.vin[i].scriptWitness = psbtx.inputs[i].final_script_witness;\n         }\n         ssTx << mtx;\n-        result.pushKV(\"hex\", HexStr(ssTx.begin(), ssTx.end()));\n+        result.pushKV(\"hex\", HexStr(ssTx.str()));\n     } else {\n         ssTx << psbtx;\n-        result.pushKV(\"psbt\", EncodeBase64((unsigned char*)ssTx.data(), ssTx.size()));\n+        result.pushKV(\"psbt\", EncodeBase64(ssTx.str()));\n     }\n     result.pushKV(\"complete\", complete);\n \n@@ -1676,9 +1646,39 @@ UniValue createpsbt(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 2 || request.params.size() > 4)\n         throw std::runtime_error(\n-                            \"createpsbt [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n},...] [{\\\"address\\\":amount},{\\\"data\\\":\\\"hex\\\"},...] ( locktime ) ( replaceable )\\n\"\n-                            \"\\nCreates a transaction in the Partially Signed Transaction format.\\n\"\n-                            \"Implements the Creator role.\\n\"\n+            RPCHelpMan{\"createpsbt\",\n+                \"\\nCreates a transaction in the Partially Signed Transaction format.\\n\"\n+                \"Implements the Creator role.\\n\",\n+                {\n+                    {\"inputs\", RPCArg::Type::ARR,\n+                        {\n+                            {\"\", RPCArg::Type::OBJ,\n+                                {\n+                                    {\"txid\", RPCArg::Type::STR_HEX, false},\n+                                    {\"vout\", RPCArg::Type::NUM, false},\n+                                    {\"sequence\", RPCArg::Type::NUM, true},\n+                                },\n+                                false},\n+                        },\n+                        false},\n+                    {\"outputs\", RPCArg::Type::ARR,\n+                        {\n+                            {\"\", RPCArg::Type::OBJ,\n+                                {\n+                                    {\"address\", RPCArg::Type::AMOUNT, false},\n+                                },\n+                                true},\n+                            {\"\", RPCArg::Type::OBJ,\n+                                {\n+                                    {\"data\", RPCArg::Type::STR_HEX, false},\n+                                },\n+                                true},\n+                        },\n+                        false},\n+                    {\"locktime\", RPCArg::Type::NUM, true},\n+                    {\"replaceable\", RPCArg::Type::BOOL, true},\n+                }}\n+                .ToString() +\n                             \"\\nArguments:\\n\"\n                             \"1. \\\"inputs\\\"                (array, required) A json array of json objects\\n\"\n                             \"     [\\n\"\n@@ -1695,7 +1695,7 @@ UniValue createpsbt(const JSONRPCRequest& request)\n                             \"      \\\"address\\\": x.xxx,    (obj, optional) A key-value pair. The key (string) is the bitcoin address, the value (float or string) is the amount in \" + CURRENCY_UNIT + \"\\n\"\n                             \"    },\\n\"\n                             \"    {\\n\"\n-                            \"      \\\"data\\\": \\\"hex\\\"        (obj, optional) A key-value pair. The key must be \\\"data\\\", the value is hex encoded data\\n\"\n+                            \"      \\\"data\\\": \\\"hex\\\"        (obj, optional) A key-value pair. The key must be \\\"data\\\", the value is hex-encoded data\\n\"\n                             \"    }\\n\"\n                             \"    ,...                     More key-value pairs of the above form. For compatibility reasons, a dictionary, which holds the key-value pairs directly, is also\\n\"\n                             \"                             accepted as second parameter.\\n\"\n@@ -1741,16 +1741,22 @@ UniValue converttopsbt(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n         throw std::runtime_error(\n-                            \"converttopsbt \\\"hexstring\\\" ( permitsigdata iswitness )\\n\"\n-                            \"\\nConverts a network serialized transaction to a PSBT. This should be used only with createrawtransaction and fundrawtransaction\\n\"\n-                            \"createpsbt and walletcreatefundedpsbt should be used for new applications.\\n\"\n+            RPCHelpMan{\"converttopsbt\",\n+                \"\\nConverts a network serialized transaction to a PSBT. This should be used only with createrawtransaction and fundrawtransaction\\n\"\n+                \"createpsbt and walletcreatefundedpsbt should be used for new applications.\\n\",\n+                {\n+                    {\"hexstring\", RPCArg::Type::STR_HEX, false},\n+                    {\"permitsigdata\", RPCArg::Type::BOOL, true},\n+                    {\"iswitness\", RPCArg::Type::BOOL, true},\n+                }}\n+                .ToString() +\n                             \"\\nArguments:\\n\"\n                             \"1. \\\"hexstring\\\"              (string, required) The hex string of a raw transaction\\n\"\n                             \"2. permitsigdata           (boolean, optional, default=false) If true, any signatures in the input will be discarded and conversion.\\n\"\n                             \"                              will continue. If false, RPC will fail if any signatures are present.\\n\"\n                             \"3. iswitness               (boolean, optional) Whether the transaction hex is a serialized witness transaction.\\n\"\n                             \"                              If iswitness is not present, heuristic tests will be used in decoding. If true, only witness deserializaion\\n\"\n-                            \"                              will be tried. If false, only non-witness deserialization wil be tried. Only has an effect if\\n\"\n+                            \"                              will be tried. If false, only non-witness deserialization will be tried. Only has an effect if\\n\"\n                             \"                              permitsigdata is true.\\n\"\n                             \"\\nResult:\\n\"\n                             \"  \\\"psbt\\\"        (string)  The resulting raw transaction (base64-encoded string)\\n\"\n@@ -1777,7 +1783,7 @@ UniValue converttopsbt(const JSONRPCRequest& request)\n \n     // Remove all scriptSigs and scriptWitnesses from inputs\n     for (CTxIn& input : tx.vin) {\n-        if ((!input.scriptSig.empty() || !input.scriptWitness.IsNull()) && (request.params[1].isNull() || (!request.params[1].isNull() && request.params[1].get_bool()))) {\n+        if ((!input.scriptSig.empty() || !input.scriptWitness.IsNull()) && !permitsigdata) {\n             throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Inputs must not have scriptSigs and scriptWitnesses\");\n         }\n         input.scriptSig.clear();\n@@ -1801,6 +1807,7 @@ UniValue converttopsbt(const JSONRPCRequest& request)\n     return EncodeBase64((unsigned char*)ssTx.data(), ssTx.size());\n }\n \n+// clang-format off\n static const CRPCCommand commands[] =\n { //  category              name                            actor (function)            argNames\n   //  --------------------- ------------------------        -----------------------     ----------\n@@ -1810,7 +1817,7 @@ static const CRPCCommand commands[] =\n     { \"rawtransactions\",    \"decodescript\",                 &decodescript,              {\"hexstring\"} },\n     { \"rawtransactions\",    \"sendrawtransaction\",           &sendrawtransaction,        {\"hexstring\",\"allowhighfees\"} },\n     { \"rawtransactions\",    \"combinerawtransaction\",        &combinerawtransaction,     {\"txs\"} },\n-    { \"rawtransactions\",    \"signrawtransaction\",           &signrawtransaction,        {\"hexstring\",\"prevtxs\",\"privkeys\",\"sighashtype\"} }, /* uses wallet if enabled */\n+    { \"hidden\",             \"signrawtransaction\",           &signrawtransaction,        {\"hexstring\",\"prevtxs\",\"privkeys\",\"sighashtype\"} },\n     { \"rawtransactions\",    \"signrawtransactionwithkey\",    &signrawtransactionwithkey, {\"hexstring\",\"privkeys\",\"prevtxs\",\"sighashtype\"} },\n     { \"rawtransactions\",    \"testmempoolaccept\",            &testmempoolaccept,         {\"rawtxs\",\"allowhighfees\"} },\n     { \"rawtransactions\",    \"decodepsbt\",                   &decodepsbt,                {\"psbt\"} },\n@@ -1822,6 +1829,7 @@ static const CRPCCommand commands[] =\n     { \"blockchain\",         \"gettxoutproof\",                &gettxoutproof,             {\"txids\", \"blockhash\"} },\n     { \"blockchain\",         \"verifytxoutproof\",             &verifytxoutproof,          {\"proof\"} },\n };\n+// clang-format on\n \n void RegisterRawTransactionRPCCommands(CRPCTable &t)\n {"
      },
      {
        "sha": "52d701d1c38839403228e511c3f67fc2ff0fc5b0",
        "filename": "src/rpc/rawtransaction.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/rawtransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/rawtransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -9,8 +9,12 @@ class CBasicKeyStore;\n struct CMutableTransaction;\n class UniValue;\n \n+namespace interfaces {\n+class Chain;\n+} // namespace interfaces\n+\n /** Sign a transaction with the given keystore and previous transactions */\n-UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxs, CBasicKeyStore *keystore, bool tempKeystore, const UniValue& hashType);\n+UniValue SignTransaction(interfaces::Chain& chain, CMutableTransaction& mtx, const UniValue& prevTxs, CBasicKeyStore *keystore, bool tempKeystore, const UniValue& hashType);\n \n /** Create a transaction from univalue parameters */\n CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniValue& outputs_in, const UniValue& locktime, const UniValue& rbf);"
      },
      {
        "sha": "c565094a10c873dcf29981a8398e4f59bd164656",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 22,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -8,15 +8,15 @@\n #include <fs.h>\n #include <key_io.h>\n #include <random.h>\n+#include <rpc/util.h>\n #include <shutdown.h>\n #include <sync.h>\n #include <ui_interface.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n \n #include <boost/bind.hpp>\n #include <boost/signals2/signal.hpp>\n-#include <boost/algorithm/string/case_conv.hpp> // for to_upper()\n #include <boost/algorithm/string/classification.hpp>\n #include <boost/algorithm/string/split.hpp>\n \n@@ -117,16 +117,12 @@ CAmount AmountFromValue(const UniValue& value)\n \n uint256 ParseHashV(const UniValue& v, std::string strName)\n {\n-    std::string strHex;\n-    if (v.isStr())\n-        strHex = v.get_str();\n+    std::string strHex(v.get_str());\n+    if (64 != strHex.length())\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d, for '%s')\", strName, 64, strHex.length(), strHex));\n     if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n         throw JSONRPCError(RPC_INVALID_PARAMETER, strName+\" must be hexadecimal string (not '\"+strHex+\"')\");\n-    if (64 != strHex.length())\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"%s must be of length %d (not %d)\", strName, 64, strHex.length()));\n-    uint256 result;\n-    result.SetHex(strHex);\n-    return result;\n+    return uint256S(strHex);\n }\n uint256 ParseHashO(const UniValue& o, std::string strKey)\n {\n@@ -192,9 +188,7 @@ std::string CRPCTable::help(const std::string& strCommand, const JSONRPCRequest&\n                     if (!category.empty())\n                         strRet += \"\\n\";\n                     category = pcmd->category;\n-                    std::string firstLetter = category.substr(0,1);\n-                    boost::to_upper(firstLetter);\n-                    strRet += \"== \" + firstLetter + category.substr(1) + \" ==\\n\";\n+                    strRet += \"== \" + Capitalize(category) + \" ==\\n\";\n                 }\n             }\n             strRet += strHelp + \"\\n\";\n@@ -210,8 +204,12 @@ UniValue help(const JSONRPCRequest& jsonRequest)\n {\n     if (jsonRequest.fHelp || jsonRequest.params.size() > 1)\n         throw std::runtime_error(\n-            \"help ( \\\"command\\\" )\\n\"\n-            \"\\nList all commands, or get help for a specified command.\\n\"\n+            RPCHelpMan{\"help\",\n+                \"\\nList all commands, or get help for a specified command.\\n\",\n+                {\n+                    {\"command\", RPCArg::Type::STR, true},\n+                }}\n+                .ToString() +\n             \"\\nArguments:\\n\"\n             \"1. \\\"command\\\"     (string, optional) The command to get help on\\n\"\n             \"\\nResult:\\n\"\n@@ -231,8 +229,9 @@ UniValue stop(const JSONRPCRequest& jsonRequest)\n     // Accept the deprecated and ignored 'detach' boolean argument\n     if (jsonRequest.fHelp || jsonRequest.params.size() > 1)\n         throw std::runtime_error(\n-            \"stop\\n\"\n-            \"\\nStop Bitcoin server.\");\n+            RPCHelpMan{\"stop\",\n+                \"\\nStop Bitcoin server.\", {}}\n+                .ToString());\n     // Event loop will exit after current HTTP requests have been handled, so\n     // this reply will get back to the client.\n     StartShutdown();\n@@ -241,10 +240,11 @@ UniValue stop(const JSONRPCRequest& jsonRequest)\n \n static UniValue uptime(const JSONRPCRequest& jsonRequest)\n {\n-    if (jsonRequest.fHelp || jsonRequest.params.size() > 1)\n+    if (jsonRequest.fHelp || jsonRequest.params.size() > 0)\n         throw std::runtime_error(\n-                \"uptime\\n\"\n-                        \"\\nReturns the total uptime of the server.\\n\"\n+            RPCHelpMan{\"uptime\",\n+                \"\\nReturns the total uptime of the server.\\n\", {}}\n+                .ToString() +\n                         \"\\nResult:\\n\"\n                         \"ttt        (numeric) The number of seconds that the server has been running\\n\"\n                         \"\\nExamples:\\n\"\n@@ -255,6 +255,7 @@ static UniValue uptime(const JSONRPCRequest& jsonRequest)\n     return GetTime() - GetStartupTime();\n }\n \n+// clang-format off\n /**\n  * Call Table\n  */\n@@ -266,6 +267,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"control\",            \"stop\",                   &stop,                   {}  },\n     { \"control\",            \"uptime\",                 &uptime,                 {}  },\n };\n+// clang-format on\n \n CRPCTable::CRPCTable()\n {\n@@ -541,7 +543,7 @@ void RPCUnsetTimerInterface(RPCTimerInterface *iface)\n         timerInterface = nullptr;\n }\n \n-void RPCRunLater(const std::string& name, std::function<void(void)> func, int64_t nSeconds)\n+void RPCRunLater(const std::string& name, std::function<void()> func, int64_t nSeconds)\n {\n     if (!timerInterface)\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"No timer handler registered for RPC\");"
      },
      {
        "sha": "2d62a76f3c557903f68f40caec4c68dc307b864b",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -110,7 +110,7 @@ class RPCTimerInterface\n      * This is needed to cope with the case in which there is no HTTP server, but\n      * only GUI RPC console, and to break the dependency of pcserver on httprpc.\n      */\n-    virtual RPCTimerBase* NewTimer(std::function<void(void)>& func, int64_t millis) = 0;\n+    virtual RPCTimerBase* NewTimer(std::function<void()>& func, int64_t millis) = 0;\n };\n \n /** Set the factory function for timers */\n@@ -124,7 +124,7 @@ void RPCUnsetTimerInterface(RPCTimerInterface *iface);\n  * Run func nSeconds from now.\n  * Overrides previous timer <name> (if any).\n  */\n-void RPCRunLater(const std::string& name, std::function<void(void)> func, int64_t nSeconds);\n+void RPCRunLater(const std::string& name, std::function<void()> func, int64_t nSeconds);\n \n typedef UniValue(*rpcfn_type)(const JSONRPCRequest& jsonRequest);\n "
      },
      {
        "sha": "0b6bbcb1dc63f74a1fb467d60369762657b34cc2",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 99,
        "deletions": 1,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -7,7 +7,9 @@\n #include <rpc/protocol.h>\n #include <rpc/util.h>\n #include <tinyformat.h>\n-#include <utilstrencodings.h>\n+#include <util/strencodings.h>\n+\n+InitInterfaces* g_rpc_interfaces = nullptr;\n \n // Converts a hex string to a public key if possible\n CPubKey HexToPubKey(const std::string& hex_in)\n@@ -126,3 +128,99 @@ UniValue DescribeAddress(const CTxDestination& dest)\n {\n     return boost::apply_visitor(DescribeAddressVisitor(), dest);\n }\n+\n+std::string RPCHelpMan::ToString() const\n+{\n+    std::string ret;\n+\n+    ret += m_name;\n+    bool is_optional{false};\n+    for (const auto& arg : m_args) {\n+        ret += \" \";\n+        if (arg.m_optional) {\n+            if (!is_optional) ret += \"( \";\n+            is_optional = true;\n+        } else {\n+            // Currently we still support unnamed arguments, so any argument following an optional argument must also be optional\n+            // If support for positional arguments is deprecated in the future, remove this line\n+            assert(!is_optional);\n+        }\n+        ret += arg.ToString();\n+    }\n+    if (is_optional) ret += \" )\";\n+    ret += \"\\n\";\n+\n+    ret += m_description;\n+\n+    return ret;\n+}\n+\n+std::string RPCArg::ToStringObj() const\n+{\n+    std::string res = \"\\\"\" + m_name + \"\\\":\";\n+    switch (m_type) {\n+    case Type::STR:\n+        return res + \"\\\"str\\\"\";\n+    case Type::STR_HEX:\n+        return res + \"\\\"hex\\\"\";\n+    case Type::NUM:\n+        return res + \"n\";\n+    case Type::AMOUNT:\n+        return res + \"amount\";\n+    case Type::BOOL:\n+        return res + \"bool\";\n+    case Type::ARR:\n+        res += \"[\";\n+        for (const auto& i : m_inner) {\n+            res += i.ToString() + \",\";\n+        }\n+        return res + \"...]\";\n+    case Type::OBJ:\n+    case Type::OBJ_USER_KEYS:\n+        // Currently unused, so avoid writing dead code\n+        assert(false);\n+\n+        // no default case, so the compiler can warn about missing cases\n+    }\n+    assert(false);\n+}\n+\n+std::string RPCArg::ToString() const\n+{\n+    if (!m_oneline_description.empty()) return m_oneline_description;\n+\n+    switch (m_type) {\n+    case Type::STR_HEX:\n+    case Type::STR: {\n+        return \"\\\"\" + m_name + \"\\\"\";\n+    }\n+    case Type::NUM:\n+    case Type::AMOUNT:\n+    case Type::BOOL: {\n+        return m_name;\n+    }\n+    case Type::OBJ:\n+    case Type::OBJ_USER_KEYS: {\n+        std::string res;\n+        for (size_t i = 0; i < m_inner.size();) {\n+            res += m_inner[i].ToStringObj();\n+            if (++i < m_inner.size()) res += \",\";\n+        }\n+        if (m_type == Type::OBJ) {\n+            return \"{\" + res + \"}\";\n+        } else {\n+            return \"{\" + res + \",...}\";\n+        }\n+    }\n+    case Type::ARR: {\n+        std::string res;\n+        for (const auto& i : m_inner) {\n+            res += i.ToString() + \",\";\n+        }\n+        return \"[\" + res + \"...]\";\n+    }\n+\n+        // no default case, so the compiler can warn about missing cases\n+    }\n+    assert(false);\n+}"
      },
      {
        "sha": "b1ab64247cf82c43117fcf6fb177f02d4feeb630",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 57,
        "deletions": 2,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -9,19 +9,74 @@\n #include <script/standard.h>\n #include <univalue.h>\n \n-#include <boost/variant/static_visitor.hpp>\n-\n #include <string>\n #include <vector>\n \n class CKeyStore;\n class CPubKey;\n class CScript;\n+struct InitInterfaces;\n+\n+//! Pointers to interfaces that need to be accessible from RPC methods. Due to\n+//! limitations of the RPC framework, there's currently no direct way to pass in\n+//! state to RPC method implementations.\n+extern InitInterfaces* g_rpc_interfaces;\n \n CPubKey HexToPubKey(const std::string& hex_in);\n CPubKey AddrToPubKey(CKeyStore* const keystore, const std::string& addr_in);\n CScript CreateMultisigRedeemscript(const int required, const std::vector<CPubKey>& pubkeys);\n \n UniValue DescribeAddress(const CTxDestination& dest);\n \n+struct RPCArg {\n+    enum class Type {\n+        OBJ,\n+        ARR,\n+        STR,\n+        NUM,\n+        BOOL,\n+        OBJ_USER_KEYS, //!< Special type where the user must set the keys e.g. to define multiple addresses; as opposed to e.g. an options object where the keys are predefined\n+        AMOUNT,        //!< Special type representing a floating point amount (can be either NUM or STR)\n+        STR_HEX,       //!< Special type that is a STR with only hex chars\n+    };\n+    const std::string m_name; //!< The name of the arg (can be empty for inner args)\n+    const Type m_type;\n+    const std::vector<RPCArg> m_inner; //!< Only used for arrays or dicts\n+    const bool m_optional;\n+    const std::string m_oneline_description; //!< Should be empty unless it is supposed to override the auto-generated summary line\n+\n+    RPCArg(const std::string& name, const Type& type, const bool optional, const std::string& oneline_description = \"\")\n+        : m_name{name}, m_type{type}, m_optional{optional}, m_oneline_description{oneline_description}\n+    {\n+        assert(type != Type::ARR && type != Type::OBJ);\n+    }\n+\n+    RPCArg(const std::string& name, const Type& type, const std::vector<RPCArg>& inner, const bool optional, const std::string& oneline_description = \"\")\n+        : m_name{name}, m_type{type}, m_inner{inner}, m_optional{optional}, m_oneline_description{oneline_description}\n+    {\n+        assert(type == Type::ARR || type == Type::OBJ);\n+    }\n+\n+    std::string ToString() const;\n+\n+private:\n+    std::string ToStringObj() const;\n+};\n+\n+class RPCHelpMan\n+{\n+public:\n+    RPCHelpMan(const std::string& name, const std::string& description, const std::vector<RPCArg>& args)\n+        : m_name{name}, m_description{description}, m_args{args}\n+    {\n+    }\n+\n+    std::string ToString() const;\n+\n+private:\n+    const std::string m_name;\n+    const std::string m_description;\n+    const std::vector<RPCArg> m_args;\n+};\n+\n #endif // BITCOIN_RPC_UTIL_H"
      },
      {
        "sha": "552391d7d063e19544efaba3d02376ac33daebd3",
        "filename": "src/scheduler.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/scheduler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/scheduler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -159,7 +159,7 @@ void SingleThreadedSchedulerClient::MaybeScheduleProcessQueue() {\n }\n \n void SingleThreadedSchedulerClient::ProcessQueue() {\n-    std::function<void (void)> callback;\n+    std::function<void ()> callback;\n     {\n         LOCK(m_cs_callbacks_pending);\n         if (m_are_callbacks_running) return;\n@@ -187,7 +187,7 @@ void SingleThreadedSchedulerClient::ProcessQueue() {\n     callback();\n }\n \n-void SingleThreadedSchedulerClient::AddToProcessQueue(std::function<void (void)> func) {\n+void SingleThreadedSchedulerClient::AddToProcessQueue(std::function<void ()> func) {\n     assert(m_pscheduler);\n \n     {"
      },
      {
        "sha": "6c45f508eca96896b244571d0638b8a03998f5f2",
        "filename": "src/scheduler.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/scheduler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/scheduler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -40,7 +40,7 @@ class CScheduler\n     CScheduler();\n     ~CScheduler();\n \n-    typedef std::function<void(void)> Function;\n+    typedef std::function<void()> Function;\n \n     // Call func at/after time t\n     void schedule(Function f, boost::chrono::system_clock::time_point t=boost::chrono::system_clock::now());\n@@ -99,7 +99,7 @@ class SingleThreadedSchedulerClient {\n     CScheduler *m_pscheduler;\n \n     CCriticalSection m_cs_callbacks_pending;\n-    std::list<std::function<void (void)>> m_callbacks_pending GUARDED_BY(m_cs_callbacks_pending);\n+    std::list<std::function<void ()>> m_callbacks_pending GUARDED_BY(m_cs_callbacks_pending);\n     bool m_are_callbacks_running GUARDED_BY(m_cs_callbacks_pending) = false;\n \n     void MaybeScheduleProcessQueue();\n@@ -111,10 +111,10 @@ class SingleThreadedSchedulerClient {\n     /**\n      * Add a callback to be executed. Callbacks are executed serially\n      * and memory is release-acquire consistent between callback executions.\n-     * Practially, this means that callbacks can behave as if they are executed\n+     * Practically, this means that callbacks can behave as if they are executed\n      * in order by a single thread.\n      */\n-    void AddToProcessQueue(std::function<void (void)> func);\n+    void AddToProcessQueue(std::function<void ()> func);\n \n     // Processes all remaining queue members on the calling thread, blocking until queue is empty\n     // Must be called after the CScheduler has no remaining processing threads!"
      },
      {
        "sha": "15e204062f8032649d173962119bbae88b6c65fc",
        "filename": "src/script/bitcoinconsensus.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/bitcoinconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/bitcoinconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -88,7 +88,7 @@ static int verify_script(const unsigned char *scriptPubKey, unsigned int scriptP\n         CTransaction tx(deserialize, stream);\n         if (nIn >= tx.vin.size())\n             return set_error(err, bitcoinconsensus_ERR_TX_INDEX);\n-        if (GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION) != txToLen)\n+        if (GetSerializeSize(tx, PROTOCOL_VERSION) != txToLen)\n             return set_error(err, bitcoinconsensus_ERR_TX_SIZE_MISMATCH);\n \n         // Regardless of the verification result, the tx did not error."
      },
      {
        "sha": "ca80d3451fa15b21b4e460faa70f594de76a3946",
        "filename": "src/script/descriptor.cpp",
        "status": "modified",
        "additions": 187,
        "deletions": 31,
        "changes": 218,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/descriptor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/descriptor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -10,8 +10,8 @@\n #include <script/standard.h>\n \n #include <span.h>\n-#include <util.h>\n-#include <utilstrencodings.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n \n #include <memory>\n #include <string>\n@@ -41,7 +41,7 @@ struct PubkeyProvider\n     virtual ~PubkeyProvider() = default;\n \n     /** Derive a public key. */\n-    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& out) const = 0;\n+    virtual bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info) const = 0;\n \n     /** Whether this represent multiple public keys at different positions. */\n     virtual bool IsRange() const = 0;\n@@ -56,16 +56,50 @@ struct PubkeyProvider\n     virtual bool ToPrivateString(const SigningProvider& arg, std::string& out) const = 0;\n };\n \n+class OriginPubkeyProvider final : public PubkeyProvider\n+{\n+    KeyOriginInfo m_origin;\n+    std::unique_ptr<PubkeyProvider> m_provider;\n+\n+    std::string OriginString() const\n+    {\n+        return HexStr(std::begin(m_origin.fingerprint), std::end(m_origin.fingerprint)) + FormatKeyPath(m_origin.path);\n+    }\n+\n+public:\n+    OriginPubkeyProvider(KeyOriginInfo info, std::unique_ptr<PubkeyProvider> provider) : m_origin(std::move(info)), m_provider(std::move(provider)) {}\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info) const override\n+    {\n+        if (!m_provider->GetPubKey(pos, arg, key, info)) return false;\n+        std::copy(std::begin(m_origin.fingerprint), std::end(m_origin.fingerprint), info.fingerprint);\n+        info.path.insert(info.path.begin(), m_origin.path.begin(), m_origin.path.end());\n+        return true;\n+    }\n+    bool IsRange() const override { return m_provider->IsRange(); }\n+    size_t GetSize() const override { return m_provider->GetSize(); }\n+    std::string ToString() const override { return \"[\" + OriginString() + \"]\" + m_provider->ToString(); }\n+    bool ToPrivateString(const SigningProvider& arg, std::string& ret) const override\n+    {\n+        std::string sub;\n+        if (!m_provider->ToPrivateString(arg, sub)) return false;\n+        ret = \"[\" + OriginString() + \"]\" + std::move(sub);\n+        return true;\n+    }\n+};\n+\n /** An object representing a parsed constant public key in a descriptor. */\n class ConstPubkeyProvider final : public PubkeyProvider\n {\n     CPubKey m_pubkey;\n \n public:\n     ConstPubkeyProvider(const CPubKey& pubkey) : m_pubkey(pubkey) {}\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& out) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info) const override\n     {\n-        out = m_pubkey;\n+        key = m_pubkey;\n+        info.path.clear();\n+        CKeyID keyid = m_pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info.fingerprint), info.fingerprint);\n         return true;\n     }\n     bool IsRange() const override { return false; }\n@@ -98,7 +132,7 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         CKey key;\n         if (!arg.GetKey(m_extkey.pubkey.GetID(), key)) return false;\n         ret.nDepth = m_extkey.nDepth;\n-        std::copy(m_extkey.vchFingerprint, m_extkey.vchFingerprint + 4, ret.vchFingerprint);\n+        std::copy(m_extkey.vchFingerprint, m_extkey.vchFingerprint + sizeof(ret.vchFingerprint), ret.vchFingerprint);\n         ret.nChild = m_extkey.nChild;\n         ret.chaincode = m_extkey.chaincode;\n         ret.key = key;\n@@ -118,27 +152,32 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n     BIP32PubkeyProvider(const CExtPubKey& extkey, KeyPath path, DeriveType derive) : m_extkey(extkey), m_path(std::move(path)), m_derive(derive) {}\n     bool IsRange() const override { return m_derive != DeriveType::NO; }\n     size_t GetSize() const override { return 33; }\n-    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& out) const override\n+    bool GetPubKey(int pos, const SigningProvider& arg, CPubKey& key, KeyOriginInfo& info) const override\n     {\n         if (IsHardened()) {\n-            CExtKey key;\n-            if (!GetExtKey(arg, key)) return false;\n+            CExtKey extkey;\n+            if (!GetExtKey(arg, extkey)) return false;\n             for (auto entry : m_path) {\n-                key.Derive(key, entry);\n+                extkey.Derive(extkey, entry);\n             }\n-            if (m_derive == DeriveType::UNHARDENED) key.Derive(key, pos);\n-            if (m_derive == DeriveType::HARDENED) key.Derive(key, pos | 0x80000000UL);\n-            out = key.Neuter().pubkey;\n+            if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n+            if (m_derive == DeriveType::HARDENED) extkey.Derive(extkey, pos | 0x80000000UL);\n+            key = extkey.Neuter().pubkey;\n         } else {\n             // TODO: optimize by caching\n-            CExtPubKey key = m_extkey;\n+            CExtPubKey extkey = m_extkey;\n             for (auto entry : m_path) {\n-                key.Derive(key, entry);\n+                extkey.Derive(extkey, entry);\n             }\n-            if (m_derive == DeriveType::UNHARDENED) key.Derive(key, pos);\n+            if (m_derive == DeriveType::UNHARDENED) extkey.Derive(extkey, pos);\n             assert(m_derive != DeriveType::HARDENED);\n-            out = key.pubkey;\n+            key = extkey.pubkey;\n         }\n+        CKeyID keyid = m_extkey.pubkey.GetID();\n+        std::copy(keyid.begin(), keyid.begin() + sizeof(info.fingerprint), info.fingerprint);\n+        info.path = m_path;\n+        if (m_derive == DeriveType::UNHARDENED) info.path.push_back((uint32_t)pos);\n+        if (m_derive == DeriveType::HARDENED) info.path.push_back(((uint32_t)pos) | 0x80000000L);\n         return true;\n     }\n     std::string ToString() const override\n@@ -172,6 +211,7 @@ class AddressDescriptor final : public Descriptor\n     AddressDescriptor(CTxDestination destination) : m_destination(std::move(destination)) {}\n \n     bool IsRange() const override { return false; }\n+    bool IsSolvable() const override { return false; }\n     std::string ToString() const override { return \"addr(\" + EncodeDestination(m_destination) + \")\"; }\n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override { out = ToString(); return true; }\n     bool Expand(int pos, const SigningProvider& arg, std::vector<CScript>& output_scripts, FlatSigningProvider& out) const override\n@@ -190,6 +230,7 @@ class RawDescriptor final : public Descriptor\n     RawDescriptor(CScript script) : m_script(std::move(script)) {}\n \n     bool IsRange() const override { return false; }\n+    bool IsSolvable() const override { return false; }\n     std::string ToString() const override { return \"raw(\" + HexStr(m_script.begin(), m_script.end()) + \")\"; }\n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override { out = ToString(); return true; }\n     bool Expand(int pos, const SigningProvider& arg, std::vector<CScript>& output_scripts, FlatSigningProvider& out) const override\n@@ -210,6 +251,7 @@ class SingleKeyDescriptor final : public Descriptor\n     SingleKeyDescriptor(std::unique_ptr<PubkeyProvider> prov, const std::function<CScript(const CPubKey&)>& fn, const std::string& name) : m_script_fn(fn), m_fn_name(name), m_provider(std::move(prov)) {}\n \n     bool IsRange() const override { return m_provider->IsRange(); }\n+    bool IsSolvable() const override { return true; }\n     std::string ToString() const override { return m_fn_name + \"(\" + m_provider->ToString() + \")\"; }\n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n@@ -221,9 +263,11 @@ class SingleKeyDescriptor final : public Descriptor\n     bool Expand(int pos, const SigningProvider& arg, std::vector<CScript>& output_scripts, FlatSigningProvider& out) const override\n     {\n         CPubKey key;\n-        if (!m_provider->GetPubKey(pos, arg, key)) return false;\n+        KeyOriginInfo info;\n+        if (!m_provider->GetPubKey(pos, arg, key, info)) return false;\n         output_scripts = std::vector<CScript>{m_script_fn(key)};\n-        out.pubkeys.emplace(key.GetID(), std::move(key));\n+        out.origins.emplace(key.GetID(), std::move(info));\n+        out.pubkeys.emplace(key.GetID(), key);\n         return true;\n     }\n };\n@@ -249,6 +293,8 @@ class MultisigDescriptor : public Descriptor\n         return false;\n     }\n \n+    bool IsSolvable() const override { return true; }\n+\n     std::string ToString() const override\n     {\n         std::string ret = strprintf(\"multi(%i\", m_threshold);\n@@ -272,15 +318,19 @@ class MultisigDescriptor : public Descriptor\n \n     bool Expand(int pos, const SigningProvider& arg, std::vector<CScript>& output_scripts, FlatSigningProvider& out) const override\n     {\n-        std::vector<CPubKey> pubkeys;\n-        pubkeys.reserve(m_providers.size());\n+        std::vector<std::pair<CPubKey, KeyOriginInfo>> entries;\n+        entries.reserve(m_providers.size());\n+        // Construct temporary data in `entries`, to avoid producing output in case of failure.\n         for (const auto& p : m_providers) {\n-            CPubKey key;\n-            if (!p->GetPubKey(pos, arg, key)) return false;\n-            pubkeys.push_back(key);\n+            entries.emplace_back();\n+            if (!p->GetPubKey(pos, arg, entries.back().first, entries.back().second)) return false;\n         }\n-        for (const CPubKey& key : pubkeys) {\n-            out.pubkeys.emplace(key.GetID(), std::move(key));\n+        std::vector<CPubKey> pubkeys;\n+        pubkeys.reserve(entries.size());\n+        for (auto& entry : entries) {\n+            pubkeys.push_back(entry.first);\n+            out.origins.emplace(entry.first.GetID(), std::move(entry.second));\n+            out.pubkeys.emplace(entry.first.GetID(), entry.first);\n         }\n         output_scripts = std::vector<CScript>{GetScriptForMultisig(m_threshold, pubkeys)};\n         return true;\n@@ -298,6 +348,7 @@ class ConvertorDescriptor : public Descriptor\n     ConvertorDescriptor(std::unique_ptr<Descriptor> descriptor, const std::function<CScript(const CScript&)>& fn, const std::string& name) : m_convert_fn(fn), m_fn_name(name), m_descriptor(std::move(descriptor)) {}\n \n     bool IsRange() const override { return m_descriptor->IsRange(); }\n+    bool IsSolvable() const override { return m_descriptor->IsSolvable(); }\n     std::string ToString() const override { return m_fn_name + \"(\" + m_descriptor->ToString() + \")\"; }\n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n@@ -332,6 +383,7 @@ class ComboDescriptor final : public Descriptor\n     ComboDescriptor(std::unique_ptr<PubkeyProvider> provider) : m_provider(std::move(provider)) {}\n \n     bool IsRange() const override { return m_provider->IsRange(); }\n+    bool IsSolvable() const override { return true; }\n     std::string ToString() const override { return \"combo(\" + m_provider->ToString() + \")\"; }\n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n@@ -343,13 +395,15 @@ class ComboDescriptor final : public Descriptor\n     bool Expand(int pos, const SigningProvider& arg, std::vector<CScript>& output_scripts, FlatSigningProvider& out) const override\n     {\n         CPubKey key;\n-        if (!m_provider->GetPubKey(pos, arg, key)) return false;\n+        KeyOriginInfo info;\n+        if (!m_provider->GetPubKey(pos, arg, key, info)) return false;\n         CKeyID keyid = key.GetID();\n         {\n             CScript p2pk = GetScriptForRawPubKey(key);\n             CScript p2pkh = GetScriptForDestination(keyid);\n             output_scripts = std::vector<CScript>{std::move(p2pk), std::move(p2pkh)};\n             out.pubkeys.emplace(keyid, key);\n+            out.origins.emplace(keyid, std::move(info));\n         }\n         if (key.IsCompressed()) {\n             CScript p2wpkh = GetScriptForDestination(WitnessV0KeyHash(keyid));\n@@ -373,7 +427,7 @@ enum class ParseScriptContext {\n     P2WSH,\n };\n \n-/** Parse a constant. If succesful, sp is updated to skip the constant and return true. */\n+/** Parse a constant. If successful, sp is updated to skip the constant and return true. */\n bool Const(const std::string& str, Span<const char>& sp)\n {\n     if ((size_t)sp.size() >= str.size() && std::equal(str.begin(), str.end(), sp.begin())) {\n@@ -383,7 +437,7 @@ bool Const(const std::string& str, Span<const char>& sp)\n     return false;\n }\n \n-/** Parse a function call. If succesful, sp is updated to be the function's argument(s). */\n+/** Parse a function call. If successful, sp is updated to be the function's argument(s). */\n bool Func(const std::string& str, Span<const char>& sp)\n {\n     if ((size_t)sp.size() >= str.size() + 2 && sp[str.size()] == '(' && sp[sp.size() - 1] == ')' && std::equal(str.begin(), str.end(), sp.begin())) {\n@@ -431,7 +485,7 @@ std::vector<Span<const char>> Split(const Span<const char>& sp, char sep)\n }\n \n /** Parse a key path, being passed a split list of elements (the first element is ignored). */\n-bool ParseKeyPath(const std::vector<Span<const char>>& split, KeyPath& out)\n+NODISCARD bool ParseKeyPath(const std::vector<Span<const char>>& split, KeyPath& out)\n {\n     for (size_t i = 1; i < split.size(); ++i) {\n         Span<const char> elem = split[i];\n@@ -447,7 +501,8 @@ bool ParseKeyPath(const std::vector<Span<const char>>& split, KeyPath& out)\n     return true;\n }\n \n-std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out)\n+/** Parse a public key that excludes origin information. */\n+std::unique_ptr<PubkeyProvider> ParsePubkeyInner(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out)\n {\n     auto split = Split(sp, '/');\n     std::string str(split[0].begin(), split[0].end());\n@@ -484,6 +539,28 @@ std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool per\n     return MakeUnique<BIP32PubkeyProvider>(extpubkey, std::move(path), type);\n }\n \n+/** Parse a public key including origin information (if enabled). */\n+std::unique_ptr<PubkeyProvider> ParsePubkey(const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out)\n+{\n+    auto origin_split = Split(sp, ']');\n+    if (origin_split.size() > 2) return nullptr;\n+    if (origin_split.size() == 1) return ParsePubkeyInner(origin_split[0], permit_uncompressed, out);\n+    if (origin_split[0].size() < 1 || origin_split[0][0] != '[') return nullptr;\n+    auto slash_split = Split(origin_split[0].subspan(1), '/');\n+    if (slash_split[0].size() != 8) return nullptr;\n+    std::string fpr_hex = std::string(slash_split[0].begin(), slash_split[0].end());\n+    if (!IsHex(fpr_hex)) return nullptr;\n+    auto fpr_bytes = ParseHex(fpr_hex);\n+    KeyOriginInfo info;\n+    static_assert(sizeof(info.fingerprint) == 4, \"Fingerprint must be 4 bytes\");\n+    assert(fpr_bytes.size() == 4);\n+    std::copy(fpr_bytes.begin(), fpr_bytes.end(), info.fingerprint);\n+    if (!ParseKeyPath(slash_split, info.path)) return nullptr;\n+    auto provider = ParsePubkeyInner(origin_split[1], permit_uncompressed, out);\n+    if (!provider) return nullptr;\n+    return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(provider));\n+}\n+\n /** Parse a script in a particular context. */\n std::unique_ptr<Descriptor> ParseScript(Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out)\n {\n@@ -555,6 +632,80 @@ std::unique_ptr<Descriptor> ParseScript(Span<const char>& sp, ParseScriptContext\n     return nullptr;\n }\n \n+std::unique_ptr<PubkeyProvider> InferPubkey(const CPubKey& pubkey, ParseScriptContext, const SigningProvider& provider)\n+{\n+    std::unique_ptr<PubkeyProvider> key_provider = MakeUnique<ConstPubkeyProvider>(pubkey);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(pubkey.GetID(), info)) {\n+        return MakeUnique<OriginPubkeyProvider>(std::move(info), std::move(key_provider));\n+    }\n+    return key_provider;\n+}\n+\n+std::unique_ptr<Descriptor> InferScript(const CScript& script, ParseScriptContext ctx, const SigningProvider& provider)\n+{\n+    std::vector<std::vector<unsigned char>> data;\n+    txnouttype txntype = Solver(script, data);\n+\n+    if (txntype == TX_PUBKEY) {\n+        CPubKey pubkey(data[0].begin(), data[0].end());\n+        if (pubkey.IsValid()) {\n+            return MakeUnique<SingleKeyDescriptor>(InferPubkey(pubkey, ctx, provider), P2PKGetScript, \"pk\");\n+        }\n+    }\n+    if (txntype == TX_PUBKEYHASH) {\n+        uint160 hash(data[0]);\n+        CKeyID keyid(hash);\n+        CPubKey pubkey;\n+        if (provider.GetPubKey(keyid, pubkey)) {\n+            return MakeUnique<SingleKeyDescriptor>(InferPubkey(pubkey, ctx, provider), P2PKHGetScript, \"pkh\");\n+        }\n+    }\n+    if (txntype == TX_WITNESS_V0_KEYHASH && ctx != ParseScriptContext::P2WSH) {\n+        uint160 hash(data[0]);\n+        CKeyID keyid(hash);\n+        CPubKey pubkey;\n+        if (provider.GetPubKey(keyid, pubkey)) {\n+            return MakeUnique<SingleKeyDescriptor>(InferPubkey(pubkey, ctx, provider), P2WPKHGetScript, \"wpkh\");\n+        }\n+    }\n+    if (txntype == TX_MULTISIG) {\n+        std::vector<std::unique_ptr<PubkeyProvider>> providers;\n+        for (size_t i = 1; i + 1 < data.size(); ++i) {\n+            CPubKey pubkey(data[i].begin(), data[i].end());\n+            providers.push_back(InferPubkey(pubkey, ctx, provider));\n+        }\n+        return MakeUnique<MultisigDescriptor>((int)data[0][0], std::move(providers));\n+    }\n+    if (txntype == TX_SCRIPTHASH && ctx == ParseScriptContext::TOP) {\n+        uint160 hash(data[0]);\n+        CScriptID scriptid(hash);\n+        CScript subscript;\n+        if (provider.GetCScript(scriptid, subscript)) {\n+            auto sub = InferScript(subscript, ParseScriptContext::P2SH, provider);\n+            if (sub) return MakeUnique<ConvertorDescriptor>(std::move(sub), ConvertP2SH, \"sh\");\n+        }\n+    }\n+    if (txntype == TX_WITNESS_V0_SCRIPTHASH && ctx != ParseScriptContext::P2WSH) {\n+        CScriptID scriptid;\n+        CRIPEMD160().Write(data[0].data(), data[0].size()).Finalize(scriptid.begin());\n+        CScript subscript;\n+        if (provider.GetCScript(scriptid, subscript)) {\n+            auto sub = InferScript(subscript, ParseScriptContext::P2WSH, provider);\n+            if (sub) return MakeUnique<ConvertorDescriptor>(std::move(sub), ConvertP2WSH, \"wsh\");\n+        }\n+    }\n+\n+    CTxDestination dest;\n+    if (ExtractDestination(script, dest)) {\n+        if (GetScriptForDestination(dest) == script) {\n+            return MakeUnique<AddressDescriptor>(std::move(dest));\n+        }\n+    }\n+\n+    return MakeUnique<RawDescriptor>(script);\n+}\n+\n } // namespace\n \n std::unique_ptr<Descriptor> Parse(const std::string& descriptor, FlatSigningProvider& out)\n@@ -564,3 +715,8 @@ std::unique_ptr<Descriptor> Parse(const std::string& descriptor, FlatSigningProv\n     if (sp.size() == 0 && ret) return ret;\n     return nullptr;\n }\n+\n+std::unique_ptr<Descriptor> InferDescriptor(const CScript& script, const SigningProvider& provider)\n+{\n+    return InferScript(script, ParseScriptContext::TOP, provider);\n+}"
      },
      {
        "sha": "0111972f85dae673c16a51df852647905a062e9d",
        "filename": "src/script/descriptor.h",
        "status": "modified",
        "additions": 22,
        "deletions": 50,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/descriptor.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/descriptor.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -22,55 +22,8 @@\n // they can be included inside by changing public keys to private keys (WIF\n // format), and changing xpubs by xprvs.\n //\n-// 1. Examples\n-//\n-// A P2PK descriptor with a fixed public key:\n-// - pk(0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798)\n-//\n-// A P2SH-P2WSH-P2PKH descriptor with a fixed public key:\n-// - sh(wsh(pkh(02e493dbf1c10d80f3581e4904930b1404cc6c13900ee0758474fa94abe8c4cd13)))\n-//\n-// A bare 1-of-2 multisig descriptor:\n-// - multi(1,022f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4,025cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc)\n-//\n-// A chain of P2PKH outputs (this needs the corresponding private key to derive):\n-// - pkh(xpub68Gmy5EdvgibQVfPdqkBBCHxA5htiqg55crXYuXoQRKfDBFA1WEjWgP6LHhwBZeNK1VTsfTFUHCdrfp1bgwQ9xv5ski8PX9rL2dZXvgGDnw/1'/2/*)\n-//\n-// 2. Grammar description:\n-//\n-// X: xpub or xprv encoded extended key\n-// I: decimal encoded integer\n-// H: Hex encoded byte array\n-// A: Address in P2PKH, P2SH, or Bech32 encoding\n-//\n-// S (Scripts):\n-// * pk(P): Pay-to-pubkey (P2PK) output for public key P.\n-// * pkh(P): Pay-to-pubkey-hash (P2PKH) output for public key P.\n-// * wpkh(P): Pay-to-witness-pubkey-hash (P2WPKH) output for public key P.\n-// * sh(S): Pay-to-script-hash (P2SH) output for script S\n-// * wsh(S): Pay-to-witness-script-hash (P2WSH) output for script S\n-// * combo(P): combination of P2PK, P2PKH, P2WPKH, and P2SH-P2WPKH for public key P.\n-// * multi(I,L): k-of-n multisig for given public keys\n-// * addr(A): Output to address\n-// * raw(H): scriptPubKey with raw bytes\n-//\n-// P (Public keys):\n-// * H: fixed public key (or WIF-encoded private key)\n-// * E: extended public key\n-// * E/*: (ranged) all unhardened direct children of an extended public key\n-// * E/*': (ranged) all hardened direct children of an extended public key\n-//\n-// L (Comma-separated lists of public keys):\n-// * P\n-// * L,P\n-//\n-// E (Extended public keys):\n-// * X\n-// * E/I: unhardened child\n-// * E/I': hardened child\n-// * E/Ih: hardened child (alternative notation)\n-//\n-// The top level is S.\n+// Reference documentation about the descriptor language can be found in\n+// doc/descriptors.md.\n \n /** Interface for parsed descriptor objects. */\n struct Descriptor {\n@@ -79,6 +32,10 @@ struct Descriptor {\n     /** Whether the expansion of this descriptor depends on the position. */\n     virtual bool IsRange() const = 0;\n \n+    /** Whether this descriptor has all information about signing ignoring lack of private keys.\n+     *  This is true for all descriptors except ones that use `raw` or `addr` constructions. */\n+    virtual bool IsSolvable() const = 0;\n+\n     /** Convert the descriptor back to a string, undoing parsing. */\n     virtual std::string ToString() const = 0;\n \n@@ -98,5 +55,20 @@ struct Descriptor {\n /** Parse a descriptor string. Included private keys are put in out. Returns nullptr if parsing fails. */\n std::unique_ptr<Descriptor> Parse(const std::string& descriptor, FlatSigningProvider& out);\n \n-#endif // BITCOIN_SCRIPT_DESCRIPTOR_H\n+/** Find a descriptor for the specified script, using information from provider where possible.\n+ *\n+ * A non-ranged descriptor which only generates the specified script will be returned in all\n+ * circumstances.\n+ *\n+ * For public keys with key origin information, this information will be preserved in the returned\n+ * descriptor.\n+ *\n+ * - If all information for solving `script` is present in `provider`, a descriptor will be returned\n+ *   which is `IsSolvable()` and encapsulates said information.\n+ * - Failing that, if `script` corresponds to a known address type, an \"addr()\" descriptor will be\n+ *   returned (which is not `IsSolvable()`).\n+ * - Failing that, a \"raw()\" descriptor is returned.\n+ */\n+std::unique_ptr<Descriptor> InferDescriptor(const CScript& script, const SigningProvider& provider);\n \n+#endif // BITCOIN_SCRIPT_DESCRIPTOR_H"
      },
      {
        "sha": "51bd2d6e9fd0facd3f24fab78021e3f85a5b0c3a",
        "filename": "src/script/ismine.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/ismine.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/ismine.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/ismine.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -23,9 +23,9 @@ namespace {\n  */\n enum class IsMineSigVersion\n {\n-    TOP = 0,        //! scriptPubKey execution\n-    P2SH = 1,       //! P2SH redeemScript\n-    WITNESS_V0 = 2  //! P2WSH witness script execution\n+    TOP = 0,        //!< scriptPubKey execution\n+    P2SH = 1,       //!< P2SH redeemScript\n+    WITNESS_V0 = 2, //!< P2WSH witness script execution\n };\n \n /**\n@@ -35,10 +35,10 @@ enum class IsMineSigVersion\n  */\n enum class IsMineResult\n {\n-    NO = 0,          //! Not ours\n-    WATCH_ONLY = 1,  //! Included in watch-only balance\n-    SPENDABLE = 2,   //! Included in all balances\n-    INVALID = 3,     //! Not spendable by anyone (uncompressed pubkey in segwit, P2SH inside P2SH or witness, witness inside witness)\n+    NO = 0,         //!< Not ours\n+    WATCH_ONLY = 1, //!< Included in watch-only balance\n+    SPENDABLE = 2,  //!< Included in all balances\n+    INVALID = 3,    //!< Not spendable by anyone (uncompressed pubkey in segwit, P2SH inside P2SH or witness, witness inside witness)\n };\n \n bool PermitsUncompressed(IsMineSigVersion sigversion)\n@@ -60,8 +60,7 @@ IsMineResult IsMineInner(const CKeyStore& keystore, const CScript& scriptPubKey,\n     IsMineResult ret = IsMineResult::NO;\n \n     std::vector<valtype> vSolutions;\n-    txnouttype whichType;\n-    Solver(scriptPubKey, whichType, vSolutions);\n+    txnouttype whichType = Solver(scriptPubKey, vSolutions);\n \n     CKeyID keyID;\n     switch (whichType)"
      },
      {
        "sha": "982aa241e7de6ce8ca2259d8167a5ccaf90dc633",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -6,7 +6,7 @@\n #include <script/script.h>\n \n #include <tinyformat.h>\n-#include <utilstrencodings.h>\n+#include <util/strencodings.h>\n \n const char* GetOpName(opcodetype opcode)\n {"
      },
      {
        "sha": "1d8ddba2f2d7a30598eee2d5544813f692b88ed2",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -38,6 +38,12 @@ static const int MAX_STACK_SIZE = 1000;\n // otherwise as UNIX timestamp.\n static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20 1985 UTC\n \n+// Maximum nLockTime. Since a lock time indicates the last invalid timestamp, a\n+// transaction with this lock time will never be valid unless lock time\n+// checking is disabled (by setting all input sequence numbers to\n+// SEQUENCE_FINAL).\n+static const uint32_t LOCKTIME_MAX = 0xFFFFFFFFU;\n+\n template <typename T>\n std::vector<unsigned char> ToByteVector(const T& in)\n {"
      },
      {
        "sha": "94005cf6f35bd8c789f7b9819337eaef3ef59809",
        "filename": "src/script/sigcache.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -9,7 +9,7 @@\n #include <pubkey.h>\n #include <random.h>\n #include <uint256.h>\n-#include <util.h>\n+#include <util/system.h>\n \n #include <cuckoocache.h>\n #include <boost/thread.hpp>"
      },
      {
        "sha": "e5651710f19f8a94d4cb0ded18594b80a0c90b08",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 78,
        "deletions": 36,
        "changes": 114,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -48,12 +48,8 @@ static bool GetCScript(const SigningProvider& provider, const SignatureData& sig\n     return false;\n }\n \n-static bool GetPubKey(const SigningProvider& provider, SignatureData& sigdata, const CKeyID& address, CPubKey& pubkey)\n+static bool GetPubKey(const SigningProvider& provider, const SignatureData& sigdata, const CKeyID& address, CPubKey& pubkey)\n {\n-    if (provider.GetPubKey(address, pubkey)) {\n-        sigdata.misc_pubkeys.emplace(pubkey.GetID(), pubkey);\n-        return true;\n-    }\n     // Look for pubkey in all partial sigs\n     const auto it = sigdata.signatures.find(address);\n     if (it != sigdata.signatures.end()) {\n@@ -63,21 +59,25 @@ static bool GetPubKey(const SigningProvider& provider, SignatureData& sigdata, c\n     // Look for pubkey in pubkey list\n     const auto& pk_it = sigdata.misc_pubkeys.find(address);\n     if (pk_it != sigdata.misc_pubkeys.end()) {\n-        pubkey = pk_it->second;\n+        pubkey = pk_it->second.first;\n         return true;\n     }\n-    return false;\n+    // Query the underlying provider\n+    return provider.GetPubKey(address, pubkey);\n }\n \n-static bool CreateSig(const BaseSignatureCreator& creator, SignatureData& sigdata, const SigningProvider& provider, std::vector<unsigned char>& sig_out, const CKeyID& keyid, const CScript& scriptcode, SigVersion sigversion)\n+static bool CreateSig(const BaseSignatureCreator& creator, SignatureData& sigdata, const SigningProvider& provider, std::vector<unsigned char>& sig_out, const CPubKey& pubkey, const CScript& scriptcode, SigVersion sigversion)\n {\n+    CKeyID keyid = pubkey.GetID();\n     const auto it = sigdata.signatures.find(keyid);\n     if (it != sigdata.signatures.end()) {\n         sig_out = it->second.second;\n         return true;\n     }\n-    CPubKey pubkey;\n-    GetPubKey(provider, sigdata, keyid, pubkey);\n+    KeyOriginInfo info;\n+    if (provider.GetKeyOrigin(keyid, info)) {\n+        sigdata.misc_pubkeys.emplace(keyid, std::make_pair(pubkey, std::move(info)));\n+    }\n     if (creator.CreateSig(provider, sig_out, keyid, scriptcode, sigversion)) {\n         auto i = sigdata.signatures.emplace(keyid, SigPair(pubkey, sig_out));\n         assert(i.second);\n@@ -101,8 +101,7 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n     std::vector<unsigned char> sig;\n \n     std::vector<valtype> vSolutions;\n-    if (!Solver(scriptPubKey, whichTypeRet, vSolutions))\n-        return false;\n+    whichTypeRet = Solver(scriptPubKey, vSolutions);\n \n     switch (whichTypeRet)\n     {\n@@ -111,15 +110,15 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n     case TX_WITNESS_UNKNOWN:\n         return false;\n     case TX_PUBKEY:\n-        if (!CreateSig(creator, sigdata, provider, sig, CPubKey(vSolutions[0]).GetID(), scriptPubKey, sigversion)) return false;\n+        if (!CreateSig(creator, sigdata, provider, sig, CPubKey(vSolutions[0]), scriptPubKey, sigversion)) return false;\n         ret.push_back(std::move(sig));\n         return true;\n     case TX_PUBKEYHASH: {\n         CKeyID keyID = CKeyID(uint160(vSolutions[0]));\n-        if (!CreateSig(creator, sigdata, provider, sig, keyID, scriptPubKey, sigversion)) return false;\n-        ret.push_back(std::move(sig));\n         CPubKey pubkey;\n-        GetPubKey(provider, sigdata, keyID, pubkey);\n+        if (!GetPubKey(provider, sigdata, keyID, pubkey)) return false;\n+        if (!CreateSig(creator, sigdata, provider, sig, pubkey, scriptPubKey, sigversion)) return false;\n+        ret.push_back(std::move(sig));\n         ret.push_back(ToByteVector(pubkey));\n         return true;\n     }\n@@ -135,7 +134,7 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n         ret.push_back(valtype()); // workaround CHECKMULTISIG bug\n         for (size_t i = 1; i < vSolutions.size() - 1; ++i) {\n             CPubKey pubkey = CPubKey(vSolutions[i]);\n-            if (ret.size() < required + 1 && CreateSig(creator, sigdata, provider, sig, pubkey.GetID(), scriptPubKey, sigversion)) {\n+            if (ret.size() < required + 1 && CreateSig(creator, sigdata, provider, sig, pubkey, scriptPubKey, sigversion)) {\n                 ret.push_back(std::move(sig));\n             }\n         }\n@@ -233,28 +232,40 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     return sigdata.complete;\n }\n \n-bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, SignatureData& sigdata, int index, int sighash)\n+bool PSBTInputSigned(PSBTInput& input)\n+{\n+    return !input.final_script_sig.empty() || !input.final_script_witness.IsNull();\n+}\n+\n+bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction& psbt, int index, int sighash)\n {\n-    // if this input has a final scriptsig or scriptwitness, don't do anything with it\n-    if (!input.final_script_sig.empty() || !input.final_script_witness.IsNull()) {\n+    PSBTInput& input = psbt.inputs.at(index);\n+    const CMutableTransaction& tx = *psbt.tx;\n+\n+    if (PSBTInputSigned(input)) {\n         return true;\n     }\n \n     // Fill SignatureData with input info\n+    SignatureData sigdata;\n     input.FillSignatureData(sigdata);\n \n     // Get UTXO\n     bool require_witness_sig = false;\n     CTxOut utxo;\n+\n+    // Verify input sanity, which checks that at most one of witness or non-witness utxos is provided.\n+    if (!input.IsSane()) {\n+        return false;\n+    }\n+\n     if (input.non_witness_utxo) {\n         // If we're taking our information from a non-witness UTXO, verify that it matches the prevout.\n-        if (input.non_witness_utxo->GetHash() != tx.vin[index].prevout.hash) return false;\n-        // If both witness and non-witness UTXO are provided, verify that they match. This check shouldn't\n-        // matter, as the PSBT deserializer enforces only one of both is provided, and the only way both\n-        // can be present is when they're added simultaneously by FillPSBT (in which case they always match).\n-        // Still, check in order to not rely on callers to enforce this.\n-        if (!input.witness_utxo.IsNull() && input.non_witness_utxo->vout[tx.vin[index].prevout.n] != input.witness_utxo) return false;\n-        utxo = input.non_witness_utxo->vout[tx.vin[index].prevout.n];\n+        COutPoint prevout = tx.vin[index].prevout;\n+        if (input.non_witness_utxo->GetHash() != prevout.hash) {\n+            return false;\n+        }\n+        utxo = input.non_witness_utxo->vout[prevout.n];\n     } else if (!input.witness_utxo.IsNull()) {\n         utxo = input.witness_utxo;\n         // When we're taking our information from a witness UTXO, we can't verify it is actually data from\n@@ -272,6 +283,13 @@ bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& t\n     // Verify that a witness signature was produced in case one was required.\n     if (require_witness_sig && !sigdata.witness) return false;\n     input.FromSignatureData(sigdata);\n+\n+    // If we have a witness signature, use the smaller witness UTXO.\n+    if (sigdata.witness) {\n+        input.witness_utxo = utxo;\n+        input.non_witness_utxo = nullptr;\n+    }\n+\n     return sig_complete;\n }\n \n@@ -329,9 +347,8 @@ SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nI\n     }\n \n     // Get scripts\n-    txnouttype script_type;\n     std::vector<std::vector<unsigned char>> solutions;\n-    Solver(txout.scriptPubKey, script_type, solutions);\n+    txnouttype script_type = Solver(txout.scriptPubKey, solutions);\n     SigVersion sigversion = SigVersion::BASE;\n     CScript next_script = txout.scriptPubKey;\n \n@@ -342,7 +359,7 @@ SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nI\n         next_script = std::move(redeem_script);\n \n         // Get redeemScript type\n-        Solver(next_script, script_type, solutions);\n+        script_type = Solver(next_script, solutions);\n         stack.script.pop_back();\n     }\n     if (script_type == TX_WITNESS_V0_SCRIPTHASH && !stack.witness.empty() && !stack.witness.back().empty()) {\n@@ -352,7 +369,7 @@ SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nI\n         next_script = std::move(witness_script);\n \n         // Get witnessScript type\n-        Solver(next_script, script_type, solutions);\n+        script_type = Solver(next_script, solutions);\n         stack.witness.pop_back();\n         stack.script = std::move(stack.witness);\n         stack.witness.clear();\n@@ -492,6 +509,12 @@ bool IsSolvable(const SigningProvider& provider, const CScript& script)\n     return false;\n }\n \n+PartiallySignedTransaction::PartiallySignedTransaction(const CTransaction& tx) : tx(tx)\n+{\n+    inputs.resize(tx.vin.size());\n+    outputs.resize(tx.vout.size());\n+}\n+\n bool PartiallySignedTransaction::IsNull() const\n {\n     return !tx && inputs.empty() && outputs.empty() && unknown.empty();\n@@ -543,7 +566,7 @@ void PSBTInput::FillSignatureData(SignatureData& sigdata) const\n         sigdata.witness_script = witness_script;\n     }\n     for (const auto& key_pair : hd_keypaths) {\n-        sigdata.misc_pubkeys.emplace(key_pair.first.GetID(), key_pair.first);\n+        sigdata.misc_pubkeys.emplace(key_pair.first.GetID(), key_pair);\n     }\n }\n \n@@ -571,6 +594,9 @@ void PSBTInput::FromSignatureData(const SignatureData& sigdata)\n     if (witness_script.empty() && !sigdata.witness_script.empty()) {\n         witness_script = sigdata.witness_script;\n     }\n+    for (const auto& entry : sigdata.misc_pubkeys) {\n+        hd_keypaths.emplace(entry.second);\n+    }\n }\n \n void PSBTInput::Merge(const PSBTInput& input)\n@@ -612,7 +638,7 @@ void PSBTOutput::FillSignatureData(SignatureData& sigdata) const\n         sigdata.witness_script = witness_script;\n     }\n     for (const auto& key_pair : hd_keypaths) {\n-        sigdata.misc_pubkeys.emplace(key_pair.first.GetID(), key_pair.first);\n+        sigdata.misc_pubkeys.emplace(key_pair.first.GetID(), key_pair);\n     }\n }\n \n@@ -624,6 +650,9 @@ void PSBTOutput::FromSignatureData(const SignatureData& sigdata)\n     if (witness_script.empty() && !sigdata.witness_script.empty()) {\n         witness_script = sigdata.witness_script;\n     }\n+    for (const auto& entry : sigdata.misc_pubkeys) {\n+        hd_keypaths.emplace(entry.second);\n+    }\n }\n \n bool PSBTOutput::IsNull() const\n@@ -640,18 +669,31 @@ void PSBTOutput::Merge(const PSBTOutput& output)\n     if (witness_script.empty() && !output.witness_script.empty()) witness_script = output.witness_script;\n }\n \n-bool PublicOnlySigningProvider::GetCScript(const CScriptID &scriptid, CScript& script) const\n+bool HidingSigningProvider::GetCScript(const CScriptID& scriptid, CScript& script) const\n {\n     return m_provider->GetCScript(scriptid, script);\n }\n \n-bool PublicOnlySigningProvider::GetPubKey(const CKeyID &address, CPubKey& pubkey) const\n+bool HidingSigningProvider::GetPubKey(const CKeyID& keyid, CPubKey& pubkey) const\n+{\n+    return m_provider->GetPubKey(keyid, pubkey);\n+}\n+\n+bool HidingSigningProvider::GetKey(const CKeyID& keyid, CKey& key) const\n+{\n+    if (m_hide_secret) return false;\n+    return m_provider->GetKey(keyid, key);\n+}\n+\n+bool HidingSigningProvider::GetKeyOrigin(const CKeyID& keyid, KeyOriginInfo& info) const\n {\n-    return m_provider->GetPubKey(address, pubkey);\n+    if (m_hide_origin) return false;\n+    return m_provider->GetKeyOrigin(keyid, info);\n }\n \n bool FlatSigningProvider::GetCScript(const CScriptID& scriptid, CScript& script) const { return LookupHelper(scripts, scriptid, script); }\n bool FlatSigningProvider::GetPubKey(const CKeyID& keyid, CPubKey& pubkey) const { return LookupHelper(pubkeys, keyid, pubkey); }\n+bool FlatSigningProvider::GetKeyOrigin(const CKeyID& keyid, KeyOriginInfo& info) const { return LookupHelper(origins, keyid, info); }\n bool FlatSigningProvider::GetKey(const CKeyID& keyid, CKey& key) const { return LookupHelper(keys, keyid, key); }\n \n FlatSigningProvider Merge(const FlatSigningProvider& a, const FlatSigningProvider& b)"
      },
      {
        "sha": "20c7203b26c1cdcc53bee98f02cff6071f7c95bf",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 75,
        "deletions": 20,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "patch": "@@ -20,6 +20,17 @@ class CTransaction;\n \n struct CMutableTransaction;\n \n+struct KeyOriginInfo\n+{\n+    unsigned char fingerprint[4];\n+    std::vector<uint32_t> path;\n+\n+    friend bool operator==(const KeyOriginInfo& a, const KeyOriginInfo& b)\n+    {\n+        return std::equal(std::begin(a.fingerprint), std::end(a.fingerprint), std::begin(b.fingerprint)) && a.path == b.path;\n+    }\n+};\n+\n /** An interface to be implemented by keystores that support signing. */\n class SigningProvider\n {\n@@ -28,29 +39,36 @@ class SigningProvider\n     virtual bool GetCScript(const CScriptID &scriptid, CScript& script) const { return false; }\n     virtual bool GetPubKey(const CKeyID &address, CPubKey& pubkey) const { return false; }\n     virtual bool GetKey(const CKeyID &address, CKey& key) const { return false; }\n+    virtual bool GetKeyOrigin(const CKeyID& keyid, KeyOriginInfo& info) const { return false; }\n };\n \n extern const SigningProvider& DUMMY_SIGNING_PROVIDER;\n \n-class PublicOnlySigningProvider : public SigningProvider\n+class HidingSigningProvider : public SigningProvider\n {\n private:\n+    const bool m_hide_secret;\n+    const bool m_hide_origin;\n     const SigningProvider* m_provider;\n \n public:\n-    PublicOnlySigningProvider(const SigningProvider* provider) : m_provider(provider) {}\n-    bool GetCScript(const CScriptID &scriptid, CScript& script) const;\n-    bool GetPubKey(const CKeyID &address, CPubKey& pubkey) const;\n+    HidingSigningProvider(const SigningProvider* provider, bool hide_secret, bool hide_origin) : m_hide_secret(hide_secret), m_hide_origin(hide_origin), m_provider(provider) {}\n+    bool GetCScript(const CScriptID& scriptid, CScript& script) const override;\n+    bool GetPubKey(const CKeyID& keyid, CPubKey& pubkey) const override;\n+    bool GetKey(const CKeyID& keyid, CKey& key) const override;\n+    bool GetKeyOrigin(const CKeyID& keyid, KeyOriginInfo& info) const override;\n };\n \n struct FlatSigningProvider final : public SigningProvider\n {\n     std::map<CScriptID, CScript> scripts;\n     std::map<CKeyID, CPubKey> pubkeys;\n+    std::map<CKeyID, KeyOriginInfo> origins;\n     std::map<CKeyID, CKey> keys;\n \n     bool GetCScript(const CScriptID& scriptid, CScript& script) const override;\n     bool GetPubKey(const CKeyID& keyid, CPubKey& pubkey) const override;\n+    bool GetKeyOrigin(const CKeyID& keyid, KeyOriginInfo& info) const override;\n     bool GetKey(const CKeyID& keyid, CKey& key) const override;\n };\n \n@@ -98,7 +116,7 @@ struct SignatureData {\n     CScript witness_script; ///< The witnessScript (if any) for the input. witnessScripts are used in P2WSH outputs.\n     CScriptWitness scriptWitness; ///< The scriptWitness of an input. Contains complete signatures or the traditional partial signatures format. scriptWitness is part of a transaction input per BIP 144.\n     std::map<CKeyID, SigPair> signatures; ///< BIP 174 style partial signatures for the input. May contain all signatures necessary for producing a final scriptSig or scriptWitness.\n-    std::map<CKeyID, CPubKey> misc_pubkeys;\n+    std::map<CKeyID, std::pair<CPubKey, KeyOriginInfo>> misc_pubkeys;\n \n     SignatureData() {}\n     explicit SignatureData(const CScript& script) : scriptSig(script) {}\n@@ -136,7 +154,7 @@ static constexpr uint8_t PSBT_SEPARATOR = 0x00;\n template<typename Stream, typename... X>\n void SerializeToVector(Stream& s, const X&... args)\n {\n-    WriteCompactSize(s, GetSerializeSizeMany(s, args...));\n+    WriteCompactSize(s, GetSerializeSizeMany(s.GetVersion(), args...));\n     SerializeMany(s, args...);\n }\n \n@@ -155,7 +173,7 @@ void UnserializeFromVector(Stream& s, X&... args)\n \n // Deserialize HD keypaths into a map\n template<typename Stream>\n-void DeserializeHDKeypaths(Stream& s, const std::vector<unsigned char>& key, std::map<CPubKey, std::vector<uint32_t>>& hd_keypaths)\n+void DeserializeHDKeypaths(Stream& s, const std::vector<unsigned char>& key, std::map<CPubKey, KeyOriginInfo>& hd_keypaths)\n {\n     // Make sure that the key is the size of pubkey + 1\n     if (key.size() != CPubKey::PUBLIC_KEY_SIZE + 1 && key.size() != CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1) {\n@@ -172,25 +190,34 @@ void DeserializeHDKeypaths(Stream& s, const std::vector<unsigned char>& key, std\n \n     // Read in key path\n     uint64_t value_len = ReadCompactSize(s);\n-    std::vector<uint32_t> keypath;\n-    for (unsigned int i = 0; i < value_len; i += sizeof(uint32_t)) {\n+    if (value_len % 4 || value_len == 0) {\n+        throw std::ios_base::failure(\"Invalid length for HD key path\");\n+    }\n+\n+    KeyOriginInfo keypath;\n+    s >> keypath.fingerprint;\n+    for (unsigned int i = 4; i < value_len; i += sizeof(uint32_t)) {\n         uint32_t index;\n         s >> index;\n-        keypath.push_back(index);\n+        keypath.path.push_back(index);\n     }\n \n     // Add to map\n-    hd_keypaths.emplace(pubkey, keypath);\n+    hd_keypaths.emplace(pubkey, std::move(keypath));\n }\n \n // Serialize HD keypaths to a stream from a map\n template<typename Stream>\n-void SerializeHDKeypaths(Stream& s, const std::map<CPubKey, std::vector<uint32_t>>& hd_keypaths, uint8_t type)\n+void SerializeHDKeypaths(Stream& s, const std::map<CPubKey, KeyOriginInfo>& hd_keypaths, uint8_t type)\n {\n     for (auto keypath_pair : hd_keypaths) {\n+        if (!keypath_pair.first.IsValid()) {\n+            throw std::ios_base::failure(\"Invalid CPubKey being serialized\");\n+        }\n         SerializeToVector(s, type, MakeSpan(keypath_pair.first));\n-        WriteCompactSize(s, keypath_pair.second.size() * sizeof(uint32_t));\n-        for (auto& path : keypath_pair.second) {\n+        WriteCompactSize(s, (keypath_pair.second.path.size() + 1) * sizeof(uint32_t));\n+        s << keypath_pair.second.fingerprint;\n+        for (const auto& path : keypath_pair.second.path) {\n             s << path;\n         }\n     }\n@@ -205,7 +232,7 @@ struct PSBTInput\n     CScript witness_script;\n     CScript final_script_sig;\n     CScriptWitness final_script_witness;\n-    std::map<CPubKey, std::vector<uint32_t>> hd_keypaths;\n+    std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n     std::map<CKeyID, SigPair> partial_sigs;\n     std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n     int sighash_type = 0;\n@@ -283,14 +310,18 @@ struct PSBTInput\n     template <typename Stream>\n     inline void Unserialize(Stream& s) {\n         // Read loop\n+        bool found_sep = false;\n         while(!s.empty()) {\n             // Read\n             std::vector<unsigned char> key;\n             s >> key;\n \n             // the key is empty if that was actually a separator byte\n             // This is a special case for key lengths 0 as those are not allowed (except for separator)\n-            if (key.empty()) return;\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n \n             // First byte of key is the type\n             unsigned char type = key[0];\n@@ -405,6 +436,10 @@ struct PSBTInput\n                     break;\n             }\n         }\n+\n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of an input map\");\n+        }\n     }\n \n     template <typename Stream>\n@@ -418,7 +453,7 @@ struct PSBTOutput\n {\n     CScript redeem_script;\n     CScript witness_script;\n-    std::map<CPubKey, std::vector<uint32_t>> hd_keypaths;\n+    std::map<CPubKey, KeyOriginInfo> hd_keypaths;\n     std::map<std::vector<unsigned char>, std::vector<unsigned char>> unknown;\n \n     bool IsNull() const;\n@@ -458,14 +493,18 @@ struct PSBTOutput\n     template <typename Stream>\n     inline void Unserialize(Stream& s) {\n         // Read loop\n+        bool found_sep = false;\n         while(!s.empty()) {\n             // Read\n             std::vector<unsigned char> key;\n             s >> key;\n \n             // the key is empty if that was actually a separator byte\n             // This is a special case for key lengths 0 as those are not allowed (except for separator)\n-            if (key.empty()) return;\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n \n             // First byte of key is the type\n             unsigned char type = key[0];\n@@ -510,6 +549,10 @@ struct PSBTOutput\n                 }\n             }\n         }\n+\n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of an output map\");\n+        }\n     }\n \n     template <typename Stream>\n@@ -531,6 +574,7 @@ struct PartiallySignedTransaction\n     bool IsSane() const;\n     PartiallySignedTransaction() {}\n     PartiallySignedTransaction(const PartiallySignedTransaction& psbt_in) : tx(psbt_in.tx), inputs(psbt_in.inputs), outputs(psbt_in.outputs), unknown(psbt_in.unknown) {}\n+    explicit PartiallySignedTransaction(const CTransaction& tx);\n \n     // Only checks if they refer to the same transaction\n     friend bool operator==(const PartiallySignedTransaction& a, const PartiallySignedTransaction &b)\n@@ -585,14 +629,18 @@ struct PartiallySignedTransaction\n         }\n \n         // Read global data\n+        bool found_sep = false;\n         while(!s.empty()) {\n             // Read\n             std::vector<unsigned char> key;\n             s >> key;\n \n             // the key is empty if that was actually a separator byte\n             // This is a special case for key lengths 0 as those are not allowed (except for separator)\n-            if (key.empty()) break;\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n \n             // First byte of key is the type\n             unsigned char type = key[0];\n@@ -632,6 +680,10 @@ struct PartiallySignedTransaction\n             }\n         }\n \n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of the global map\");\n+        }\n+\n         // Make sure that we got an unsigned tx\n         if (!tx) {\n             throw std::ios_base::failure(\"No unsigned transcation was provided\");\n@@ -686,8 +738,11 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n bool SignSignature(const SigningProvider &provider, const CScript& fromPubKey, CMutableTransaction& txTo, unsigned int nIn, const CAmount& amount, int nHashType);\n bool SignSignature(const SigningProvider &provider, const CTransaction& txFrom, CMutableTransaction& txTo, unsigned int nIn, int nHashType);\n \n+/** Checks whether a PSBTInput is already signed. */\n+bool PSBTInputSigned(PSBTInput& input);\n+\n /** Signs a PSBTInput, verifying that all provided data matches what is being signed. */\n-bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, SignatureData& sigdata, int index, int sighash = 1);\n+bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction& psbt, int index, int sighash = SIGHASH_ALL);\n \n /** Extract signature data from a transaction input, and insert it. */\n SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout);"
      },
      {
        "sha": "31bfd04b0f4d7715eab6c580b673f8428ee38559",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "fc20fb6a08ef4e7f41406c90837ebb2011e00ad6",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "2d0cfbbbf04aa175cd2414d7a80f8076cdfaaa35",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 6,
        "deletions": 14,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "dc20f7a9da4231caf96b6247f3db3101c4d51456",
        "filename": "src/streams.h",
        "status": "modified",
        "additions": 167,
        "deletions": 0,
        "changes": 167,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/streams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/streams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/streams.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "8d577cf521a47ed08cd00d180531a0e73a85c700",
        "filename": "src/support/lockedpool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/support/lockedpool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/support/lockedpool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/lockedpool.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "30811f5f898f4e56778c914d2f4303c72a7c1f58",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "40709bdd7fe43b2444a1a840ce9fce8d072cf3ac",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 59,
        "deletions": 53,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "8c2873d91657eb28afd8ee24e5e4f88ec3fdfa70",
        "filename": "src/test/addrman_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "5a108dcdadf9696f6c1f1b00b1ce4747a8d6f9b2",
        "filename": "src/test/allocator_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/allocator_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/allocator_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/allocator_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "1ff040b0775912b2cf1d580a3515ecece4d694ce",
        "filename": "src/test/amount_tests.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 26,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/amount_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/amount_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/amount_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "32af843bf6ebb04fe958f61ab4e262a4cb3e1696",
        "filename": "src/test/base32_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/base32_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/base32_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base32_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "f8f9b3c1a7e3554a01b1e89b9236f53b67f5c252",
        "filename": "src/test/base58_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/base58_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/base58_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base58_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "0abbb682a7c452dfb9890c8ce1886b5682e105ff",
        "filename": "src/test/base64_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/base64_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/base64_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base64_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "c9951f4b7e50af3c376f1ce87fcad422312b4f0a",
        "filename": "src/test/bip32_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/bip32_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/bip32_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bip32_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "309b8d2d060342138bc71537adc61d2b2d742ef3",
        "filename": "src/test/blockencodings_tests.cpp",
        "status": "modified",
        "additions": 48,
        "deletions": 3,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/blockencodings_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/blockencodings_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockencodings_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "2144202b8d5411f56d76062bc853741c47b010c0",
        "filename": "src/test/blockfilter_tests.cpp",
        "status": "added",
        "additions": 147,
        "deletions": 0,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/blockfilter_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/blockfilter_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockfilter_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "c900bee199e19498ce96571aaa4d1f865510caef",
        "filename": "src/test/bloom_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/bloom_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/bloom_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bloom_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "a757e06a9d4e6f6dbae2a0172418619b98e0a1f3",
        "filename": "src/test/checkqueue_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/checkqueue_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/checkqueue_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/checkqueue_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "d3cbaedf00e7e72056e7cd3e0732b9c7442b5d23",
        "filename": "src/test/coins_tests.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 14,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/coins_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/coins_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/coins_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "e686c05165ca45cf081106edb2b2aaa64a1c03fe",
        "filename": "src/test/compress_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/compress_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/compress_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/compress_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "f3fd83a0cc072498f895c0139c275bc47e0ce5e8",
        "filename": "src/test/crypto_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/crypto_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/crypto_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/crypto_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "dbceb9d2e00b45ce915a1f8e8d5ca11ae3dfcde3",
        "filename": "src/test/cuckoocache_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/cuckoocache_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/cuckoocache_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/cuckoocache_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "134b788eedf22dff0cee37aaf748ea3882350de7",
        "filename": "src/test/data/blockfilters.json",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/data/blockfilters.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/data/blockfilters.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/blockfilters.json?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "1034d4ade27f5e3784dec33d932880fcbeebf550",
        "filename": "src/test/dbwrapper_tests.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/dbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/dbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/dbwrapper_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "97cf5ed34527142035d361041625a8ca6eb8a878",
        "filename": "src/test/denialofservice_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/denialofservice_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/denialofservice_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/denialofservice_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "0e98f5a82624982755631b205878fc1c323d2e1e",
        "filename": "src/test/descriptor_tests.cpp",
        "status": "modified",
        "additions": 42,
        "deletions": 14,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/descriptor_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/descriptor_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/descriptor_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "93aee10bb7bb2ac175c158dd2f711daf00506e65",
        "filename": "src/test/fs_tests.cpp",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/fs_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/fs_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fs_tests.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      },
      {
        "sha": "ca8c65806ff884722f5473f263a953c457862a7f",
        "filename": "src/test/gen/crypto_gen.cpp",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/gen/crypto_gen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7a9b4c2d7738a547afab20d5411c674cef8dd1f/src/test/gen/crypto_gen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/gen/crypto_gen.cpp?ref=f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      }
    ]
  },
  {
    "sha": "85f3640d31edc838be1a6d6604981c747f7abd64",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NWYzNjQwZDMxZWRjODM4YmUxYTZkNjYwNDk4MWM3NDdmN2FiZDY0",
    "commit": {
      "author": {
        "name": "Ivan Ivanov",
        "email": "kzv@narod.ru",
        "date": "2018-11-28T11:08:23Z"
      },
      "committer": {
        "name": "Ivan Ivanov",
        "email": "kzv@narod.ru",
        "date": "2018-11-28T11:08:23Z"
      },
      "message": "remove unused flag fCheckDuplicateInputs",
      "tree": {
        "sha": "e028f0e92baf643db2e51d5b64c599e2fc8d9d88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e028f0e92baf643db2e51d5b64c599e2fc8d9d88"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85f3640d31edc838be1a6d6604981c747f7abd64",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85f3640d31edc838be1a6d6604981c747f7abd64",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/85f3640d31edc838be1a6d6604981c747f7abd64",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85f3640d31edc838be1a6d6604981c747f7abd64/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7a9b4c2d7738a547afab20d5411c674cef8dd1f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f7a9b4c2d7738a547afab20d5411c674cef8dd1f"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 9,
      "deletions": 12
    },
    "files": [
      {
        "sha": "e741105d5a54f79f36e1deceae89c946eb282413",
        "filename": "src/consensus/tx_verify.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 10,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85f3640d31edc838be1a6d6604981c747f7abd64/src/consensus/tx_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85f3640d31edc838be1a6d6604981c747f7abd64/src/consensus/tx_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.cpp?ref=85f3640d31edc838be1a6d6604981c747f7abd64",
        "patch": "@@ -156,7 +156,7 @@ int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& i\n     return nSigOps;\n }\n \n-bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fCheckDuplicateInputs)\n+bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n {\n     // Basic checks that don't depend on any context\n     if (tx.vin.empty())\n@@ -180,16 +180,13 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fChe\n             return state.DoS(100, false, REJECT_INVALID, \"bad-txns-txouttotal-toolarge\");\n     }\n \n-    // Check for duplicate inputs - note that this check is slow so we skip it in CheckBlock\n-    if (fCheckDuplicateInputs) {\n-        std::set<COutPoint> vInOutPoints;\n-        for (const auto& txin : tx.vin)\n-        {\n-            if (!vInOutPoints.insert(txin.prevout).second)\n-                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-duplicate\");\n-        }\n+    std::set<COutPoint> vInOutPoints;\n+    for (const auto& txin : tx.vin)\n+    {\n+        if (!vInOutPoints.insert(txin.prevout).second)\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-duplicate\");\n     }\n-\n+ \n     if (tx.IsCoinBase())\n     {\n         if (tx.vin[0].scriptSig.size() < 2 || tx.vin[0].scriptSig.size() > 100)"
      },
      {
        "sha": "1d5ee6baded02dd0146d619ba4f6be1c0dac1e64",
        "filename": "src/consensus/tx_verify.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85f3640d31edc838be1a6d6604981c747f7abd64/src/consensus/tx_verify.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85f3640d31edc838be1a6d6604981c747f7abd64/src/consensus/tx_verify.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.h?ref=85f3640d31edc838be1a6d6604981c747f7abd64",
        "patch": "@@ -18,7 +18,7 @@ class CValidationState;\n /** Transaction validation functions */\n \n /** Context-independent validity checks */\n-bool CheckTransaction(const CTransaction& tx, CValidationState& state, bool fCheckDuplicateInputs=true);\n+bool CheckTransaction(const CTransaction& tx, CValidationState& state);\n \n namespace Consensus {\n /**"
      },
      {
        "sha": "9b3d804bc9fc4671ff4d423090b746e671fd7e3e",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85f3640d31edc838be1a6d6604981c747f7abd64/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85f3640d31edc838be1a6d6604981c747f7abd64/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=85f3640d31edc838be1a6d6604981c747f7abd64",
        "patch": "@@ -3120,7 +3120,7 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n \n     // Check transactions\n     for (const auto& tx : block.vtx)\n-        if (!CheckTransaction(*tx, state, true))\n+        if (!CheckTransaction(*tx, state))\n             return state.Invalid(false, state.GetRejectCode(), state.GetRejectReason(),\n                                  strprintf(\"Transaction check failed (tx hash %s) %s\", tx->GetHash().ToString(), state.GetDebugMessage()));\n "
      }
    ]
  },
  {
    "sha": "ccb4f17beb180b881ca72248709a06e7f18d9c14",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjY2I0ZjE3YmViMTgwYjg4MWNhNzIyNDg3MDlhMDZlN2YxOGQ5YzE0",
    "commit": {
      "author": {
        "name": "Ivan Ivanov",
        "email": "kzv@narod.ru",
        "date": "2018-11-28T11:25:58Z"
      },
      "committer": {
        "name": "Ivan Ivanov",
        "email": "kzv@narod.ru",
        "date": "2018-11-28T11:25:58Z"
      },
      "message": "remove unused flag",
      "tree": {
        "sha": "7b7890169b84a7ccc0382d85e98f02f092438e1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b7890169b84a7ccc0382d85e98f02f092438e1e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ccb4f17beb180b881ca72248709a06e7f18d9c14",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccb4f17beb180b881ca72248709a06e7f18d9c14",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ccb4f17beb180b881ca72248709a06e7f18d9c14",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccb4f17beb180b881ca72248709a06e7f18d9c14/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "85f3640d31edc838be1a6d6604981c747f7abd64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85f3640d31edc838be1a6d6604981c747f7abd64",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/85f3640d31edc838be1a6d6604981c747f7abd64"
      },
      {
        "sha": "600b85bb417295f4d9c7d5b9fd8502f3c8f113e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/600b85bb417295f4d9c7d5b9fd8502f3c8f113e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/600b85bb417295f4d9c7d5b9fd8502f3c8f113e3"
      }
    ],
    "stats": {
      "total": 451,
      "additions": 365,
      "deletions": 86
    },
    "files": [
      {
        "sha": "2aebf1cd5425d992920379594c60ca04bb4ae3ba",
        "filename": ".appveyor.yml",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb4f17beb180b881ca72248709a06e7f18d9c14/.appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb4f17beb180b881ca72248709a06e7f18d9c14/.appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.appveyor.yml?ref=ccb4f17beb180b881ca72248709a06e7f18d9c14",
        "patch": "@@ -0,0 +1,58 @@\n+version: '{branch}.{build}'\n+skip_tags: true\n+image: Visual Studio 2017\n+configuration: Release\n+platform: x64\n+clone_depth: 5\n+environment:\n+  APPVEYOR_SAVE_CACHE_ON_ERROR: true\n+  CLCACHE_SERVER: 1\n+  PACKAGES: boost-filesystem boost-signals2 boost-test libevent openssl zeromq berkeleydb secp256k1 leveldb\n+  PATH: 'C:\\Python37-x64;C:\\Python37-x64\\Scripts;%PATH%'\n+  PYTHONUTF8: 1\n+cache:\n+- C:\\tools\\vcpkg\\installed\n+- C:\\Users\\appveyor\\clcache\n+install:\n+- cmd: pip install --quiet git+https://github.com/frerich/clcache.git@v4.2.0\n+# Disable zmq test for now since python zmq library on Windows would cause Access violation sometimes.\n+# - cmd: pip install zmq\n+- cmd: vcpkg install --triplet %PLATFORM%-windows-static %PACKAGES% > NUL\n+- cmd: del /s /q C:\\Tools\\vcpkg\\installed\\%PLATFORM%-windows-static\\debug # Remove unused debug library\n+before_build:\n+- ps:  clcache -M 536870912\n+- cmd: python build_msvc\\msvc-autogen.py\n+- ps:  $files = (Get-ChildItem -Recurse | where {$_.extension -eq \".vcxproj\"}).FullName\n+- ps:  for (${i} = 0; ${i} -lt ${files}.length; ${i}++) {\n+           ${content} = (Get-Content ${files}[${i}]);\n+           ${content} = ${content}.Replace(\"</RuntimeLibrary>\", \"</RuntimeLibrary><DebugInformationFormat>None</DebugInformationFormat>\");\n+           ${content} = ${content}.Replace(\"<WholeProgramOptimization>true\", \"<WholeProgramOptimization>false\");\n+           ${content} = ${content}.Replace(\"NDEBUG;\", \"\");\n+           Set-Content ${files}[${i}] ${content};\n+       }\n+- ps:  Start-Process clcache-server\n+- ps:  fsutil behavior set disablelastaccess 0 # Enable Access time feature on Windows (for clcache)\n+build_script:\n+- cmd: msbuild /p:TrackFileAccess=false /p:CLToolExe=clcache.exe build_msvc\\bitcoin.sln /m /v:q /nowarn:C4244;C4267;C4715 /nologo\n+after_build:\n+- ps:  fsutil behavior set disablelastaccess 1 # Disable Access time feature on Windows (better performance)\n+- ps:  clcache -z\n+before_test:\n+- ps:  ${conf_ini} = (Get-Content([IO.Path]::Combine(${env:APPVEYOR_BUILD_FOLDER}, \"test\", \"config.ini.in\")))\n+- ps:  ${conf_ini} = ${conf_ini}.Replace(\"@abs_top_srcdir@\", ${env:APPVEYOR_BUILD_FOLDER})\n+- ps:  ${conf_ini} = ${conf_ini}.Replace(\"@abs_top_builddir@\", ${env:APPVEYOR_BUILD_FOLDER})\n+- ps:  ${conf_ini} = ${conf_ini}.Replace(\"@EXEEXT@\", \".exe\")\n+- ps:  ${conf_ini} = ${conf_ini}.Replace(\"@ENABLE_WALLET_TRUE@\", \"\")\n+- ps:  ${conf_ini} = ${conf_ini}.Replace(\"@BUILD_BITCOIN_CLI_TRUE@\", \"\")\n+- ps:  ${conf_ini} = ${conf_ini}.Replace(\"@BUILD_BITCOIND_TRUE@\", \"\")\n+- ps:  ${conf_ini} = ${conf_ini}.Replace(\"@ENABLE_ZMQ_TRUE@\", \"\")\n+- ps:  ${utf8} = New-Object System.Text.UTF8Encoding ${false}\n+- ps:  '[IO.File]::WriteAllLines([IO.Path]::Combine(${env:APPVEYOR_BUILD_FOLDER}, \"test\", \"config.ini\"), ${conf_ini}, ${utf8})'\n+- ps:  move \"build_msvc\\${env:PLATFORM}\\${env:CONFIGURATION}\\*.exe\" src\n+test_script:\n+- cmd: src\\test_bitcoin.exe -k stdout -e stdout 2> NUL\n+- cmd: src\\bench_bitcoin.exe -evals=1 -scaling=0 > NUL\n+- ps:  python test\\util\\bitcoin-util-test.py\n+- cmd: python test\\util\\rpcauth-test.py\n+- cmd: python test\\functional\\test_runner.py --ci --force --quiet --combinedlogslen=4000 --failfast\n+deploy: off"
      },
      {
        "sha": "00d5478c4e6501dc6acae6d31a70ef05d2e11d0e",
        "filename": ".github/PULL_REQUEST_TEMPLATE.md",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb4f17beb180b881ca72248709a06e7f18d9c14/.github/PULL_REQUEST_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb4f17beb180b881ca72248709a06e7f18d9c14/.github/PULL_REQUEST_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/PULL_REQUEST_TEMPLATE.md?ref=ccb4f17beb180b881ca72248709a06e7f18d9c14",
        "patch": "@@ -0,0 +1,31 @@\n+Pull requests without a rationale and clear improvement may be closed\n+immediately.\n+\n+Please provide clear motivation for your patch and explain how it improves\n+Bitcoin Core user experience or Bitcoin Core developer experience\n+significantly.\n+\n+* Any test improvements or new tests that improve coverage are always welcome.\n+* All other changes should have accompanying unit tests (see `src/test/`) or\n+  functional tests (see `test/`). Contributors should note which tests cover\n+  modified code. If no tests exist for a region of modified code, new tests\n+  should accompany the change.\n+* Bug fixes are most welcome when they come with steps to reproduce or an\n+  explanation of the potential issue as well as reasoning for the way the bug\n+  was fixed.\n+* Features are welcome, but might be rejected due to design or scope issues.\n+  If a feature is based on a lot of dependencies, contributors should first\n+  consider building the system outside of Bitcoin Core, if possible.\n+* Refactoring changes are only accepted if they are required for a feature or\n+  bug fix or otherwise improve developer experience significantly. For example,\n+  most \"code style\" refactoring changes require a thorough explanation why they\n+  are useful, what downsides they have and why they *significantly* improve\n+  developer experience or avoid serious programming bugs. Note that code style\n+  is often a subjective matter. Unless they are explicitly mentioned to be\n+  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\n+  changes are usually rejected.\n+\n+Bitcoin Core has a thorough review process and even the most trivial change\n+needs to pass a lot of eyes and requires non-zero or even substantial time\n+effort to review. There is a huge lack of active reviewers on the project, so\n+patches often sit for a long time."
      },
      {
        "sha": "380d2eab9847fe3e6a23679f154e9567bf27abc0",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb4f17beb180b881ca72248709a06e7f18d9c14/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb4f17beb180b881ca72248709a06e7f18d9c14/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=ccb4f17beb180b881ca72248709a06e7f18d9c14",
        "patch": "@@ -116,3 +116,6 @@ test/cache/*\n \n libbitcoinconsensus.pc\n contrib/devtools/split-debug.sh\n+\n+# Output from running db4 installation\n+db4/"
      },
      {
        "sha": "217108c6aa40894ce07a98574953c636d93072c5",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 51,
        "deletions": 86,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=ccb4f17beb180b881ca72248709a06e7f18d9c14",
        "patch": "@@ -1,23 +1,21 @@\n-sudo: required\n dist: trusty\n os: linux\n language: minimal\n cache:\n   ccache: true\n   directories:\n-  - depends/built\n-  - depends/sdk-sources\n-  - $HOME/.ccache\n+    - depends/built\n+    - depends/sdk-sources\n+    - $HOME/.ccache\n stages:\n   - lint\n   - test\n env:\n   global:\n     - MAKEJOBS=-j3\n-    - RUN_TESTS=false\n-    - RUN_BENCH=false  # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions\n+    - RUN_UNIT_TESTS=true\n+    - RUN_FUNCTIONAL_TESTS=true\n     - DOCKER_NAME_TAG=ubuntu:18.04\n-    - LC_ALL=C.UTF-8\n     - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID\n     - CCACHE_SIZE=100M\n     - CCACHE_TEMPDIR=/tmp/.ccache-temp\n@@ -28,80 +26,61 @@ env:\n     - WINEDEBUG=fixme-all\n     - DOCKER_PACKAGES=\"build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache\"\n before_install:\n-    - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n-    - BEGIN_FOLD () { echo \"\"; CURRENT_FOLD_NAME=$1; echo \"travis_fold:start:${CURRENT_FOLD_NAME}\"; }\n-    - END_FOLD () { RET=$?; echo \"travis_fold:end:${CURRENT_FOLD_NAME}\"; return $RET; }\n+  - set -o errexit; source .travis/test_03_before_install.sh\n install:\n-    - travis_retry docker pull $DOCKER_NAME_TAG\n-    - env | grep -E '^(CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL)' | tee /tmp/env\n-    - if [[ $HOST = *-mingw32 ]]; then DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"; fi\n-    - DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$TRAVIS_BUILD_DIR,dst=$TRAVIS_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $TRAVIS_BUILD_DIR --env-file /tmp/env $DOCKER_NAME_TAG)\n-    - DOCKER_EXEC () { docker exec $DOCKER_ID bash -c \"cd $PWD && $*\"; }\n-    - if [ -n \"$DPKG_ADD_ARCH\" ]; then DOCKER_EXEC dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n-    - travis_retry DOCKER_EXEC apt-get update\n-    - travis_retry DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES $DOCKER_PACKAGES\n+  - set -o errexit; source .travis/test_04_install.sh\n before_script:\n-    - DOCKER_EXEC echo \\> \\$HOME/.bitcoin  # Make sure default datadir does not exist and is never read by creating a dummy file\n-    - mkdir -p depends/SDKs depends/sdk-sources\n-    - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n-    - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n-    - if [[ $HOST = *-mingw32 ]]; then DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\); fi\n-    - if [ -z \"$NO_DEPENDS\" ]; then DOCKER_EXEC CONFIG_SHELL= make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS; fi\n+  - set -o errexit; source .travis/test_05_before_script.sh\n script:\n-    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n-    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n-    - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n-    - if [ -z \"$NO_DEPENDS\" ]; then DOCKER_EXEC ccache --max-size=$CCACHE_SIZE; fi\n-    - BEGIN_FOLD autogen; test -n \"$CONFIG_SHELL\" && DOCKER_EXEC \"$CONFIG_SHELL\" -c \"./autogen.sh\" || DOCKER_EXEC ./autogen.sh; END_FOLD\n-    - mkdir build && cd build\n-    - BEGIN_FOLD configure; DOCKER_EXEC ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false); END_FOLD\n-    - BEGIN_FOLD distdir; DOCKER_EXEC make distdir VERSION=$HOST; END_FOLD\n-    - cd bitcoin-$HOST\n-    - BEGIN_FOLD configure; DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false); END_FOLD\n-    - BEGIN_FOLD build; DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false ); END_FOLD\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then BEGIN_FOLD unit-tests; DOCKER_EXEC LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1; END_FOLD; fi\n-    - if [ \"$RUN_BENCH\" = \"true\" ]; then BEGIN_FOLD bench; DOCKER_EXEC LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib $OUTDIR/bin/bench_bitcoin -scaling=0.001 ; END_FOLD; fi\n-    - if [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then extended=\"--extended --exclude feature_pruning,feature_dbcrash\"; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then BEGIN_FOLD functional-tests; DOCKER_EXEC test/functional/test_runner.py --combinedlogslen=4000 --coverage --quiet --failfast ${extended}; END_FOLD; fi\n+  - if [ $SECONDS -gt 1200 ]; then set +o errexit; echo \"Travis early exit to cache current state\"; false; else set -o errexit; source .travis/test_06_script.sh; fi\n after_script:\n-    - echo $TRAVIS_COMMIT_RANGE\n-    - echo $TRAVIS_COMMIT_LOG\n+  - echo $TRAVIS_COMMIT_RANGE\n+  - echo $TRAVIS_COMMIT_LOG\n jobs:\n   include:\n+# lint stage\n+    - stage: lint\n+      env:\n+      cache: false\n+      language: python\n+      python: '3.6'\n+      install:\n+        - set -o errexit; source .travis/lint_04_install.sh\n+      before_script:\n+        - set -o errexit; source .travis/lint_05_before_script.sh\n+      script:\n+        - set -o errexit; source .travis/lint_06_script.sh\n # ARM\n     - stage: test\n       env: >-\n         HOST=arm-linux-gnueabihf\n-        PACKAGES=\"g++-arm-linux-gnueabihf\"\n-        DEP_OPTS=\"NO_QT=1\"\n+        PACKAGES=\"python3 g++-arm-linux-gnueabihf\"\n+        RUN_UNIT_TESTS=false\n+        RUN_FUNCTIONAL_TESTS=false\n         GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+        # -Wno-psabi is to disable ABI warnings: \"note: parameter passing for argument of type ... changed in GCC 7.1\"\n+        # This could be removed once the ABI change warning does not show up by default\n+        BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi\"\n # Win32\n     - stage: test\n       env: >-\n         HOST=i686-w64-mingw32\n         DPKG_ADD_ARCH=\"i386\"\n-        DEP_OPTS=\"NO_QT=1\"\n         PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine-binfmt wine32\"\n-        RUN_TESTS=true\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+        GOAL=\"deploy\"\n+        BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests\"\n # Win64\n     - stage: test\n       env: >-\n         HOST=x86_64-w64-mingw32\n-        DEP_OPTS=\"NO_QT=1\"\n         PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64\"\n-        RUN_TESTS=true\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+        GOAL=\"deploy\"\n+        BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests\"\n # 32-bit + dash\n     - stage: test\n       env: >-\n         HOST=i686-pc-linux-gnu\n         PACKAGES=\"g++-multilib python3-zmq\"\n-        DEP_OPTS=\"NO_QT=1\"\n-        RUN_TESTS=true\n         GOAL=\"install\"\n         BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\"\n         CONFIG_SHELL=\"/bin/dash\"\n@@ -111,26 +90,33 @@ jobs:\n         HOST=x86_64-unknown-linux-gnu\n         PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev\"\n         DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n-        RUN_TESTS=true\n-        RUN_BENCH=true\n         GOAL=\"install\"\n         BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug CXXFLAGS=\\\"-g0 -O2\\\"\"\n-# x86_64 Linux (Qt5 & system libs)\n+# x86_64 Linux (xenial, no depends, only system libs, sanitizers: thread (TSan))\n+    - stage: test\n+      env: >-\n+        HOST=x86_64-unknown-linux-gnu\n+        DOCKER_NAME_TAG=ubuntu:16.04\n+        PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n+        NO_DEPENDS=1\n+        RUN_FUNCTIONAL_TESTS=false # Disabled for now. TODO identify suppressions or exclude specific tests\n+        GOAL=\"install\"\n+        BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++\"\n+# x86_64 Linux (no depends, only system libs, sanitizers: address/leak (ASan + LSan) + undefined (UBSan) + integer)\n     - stage: test\n       env: >-\n         HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n+        PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n         NO_DEPENDS=1\n-        RUN_TESTS=true\n+        FUNCTIONAL_TESTS_CONFIG=\"--exclude wallet_multiwallet.py\" # Temporarily suppress ASan heap-use-after-free (see issue #14163)\n         GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER\"\n+        BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=address,integer,undefined CC=clang CXX=clang++\"\n # x86_64 Linux, No wallet\n     - stage: test\n       env: >-\n         HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"python3\"\n+        PACKAGES=\"python3-zmq\"\n         DEP_OPTS=\"NO_WALLET=1\"\n-        RUN_TESTS=true\n         GOAL=\"install\"\n         BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n # Cross-Mac\n@@ -139,28 +125,7 @@ jobs:\n         HOST=x86_64-apple-darwin14\n         PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev python3-setuptools-git\"\n         OSX_SDK=10.11\n-        GOAL=\"all deploy\"\n+        RUN_UNIT_TESTS=false\n+        RUN_FUNCTIONAL_TESTS=false\n+        GOAL=\"deploy\"\n         BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\"\n-    - stage: lint\n-      env:\n-      sudo: false\n-      cache: false\n-      language: python\n-      python: '3.6'\n-      install:\n-        - travis_retry pip install flake8\n-      before_script:\n-        - git fetch --unshallow\n-      script:\n-        - if [ \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then test/lint/commit-script-check.sh $TRAVIS_COMMIT_RANGE; fi\n-        - test/lint/git-subtree-check.sh src/crypto/ctaes\n-        - test/lint/git-subtree-check.sh src/secp256k1\n-        - test/lint/git-subtree-check.sh src/univalue\n-        - test/lint/git-subtree-check.sh src/leveldb\n-        - test/lint/check-doc.py\n-        - test/lint/check-rpc-mappings.py .\n-        - test/lint/lint-all.sh\n-        - if [ \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then\n-              while read LINE; do travis_retry gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys &&\n-              travis_wait 50 contrib/verify-commits/verify-commits.py;\n-          fi"
      },
      {
        "sha": "21d1b9cc03aea1599db7dd258c945f5bce240067",
        "filename": ".travis/README.md",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/README.md?ref=ccb4f17beb180b881ca72248709a06e7f18d9c14",
        "patch": "@@ -0,0 +1,8 @@\n+## travis build scripts\n+\n+The `.travis` directory contains scripts for each build step in each build stage.\n+Currently the travis build defines two stages `lint` and `test`. Each stage has\n+it's own [lifecycle](https://docs.travis-ci.com/user/customizing-the-build/#the-build-lifecycle).\n+Every script in here is named and numbered according to which stage and lifecycle\n+step it belongs to.\n+"
      },
      {
        "sha": "723e7c56f1d9e7817b0913219c9747c6f02a6b8c",
        "filename": ".travis/lint_04_install.sh",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis/lint_04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis/lint_04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/lint_04_install.sh?ref=ccb4f17beb180b881ca72248709a06e7f18d9c14",
        "patch": "@@ -0,0 +1,11 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+\n+travis_retry pip install codespell==1.13.0\n+travis_retry pip install flake8==3.5.0\n+travis_retry pip install vulture==0.29"
      },
      {
        "sha": "28bcbb47f748986c8e95bb87abd5a45faef75e1b",
        "filename": ".travis/lint_05_before_script.sh",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis/lint_05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis/lint_05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/lint_05_before_script.sh?ref=ccb4f17beb180b881ca72248709a06e7f18d9c14",
        "patch": "@@ -0,0 +1,9 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+\n+git fetch --unshallow"
      },
      {
        "sha": "701e6d8005c8f9a1b27bce308b0aad65e2b46d99",
        "filename": ".travis/lint_06_script.sh",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis/lint_06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis/lint_06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/lint_06_script.sh?ref=ccb4f17beb180b881ca72248709a06e7f18d9c14",
        "patch": "@@ -0,0 +1,25 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+\n+if [ \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then\n+  test/lint/commit-script-check.sh $TRAVIS_COMMIT_RANGE\n+fi\n+\n+test/lint/git-subtree-check.sh src/crypto/ctaes\n+test/lint/git-subtree-check.sh src/secp256k1\n+test/lint/git-subtree-check.sh src/univalue\n+test/lint/git-subtree-check.sh src/leveldb\n+test/lint/check-doc.py\n+test/lint/check-rpc-mappings.py .\n+test/lint/lint-all.sh\n+\n+if [ \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then\n+    git log --merges --before=\"2 days ago\" -1 --format='%H' > ./contrib/verify-commits/trusted-sha512-root-commit\n+    while read -r LINE; do travis_retry gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys &&\n+    travis_wait 50 contrib/verify-commits/verify-commits.py --clean-merge=2;\n+fi"
      },
      {
        "sha": "3c9fcf3f983ae0cd200bc86a9b10b603ee3e6a4f",
        "filename": ".travis/test_03_before_install.sh",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis/test_03_before_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis/test_03_before_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/test_03_before_install.sh?ref=ccb4f17beb180b881ca72248709a06e7f18d9c14",
        "patch": "@@ -0,0 +1,27 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n+# Add llvm-symbolizer directory to PATH. Needed to get symbolized stack traces from the sanitizers.\n+PATH=$PATH:/usr/lib/llvm-6.0/bin/\n+export PATH\n+\n+BEGIN_FOLD () {\n+  echo \"\"\n+  CURRENT_FOLD_NAME=$1\n+  echo \"travis_fold:start:${CURRENT_FOLD_NAME}\"\n+}\n+\n+END_FOLD () {\n+  RET=$?\n+  echo \"travis_fold:end:${CURRENT_FOLD_NAME}\"\n+  if [ $RET != 0 ]; then\n+    echo \"${CURRENT_FOLD_NAME} failed with status code ${RET}\"\n+  fi\n+}\n+"
      },
      {
        "sha": "03a61ea9f8054c9d693967f055fee424e703902d",
        "filename": ".travis/test_04_install.sh",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis/test_04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis/test_04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/test_04_install.sh?ref=ccb4f17beb180b881ca72248709a06e7f18d9c14",
        "patch": "@@ -0,0 +1,30 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+travis_retry docker pull \"$DOCKER_NAME_TAG\"\n+export ASAN_OPTIONS=\"\"\n+export LSAN_OPTIONS=\"suppressions=${TRAVIS_BUILD_DIR}/test/sanitizer_suppressions/lsan\"\n+export TSAN_OPTIONS=\"suppressions=${TRAVIS_BUILD_DIR}/test/sanitizer_suppressions/tsan\"\n+export UBSAN_OPTIONS=\"suppressions=${TRAVIS_BUILD_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1\"\n+env | grep -E '^(BITCOIN_CONFIG|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n+if [[ $HOST = *-mingw32 ]]; then\n+  DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n+fi\n+DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$TRAVIS_BUILD_DIR,dst=$TRAVIS_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $TRAVIS_BUILD_DIR --env-file /tmp/env $DOCKER_NAME_TAG)\n+\n+DOCKER_EXEC () {\n+  docker exec $DOCKER_ID bash -c \"cd $PWD && $*\"\n+}\n+\n+if [ -n \"$DPKG_ADD_ARCH\" ]; then\n+  DOCKER_EXEC dpkg --add-architecture \"$DPKG_ADD_ARCH\"\n+fi\n+\n+travis_retry DOCKER_EXEC apt-get update\n+travis_retry DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES $DOCKER_PACKAGES\n+"
      },
      {
        "sha": "70caee979c14002d1b58de9814b69289cff6c007",
        "filename": ".travis/test_05_before_script.sh",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis/test_05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis/test_05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/test_05_before_script.sh?ref=ccb4f17beb180b881ca72248709a06e7f18d9c14",
        "patch": "@@ -0,0 +1,25 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+DOCKER_EXEC echo \\> \\$HOME/.bitcoin  # Make sure default datadir does not exist and is never read by creating a dummy file\n+\n+mkdir -p depends/SDKs depends/sdk-sources\n+\n+if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n+  curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n+fi\n+if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n+  tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n+fi\n+if [[ $HOST = *-mingw32 ]]; then\n+  DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\)\n+fi\n+if [ -z \"$NO_DEPENDS\" ]; then\n+  DOCKER_EXEC CONFIG_SHELL= make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n+fi\n+"
      },
      {
        "sha": "506d2b518cdd404c3c774b7accd3b8aa74f08ab9",
        "filename": ".travis/test_06_script.sh",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis/test_06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb4f17beb180b881ca72248709a06e7f18d9c14/.travis/test_06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/test_06_script.sh?ref=ccb4f17beb180b881ca72248709a06e7f18d9c14",
        "patch": "@@ -0,0 +1,61 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+TRAVIS_COMMIT_LOG=$(git log --format=fuller -1)\n+export TRAVIS_COMMIT_LOG\n+\n+OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n+BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n+if [ -z \"$NO_DEPENDS\" ]; then\n+  DOCKER_EXEC ccache --max-size=$CCACHE_SIZE\n+fi\n+\n+BEGIN_FOLD autogen\n+if [ -n \"$CONFIG_SHELL\" ]; then\n+  DOCKER_EXEC \"$CONFIG_SHELL\" -c \"./autogen.sh\"\n+else\n+  DOCKER_EXEC ./autogen.sh\n+fi\n+END_FOLD\n+\n+mkdir build\n+cd build || (echo \"could not enter build directory\"; exit 1)\n+\n+BEGIN_FOLD configure\n+DOCKER_EXEC ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+END_FOLD\n+\n+BEGIN_FOLD distdir\n+DOCKER_EXEC make distdir VERSION=$HOST\n+END_FOLD\n+\n+cd \"bitcoin-$HOST\" || (echo \"could not enter distdir bitcoin-$HOST\"; exit 1)\n+\n+BEGIN_FOLD configure\n+DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+END_FOLD\n+\n+BEGIN_FOLD build\n+DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false )\n+END_FOLD\n+\n+if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n+  BEGIN_FOLD unit-tests\n+  DOCKER_EXEC LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1\n+  END_FOLD\n+fi\n+\n+if [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then\n+  extended=\"--extended --exclude feature_pruning\"\n+fi\n+\n+if [ \"$RUN_FUNCTIONAL_TESTS\" = \"true\" ]; then\n+  BEGIN_FOLD functional-tests\n+  DOCKER_EXEC test/functional/test_runner.py --ci --combinedlogslen=4000 --coverage --quiet --failfast ${extended} ${FUNCTIONAL_TESTS_CONFIG}\n+  END_FOLD\n+fi"
      },
      {
        "sha": "165abf3e2e7a6d7cdbe7b960ec15dbcfaf0a9dfd",
        "filename": "depends/patches/qt/xkb-default.patch",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb4f17beb180b881ca72248709a06e7f18d9c14/depends/patches/qt/xkb-default.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb4f17beb180b881ca72248709a06e7f18d9c14/depends/patches/qt/xkb-default.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/xkb-default.patch?ref=ccb4f17beb180b881ca72248709a06e7f18d9c14",
        "patch": "@@ -0,0 +1,26 @@\n+--- old/qtbase/src/gui/configure.pri\t2018-06-06 17:28:10.000000000 -0400\n++++ new/qtbase/src/gui/configure.pri\t2018-08-17 18:43:01.589384567 -0400\n+@@ -43,18 +43,11 @@\n+ }\n+\n+ defineTest(qtConfTest_xkbConfigRoot) {\n+-    qtConfTest_getPkgConfigVariable($${1}): return(true)\n+-\n+-    for (dir, $$list(\"/usr/share/X11/xkb\", \"/usr/local/share/X11/xkb\")) {\n+-        exists($$dir) {\n+-            $${1}.value = $$dir\n+-            export($${1}.value)\n+-            $${1}.cache += value\n+-            export($${1}.cache)\n+-            return(true)\n+-        }\n+-    }\n+-    return(false)\n++    $${1}.value = \"/usr/share/X11/xkb\"\n++    export($${1}.value)\n++    $${1}.cache += value\n++    export($${1}.cache)\n++    return(true)\n+ }\n+\n+ defineTest(qtConfTest_qpaDefaultPlatform) {"
      }
    ]
  }
]