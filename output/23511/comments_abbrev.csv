DrahtBot,2021-11-15 04:31:43,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/23511#issuecomment-968529942,968529942,
hebasto,2021-11-15 09:06:26,"Changing the minimum required glibc version is a two-fold task.\n\nFirstly, we drop support for systems with glibc 2.17. Effectively, one won't be able to run Bitcoin Core v23.0 on CentOS 7 in 2022. That looks completely reasonable to me.\n\nSecondly, we are choosing a new minimum required glibc version. And I believe we should stick to one which is actually available on a real system, to be a",https://github.com/bitcoin/bitcoin/pull/23511#issuecomment-968677150,968677150,
fanquake,2021-11-15 09:53:32,"> My suggestion is to bump glibc up to 2.24 which is available on Debian 9.\n\nUnless you're planning on taking advantage of features available in newer glibcs, or making the binaries actually fail to run against older glibcs, there's not really any point in bumping our minimum glibc requirement any further here.\n\nThe symbol-checker is just a sanity check that the release binaries only conta",https://github.com/bitcoin/bitcoin/pull/23511#issuecomment-968717957,968717957,
hebasto,2021-11-15 10:00:07,"I mean that this PR changes approach from ""align with a glibc available on XXX"" to ""align glibc version to the newest symbol we actual use"", right?\n",https://github.com/bitcoin/bitcoin/pull/23511#issuecomment-968723350,968723350,
MarcoFalke,2021-11-15 10:12:56,"Does it practically matter if the minimum is set to 2.23 or 2.24 or 2.18? If you want to check that it works on Debian 9, you can test that regardless of the what the minimum is set to?",https://github.com/bitcoin/bitcoin/pull/23511#issuecomment-968735638,968735638,
hebasto,2021-11-15 10:21:34,"> Does it practically matter if the minimum is set to 2.23 or 2.24 or 2.18? If you want to check that it works on Debian 9, you can test that regardless of the what the minimum is set to?\n\nCorrect. But I mean a bit different notion. If we provide users a ""guarantee"" that our release binaries can be run on any system with glibc 2.18+ then we must be able to test them on an actual system with gl",https://github.com/bitcoin/bitcoin/pull/23511#issuecomment-968743191,968743191,
fanquake,2021-11-15 11:22:12,"> I mean that this PR changes approach from ""align with a glibc available on XXX"" to ""align glibc version to the newest symbol we actual use"", right?\n\nYes.\n\n> Does it practically matter if the minimum is set to 2.23 or 2.24 or 2.18? \n\nI might be misunderstanding you, but, yes? If our minimum requirement was 2.24, then we'd change our code to align with that, i.e by removing back compat",https://github.com/bitcoin/bitcoin/pull/23511#issuecomment-968808441,968808441,
MarcoFalke,2021-11-15 11:26:51,"Concept ACK. Bumping to 2.18 seems fine for now. It can always be increased further, if needed.",https://github.com/bitcoin/bitcoin/pull/23511#issuecomment-968814528,968814528,
hebasto,2021-11-15 11:38:00,"> > I mean that this PR changes approach from ""align with a glibc available on XXX"" to ""align glibc version to the newest symbol we actual use"", right?\n> \n> Yes.\n\nOk. Approach ACK.",https://github.com/bitcoin/bitcoin/pull/23511#issuecomment-968823379,968823379,
hebasto,2021-11-15 13:13:11,"#### Guix builds:\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\nbbe01b2c65bc7d7b7861dbbd9157a43b7d09d42a31e2d1cee614c74485612dc6  guix-build-b73cb82c9508/output/aarch64-linux-gnu/SHA256SUMS.part\n77b9451b6be6ac6076b22ea9ba929e6540cd226118180aa30dd09d593670f22e  guix-build-b73cb82c9508/output/aarch64-linux-gnu/bitc",https://github.com/bitcoin/bitcoin/pull/23511#issuecomment-968897906,968897906,
laanwj,2021-11-16 09:18:35,"ACK ACK ACK ACK ACK 5b93e65f6abfd174a56cf50c952ca5d5c3833859\nI've wanted this for so long, can we finally drop the weird handling around `thread_local` (`--disable-threadlocal` can be dropped completely in a follow-up PR), it shouldn't be needed anymore in the year of 2021.\n",https://github.com/bitcoin/bitcoin/pull/23511#issuecomment-970075288,970075288,
hebasto,2021-11-16 11:08:10,"> can we finally drop the weird handling around `thread_local`\n\nThere still are some workarounds fro Windows and FreeBSD (",https://github.com/bitcoin/bitcoin/pull/23511#issuecomment-970163957,970163957,
laanwj,2021-11-16 11:16:52,"> There still are some workarounds fro Windows and FreeBSD (\n\nThe FreeBSD issue is something [from 2018](https://groups.google.com/g/bsdmailinglist/c/22ncTZAbDp4/m/Dii_pII5AwAJ). Did someone recently try if it's still a problem?\n\nEdit: I will check, and report somewhere else, it's off topic here.\nEdit.2: Yes, the problem still exists. I tried compiling w/ thread_local on FreeBSD 13.0, th",https://github.com/bitcoin/bitcoin/pull/23511#issuecomment-970170564,970170564,
laanwj,2021-11-16 15:15:25,"```\nfind guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\nd21c7429dbaca3a5260ec424036e19e287c553adb2229894e59eb9b60bc2eba5  guix-build-5b93e65f6abf/output/aarch64-linux-gnu/SHA256SUMS.part\n5d8e7d8b5016b694cb23bcee202819a7db63ea033e5a21c99895981f7b508184  guix-build-5b93e65f6abf/output/aarch64-linux-gnu/bitcoin-5b93e65f6abf-aarch",https://github.com/bitcoin/bitcoin/pull/23511#issuecomment-970372334,970372334,
DrahtBot,2021-11-17 03:37:51,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit a85442f62bf157b07849accd495c55c73535dc73<br>(master) | commit df4a5d2124339daac6b3983d6da4e2f201377ea6<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`309bd56bed133dc9...`](https://drahtbot.space/guix/bitcoin/bitcoin/a85442f62bf157b07849accd495c55c73535dc73/SHA256SUMS.part) | [`5e0667e43890651b...`](https://,https://github.com/bitcoin/bitcoin/pull/23511#issuecomment-971145222,971145222,
hebasto,2021-11-15 14:19:32,nit: A link seems useless because it directs into a stub (and the link above too). ,https://github.com/bitcoin/bitcoin/pull/23511#discussion_r749368282,749368282,contrib/devtools/symbol-check.py
hebasto,2021-11-15 16:07:07,"```suggestion\n# - g++ version 8.5.0 (http://mirror.centos.org/centos/8-stream/AppStream/x86_64/os/Packages/)\n```",https://github.com/bitcoin/bitcoin/pull/23511#discussion_r749469792,749469792,contrib/devtools/symbol-check.py
