jonasschnelli,2019-01-08T23:36:50Z,Not opposed against removing scripts. But maybe combining with `importmulti` for more advanced script removing and batches would eventually make sense.,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-452491378,452491378,
DrahtBot,2019-01-09T22:47:31Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22788](https://github.com/bitcoin/bitcoin/pull/22788) (scripted-diff: Use generate* from TestFramework by MarcoFalke)\n*",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-452898412,452898412,
benthecarman,2019-01-12T00:08:08Z,Added functionality to remove scripts as well,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-453696884,453696884,
jonasschnelli,2019-01-12T00:15:29Z,"Looks much better!\nWill test soon.",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-453698299,453698299,
hebasto,2019-01-16T20:48:14Z,@benthecarman could you address [Travis linter failure](https://travis-ci.org/bitcoin/bitcoin/jobs/478599787)?,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-454934756,454934756,
benthecarman,2019-01-17T19:52:51Z,Added release notes,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-455309384,455309384,
benthecarman,2019-02-04T11:42:31Z,Rebased and fixed release notes,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-460218860,460218860,
hebasto,2019-02-04T11:55:25Z,"Could trailing whitespaces be removed?\nSee Travis log: https://travis-ci.org/bitcoin/bitcoin/jobs/488455534",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-460222103,460222103,
benthecarman,2019-02-04T12:15:57Z,"@hebasto Sorry about that, fixed",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-460228459,460228459,
Sjors,2019-09-03T17:54:01Z,This has a silent merge conflict with master because RPCHelpMan syntax changed a bit.,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-527568402,527568402,
adamjonas,2020-05-01T00:57:33Z,@benthecarman - it looks like Sjor's comments are still unaddressed and a rebase is needed. Is this still something you intend to continue with?,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-622196838,622196838,
benthecarman,2020-05-04T03:23:50Z,Fixed for @Sjors's comments and rebased,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-623239713,623239713,
kristapsk,2020-05-15T11:20:04Z,"This would be a very usefull addition for me, I have a wallet with watch-only addresses imported that I would like to remove.",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-629180221,629180221,
kristapsk,2020-05-15T15:19:36Z,"`RemoveOldTransactions()` got renamed to `RemoveTransactions()` but calling plance didn't get changed, so it doesn't build now.\n```\nwallet/rpcdump.cpp: In function ‚Äòvoid RemoveScript(CWallet*, const CScript&, bool, bool)‚Äô:\nwallet/rpcdump.cpp:356:18: error: ‚Äòclass CWallet‚Äô has no member named ‚ÄòRemoveOldTransactions‚Äô; did you mean ‚ÄòRemoveTransactions‚Äô?\n  356 |         pwallet->RemoveOldTrans",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-629300605,629300605,
benthecarman,2020-05-15T15:22:21Z,"> `RemoveOldTransactions()` got renamed to `RemoveTransactions()` but calling plance didn't get changed, so it doesn't build now.\n> \n> ```\n> wallet/rpcdump.cpp: In function ‚Äòvoid RemoveScript(CWallet*, const CScript&, bool, bool)‚Äô:\n> wallet/rpcdump.cpp:356:18: error: ‚Äòclass CWallet‚Äô has no member named ‚ÄòRemoveOldTransactions‚Äô; did you mean ‚ÄòRemoveTransactions‚Äô?\n>   356 |         pwallet-",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-629303367,629303367,
adamjonas,2020-05-19T15:33:12Z,@benthecarman CIs are still red since ad0de4c.,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-630900848,630900848,
benthecarman,2020-05-20T01:23:59Z,"> @benthecarman CIs are still red since [ad0de4c](https://github.com/bitcoin/bitcoin/commit/ad0de4c639c215e334bc076c4bc2f6340f8f3a67).\n\nSorry, everything was passing locally, looks like it had silent merge conflicts with `master` again",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-631177933,631177933,
achow101,2020-06-11T15:59:09Z,"There are a few import scenarios where some scripts and pubkeys get left behind and that could cause `IsMine` issues. There will also be leftover `CKeyMetadata` entries. I think these will all need to be cleaned up.\n\nImporting any P2SH or P2WSH address with a redeemScript will add that redeemScript to `mapScripts`. If pubkeys were imported to the keypool, then those pubkeys are still in the ke",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-642769639,642769639,
benthecarman,2020-06-12T00:02:48Z,"> There are a few import scenarios where some scripts and pubkeys get left behind and that could cause `IsMine` issues. There will also be leftover `CKeyMetadata` entries. I think these will all need to be cleaned up.\n> \n> Importing any P2SH or P2WSH address with a redeemScript will add that redeemScript to `mapScripts`. If pubkeys were imported to the keypool, then those pubkeys are still in ",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-642989241,642989241,
achow101,2020-06-12T01:25:29Z,"> however, do note this is only for watch only addresses. So, I don't believe we need to worry about the key pool.\n\n`importmulti` allows people to import address with their pubkeys and add the pubkeys into the keypool. The scriptPubKeys still end up in `setWatchOnly` and the pubkeys in `mapWatchKeys`, but also those pubkeys go in the keypool so that `getnewaddress` can work. Anything imported ",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-643013777,643013777,
benthecarman,2020-06-14T21:57:18Z,"> There are a few import scenarios where some scripts and pubkeys get left behind and that could cause `IsMine` issues. There will also be leftover `CKeyMetadata` entries. I think these will all need to be cleaned up.\n> \n> Importing any P2SH or P2WSH address with a redeemScript will add that redeemScript to `mapScripts`. If pubkeys were imported to the keypool, then those pubkeys are still in ",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-643827543,643827543,
benthecarman,2020-06-19T00:28:47Z,Fixed rebase issues,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-646370706,646370706,
benthecarman,2020-08-01T00:30:23Z,Rebased,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-667437781,667437781,
benthecarman,2020-08-15T00:36:44Z,Applied @MarcoFalke's suggestions ,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-674322163,674322163,
benthecarman,2020-08-31T20:48:19Z,Rebased,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-684031009,684031009,
benthecarman,2021-01-27T11:05:55Z,"Rebased with latest master, fixed issues that came up from that",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-768210117,768210117,
benthecarman,2021-01-29T10:05:28Z,Rebased,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-769708588,769708588,
benthecarman,2021-02-07T14:16:47Z,Responded to @jonatack's review,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-774681490,774681490,
prayank23,2021-03-12T02:51:59Z,"Concept ACK. Compiled successfully on Ubuntu. Tests passed.\n\nTried experimenting:\n\nAdding address with `importaddress` and removing with `removeaddress` worked fine\n\n~~Adding address with `importmulti` gave checksum error maybe because of new checksum used for bech32 addresses but I am not sure.~~\n\n`importmulti` works fine I was using different public keys in both commands earlier.",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-797197738,797197738,
benthecarman,2021-08-23T18:56:09Z,"Rebased and fixed silent merge conflicts\n\nAddressed @fanquake's comment",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-904027066,904027066,
kristapsk,2021-08-24T11:57:07Z,"It looks to me there is no test for `purge_transactions` argument of `removeaddress`, that should be added.",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-904573396,904573396,
benthecarman,2021-08-24T15:20:47Z,"> It looks to me there is no test for `purge_transactions` argument of `removeaddress`, that should be added.\n\nAdded",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-904737667,904737667,
prayank23,2021-08-24T16:51:57Z,reACK https://github.com/bitcoin/bitcoin/commit/2eb5021e5045c06784244bd92de53b328d9f0b18,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-904811788,904811788,
meshcollider,2021-08-25T04:23:12Z,"Thank you for maintaining this PR @benthecarman, it is definitely getting close!",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-905171612,905171612,
benthecarman,2021-08-31T01:24:30Z,Responded to @meshcollider's review,https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-908822603,908822603,
DrahtBot,2021-09-09T13:06:45Z,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-916074499,916074499,
promag,2019-01-08T14:50:14Z,I don't think this should use the same script.,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r246022808,246022808,src/wallet/wallet.cpp
promag,2019-01-08T14:50:31Z,Add braces here and throughout.,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r246022912,246022912,src/wallet/rpcdump.cpp
promag,2019-01-08T14:52:08Z,Maybe submit this change in a separate PR.,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r246023468,246023468,src/wallet/wallet.cpp
benthecarman,2019-01-08T16:01:56Z,"Yeah, that makes a lot of sense now that you point that out, however, I have no idea what I'd name that. Any ideas?",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r246052520,246052520,src/wallet/wallet.cpp
promag,2019-01-08T16:36:36Z,Maybe remove notification? This is only happens after the RPC so the client doesn't need a notification.,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r246065849,246065849,src/wallet/wallet.cpp
benthecarman,2019-01-08T16:57:07Z,Yeah that's true,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r246073751,246073751,src/wallet/wallet.cpp
jonasschnelli,2019-01-08T23:35:58Z,"This looks a bit invasive.\nI haven't looked closer at it, but would it not be possible to remove transaction with the removed addresses during `LoadToWallet()` rather then an expansive rescan?",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r246204244,246204244,src/wallet/wallet.cpp
benthecarman,2019-01-10T03:04:49Z,"Without this, it will remove the balance and addresses from the wallets but it will leave all the transactions with their ids in the wallet so with this function it will remove them from the wallet during the rescan.  I am not sure if there is a faster way to do it.",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r246623943,246623943,src/wallet/wallet.cpp
jonasschnelli,2019-01-10T06:15:00Z,"I don't see the reason why a rescan would be required. IMO it's only required after adding a script where its creation-timestamp lies in the past (expected historical transactions). You don't need to go through the whole (or part of) the blockchain history just to know that a transaction in your wallet doesn't belong to you anymore. Also, don't forget that rescans are incompatible for pruned peers",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r246645536,246645536,src/wallet/wallet.cpp
Sjors,2019-08-15T16:35:26Z,"Did you mean ""Remove"" instead of ""Add""?",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r314394732,314394732,src/wallet/rpcdump.cpp
Sjors,2019-08-15T16:38:31Z,I think this is too broad. Suggest adding an additional condition that the to be deleted transaction is to or from the specific watch-only address we're removing.,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r314395873,314395873,src/wallet/wallet.cpp
Sjors,2019-08-15T16:39:37Z,Suggest adding a third argument `purge_transactions` (default true) about removing existing transactions from the wallet. ,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r314396254,314396254,src/wallet/rpcdump.cpp
Sjors,2020-05-04T09:33:58Z,Why is this entire function commented out?,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r419315899,419315899,src/wallet/wallet.cpp
benthecarman,2020-05-04T14:15:39Z,"woops, pushed wrong commit. Should be good now",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r419469301,419469301,src/wallet/wallet.cpp
adamjonas,2020-05-14T16:45:28Z,This is getting caught in the linter. Be sure the position of the argument is consistent with the dispatch table in rpcwallet.cpp (it isn't -- the index starts at 0).,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r425282738,425282738,src/rpc/client.cpp
adamjonas,2020-05-14T16:57:24Z,This will be caught too as `CHECK_NONFATAL` is recommended instead of `assert` for rpc code.,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r425290384,425290384,src/wallet/rpcdump.cpp
kristapsk,2020-05-15T11:16:19Z,"I think `RemoveTransactions()` would be a better name, as this can remove any transactions, being ""old"" is not a requirement.",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r425733491,425733491,src/wallet/wallet.cpp
kristapsk,2020-05-15T16:22:06Z,"This line is not needed, results in a duplicate ""Examples:"" in help output.",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r425910682,425910682,src/wallet/rpcdump.cpp
Sjors,2020-05-28T09:01:03Z,"Try this instead, to guarantee it only works for legacy wallets:\n```cpp\n    LegacyScriptPubKeyMan& spk_man = EnsureLegacyScriptPubKeyMan(*pwallet);\n```",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r431687314,431687314,src/wallet/rpcdump.cpp
MarcoFalke,2020-08-14T12:13:58Z,Might be good to use the non-deprecated constructor (see #19528) ,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r470587212,470587212,src/wallet/rpcdump.cpp
MarcoFalke,2020-08-14T12:15:36Z,"```suggestion\n    const CWallet& wallet = *pwallet.get();\n```\n\nAs the previous line checks for nullptr, might be good to just take a reference instead of keeping to treat it as pointer that can be nullptr.",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r470587943,470587943,src/wallet/rpcdump.cpp
benthecarman,2020-08-15T00:36:14Z,Done.,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r470915233,470915233,src/wallet/rpcdump.cpp
benthecarman,2020-08-15T00:36:21Z,Done.,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r470915242,470915242,src/wallet/rpcdump.cpp
adamjonas,2021-01-27T15:43:24Z,"After the rebase, I'm getting compile warnings for this line consistent with the CI:\n```\nwallet/wallet.cpp:986:5: warning: calling function 'AssertLockHeldInternal<AnnotatedMixin<std::__1::recursive_mutex> >' requires holding mutex 'cs_wallet' exclusively [-Wthread-safety-analysis]\n    AssertLockHeld(cs_wallet);\n    ^\n./sync.h:81:28: note: expanded from macro 'AssertLockHeld'\n#define A",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r565414578,565414578,src/wallet/wallet.cpp
benthecarman,2021-01-27T18:26:08Z,Wasn't able to reproduce myself but seems I was able to fix it,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r565536602,565536602,src/wallet/wallet.cpp
jonatack,2021-01-29T12:15:48Z,"```suggestion\n  from the current wallet. (#15129)\n```",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r566781451,566781451,doc/release-notes-15129.md
jonatack,2021-01-29T12:21:51Z,"ISTM current practice is to use snake case for the field name\n```suggestion\n            {""purge_transactions"", RPCArg::Type::BOOL, /* default_val */ ""false"", ""Whether to remove existing transactions from the wallet""},\n```",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r566784496,566784496,src/wallet/rpcdump.cpp
jonatack,2021-01-29T12:22:52Z,"```suggestion\n            {""p2sh"", RPCArg::Type::BOOL, /* default */ ""false"", ""Whether to remove the P2SH version of the script as well""},\n```",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r566785007,566785007,src/wallet/rpcdump.cpp
jonatack,2021-01-29T12:25:38Z,"I believe a JSON object is currently preferred for the output (see other wallet rpcs, e.g. upgradewallet, for examples) ",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r566786394,566786394,src/wallet/rpcdump.cpp
jonatack,2021-01-29T12:30:55Z,"can replace these lines (and have constness and follow variable naming style per doc/developer-notes.md) with\n```c++\nconst bool is_p2sh{request.params[1].isNull() ? false : request.params[1].get_bool()};\n```\n",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r566789162,566789162,src/wallet/rpcdump.cpp
jonatack,2021-01-29T12:34:39Z,"idem\n```c++\nconst bool purge_txns{request.params[2].isNull() ? false : request.params[2].get_bool()};\n```\n",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r566790941,566790941,src/wallet/rpcdump.cpp
jonatack,2021-01-29T12:37:22Z,"consider using the current naming conventions in `doc/developer-notes.md`\n```suggestion\nstatic void RemoveScript(CWallet* const pwallet, const CScript& script, bool is_redeem_script, bool purge_txns) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n```",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r566792358,566792358,src/wallet/rpcdump.cpp
jonatack,2021-01-29T12:41:25Z,"Please see doc/developer-notes.md about formatting conditionals\n```\n  - If an `if` only has a single-statement `then`-clause, it can appear\n    on the same line as the `if`, without braces. In every other case,\n    braces are required, and the `then` and `else` clauses must appear\n    correctly indented on a new line.\n```\n",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r566794473,566794473,src/wallet/scriptpubkeyman.cpp
jonatack,2021-01-29T12:45:41Z,"nit, `assert` and `assert not` without parens seems to be the most-used style in the functional tests\n",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r566796750,566796750,test/functional/wallet_basic.py
jonatack,2021-01-29T12:50:28Z,Perhaps add an example for removing a script as well,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r566799319,566799319,src/wallet/rpcdump.cpp
jonatack,2021-01-29T12:52:07Z,"Since this RPC can remove an address or a script, is there a better name than `removeaddress`? (I don't have an immediate suggestion.)",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r566800155,566800155,src/wallet/rpcdump.cpp
benthecarman,2021-02-06T00:22:47Z,"`importaddress` can import a script as well, I think this name works.",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r571320203,571320203,src/wallet/rpcdump.cpp
benthecarman,2021-02-06T01:01:05Z,What should be returned?,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r571327956,571327956,src/wallet/rpcdump.cpp
fanquake,2021-03-12T00:33:06Z,Please [use `std::make_unique` in new code](https://github.com/bitcoin/bitcoin/blob/master/src/util/memory.h#L13).,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r592827648,592827648,src/wallet/wallet.cpp
luke-jr,2021-06-22T19:43:47Z,I don't think these should be positional parameters.,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r656528507,656528507,src/wallet/rpcdump.cpp
meshcollider,2021-08-25T03:30:02Z,nit: the body of RPC functions shouldn't be indented for the RPCHelpMan,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r695364297,695364297,src/wallet/rpcdump.cpp
meshcollider,2021-08-25T03:41:19Z,Why not just use the shared_ptr everywhere? ,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r695367929,695367929,src/wallet/rpcdump.cpp
meshcollider,2021-08-25T04:17:38Z,nit: I don't think we need the numbering (makes it annoying to add more cases later),https://github.com/bitcoin/bitcoin/pull/15129#discussion_r695379025,695379025,test/functional/wallet_basic.py
meshcollider,2021-08-25T04:20:12Z,Would be good to validate here that the address is not in the wallet (like below),https://github.com/bitcoin/bitcoin/pull/15129#discussion_r695379827,695379827,test/functional/wallet_basic.py
meshcollider,2021-08-25T04:22:05Z,"It would be good to test the `p2sh` flag as well, all these examples only touch addresses not scripts",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r695380429,695380429,test/functional/wallet_basic.py
MarcoFalke,2021-08-25T16:03:29Z,I'd say it is allowed for new code to use the right whitespace,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r695898393,695898393,src/wallet/rpcdump.cpp
benthecarman,2021-08-31T01:23:40Z,Added.,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r698914389,698914389,test/functional/wallet_basic.py
benthecarman,2021-08-31T01:23:46Z,Added,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r698914429,698914429,test/functional/wallet_basic.py
benthecarman,2021-08-31T01:24:01Z,Removed (this was very annoying),https://github.com/bitcoin/bitcoin/pull/15129#discussion_r698914505,698914505,test/functional/wallet_basic.py
benthecarman,2021-08-31T01:24:16Z,I think I fixed this,https://github.com/bitcoin/bitcoin/pull/15129#discussion_r698914584,698914584,src/wallet/rpcdump.cpp
ryanofsky,2021-09-01T16:46:44Z,"In commit ""rpc: Added ability to remove watch only addresses"" (b8eb5880693358951229512987beffcff51e0ecf)\n\nNote (no changes requested): Check for isfromme / ismine mirrors existing logic in AddToWalletIfInvolvingMe and seems sufficient. I was initially thinking the IsFromMe check might fail to remove all relevant transactions because the for loop here ignores dependencies between transactions, ",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r700391121,700391121,src/wallet/wallet.cpp
ryanofsky,2021-09-01T17:08:38Z,"In commit ""rpc: Added ability to remove watch only addresses"" (b8eb5880693358951229512987beffcff51e0ecf)\n\nThis documentation is mirrored from the `importaddress` documentation and it is good that you are keeping it consistent, but I think it is actually a little confusing and would be nice to clarify both places. I would maybe change the help string here to something like `""If this is true and",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r700407194,700407194,src/wallet/rpcdump.cpp
ryanofsky,2021-09-01T17:20:23Z,"> What should be returned?\n\nIt does seem ok to me to return null like this PR is currently doing. But if you wanted to extend it you could return lists of scripts and addresses removed by the recursive removescript/removeaddress implementation (maybe in a similar format similar to the importmulti requests parameter). There could also be a ""warnings"" field for example if you remove a known P2SH",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r700415511,700415511,src/wallet/rpcdump.cpp
ryanofsky,2021-09-01T17:24:36Z,"In commit ""rpc: Added ability to remove watch only addresses"" (b8eb5880693358951229512987beffcff51e0ecf)\n\nImportant: It seems dangerous to do this error check and raise an error after calling PurgeWatchOnly above. It would be better to check for this error condition early so the remove either fully fails or fully succeeds instead of half removing the redeem script.",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r700418470,700418470,src/wallet/rpcdump.cpp
ryanofsky,2021-09-01T17:43:51Z,"In commit ""rpc: Added ability to remove watch only addresses"" (b8eb5880693358951229512987beffcff51e0ecf)\n\nImportant: Because there is no RemoveCScript function being called here to undo the effect of AddCScript/AddCScriptWithDB, the `removeaddress` call does not fully undo the effects of the equivalent `importaddress` call when the `p2sh` argument is true, and a copy of the script is still lef",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r700431854,700431854,src/wallet/rpcdump.cpp
ryanofsky,2021-09-01T17:45:25Z,"In commit ""rpc: Added ability to remove watch only addresses"" (b8eb5880693358951229512987beffcff51e0ecf)\n\nImportant: Again because this can throw it seems dangerous to call this here after PurgeWatchOnly has run and succeeded. Would be better to call PurgeWatchOnly after this so the RPC either completely fails or completely succeeds instead of partially succeeding.",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r700433000,700433000,src/wallet/rpcdump.cpp
ryanofsky,2021-09-01T18:06:59Z,"re: https://github.com/bitcoin/bitcoin/pull/15129#discussion_r700431854\n\n> a copy of the script is still left behind in `mapScripts` and in the database file\n\nMight be good follow up with @achow101 about his earlier comment here https://github.com/bitcoin/bitcoin/pull/15129#issuecomment-642769639 since I'm assuming leaving data behind in mapscripts is wasteful but doesn't cause real proble",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r700448658,700448658,src/wallet/rpcdump.cpp
luke-jr,2021-10-20T17:42:40Z,"```suggestion\n    for (auto& [txid, wTx] : mapWallet) {\n```",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r733008829,733008829,src/wallet/wallet.cpp
luke-jr,2021-10-20T17:45:16Z,"At the very least, we need to delete it from `wtxOrdered` too - and probably `mapTxSpends` (see `CWallet::ZapSelectTx` - maybe we should abstract this to a new method). Ubuntu hirsute (newer libc?) crashes in the tests due to a use-after-free trying to iterate wtxOrdered after removeaddress; I'm not sure if there's a good way to generalise this test to detect the problem on older systems.\n\nNot",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r733010724,733010724,src/wallet/wallet.cpp
luke-jr,2021-10-20T18:27:38Z,"This feels like we should have more `self.log.info` calls - is it still really about ""sendtoaddress raises if an invalid fee_rate is passed"" here?",https://github.com/bitcoin/bitcoin/pull/15129#discussion_r733040956,733040956,test/functional/wallet_basic.py
