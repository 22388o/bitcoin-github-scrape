gavinandresen,2012-05-14T15:42:19Z,How did you test these changes?\n,https://github.com/bitcoin/bitcoin/pull/1298#issuecomment-5693483,5693483,
wizeman,2012-05-14T15:54:03Z,"For commit ""4843b55 Make CNetAddr::GetHash() return an unsigned val."", I verified that there was only one user of CNetAddr::GetHash() by changing the return value to 'void' and seeing where the compilation broke.\n\nIn the single user of that function, I think the changes are relatively straightforward and the hash calculations more likely to be correct using uint64 than int64.\n\nFor commit ""fe78",https://github.com/bitcoin/bitcoin/pull/1298#issuecomment-5693870,5693870,
gavinandresen,2012-05-14T18:04:36Z,"Could you turn your small test program into unit tests in src/test/bignum_tests.cpp ?\nComments on where to get your nifty testing tools/methods would be most welcome, too (in that does-not-exist-yet unit test file).\n",https://github.com/bitcoin/bitcoin/pull/1298#issuecomment-5697304,5697304,
wizeman,2012-05-14T19:39:43Z,"I added test cases for CBigNum::setint64(). It was a bit more complex than I thought because gcc (with -O2) was inlining the function and, due to the values being constants, optimizing it to the point that -ftrapv was not detecting the signed subtraction overflow when the function was given an INT64_MIN argument.\n\nAfter the test case was added, it was aborting in one of the test cases, as expect",https://github.com/bitcoin/bitcoin/pull/1298#issuecomment-5699952,5699952,
wizeman,2012-05-31T18:41:28Z,"Thanks for the numeric limits suggestion, I was not aware of that (I'm a lot more experienced in C than C++, as you can probably guess). I have fixed that as you suggested.\n\nAs for the noinline attribute, it will work on any compiler that supports gcc extensions (it should work for gcc, clang and icc, at least), but I guess not for MSVC++.\n\nAs far as I could find out, there is no standard way ",https://github.com/bitcoin/bitcoin/pull/1298#issuecomment-6043999,6043999,
wizeman,2012-06-07T21:37:44Z,"I've moved the NOINLINE definition to the test rather than util.h, as suggested.\n\nI have also fixed a bug which was causing the test_bitcoin program to abort on 32-bit systems.\n",https://github.com/bitcoin/bitcoin/pull/1298#issuecomment-6188792,6188792,
sipa,2012-06-12T19:35:00Z,ACK (needs a trivial rebase though).\n,https://github.com/bitcoin/bitcoin/pull/1298#issuecomment-6280288,6280288,
wizeman,2012-06-13T21:09:54Z,"So what is the process now?\n\nShould I rebase? If so, can I do it in the same branch, and will the pull request preserve all existing information?\n",https://github.com/bitcoin/bitcoin/pull/1298#issuecomment-6313676,6313676,
sipa,2012-06-18T14:53:25Z,"@wizeman Seems @gavinandresen did it for you.\n\nFor future reference: yes, you can just push to the branch on github where you originally pullrequested from, and the pull request will be updated accordingly (keeping relevant discussion, but changing commits as necessary).\n",https://github.com/bitcoin/bitcoin/pull/1298#issuecomment-6397905,6397905,
wizeman,2012-06-18T14:54:59Z,"Cool, thanks to both of you!\n",https://github.com/bitcoin/bitcoin/pull/1298#issuecomment-6397954,6397954,
luke-jr,2012-07-11T03:17:28Z,@wizeman Could you comment on #1497 please?\n,https://github.com/bitcoin/bitcoin/pull/1298#issuecomment-6897088,6897088,
wizeman,2012-07-11T06:41:41Z,"Hi luke-jr,\n\nI added a comment to your pull request.\n\nCheers,\nRicardo\n",https://github.com/bitcoin/bitcoin/pull/1298#issuecomment-6899278,6899278,
gavinandresen,2012-05-29T18:40:42Z,"The rest of the code uses #include <limits> and std::numeric_limits<type>::min()/max(), it'd be nice to be consistent if possible.\n",https://github.com/bitcoin/bitcoin/pull/1298#discussion_r894555,894555,src/test/bignum_tests.cpp
gavinandresen,2012-05-29T18:42:14Z,"**attribute** is gcc only, we should try to stay compiler-independent as much as possible.\n",https://github.com/bitcoin/bitcoin/pull/1298#discussion_r894574,894574,src/test/bignum_tests.cpp
gavinandresen,2012-06-05T13:51:43Z,"In my opinion, this mess should go in bignum_tests.cpp, since that's the only place it is used and I can't imagine we'll use it anyplace else.\n",https://github.com/bitcoin/bitcoin/pull/1298#discussion_r928747,928747,src/util.h
