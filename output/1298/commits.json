[
  {
    "sha": "4843b55fd167c54d86eb9e1f19525ed363cfe72d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ODQzYjU1ZmQxNjdjNTRkODZlYjllMWYxOTUyNWVkMzYzY2ZlNzJk",
    "commit": {
      "author": {
        "name": "Ricardo M. Correia",
        "email": "rcorreia@wizy.org",
        "date": "2012-05-13T19:31:59Z"
      },
      "committer": {
        "name": "Ricardo M. Correia",
        "email": "rcorreia@wizy.org",
        "date": "2012-05-13T19:42:54Z"
      },
      "message": "Make CNetAddr::GetHash() return an unsigned val.\n\nThis prevents an undefined operation in main.cpp, when shifting the hash value\nleft by 32 bits.\nShifting a signed int left into the sign bit is undefined in C++11.",
      "tree": {
        "sha": "81a74462fdd3fc20a25521a8634121ad0b1a445f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/81a74462fdd3fc20a25521a8634121ad0b1a445f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4843b55fd167c54d86eb9e1f19525ed363cfe72d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4843b55fd167c54d86eb9e1f19525ed363cfe72d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4843b55fd167c54d86eb9e1f19525ed363cfe72d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4843b55fd167c54d86eb9e1f19525ed363cfe72d/comments",
    "author": {
      "login": "wizeman",
      "id": 168610,
      "node_id": "MDQ6VXNlcjE2ODYxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizeman",
      "html_url": "https://github.com/wizeman",
      "followers_url": "https://api.github.com/users/wizeman/followers",
      "following_url": "https://api.github.com/users/wizeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions",
      "organizations_url": "https://api.github.com/users/wizeman/orgs",
      "repos_url": "https://api.github.com/users/wizeman/repos",
      "events_url": "https://api.github.com/users/wizeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "wizeman",
      "id": 168610,
      "node_id": "MDQ6VXNlcjE2ODYxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizeman",
      "html_url": "https://github.com/wizeman",
      "followers_url": "https://api.github.com/users/wizeman/followers",
      "following_url": "https://api.github.com/users/wizeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions",
      "organizations_url": "https://api.github.com/users/wizeman/orgs",
      "repos_url": "https://api.github.com/users/wizeman/repos",
      "events_url": "https://api.github.com/users/wizeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1653f97c8f3c37cd96e03cf397c31c5caf81af08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1653f97c8f3c37cd96e03cf397c31c5caf81af08",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1653f97c8f3c37cd96e03cf397c31c5caf81af08"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f71702f0e5178acee8b301237d42efa53299e6da",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4843b55fd167c54d86eb9e1f19525ed363cfe72d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4843b55fd167c54d86eb9e1f19525ed363cfe72d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=4843b55fd167c54d86eb9e1f19525ed363cfe72d",
        "patch": "@@ -2440,7 +2440,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n                     static uint256 hashSalt;\n                     if (hashSalt == 0)\n                         RAND_bytes((unsigned char*)&hashSalt, sizeof(hashSalt));\n-                    int64 hashAddr = addr.GetHash();\n+                    uint64 hashAddr = addr.GetHash();\n                     uint256 hashRand = hashSalt ^ (hashAddr<<32) ^ ((GetTime()+hashAddr)/(24*60*60));\n                     hashRand = Hash(BEGIN(hashRand), END(hashRand));\n                     multimap<uint256, CNode*> mapMix;"
      },
      {
        "sha": "c237e2dc4d86f79f11b1e5414f83c7990d2aef67",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4843b55fd167c54d86eb9e1f19525ed363cfe72d/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4843b55fd167c54d86eb9e1f19525ed363cfe72d/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=4843b55fd167c54d86eb9e1f19525ed363cfe72d",
        "patch": "@@ -820,10 +820,10 @@ std::vector<unsigned char> CNetAddr::GetGroup() const\n     return vchRet;\n }\n \n-int64 CNetAddr::GetHash() const\n+uint64 CNetAddr::GetHash() const\n {\n     uint256 hash = Hash(&ip[0], &ip[16]);\n-    int64 nRet;\n+    uint64 nRet;\n     memcpy(&nRet, &hash, sizeof(nRet));\n     return nRet;\n }"
      },
      {
        "sha": "544a6668668331bd9ed78ad4587ec183d684a028",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4843b55fd167c54d86eb9e1f19525ed363cfe72d/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4843b55fd167c54d86eb9e1f19525ed363cfe72d/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=4843b55fd167c54d86eb9e1f19525ed363cfe72d",
        "patch": "@@ -66,7 +66,7 @@ class CNetAddr\n         std::string ToString() const;\n         std::string ToStringIP() const;\n         int GetByte(int n) const;\n-        int64 GetHash() const;\n+        uint64 GetHash() const;\n         bool GetInAddr(struct in_addr* pipv4Addr) const;\n         std::vector<unsigned char> GetGroup() const;\n         int GetReachabilityFrom(const CNetAddr *paddrPartner = NULL) const;"
      }
    ]
  },
  {
    "sha": "fe78c9ae8b4c9701cf6d84a0572a2d503c6ee424",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTc4YzlhZThiNGM5NzAxY2Y2ZDg0YTA1NzJhMmQ1MDNjNmVlNDI0",
    "commit": {
      "author": {
        "name": "Ricardo M. Correia",
        "email": "rcorreia@wizy.org",
        "date": "2012-05-14T00:50:01Z"
      },
      "committer": {
        "name": "Ricardo M. Correia",
        "email": "rcorreia@wizy.org",
        "date": "2012-05-14T00:53:27Z"
      },
      "message": "Don't overflow signed ints in CBigNum::setint64().\n\nCBigNum::setint64() does 'n <<= 8', where n is of type \"long long\".\n\nThis leads to shifting onto and past the sign bit, which is undefined\nbehavior in C++11 and can cause problems in the future.",
      "tree": {
        "sha": "1118f2b2fd914cb63cbc82b3951c52e3abc0cdbb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1118f2b2fd914cb63cbc82b3951c52e3abc0cdbb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe78c9ae8b4c9701cf6d84a0572a2d503c6ee424",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe78c9ae8b4c9701cf6d84a0572a2d503c6ee424",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe78c9ae8b4c9701cf6d84a0572a2d503c6ee424",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe78c9ae8b4c9701cf6d84a0572a2d503c6ee424/comments",
    "author": {
      "login": "wizeman",
      "id": 168610,
      "node_id": "MDQ6VXNlcjE2ODYxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizeman",
      "html_url": "https://github.com/wizeman",
      "followers_url": "https://api.github.com/users/wizeman/followers",
      "following_url": "https://api.github.com/users/wizeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions",
      "organizations_url": "https://api.github.com/users/wizeman/orgs",
      "repos_url": "https://api.github.com/users/wizeman/repos",
      "events_url": "https://api.github.com/users/wizeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "wizeman",
      "id": 168610,
      "node_id": "MDQ6VXNlcjE2ODYxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizeman",
      "html_url": "https://github.com/wizeman",
      "followers_url": "https://api.github.com/users/wizeman/followers",
      "following_url": "https://api.github.com/users/wizeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions",
      "organizations_url": "https://api.github.com/users/wizeman/orgs",
      "repos_url": "https://api.github.com/users/wizeman/repos",
      "events_url": "https://api.github.com/users/wizeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4843b55fd167c54d86eb9e1f19525ed363cfe72d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4843b55fd167c54d86eb9e1f19525ed363cfe72d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4843b55fd167c54d86eb9e1f19525ed363cfe72d"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 11,
      "deletions": 5
    },
    "files": [
      {
        "sha": "3716c4965617b0386d9bee8b79680e2cad3db7a2",
        "filename": "src/bignum.h",
        "status": "modified",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe78c9ae8b4c9701cf6d84a0572a2d503c6ee424/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe78c9ae8b4c9701cf6d84a0572a2d503c6ee424/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=fe78c9ae8b4c9701cf6d84a0572a2d503c6ee424",
        "patch": "@@ -122,16 +122,22 @@ class CBigNum : public BIGNUM\n             return (n > (unsigned long)std::numeric_limits<int>::max() ? std::numeric_limits<int>::min() : -(int)n);\n     }\n \n-    void setint64(int64 n)\n+    void setint64(int64 sn)\n     {\n-        unsigned char pch[sizeof(n) + 6];\n+        unsigned char pch[sizeof(sn) + 6];\n         unsigned char* p = pch + 4;\n-        bool fNegative = false;\n-        if (n < (int64)0)\n+        bool fNegative;\n+        uint64 n;\n+\n+        if (sn < (int64)0)\n         {\n-            n = -n;\n+            n = -sn;\n             fNegative = true;\n+        } else {\n+            n = sn;\n+            fNegative = false;\n         }\n+\n         bool fLeadingZeroes = true;\n         for (int i = 0; i < 8; i++)\n         {"
      }
    ]
  },
  {
    "sha": "62e0453ce0ee0f03fca4626882263ec41dc1d64d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MmUwNDUzY2UwZWUwZjAzZmNhNDYyNjg4MjI2M2VjNDFkYzFkNjRk",
    "commit": {
      "author": {
        "name": "Ricardo M. Correia",
        "email": "rcorreia@wizy.org",
        "date": "2012-05-14T19:15:27Z"
      },
      "committer": {
        "name": "Ricardo M. Correia",
        "email": "rcorreia@wizy.org",
        "date": "2012-05-14T19:26:01Z"
      },
      "message": "Add test case for CBigNum::setint64().\n\nOne of the test cases currently aborts when using gcc's flag -ftrapv, due to\nnegating an INT64_MIN int64 variable, which is an undefined operation.\n\nThis will be fixed in a subsequent commit.",
      "tree": {
        "sha": "ea714a48b7331d2d78e164c9c4c1e8f1ccb3403d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea714a48b7331d2d78e164c9c4c1e8f1ccb3403d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62e0453ce0ee0f03fca4626882263ec41dc1d64d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62e0453ce0ee0f03fca4626882263ec41dc1d64d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/62e0453ce0ee0f03fca4626882263ec41dc1d64d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62e0453ce0ee0f03fca4626882263ec41dc1d64d/comments",
    "author": {
      "login": "wizeman",
      "id": 168610,
      "node_id": "MDQ6VXNlcjE2ODYxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizeman",
      "html_url": "https://github.com/wizeman",
      "followers_url": "https://api.github.com/users/wizeman/followers",
      "following_url": "https://api.github.com/users/wizeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions",
      "organizations_url": "https://api.github.com/users/wizeman/orgs",
      "repos_url": "https://api.github.com/users/wizeman/repos",
      "events_url": "https://api.github.com/users/wizeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "wizeman",
      "id": 168610,
      "node_id": "MDQ6VXNlcjE2ODYxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizeman",
      "html_url": "https://github.com/wizeman",
      "followers_url": "https://api.github.com/users/wizeman/followers",
      "following_url": "https://api.github.com/users/wizeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions",
      "organizations_url": "https://api.github.com/users/wizeman/orgs",
      "repos_url": "https://api.github.com/users/wizeman/repos",
      "events_url": "https://api.github.com/users/wizeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe78c9ae8b4c9701cf6d84a0572a2d503c6ee424",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe78c9ae8b4c9701cf6d84a0572a2d503c6ee424",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe78c9ae8b4c9701cf6d84a0572a2d503c6ee424"
      }
    ],
    "stats": {
      "total": 110,
      "additions": 110,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ca17766d13ccc24dc93f88d24fd72c45ed9dd341",
        "filename": "src/test/bignum_tests.cpp",
        "status": "added",
        "additions": 110,
        "deletions": 0,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62e0453ce0ee0f03fca4626882263ec41dc1d64d/src/test/bignum_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62e0453ce0ee0f03fca4626882263ec41dc1d64d/src/test/bignum_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bignum_tests.cpp?ref=62e0453ce0ee0f03fca4626882263ec41dc1d64d",
        "patch": "@@ -0,0 +1,110 @@\n+#include <boost/test/unit_test.hpp>\n+#include <climits>\n+\n+#include \"bignum.h\"\n+\n+BOOST_AUTO_TEST_SUITE(bignum_tests)\n+\n+\n+// For the following test case, it is useful to use additional tools.\n+//\n+// The simplest one to use is the compiler flag -ftrapv, which detects integer\n+// overflows and similar errors. However, due to optimizations and compilers\n+// taking advantage of undefined behavior sometimes it may not actually detect\n+// anything.\n+//\n+// You can also use compiler-based stack protection to possibly detect possible\n+// stack buffer overruns.\n+//\n+// For more accurate diagnostics, you can use an undefined arithmetic operation\n+// detector such as the clang-based tool:\n+//\n+// \"IOC: An Integer Overflow Checker for C/C++\"\n+//\n+// Available at: http://embed.cs.utah.edu/ioc/\n+//\n+// It might also be useful to use Google's AddressSanitizer to detect\n+// stack buffer overruns, which valgrind can't currently detect.\n+\n+// Let's force this code not to be inlined, in order to actually\n+// test a generic version of the function. This increases the chance\n+// that -ftrapv will detect overflows.\n+void mysetint64(CBigNum& num, int64 n) __attribute__((noinline));\n+\n+void mysetint64(CBigNum& num, int64 n)\n+{\n+\tnum.setint64(n);\n+}\n+\n+// For each number, we do 2 tests: one with inline code, then we reset the\n+// value to 0, then the second one with a non-inlined function.\n+BOOST_AUTO_TEST_CASE(bignum_setint64)\n+{\n+    int64 n;\n+\n+    {\n+        n = 0;\n+        CBigNum num(n);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+        num.setulong(0);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+        mysetint64(num, n);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+    }\n+    {\n+        n = 1;\n+        CBigNum num(n);\n+        BOOST_CHECK(num.ToString() == \"1\");\n+        num.setulong(0);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+        mysetint64(num, n);\n+        BOOST_CHECK(num.ToString() == \"1\");\n+    }\n+    {\n+        n = -1;\n+        CBigNum num(n);\n+        BOOST_CHECK(num.ToString() == \"-1\");\n+        num.setulong(0);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+        mysetint64(num, n);\n+        BOOST_CHECK(num.ToString() == \"-1\");\n+    }\n+    {\n+        n = 5;\n+        CBigNum num(n);\n+        BOOST_CHECK(num.ToString() == \"5\");\n+        num.setulong(0);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+        mysetint64(num, n);\n+        BOOST_CHECK(num.ToString() == \"5\");\n+    }\n+    {\n+        n = -5;\n+        CBigNum num(n);\n+        BOOST_CHECK(num.ToString() == \"-5\");\n+        num.setulong(0);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+        mysetint64(num, n);\n+        BOOST_CHECK(num.ToString() == \"-5\");\n+    }\n+    {\n+        n = LLONG_MIN;\n+        CBigNum num(n);\n+        BOOST_CHECK(num.ToString() == \"-9223372036854775808\");\n+        num.setulong(0);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+        mysetint64(num, n);\n+        BOOST_CHECK(num.ToString() == \"-9223372036854775808\");\n+    }\n+    {\n+        n = LLONG_MAX;\n+        CBigNum num(n);\n+        BOOST_CHECK(num.ToString() == \"9223372036854775807\");\n+        num.setulong(0);\n+        BOOST_CHECK(num.ToString() == \"0\");\n+        mysetint64(num, n);\n+        BOOST_CHECK(num.ToString() == \"9223372036854775807\");\n+    }\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "5849bd472a3a7296f91b887884946218897ca11f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ODQ5YmQ0NzJhM2E3Mjk2ZjkxYjg4Nzg4NDk0NjIxODg5N2NhMTFm",
    "commit": {
      "author": {
        "name": "Ricardo M. Correia",
        "email": "rcorreia@wizy.org",
        "date": "2012-05-14T19:17:24Z"
      },
      "committer": {
        "name": "Ricardo M. Correia",
        "email": "rcorreia@wizy.org",
        "date": "2012-05-14T19:26:02Z"
      },
      "message": "Fix signed subtraction overflow in CBigNum::setint64().\n\nAs noticed by sipa (Pieter Wuille), this can happen when CBigNum::setint64() is\ncalled with an integer value of INT64_MIN (-2^63).\n\nWhen compiled with -ftrapv, the program would crash. Otherwise, it would\nexecute an undefined operation (although in practice, usually the correct one).",
      "tree": {
        "sha": "981fd61f70c870ca74bbe73037620d38f388b018",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/981fd61f70c870ca74bbe73037620d38f388b018"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5849bd472a3a7296f91b887884946218897ca11f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5849bd472a3a7296f91b887884946218897ca11f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5849bd472a3a7296f91b887884946218897ca11f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5849bd472a3a7296f91b887884946218897ca11f/comments",
    "author": {
      "login": "wizeman",
      "id": 168610,
      "node_id": "MDQ6VXNlcjE2ODYxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizeman",
      "html_url": "https://github.com/wizeman",
      "followers_url": "https://api.github.com/users/wizeman/followers",
      "following_url": "https://api.github.com/users/wizeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions",
      "organizations_url": "https://api.github.com/users/wizeman/orgs",
      "repos_url": "https://api.github.com/users/wizeman/repos",
      "events_url": "https://api.github.com/users/wizeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "wizeman",
      "id": 168610,
      "node_id": "MDQ6VXNlcjE2ODYxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizeman",
      "html_url": "https://github.com/wizeman",
      "followers_url": "https://api.github.com/users/wizeman/followers",
      "following_url": "https://api.github.com/users/wizeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions",
      "organizations_url": "https://api.github.com/users/wizeman/orgs",
      "repos_url": "https://api.github.com/users/wizeman/repos",
      "events_url": "https://api.github.com/users/wizeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "62e0453ce0ee0f03fca4626882263ec41dc1d64d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62e0453ce0ee0f03fca4626882263ec41dc1d64d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/62e0453ce0ee0f03fca4626882263ec41dc1d64d"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 9,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5190c2f3902e9e6271632ec7145ebd3e4be72b55",
        "filename": "src/bignum.h",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5849bd472a3a7296f91b887884946218897ca11f/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5849bd472a3a7296f91b887884946218897ca11f/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=5849bd472a3a7296f91b887884946218897ca11f",
        "patch": "@@ -131,7 +131,15 @@ class CBigNum : public BIGNUM\n \n         if (sn < (int64)0)\n         {\n-            n = -sn;\n+            // We negate in 2 steps to avoid signed subtraction overflow,\n+            // i.e. -(-2^63), which is an undefined operation and causes SIGILL\n+            // when compiled with -ftrapv.\n+            //\n+            // Note that uint64_t n = sn, when sn is an int64_t, is a\n+            // well-defined operation and n will be equal to sn + 2^64 when sn\n+            // is negative.\n+            n = sn;\n+            n = -n;\n             fNegative = true;\n         } else {\n             n = sn;"
      }
    ]
  },
  {
    "sha": "78e851f94f67b56e9baa8a62d6266c6bf979ee9e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OGU4NTFmOTRmNjdiNTZlOWJhYThhNjJkNjI2NmM2YmY5NzllZTll",
    "commit": {
      "author": {
        "name": "Ricardo M. Correia",
        "email": "rcorreia@wizy.org",
        "date": "2012-05-31T17:12:01Z"
      },
      "committer": {
        "name": "Ricardo M. Correia",
        "email": "rcorreia@wizy.org",
        "date": "2012-05-31T18:33:14Z"
      },
      "message": "Fix noinline definition so that it works for more compilers.",
      "tree": {
        "sha": "277a0bfc514fd1cea6fdd97a3fdadb86debdf1eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/277a0bfc514fd1cea6fdd97a3fdadb86debdf1eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78e851f94f67b56e9baa8a62d6266c6bf979ee9e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78e851f94f67b56e9baa8a62d6266c6bf979ee9e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78e851f94f67b56e9baa8a62d6266c6bf979ee9e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78e851f94f67b56e9baa8a62d6266c6bf979ee9e/comments",
    "author": {
      "login": "wizeman",
      "id": 168610,
      "node_id": "MDQ6VXNlcjE2ODYxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizeman",
      "html_url": "https://github.com/wizeman",
      "followers_url": "https://api.github.com/users/wizeman/followers",
      "following_url": "https://api.github.com/users/wizeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions",
      "organizations_url": "https://api.github.com/users/wizeman/orgs",
      "repos_url": "https://api.github.com/users/wizeman/repos",
      "events_url": "https://api.github.com/users/wizeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "wizeman",
      "id": 168610,
      "node_id": "MDQ6VXNlcjE2ODYxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizeman",
      "html_url": "https://github.com/wizeman",
      "followers_url": "https://api.github.com/users/wizeman/followers",
      "following_url": "https://api.github.com/users/wizeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions",
      "organizations_url": "https://api.github.com/users/wizeman/orgs",
      "repos_url": "https://api.github.com/users/wizeman/repos",
      "events_url": "https://api.github.com/users/wizeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5849bd472a3a7296f91b887884946218897ca11f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5849bd472a3a7296f91b887884946218897ca11f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5849bd472a3a7296f91b887884946218897ca11f"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 19,
      "deletions": 3
    },
    "files": [
      {
        "sha": "16e4449e949aae1a75185651e0fbab472cb44bd6",
        "filename": "src/test/bignum_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78e851f94f67b56e9baa8a62d6266c6bf979ee9e/src/test/bignum_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78e851f94f67b56e9baa8a62d6266c6bf979ee9e/src/test/bignum_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bignum_tests.cpp?ref=78e851f94f67b56e9baa8a62d6266c6bf979ee9e",
        "patch": "@@ -2,6 +2,7 @@\n #include <climits>\n \n #include \"bignum.h\"\n+#include \"util.h\"\n \n BOOST_AUTO_TEST_SUITE(bignum_tests)\n \n@@ -29,9 +30,7 @@ BOOST_AUTO_TEST_SUITE(bignum_tests)\n // Let's force this code not to be inlined, in order to actually\n // test a generic version of the function. This increases the chance\n // that -ftrapv will detect overflows.\n-void mysetint64(CBigNum& num, int64 n) __attribute__((noinline));\n-\n-void mysetint64(CBigNum& num, int64 n)\n+NOINLINE void mysetint64(CBigNum& num, int64 n)\n {\n \tnum.setint64(n);\n }"
      },
      {
        "sha": "0d5221c33da5dc5e1e878b785335e91cfa7675a7",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78e851f94f67b56e9baa8a62d6266c6bf979ee9e/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78e851f94f67b56e9baa8a62d6266c6bf979ee9e/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=78e851f94f67b56e9baa8a62d6266c6bf979ee9e",
        "patch": "@@ -43,6 +43,23 @@ static const int64 CENT = 1000000;\n #define ARRAYLEN(array)     (sizeof(array)/sizeof((array)[0]))\n #define printf              OutputDebugStringF\n \n+// Unfortunately there's no standard way of preventing a function from being\n+// inlined, so we define a macro for it.\n+//\n+// You should use it like this:\n+//   NOINLINE void function() {...}\n+#if defined(__GNUC__)\n+// This also works and will be defined for any compiler implementing gcc\n+// extensions, such as clang and icc.\n+#define NOINLINE __attribute__((noinline))\n+#elif defined(_MSC_VER)\n+#define NOINLINE __declspec(noinline)\n+#else\n+// We give out a warning because it impacts the correctness of one bignum test.\n+#warning You should define NOINLINE for your compiler.\n+#define NOINLINE\n+#endif\n+\n #ifdef snprintf\n #undef snprintf\n #endif"
      }
    ]
  },
  {
    "sha": "10b45b4c2e11994aa2aed966f83d84f83852d1e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMGI0NWI0YzJlMTE5OTRhYTJhZWQ5NjZmODNkODRmODM4NTJkMWUx",
    "commit": {
      "author": {
        "name": "Ricardo M. Correia",
        "email": "rcorreia@wizy.org",
        "date": "2012-05-31T18:31:15Z"
      },
      "committer": {
        "name": "Ricardo M. Correia",
        "email": "rcorreia@wizy.org",
        "date": "2012-05-31T18:33:22Z"
      },
      "message": "Use C++-style numeric limits instead of C-style.",
      "tree": {
        "sha": "d26054766715d39ad85ea00915c012c2d6a20f60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d26054766715d39ad85ea00915c012c2d6a20f60"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10b45b4c2e11994aa2aed966f83d84f83852d1e1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10b45b4c2e11994aa2aed966f83d84f83852d1e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/10b45b4c2e11994aa2aed966f83d84f83852d1e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10b45b4c2e11994aa2aed966f83d84f83852d1e1/comments",
    "author": {
      "login": "wizeman",
      "id": 168610,
      "node_id": "MDQ6VXNlcjE2ODYxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizeman",
      "html_url": "https://github.com/wizeman",
      "followers_url": "https://api.github.com/users/wizeman/followers",
      "following_url": "https://api.github.com/users/wizeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions",
      "organizations_url": "https://api.github.com/users/wizeman/orgs",
      "repos_url": "https://api.github.com/users/wizeman/repos",
      "events_url": "https://api.github.com/users/wizeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "wizeman",
      "id": 168610,
      "node_id": "MDQ6VXNlcjE2ODYxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizeman",
      "html_url": "https://github.com/wizeman",
      "followers_url": "https://api.github.com/users/wizeman/followers",
      "following_url": "https://api.github.com/users/wizeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions",
      "organizations_url": "https://api.github.com/users/wizeman/orgs",
      "repos_url": "https://api.github.com/users/wizeman/repos",
      "events_url": "https://api.github.com/users/wizeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "78e851f94f67b56e9baa8a62d6266c6bf979ee9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78e851f94f67b56e9baa8a62d6266c6bf979ee9e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/78e851f94f67b56e9baa8a62d6266c6bf979ee9e"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "38c625bba1a8ef3399d15fb4ec5c7fd771df6425",
        "filename": "src/test/bignum_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10b45b4c2e11994aa2aed966f83d84f83852d1e1/src/test/bignum_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10b45b4c2e11994aa2aed966f83d84f83852d1e1/src/test/bignum_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bignum_tests.cpp?ref=10b45b4c2e11994aa2aed966f83d84f83852d1e1",
        "patch": "@@ -1,5 +1,5 @@\n #include <boost/test/unit_test.hpp>\n-#include <climits>\n+#include <limits>\n \n #include \"bignum.h\"\n #include \"util.h\"\n@@ -87,7 +87,7 @@ BOOST_AUTO_TEST_CASE(bignum_setint64)\n         BOOST_CHECK(num.ToString() == \"-5\");\n     }\n     {\n-        n = LLONG_MIN;\n+        n = std::numeric_limits<int64>::min();\n         CBigNum num(n);\n         BOOST_CHECK(num.ToString() == \"-9223372036854775808\");\n         num.setulong(0);\n@@ -96,7 +96,7 @@ BOOST_AUTO_TEST_CASE(bignum_setint64)\n         BOOST_CHECK(num.ToString() == \"-9223372036854775808\");\n     }\n     {\n-        n = LLONG_MAX;\n+        n = std::numeric_limits<int64>::max();\n         CBigNum num(n);\n         BOOST_CHECK(num.ToString() == \"9223372036854775807\");\n         num.setulong(0);"
      }
    ]
  },
  {
    "sha": "43346904e15c3f1c3f92eee140dbf37b897c7c21",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MzM0NjkwNGUxNWMzZjFjM2Y5MmVlZTE0MGRiZjM3Yjg5N2M3YzIx",
    "commit": {
      "author": {
        "name": "Ricardo M. Correia",
        "email": "rcorreia@wizy.org",
        "date": "2012-06-07T17:11:15Z"
      },
      "committer": {
        "name": "Ricardo M. Correia",
        "email": "rcorreia@wizy.org",
        "date": "2012-06-07T18:22:10Z"
      },
      "message": "Don't overflow integer on 32-bit machines.\n\nThis was causing test_bitcoin to abort on a 32-bit system likely due to -ftrapv.",
      "tree": {
        "sha": "4937fc7f4865ca360e578d34094903bf5c21f506",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4937fc7f4865ca360e578d34094903bf5c21f506"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43346904e15c3f1c3f92eee140dbf37b897c7c21",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43346904e15c3f1c3f92eee140dbf37b897c7c21",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/43346904e15c3f1c3f92eee140dbf37b897c7c21",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43346904e15c3f1c3f92eee140dbf37b897c7c21/comments",
    "author": {
      "login": "wizeman",
      "id": 168610,
      "node_id": "MDQ6VXNlcjE2ODYxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizeman",
      "html_url": "https://github.com/wizeman",
      "followers_url": "https://api.github.com/users/wizeman/followers",
      "following_url": "https://api.github.com/users/wizeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions",
      "organizations_url": "https://api.github.com/users/wizeman/orgs",
      "repos_url": "https://api.github.com/users/wizeman/repos",
      "events_url": "https://api.github.com/users/wizeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "wizeman",
      "id": 168610,
      "node_id": "MDQ6VXNlcjE2ODYxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizeman",
      "html_url": "https://github.com/wizeman",
      "followers_url": "https://api.github.com/users/wizeman/followers",
      "following_url": "https://api.github.com/users/wizeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions",
      "organizations_url": "https://api.github.com/users/wizeman/orgs",
      "repos_url": "https://api.github.com/users/wizeman/repos",
      "events_url": "https://api.github.com/users/wizeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "10b45b4c2e11994aa2aed966f83d84f83852d1e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10b45b4c2e11994aa2aed966f83d84f83852d1e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10b45b4c2e11994aa2aed966f83d84f83852d1e1"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "cfc20b327513b1af1c6ad979dfa73964bd42f749",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43346904e15c3f1c3f92eee140dbf37b897c7c21/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43346904e15c3f1c3f92eee140dbf37b897c7c21/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=43346904e15c3f1c3f92eee140dbf37b897c7c21",
        "patch": "@@ -288,7 +288,7 @@ inline int64 GetPerformanceCounter()\n #else\n     timeval t;\n     gettimeofday(&t, NULL);\n-    nCounter = t.tv_sec * 1000000 + t.tv_usec;\n+    nCounter = (int64) t.tv_sec * 1000000 + t.tv_usec;\n #endif\n     return nCounter;\n }"
      }
    ]
  },
  {
    "sha": "31ac53fbdc2346876da201b9e1495565b38b46ba",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMWFjNTNmYmRjMjM0Njg3NmRhMjAxYjllMTQ5NTU2NWIzOGI0NmJh",
    "commit": {
      "author": {
        "name": "Ricardo M. Correia",
        "email": "rcorreia@wizy.org",
        "date": "2012-06-07T17:14:18Z"
      },
      "committer": {
        "name": "Ricardo M. Correia",
        "email": "rcorreia@wizy.org",
        "date": "2012-06-07T18:22:18Z"
      },
      "message": "Move NOINLINE definition to test where it's used.",
      "tree": {
        "sha": "97b316d9ec964f36d1b96771f68659e46e736a39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/97b316d9ec964f36d1b96771f68659e46e736a39"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/31ac53fbdc2346876da201b9e1495565b38b46ba",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31ac53fbdc2346876da201b9e1495565b38b46ba",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/31ac53fbdc2346876da201b9e1495565b38b46ba",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31ac53fbdc2346876da201b9e1495565b38b46ba/comments",
    "author": {
      "login": "wizeman",
      "id": 168610,
      "node_id": "MDQ6VXNlcjE2ODYxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizeman",
      "html_url": "https://github.com/wizeman",
      "followers_url": "https://api.github.com/users/wizeman/followers",
      "following_url": "https://api.github.com/users/wizeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions",
      "organizations_url": "https://api.github.com/users/wizeman/orgs",
      "repos_url": "https://api.github.com/users/wizeman/repos",
      "events_url": "https://api.github.com/users/wizeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "wizeman",
      "id": 168610,
      "node_id": "MDQ6VXNlcjE2ODYxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wizeman",
      "html_url": "https://github.com/wizeman",
      "followers_url": "https://api.github.com/users/wizeman/followers",
      "following_url": "https://api.github.com/users/wizeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/wizeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wizeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wizeman/subscriptions",
      "organizations_url": "https://api.github.com/users/wizeman/orgs",
      "repos_url": "https://api.github.com/users/wizeman/repos",
      "events_url": "https://api.github.com/users/wizeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wizeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "43346904e15c3f1c3f92eee140dbf37b897c7c21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43346904e15c3f1c3f92eee140dbf37b897c7c21",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/43346904e15c3f1c3f92eee140dbf37b897c7c21"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 16,
      "deletions": 17
    },
    "files": [
      {
        "sha": "8620f81f179d01e5bb51dfbdbf08123a30a973e5",
        "filename": "src/test/bignum_tests.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31ac53fbdc2346876da201b9e1495565b38b46ba/src/test/bignum_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31ac53fbdc2346876da201b9e1495565b38b46ba/src/test/bignum_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bignum_tests.cpp?ref=31ac53fbdc2346876da201b9e1495565b38b46ba",
        "patch": "@@ -6,6 +6,22 @@\n \n BOOST_AUTO_TEST_SUITE(bignum_tests)\n \n+// Unfortunately there's no standard way of preventing a function from being\n+// inlined, so we define a macro for it.\n+//\n+// You should use it like this:\n+//   NOINLINE void function() {...}\n+#if defined(__GNUC__)\n+// This also works and will be defined for any compiler implementing gcc\n+// extensions, such as clang and icc.\n+#define NOINLINE __attribute__((noinline))\n+#elif defined(_MSC_VER)\n+#define NOINLINE __declspec(noinline)\n+#else\n+// We give out a warning because it impacts the correctness of one bignum test.\n+#warning You should define NOINLINE for your compiler.\n+#define NOINLINE\n+#endif\n \n // For the following test case, it is useful to use additional tools.\n //"
      },
      {
        "sha": "b77eb43c99b84a891be365c4e34d4119dcf0193d",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31ac53fbdc2346876da201b9e1495565b38b46ba/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31ac53fbdc2346876da201b9e1495565b38b46ba/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=31ac53fbdc2346876da201b9e1495565b38b46ba",
        "patch": "@@ -43,23 +43,6 @@ static const int64 CENT = 1000000;\n #define ARRAYLEN(array)     (sizeof(array)/sizeof((array)[0]))\n #define printf              OutputDebugStringF\n \n-// Unfortunately there's no standard way of preventing a function from being\n-// inlined, so we define a macro for it.\n-//\n-// You should use it like this:\n-//   NOINLINE void function() {...}\n-#if defined(__GNUC__)\n-// This also works and will be defined for any compiler implementing gcc\n-// extensions, such as clang and icc.\n-#define NOINLINE __attribute__((noinline))\n-#elif defined(_MSC_VER)\n-#define NOINLINE __declspec(noinline)\n-#else\n-// We give out a warning because it impacts the correctness of one bignum test.\n-#warning You should define NOINLINE for your compiler.\n-#define NOINLINE\n-#endif\n-\n #ifdef snprintf\n #undef snprintf\n #endif"
      }
    ]
  }
]