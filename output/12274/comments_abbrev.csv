laanwj,2018-01-28T09:03:12Z,This needs to be tested by those experiencing the issue: @KanoczTomas @vii,https://github.com/bitcoin/bitcoin/pull/12274#issuecomment-361048140,361048140,
promag,2018-01-29T21:32:08Z,"Concept ACK.\n\nWhy don't understand why you need dc53bec, seems like an unnecessary refactor.\n\n5f5099a and 3b0ebb3 could be in a separate PR, are simple and make sense even without the fd exhaustion problem.",https://github.com/bitcoin/bitcoin/pull/12274#issuecomment-361393618,361393618,
theuni,2018-01-29T22:30:18Z,@promag dc53bec is just a small chunk of c56cf1a that seemed reasonable on its own.,https://github.com/bitcoin/bitcoin/pull/12274#issuecomment-361409373,361409373,
vii,2018-01-30T04:42:48Z,"Awesome! The defer accept tweak will defend against typical inadvertent denial of services\n\nNote that the original issue can still be activated depending on the file descriptor limit that is set, as the budgeting in the daemon does not account for this usage or the usage in the db code - see\nhttps://github.com/bitcoin/bitcoin/pull/11785\n\nTo test it, something like this slowhttptest progr",https://github.com/bitcoin/bitcoin/pull/12274#issuecomment-361475533,361475533,
laanwj,2018-01-30T11:27:45Z,"Sorry, I'm removing the 0.16.0 milestone here. As it introduces many new concepts and work-arounds it is hard to review last-minute, the problem is hard to trigger in the first place, and it is not a regression since 0.15. Also according to @vii it doesn't solve the issue completely. I think getting the fd issue fixed properly should be a focus for 0.16.1.",https://github.com/bitcoin/bitcoin/pull/12274#issuecomment-361565094,361565094,
fanquake,2018-03-21T16:08:22Z,"@eklitzke I can still produce a crash with these changes on top of https://github.com/bitcoin/bitcoin/commit/2405ce1df043f778b8efb9205009500cbc17313a:\n\n<img width=""770"" alt=""screenshot 2018-03-22 at 12 04 52 am"" src=""https://user-images.githubusercontent.com/863730/37721599-e5febea4-2d64-11e8-9e43-6836ab0ef507.png"">\n\n```\ndate='2015-09-16T16:18:02Z' progress=0.269372 cache=313.8MiB(233674",https://github.com/bitcoin/bitcoin/pull/12274#issuecomment-374996649,374996649,
eklitzke,2018-03-21T22:59:54Z,@fanquake Interesting -- do you have a script to stress test it to induce that condition? Or does that happen during normal operation?,https://github.com/bitcoin/bitcoin/pull/12274#issuecomment-375123557,375123557,
DrahtBot,2018-07-20T20:30:00Z,"<!--5d09a71f8925f3f132321140b44b946d-->The last travis run for this pull request was 175 days ago and is thus outdated. To trigger a fresh travis build, this pull request should be closed and re-opened.",https://github.com/bitcoin/bitcoin/pull/12274#issuecomment-406718419,406718419,
DrahtBot,2018-08-21T16:44:29Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/12274#issuecomment-414741756,414741756,
DrahtBot,2018-12-03T16:52:35Z,"<!--5fd3d806e98f4a0ca80977bb178665a0-->There hasn't been much activity lately and the patch still needs rebase, so I am closing this for now. Please let me know when you want to continue working on this, so the pull request can be re-opened.",https://github.com/bitcoin/bitcoin/pull/12274#issuecomment-443782140,443782140,
BlockMechanic,2019-11-07T18:16:03Z,So is this the recommended fix for https://github.com/bitcoin/bitcoin/issues/11368 ? I just bumped into it  and need to resolve it,https://github.com/bitcoin/bitcoin/pull/12274#issuecomment-551200035,551200035,
tjps,2018-01-26T09:14:38Z,"Should this block be wrapped in a LIBEVENT_VERSION_NUMBER macro guard so it only occurs in the affected version range?\n\nSeems like it would be easier for future cleanups to see where the version macro is checked, say in the instance that a minimum version of libevent is defined and code like this could be safely removed.",https://github.com/bitcoin/bitcoin/pull/12274#discussion_r164062623,164062623,src/httpserver.cpp
tjps,2018-01-26T09:21:01Z,"Not that it probably matters in most configurations where the fd limit is ~1K, but making this an unordered_set would be slightly beneficial in the high fd limit cases.",https://github.com/bitcoin/bitcoin/pull/12274#discussion_r164063956,164063956,src/httpserver.cpp
theuni,2018-01-29T22:27:01Z,Sure,https://github.com/bitcoin/bitcoin/pull/12274#discussion_r164584840,164584840,src/httpserver.cpp
theuni,2018-01-29T22:29:14Z,"This is just move-only from above. There's no need to guard it with an ifdef because there's no api difference, it's purely a runtime check.",https://github.com/bitcoin/bitcoin/pull/12274#discussion_r164585509,164585509,src/httpserver.cpp
vii,2018-01-30T04:36:15Z,"awesome that you're using the callback - one way to unambiguously detect the presence of the new feature would be to add a new autoconf test maybe using AC_LINK_IFELSE for evhttp_set_newreqcb\n\n",https://github.com/bitcoin/bitcoin/pull/12274#discussion_r164638877,164638877,src/httpserver.cpp
eklitzke,2018-03-11T07:46:36Z,"Would like to see this defined separately as:\n\n```c++\n#if LIBEVENT_VERSION_NUMBER >= 0x02020001\n#define HAVE_EVHTTP_SET_NEWREQCB 1\n#endif\n```\n\nThat way the check here is more obvious, particularly since you do the check elsewhere. Of course, even better than this would be to use `AC_CHECK_FUNC()`...",https://github.com/bitcoin/bitcoin/pull/12274#discussion_r173646080,173646080,src/httpserver.cpp
eklitzke,2018-03-11T07:49:13Z,"This is the first time I've seen `static constexpr` used correctly in the Bitcoin code, congratulations.",https://github.com/bitcoin/bitcoin/pull/12274#discussion_r173646136,173646136,src/netbase.cpp
MarcoFalke,2018-07-20T20:36:00Z,All calls to LogPrintf() and LogPrint() should be terminated with \n,https://github.com/bitcoin/bitcoin/pull/12274#discussion_r204162838,204162838,src/httpserver.cpp
