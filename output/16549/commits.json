[
  {
    "sha": "4037f85033fb78a9f7fe26320f5d6f17df1843b9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MDM3Zjg1MDMzZmI3OGE5ZjdmZTI2MzIwZjVkNmYxN2RmMTg0M2I5",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-04-27T13:49:30Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T11:38:42Z"
      },
      "message": "[depends] boost: patch unused variable in boost_process\n\nCo-Authored-By: fanquake <fanquake@gmail.com>",
      "tree": {
        "sha": "29b371bdb93024a60b6de69d290dc6c10ca19153",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/29b371bdb93024a60b6de69d290dc6c10ca19153"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4037f85033fb78a9f7fe26320f5d6f17df1843b9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7or0IACgkQV/+b28ww\nEAkIcBAAsOmuRbqlLx9AqPIukPBHjufUpWHV3Y+/WJ2eDYy/AmK0My21/HEdc6xk\nQa62gS6bprl6qV4arliIL6whwGBedTIWG5FtDV0vji6/JZ6z8H0MsRlPQdTE7VTO\nh7U0Eap5k3omWwCjzDHrWOlnsbtRnUdr9m6bYCOSXlqr+av2UHUtnxQ6gY2KCOkN\nCO6HeMQH70j3Eawy7VyEcA84ExDrSwFYK182dXpqXZyLuQtlElDukgtufqapDVMd\nPjZTpQi4r+ixYafxOX3WuZK9LynhOaQnSEvL+Bq0V1PkvKIeaY4/MRjMtwQtVNPK\nqF184q4BVs4FXO9Cn+JxADYm/F4Oy0D1O4SJTqCC+M6KeP+Y5TZd9JQnQCOZBwDp\nBzfIdgGB1PkjZ9GDxDtr1ebcOxMMxxhUy0c9s2mIE5uthvr4YVTwpJsiUe8hoVoS\nGFFA/pfgXCfd4RLANhvWXPT6eXAT4rvlIrTC11mGMaoZ5FyszVUwtrL2sLymx3j9\nnbuW1kt5jEiJWeC1ftAEZgJWvduP9gKeaOzsfxbIDDUgfZjdQoZiLjyAlOA6DrzR\nHIRPvQ7QKGZ0cz4kYPVDQrGRg0aP8o5Vo0duCNHEO+37ta9Wkg/Mh2JSm7kWTfow\nrU2NdkpgPQF2A1VDoRMhr1KwxPNLV9W6MPW2vv0N15RdsRsw1u8=\n=G8tn\n-----END PGP SIGNATURE-----",
        "payload": "tree 29b371bdb93024a60b6de69d290dc6c10ca19153\nparent 0afbeb73ccb7523794e1e4a3422607c4423d1048\nauthor Sjors Provoost <sjors@sprovoost.nl> 1587995370 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592307522 +0200\n\n[depends] boost: patch unused variable in boost_process\n\nCo-Authored-By: fanquake <fanquake@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4037f85033fb78a9f7fe26320f5d6f17df1843b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4037f85033fb78a9f7fe26320f5d6f17df1843b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4037f85033fb78a9f7fe26320f5d6f17df1843b9/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0afbeb73ccb7523794e1e4a3422607c4423d1048",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0afbeb73ccb7523794e1e4a3422607c4423d1048",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0afbeb73ccb7523794e1e4a3422607c4423d1048"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2b44d0b817f7a38a9dab0fb709a4665ebf088701",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4037f85033fb78a9f7fe26320f5d6f17df1843b9/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4037f85033fb78a9f7fe26320f5d6f17df1843b9/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=4037f85033fb78a9f7fe26320f5d6f17df1843b9",
        "patch": "@@ -31,7 +31,9 @@ $(package)_cxxflags_linux=-fPIC\n $(package)_cxxflags_android=-fPIC\n endef\n \n+# Fix unused variable in boost_process, can be removed after upgrading to 1.72\n define $(package)_preprocess_cmds\n+\tsed -i.old \"s/int ret_sig = 0;//\" boost/process/detail/posix/wait_group.hpp && \\\n   echo \"using $($(package)_toolset_$(host_os)) : : $($(package)_cxx) : <cxxflags>\\\"$($(package)_cxxflags) $($(package)_cppflags)\\\" <linkflags>\\\"$($(package)_ldflags)\\\" <archiver>\\\"$($(package)_archiver_$(host_os))\\\" <striper>\\\"$(host_STRIP)\\\"  <ranlib>\\\"$(host_RANLIB)\\\" <rc>\\\"$(host_WINDRES)\\\" : ;\" > user-config.jam\n endef\n "
      }
    ]
  },
  {
    "sha": "243690865179b4979784c29cb1e455067d7126c8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNDM2OTA4NjUxNzliNDk3OTc4NGMyOWNiMWU0NTUwNjdkNzEyNmM4",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-01T18:13:26Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T11:38:43Z"
      },
      "message": "configure: add ax_boost_process\n\nCo-authored-by: Luke Dashjr <luke-jr+git@utopios.org>",
      "tree": {
        "sha": "7d3686807a43bc6dd6dec3d0841a089be6695c7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7d3686807a43bc6dd6dec3d0841a089be6695c7e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/243690865179b4979784c29cb1e455067d7126c8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7or0MACgkQV/+b28ww\nEAlgQA//WYpzhyFO5p/2Ly01BOmLrvxGPnPvgkPUME6TbW22+KiKV4xN2MOPBpwl\nTzeUQIuZZ2yvdWH/9/cFuRisoF0M0Z6SEg8FvWxH2OKvzUKZhGgzZqQbgrVdVL/D\nyvfEnb4QZAhBJiUvrR3+K9GA31x9zV+MgMHPa3j4Zi6slQTcachiqtlwfTzt7F9L\ntkTPwXX1aUbcL6iVw7zAZO+HaJ5Rh0L75tgja4i2E+iB6d8qLV+fd3sAb7rpG98h\nOT9DDiRggfPlAmQOGZBedFgt+b//0/xgUEpf+IEGJQS6HEz09BRdtKBNU3yYL2um\nJOa2Z+bdbseYbqU4TJonxUDQuXHjmhBkqJZalOsUSAHWs+TAcWCPb9WLXTpgbeGE\ntRMepB9NtVpsRvZ9m5x2DKZn5Q/tJLETy4BZFj8PtLYnWAdINvgs9cD+7F2+I2Dc\ncR8W7Z11I/WAGFagqzrc7QW6O1Dhe0/YyAmKMcUgzVhZpsjrhaD+B1kSeGQFBO++\nNceDInszoG3mZdY7DZ64t/sG/qqoNKEuA9xSc/9zD3edyd42KhwPpx8wi80SJ1tY\nBt1gpZEWqzN3PV2m6Tb9FiKrTwR/7GAEi2/BWet0TnAfLsZzBV3in9I8k1IJoL6V\n1zdP513mGR6YPouXxzGT58o77L+Q0IzME90So26bhWwwKqvVEvI=\n=b5iU\n-----END PGP SIGNATURE-----",
        "payload": "tree 7d3686807a43bc6dd6dec3d0841a089be6695c7e\nparent 4037f85033fb78a9f7fe26320f5d6f17df1843b9\nauthor Sjors Provoost <sjors@sprovoost.nl> 1572632006 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592307523 +0200\n\nconfigure: add ax_boost_process\n\nCo-authored-by: Luke Dashjr <luke-jr+git@utopios.org>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/243690865179b4979784c29cb1e455067d7126c8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/243690865179b4979784c29cb1e455067d7126c8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/243690865179b4979784c29cb1e455067d7126c8/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4037f85033fb78a9f7fe26320f5d6f17df1843b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4037f85033fb78a9f7fe26320f5d6f17df1843b9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4037f85033fb78a9f7fe26320f5d6f17df1843b9"
      }
    ],
    "stats": {
      "total": 122,
      "additions": 122,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5d20e67464fcde6ee00f2582607e59f0759115b8",
        "filename": "build-aux/m4/ax_boost_process.m4",
        "status": "added",
        "additions": 121,
        "deletions": 0,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/243690865179b4979784c29cb1e455067d7126c8/build-aux/m4/ax_boost_process.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/243690865179b4979784c29cb1e455067d7126c8/build-aux/m4/ax_boost_process.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_process.m4?ref=243690865179b4979784c29cb1e455067d7126c8",
        "patch": "@@ -0,0 +1,121 @@\n+# ===========================================================================\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_process.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_PROCESS\n+#\n+# DESCRIPTION\n+#\n+#   Test for Process library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_PROCESS_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_PROCESS\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2008 Michael Tindal\n+#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_BOOST_PROCESS],\n+[\n+\tAC_ARG_WITH([boost-process],\n+\tAS_HELP_STRING([--with-boost-process@<:@=special-lib@:>@],\n+                   [use the Process library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-process=boost_process-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost_process=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost_process=\"yes\"\n+            ax_boost_user_process_lib=\"\"\n+        else\n+\t\t    want_boost_process=\"yes\"\n+\t\tax_boost_user_process_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost_process=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost_process\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Process library is available,\n+\t\t\t\t\t   ax_cv_boost_process,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\t\t\t CXXFLAGS=\n+\n+             AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/process.hpp>]],\n+                [[boost::process::child* child = new boost::process::child; delete child;]])],\n+                ax_cv_boost_process=yes, ax_cv_boost_process=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_process\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_PROCESS,,[define if the Boost::Process library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_process_lib\" = \"x\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/libboost_process* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n+                                 [link_process=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_process\" != \"xyes\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/boost_process* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n+                                 [link_process=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_process_lib boost_process-$ax_boost_user_process_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_PROCESS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROCESS_LIB) link_process=\"yes\"; break],\n+                                   [link_process=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the Boost::Process library!)\n+            fi\n+\t\t\tif test \"x$link_process\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "e70b689170b7895dd21e3d73efb7992610a136f0",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/243690865179b4979784c29cb1e455067d7126c8/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/243690865179b4979784c29cb1e455067d7126c8/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=243690865179b4979784c29cb1e455067d7126c8",
        "patch": "@@ -1195,6 +1195,7 @@ fi\n AX_BOOST_SYSTEM\n AX_BOOST_FILESYSTEM\n AX_BOOST_THREAD\n+AX_BOOST_PROCESS\n \n dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n dnl counter implementations. In 1.63 and later the std::atomic approach is default."
      }
    ]
  },
  {
    "sha": "459e567992de9bda8354697cfa12aa0a9f84d6df",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NTllNTY3OTkyZGU5YmRhODM1NDY5N2NmYTEyYWEwYTlmODRkNmRm",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T12:50:00Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T13:27:01Z"
      },
      "message": "[build] make boost-process opt-in",
      "tree": {
        "sha": "592668e963f5f155d49523abf03947995ae5f394",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/592668e963f5f155d49523abf03947995ae5f394"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/459e567992de9bda8354697cfa12aa0a9f84d6df",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7oyKUACgkQV/+b28ww\nEAmrxQ/9HhesH2nDQ+jwE2nuqhdrNlwsUVgcNefzuQNqjoC2AEE87g4MOUKFY0MS\nupcKYo4vUbnnn6JwBKJV2LaewT66CV1dBL0lbtFJxFyvNbw+9h9qYyChDXWePL8s\n8XbqYkWJ/e95tk3yMkkHpUgTRWACChAV6I/EOOh/2n1eax2Y4yhHGIHqWyQw5kyz\ntpsDnrqm2m34PE7KhdeUvX0EaivLGx0MoDYpc6wdq4+7upykm3fdMrQe7M0pI3VT\nnK5e+DeB7nLIjUH4q7qkPsxiZM+3TVdeZn6DNSI5RuKP+bAHl2Q55U21wITZE5KT\nA9HrCoqS3txWO0q5C1XD0V7Hq8sHNuALgRCuaVNO+GC8MMpy60SxWt84XDQhEyZL\nO1VTSK0qWTl5nMyo0Jqqo9ELSRpyuyspLXOrJD/5+iWGtVt0ibJNRtFtF9+a6mYm\n3cqrQMvKySfByuKuDt/isO7zAPR9XVx2xWcogPGn7TEFln6V/qciPeONJBc9VKV7\nSnZkOjeq1rZIJoV2etUcxF3iv2AhoUOf36bFdsbURDiOCWIZpOb2qf8y89dfZCuC\nwGKgeOb9X/RZVoSffV9WI6MKmlgl+QEju/jcXwqRPIi8YhNhFuqT0YdclIuMjO4O\njdRdk7hxpzcRxzWr0xVaP4d51hbxhLf0M5U3yPOR7gLW6XqRCUw=\n=kXZX\n-----END PGP SIGNATURE-----",
        "payload": "tree 592668e963f5f155d49523abf03947995ae5f394\nparent 243690865179b4979784c29cb1e455067d7126c8\nauthor Sjors Provoost <sjors@sprovoost.nl> 1592311800 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592314021 +0200\n\n[build] make boost-process opt-in\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/459e567992de9bda8354697cfa12aa0a9f84d6df",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/459e567992de9bda8354697cfa12aa0a9f84d6df",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/459e567992de9bda8354697cfa12aa0a9f84d6df/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "243690865179b4979784c29cb1e455067d7126c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/243690865179b4979784c29cb1e455067d7126c8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/243690865179b4979784c29cb1e455067d7126c8"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "497d0f75bb56877b424103cd0280e4c9b28d679d",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/459e567992de9bda8354697cfa12aa0a9f84d6df/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/459e567992de9bda8354697cfa12aa0a9f84d6df/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=459e567992de9bda8354697cfa12aa0a9f84d6df",
        "patch": "@@ -1195,7 +1195,11 @@ fi\n AX_BOOST_SYSTEM\n AX_BOOST_FILESYSTEM\n AX_BOOST_THREAD\n-AX_BOOST_PROCESS\n+\n+dnl Opt-in to boost-process\n+if test x$with_boost_process = xyes; then\n+  AX_BOOST_PROCESS\n+fi\n \n dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n dnl counter implementations. In 1.63 and later the std::atomic approach is default."
      }
    ]
  },
  {
    "sha": "97f65def305566cbf8fdc9120dc0fe0ed1130557",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5N2Y2NWRlZjMwNTU2NmNiZjhmZGM5MTIwZGMwZmUwZWQxMTMwNTU3",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-13T17:17:32Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T13:27:01Z"
      },
      "message": "[build] msvc: add boost::process\n\n* AppVeyor boost-process vcpkg package.\n* Tell Boost linter to ignore it\n* Add HAVE_BOOST_PROCESS for MSVC build (bitcoin_config.h)",
      "tree": {
        "sha": "75fa450fca8aa40359023af29bce070e1e9286e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/75fa450fca8aa40359023af29bce070e1e9286e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97f65def305566cbf8fdc9120dc0fe0ed1130557",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7oyKUACgkQV/+b28ww\nEAnMmQ/9G4KX0cwuv71HTovplJ6pa3NS/ZkVyqMNDnarxtzOpg2t5rvqi/vqt/j8\n03lyFRYSx1agDCQ9anGZmr5a3bysvVk/nglgcHmXFdHd5By2ZDZjfd/imrPDdV1I\nJLh/2hllV8S+NJk6+bgmauQJrm1qclLqn0WBligtYnG5z0kBUgsJLidFz1v2lGsW\n5LagOIDsBibCOv5gVftXDRTHtw+hgbof7R6KLwWE2ts44V/WhPsC7eagGsuW++r3\nSwNTiGR1XAP7ZlT2JOmltfC8zRkGhe1SbWvf/6A8Z96jkTZXtmcTmpgZkLqjhRke\n3IRggseiXDTLphc2sndNk8Kwcf+ilsQGGZ/x0Kjl0I3rvkQDIR9TKK4FTtkA6/CS\noXrOXDBrZe6zz9EMZv38BtpM1RFYriceGSoT28ffGuCkYVFylEbHLaDptoAROm3s\nH7kRR85rJfqmXqbWRlDVmmowdLgsSNE6ZD1oAZ61C0hxWearfkSulpGOrZtjt6fP\nJlTTmGwMGoKw7HBxFTV6YJXoQj/r/uHd7COGgYHPVKU7fqemGFKe2MXCfYgJdCyb\n9Sp0dPNFo3rrVvcODOMyFFB6kMUy2xeLuKj9J1J6XZviO412gG9WeY8GvnK3BomL\nP1jT/bdYneG4d0HrtRwjVrjZnkix6r68Ts7h4lBvzCAQ5ErctMI=\n=hXp8\n-----END PGP SIGNATURE-----",
        "payload": "tree 75fa450fca8aa40359023af29bce070e1e9286e2\nparent 459e567992de9bda8354697cfa12aa0a9f84d6df\nauthor Sjors Provoost <sjors@sprovoost.nl> 1550078252 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592314021 +0200\n\n[build] msvc: add boost::process\n\n* AppVeyor boost-process vcpkg package.\n* Tell Boost linter to ignore it\n* Add HAVE_BOOST_PROCESS for MSVC build (bitcoin_config.h)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97f65def305566cbf8fdc9120dc0fe0ed1130557",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/97f65def305566cbf8fdc9120dc0fe0ed1130557",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97f65def305566cbf8fdc9120dc0fe0ed1130557/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "459e567992de9bda8354697cfa12aa0a9f84d6df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/459e567992de9bda8354697cfa12aa0a9f84d6df",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/459e567992de9bda8354697cfa12aa0a9f84d6df"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "697e4ec18369bdb1e407f7dd26ff4d7392b492fe",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97f65def305566cbf8fdc9120dc0fe0ed1130557/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97f65def305566cbf8fdc9120dc0fe0ed1130557/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=97f65def305566cbf8fdc9120dc0fe0ed1130557",
        "patch": "@@ -47,6 +47,9 @@\n /* define if the Boost::Filesystem library is available */\n #define HAVE_BOOST_FILESYSTEM /**/\n \n+/* define if the Boost::Process library is available */\n+#define HAVE_BOOST_PROCESS /**/\n+\n /* define if the Boost::System library is available */\n #define HAVE_BOOST_SYSTEM /**/\n "
      },
      {
        "sha": "edce8576c33185b35094b67d3a3aa4e785850113",
        "filename": "build_msvc/vcpkg-packages.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97f65def305566cbf8fdc9120dc0fe0ed1130557/build_msvc/vcpkg-packages.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97f65def305566cbf8fdc9120dc0fe0ed1130557/build_msvc/vcpkg-packages.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg-packages.txt?ref=97f65def305566cbf8fdc9120dc0fe0ed1130557",
        "patch": "@@ -1 +1 @@\n-berkeleydb boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent[thread] zeromq double-conversion\n\\ No newline at end of file\n+berkeleydb boost-filesystem boost-multi-index boost-process boost-signals2 boost-test boost-thread libevent[thread] zeromq double-conversion"
      },
      {
        "sha": "71559c2c3e18d6d611b5bfc73ff6c169602358e8",
        "filename": "test/lint/lint-includes.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97f65def305566cbf8fdc9120dc0fe0ed1130557/test/lint/lint-includes.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97f65def305566cbf8fdc9120dc0fe0ed1130557/test/lint/lint-includes.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-includes.sh?ref=97f65def305566cbf8fdc9120dc0fe0ed1130557",
        "patch": "@@ -63,6 +63,7 @@ EXPECTED_BOOST_INCLUDES=(\n     boost/optional.hpp\n     boost/preprocessor/cat.hpp\n     boost/preprocessor/stringize.hpp\n+    boost/process.hpp\n     boost/signals2/connection.hpp\n     boost/signals2/last_value.hpp\n     boost/signals2/signal.hpp"
      }
    ]
  },
  {
    "sha": "4a093579e1cb9c128ec6e0b11be54ded620dbf3f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YTA5MzU3OWUxY2I5YzEyOGVjNmUwYjExYmU1NGRlZDYyMGRiZjNm",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-03T08:57:18Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T13:27:01Z"
      },
      "message": "[doc] include Doxygen comments for HAVE_BOOST_PROCESS",
      "tree": {
        "sha": "315d2d2500b818a2aed6420b5a8d9ea4a14d48a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/315d2d2500b818a2aed6420b5a8d9ea4a14d48a3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a093579e1cb9c128ec6e0b11be54ded620dbf3f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7oyKUACgkQV/+b28ww\nEAle+g//YW0WM5N/whtcBgSWqJuukRqafKHSS7qALzqhFpwbREFeiqpp0RG5iqft\nXL5uiD/3Jouj9k6rHNWNljUGAgf1m+DBYXuK6sqR6kAzdtzyASkkIX1ait7FA+Cr\nME9kKIquBq4n4tQExuXH2Xg/bXHVVADRZfnH7xmFJ+yS3OuEEY7rCf8xXNtyWSIs\niJSlSPvxeEUj+gqgiaqIepBtj+zN8YqdkfUGWvlV247OqSVSlfmDVnTvNSvWCmGd\n3PydbsCimo/NXuqs6MBH16PxzhyDldJS2jA+aTHyI3kZdZMXvFCK3a0Z6VldC1/h\nSvkMSTdjiZQfYA6i4lQulPoP/Uq5+TO51GDutNPptZD6kfNiGpNZ5lpvM4HN2KlT\nHLtCMCT1l6lfp58XPi7ZWF/x8hMPHvb/6CgO2l/FHnWiloupHsIBvQU1GrcYfuJN\nxPjh/CpAbwJTEzpIYo3eE/c1e1G146WemifJOqJjwunqsZn//gU49JmNsGidjGcD\nJEw+KpjVLJcep78ly7KQrkNnd3lqc1zvI8cKhEU0GBcdSjo8zSNNpO4dE4LyojtL\n0BPL8EGptWAUtJcRf2E2yzTd6n2rLe0TVpPL1u1H/81LEracGZmzxAu3qz1fmCKR\nH+nMc6z21e+hzkwD2jWcT4zJNDayhrvFJDS6bFfrvhmxEFo4Z+c=\n=QQoO\n-----END PGP SIGNATURE-----",
        "payload": "tree 315d2d2500b818a2aed6420b5a8d9ea4a14d48a3\nparent 97f65def305566cbf8fdc9120dc0fe0ed1130557\nauthor Sjors Provoost <sjors@sprovoost.nl> 1572771438 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592314021 +0200\n\n[doc] include Doxygen comments for HAVE_BOOST_PROCESS\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a093579e1cb9c128ec6e0b11be54ded620dbf3f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4a093579e1cb9c128ec6e0b11be54ded620dbf3f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a093579e1cb9c128ec6e0b11be54ded620dbf3f/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "97f65def305566cbf8fdc9120dc0fe0ed1130557",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97f65def305566cbf8fdc9120dc0fe0ed1130557",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/97f65def305566cbf8fdc9120dc0fe0ed1130557"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2f7916821256f93fbc0ac2837c3afeb21828d2e1",
        "filename": "doc/Doxyfile.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a093579e1cb9c128ec6e0b11be54ded620dbf3f/doc/Doxyfile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a093579e1cb9c128ec6e0b11be54ded620dbf3f/doc/Doxyfile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile.in?ref=4a093579e1cb9c128ec6e0b11be54ded620dbf3f",
        "patch": "@@ -2073,7 +2073,7 @@ INCLUDE_FILE_PATTERNS  =\n # recursively expanded use the := operator instead of the = operator.\n # This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n \n-PREDEFINED             =\n+PREDEFINED             = HAVE_BOOST_PROCESS\n \n # If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then this\n # tag can be used to specify a list of macro names that should be expanded. The"
      }
    ]
  },
  {
    "sha": "f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOTdmOWUyYmQ0ZDg0ZjQwMzAyNjkwZWI4ZGY3YzRlYmU3ZjgxYmQ4",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T12:59:48Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T13:27:01Z"
      },
      "message": "[ci] use boost::process\n\nExplictly opt-out on win64, in case the default changes.",
      "tree": {
        "sha": "e8146d00dbd3e2f26c413f4d4953d71755f9da9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8146d00dbd3e2f26c413f4d4953d71755f9da9b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7oyKUACgkQV/+b28ww\nEAlp+A/9HOVOffxoJUJmby3MNeDb+qWbH3ByTRFBY6dfLIonQvNNtatQV4F+X7HP\nnEgjt217Rfc21NhShsh5ClXveXWbVCgJFwKdrjeJ8kw6rGIWWVCqCoJVKHWs+MGC\nmw0y762BOHmiw1cgP1eieuf2ACffAPkgXT4oa+njzLBHSNzcoaY+odg7tVsUY/kL\nQi+ZAJLLmS1UFjS7r4mjK5XOlm0N0lEsP4ss1bxghLWXrEdJlhelLmaxKsDDvQoh\n6xpueiq0DVd6Qax/JiwfM440Zoezg3OOeGwZsh9rAPitX+TOaSro90n29edy8EoM\nXU/jhKyrVvSkK4v9dMulxeZubDqHrHHKwszC4a75QSBPitNp4s9dMexXrMSP5/ao\np2hcX2qtpxN4GrmQDjmgNj99q/QzOPSjf4LUqbE/+koatmeWau5k7m1tTBJd8ELt\nxblbvxL3Pn1eewtEbNPpf38Uh7G6zX8A7lP09WS9JiytkBnkoZJTUfIVrG0PwbYV\nLDiizAeT6hnAejDbfUS2gPpq4injmansm8pEJXoMYFtqUNJjwTvZS1v7N4sJU80j\nqofwodrrQ3owaxQ2bOj0FYEmYwxEu7SSEqggOI/Oj2bgrDBRS43nC9lzFi7JxGZm\nhl9ksFgcuQk5Vng5MStpoCk0wSx0IsPOF1eAR05JVEOXFFFdbeY=\n=tXu6\n-----END PGP SIGNATURE-----",
        "payload": "tree e8146d00dbd3e2f26c413f4d4953d71755f9da9b\nparent 4a093579e1cb9c128ec6e0b11be54ded620dbf3f\nauthor Sjors Provoost <sjors@sprovoost.nl> 1592312388 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592314021 +0200\n\n[ci] use boost::process\n\nExplictly opt-out on win64, in case the default changes.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4a093579e1cb9c128ec6e0b11be54ded620dbf3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a093579e1cb9c128ec6e0b11be54ded620dbf3f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4a093579e1cb9c128ec6e0b11be54ded620dbf3f"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 13,
      "deletions": 13
    },
    "files": [
      {
        "sha": "53efa16a78d564133b47fa3056e0dc791eb8ab1b",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
        "patch": "@@ -99,7 +99,7 @@ jobs:\n #        QEMU_USER_CMD=\"\"\n \n     - stage: test\n-      name: 'Win64  [GOAL: deploy]  [unit tests, no gui, no functional tests]'\n+      name: 'Win64  [GOAL: deploy]  [unit tests, no gui, no boost::process, no functional tests]'\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_win64.sh\"\n "
      },
      {
        "sha": "2e445c126de9a5b1337a2155eb97eb1f07cea700",
        "filename": "ci/test/00_setup_env_arm.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_arm.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_arm.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_arm.sh?ref=f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
        "patch": "@@ -25,4 +25,4 @@ export RUN_FUNCTIONAL_TESTS=true\n export GOAL=\"install\"\n # -Wno-psabi is to disable ABI warnings: \"note: parameter passing for argument of type ... changed in GCC 7.1\"\n # This could be removed once the ABI change warning does not show up by default\n-export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi --enable-werror\"\n+export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi --enable-werror --with-boost-process\""
      },
      {
        "sha": "e58003ab19e33ae2da6454f95ba1ddd277b11b3d",
        "filename": "ci/test/00_setup_env_i686_centos.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_i686_centos.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_i686_centos.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_i686_centos.sh?ref=f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
        "patch": "@@ -11,5 +11,5 @@ export CONTAINER_NAME=ci_i686_centos_7\n export DOCKER_NAME_TAG=centos:7\n export DOCKER_PACKAGES=\"gcc-c++ glibc-devel.x86_64 libstdc++-devel.x86_64 glibc-devel.i686 libstdc++-devel.i686 ccache libtool make git python3 python36-zmq which patch lbzip2 dash\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-reduce-exports\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-reduce-exports --with-boost-process\"\n export CONFIG_SHELL=\"/bin/dash\""
      },
      {
        "sha": "84e1c17854bc0dd9b339b0313909457446f36919",
        "filename": "ci/test/00_setup_env_mac.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_mac.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_mac.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac.sh?ref=f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
        "patch": "@@ -13,4 +13,4 @@ export OSX_SDK=10.14\n export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false\n export GOAL=\"deploy\"\n-export BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\"\n+export BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror --with-boost-process\""
      },
      {
        "sha": "27367efbc29559193a5990b7cdecf272e96e3595",
        "filename": "ci/test/00_setup_env_mac_host.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_mac_host.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_mac_host.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac_host.sh?ref=f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
        "patch": "@@ -9,7 +9,7 @@ export LC_ALL=C.UTF-8\n export HOST=x86_64-apple-darwin16\n export PIP_PACKAGES=\"zmq\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\"\n+export BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror --with-boost-process\"\n export TEST_RUNNER_EXTRA=\"wallet_disable\"  # Only run wallet_disable as a smoke test, see https://github.com/bitcoin/bitcoin/pull/17240#issuecomment-546022121 why the other tests are disabled\n # Run without depends\n export NO_DEPENDS=1"
      },
      {
        "sha": "dbc9759f261cd2c55de46bfceb83a44113bd0dea",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
        "patch": "@@ -11,4 +11,4 @@ export PACKAGES=\"clang-8 llvm-8 python3-zmq qtbase5-dev qttools5-dev-tools libev\n # Use clang-8 instead of default clang (which is clang-6 on Bionic) to avoid spurious segfaults when running on ppc64le\n export NO_DEPENDS=1\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang-8 CXX=clang++-8\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang-8 CXX=clang++-8 --with-boost-process\""
      },
      {
        "sha": "41667561debe2990219cf76eba6d7cd2a9a7e351",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
        "patch": "@@ -14,4 +14,4 @@ export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false\n export RUN_FUZZ_TESTS=true\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=clang CXX=clang++\"\n+export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=clang CXX=clang++ --with-boost-process\""
      },
      {
        "sha": "7ab45939da10e14efa164683a36508c5922ab3b7",
        "filename": "ci/test/00_setup_env_native_multiprocess.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_native_multiprocess.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_native_multiprocess.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_multiprocess.sh?ref=f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
        "patch": "@@ -10,5 +10,5 @@ export CONTAINER_NAME=ci_native_multiprocess\n export PACKAGES=\"cmake python3\"\n export DEP_OPTS=\"MULTIPROCESS=1\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"\"\n+export BITCOIN_CONFIG=\"--with-boost-process\"\n export TEST_RUNNER_ENV=\"BITCOIND=bitcoin-node\""
      },
      {
        "sha": "eef75539a148d260c4bf089273a02c85c1ac9c1b",
        "filename": "ci/test/00_setup_env_native_nowallet.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_native_nowallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_native_nowallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_nowallet.sh?ref=f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
        "patch": "@@ -10,4 +10,4 @@ export CONTAINER_NAME=ci_native_nowallet\n export PACKAGES=\"python3-zmq\"\n export DEP_OPTS=\"NO_WALLET=1\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports --with-boost-process\""
      },
      {
        "sha": "631c7b6eca999ea50d834073fbc8c5b8b76418cd",
        "filename": "ci/test/00_setup_env_native_qt5.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_native_qt5.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_native_qt5.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_qt5.sh?ref=f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
        "patch": "@@ -14,4 +14,4 @@ export RUN_UNIT_TESTS_SEQUENTIAL=\"true\"\n export RUN_UNIT_TESTS=\"false\"\n export GOAL=\"install\"\n export PREVIOUS_RELEASES_TO_DOWNLOAD=\"v0.15.2 v0.16.3 v0.17.1 v0.18.1 v0.19.1\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-c++17 --enable-debug CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\"\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-c++17 --enable-debug CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\" --with-boost-process\""
      },
      {
        "sha": "2f3884252a01a846f5fab3f67498c7f2862cecca",
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
        "patch": "@@ -11,4 +11,4 @@ export DOCKER_NAME_TAG=ubuntu:20.04\n export PACKAGES=\"clang llvm libc++abi-dev libc++-dev python3-zmq\"\n export DEP_OPTS=\"CC=clang CXX='clang++ -stdlib=libc++'\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-gui=no CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=thread CC=clang CXX='clang++ -stdlib=libc++'\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=no CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=thread CC=clang CXX='clang++ -stdlib=libc++' --with-boost-process\""
      },
      {
        "sha": "fe330920d03c1fff8712758bc4ebc70e730af594",
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
        "patch": "@@ -22,4 +22,4 @@ export DOCKER_NAME_TAG=\"debian:buster\"\n export RUN_UNIT_TESTS=true\n export RUN_FUNCTIONAL_TESTS=true\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-reduce-exports --with-incompatible-bdb\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports --with-incompatible-bdb --with-boost-process\""
      },
      {
        "sha": "67c43d5645997cd28f8f59b00309b7e3ffa48699",
        "filename": "ci/test/00_setup_env_win64.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_win64.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8/ci/test/00_setup_env_win64.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_win64.sh?ref=f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
        "patch": "@@ -11,4 +11,4 @@ export HOST=x86_64-w64-mingw32\n export PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64\"\n export RUN_FUNCTIONAL_TESTS=false\n export GOAL=\"deploy\"\n-export BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests --without-boost-process\""
      }
    ]
  },
  {
    "sha": "48c57c754818948f28a318763e00d9e98bb17ce3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OGM1N2M3NTQ4MTg5NDhmMjhhMzE4NzYzZTAwZDllOThiYjE3Y2Uz",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-01-30T11:07:57Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T13:27:01Z"
      },
      "message": "[util] add runCommandParseJSON",
      "tree": {
        "sha": "4dc950eb46932b663455ca7b963c6dc947e80660",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4dc950eb46932b663455ca7b963c6dc947e80660"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/48c57c754818948f28a318763e00d9e98bb17ce3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7oyKUACgkQV/+b28ww\nEAkBkA//Vp7LVOkrxQGTQ8MTaJTkl6JsdNY3+3LP5/Ua9gHkMMdBzp4xKRiD1jTM\n5T9XaIdRJpFJCZAjayMQUUO1DaqXVhMGhvdzefS0FuEjK96RnYnoS3NDLcijphjh\n4rPR8yqYONQeNw9usefEZ0uh/j7y22JQ4BNgqlV52hUQ6mm7T/RkJ2hPqLWde1kt\nG/CDssCn0v53ATgQ0i/dy/DwrWNvmqq9+F5EpaYXngK4tzUsZqIN0h/YWHA5c/8O\n7RAHahWwo0/kJMWzlwwzAEHE6Rtp0oVgLyRDfw4U0//+xeImn3Rgu6xQZBZGtWBk\nWpueJXdJXdLw7+LfVPf4OziwmtMXPda+PvCJ2PxJvWwjzdHrrgm40LHRozFwk58Y\n/4EIgCmREsKwP+Qxk5dxGOC5dALqrVcURNjYYbb018OlYFwhbt3XIV2XiTZHcszz\nPMpBcrxq7C38+utNJkVzh5FuE3M8s00rSRtm+GqIoH5hptiXj4OiDHY472RVs0Od\nvavOol6pwFbWlv57WRKNUFmZ38LZcQOe/On+aI5aovxMVC629NwFuln8BLsFEUx9\nz48fyIjIsC4dPgRq499TmY8aOQI2h4PZC2IzhNZJyKfz0Z5Klj4eW1AbtwwU61r6\nZRQyfudp7S2K7kOBOdflj1fGZHzfwJ5N0pVrvgzTMOyArh0F88w=\n=67Zp\n-----END PGP SIGNATURE-----",
        "payload": "tree 4dc950eb46932b663455ca7b963c6dc947e80660\nparent f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8\nauthor Sjors Provoost <sjors@sprovoost.nl> 1580382477 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592314021 +0200\n\n[util] add runCommandParseJSON\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48c57c754818948f28a318763e00d9e98bb17ce3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/48c57c754818948f28a318763e00d9e98bb17ce3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48c57c754818948f28a318763e00d9e98bb17ce3/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f97f9e2bd4d84f40302690eb8df7c4ebe7f81bd8"
      }
    ],
    "stats": {
      "total": 109,
      "additions": 109,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5bfc87bdf4700ebe5f9f107127233d6f72ade8e5",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48c57c754818948f28a318763e00d9e98bb17ce3/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48c57c754818948f28a318763e00d9e98bb17ce3/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=48c57c754818948f28a318763e00d9e98bb17ce3",
        "patch": "@@ -239,6 +239,7 @@ BITCOIN_TESTS =\\\n   test/ref_tests.cpp \\\n   test/reverselock_tests.cpp \\\n   test/rpc_tests.cpp \\\n+  test/system_tests.cpp \\\n   test/sanity_tests.cpp \\\n   test/scheduler_tests.cpp \\\n   test/script_p2sh_tests.cpp \\"
      },
      {
        "sha": "b0d91437fd3e6504d07f6de8e1b8e1cdc4b18230",
        "filename": "src/test/system_tests.cpp",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48c57c754818948f28a318763e00d9e98bb17ce3/src/test/system_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48c57c754818948f28a318763e00d9e98bb17ce3/src/test/system_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/system_tests.cpp?ref=48c57c754818948f28a318763e00d9e98bb17ce3",
        "patch": "@@ -0,0 +1,59 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+#include <test/util/setup_common.h>\n+#include <util/system.h>\n+#include <univalue.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(system_tests, BasicTestingSetup)\n+\n+// At least one test is required (in case HAVE_BOOST_PROCESS is not defined).\n+// Workaround for https://github.com/bitcoin/bitcoin/issues/19128\n+BOOST_AUTO_TEST_CASE(dummy)\n+{\n+    BOOST_CHECK(true);\n+}\n+\n+#ifdef HAVE_BOOST_PROCESS\n+BOOST_AUTO_TEST_CASE(run_command)\n+{\n+    {\n+        const UniValue result = runCommandParseJSON(\"\");\n+        BOOST_CHECK(result.isNull());\n+    }\n+    {\n+#ifdef WIN32\n+        // Windows requires single quotes to prevent escaping double quotes from the JSON...\n+        const UniValue result = runCommandParseJSON(\"echo '{\\\"success\\\": true}'\");\n+#else\n+        // ... but Linux and macOS echo a single quote if it's used\n+        const UniValue result = runCommandParseJSON(\"echo \\\"{\\\"success\\\": true}\\\"\");\n+#endif\n+        BOOST_CHECK(result.isObject());\n+        const UniValue& success = find_value(result, \"success\");\n+        BOOST_CHECK(!success.isNull());\n+        BOOST_CHECK_EQUAL(success.getBool(), true);\n+    }\n+    {\n+        BOOST_REQUIRE_THROW(runCommandParseJSON(\"invalid_command\"), std::runtime_error); // Command failed\n+    }\n+    {\n+        BOOST_REQUIRE_THROW(runCommandParseJSON(\"echo \\\"{\\\"\"), std::runtime_error); // Unable to parse JSON\n+    }\n+    // Test std::in, except for Windows\n+#ifndef WIN32\n+    {\n+        const UniValue result = runCommandParseJSON(\"cat\", \"{\\\"success\\\": true}\");\n+        BOOST_CHECK(result.isObject());\n+        const UniValue& success = find_value(result, \"success\");\n+        BOOST_CHECK(!success.isNull());\n+        BOOST_CHECK_EQUAL(success.getBool(), true);\n+    }\n+#endif\n+}\n+#endif\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "900e08ce022569007d9ddffb4555cf368206f048",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48c57c754818948f28a318763e00d9e98bb17ce3/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48c57c754818948f28a318763e00d9e98bb17ce3/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=48c57c754818948f28a318763e00d9e98bb17ce3",
        "patch": "@@ -6,6 +6,10 @@\n #include <sync.h>\n #include <util/system.h>\n \n+#ifdef HAVE_BOOST_PROCESS\n+#include <boost/process.hpp>\n+#endif\n+\n #include <chainparamsbase.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n@@ -1079,6 +1083,39 @@ void runCommand(const std::string& strCommand)\n }\n #endif\n \n+#ifdef HAVE_BOOST_PROCESS\n+UniValue runCommandParseJSON(const std::string& str_command, const std::string& str_std_in)\n+{\n+    namespace bp = boost::process;\n+\n+    UniValue result_json;\n+    bp::opstream stdin_stream;\n+    bp::ipstream stdout_stream;\n+\n+    if (str_command.empty()) return UniValue::VNULL;\n+\n+    bp::child c(\n+        str_command,\n+        bp::std_out > stdout_stream,\n+        bp::std_in < stdin_stream\n+    );\n+    if (!str_std_in.empty()) {\n+        stdin_stream << str_std_in << std::endl;\n+    }\n+    stdin_stream.pipe().close();\n+\n+    std::string result;\n+    std::getline(stdout_stream, result);\n+\n+    c.wait();\n+    const int n_error = c.exit_code();\n+    if (n_error) throw std::runtime_error(strprintf(\"runCommandParseJSON error: process(%s) returned %d\\n\", str_command, n_error));\n+    if (!result_json.read(result)) throw std::runtime_error(\"Unable to parse JSON: \" + result);\n+\n+    return result_json;\n+}\n+#endif\n+\n void SetupEnvironment()\n {\n #ifdef HAVE_MALLOPT_ARENA_MAX"
      },
      {
        "sha": "8ae8f7113a41cbf25f1f8e99ff49763f4fbcd725",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48c57c754818948f28a318763e00d9e98bb17ce3/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48c57c754818948f28a318763e00d9e98bb17ce3/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=48c57c754818948f28a318763e00d9e98bb17ce3",
        "patch": "@@ -37,6 +37,8 @@\n \n #include <boost/thread/condition_variable.hpp> // for boost::thread_interrupted\n \n+class UniValue;\n+\n // Application startup time (used for uptime calculation)\n int64_t GetStartupTime();\n \n@@ -95,6 +97,16 @@ std::string ShellEscape(const std::string& arg);\n #if HAVE_SYSTEM\n void runCommand(const std::string& strCommand);\n #endif\n+#ifdef HAVE_BOOST_PROCESS\n+/**\n+ * Execute a command with returns JSON, and parse the result.\n+ *\n+ * @param str_command The command to execute, including any arguments\n+ * @param str_std_in string to pass to stdin\n+ * @return parsed JSON\n+ */\n+UniValue runCommandParseJSON(const std::string& str_command, const std::string& str_std_in=\"\");\n+#endif\n \n /**\n  * Most paths passed as configuration arguments are treated as relative to"
      }
    ]
  },
  {
    "sha": "fc46eb2202961fcb1fe763bb6a7b82f9a47c79fb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYzQ2ZWIyMjAyOTYxZmNiMWZlNzYzYmI2YTdiODJmOWE0N2M3OWZi",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-02-21T15:07:12Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T13:27:54Z"
      },
      "message": "[rpc] [DO NOT MERGE] sendmany: return PSBT for wallets without private keys\n\nTODO: replace with #16378 once its prerequisites are merged.\n\nIn addition we check to see if the PSBT is complete, in preperation for a ScriptPubKeyMan that can use an external signer.",
      "tree": {
        "sha": "1081551a97260c7ece9c541c9fdd8d04132c8a7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1081551a97260c7ece9c541c9fdd8d04132c8a7d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc46eb2202961fcb1fe763bb6a7b82f9a47c79fb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7oyNoACgkQV/+b28ww\nEAkmoRAAh6L65zTZF2NfAXdXxzAIpk1SvCtwl66lB6UGAMJm/lz2xZujeJoWINLu\naremJ1tPgQBDnOB86TXjZb65w7Tjj0NVNsxXRXTf/IX4UMjnvUiCovPEJlt+3oxe\nbtL8wZ3JwtV8z8Z+LhvAz5NS2T1kgRAT7OFTm2aOk6d+a8wlcUCgnjwMOm1UxiX8\nTNI9jOM1KEsYQhV2wA1LA5OqAieF6NqXRpB+H3KStnTDbizGpMzK89kKzbEUxtcz\np/QuuHt0l9paglX03/eZlgWwxkDvtCMWo0+SeQfs58W34a3M5Z5RAi4OUZRpSf+g\ndd5TWJeL5MBlzfLU/zIgldA694cfw7xBXmwyYsguy2BbiCg7e3/bk5HyskBJ1Zje\nG/bWhf57QMtCAHAubXRrQh68SrvzdUisC/3HhonSghoQYdQg7+eCEeXiYCvetQjX\nd1YSEOastT0ddeG/R26rN1BvuNZ3X0NkeH+ovsW6jD7QJGA74M2tyYPEBALbaZAM\n5HU6kQcuTSxWNYWITeTb/itCqOdyK+6lwWTcWrS+uBUR++xWJ734mtiyGsoH0kRv\nraCtndHI/moNdtobMKvbP5Ye9xD9p4h+8jt5iYWaZ63jCn/wM5/lXHKrt/Md5osp\n5LEnZxZS+HbiVQIw23QEhuDyFWtzKNglkQcP/xMxL14ioqMX2mo=\n=nOUp\n-----END PGP SIGNATURE-----",
        "payload": "tree 1081551a97260c7ece9c541c9fdd8d04132c8a7d\nparent 48c57c754818948f28a318763e00d9e98bb17ce3\nauthor Sjors Provoost <sjors@sprovoost.nl> 1582297632 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592314074 +0200\n\n[rpc] [DO NOT MERGE] sendmany: return PSBT for wallets without private keys\n\nTODO: replace with #16378 once its prerequisites are merged.\n\nIn addition we check to see if the PSBT is complete, in preperation for a ScriptPubKeyMan that can use an external signer.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc46eb2202961fcb1fe763bb6a7b82f9a47c79fb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fc46eb2202961fcb1fe763bb6a7b82f9a47c79fb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc46eb2202961fcb1fe763bb6a7b82f9a47c79fb/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "48c57c754818948f28a318763e00d9e98bb17ce3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48c57c754818948f28a318763e00d9e98bb17ce3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/48c57c754818948f28a318763e00d9e98bb17ce3"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 32,
      "deletions": 4
    },
    "files": [
      {
        "sha": "86d15dc1f1efa8cb11a6a3a2df1815f03ba25b0b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 4,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc46eb2202961fcb1fe763bb6a7b82f9a47c79fb/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc46eb2202961fcb1fe763bb6a7b82f9a47c79fb/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=fc46eb2202961fcb1fe763bb6a7b82f9a47c79fb",
        "patch": "@@ -881,11 +881,39 @@ static UniValue sendmany(const JSONRPCRequest& request)\n     int nChangePosRet = -1;\n     bilingual_str error;\n     CTransactionRef tx;\n-    bool fCreated = pwallet->CreateTransaction(vecSend, tx, nFeeRequired, nChangePosRet, error, coin_control);\n-    if (!fCreated)\n+    bool fCreated = pwallet->CreateTransaction(vecSend, tx, nFeeRequired, nChangePosRet, error, coin_control, !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS));\n+    if (!fCreated) {\n         throw JSONRPCError(RPC_WALLET_INSUFFICIENT_FUNDS, error.original);\n-    pwallet->CommitTransaction(tx, std::move(mapValue), {} /* orderForm */);\n-    return tx->GetHash().GetHex();\n+    }\n+    if (!pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n+        pwallet->CommitTransaction(tx, std::move(mapValue), {} /* orderForm */);\n+        return tx->GetHash().GetHex();\n+    } else {\n+        CMutableTransaction mtx(*tx);\n+        PartiallySignedTransaction psbtx(mtx);\n+        bool complete;\n+        pwallet->FillPSBT(psbtx, complete, SIGHASH_ALL, false, true); // Always fill without signing first\n+        const TransactionError err = pwallet->FillPSBT(psbtx, complete, SIGHASH_ALL, true, true);\n+        if (err != TransactionError::OK) {\n+            throw JSONRPCTransactionError(err);\n+        }\n+        complete = FinalizeAndExtractPSBT(psbtx, mtx);\n+\n+        if (complete) {\n+            tx = MakeTransactionRef(mtx);\n+            pwallet->CommitTransaction(tx, std::move(mapValue), {} /* orderForm */);\n+            return tx->GetHash().GetHex();\n+        } else {\n+            UniValue result(UniValue::VOBJ);\n+            CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n+            ssTx << psbtx;\n+            std::string result_str = EncodeBase64(ssTx.str());\n+            result.pushKV(\"psbt\", result_str);\n+            result.pushKV(\"complete\", complete);\n+            return result;\n+        }\n+\n+    }\n }\n \n static UniValue addmultisigaddress(const JSONRPCRequest& request)"
      }
    ]
  },
  {
    "sha": "edcf22fc0bb7595e7541f0702849b73a0cc0b018",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZGNmMjJmYzBiYjc1OTVlNzU0MWYwNzAyODQ5YjczYTBjYzBiMDE4",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-10-30T19:08:23Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T15:59:07Z"
      },
      "message": "configure: add --enable-external-signer\n\nThis prepares external signer support to be disabled by default.\nIt adds a configure option to enable this feature and to check\nif Boost::Process is present.\n\nIt can also be enabled using --with-boost-process\n\nThis also exposes ENABLE_EXTERNAL_SIGNER to the test suite via test/config.ini\n\nfixup! e192a9dedf1bc5dcddb928466eca9a93c83e5c91",
      "tree": {
        "sha": "d4b069ba43ad98672329f93abe6e0e5a43a929f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4b069ba43ad98672329f93abe6e0e5a43a929f2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/edcf22fc0bb7595e7541f0702849b73a0cc0b018",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o7EsACgkQV/+b28ww\nEAkgXxAAj7hV0mmHgMAYvLd3brleZTJjeO42Wh4lV6kXwsTGUm6+JzNKo+WrsafC\nNoubDNVTaWU7kNL5x7GlkGsVVv0K0FVgyMAfO354yq+O96lzan941wDLcJK0nZwx\naRvTDgRUF7AvaBubZE8SdpoWYYEJuYoMqY0jNWduMBfWbRlxTq1Hs7RR5stA27/+\nflqbVwMwlqbfyZE5NQfZIjCS8X55PuBeBCTCVwG5uOS4IFjA4GZ3+I6GCPkn+MyD\nJlEB26r3OZzFOBMokd3dUhH9smAq31w1fDT3HpOLh+PM8IaxHPj6TpoWHKyeVGfD\nyKrHytiLB6F2cJxJ0k9apy46poD3qz2HRgRQUiL9WfrnV6K4wD81unfTwXmGw5p4\n/ZhbfNrbI1frMOZKJLpargqubQUSVwbx6MKFhpzd2k3w6Ud+pg0nJitTXHqqYKPY\n7Nmj8xlVNrohIM4ohcw6AQkmitoTnVnfSPlGWusrWBSC0iBWo84izpH86C7Gp6iv\nlEww7/zzJgpFvl3PY53IORqHUYtgWYDwhw2C9lV3FRAt9mJMibo2l7AO97NiCetn\nU6OpbbblDQ2DRbI3JCEHaSpAcxrWTDm1gTMmz6Mu4PGuBnZFeXLEx3droLQP/p20\nQnzOlrwtClzjvG5SsGT0UKIXdod1AfokFkD23ma8SKhkLdoLke4=\n=P88o\n-----END PGP SIGNATURE-----",
        "payload": "tree d4b069ba43ad98672329f93abe6e0e5a43a929f2\nparent fc46eb2202961fcb1fe763bb6a7b82f9a47c79fb\nauthor Sjors Provoost <sjors@sprovoost.nl> 1572462503 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592323147 +0200\n\nconfigure: add --enable-external-signer\n\nThis prepares external signer support to be disabled by default.\nIt adds a configure option to enable this feature and to check\nif Boost::Process is present.\n\nIt can also be enabled using --with-boost-process\n\nThis also exposes ENABLE_EXTERNAL_SIGNER to the test suite via test/config.ini\n\nfixup! e192a9dedf1bc5dcddb928466eca9a93c83e5c91\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edcf22fc0bb7595e7541f0702849b73a0cc0b018",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/edcf22fc0bb7595e7541f0702849b73a0cc0b018",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edcf22fc0bb7595e7541f0702849b73a0cc0b018/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc46eb2202961fcb1fe763bb6a7b82f9a47c79fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc46eb2202961fcb1fe763bb6a7b82f9a47c79fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc46eb2202961fcb1fe763bb6a7b82f9a47c79fb"
      }
    ],
    "stats": {
      "total": 92,
      "additions": 67,
      "deletions": 25
    },
    "files": [
      {
        "sha": "bf183f5cc25f733b6587d353c1a8bb2d516d07ba",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 66,
        "deletions": 25,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/edcf22fc0bb7595e7541f0702849b73a0cc0b018/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/edcf22fc0bb7595e7541f0702849b73a0cc0b018/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=edcf22fc0bb7595e7541f0702849b73a0cc0b018",
        "patch": "@@ -136,6 +136,18 @@ AC_ARG_ENABLE([upnp-default],\n   [use_upnp_default=$enableval],\n   [use_upnp_default=no])\n \n+dnl Enable external signer support when opting in to boost process\n+if test x$with_boost_process = xyes; then\n+  use_external_signer_default=yes;\n+else\n+  use_external_signer_default=no;\n+fi\n+\n+AC_ARG_ENABLE([external-signer],\n+    [AS_HELP_STRING([--enable-external-signer],[compile external signer support (requires Boost::Process)])],\n+    [use_external_signer=$enableval],\n+    [use_external_signer=$use_external_signer_default])\n+\n AC_ARG_ENABLE(tests,\n     AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n     [use_tests=$enableval],\n@@ -1133,6 +1145,7 @@ if test \"x$enable_fuzz\" = \"xyes\"; then\n   bitcoin_enable_qt_dbus=no\n   enable_wallet=no\n   use_bench=no\n+  use_external_signer=no\n   use_upnp=no\n   use_zmq=no\n else\n@@ -1196,9 +1209,9 @@ AX_BOOST_SYSTEM\n AX_BOOST_FILESYSTEM\n AX_BOOST_THREAD\n \n-dnl Opt-in to boost-process\n-if test x$with_boost_process = xyes; then\n-  AX_BOOST_PROCESS\n+dnl Opt-in to boost-process, unless external signer support is requested\n+if test x$with_boost_process = xyes || test x$use_external_signer = xyes; then\n+    AX_BOOST_PROCESS\n fi\n \n dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n@@ -1543,6 +1556,32 @@ else\n   fi\n fi\n \n+dnl External signer support is optional. It requires Boost.Process which is only present in newer boost versions (>=1.64)\n+AC_MSG_CHECKING([whether to build with external signer support])\n+if test x$want_boost_process = xno; then\n+  if test x$use_external_signer = xyes; then\n+    AC_MSG_ERROR(\"External signer support requested but requires Boost.Pocess\")\n+  fi\n+  AC_MSG_RESULT(no)\n+  use_external_signer=no\n+elif test x$ax_cv_boost_process = xno; then\n+  if test x$use_external_signer = xyes; then\n+     AC_MSG_ERROR(\"External signer support requested but requires Boost.Pocess\")\n+  fi\n+  AC_MSG_RESULT(no)\n+  use_external_signer=no\n+else\n+  if test x$use_external_signer != xno; then\n+    AC_MSG_RESULT(yes)\n+    use_external_signer=yes\n+    AC_DEFINE_UNQUOTED([ENABLE_EXTERNAL_SIGNER],[$use_external_signer],[External signer support not compiled if undefined, otherwise value (0 or 1) determines default state])\n+  else\n+    AC_MSG_RESULT(no)\n+  fi\n+fi\n+\n+AM_CONDITIONAL([ENABLE_EXTERNAL_SIGNER], [test \"x$use_external_signer\" = \"xyes\"])\n+\n dnl these are only used when qt is enabled\n BUILD_TEST_QT=\"\"\n if test x$bitcoin_enable_qt != xno; then\n@@ -1672,6 +1711,7 @@ AC_SUBST(AVX2_CXXFLAGS)\n AC_SUBST(SHANI_CXXFLAGS)\n AC_SUBST(ARM_CRC_CXXFLAGS)\n AC_SUBST(LIBTOOL_APP_LDFLAGS)\n+AC_SUBST(ENABLE_EXTERNAL_SIGNER)\n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)\n AC_SUBST(BOOST_LIBS)\n@@ -1741,33 +1781,34 @@ esac\n \n echo\n echo \"Options used to compile and link:\"\n-echo \"  multiprocess  = $build_multiprocess\"\n-echo \"  with wallet   = $enable_wallet\"\n-echo \"  with gui / qt = $bitcoin_enable_qt\"\n+echo \"  multiprocess    = $build_multiprocess\"\n+echo \"  with wallet     = $enable_wallet\"\n+echo \"  with gui / qt   = $bitcoin_enable_qt\"\n if test x$bitcoin_enable_qt != xno; then\n-    echo \"    with qr     = $use_qr\"\n+    echo \"    with qr       = $use_qr\"\n fi\n-echo \"  with zmq      = $use_zmq\"\n-echo \"  with test     = $use_tests\"\n+echo \"  external signer = $use_external_signer\"\n+echo \"  with zmq        = $use_zmq\"\n+echo \"  with test       = $use_tests\"\n if test x$use_tests != xno; then\n     echo \"    with fuzz   = $enable_fuzz\"\n fi\n-echo \"  with bench    = $use_bench\"\n-echo \"  with upnp     = $use_upnp\"\n-echo \"  use asm       = $use_asm\"\n-echo \"  sanitizers    = $use_sanitizers\"\n-echo \"  debug enabled = $enable_debug\"\n-echo \"  gprof enabled = $enable_gprof\"\n-echo \"  werror        = $enable_werror\"\n+echo \"  with bench      = $use_bench\"\n+echo \"  with upnp       = $use_upnp\"\n+echo \"  use asm         = $use_asm\"\n+echo \"  sanitizers      = $use_sanitizers\"\n+echo \"  debug enabled   = $enable_debug\"\n+echo \"  gprof enabled   = $enable_gprof\"\n+echo \"  werror          = $enable_werror\"\n echo\n-echo \"  target os     = $TARGET_OS\"\n-echo \"  build os      = $build_os\"\n+echo \"  target os       = $TARGET_OS\"\n+echo \"  build os        = $build_os\"\n echo\n-echo \"  CC            = $CC\"\n-echo \"  CFLAGS        = $CFLAGS\"\n-echo \"  CPPFLAGS      = $DEBUG_CPPFLAGS $HARDENED_CPPFLAGS $CPPFLAGS\"\n-echo \"  CXX           = $CXX\"\n-echo \"  CXXFLAGS      = $DEBUG_CXXFLAGS $HARDENED_CXXFLAGS $WARN_CXXFLAGS $NOWARN_CXXFLAGS $ERROR_CXXFLAGS $GPROF_CXXFLAGS $CXXFLAGS\"\n-echo \"  LDFLAGS       = $PTHREAD_CFLAGS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS\"\n-echo \"  ARFLAGS       = $ARFLAGS\"\n+echo \"  CC              = $CC\"\n+echo \"  CFLAGS          = $CFLAGS\"\n+echo \"  CPPFLAGS        = $DEBUG_CPPFLAGS $HARDENED_CPPFLAGS $CPPFLAGS\"\n+echo \"  CXX             = $CXX\"\n+echo \"  CXXFLAGS        = $DEBUG_CXXFLAGS $HARDENED_CXXFLAGS $WARN_CXXFLAGS $NOWARN_CXXFLAGS $ERROR_CXXFLAGS $GPROF_CXXFLAGS $CXXFLAGS\"\n+echo \"  LDFLAGS         = $PTHREAD_CFLAGS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS\"\n+echo \"  ARFLAGS         = $ARFLAGS\"\n echo"
      },
      {
        "sha": "e7bf2c053b2f2f0f563617cf886158b44a582082",
        "filename": "test/config.ini.in",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/edcf22fc0bb7595e7541f0702849b73a0cc0b018/test/config.ini.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/edcf22fc0bb7595e7541f0702849b73a0cc0b018/test/config.ini.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/config.ini.in?ref=edcf22fc0bb7595e7541f0702849b73a0cc0b018",
        "patch": "@@ -21,3 +21,4 @@ RPCAUTH=@abs_top_srcdir@/share/rpcauth/rpcauth.py\n @BUILD_BITCOIND_TRUE@ENABLE_BITCOIND=true\n @ENABLE_FUZZ_TRUE@ENABLE_FUZZ=true\n @ENABLE_ZMQ_TRUE@ENABLE_ZMQ=true\n+@ENABLE_EXTERNAL_SIGNER_TRUE@ENABLE_EXTERNAL_SIGNER=true"
      }
    ]
  },
  {
    "sha": "1532fb3ac5f5b0d2f72f4f21be5e813a233625e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTMyZmIzYWM1ZjViMGQyZjcyZjRmMjFiZTVlODEzYTIzMzYyNWU5",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-03T09:03:46Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T15:59:07Z"
      },
      "message": "[build] msvc: define ENABLE_EXTERNAL_SIGNER",
      "tree": {
        "sha": "944f0638de346f1e87b9eef84ae9b79260559992",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/944f0638de346f1e87b9eef84ae9b79260559992"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1532fb3ac5f5b0d2f72f4f21be5e813a233625e9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o7EsACgkQV/+b28ww\nEAk91Q//UAPee5dxmhsD27exRnGi7KNGkKXZyvQ1sKJOg1zI4VcLNlpEeQ2a5jcl\nLSK39hL1C09yBJG1zddz34WHuaH1mWLfe6ZzZX9zIUZPif8nnikTpegS/eNoS2nR\nGT1hij4bAXeRhbmATd43ehCH0OkoBYVch6eTAvkrYTZA+fL5jv4XKuaX8wuzspXL\naplPh0/ltTVy/LkrZfh2EYh0CzQ67KmkxKvVaJ0hbegi80XEUEGr7AUiVdfEm3Xg\npVX7D+1B1CbtQhQC7HIlyKgO4vCbkCUNGZYXsNsCpoQ3scEMxsy5xlkHNbkltzFN\nCnrXVZqisgxJDaerGyirdmMkw8QW6YfyQ37DwMuFWwop+vC1QYlPdFkXAGZ2n+a7\nBNhK19U9vggWGz7rAy7CQYy8OsfYVxuDYpYNVkbIhF/FtQd8xk6/6t1UMXZtMw93\negtm5hCF3TNA7p2DlBToWshPANl6+zeTSFQ9z8yCwcRmgXiDOWTEliPaBSvQMQn/\nTZGnq5y4mK1ibufnnLZAGz508XMTFuudQiB/X9EGIEvzDMjxYZGiG1gooMK87ZTv\nJIOvHQOncZXe/iHNcsZp1IKNiu5z8gia6aoIcH5PGqjDEuM+LG8F/EklGSlGcliP\nEZuLtHrxUW9GswFkWhxsmUG+W9dL3BQoQQBGmhxJ/oD1hG/VmvI=\n=S2OM\n-----END PGP SIGNATURE-----",
        "payload": "tree 944f0638de346f1e87b9eef84ae9b79260559992\nparent edcf22fc0bb7595e7541f0702849b73a0cc0b018\nauthor Sjors Provoost <sjors@sprovoost.nl> 1572771826 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592323147 +0200\n\n[build] msvc: define ENABLE_EXTERNAL_SIGNER\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1532fb3ac5f5b0d2f72f4f21be5e813a233625e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1532fb3ac5f5b0d2f72f4f21be5e813a233625e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1532fb3ac5f5b0d2f72f4f21be5e813a233625e9/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "edcf22fc0bb7595e7541f0702849b73a0cc0b018",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edcf22fc0bb7595e7541f0702849b73a0cc0b018",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/edcf22fc0bb7595e7541f0702849b73a0cc0b018"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "826c249505cc2cb518d919a8f98bc49d9639a486",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1532fb3ac5f5b0d2f72f4f21be5e813a233625e9/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1532fb3ac5f5b0d2f72f4f21be5e813a233625e9/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=1532fb3ac5f5b0d2f72f4f21be5e813a233625e9",
        "patch": "@@ -50,6 +50,9 @@\n /* define if the Boost::Process library is available */\n #define HAVE_BOOST_PROCESS /**/\n \n+/* define if external signer support is enabled (requires Boost::Process) */\n+#define ENABLE_EXTERNAL_SIGNER 1 /**/\n+\n /* define if the Boost::System library is available */\n #define HAVE_BOOST_SYSTEM /**/\n "
      }
    ]
  },
  {
    "sha": "599c285abd7c6a4cf229c6d5181761da4c5e5686",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OTljMjg1YWJkN2M2YTRjZjIyOWM2ZDUxODE3NjFkYTRjNWU1Njg2",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-03T08:58:36Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T15:59:07Z"
      },
      "message": "[doc] include Doxygen comments for ENABLE_EXTERNAL_SIGNER",
      "tree": {
        "sha": "9d910e6bef74fddda7002810a1e8d617d6c0c203",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d910e6bef74fddda7002810a1e8d617d6c0c203"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/599c285abd7c6a4cf229c6d5181761da4c5e5686",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o7EsACgkQV/+b28ww\nEAmG7BAAioKAqtm649NpRX2bHxb0/48E7xOI3zd3BDQ8XvhApZtXei5mADULjZFZ\nadvIebjejjxPzmBEXuPfi2CFi0RpmLYr93dvA860RUfaFdGfQ3aA1Oiu9S5IUOAm\n5/bj+4AdXqqNwRkixTkJQmBrTG8yOkMu8LqRKB4wGjEJhXRs4TP/BLvm9MVh+PV+\nJ8rXwvdZctkLcrJrF8V2uabhlL43K58OYaJ3AuWHqE1YnF9tKSOA4geQs9Yj3LLA\n6+fKJQK1Hr6bmSMQ/FsemUaPweq8Z9FsgEq9bKHEkDjQfnkWPf/LCe1Td5OVAwBQ\ntsJYdFhkGpaeInVc+hSmSeL06F7msjlpaZ7Upa7eSNCWjSTQECLyGiE3dvJnFVWS\nuOkiS4cSyOIj4Ss1+P5umjcWsKBTwRkGeGTDkvypsgfcgUHoI9dMYynniSLUGZzo\nZeM2EgDa6QW2S0Qo0EUUSdDRKhCYfIZs4wKOfIlTMxg3Fz1V2lSsuKFxWJO7M/wa\n4LxQkZwRtlO4yJDEGyXKPZWNFxqTgqfneak7nrImMqBSVqYaCKxKlSAivgxJV2yC\nLwn3CGV+lOuSYI5gguiTwJeSHT+tfAMSw9fzasjcpqQo+6Aoh59CCm7wOvOzsOrR\nRlVN2RjnoAFSkQ31ynfavt8JWj1vQ0ozhs/1DO9KzujhdFKKi/E=\n=gqfS\n-----END PGP SIGNATURE-----",
        "payload": "tree 9d910e6bef74fddda7002810a1e8d617d6c0c203\nparent 1532fb3ac5f5b0d2f72f4f21be5e813a233625e9\nauthor Sjors Provoost <sjors@sprovoost.nl> 1572771516 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592323147 +0200\n\n[doc] include Doxygen comments for ENABLE_EXTERNAL_SIGNER\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/599c285abd7c6a4cf229c6d5181761da4c5e5686",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/599c285abd7c6a4cf229c6d5181761da4c5e5686",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/599c285abd7c6a4cf229c6d5181761da4c5e5686/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1532fb3ac5f5b0d2f72f4f21be5e813a233625e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1532fb3ac5f5b0d2f72f4f21be5e813a233625e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1532fb3ac5f5b0d2f72f4f21be5e813a233625e9"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a56528bd24a8ef9d588a1c7aec47e70a7ce04dfb",
        "filename": "doc/Doxyfile.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/599c285abd7c6a4cf229c6d5181761da4c5e5686/doc/Doxyfile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/599c285abd7c6a4cf229c6d5181761da4c5e5686/doc/Doxyfile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile.in?ref=599c285abd7c6a4cf229c6d5181761da4c5e5686",
        "patch": "@@ -2073,7 +2073,7 @@ INCLUDE_FILE_PATTERNS  =\n # recursively expanded use the := operator instead of the = operator.\n # This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n \n-PREDEFINED             = HAVE_BOOST_PROCESS\n+PREDEFINED             = HAVE_BOOST_PROCESS ENABLE_EXTERNAL_SIGNER\n \n # If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then this\n # tag can be used to specify a list of macro names that should be expanded. The"
      }
    ]
  },
  {
    "sha": "b66180c034ec47b86e30a1c13bf9731ff4ed1f7e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNjYxODBjMDM0ZWM0N2I4NmUzMGExYzEzYmY5NzMxZmY0ZWQxZjdl",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-13T17:59:16Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T15:59:07Z"
      },
      "message": "[test] framework: add skip_if_no_external_signer",
      "tree": {
        "sha": "ae72a2fdd675f32e76fe0463f3f362a6aacec04c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae72a2fdd675f32e76fe0463f3f362a6aacec04c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b66180c034ec47b86e30a1c13bf9731ff4ed1f7e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o7EsACgkQV/+b28ww\nEAkbexAAmNW58YqKlZzFTn44yHBgT9ezvUD0LIDHVkZLNQOELsWvH6wDW5PWUVbE\n+9CIldLof+TOdhd4YbMohhUsN5mKH8GzpD/Hib/a7gqKf/mfntrifUXDJ8mUHTFg\nZz7QvTU1r9K1lopGf3Rrf8M0BHPtrhgSrOAq6Hen0RicGueY6OKAqTo9ptbdrCsM\nDviheTVuP0b3T8NhlFzdloCD/CO7VzYD4dkhldUSuZdu6BeUiT+qBRCmW6gPWzOv\nw8nPwB5alyEYeQBt6CpEh8pZwD4f5mHrB0BJtuYq+V+OhoBgR9AakbtHUmv+1B0H\nOSIQxUjfLolciOkEgqhtNli81wIm7sw2FIamK5f80uvxAGB6GpKM6nmuAjNgEWox\nLo9cMTKDSoxjcQ1w1O9wwgMsIVofih0crUSTOi3Bnou2WQwesSaTtHfZQwfWdIw9\nVWL6Oqlhaon7sFA4F44QQKngCz2iFUGMvSCrcHJUsvEBj24Lci4Vl8rQ+2QuvdHp\n/W+//M9mDB9mRW22kdhNFqF4VEHqTlWzHPDFJzCIP8Cng4PUocowkU4yYEXo/0ey\nze+VKMVJ6ogo6ZwSbV8Oopt48znI127xYyXuNcV4XhHdjOGZHVkaypyXXNo+7k4o\nRAaUUhVBejJ2zS7YMBZIJoL9fZxnONCPWOSyKnTdPDMBvUPvn/w=\n=ix7g\n-----END PGP SIGNATURE-----",
        "payload": "tree ae72a2fdd675f32e76fe0463f3f362a6aacec04c\nparent 599c285abd7c6a4cf229c6d5181761da4c5e5686\nauthor Sjors Provoost <sjors@sprovoost.nl> 1550080756 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592323147 +0200\n\n[test] framework: add skip_if_no_external_signer\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b66180c034ec47b86e30a1c13bf9731ff4ed1f7e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b66180c034ec47b86e30a1c13bf9731ff4ed1f7e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b66180c034ec47b86e30a1c13bf9731ff4ed1f7e/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "599c285abd7c6a4cf229c6d5181761da4c5e5686",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/599c285abd7c6a4cf229c6d5181761da4c5e5686",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/599c285abd7c6a4cf229c6d5181761da4c5e5686"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c4b8b22d2e12165a104f0300d6b9848c048afd1d",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b66180c034ec47b86e30a1c13bf9731ff4ed1f7e/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b66180c034ec47b86e30a1c13bf9731ff4ed1f7e/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=b66180c034ec47b86e30a1c13bf9731ff4ed1f7e",
        "patch": "@@ -700,10 +700,19 @@ def has_previous_releases(self):\n                     self.options.previous_releases_path))\n         return self.options.prev_releases\n \n+    def skip_if_no_external_signer(self):\n+        \"\"\"Skip the running test if external signer support has not been compiled.\"\"\"\n+        if not self.is_external_signer_compiled():\n+            raise SkipTest(\"external signer support has not been compiled.\")\n+\n     def is_cli_compiled(self):\n         \"\"\"Checks whether bitcoin-cli was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"ENABLE_CLI\")\n \n+    def is_external_signer_compiled(self):\n+        \"\"\"Checks whether external signer support was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"ENABLE_EXTERNAL_SIGNER\")\n+\n     def is_wallet_compiled(self):\n         \"\"\"Checks whether the wallet module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"ENABLE_WALLET\")"
      }
    ]
  },
  {
    "sha": "267ee5adf97abb753c61cb2fdd5928a9b373597b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjdlZTVhZGY5N2FiYjc1M2M2MWNiMmZkZDU5MjhhOWIzNzM1OTdi",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-04-27T17:10:35Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T15:59:08Z"
      },
      "message": "[wallet] add -signer argument for external signer command\n\nCreate basic ExternalSigner class with contructor. A Signer(<cmd>)\nis added to CWallet on load if -signer=<cmd> is set.",
      "tree": {
        "sha": "6e755910a4b824c0a4a1a7b5f37947552701ee08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6e755910a4b824c0a4a1a7b5f37947552701ee08"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/267ee5adf97abb753c61cb2fdd5928a9b373597b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o7EwACgkQV/+b28ww\nEAnuBA/+KVcHDA6i8Uu9EhUE8AmVj4Ep4xOyNx8oGuAJwP+wxBredx573JyJjBRX\nh5lmB+uxn2n6QmSqrp6Kvd5SwJVhhtdwvhEyjrbkdtxl+MgLdODDFcmTRG/7KjcT\n5V7ZMag0WHwYc0tgk+4XLadUxfdozl7ipDSG8BVLBU2L1ehkbT/it/H4lZ0VV+tX\netLkPKO3KP+EsWZVxISjIzszV5GQDuvcQYI6XCVtlFBhIysxJGxzmF734yjljrss\niUvWBBUIxY/sfJ7kzs6PCztkTWtV7vq9MqrdC5cDkhtxmvvI7WDlES7OFBiuzbh8\npCoIjNr7SF7CjwDND3FeTbjs8zVpoey3YvA30SMHL/GTgX26UVgeiUDXaSyrQAbS\n5j7av7sEV4nuYpO31aKDPdUtqBeLC8rErOivnfiyy1tLXtpAMZkryumY3M09hmts\nR2k2cT7rc0P5VMX4++xCebQqDgrkRZEb2zrv+EfacOiRlZpH/eqilC7tVJLV9Imu\nQ1/rVjQKvtbnQPBYUoZ3R2RFT36DEAahJnune38uMCRsrgSiVv7Fvx1mp3hdx76g\nhXqB0WRPbqFbO27emfm/uhRX3MlIHMkGazj5+BPwPuP9RL0CvdxIG2Oyu1rJ2ldz\nD7RTQR0YOiq/mtmPhVAftMrI0hupyZ/AC6CR40/tu/VSsp1jRIc=\n=wo7/\n-----END PGP SIGNATURE-----",
        "payload": "tree 6e755910a4b824c0a4a1a7b5f37947552701ee08\nparent b66180c034ec47b86e30a1c13bf9731ff4ed1f7e\nauthor Sjors Provoost <sjors@sprovoost.nl> 1556385035 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592323148 +0200\n\n[wallet] add -signer argument for external signer command\n\nCreate basic ExternalSigner class with contructor. A Signer(<cmd>)\nis added to CWallet on load if -signer=<cmd> is set.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/267ee5adf97abb753c61cb2fdd5928a9b373597b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/267ee5adf97abb753c61cb2fdd5928a9b373597b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/267ee5adf97abb753c61cb2fdd5928a9b373597b/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b66180c034ec47b86e30a1c13bf9731ff4ed1f7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b66180c034ec47b86e30a1c13bf9731ff4ed1f7e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b66180c034ec47b86e30a1c13bf9731ff4ed1f7e"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 53,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ef3d66adb13c951d7d569883a056351ab0297b20",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/267ee5adf97abb753c61cb2fdd5928a9b373597b/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/267ee5adf97abb753c61cb2fdd5928a9b373597b/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=267ee5adf97abb753c61cb2fdd5928a9b373597b",
        "patch": "@@ -244,6 +244,7 @@ BITCOIN_CORE_H = \\\n   wallet/context.h \\\n   wallet/crypter.h \\\n   wallet/db.h \\\n+  wallet/externalsigner.h \\\n   wallet/feebumper.h \\\n   wallet/fees.h \\\n   wallet/ismine.h \\\n@@ -354,6 +355,7 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/context.cpp \\\n   wallet/crypter.cpp \\\n   wallet/db.cpp \\\n+  wallet/externalsigner.cpp \\\n   wallet/feebumper.cpp \\\n   wallet/fees.cpp \\\n   wallet/load.cpp \\"
      },
      {
        "sha": "57ff42a7c2a1484e120223886545a7ff52515f0f",
        "filename": "src/dummywallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/267ee5adf97abb753c61cb2fdd5928a9b373597b/src/dummywallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/267ee5adf97abb753c61cb2fdd5928a9b373597b/src/dummywallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dummywallet.cpp?ref=267ee5adf97abb753c61cb2fdd5928a9b373597b",
        "patch": "@@ -40,6 +40,9 @@ void DummyWalletInit::AddWalletOptions() const\n         \"-paytxfee=<amt>\",\n         \"-rescan\",\n         \"-salvagewallet\",\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+        \"-signer=<cmd>\",\n+#endif\n         \"-spendzeroconfchange\",\n         \"-txconfirmtarget=<n>\",\n         \"-upgradewallet\","
      },
      {
        "sha": "2f3c8eae96ba6e44e7c2c27bfa4ce7d6a49d1a28",
        "filename": "src/wallet/externalsigner.cpp",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/267ee5adf97abb753c61cb2fdd5928a9b373597b/src/wallet/externalsigner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/267ee5adf97abb753c61cb2fdd5928a9b373597b/src/wallet/externalsigner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/externalsigner.cpp?ref=267ee5adf97abb753c61cb2fdd5928a9b373597b",
        "patch": "@@ -0,0 +1,8 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <wallet/externalsigner.h>\n+#include <util/system.h>\n+\n+ExternalSigner::ExternalSigner(const std::string& command, const std::string& fingerprint): m_command(command), m_fingerprint(fingerprint) {}"
      },
      {
        "sha": "1fe533ec694cff95742f14a5715667d4149b8578",
        "filename": "src/wallet/externalsigner.h",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/267ee5adf97abb753c61cb2fdd5928a9b373597b/src/wallet/externalsigner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/267ee5adf97abb753c61cb2fdd5928a9b373597b/src/wallet/externalsigner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/externalsigner.h?ref=267ee5adf97abb753c61cb2fdd5928a9b373597b",
        "patch": "@@ -0,0 +1,34 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_EXTERNALSIGNER_H\n+#define BITCOIN_WALLET_EXTERNALSIGNER_H\n+\n+#include <stdexcept>\n+#include <string>\n+#include <univalue.h>\n+\n+class ExternalSignerException : public std::runtime_error {\n+public:\n+    using std::runtime_error::runtime_error;\n+};\n+\n+//! Enables interaction with an external signing device or service, such as a\n+//! a hardware wallet. See doc/external-signer.md\n+class ExternalSigner\n+{\n+private:\n+    //! The command which handles interaction with the external signer.\n+    std::string m_command;\n+\n+public:\n+    //! @param[in] command      the command which handles interaction with the external signer\n+    //! @param[in] fingerprint  master key fingerprint of the signer\n+    ExternalSigner(const std::string& command, const std::string& fingerprint);\n+\n+    //! Master key fingerprint of the signer\n+    std::string m_fingerprint;\n+};\n+\n+#endif // BITCOIN_WALLET_EXTERNALSIGNER_H"
      },
      {
        "sha": "e55eb7241464d74a600ee59ef2494ea13a41c48b",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/267ee5adf97abb753c61cb2fdd5928a9b373597b/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/267ee5adf97abb753c61cb2fdd5928a9b373597b/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=267ee5adf97abb753c61cb2fdd5928a9b373597b",
        "patch": "@@ -54,6 +54,9 @@ void WalletInit::AddWalletOptions() const\n     gArgs.AddArg(\"-paytxfee=<amt>\", strprintf(\"Fee (in %s/kB) to add to transactions you send (default: %s)\",\n                                                             CURRENCY_UNIT, FormatMoney(CFeeRate{DEFAULT_PAY_TX_FEE}.GetFeePerK())), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-rescan\", \"Rescan the block chain for missing wallet transactions on startup\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+    gArgs.AddArg(\"-signer=<cmd>\", \"External signing tool, see docs/external-signer.md\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n+#endif\n     gArgs.AddArg(\"-spendzeroconfchange\", strprintf(\"Spend unconfirmed change when sending transactions (default: %u)\", DEFAULT_SPEND_ZEROCONF_CHANGE), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-txconfirmtarget=<n>\", strprintf(\"If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)\", DEFAULT_TX_CONFIRM_TARGET), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-wallet=<path>\", \"Specify wallet database path. Can be specified multiple times to load multiple wallets. Path is interpreted relative to <walletdir> if it is not absolute, and will be created if it does not exist (as a directory containing a wallet.dat file and log files). For backwards compatibility this will also accept names of existing data files in <walletdir>.)\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::WALLET);"
      },
      {
        "sha": "c1f78ea2a31c3db0f2c27e3a722bc39a93a2ae6f",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/267ee5adf97abb753c61cb2fdd5928a9b373597b/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/267ee5adf97abb753c61cb2fdd5928a9b373597b/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=267ee5adf97abb753c61cb2fdd5928a9b373597b",
        "patch": "@@ -22,6 +22,7 @@\n #include <wallet/coinselection.h>\n #include <wallet/crypter.h>\n #include <wallet/scriptpubkeyman.h>\n+#include <wallet/externalsigner.h>\n #include <wallet/walletdb.h>\n #include <wallet/walletutil.h>\n \n@@ -90,7 +91,8 @@ constexpr CAmount DEFAULT_TRANSACTION_MAXFEE{COIN / 10};\n constexpr CAmount HIGH_TX_FEE_PER_KB{COIN / 100};\n //! -maxtxfee will warn if called with a higher fee than this amount (in satoshis)\n constexpr CAmount HIGH_MAX_TX_FEE{100 * HIGH_TX_FEE_PER_KB};\n-\n+//! -signer default\n+static const std::string DEFAULT_EXTERNAL_SIGNER = \"\";\n //! Pre-calculated constants for input size estimation in *virtual size*\n static constexpr size_t DUMMY_NESTED_P2WPKH_INPUT_SIZE = 91;\n "
      }
    ]
  },
  {
    "sha": "1357381b78c0b70e246d35076e3033625863c74d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzU3MzgxYjc4YzBiNzBlMjQ2ZDM1MDc2ZTMwMzM2MjU4NjNjNzRk",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-04-27T17:11:43Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T15:59:08Z"
      },
      "message": "[test] add external signer test\n\nIncludes a mock to mimick the HWI interace.",
      "tree": {
        "sha": "748450984b10aff4725f951eb6512381b1085823",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/748450984b10aff4725f951eb6512381b1085823"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1357381b78c0b70e246d35076e3033625863c74d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o7EwACgkQV/+b28ww\nEAn40g/7BcNnbNnzTJo5T2pndk2Mv9DdmhZGn70u3ftEsEEZwh9pVYvt5ECGZx2i\nceMECOdmUO/8vDnXsUn0koU0WN0Bvv/KaX+neSxgopv7HDydGC6og/FNzwcy/Mg2\nmfKBazrju6AzF86Qy/Txg75S6uv4wMwtVGAE138k4JqZOtipXQD6bZyWVzDJnXLW\n9rTR81fXxGmGQkYrUBMRmCNgwGN1YGf8rSSN3gWKB6AJxNmGnXVp3/o7k7xrA3MJ\nwH1R0M7atijH+nLr4a3//v811Z3HbFD29Q7Z1IS/vi41Cn2rQo4x/96UYKZ4bazY\nEUROOWgv+avJitXQKvum8x8GBiHvzur0FuyU7YDKjc+jd5z2bgAkOr9dJX6Gjkjd\nnp1+l5wiB27pMiPXk9AONUw5Mb/36N3VgwosvzTgOLWrkGFNGLYmlaQNg4Ts7SXq\npGoJBbbTHgDc8uVXJuI2T2GKHc/6wlvK5q4j5Dzg7amtcCYcpn2cHeTte127ycBN\nALOctMjSc53ibKQEKtKovb8Pzlq3/aVg4mYfp6E5HRJIbMrMb2BHihALz3y1yjFw\nq+L2fHz5f+8ifHZwL1tQ4oYBLPb6goVSg0sVaQ1AaOQVo/aTIebcE4z6ctQ+Z7Tj\n9gkQjn3+9teZGqpNlh4qINY4q98KK8SxfjfsxPUdEFtq/EMzX3s=\n=FqCC\n-----END PGP SIGNATURE-----",
        "payload": "tree 748450984b10aff4725f951eb6512381b1085823\nparent 267ee5adf97abb753c61cb2fdd5928a9b373597b\nauthor Sjors Provoost <sjors@sprovoost.nl> 1556385103 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592323148 +0200\n\n[test] add external signer test\n\nIncludes a mock to mimick the HWI interace.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1357381b78c0b70e246d35076e3033625863c74d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1357381b78c0b70e246d35076e3033625863c74d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1357381b78c0b70e246d35076e3033625863c74d/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "267ee5adf97abb753c61cb2fdd5928a9b373597b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/267ee5adf97abb753c61cb2fdd5928a9b373597b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/267ee5adf97abb753c61cb2fdd5928a9b373597b"
      }
    ],
    "stats": {
      "total": 86,
      "additions": 86,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5392905c6c57c200ff4d11ce768b372df43e8ecd",
        "filename": "test/functional/mocks/signer.py",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1357381b78c0b70e246d35076e3033625863c74d/test/functional/mocks/signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1357381b78c0b70e246d35076e3033625863c74d/test/functional/mocks/signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mocks/signer.py?ref=1357381b78c0b70e246d35076e3033625863c74d",
        "patch": "@@ -0,0 +1,32 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import os\n+import sys\n+import argparse\n+import json\n+\n+def perform_pre_checks():\n+    mock_result_path = os.path.join(os.getcwd(), \"mock_result\")\n+    if(os.path.isfile(mock_result_path)):\n+        f = open(mock_result_path, \"r\", encoding=\"utf8\")\n+        mock_result = f.read()\n+        f.close()\n+        if mock_result[0]:\n+            sys.stdout.write(mock_result[2:])\n+            sys.exit(int(mock_result[0]))\n+\n+parser = argparse.ArgumentParser(prog='./signer.py', description='External signer mock')\n+subparsers = parser.add_subparsers()\n+\n+if len(sys.argv) == 1:\n+  args = parser.parse_args(['-h'])\n+  exit()\n+\n+args = parser.parse_args()\n+\n+perform_pre_checks()\n+\n+args.func(args)"
      },
      {
        "sha": "50cf6db93d931d62e9cb68dc929782ef4a7b6479",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1357381b78c0b70e246d35076e3033625863c74d/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1357381b78c0b70e246d35076e3033625863c74d/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=1357381b78c0b70e246d35076e3033625863c74d",
        "patch": "@@ -103,6 +103,7 @@\n     'mempool_updatefromblock.py',\n     'wallet_dump.py',\n     'wallet_listtransactions.py',\n+    'wallet_signer.py',\n     # vv Tests less than 60s vv\n     'p2p_sendheaders.py',\n     'wallet_zapwallettxes.py',"
      },
      {
        "sha": "818aa7430763c9c73a74a75ee0dee87a783ae25f",
        "filename": "test/functional/wallet_signer.py",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1357381b78c0b70e246d35076e3033625863c74d/test/functional/wallet_signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1357381b78c0b70e246d35076e3033625863c74d/test/functional/wallet_signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_signer.py?ref=1357381b78c0b70e246d35076e3033625863c74d",
        "patch": "@@ -0,0 +1,53 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test external signer.\n+\n+Verify that a bitcoind node can use an external signer command\n+\"\"\"\n+import os\n+import platform\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+\n+class SignerTest(BitcoinTestFramework):\n+    def mock_signer_path(self):\n+        path = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'mocks', 'signer.py')\n+        if platform.system() == \"Windows\":\n+            return \"py \" + path\n+        else:\n+            return path\n+\n+    def set_test_params(self):\n+        self.num_nodes = 3\n+\n+        self.extra_args = [\n+            [],\n+            ['-signer=%s' % self.mock_signer_path()],\n+            ['-signer=%s' % \"fake.py\"],\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_external_signer()\n+\n+    def set_mock_result(self, node, res):\n+        f = open(os.path.join(node.cwd, \"mock_result\"), \"w\", encoding=\"utf8\")\n+        f.write(res)\n+        f.close()\n+\n+    def clear_mock_result(self, node):\n+        os.remove(os.path.join(node.cwd, \"mock_result\"))\n+\n+    def run_test(self):\n+        self.log.info('-signer=%s' % self.mock_signer_path())\n+        assert_equal(self.nodes[0].getbalance(), 1250)\n+\n+if __name__ == '__main__':\n+    SignerTest().main()"
      }
    ]
  },
  {
    "sha": "749bd05feb0701a9bf08436e449b0b9109637dc2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NDliZDA1ZmViMDcwMWE5YmYwODQzNmU0NDliMGI5MTA5NjM3ZGMy",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-04T15:55:31Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T15:59:08Z"
      },
      "message": "[wallet] add external_signer flag",
      "tree": {
        "sha": "a83e1900c60f876fb1e929ece9a112c65cb87de5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a83e1900c60f876fb1e929ece9a112c65cb87de5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/749bd05feb0701a9bf08436e449b0b9109637dc2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o7EwACgkQV/+b28ww\nEAlaABAAquCg3TFtWSVdjQirerOvqDVEyi3O+C13mGNS4v/BQQKjEx48rSN3VY1w\nDFOnGRImAD2Xp/uQgxS+tWmdguwU6w/m/DIbkL4s3MuL47aSHeCkLfUHGs/fVp0D\nRqMZ4SmpkB934+yzfd/vVMOzbWmHYT2vSVKrrfrONwq57i4JnrSqOtcZJfrpBKH1\n3LBj6L0qp04ZsMI8pniBvn4iedBY9ixfDAP/Ig6A08UAUVqLRSqiWnjlhlwt8wHw\n8tdmTShY2tP2iYCqwIA8RAHC2WreF/75dZKt0w3zW/AIEPQu8xTrlR70lN8eh2Xf\nhMCEnexLEheLrZt4NtEk+h3xjz2OiMBQONu+yCdJxaBfj7XT1uSIwR4tE1lA8GLn\nL37AhRPxbC5vMYmzn7cL+e0MUYOG9C6ODMvZB8SMeRmLOiG/jHyLtAoLUXTE29iP\nFvsZ+VoEontREZPLoOb4vuDcIfmINpcrk1NfB3+qTP8aEJzr7Ox3otvkZGwUAo5d\n3eRfkbDFPkyer9PfRd0N2EHeCptt1dQqKIgW4VPRhQkZfiPD4STu9rL3cn1jz7lp\nLBKAojnRLSyazGOX2U4XHwjiHn2PSnQ88m83ru+X1UbjzZW68NkL6D0FSnMRsC9l\n/EzV9Gm+NyGko/sif4/H3+PXaynzHOSgWZyveYbZ4S7TDvv9oF8=\n=TbQ+\n-----END PGP SIGNATURE-----",
        "payload": "tree a83e1900c60f876fb1e929ece9a112c65cb87de5\nparent 1357381b78c0b70e246d35076e3033625863c74d\nauthor Sjors Provoost <sjors@sprovoost.nl> 1564934131 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592323148 +0200\n\n[wallet] add external_signer flag\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/749bd05feb0701a9bf08436e449b0b9109637dc2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/749bd05feb0701a9bf08436e449b0b9109637dc2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/749bd05feb0701a9bf08436e449b0b9109637dc2/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1357381b78c0b70e246d35076e3033625863c74d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1357381b78c0b70e246d35076e3033625863c74d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1357381b78c0b70e246d35076e3033625863c74d"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 18,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6dbdf1bf90deb2e22d8b83f88e7db861d5398b16",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/749bd05feb0701a9bf08436e449b0b9109637dc2/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/749bd05feb0701a9bf08436e449b0b9109637dc2/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=749bd05feb0701a9bf08436e449b0b9109637dc2",
        "patch": "@@ -189,6 +189,18 @@ WalletCreationStatus CreateWallet(interfaces::Chain& chain, const SecureString&\n         return WalletCreationStatus::CREATION_FAILED;\n     }\n \n+    // Private keys must be disabled for an external signer wallet\n+    if ((wallet_creation_flags & WALLET_FLAG_EXTERNAL_SIGNER) && !(wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n+        error = Untranslated(\"Private keys must be disabled when using an external signer\");\n+        return WalletCreationStatus::CREATION_FAILED;\n+    }\n+\n+    // Descriptor support must be enabled for an external signer wallet\n+    if ((wallet_creation_flags & WALLET_FLAG_EXTERNAL_SIGNER) && !(wallet_creation_flags & WALLET_FLAG_DESCRIPTORS)) {\n+        error = Untranslated(\"Descriptor support must be enabled when using an external signer\");\n+        return WalletCreationStatus::CREATION_FAILED;\n+    }\n+\n     // Wallet::Verify will check if we're trying to create a wallet with a duplicate name.\n     if (!CWallet::Verify(chain, location, error, warnings)) {\n         error = Untranslated(\"Wallet file verification failed.\") + Untranslated(\" \") + error;"
      },
      {
        "sha": "fa19d09509631678727854113a7e9c558d88cc43",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/749bd05feb0701a9bf08436e449b0b9109637dc2/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/749bd05feb0701a9bf08436e449b0b9109637dc2/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=749bd05feb0701a9bf08436e449b0b9109637dc2",
        "patch": "@@ -115,7 +115,8 @@ static constexpr uint64_t KNOWN_WALLET_FLAGS =\n     |   WALLET_FLAG_BLANK_WALLET\n     |   WALLET_FLAG_KEY_ORIGIN_METADATA\n     |   WALLET_FLAG_DISABLE_PRIVATE_KEYS\n-    |   WALLET_FLAG_DESCRIPTORS;\n+    |   WALLET_FLAG_DESCRIPTORS\n+    |   WALLET_FLAG_EXTERNAL_SIGNER;\n \n static constexpr uint64_t MUTABLE_WALLET_FLAGS =\n         WALLET_FLAG_AVOID_REUSE;\n@@ -126,6 +127,7 @@ static const std::map<std::string,WalletFlags> WALLET_FLAG_MAP{\n     {\"key_origin_metadata\", WALLET_FLAG_KEY_ORIGIN_METADATA},\n     {\"disable_private_keys\", WALLET_FLAG_DISABLE_PRIVATE_KEYS},\n     {\"descriptor_wallet\", WALLET_FLAG_DESCRIPTORS},\n+    {\"external_signer\", WALLET_FLAG_EXTERNAL_SIGNER}\n };\n \n extern const std::map<uint64_t,std::string> WALLET_FLAG_CAVEATS;"
      },
      {
        "sha": "cc8d556a7130e8c23cce5d634f509bc253665eb1",
        "filename": "src/wallet/walletutil.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/749bd05feb0701a9bf08436e449b0b9109637dc2/src/wallet/walletutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/749bd05feb0701a9bf08436e449b0b9109637dc2/src/wallet/walletutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletutil.h?ref=749bd05feb0701a9bf08436e449b0b9109637dc2",
        "patch": "@@ -59,6 +59,9 @@ enum WalletFlags : uint64_t {\n \n     //! Indicate that this wallet supports DescriptorScriptPubKeyMan\n     WALLET_FLAG_DESCRIPTORS = (1ULL << 34),\n+\n+    //! Indicates that the wallet needs an external signer\n+    WALLET_FLAG_EXTERNAL_SIGNER = (1ULL << 35),\n };\n \n //! Get the path of the wallet directory."
      }
    ]
  },
  {
    "sha": "1be8ac458dd1fba96eecc16fc5df230d43fa2628",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYmU4YWM0NThkZDFmYmE5NmVlY2MxNmZjNWRmMjMwZDQzZmEyNjI4",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-02-19T15:40:00Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T15:59:08Z"
      },
      "message": "[wallet] add ExternalSignerScriptPubKeyMan",
      "tree": {
        "sha": "3a1764e7e720379d5c2bb34dd23d9f6b87d1675d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a1764e7e720379d5c2bb34dd23d9f6b87d1675d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1be8ac458dd1fba96eecc16fc5df230d43fa2628",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o7EwACgkQV/+b28ww\nEAn1jg/+NOHW6j1DV+Fdhe41BOBJ9hoGdfQmMoQBWyc/xkFIqJ1S/6YxCiAqi3YG\nUuowyboQH5MDNCCpuhdl72WondnL+lex8FrV8BPNXUTs5qLGrZy3cvqmGmEJMDDe\nD5OZae31jg09wFZriESje7rK856r4Jx+tLcXjeGzB7edZYaGX0HmrVnqVNv4Ybsd\nHPtPzzqVcyMP3uxk0tYqMxSqzgN+XNsOm2aMld6yH/uEzpuI11q0DpqApyp71SON\nTUOQ5Y9mv5i/dRH2h3q/x4xx9bl6zGSzUI3dSVHEQYMSknlQqJWmOtgS9xGBfjMv\nOp1geAkl1FlR9eGl8+m81AgiS4NjnIjNccq4ZuhqfJ1U3iKLvHcfxZ9q2fpJ2PyQ\n2aanPNYpGIEtW0dCvnDHylePVfNTXwzWFMcd89ZeRlcY8TDIsFCYIl6eKez06cyw\npMuKBzS/xVXl4HNHbIHmnSAysf3YjBkqhztUgcypTewDTOKRjNtsXm1T7a3LhC8H\nf0GSUPdlq/BawG2F/tW7JnNyHQ4MV3gbfV7qa6ODWPXlv+6/ZTtVCFVd/77GOnWa\netPmnVHvwF+PVhZc8hg3tCXl1OyWsRmefcfL6f2hO14MsMHqCuRfUN91wZsYl0Ay\niXJNAZaQexfzl33T92/7PjvI073GlHV3PMeVzpDd8EmuSwduL7Q=\n=EzIL\n-----END PGP SIGNATURE-----",
        "payload": "tree 3a1764e7e720379d5c2bb34dd23d9f6b87d1675d\nparent 749bd05feb0701a9bf08436e449b0b9109637dc2\nauthor Sjors Provoost <sjors@sprovoost.nl> 1582126800 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592323148 +0200\n\n[wallet] add ExternalSignerScriptPubKeyMan\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1be8ac458dd1fba96eecc16fc5df230d43fa2628",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1be8ac458dd1fba96eecc16fc5df230d43fa2628",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1be8ac458dd1fba96eecc16fc5df230d43fa2628/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "749bd05feb0701a9bf08436e449b0b9109637dc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/749bd05feb0701a9bf08436e449b0b9109637dc2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/749bd05feb0701a9bf08436e449b0b9109637dc2"
      }
    ],
    "stats": {
      "total": 79,
      "additions": 75,
      "deletions": 4
    },
    "files": [
      {
        "sha": "9990a6d9c2625dfe44534a0ba838d85a41a16d3b",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1be8ac458dd1fba96eecc16fc5df230d43fa2628/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1be8ac458dd1fba96eecc16fc5df230d43fa2628/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=1be8ac458dd1fba96eecc16fc5df230d43fa2628",
        "patch": "@@ -245,6 +245,7 @@ BITCOIN_CORE_H = \\\n   wallet/crypter.h \\\n   wallet/db.h \\\n   wallet/externalsigner.h \\\n+  wallet/external_signer_scriptpubkeyman.h \\\n   wallet/feebumper.h \\\n   wallet/fees.h \\\n   wallet/ismine.h \\\n@@ -355,6 +356,7 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/context.cpp \\\n   wallet/crypter.cpp \\\n   wallet/db.cpp \\\n+  wallet/external_signer_scriptpubkeyman.cpp \\\n   wallet/externalsigner.cpp \\\n   wallet/feebumper.cpp \\\n   wallet/fees.cpp \\"
      },
      {
        "sha": "65789e2169236ecc1a10bd2e9f703bd50a22c658",
        "filename": "src/wallet/external_signer_scriptpubkeyman.cpp",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1be8ac458dd1fba96eecc16fc5df230d43fa2628/src/wallet/external_signer_scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1be8ac458dd1fba96eecc16fc5df230d43fa2628/src/wallet/external_signer_scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/external_signer_scriptpubkeyman.cpp?ref=1be8ac458dd1fba96eecc16fc5df230d43fa2628",
        "patch": "@@ -0,0 +1,32 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparamsbase.h>\n+#include <wallet/externalsigner.h>\n+#include <wallet/external_signer_scriptpubkeyman.h>\n+\n+bool ExternalSignerScriptPubKeyMan::SetupDescriptor(std::unique_ptr<Descriptor> desc)\n+{\n+    LOCK(cs_desc_man);\n+    assert(m_storage.IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS));\n+    assert(m_storage.IsWalletFlagSet(WALLET_FLAG_EXTERNAL_SIGNER));\n+\n+    int64_t creation_time = GetTime();\n+\n+    // Make the descriptor\n+    WalletDescriptor w_desc(std::move(desc), creation_time, 0, 0, 0);\n+    m_wallet_descriptor = w_desc;\n+\n+    // Store the descriptor\n+    WalletBatch batch(m_storage.GetDatabase());\n+    if (!batch.WriteDescriptor(GetID(), m_wallet_descriptor)) {\n+        throw std::runtime_error(std::string(__func__) + \": writing descriptor failed\");\n+    }\n+\n+    // TopUp\n+    TopUp();\n+\n+    m_storage.UnsetBlankWalletFlag(batch);\n+    return true;\n+}"
      },
      {
        "sha": "9707eda120ea7e94e5e821fbd34d67905fef2005",
        "filename": "src/wallet/external_signer_scriptpubkeyman.h",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1be8ac458dd1fba96eecc16fc5df230d43fa2628/src/wallet/external_signer_scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1be8ac458dd1fba96eecc16fc5df230d43fa2628/src/wallet/external_signer_scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/external_signer_scriptpubkeyman.h?ref=1be8ac458dd1fba96eecc16fc5df230d43fa2628",
        "patch": "@@ -0,0 +1,26 @@\n+// Copyright (c) 2019-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_EXTERNAL_SIGNER_SCRIPTPUBKEYMAN_H\n+#define BITCOIN_WALLET_EXTERNAL_SIGNER_SCRIPTPUBKEYMAN_H\n+\n+#include <wallet/scriptpubkeyman.h>\n+\n+class ExternalSignerScriptPubKeyMan : public DescriptorScriptPubKeyMan\n+{\n+  public:\n+  ExternalSignerScriptPubKeyMan(WalletStorage& storage, WalletDescriptor& descriptor)\n+      :   DescriptorScriptPubKeyMan(storage, descriptor)\n+      {}\n+  ExternalSignerScriptPubKeyMan(WalletStorage& storage, bool internal)\n+      :   DescriptorScriptPubKeyMan(storage, internal)\n+      {}\n+\n+  /** Provide a descriptor at setup time\n+  * Returns false if already setup or setup fails, true if setup is successful\n+  */\n+  bool SetupDescriptor(std::unique_ptr<Descriptor>desc);\n+};\n+\n+#endif // BITCOIN_WALLET_EXTERNAL_SIGNER_SCRIPTPUBKEYMAN_H"
      },
      {
        "sha": "e7a6de6eb6f5742c7fd0bdae0a3a2210de808d87",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1be8ac458dd1fba96eecc16fc5df230d43fa2628/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1be8ac458dd1fba96eecc16fc5df230d43fa2628/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=1be8ac458dd1fba96eecc16fc5df230d43fa2628",
        "patch": "@@ -514,8 +514,6 @@ class LegacySigningProvider : public SigningProvider\n class DescriptorScriptPubKeyMan : public ScriptPubKeyMan\n {\n private:\n-    WalletDescriptor m_wallet_descriptor GUARDED_BY(cs_desc_man);\n-\n     using ScriptPubKeyMap = std::map<CScript, int32_t>; // Map of scripts to descriptor range index\n     using PubKeyMap = std::map<CPubKey, int32_t>; // Map of pubkeys involved in scripts to descriptor range index\n     using CryptedKeyMap = std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char>>>;\n@@ -544,6 +542,9 @@ class DescriptorScriptPubKeyMan : public ScriptPubKeyMan\n     // Fetch the SigningProvider for a given index and optionally include private keys. Called by the above functions.\n     std::unique_ptr<FlatSigningProvider> GetSigningProvider(int32_t index, bool include_private = false) const EXCLUSIVE_LOCKS_REQUIRED(cs_desc_man);\n \n+protected:\n+  WalletDescriptor m_wallet_descriptor GUARDED_BY(cs_desc_man);\n+\n public:\n     DescriptorScriptPubKeyMan(WalletStorage& storage, WalletDescriptor& descriptor)\n         :   ScriptPubKeyMan(storage),"
      },
      {
        "sha": "de6da6121be08caa8a4edf94e1e5d3e2b2ca3883",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1be8ac458dd1fba96eecc16fc5df230d43fa2628/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1be8ac458dd1fba96eecc16fc5df230d43fa2628/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=1be8ac458dd1fba96eecc16fc5df230d43fa2628",
        "patch": "@@ -32,6 +32,7 @@\n #include <util/translation.h>\n #include <wallet/coincontrol.h>\n #include <wallet/fees.h>\n+#include <wallet/external_signer_scriptpubkeyman.h>\n \n #include <algorithm>\n #include <assert.h>\n@@ -4366,8 +4367,17 @@ void CWallet::ConnectScriptPubKeyManNotifiers()\n \n void CWallet::LoadDescriptorScriptPubKeyMan(uint256 id, WalletDescriptor& desc)\n {\n-    auto spk_manager = std::unique_ptr<ScriptPubKeyMan>(new DescriptorScriptPubKeyMan(*this, desc));\n-    m_spk_managers[id] = std::move(spk_manager);\n+    if (IsWalletFlagSet(WALLET_FLAG_EXTERNAL_SIGNER)) {\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+        auto spk_manager = std::unique_ptr<ScriptPubKeyMan>(new ExternalSignerScriptPubKeyMan(*this, desc));\n+        m_spk_managers[id] = std::move(spk_manager);\n+#else\n+        throw std::runtime_error(std::string(__func__) + \": Wallets with external signers require Boost::System library.\");\n+#endif\n+    } else {\n+        auto spk_manager = std::unique_ptr<ScriptPubKeyMan>(new DescriptorScriptPubKeyMan(*this, desc));\n+        m_spk_managers[id] = std::move(spk_manager);\n+    }\n }\n \n void CWallet::SetupDescriptorScriptPubKeyMans()"
      }
    ]
  },
  {
    "sha": "a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNDY4ZjdhMzgyY2U0Y2YzMzE0MTM1ZTVjYjI5MWZlNGFkOWU2YmJl",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-15T11:54:29Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:23Z"
      },
      "message": "[rpc] add external signer RPC files",
      "tree": {
        "sha": "8831a5a7be3eb35c4a7dfa4c57afcf4d8225570a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8831a5a7be3eb35c4a7dfa4c57afcf4d8225570a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o82QACgkQV/+b28ww\nEAmvVA//Zgc64dbgs5vhclpor12C+kSZRJLylyvrYAtAVSNFUWJVGUZ8wYdAPl2F\nM+zSKPYLPw164bRkO2Bg2lrCudfx/OGbpqJK8ID5AP7ZahZDYglt6+OB/XkaAUxg\n0wQbMJSekUstcZENQKePjFWW1oSQlSAns4EQJeM7JGifPelhfaX6mMjN5EhxWlbl\nPk2ChgnsJkxFp1D3E30aW/2m1cVyQTxwFnmV6WtRsa8ZvAqMic9jPo/gCqPfLBkh\n4UiCSRwVhH2ul4eefUCbKooZS0M4bix/VHzyq1eMeuJ3ISYwE1F0lafm2eT5nB2k\ndq4Meuy08oJejxh4KHV3+XFcmCr7MKu1D7whehwC1ZCrZq6RceQnjBOeDhqNDjNx\nJ+FJMtm4feUzmwGxvwSSdSPsIMRIpE8pKHHBMP5YVxkywOQ8//CYHvSoWTrz26w9\njC2Ek7XHMHYg2EM05hTB2/5HYfNJxPkG3TisIHMbBnq45awDmHyASx9qw3ZKx/v6\nPoUzOZs7VucxHiUtq3KBX3tm/KkRKv9M3RdKym1/qOs7MZKv6BGZlUQk3ao/uslp\nbQvLmcXZ5+Bj6YhSbtY0VJ3KA1bC/5ntybdVdu+xYmpboLLRHKPlQoa9mHf6V5n9\nSw6bU9esc8I/KOHNfZ87zzRT5JdbtlWPhlpBktgzVsuzoGJ76h0=\n=Tucx\n-----END PGP SIGNATURE-----",
        "payload": "tree 8831a5a7be3eb35c4a7dfa4c57afcf4d8225570a\nparent 1be8ac458dd1fba96eecc16fc5df230d43fa2628\nauthor Sjors Provoost <sjors@sprovoost.nl> 1550231669 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324963 +0200\n\n[rpc] add external signer RPC files\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1be8ac458dd1fba96eecc16fc5df230d43fa2628",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1be8ac458dd1fba96eecc16fc5df230d43fa2628",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1be8ac458dd1fba96eecc16fc5df230d43fa2628"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 73,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c9c4c65aacd30b107deff7ca08ef9275f1452fb0",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe",
        "patch": "@@ -250,6 +250,7 @@ BITCOIN_CORE_H = \\\n   wallet/fees.h \\\n   wallet/ismine.h \\\n   wallet/load.h \\\n+  wallet/rpcsigner.h \\\n   wallet/rpcwallet.h \\\n   wallet/salvage.h \\\n   wallet/scriptpubkeyman.h \\\n@@ -362,6 +363,7 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/fees.cpp \\\n   wallet/load.cpp \\\n   wallet/rpcdump.cpp \\\n+  wallet/rpcsigner.cpp \\\n   wallet/rpcwallet.cpp \\\n   wallet/salvage.cpp \\\n   wallet/scriptpubkeyman.cpp \\"
      },
      {
        "sha": "742f88fa22509db6a80a7d8b71ae9668742f34ec",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe",
        "patch": "@@ -23,6 +23,7 @@\n #include <wallet/fees.h>\n #include <wallet/ismine.h>\n #include <wallet/load.h>\n+#include <wallet/rpcsigner.h>\n #include <wallet/rpcwallet.h>\n #include <wallet/wallet.h>\n \n@@ -496,6 +497,15 @@ class WalletClientImpl : public ChainClient\n             }, command.argNames, command.unique_id);\n             m_rpc_handlers.emplace_back(m_context.chain->handleRpc(m_rpc_commands.back()));\n         }\n+\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+        for (const CRPCCommand& command : GetSignerRPCCommands()) {\n+            m_rpc_commands.emplace_back(command.category, command.name, [this, &command](const JSONRPCRequest& request, UniValue& result, bool last_handler) {\n+                return command.actor({request, m_context}, result, last_handler);\n+            }, command.argNames, command.unique_id);\n+            m_rpc_handlers.emplace_back(m_context.chain->handleRpc(m_rpc_commands.back()));\n+        }\n+#endif\n     }\n     bool verify() override { return VerifyWallets(*m_context.chain, m_wallet_filenames); }\n     bool load() override { return LoadWallets(*m_context.chain, m_wallet_filenames); }"
      },
      {
        "sha": "d5e05f57e991e0885abd84e3f7c217f7d10056f4",
        "filename": "src/wallet/rpcsigner.cpp",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe/src/wallet/rpcsigner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe/src/wallet/rpcsigner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcsigner.cpp?ref=a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe",
        "patch": "@@ -0,0 +1,31 @@\n+// Copyright (c) 2018-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <rpc/server.h>\n+#include <util/strencodings.h>\n+#include <wallet/rpcsigner.h>\n+#include <wallet/wallet.h>\n+\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+\n+// CRPCCommand table won't compile with an empty array\n+static UniValue dummy(const JSONRPCRequest& request) {\n+    return NullUniValue;\n+}\n+\n+\n+Span<const CRPCCommand> GetSignerRPCCommands()\n+{\n+// clang-format off\n+static const CRPCCommand commands[] =\n+{ //  category              name                                actor (function)                argNames\n+    //  --------------------- ------------------------          -----------------------         ----------\n+    { \"signer\",    \"dummy\",               &dummy,            {} },\n+};\n+// clang-format on\n+    return MakeSpan(commands);\n+}\n+\n+\n+#endif // ENABLE_EXTERNAL_SIGNER"
      },
      {
        "sha": "7b5c735d0767d77ec4af13a29539b8dc7878946a",
        "filename": "src/wallet/rpcsigner.h",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe/src/wallet/rpcsigner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe/src/wallet/rpcsigner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcsigner.h?ref=a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe",
        "patch": "@@ -0,0 +1,25 @@\n+// Copyright (c) 2018-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_RPCSIGNER_H\n+#define BITCOIN_WALLET_RPCSIGNER_H\n+\n+#include <span.h>\n+#include <util/system.h>\n+#include <vector>\n+\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+\n+class CRPCCommand;\n+\n+namespace interfaces {\n+class Chain;\n+class Handler;\n+}\n+\n+Span<const CRPCCommand> GetSignerRPCCommands();\n+\n+#endif // BOOST_VERSION\n+\n+#endif //BITCOIN_WALLET_RPCSIGNER_H"
      },
      {
        "sha": "fd349bf88ff69b77a19a435cb23d60698f0ec85a",
        "filename": "test/functional/rpc_help.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe/test/functional/rpc_help.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe/test/functional/rpc_help.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_help.py?ref=a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe",
        "patch": "@@ -41,10 +41,13 @@ def test_categories(self):\n         if self.is_wallet_compiled():\n             components.append('Wallet')\n \n+        if self.is_external_signer_compiled():\n+            components.append('Signer')\n+\n         if self.is_zmq_compiled():\n             components.append('Zmq')\n \n-        assert_equal(titles, components)\n+        assert_equal(titles, sorted(components))\n \n     def dump_help(self):\n         dump_dir = os.path.join(self.options.tmpdir, 'rpc_help_dump')"
      },
      {
        "sha": "d772db4eeae54fb9f2bf988d0d81fd8c922c545f",
        "filename": "test/lint/check-rpc-mappings.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe/test/lint/check-rpc-mappings.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe/test/lint/check-rpc-mappings.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/check-rpc-mappings.py?ref=a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe",
        "patch": "@@ -17,6 +17,7 @@\n     \"src/rpc/misc.cpp\",\n     \"src/rpc/net.cpp\",\n     \"src/rpc/rawtransaction.cpp\",\n+    \"src/wallet/rpcsigner.cpp\",\n     \"src/wallet/rpcwallet.cpp\",\n ]\n # Source file (relative to root) containing conversion mapping"
      }
    ]
  },
  {
    "sha": "dd34019b8e3a1b1731b8d9bb5e5af49259d8c929",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZDM0MDE5YjhlM2ExYjE3MzFiOGQ5YmI1ZTVhZjQ5MjU5ZDhjOTI5",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-15T11:54:29Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:24Z"
      },
      "message": "[rpc] signer: add enumeratesigners to list external signers",
      "tree": {
        "sha": "c8b3fa5790bdd9df3a5bec76708b7cf4027750e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c8b3fa5790bdd9df3a5bec76708b7cf4027750e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd34019b8e3a1b1731b8d9bb5e5af49259d8c929",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o82QACgkQV/+b28ww\nEAnGghAAllaZF+umneVqw1zs+oLKxjh5FY/0py2jMdjOhhaxMwHbECZ4AaGg2CIv\nEYBnEz0UPlC/27tbtvygOLCHmEsxKMM1GXy1HjYy2BW2Bgmt1q11ceWK1qex+TZB\npaA5cHxKewXrqhJVeftem21DxXE3kq/C62Ct9Xc1fDSrf9IUxt/rjBCAn4iiCeiw\n9pX851kxkjQb9DfqsZ4OZLezjdFSAE8FPU1FIE6vCC2GckZeOHy4h+LfSfAOfdiK\nHDqNqOGARmoEzPafeI2vMY0SjdIulrPyWPGH43aoMQM348hQEC3r/ydLab9dFHrj\nYJC/qPMJ5cPE3qGU33MDRc63DPTqk5Vq9RL5fDP/tabOCYffRyfR2bhSpZnzV4Su\n8OtMUjUulyJB9XiFCvLOv+UgEMpIPjDVEV8/IQaBJfFbl8yN6EjL4lETmrrfJaO9\nNUqUWs/4sYP+tyC+BaDvvZRxQeyHexzLa2Qoj6wB2ckWEBxi+y8eQBiF5/+dbq7z\nZXz1pDJ5RHwmT93hgq2g7Ezy9tdO1ZZGdSmSY2AjKGptrjs9T5u0tn2bQBMtkv27\nxtP7W/X+rcvIrE2tu2uvGc1EY7L0+qwN/o82O1YWjXr8HGpO6JxjkFiDERoGSo/g\nyd5fYO5eyL7S4U7AtBhmlws9JkEb3SBjUGOLLhCDZ7g7INc8+QY=\n=TRiF\n-----END PGP SIGNATURE-----",
        "payload": "tree c8b3fa5790bdd9df3a5bec76708b7cf4027750e9\nparent a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe\nauthor Sjors Provoost <sjors@sprovoost.nl> 1550231669 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324964 +0200\n\n[rpc] signer: add enumeratesigners to list external signers\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd34019b8e3a1b1731b8d9bb5e5af49259d8c929",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dd34019b8e3a1b1731b8d9bb5e5af49259d8c929",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd34019b8e3a1b1731b8d9bb5e5af49259d8c929/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a468f7a382ce4cf3314135e5cb291fe4ad9e6bbe"
      }
    ],
    "stats": {
      "total": 160,
      "additions": 153,
      "deletions": 7
    },
    "files": [
      {
        "sha": "fd5e10cbf57a247d6e11044ef3b1f4e6f513cba2",
        "filename": "src/wallet/externalsigner.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 2,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd34019b8e3a1b1731b8d9bb5e5af49259d8c929/src/wallet/externalsigner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd34019b8e3a1b1731b8d9bb5e5af49259d8c929/src/wallet/externalsigner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/externalsigner.cpp?ref=dd34019b8e3a1b1731b8d9bb5e5af49259d8c929",
        "patch": "@@ -3,6 +3,50 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <wallet/externalsigner.h>\n-#include <util/system.h>\n \n-ExternalSigner::ExternalSigner(const std::string& command, const std::string& fingerprint): m_command(command), m_fingerprint(fingerprint) {}\n+ExternalSigner::ExternalSigner(const std::string& command, const std::string& fingerprint, bool mainnet, std::string name): m_command(command), m_fingerprint(fingerprint), m_mainnet(mainnet), m_name(name) {}\n+\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+\n+bool ExternalSigner::Enumerate(const std::string& command, std::vector<ExternalSigner>& signers, bool mainnet, bool ignore_errors)\n+{\n+    // Call <command> enumerate\n+    const UniValue result = runCommandParseJSON(command + \" enumerate\");\n+    if (!result.isArray()) {\n+        if (ignore_errors) return false;\n+        throw ExternalSignerException(strprintf(\"'%s' received invalid response, expected array of signers\", command));\n+    }\n+    for (UniValue signer : result.getValues()) {\n+        // Check for error\n+        const UniValue& error = find_value(signer, \"error\");\n+        if (!error.isNull()) {\n+            if (ignore_errors) return false;\n+            if (!error.isStr()) {\n+                throw ExternalSignerException(strprintf(\"'%s' error\", command));\n+            }\n+            throw ExternalSignerException(strprintf(\"'%s' error: %s\", command, error.getValStr()));\n+        }\n+        // Check if fingerprint is present\n+        const UniValue& fingerprint = find_value(signer, \"fingerprint\");\n+        if (fingerprint.isNull()) {\n+            if (ignore_errors) return false;\n+            throw ExternalSignerException(strprintf(\"'%s' received invalid response, missing signer fingerprint\", command));\n+        }\n+        std::string fingerprintStr = fingerprint.get_str();\n+        // Skip duplicate signer\n+        bool duplicate = false;\n+        for (ExternalSigner signer : signers) {\n+            if (signer.m_fingerprint.compare(fingerprintStr) == 0) duplicate = true;\n+        }\n+        if (duplicate) break;\n+        std::string name = \"\";\n+        const UniValue& model_field = find_value(signer, \"model\");\n+        if (model_field.isStr() && model_field.getValStr() != \"\") {\n+            name += model_field.getValStr();\n+        }\n+        signers.push_back(ExternalSigner(command, fingerprintStr, mainnet, name));\n+    }\n+    return true;\n+}\n+\n+#endif"
      },
      {
        "sha": "55d6904549d0c29ddfef9a84c1cab83141a77af7",
        "filename": "src/wallet/externalsigner.h",
        "status": "modified",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd34019b8e3a1b1731b8d9bb5e5af49259d8c929/src/wallet/externalsigner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd34019b8e3a1b1731b8d9bb5e5af49259d8c929/src/wallet/externalsigner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/externalsigner.h?ref=dd34019b8e3a1b1731b8d9bb5e5af49259d8c929",
        "patch": "@@ -8,6 +8,7 @@\n #include <stdexcept>\n #include <string>\n #include <univalue.h>\n+#include <util/system.h>\n \n class ExternalSignerException : public std::runtime_error {\n public:\n@@ -25,10 +26,27 @@ class ExternalSigner\n public:\n     //! @param[in] command      the command which handles interaction with the external signer\n     //! @param[in] fingerprint  master key fingerprint of the signer\n-    ExternalSigner(const std::string& command, const std::string& fingerprint);\n+    //! @param[in] mainnet      Bitcoin mainnet or testnet\n+    ExternalSigner(const std::string& command, const std::string& fingerprint, bool mainnet, std::string name);\n \n     //! Master key fingerprint of the signer\n     std::string m_fingerprint;\n+\n+    //! Bitcoin mainnet or testnet\n+    bool m_mainnet;\n+\n+    //! Name of signer\n+    std::string m_name;\n+\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+    //! Obtain a list of signers. Calls `<command> enumerate`.\n+    //! @param[in]              command the command which handles interaction with the external signer\n+    //! @param[in,out] signers  vector to which new signers (with a unique master key fingerprint) are added\n+    //! @param mainnet          Bitcoin mainnet or testnet\n+    //! @param[out] success     Boolean\n+    static bool Enumerate(const std::string& command, std::vector<ExternalSigner>& signers, bool mainnet = true, bool ignore_errors = false);\n+\n+#endif\n };\n \n #endif // BITCOIN_WALLET_EXTERNALSIGNER_H"
      },
      {
        "sha": "a32f667e0a2fe2e4cf1bb349806a0acdedb21139",
        "filename": "src/wallet/rpcsigner.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 4,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd34019b8e3a1b1731b8d9bb5e5af49259d8c929/src/wallet/rpcsigner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd34019b8e3a1b1731b8d9bb5e5af49259d8c929/src/wallet/rpcsigner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcsigner.cpp?ref=dd34019b8e3a1b1731b8d9bb5e5af49259d8c929",
        "patch": "@@ -2,26 +2,73 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <chainparamsbase.h>\n #include <rpc/server.h>\n+#include <rpc/util.h>\n #include <util/strencodings.h>\n #include <wallet/rpcsigner.h>\n+#include <wallet/rpcwallet.h>\n #include <wallet/wallet.h>\n \n #ifdef ENABLE_EXTERNAL_SIGNER\n \n-// CRPCCommand table won't compile with an empty array\n-static UniValue dummy(const JSONRPCRequest& request) {\n-    return NullUniValue;\n+static UniValue enumeratesigners(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() != 0) {\n+        throw std::runtime_error(\n+            RPCHelpMan{\"enumeratesigners\\n\",\n+                \"Returns a list of external signers from -signer.\\n\",\n+                {},\n+                RPCResult{\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::ARR, \"signers\", /* optional */ false, \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"masterkeyfingerprint\", \"Master key fingerprint\"},\n+                            {RPCResult::Type::STR, \"name\", \"Device name\"},\n+                        },\n+                        }\n+                    }\n+                },\n+                RPCExamples{\"\"}\n+            }.ToString()\n+        );\n+    }\n+\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    if (!wallet) return NullUniValue;\n+\n+    const std::string command = gArgs.GetArg(\"-signer\", DEFAULT_EXTERNAL_SIGNER);\n+    if (command == \"\") throw JSONRPCError(RPC_WALLET_ERROR, \"Error: restart bitcoind with -signer=<cmd>\");\n+    std::string chain = gArgs.GetChainName();\n+    const bool mainnet = chain == CBaseChainParams::MAIN;\n+    UniValue signers_res = UniValue::VARR;\n+    try {\n+        std::vector<ExternalSigner> signers;\n+        ExternalSigner::Enumerate(command, signers, mainnet);\n+        for (ExternalSigner signer : signers) {\n+            UniValue signer_res = UniValue::VOBJ;\n+            signer_res.pushKV(\"fingerprint\", signer.m_fingerprint);\n+            signer_res.pushKV(\"name\", signer.m_name);\n+            signers_res.push_back(signer_res);\n+        }\n+    } catch (const ExternalSignerException& e) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, e.what());\n+    }\n+    UniValue result(UniValue::VOBJ);\n+    result.pushKV(\"signers\", signers_res);\n+    return result;\n }\n \n \n Span<const CRPCCommand> GetSignerRPCCommands()\n {\n+\n // clang-format off\n static const CRPCCommand commands[] =\n { //  category              name                                actor (function)                argNames\n     //  --------------------- ------------------------          -----------------------         ----------\n-    { \"signer\",    \"dummy\",               &dummy,            {} },\n+    { \"signer\",             \"enumeratesigners\",                 &enumeratesigners,              {} },\n };\n // clang-format on\n     return MakeSpan(commands);"
      },
      {
        "sha": "9f3a9b3dc438ade9185a47dc83071f7cc9ad19d9",
        "filename": "test/functional/mocks/signer.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd34019b8e3a1b1731b8d9bb5e5af49259d8c929/test/functional/mocks/signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd34019b8e3a1b1731b8d9bb5e5af49259d8c929/test/functional/mocks/signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mocks/signer.py?ref=dd34019b8e3a1b1731b8d9bb5e5af49259d8c929",
        "patch": "@@ -18,9 +18,15 @@ def perform_pre_checks():\n             sys.stdout.write(mock_result[2:])\n             sys.exit(int(mock_result[0]))\n \n+def enumerate(args):\n+  sys.stdout.write(json.dumps([{\"fingerprint\": \"00000001\", \"type\": \"trezor\", \"model\": \"trezor_t\"}, {\"fingerprint\": \"00000002\"}]))\n+\n parser = argparse.ArgumentParser(prog='./signer.py', description='External signer mock')\n subparsers = parser.add_subparsers()\n \n+parser_enumerate = subparsers.add_parser('enumerate', help='list available signers')\n+parser_enumerate.set_defaults(func=enumerate)\n+\n if len(sys.argv) == 1:\n   args = parser.parse_args(['-h'])\n   exit()"
      },
      {
        "sha": "4e80b7621b1eaa619a00b0134513258c7f5afe84",
        "filename": "test/functional/wallet_signer.py",
        "status": "modified",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd34019b8e3a1b1731b8d9bb5e5af49259d8c929/test/functional/wallet_signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd34019b8e3a1b1731b8d9bb5e5af49259d8c929/test/functional/wallet_signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_signer.py?ref=dd34019b8e3a1b1731b8d9bb5e5af49259d8c929",
        "patch": "@@ -49,5 +49,36 @@ def run_test(self):\n         self.log.info('-signer=%s' % self.mock_signer_path())\n         assert_equal(self.nodes[0].getbalance(), 1250)\n \n+        assert_raises_rpc_error(-4, 'Error: restart bitcoind with -signer=<cmd>',\n+            self.nodes[0].enumeratesigners\n+        )\n+\n+        # Handle script missing:\n+        assert_raises_rpc_error(-1, 'execve failed: No such file or directory',\n+            self.nodes[2].enumeratesigners\n+        )\n+\n+        # Handle error thrown by script\n+        self.set_mock_result(self.nodes[1], \"2\")\n+        assert_raises_rpc_error(-1, 'runCommandParseJSON error',\n+            self.nodes[1].enumeratesigners\n+        )\n+        self.clear_mock_result(self.nodes[1])\n+\n+        self.set_mock_result(self.nodes[1], '0 [{\"type\": \"trezor\", \"model\": \"trezor_t\", \"error\": \"fingerprint not found\"}]')\n+        assert_raises_rpc_error(-4, 'fingerprint not found',\n+            self.nodes[1].enumeratesigners\n+        )\n+        self.clear_mock_result(self.nodes[1])\n+\n+        # Create new wallets with private keys disabled:\n+        self.nodes[1].createwallet(wallet_name='hww', disable_private_keys=True, descriptors=True)\n+        hww = self.nodes[1].get_wallet_rpc('hww')\n+\n+        result = hww.enumeratesigners()\n+        assert_equal(len(result['signers']), 2)\n+        assert_equal(result['signers'][0][\"fingerprint\"], \"00000001\")\n+        assert_equal(result['signers'][0][\"name\"], \"trezor_t\")\n+\n if __name__ == '__main__':\n     SignerTest().main()"
      }
    ]
  },
  {
    "sha": "d9c27f0a79b88c056aea508a744b836a24ac4d98",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOWMyN2YwYTc5Yjg4YzA1NmFlYTUwOGE3NDRiODM2YTI0YWM0ZDk4",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-04T15:56:17Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:24Z"
      },
      "message": "[rpc] add external_signer option to createwallet",
      "tree": {
        "sha": "24dfa89a806c9278c67f40e7b3f5188e5bbf0710",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/24dfa89a806c9278c67f40e7b3f5188e5bbf0710"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d9c27f0a79b88c056aea508a744b836a24ac4d98",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o82QACgkQV/+b28ww\nEAmGRxAAvKHzwaMIABYeG5FKT/mN0PO5NzBvO/np7K9Zj2e58fxqHqcCeBOzVfAP\nHVJeljX4FBLlzTK13uJBeAZ4C2AcMQitOBxHWYJ6ci+KwjdUfX1srOVJqRGSYt+f\nn++9zSAmk2gnp4NTRyBCq6WwkfWQPnlnilWJgUY2AC168ERsLP8Z53IfDUL6szso\nLTRRMIU/DHtwJOWumziE80Em3yMyfv2bEvxQYJ+53e1nKpL5OAOoCEP8AQDVJBxx\nRoh2FZWFopRMbNHXRfhc3PYcrjr7lRcfr9/duFXc7tcQ9DGOwSm0l2DxpAy4xVLD\nhl/jPRCHMYGEhw5Aq9VShndpP9zT+Fmmo5qwEJ8FExmqHXk27qV32JiDqFrvrCa8\nR86LXVbWRb2/S6t0DmkD1IZ00heyJr3y2kslEuPozucHgEi8eVcfoC8j7OQWzrM+\nbE77ekOtMghiPAYIQ7BhlgbQR8NeouOKUQAGmxu04HSsZIOGcNcd289dcxlAVM75\nC1B9vxlpDMdc0jSy+L6sjjNRlrK9bD+1qtEGWUTS0ZqcuI2LBWL4qDPRaPlKTMJw\nRrXNb3AHNalYQ4IvP42Jv7FLg8H2vMm2cEqOtBSqRZellr4T1nyQEBcyBPn8imCc\nvJdZtFcc6jHplpDQRP/Dho4z56tTjtWlfFI31cX9iz+Us0rhgCI=\n=dIAA\n-----END PGP SIGNATURE-----",
        "payload": "tree 24dfa89a806c9278c67f40e7b3f5188e5bbf0710\nparent dd34019b8e3a1b1731b8d9bb5e5af49259d8c929\nauthor Sjors Provoost <sjors@sprovoost.nl> 1564934177 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324964 +0200\n\n[rpc] add external_signer option to createwallet\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9c27f0a79b88c056aea508a744b836a24ac4d98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d9c27f0a79b88c056aea508a744b836a24ac4d98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9c27f0a79b88c056aea508a744b836a24ac4d98/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dd34019b8e3a1b1731b8d9bb5e5af49259d8c929",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd34019b8e3a1b1731b8d9bb5e5af49259d8c929",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dd34019b8e3a1b1731b8d9bb5e5af49259d8c929"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 18,
      "deletions": 5
    },
    "files": [
      {
        "sha": "b7259a2612589787df19c5b9413d115890969a93",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9c27f0a79b88c056aea508a744b836a24ac4d98/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9c27f0a79b88c056aea508a744b836a24ac4d98/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=d9c27f0a79b88c056aea508a744b836a24ac4d98",
        "patch": "@@ -172,6 +172,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"createwallet\", 2, \"blank\"},\n     { \"createwallet\", 4, \"avoid_reuse\"},\n     { \"createwallet\", 5, \"descriptors\"},\n+    { \"createwallet\", 6, \"external_signer\"},\n     { \"getnodeaddresses\", 0, \"count\"},\n     { \"stop\", 0, \"wait\" },\n };"
      },
      {
        "sha": "d3f5980be3025be37dbabfb4cbef26c073ff7215",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9c27f0a79b88c056aea508a744b836a24ac4d98/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9c27f0a79b88c056aea508a744b836a24ac4d98/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=d9c27f0a79b88c056aea508a744b836a24ac4d98",
        "patch": "@@ -2631,6 +2631,7 @@ static UniValue createwallet(const JSONRPCRequest& request)\n             {\"passphrase\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"Encrypt the wallet with this passphrase.\"},\n             {\"avoid_reuse\", RPCArg::Type::BOOL, /* default */ \"false\", \"Keep track of coin reuse, and treat dirty and clean coins differently with privacy considerations in mind.\"},\n             {\"descriptors\", RPCArg::Type::BOOL, /* default */ \"false\", \"Create a native descriptor wallet. The wallet will use descriptors internally to handle address creation\"},\n+            {\"external_signer\", RPCArg::Type::BOOL, /* default */ \"false\", \"Use an external signer such as a hardware wallet. Requires -signer to be configured. Wallet creation will fail if keys cannot be fetched. Requires disable_private_keys and descriptors set to true.\"},\n         },\n         RPCResult{\n             RPCResult::Type::OBJ, \"\", \"\",\n@@ -2672,6 +2673,13 @@ static UniValue createwallet(const JSONRPCRequest& request)\n         flags |= WALLET_FLAG_DESCRIPTORS;\n         warnings.emplace_back(Untranslated(\"Wallet is an experimental descriptor wallet\"));\n     }\n+    if (!request.params[6].isNull() && request.params[6].get_bool()) {\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+        flags |= WALLET_FLAG_EXTERNAL_SIGNER;\n+#else\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Configure with --enable-external-signer to use this\");\n+#endif\n+    }\n \n     bilingual_str error;\n     std::shared_ptr<CWallet> wallet;\n@@ -4183,7 +4191,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"addmultisigaddress\",               &addmultisigaddress,            {\"nrequired\",\"keys\",\"label\",\"address_type\"} },\n     { \"wallet\",             \"backupwallet\",                     &backupwallet,                  {\"destination\"} },\n     { \"wallet\",             \"bumpfee\",                          &bumpfee,                       {\"txid\", \"options\"} },\n-    { \"wallet\",             \"createwallet\",                     &createwallet,                  {\"wallet_name\", \"disable_private_keys\", \"blank\", \"passphrase\", \"avoid_reuse\", \"descriptors\"} },\n+    { \"wallet\",             \"createwallet\",                     &createwallet,                  {\"wallet_name\", \"disable_private_keys\", \"blank\", \"passphrase\", \"avoid_reuse\", \"descriptors\", \"external_signer\"} },\n     { \"wallet\",             \"dumpprivkey\",                      &dumpprivkey,                   {\"address\"}  },\n     { \"wallet\",             \"dumpwallet\",                       &dumpwallet,                    {\"filename\"} },\n     { \"wallet\",             \"encryptwallet\",                    &encryptwallet,                 {\"passphrase\"} },"
      },
      {
        "sha": "456f725527ccc1b51912ee40f37c2460004a1d27",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9c27f0a79b88c056aea508a744b836a24ac4d98/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9c27f0a79b88c056aea508a744b836a24ac4d98/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=d9c27f0a79b88c056aea508a744b836a24ac4d98",
        "patch": "@@ -643,10 +643,10 @@ def __init__(self, rpc, cli=False, descriptors=False):\n     def __getattr__(self, name):\n         return getattr(self.rpc, name)\n \n-    def createwallet(self, wallet_name, disable_private_keys=None, blank=None, passphrase='', avoid_reuse=None, descriptors=None):\n+    def createwallet(self, wallet_name, disable_private_keys=None, blank=None, passphrase='', avoid_reuse=None, descriptors=None, external_signer=None):\n         if descriptors is None:\n             descriptors = self.descriptors\n-        return self.__getattr__('createwallet')(wallet_name, disable_private_keys, blank, passphrase, avoid_reuse, descriptors)\n+        return self.__getattr__('createwallet')(wallet_name, disable_private_keys, blank, passphrase, avoid_reuse, descriptors, external_signer)\n \n     def importprivkey(self, privkey, label=None, rescan=None):\n         wallet_info = self.getwalletinfo()"
      },
      {
        "sha": "740de8a80d3b5f083eaa50b0448f553898810d5c",
        "filename": "test/functional/wallet_signer.py",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9c27f0a79b88c056aea508a744b836a24ac4d98/test/functional/wallet_signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9c27f0a79b88c056aea508a744b836a24ac4d98/test/functional/wallet_signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_signer.py?ref=d9c27f0a79b88c056aea508a744b836a24ac4d98",
        "patch": "@@ -71,8 +71,12 @@ def run_test(self):\n         )\n         self.clear_mock_result(self.nodes[1])\n \n-        # Create new wallets with private keys disabled:\n-        self.nodes[1].createwallet(wallet_name='hww', disable_private_keys=True, descriptors=True)\n+        # Create new wallets for an external signer.\n+        # disable_private_keys and descriptors must be true:\n+        assert_raises_rpc_error(-4, \"Private keys must be disabled when using an external signer\", self.nodes[1].createwallet, wallet_name='not_hww', disable_private_keys=False, descriptors=True, external_signer=True)\n+        assert_raises_rpc_error(-4, \"Descriptor support must be enabled when using an external signer\", self.nodes[1].createwallet, wallet_name='not_hww', disable_private_keys=True, descriptors=False, external_signer=True)\n+\n+        self.nodes[1].createwallet(wallet_name='hww', disable_private_keys=True, descriptors=True, external_signer=True)\n         hww = self.nodes[1].get_wallet_rpc('hww')\n \n         result = hww.enumeratesigners()"
      }
    ]
  },
  {
    "sha": "5ec6357b629c81b7d640fc92d22bb0235da1d72c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZWM2MzU3YjYyOWM4MWI3ZDY0MGZjOTJkMjJiYjAyMzVkYTFkNzJj",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-04T15:56:39Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:24Z"
      },
      "message": "[test] external_signer wallet flag is immutable",
      "tree": {
        "sha": "b433724441ac85c798b210781a81779cd62d8dd8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b433724441ac85c798b210781a81779cd62d8dd8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ec6357b629c81b7d640fc92d22bb0235da1d72c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o82QACgkQV/+b28ww\nEAm44xAAjAX9Huon+8cmCIi4cgs+Kj6YPmrCQNzK7E1mpiIQ3qC3brrOYSuZVDQz\nTjZtYldMPt3MUS53oPyzGfCE50G0FhfESImQzkMyTFptsS7PyEi6QqOmpWjdMzjB\nMNWaqOSsRln5jaEkXecThQGDDHcmeeMgrGqO+nLpWsTVUK0ag9VGik93iHMBygYS\nrM+LABqBoJZjxd+tgxsAn5mflfY7O9JhQltdek/NqGCIMiu/yq+7f1MzsB8x5Xy6\nnpCN2CB5h4OD4Fap2C+ta8z6c2Tr6yrPFdsoFBPhohfIRW0MtM4gx2UykFHLprYj\nAbja/e2jeOgqpR5tlDaVT5J2ZsuMHnOHIXmp24iggx/jb4edUTZ3eyMzT4wsJHtE\nT3Ka6nI3sFRTWYDhAFoJD4ITo8AVVEyO587jSVdQ5K0qYW1NyiluBdXNJBf6l6LK\n1QZTfaM1jmd96rCb4pnMIcCmlonNaypXLh0Qu5r/dCZhbLLaT/WmUEiQK8hkUTCN\nRSjHKwkFYqYAzdFRSLKlyCWehMzJbGXhPuwtJHaqZAAD1msflJu5rJO8PsteYyrQ\n66rc7BYPqr++rrgDO3kJOB2OSFqibu34sCOmjtj3TG0oc0CsF/6Ml3AeWAJ0Wq5Z\n3TKjcSrEW9uqf5niJC6hHfRJoKSot9p9otIs8HkEzqjo2DevOMI=\n=xuEB\n-----END PGP SIGNATURE-----",
        "payload": "tree b433724441ac85c798b210781a81779cd62d8dd8\nparent d9c27f0a79b88c056aea508a744b836a24ac4d98\nauthor Sjors Provoost <sjors@sprovoost.nl> 1564934199 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324964 +0200\n\n[test] external_signer wallet flag is immutable\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ec6357b629c81b7d640fc92d22bb0235da1d72c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ec6357b629c81b7d640fc92d22bb0235da1d72c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ec6357b629c81b7d640fc92d22bb0235da1d72c/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d9c27f0a79b88c056aea508a744b836a24ac4d98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9c27f0a79b88c056aea508a744b836a24ac4d98",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d9c27f0a79b88c056aea508a744b836a24ac4d98"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5298e39725548a1ce8d8cf41a0aa6ab6791e5a33",
        "filename": "test/functional/wallet_signer.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ec6357b629c81b7d640fc92d22bb0235da1d72c/test/functional/wallet_signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ec6357b629c81b7d640fc92d22bb0235da1d72c/test/functional/wallet_signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_signer.py?ref=5ec6357b629c81b7d640fc92d22bb0235da1d72c",
        "patch": "@@ -84,5 +84,10 @@ def run_test(self):\n         assert_equal(result['signers'][0][\"fingerprint\"], \"00000001\")\n         assert_equal(result['signers'][0][\"name\"], \"trezor_t\")\n \n+        # Flag can't be set afterwards (could be added later for non-blank descriptor based watch-only wallets)\n+        self.nodes[1].createwallet(wallet_name='not_hww', disable_private_keys=True, descriptors=True, external_signer=False)\n+        not_hww = self.nodes[1].get_wallet_rpc('not_hww')\n+        assert_raises_rpc_error(-8, \"Wallet flag is immutable: external_signer\", not_hww.setwalletflag, \"external_signer\", True)\n+\n if __name__ == '__main__':\n     SignerTest().main()"
      }
    ]
  },
  {
    "sha": "c59a7483fdeb392cbfdbf92c1db42e0172108162",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNTlhNzQ4M2ZkZWIzOTJjYmZkYmY5MmMxZGI0MmUwMTcyMTA4MTYy",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-09T16:07:47Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:24Z"
      },
      "message": "[wallet] ExternalSigner: add getDescriptors method",
      "tree": {
        "sha": "a4e88c1755622f47c980cc7c76fab52d468da347",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a4e88c1755622f47c980cc7c76fab52d468da347"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c59a7483fdeb392cbfdbf92c1db42e0172108162",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o82QACgkQV/+b28ww\nEAmMdQ//VOxD1IZ3oWQ3KM3WrZ9rs6OpKWdEuTYgLez8K9U693duEkjvFDhRH1KX\n5XdzV/AE2wzzGbMxp1INPOjJ+VxhFT3UeTQZRuMYpXcREMDdeeA/TiyRSoZS6nZI\nzIik156p8/jGbl0gfWCduYCbHOwNs33s9tulPuOFjdzAd69CrmVLqMyaf6Z20n5q\nFg8ISr1kj3NltntGgZXXO0+6hA2fkzQpbMdzNCPIsSxdXi5ATti0F+icHI7C56jc\nR4hRLfeciX9RGCFgM0DLAI+Z/P53jv7/jIsRvKxh9l6sj9kLh1NkLu98I4d+IaqC\nzZ0ytR0GRzp6jHVwrCgBRoFOnBzUsW0+B/NGc21ktxQ0EIDF66XzojoVIku3aviO\nS1RW5MINs42Rgm2tk5YAtD+fRrZ5st2CmX1a/Yf/iYA12RznnO/ZFNQ2JCa6uIlR\nQ3UVPYM4WJX2l8g2x+7oX8ZHO4drRqthx3WWsQ19fj9TUJvRNtvUxggN6VwpUoXF\npc80GKGEg79IaOnhdh4T+O1tCufCTVLkIW2gFfL2iu2cpblx5lb07KWfBfyWS27b\nDT60VJkYUjZ+d5hAHBBL8mmxpBrhA9v0P+u3fQMpb9HzBCg3iSCPqsKQhDttf03c\n0T7cOfpkv91JscLDitJNK5sxfw7a3c2HZIE0GOoxfCQ0liDa410=\n=0UVw\n-----END PGP SIGNATURE-----",
        "payload": "tree a4e88c1755622f47c980cc7c76fab52d468da347\nparent 5ec6357b629c81b7d640fc92d22bb0235da1d72c\nauthor Sjors Provoost <sjors@sprovoost.nl> 1552147667 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324964 +0200\n\n[wallet] ExternalSigner: add getDescriptors method\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c59a7483fdeb392cbfdbf92c1db42e0172108162",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c59a7483fdeb392cbfdbf92c1db42e0172108162",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c59a7483fdeb392cbfdbf92c1db42e0172108162/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ec6357b629c81b7d640fc92d22bb0235da1d72c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ec6357b629c81b7d640fc92d22bb0235da1d72c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ec6357b629c81b7d640fc92d22bb0235da1d72c"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "621ef8789a74e22bdb6db432ea72576faf7451ac",
        "filename": "src/wallet/externalsigner.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c59a7483fdeb392cbfdbf92c1db42e0172108162/src/wallet/externalsigner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c59a7483fdeb392cbfdbf92c1db42e0172108162/src/wallet/externalsigner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/externalsigner.cpp?ref=c59a7483fdeb392cbfdbf92c1db42e0172108162",
        "patch": "@@ -49,4 +49,9 @@ bool ExternalSigner::Enumerate(const std::string& command, std::vector<ExternalS\n     return true;\n }\n \n+UniValue ExternalSigner::getDescriptors(int account)\n+{\n+    return runCommandParseJSON(m_command + \" --fingerprint \\\"\" + m_fingerprint + \"\\\"\" + (m_mainnet ? \"\" : \" --testnet \") + \" getdescriptors --account \" + strprintf(\"%d\", account));\n+}\n+\n #endif"
      },
      {
        "sha": "91154e96ab6b88a6fd8d105a55a1e06fbc21eba1",
        "filename": "src/wallet/externalsigner.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c59a7483fdeb392cbfdbf92c1db42e0172108162/src/wallet/externalsigner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c59a7483fdeb392cbfdbf92c1db42e0172108162/src/wallet/externalsigner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/externalsigner.h?ref=c59a7483fdeb392cbfdbf92c1db42e0172108162",
        "patch": "@@ -46,6 +46,12 @@ class ExternalSigner\n     //! @param[out] success     Boolean\n     static bool Enumerate(const std::string& command, std::vector<ExternalSigner>& signers, bool mainnet = true, bool ignore_errors = false);\n \n+    //! Get receive and change Descriptor(s) from device for a given account.\n+    //! Calls `<command> getdescriptors --account <account>`\n+    //! @param[in] account  which BIP32 account to use (e.g. `m/44'/0'/account'`)\n+    //! @param[out] UniValue see doc/external-signer.md\n+    UniValue getDescriptors(int account);\n+\n #endif\n };\n "
      }
    ]
  },
  {
    "sha": "d8591fb41c85398723fb7b6de9a6f1e75955bed1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkODU5MWZiNDFjODUzOTg3MjNmYjdiNmRlOWE2ZjFlNzU5NTViZWQx",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-10-31T09:27:27Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:24Z"
      },
      "message": "[wallet] add GetExternalSigner()",
      "tree": {
        "sha": "b823e512cc6426d08ee026099767368a3c511048",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b823e512cc6426d08ee026099767368a3c511048"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d8591fb41c85398723fb7b6de9a6f1e75955bed1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o82QACgkQV/+b28ww\nEAkWWxAAtHp0Psrcw2bq55AHL4Z63Rg9K3sHBnCh0LidHbnDATTuuYqzEv+suDZX\nGj8KwqCOsCskLUEXOgP/8QUZ9Ez7qO+BTUP0mIzcXbBEtdb89sc2BstSPB+roedI\nULjSSJEDI3XLdAMZKJ3XAaA1fCtC/ksWzpKrZ97TomJPxUuBplWCduvILs+uVCgt\nKLxlInN6B84AYs82J/n9i5ZAOIAaKOZnrIKNtcB+NMXgO3KW9YCRAnwa/afhbJer\nSRMvQvrcU2/T5W+8Q1DJKCPGl1DNzAFd6EXT48DuztHyAKtnagfkW96gBLIbFxZh\nMxVOkiSuIKDYrtjnjOtFqsHw1hNgNoEK14DnN0+2hCg8UjIOK0WPNxllOEYb//V2\npCUalBL120dFDei5VOwlR7LcWpDWa2GV7DNlRg7qoelgSOiJtfOKWQVqt6DQCeGI\naVdFbDAEkd3sbF2QG8BprY63LUEik4ZQls0LVnEgMyb1l52Iz/ar+hiOeJyRwQSH\nL49VDvOtfbzmABYJwTCqcW/g76SK8PuZkaBTgZoBOFfzNaKFWaCKwbn19qhjPZTz\nyxo5Cz+UU+DX5Fvn9uSe/YnXLJfon/OwpATfED0cfk7dmukffgnY4HqoB3/HMHwC\nLc7Pg4/LXjy9wcgz6im9x24hAnAbpvUgL4VYeIHud7FwYQJuRRQ=\n=QjkT\n-----END PGP SIGNATURE-----",
        "payload": "tree b823e512cc6426d08ee026099767368a3c511048\nparent c59a7483fdeb392cbfdbf92c1db42e0172108162\nauthor Sjors Provoost <sjors@sprovoost.nl> 1572514047 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324964 +0200\n\n[wallet] add GetExternalSigner()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8591fb41c85398723fb7b6de9a6f1e75955bed1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d8591fb41c85398723fb7b6de9a6f1e75955bed1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8591fb41c85398723fb7b6de9a6f1e75955bed1/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c59a7483fdeb392cbfdbf92c1db42e0172108162",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c59a7483fdeb392cbfdbf92c1db42e0172108162",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c59a7483fdeb392cbfdbf92c1db42e0172108162"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 18,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e3eac8cc6c42885b0c55979fc63221f9ec18873e",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8591fb41c85398723fb7b6de9a6f1e75955bed1/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8591fb41c85398723fb7b6de9a6f1e75955bed1/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d8591fb41c85398723fb7b6de9a6f1e75955bed1",
        "patch": "@@ -3480,6 +3480,21 @@ void ReserveDestination::ReturnDestination()\n     address = CNoDestination();\n }\n \n+#ifdef ENABLE_EXTERNAL_SIGNER\n+ExternalSigner CWallet::GetExternalSigner() {\n+    const std::string command = gArgs.GetArg(\"-signer\", DEFAULT_EXTERNAL_SIGNER);\n+    if (command == \"\") throw std::runtime_error(std::string(__func__) + \": restart bitcoind with -signer=<cmd>\");\n+\n+    std::string chain = gArgs.GetChainName();\n+    const bool mainnet = chain == CBaseChainParams::MAIN;\n+    std::vector<ExternalSigner> signers;\n+    ExternalSigner::Enumerate(command, signers, mainnet);\n+    if (signers.empty()) throw std::runtime_error(std::string(__func__) + \": No external signers found\");\n+    // TODO: add fingerprint argument in case of multiple signers\n+    return signers[0];\n+}\n+#endif\n+\n void CWallet::LockCoin(const COutPoint& output)\n {\n     AssertLockHeld(cs_wallet);"
      },
      {
        "sha": "204b0b8a0ef8c10b8f6a1822e1171198f5ea345b",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8591fb41c85398723fb7b6de9a6f1e75955bed1/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8591fb41c85398723fb7b6de9a6f1e75955bed1/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=d8591fb41c85398723fb7b6de9a6f1e75955bed1",
        "patch": "@@ -837,6 +837,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     std::vector<OutputGroup> GroupOutputs(const std::vector<COutput>& outputs, bool single_coin, const size_t max_ancestors) const;\n \n+#ifdef ENABLE_EXTERNAL_SIGNER\n+    ExternalSigner GetExternalSigner() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+#endif\n     bool IsLockedCoin(uint256 hash, unsigned int n) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void LockCoin(const COutPoint& output) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void UnlockCoin(const COutPoint& output) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);"
      }
    ]
  },
  {
    "sha": "489f37b9c33243493c6fb5d0ca931074ccf22660",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ODlmMzdiOWMzMzI0MzQ5M2M2ZmI1ZDBjYTkzMTA3NGNjZjIyNjYw",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-10-31T09:27:47Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:24Z"
      },
      "message": "[wallet] fetch keys from external signer upon creation",
      "tree": {
        "sha": "bb26d3400115f29089574b086446b485c1c2f15c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb26d3400115f29089574b086446b485c1c2f15c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/489f37b9c33243493c6fb5d0ca931074ccf22660",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o82UACgkQV/+b28ww\nEAk0vQ/+MPUftE2nkws5mADMDfHz+rDYGIuQRFkUv2QWkr4coxNgVRcI+IZ3FbA/\nXr2R3VH2w5xckrJ7zNYinNzOenRbAAsdtlZd9e9pBq1vckkj3+OnJdTT/per4LG0\nTvM4WeBqDfz8M0u+gOUqkvpmuMjbWhYi57hNDQ0nzfPK3fKat+OMsUf2BtiOsTkA\n+hnbvL9iCv09UCO+dWDs/CP/vRrcdhbtARgOe61mE2+VmKr3S0sFKRlFgD5gyGAF\njrPssg3gc4JpLY+YIH59NESQ90YUXk60ubCYZlw3Xrrh3TA2++30EVviwtUP5dJQ\nGhprK9zvvil0yGbHgJLn33sJnIl9QaR54D9Tcf7WbeGMbNwb8SMxTfymhY5gKzio\n5Cm+tsdg4YSkblHGJAdLl69IcmXp/T3mIXYAKjejz/oLmxQRaCpo0DZ8/MvSdBNh\nKD3VGhf5mXJGzJULXLLhyPE1uObsfzZUXkJONoDGsDD8MziBI+pCJ1h/kLyJTrz1\nWiHFBoj4mELaTvnEyeS6lPCOYwJACWnMIL/R2xhR1X76CB/oPj0NNFMrM8PH4xBb\nUr/gdAyiTUZpNRY7SrlAt24e86TgYLbU5MMOg4/LQSZzri5b602A+nrWeQugCUe0\noDyfv59beAw3s8GasR6hyvIiNajOEDZuU5auMUegifLTLYUinRY=\n=BGKO\n-----END PGP SIGNATURE-----",
        "payload": "tree bb26d3400115f29089574b086446b485c1c2f15c\nparent d8591fb41c85398723fb7b6de9a6f1e75955bed1\nauthor Sjors Provoost <sjors@sprovoost.nl> 1572514067 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324964 +0200\n\n[wallet] fetch keys from external signer upon creation\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/489f37b9c33243493c6fb5d0ca931074ccf22660",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/489f37b9c33243493c6fb5d0ca931074ccf22660",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/489f37b9c33243493c6fb5d0ca931074ccf22660/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d8591fb41c85398723fb7b6de9a6f1e75955bed1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8591fb41c85398723fb7b6de9a6f1e75955bed1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d8591fb41c85398723fb7b6de9a6f1e75955bed1"
      }
    ],
    "stats": {
      "total": 157,
      "additions": 136,
      "deletions": 21
    },
    "files": [
      {
        "sha": "7f6072d8e7ea589316c35bef59086b6578735722",
        "filename": "src/wallet/external_signer_scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/489f37b9c33243493c6fb5d0ca931074ccf22660/src/wallet/external_signer_scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/489f37b9c33243493c6fb5d0ca931074ccf22660/src/wallet/external_signer_scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/external_signer_scriptpubkeyman.cpp?ref=489f37b9c33243493c6fb5d0ca931074ccf22660",
        "patch": "@@ -30,3 +30,21 @@ bool ExternalSignerScriptPubKeyMan::SetupDescriptor(std::unique_ptr<Descriptor>\n     m_storage.UnsetBlankWalletFlag(batch);\n     return true;\n }\n+\n+ExternalSigner ExternalSignerScriptPubKeyMan::GetExternalSigner() {\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+    const std::string command = gArgs.GetArg(\"-signer\", \"\"); // DEFAULT_EXTERNAL_SIGNER);\n+    if (command == \"\") throw std::runtime_error(std::string(__func__) + \": restart bitcoind with -signer=<cmd>\");\n+\n+    std::string chain = gArgs.GetChainName();\n+    const bool mainnet = chain == CBaseChainParams::MAIN;\n+    std::vector<ExternalSigner> signers;\n+    ExternalSigner::Enumerate(command, signers, mainnet);\n+    if (signers.empty()) throw std::runtime_error(std::string(__func__) + \": No external signers found\");\n+    // TODO: add fingerprint argument in case of multiple signers\n+    return signers[0];\n+#else\n+    throw std::runtime_error(std::string(__func__) + \": Wallets with external signers require Boost::System library.\");\n+#endif\n+\n+}"
      },
      {
        "sha": "bf4af6f40787c83c48d124e6590975818a7f9968",
        "filename": "src/wallet/external_signer_scriptpubkeyman.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/489f37b9c33243493c6fb5d0ca931074ccf22660/src/wallet/external_signer_scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/489f37b9c33243493c6fb5d0ca931074ccf22660/src/wallet/external_signer_scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/external_signer_scriptpubkeyman.h?ref=489f37b9c33243493c6fb5d0ca931074ccf22660",
        "patch": "@@ -21,6 +21,9 @@ class ExternalSignerScriptPubKeyMan : public DescriptorScriptPubKeyMan\n   * Returns false if already setup or setup fails, true if setup is successful\n   */\n   bool SetupDescriptor(std::unique_ptr<Descriptor>desc);\n+\n+  static ExternalSigner GetExternalSigner();\n+\n };\n \n #endif // BITCOIN_WALLET_EXTERNAL_SIGNER_SCRIPTPUBKEYMAN_H"
      },
      {
        "sha": "a488b98aa2ca4721069c46d15d354110e698fab1",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/489f37b9c33243493c6fb5d0ca931074ccf22660/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/489f37b9c33243493c6fb5d0ca931074ccf22660/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=489f37b9c33243493c6fb5d0ca931074ccf22660",
        "patch": "@@ -579,6 +579,11 @@ class DescriptorScriptPubKeyMan : public ScriptPubKeyMan\n     //! Setup descriptors based on the given CExtkey\n     bool SetupDescriptorGeneration(const CExtKey& master_key, OutputType addr_type);\n \n+    /** Provide a descriptor at setup time\n+    * Returns false if already setup or setup fails, true if setup is successful\n+    */\n+    bool SetupDescriptor(std::unique_ptr<Descriptor>desc);\n+\n     bool HavePrivateKeys() const override;\n \n     int64_t GetOldestKeyPoolTime() const override;"
      },
      {
        "sha": "37bb389c85d0c69c68ac271a44cf44f02f820dd2",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 55,
        "deletions": 21,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/489f37b9c33243493c6fb5d0ca931074ccf22660/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/489f37b9c33243493c6fb5d0ca931074ccf22660/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=489f37b9c33243493c6fb5d0ca931074ccf22660",
        "patch": "@@ -14,6 +14,7 @@\n #include <key.h>\n #include <key_io.h>\n #include <optional.h>\n+#include <outputtype.h>\n #include <policy/fees.h>\n #include <policy/policy.h>\n #include <primitives/block.h>\n@@ -3806,7 +3807,7 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n             walletInstance->SetupLegacyScriptPubKeyMan();\n         }\n \n-        if (!(wallet_creation_flags & (WALLET_FLAG_DISABLE_PRIVATE_KEYS | WALLET_FLAG_BLANK_WALLET))) {\n+        if ((wallet_creation_flags & WALLET_FLAG_EXTERNAL_SIGNER) || !(wallet_creation_flags & (WALLET_FLAG_DISABLE_PRIVATE_KEYS | WALLET_FLAG_BLANK_WALLET))) {\n             LOCK(walletInstance->cs_wallet);\n             if (walletInstance->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n                 walletInstance->SetupDescriptorScriptPubKeyMans();\n@@ -4399,32 +4400,65 @@ void CWallet::SetupDescriptorScriptPubKeyMans()\n {\n     AssertLockHeld(cs_wallet);\n \n-    // Make a seed\n-    CKey seed_key;\n-    seed_key.MakeNewKey(true);\n-    CPubKey seed = seed_key.GetPubKey();\n-    assert(seed_key.VerifyPubKey(seed));\n+    if (!IsWalletFlagSet(WALLET_FLAG_EXTERNAL_SIGNER)) {\n+        // Make a seed\n+        CKey seed_key;\n+        seed_key.MakeNewKey(true);\n+        CPubKey seed = seed_key.GetPubKey();\n+        assert(seed_key.VerifyPubKey(seed));\n \n-    // Get the extended key\n-    CExtKey master_key;\n-    master_key.SetSeed(seed_key.begin(), seed_key.size());\n+        // Get the extended key\n+        CExtKey master_key;\n+        master_key.SetSeed(seed_key.begin(), seed_key.size());\n \n-    for (bool internal : {false, true}) {\n-        for (OutputType t : OUTPUT_TYPES) {\n-            auto spk_manager = std::unique_ptr<DescriptorScriptPubKeyMan>(new DescriptorScriptPubKeyMan(*this, internal));\n-            if (IsCrypted()) {\n-                if (IsLocked()) {\n-                    throw std::runtime_error(std::string(__func__) + \": Wallet is locked, cannot setup new descriptors\");\n+        for (bool internal : {false, true}) {\n+            for (OutputType t : OUTPUT_TYPES) {\n+                auto spk_manager = std::unique_ptr<DescriptorScriptPubKeyMan>(new DescriptorScriptPubKeyMan(*this, internal));\n+                if (IsCrypted()) {\n+                    if (IsLocked()) {\n+                        throw std::runtime_error(std::string(__func__) + \": Wallet is locked, cannot setup new descriptors\");\n+                    }\n+                    if (!spk_manager->CheckDecryptionKey(vMasterKey) && !spk_manager->Encrypt(vMasterKey, nullptr)) {\n+                        throw std::runtime_error(std::string(__func__) + \": Could not encrypt new descriptors\");\n+                    }\n                 }\n-                if (!spk_manager->CheckDecryptionKey(vMasterKey) && !spk_manager->Encrypt(vMasterKey, nullptr)) {\n-                    throw std::runtime_error(std::string(__func__) + \": Could not encrypt new descriptors\");\n+                spk_manager->SetupDescriptorGeneration(master_key, t);\n+                uint256 id = spk_manager->GetID();\n+                m_spk_managers[id] = std::move(spk_manager);\n+                SetActiveScriptPubKeyMan(id, t, internal);\n+            }\n+        }\n+    } else {\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+        ExternalSigner signer = ExternalSignerScriptPubKeyMan::GetExternalSigner();\n+\n+        // TODO: add account parameter\n+        int account = 0;\n+        UniValue signer_res = signer.getDescriptors(account);\n+\n+        if (!signer_res.isObject()) throw std::runtime_error(std::string(__func__) + \": Unexpect result\");\n+        for (bool internal : {false, true}) {\n+            const UniValue& descriptor_vals = find_value(signer_res, internal ? \"internal\" : \"receive\");\n+            if (!descriptor_vals.isArray()) throw std::runtime_error(std::string(__func__) + \": Unexpect result\");\n+            for (const UniValue& desc_val : descriptor_vals.get_array().getValues()) {\n+                std::string desc_str = desc_val.getValStr();\n+                FlatSigningProvider keys;\n+                std::string dummy_error;\n+                std::unique_ptr<Descriptor> desc = Parse(desc_str, keys, dummy_error, false);\n+                if (!desc->GetOutputType()) {\n+                    continue;\n                 }\n+                OutputType t =  *desc->GetOutputType();\n+                auto spk_manager = std::unique_ptr<ExternalSignerScriptPubKeyMan>(new ExternalSignerScriptPubKeyMan(*this, internal));\n+                spk_manager->SetupDescriptor(std::move(desc));\n+                uint256 id = spk_manager->GetID();\n+                m_spk_managers[id] = std::move(spk_manager);\n+                SetActiveScriptPubKeyMan(id, t, internal);\n             }\n-            spk_manager->SetupDescriptorGeneration(master_key, t);\n-            uint256 id = spk_manager->GetID();\n-            m_spk_managers[id] = std::move(spk_manager);\n-            SetActiveScriptPubKeyMan(id, t, internal);\n         }\n+#else\n+        throw std::runtime_error(std::string(__func__) + \": Wallets with external signers require Boost::System library.\");\n+#endif\n     }\n }\n "
      },
      {
        "sha": "89f3b4d1492206ec12a10ffa88fee91a35f95662",
        "filename": "test/functional/mocks/signer.py",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/489f37b9c33243493c6fb5d0ca931074ccf22660/test/functional/mocks/signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/489f37b9c33243493c6fb5d0ca931074ccf22660/test/functional/mocks/signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mocks/signer.py?ref=489f37b9c33243493c6fb5d0ca931074ccf22660",
        "patch": "@@ -21,12 +21,35 @@ def perform_pre_checks():\n def enumerate(args):\n   sys.stdout.write(json.dumps([{\"fingerprint\": \"00000001\", \"type\": \"trezor\", \"model\": \"trezor_t\"}, {\"fingerprint\": \"00000002\"}]))\n \n+def getdescriptors(args):\n+    xpub = \"tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B\"\n+\n+    sys.stdout.write(json.dumps({\n+        \"receive\": [\n+            \"pkh([00000001/44'/1'/\" + args.account + \"']\" + xpub + \"/0/*)#vt6w3l3j\",\n+            \"sh(wpkh([00000001/49'/1'/\" + args.account + \"']\" + xpub + \"/0/*))#r0grqw5x\",\n+            \"wpkh([00000001/84'/1'/\" + args.account + \"']\" + xpub + \"/0/*)#x30uthjs\"\n+        ],\n+        \"internal\": [\n+            \"pkh([00000001/44'/1'/\" + args.account + \"']\" + xpub + \"/1/*)#all0v2p2\",\n+            \"sh(wpkh([00000001/49'/1'/\" + args.account + \"']\" + xpub + \"/1/*))#kwx4c3pe\",\n+            \"wpkh([00000001/84'/1'/\" + args.account + \"']\" + xpub + \"/1/*)#h92akzzg\"\n+        ]\n+    }))\n+\n+\n parser = argparse.ArgumentParser(prog='./signer.py', description='External signer mock')\n+parser.add_argument('--fingerprint')\n+parser.add_argument('--testnet', action='store_true')\n subparsers = parser.add_subparsers()\n \n parser_enumerate = subparsers.add_parser('enumerate', help='list available signers')\n parser_enumerate.set_defaults(func=enumerate)\n \n+parser_getdescriptors = subparsers.add_parser('getdescriptors')\n+parser_getdescriptors.set_defaults(func=getdescriptors)\n+parser_getdescriptors.add_argument('--account', metavar='account')\n+\n if len(sys.argv) == 1:\n   args = parser.parse_args(['-h'])\n   exit()"
      },
      {
        "sha": "334b7d402b1b00d704015e9e78120e8d26054271",
        "filename": "test/functional/wallet_signer.py",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/489f37b9c33243493c6fb5d0ca931074ccf22660/test/functional/wallet_signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/489f37b9c33243493c6fb5d0ca931074ccf22660/test/functional/wallet_signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_signer.py?ref=489f37b9c33243493c6fb5d0ca931074ccf22660",
        "patch": "@@ -89,5 +89,37 @@ def run_test(self):\n         not_hww = self.nodes[1].get_wallet_rpc('not_hww')\n         assert_raises_rpc_error(-8, \"Wallet flag is immutable: external_signer\", not_hww.setwalletflag, \"external_signer\", True)\n \n+        # assert_raises_rpc_error(-4, \"Multiple signers found, please specify which to use\", wallet_name='not_hww', disable_private_keys=True, descriptors=True, external_signer=True)\n+\n+        # TODO: Handle error thrown by script\n+        # self.set_mock_result(self.nodes[1], \"2\")\n+        # assert_raises_rpc_error(-1, 'Unable to parse JSON',\n+        #     self.nodes[1].createwallet, wallet_name='not_hww2', disable_private_keys=True, descriptors=True, external_signer=False\n+        # )\n+        # self.clear_mock_result(self.nodes[1])\n+\n+        assert_equal(hww.getwalletinfo()[\"keypoolsize\"], 3)\n+\n+        address1 = hww.getnewaddress(address_type=\"bech32\")\n+        assert_equal(address1, \"bcrt1qm90ugl4d48jv8n6e5t9ln6t9zlpm5th68x4f8g\")\n+        address_info = hww.getaddressinfo(address1)\n+        assert_equal(address_info['solvable'], True)\n+        assert_equal(address_info['ismine'], True)\n+        assert_equal(address_info['hdkeypath'], \"m/84'/1'/0'/0/0\")\n+\n+        address2 = hww.getnewaddress(address_type=\"p2sh-segwit\")\n+        assert_equal(address2, \"2N2gQKzjUe47gM8p1JZxaAkTcoHPXV6YyVp\")\n+        address_info = hww.getaddressinfo(address2)\n+        assert_equal(address_info['solvable'], True)\n+        assert_equal(address_info['ismine'], True)\n+        assert_equal(address_info['hdkeypath'], \"m/49'/1'/0'/0/0\")\n+\n+        address3 = hww.getnewaddress(address_type=\"legacy\")\n+        assert_equal(address3, \"n1LKejAadN6hg2FrBXoU1KrwX4uK16mco9\")\n+        address_info = hww.getaddressinfo(address3)\n+        assert_equal(address_info['solvable'], True)\n+        assert_equal(address_info['ismine'], True)\n+        assert_equal(address_info['hdkeypath'], \"m/44'/1'/0'/0/0\")\n+\n if __name__ == '__main__':\n     SignerTest().main()"
      }
    ]
  },
  {
    "sha": "f481c5fdb5d7d5b78a3a026761161c3334aa949e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNDgxYzVmZGI1ZDdkNWI3OGEzYTAyNjc2MTE2MWMzMzM0YWE5NDll",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-15T11:54:30Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:25Z"
      },
      "message": "Add Fingerprint() to Descriptor",
      "tree": {
        "sha": "34315433c4b6b40943776a81cbc7a45889ea3d48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/34315433c4b6b40943776a81cbc7a45889ea3d48"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f481c5fdb5d7d5b78a3a026761161c3334aa949e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o82UACgkQV/+b28ww\nEAnJYw/+J4ZmLRqtYCL47U0PqHlD7g+fcBHfIxOxFYWVlZ6PZ9/Zv93vFT6/mGjE\nOQVWPowRDTWmnOG2yAcxBAbP8iXnHezbzDa8LYLTq0fMPu5cMcUDGNYGd0HXockc\nj3L+isW6s3rhlLK8SwVxOtTZRfkagC+GNJde/EDoVKm+Wv45+d96wyUacyOl5FtH\n63qnWPgML8cF/cSx92ihvienxK2jhmhemB+d5YIVic9a1yUPlYYrL1Uk/QcsFNpT\nEJiUN9vDh44oh1IY0maI09b5MwwBbjf6LR5BbY9BB2vubJ32M13EVfLF6neeT5h9\n05gCABy5MQZdJp6yI3W3rMzzKEvPXDIG1y36J9Ug3kkeSGEVHHG2QnfKUshTDos1\ngLQ+CuWXNOsu02JOYlFkE2zcvBZFV+bFbIkd7hZpYf8pRyiL+uYuA5yZwyhEi0BD\ngx3ZEhElFdA38TCHitBwd30n3euCUX6Ld5ESntrWKF6TnAkD2h8w0u5n6p8Tm8YH\npY0JijIdznfOSrvFTiOx3MA2fyQgWQYrkh0yR94dBeSxNtjeZbANjnrg2wFsA2ss\nNtnVSm7DkvZCF5sdgfZjYDSIgWRQdlD8oGtTcqPLE1UfTG2y+IkHyWGxCG+2mWU+\ndohqoFKNp7ulbZcTsWFq1vzkwAVBi71xFkbeNVv0/DWFsPySVS0=\n=ibK/\n-----END PGP SIGNATURE-----",
        "payload": "tree 34315433c4b6b40943776a81cbc7a45889ea3d48\nparent 489f37b9c33243493c6fb5d0ca931074ccf22660\nauthor Sjors Provoost <sjors@sprovoost.nl> 1550231670 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324965 +0200\n\nAdd Fingerprint() to Descriptor\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f481c5fdb5d7d5b78a3a026761161c3334aa949e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f481c5fdb5d7d5b78a3a026761161c3334aa949e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f481c5fdb5d7d5b78a3a026761161c3334aa949e/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "489f37b9c33243493c6fb5d0ca931074ccf22660",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/489f37b9c33243493c6fb5d0ca931074ccf22660",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/489f37b9c33243493c6fb5d0ca931074ccf22660"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 26,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2ffcfc5603f15b15cb3467cfdfe234afee238198",
        "filename": "src/script/descriptor.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 2,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f481c5fdb5d7d5b78a3a026761161c3334aa949e/src/script/descriptor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f481c5fdb5d7d5b78a3a026761161c3334aa949e/src/script/descriptor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.cpp?ref=f481c5fdb5d7d5b78a3a026761161c3334aa949e",
        "patch": "@@ -176,6 +176,9 @@ struct PubkeyProvider\n     /** Get the descriptor string form. */\n     virtual std::string ToString() const = 0;\n \n+    /** Get the origin fingerprint. */\n+    virtual std::string Fingerprint() const = 0;\n+\n     /** Get the descriptor string form including private data (if available in arg). */\n     virtual bool ToPrivateString(const SigningProvider& arg, std::string& out) const = 0;\n \n@@ -188,9 +191,14 @@ class OriginPubkeyProvider final : public PubkeyProvider\n     KeyOriginInfo m_origin;\n     std::unique_ptr<PubkeyProvider> m_provider;\n \n+    std::string FingerprintString() const\n+    {\n+        return HexStr(std::begin(m_origin.fingerprint), std::end(m_origin.fingerprint));\n+    }\n+\n     std::string OriginString() const\n     {\n-        return HexStr(std::begin(m_origin.fingerprint), std::end(m_origin.fingerprint)) + FormatHDKeypath(m_origin.path);\n+        return FingerprintString() + FormatHDKeypath(m_origin.path);\n     }\n \n public:\n@@ -205,6 +213,9 @@ class OriginPubkeyProvider final : public PubkeyProvider\n     bool IsRange() const override { return m_provider->IsRange(); }\n     size_t GetSize() const override { return m_provider->GetSize(); }\n     std::string ToString() const override { return \"[\" + OriginString() + \"]\" + m_provider->ToString(); }\n+\n+    std::string Fingerprint() const override { return FingerprintString(); }\n+\n     bool ToPrivateString(const SigningProvider& arg, std::string& ret) const override\n     {\n         std::string sub;\n@@ -235,7 +246,8 @@ class ConstPubkeyProvider final : public PubkeyProvider\n     }\n     bool IsRange() const override { return false; }\n     size_t GetSize() const override { return m_pubkey.size(); }\n-    std::string ToString() const override { return HexStr(m_pubkey.begin(), m_pubkey.end()); }\n+    std::string ToString() const final { return HexStr(m_pubkey.begin(), m_pubkey.end()); }\n+    std::string Fingerprint() const override { return \"\"; }\n     bool ToPrivateString(const SigningProvider& arg, std::string& ret) const override\n     {\n         CKey key;\n@@ -375,6 +387,7 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n         }\n         return ret;\n     }\n+    std::string Fingerprint() const override { return \"\"; }\n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const override\n     {\n         CExtKey key;\n@@ -449,6 +462,12 @@ class DescriptorImpl : public Descriptor\n         return false;\n     }\n \n+    std::string Fingerprint() const override\n+    {\n+        if (m_pubkey_args.empty()) return \"\";\n+        return m_pubkey_args[0]->Fingerprint();\n+    }\n+\n     bool ToStringHelper(const SigningProvider* arg, std::string& out, bool priv) const\n     {\n         std::string extra = ToStringExtra();\n@@ -481,6 +500,7 @@ class DescriptorImpl : public Descriptor\n         return AddChecksum(ret);\n     }\n \n+\n     bool ToPrivateString(const SigningProvider& arg, std::string& out) const final\n     {\n         bool ret = ToStringHelper(&arg, out, true);"
      },
      {
        "sha": "0a83b871fc0bbf60f2d02a2ec8fb569daad0ebbb",
        "filename": "src/script/descriptor.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f481c5fdb5d7d5b78a3a026761161c3334aa949e/src/script/descriptor.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f481c5fdb5d7d5b78a3a026761161c3334aa949e/src/script/descriptor.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.h?ref=f481c5fdb5d7d5b78a3a026761161c3334aa949e",
        "patch": "@@ -93,6 +93,10 @@ struct Descriptor {\n     /** Convert the descriptor to a private string. This fails if the provided provider does not have the relevant private keys. */\n     virtual bool ToPrivateString(const SigningProvider& provider, std::string& out) const = 0;\n \n+    /** Origin fingerprint **/\n+    // Return array (e.g. for multi())\n+    virtual std::string Fingerprint() const = 0;\n+\n     /** Expand a descriptor at a specified position.\n      *\n      * @param[in] pos The position at which to expand the descriptor. If IsRange() is false, this is ignored."
      }
    ]
  },
  {
    "sha": "e31b152670ebd8743dadc9e228530e58f2fe91b3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMzFiMTUyNjcwZWJkODc0M2RhZGM5ZTIyODUzMGU1OGYyZmU5MWIz",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-02-19T13:33:37Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:25Z"
      },
      "message": "[rpc] signerdisplayaddress",
      "tree": {
        "sha": "f09f19732edd0f5e8574acea57e95a8fc08f5e51",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f09f19732edd0f5e8574acea57e95a8fc08f5e51"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e31b152670ebd8743dadc9e228530e58f2fe91b3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o82UACgkQV/+b28ww\nEAnOnBAAgAtGhG/8/T5BqiGzE98QIegqEf8gSU2o0UXDw77+bVr9CGtNPYTeUr+j\nakq+YvRWIr83tOStqkdF7IhUW3e7Mr/EFtr6FHSjKpYhWRPt7Z+LAxI9I1EfpDUB\nJl+Yn/l+TRlZpjpemiv4WF+FCpwuQ+RSiw4ig/OBnBaK8bdNPV08kiKQKVdp49hU\nJ4qpn83F1/MozdxlXKMYsKtLRv4hgAVI9XamaIYsxxgnH8PC7KPVuTG1P04AnvfO\nEvE0lfwg4nQArughMZrPLDdJRgFdar9oORUxSLwHZIZLp+GrUzjIf7QD90j0EHSU\nOzLawixrr9Qxvffs9FUJI9Ii2hetpCh9cFkeAJLO39sUThrD+EkisuzCPG2xCg42\n6iK9VzOkLRZkEyJAwN8Eu15MoqnOK5tq6kMYZ2FPPH4xVJbtNxln/VCKoP006PDt\niUcUeTmfHOQrqmtvkQeLoDaG9Qgfh/x53lEcgIt0ECzyuecXbGfUFtgG4RnRWELk\ngmZCSE5Oyh0jCBGchPOrkJ/1VBRcW1bBT08XFdSsNTA3jcyH0cepZ25G4wwDgtov\nhKNGvgYLb9VwhqT/EX2kQRTEeyGrnnd5fhvO7QuqgpUQ/YiGzF+s7TvyugYk4C5y\n1LZIg/iLI+gHh3mMQa6v6O2syHfTkG22ic1EPbK9AO+7kwzuJV8=\n=mkSe\n-----END PGP SIGNATURE-----",
        "payload": "tree f09f19732edd0f5e8574acea57e95a8fc08f5e51\nparent f481c5fdb5d7d5b78a3a026761161c3334aa949e\nauthor Sjors Provoost <sjors@sprovoost.nl> 1582119217 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324965 +0200\n\n[rpc] signerdisplayaddress\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e31b152670ebd8743dadc9e228530e58f2fe91b3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e31b152670ebd8743dadc9e228530e58f2fe91b3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e31b152670ebd8743dadc9e228530e58f2fe91b3/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f481c5fdb5d7d5b78a3a026761161c3334aa949e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f481c5fdb5d7d5b78a3a026761161c3334aa949e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f481c5fdb5d7d5b78a3a026761161c3334aa949e"
      }
    ],
    "stats": {
      "total": 116,
      "additions": 116,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3d89c5703cdbffe656dc954cf6759153a64a38e1",
        "filename": "src/wallet/external_signer_scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e31b152670ebd8743dadc9e228530e58f2fe91b3/src/wallet/external_signer_scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e31b152670ebd8743dadc9e228530e58f2fe91b3/src/wallet/external_signer_scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/external_signer_scriptpubkeyman.cpp?ref=e31b152670ebd8743dadc9e228530e58f2fe91b3",
        "patch": "@@ -48,3 +48,18 @@ ExternalSigner ExternalSignerScriptPubKeyMan::GetExternalSigner() {\n #endif\n \n }\n+\n+bool ExternalSignerScriptPubKeyMan::DisplayAddress(const CScript scriptPubKey, const ExternalSigner &signer) const\n+{\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+    // TODO: avoid the need to infer a descriptor from inside a descriptor wallet\n+    auto provider = GetSolvingProvider(scriptPubKey);\n+    auto descriptor = InferDescriptor(scriptPubKey, *provider);\n+\n+    signer.displayAddress(descriptor->ToString());\n+    // TODO inspect result\n+    return true;\n+#else\n+    return false;\n+#endif\n+}"
      },
      {
        "sha": "1ab47d7c2c1c9b347aab828b5dec18b5b6e0ce5f",
        "filename": "src/wallet/external_signer_scriptpubkeyman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e31b152670ebd8743dadc9e228530e58f2fe91b3/src/wallet/external_signer_scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e31b152670ebd8743dadc9e228530e58f2fe91b3/src/wallet/external_signer_scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/external_signer_scriptpubkeyman.h?ref=e31b152670ebd8743dadc9e228530e58f2fe91b3",
        "patch": "@@ -24,6 +24,7 @@ class ExternalSignerScriptPubKeyMan : public DescriptorScriptPubKeyMan\n \n   static ExternalSigner GetExternalSigner();\n \n+  bool DisplayAddress(const CScript scriptPubKey, const ExternalSigner &signer) const;\n };\n \n #endif // BITCOIN_WALLET_EXTERNAL_SIGNER_SCRIPTPUBKEYMAN_H"
      },
      {
        "sha": "9c609d329a9654a9be5b369eef4c873a8be1ad00",
        "filename": "src/wallet/externalsigner.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e31b152670ebd8743dadc9e228530e58f2fe91b3/src/wallet/externalsigner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e31b152670ebd8743dadc9e228530e58f2fe91b3/src/wallet/externalsigner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/externalsigner.cpp?ref=e31b152670ebd8743dadc9e228530e58f2fe91b3",
        "patch": "@@ -49,6 +49,11 @@ bool ExternalSigner::Enumerate(const std::string& command, std::vector<ExternalS\n     return true;\n }\n \n+UniValue ExternalSigner::displayAddress(const std::string& descriptor) const\n+{\n+    return runCommandParseJSON(m_command + \" --fingerprint \\\"\" + m_fingerprint + \"\\\"\" + (m_mainnet ? \"\" : \" --testnet \") + \" displayaddress --desc \\\"\" + descriptor + \"\\\"\");\n+}\n+\n UniValue ExternalSigner::getDescriptors(int account)\n {\n     return runCommandParseJSON(m_command + \" --fingerprint \\\"\" + m_fingerprint + \"\\\"\" + (m_mainnet ? \"\" : \" --testnet \") + \" getdescriptors --account \" + strprintf(\"%d\", account));"
      },
      {
        "sha": "44ca30218e38d54272bf28c25a171ee30b73e7c4",
        "filename": "src/wallet/externalsigner.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e31b152670ebd8743dadc9e228530e58f2fe91b3/src/wallet/externalsigner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e31b152670ebd8743dadc9e228530e58f2fe91b3/src/wallet/externalsigner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/externalsigner.h?ref=e31b152670ebd8743dadc9e228530e58f2fe91b3",
        "patch": "@@ -46,6 +46,11 @@ class ExternalSigner\n     //! @param[out] success     Boolean\n     static bool Enumerate(const std::string& command, std::vector<ExternalSigner>& signers, bool mainnet = true, bool ignore_errors = false);\n \n+    //! Display address on the device. Calls `<command> displayaddress --desc <descriptor>`.\n+    //! @param[in] descriptor Descriptor specifying which address to display.\n+    //!            Must include a public key or xpub, as well as key origin.\n+    UniValue displayAddress(const std::string& descriptor) const;\n+\n     //! Get receive and change Descriptor(s) from device for a given account.\n     //! Calls `<command> getdescriptors --account <account>`\n     //! @param[in] account  which BIP32 account to use (e.g. `m/44'/0'/account'`)"
      },
      {
        "sha": "14e9f874ef92692fb67741ac4e95295b1cc0b8ba",
        "filename": "src/wallet/rpcsigner.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e31b152670ebd8743dadc9e228530e58f2fe91b3/src/wallet/rpcsigner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e31b152670ebd8743dadc9e228530e58f2fe91b3/src/wallet/rpcsigner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcsigner.cpp?ref=e31b152670ebd8743dadc9e228530e58f2fe91b3",
        "patch": "@@ -3,6 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <chainparamsbase.h>\n+#include <key_io.h>\n #include <rpc/server.h>\n #include <rpc/util.h>\n #include <util/strencodings.h>\n@@ -60,6 +61,43 @@ static UniValue enumeratesigners(const JSONRPCRequest& request)\n     return result;\n }\n \n+static UniValue signerdisplayaddress(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 1) {\n+        throw std::runtime_error(\n+            RPCHelpMan{\"signerdisplayaddress\",\n+            \"Display address on an external signer for verification.\\n\",\n+                {\n+                    {\"address\",     RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"bitcoin address to display\"},\n+                },\n+                RPCResult{RPCResult::Type::NONE,\"\",\"\"},\n+                RPCExamples{\"\"}\n+            }.ToString()\n+        );\n+    }\n+\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!wallet) return NullUniValue;\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+\n+    // Make sure the destination is valid\n+    if (!IsValidDestination(dest)) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid address\");\n+    }\n+\n+    if (!pwallet->DisplayAddress(dest)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Failed to display address\");\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.pushKV(\"address\", request.params[0].get_str());\n+    return result;\n+}\n \n Span<const CRPCCommand> GetSignerRPCCommands()\n {\n@@ -69,6 +107,7 @@ static const CRPCCommand commands[] =\n { //  category              name                                actor (function)                argNames\n     //  --------------------- ------------------------          -----------------------         ----------\n     { \"signer\",             \"enumeratesigners\",                 &enumeratesigners,              {} },\n+    { \"signer\",             \"signerdisplayaddress\",             &signerdisplayaddress,          {\"address\", \"fingerprint\"} },\n };\n // clang-format on\n     return MakeSpan(commands);"
      },
      {
        "sha": "f6480871c90c5b55bd1e95e8d938414500da8845",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e31b152670ebd8743dadc9e228530e58f2fe91b3/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e31b152670ebd8743dadc9e228530e58f2fe91b3/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=e31b152670ebd8743dadc9e228530e58f2fe91b3",
        "patch": "@@ -3496,6 +3496,25 @@ ExternalSigner CWallet::GetExternalSigner() {\n }\n #endif\n \n+bool CWallet::DisplayAddress(const CTxDestination& dest)\n+{\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+    CScript scriptPubKey = GetScriptForDestination(dest);\n+    const auto spk_man = GetScriptPubKeyMan(scriptPubKey);\n+    if (spk_man == nullptr) {\n+        return false;\n+    }\n+    auto signer_spk_man = dynamic_cast<ExternalSignerScriptPubKeyMan*>(spk_man);\n+    if (signer_spk_man == nullptr) {\n+        return false;\n+    }\n+    ExternalSigner signer = GetExternalSigner(); // TODO: move signer in spk_man\n+    return signer_spk_man->DisplayAddress(scriptPubKey, signer);\n+#else\n+    return false;\n+#endif\n+}\n+\n void CWallet::LockCoin(const COutPoint& output)\n {\n     AssertLockHeld(cs_wallet);"
      },
      {
        "sha": "18942a0668b67b26af590d460904003ad7412eed",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e31b152670ebd8743dadc9e228530e58f2fe91b3/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e31b152670ebd8743dadc9e228530e58f2fe91b3/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=e31b152670ebd8743dadc9e228530e58f2fe91b3",
        "patch": "@@ -840,6 +840,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n #ifdef ENABLE_EXTERNAL_SIGNER\n     ExternalSigner GetExternalSigner() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n #endif\n+    /* Display address on an external signer. Returns false if external signer support is not compiled */\n+    bool DisplayAddress(const CTxDestination& dest) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+\n     bool IsLockedCoin(uint256 hash, unsigned int n) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void LockCoin(const COutPoint& output) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void UnlockCoin(const COutPoint& output) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);"
      },
      {
        "sha": "d2c9ce982c6713a19b626a49baa287c9849de761",
        "filename": "test/functional/mocks/signer.py",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e31b152670ebd8743dadc9e228530e58f2fe91b3/test/functional/mocks/signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e31b152670ebd8743dadc9e228530e58f2fe91b3/test/functional/mocks/signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mocks/signer.py?ref=e31b152670ebd8743dadc9e228530e58f2fe91b3",
        "patch": "@@ -38,6 +38,20 @@ def getdescriptors(args):\n     }))\n \n \n+def displayaddress(args):\n+    # Several descriptor formats are acceptable, so allowing for potential\n+    # changes to InferDescriptor:\n+    if args.fingerprint != \"00000001\":\n+        return sys.stdout.write(json.dumps({\"error\": \"Unexpected fingerprint\", \"fingerprint\": args.fingerprint}))\n+\n+    expected_desc = [\n+        \"wpkh([00000001/84'/1'/0'/0/0]02c97dc3f4420402e01a113984311bf4a1b8de376cac0bdcfaf1b3ac81f13433c7)#0yneg42r\"\n+    ]\n+    if args.desc not in expected_desc:\n+        return sys.stdout.write(json.dumps({\"error\": \"Unexpected descriptor\", \"desc\": args.desc}))\n+\n+    return sys.stdout.write(json.dumps({\"address\": \"bcrt1qm90ugl4d48jv8n6e5t9ln6t9zlpm5th68x4f8g\"}))\n+\n parser = argparse.ArgumentParser(prog='./signer.py', description='External signer mock')\n parser.add_argument('--fingerprint')\n parser.add_argument('--testnet', action='store_true')\n@@ -50,6 +64,10 @@ def getdescriptors(args):\n parser_getdescriptors.set_defaults(func=getdescriptors)\n parser_getdescriptors.add_argument('--account', metavar='account')\n \n+parser_displayaddress = subparsers.add_parser('displayaddress', help='display address on signer')\n+parser_displayaddress.add_argument('--desc', metavar='desc')\n+parser_displayaddress.set_defaults(func=displayaddress)\n+\n if len(sys.argv) == 1:\n   args = parser.parse_args(['-h'])\n   exit()"
      },
      {
        "sha": "b6b1b8ecd9430a32d3ac7d48584ffd08c07bf0ba",
        "filename": "test/functional/wallet_signer.py",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e31b152670ebd8743dadc9e228530e58f2fe91b3/test/functional/wallet_signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e31b152670ebd8743dadc9e228530e58f2fe91b3/test/functional/wallet_signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_signer.py?ref=e31b152670ebd8743dadc9e228530e58f2fe91b3",
        "patch": "@@ -121,5 +121,16 @@ def run_test(self):\n         assert_equal(address_info['ismine'], True)\n         assert_equal(address_info['hdkeypath'], \"m/44'/1'/0'/0/0\")\n \n+        self.log.info('Test signerdisplayaddress')\n+        result = hww.signerdisplayaddress(address1)\n+        assert_equal(result, {\"address\": address1})\n+\n+        # Handle error thrown by script\n+        self.set_mock_result(self.nodes[1], \"2\")\n+        assert_raises_rpc_error(-1, 'runCommandParseJSON error',\n+            hww.signerdisplayaddress, address1\n+        )\n+        self.clear_mock_result(self.nodes[1])\n+\n if __name__ == '__main__':\n     SignerTest().main()"
      }
    ]
  },
  {
    "sha": "23c992d390cc959d1d43a6e325924d62cbdb7391",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyM2M5OTJkMzkwY2M5NTlkMWQ0M2E2ZTMyNTkyNGQ2MmNiZGI3Mzkx",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-08-04T21:26:01Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:25Z"
      },
      "message": "[rpc] sendtoaddress: support external signer",
      "tree": {
        "sha": "0479e83c6851265dff1e0c64717ca96223fd6184",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0479e83c6851265dff1e0c64717ca96223fd6184"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23c992d390cc959d1d43a6e325924d62cbdb7391",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o82UACgkQV/+b28ww\nEAmjeRAAjNzSyEVJ2TnsXHRDPG+5M3IJ8iPNRrquu+kuclHtSx363lJpJWPsdF0G\nTYnKgjXi+78/lpNZR9d2UPT0Fq3BFUzjWO0DwPKwipjQUanP5LImJzN8ByPmbPwn\nt5TLwE9QcxbNawHHek1hXa0oao1S9R4X+XNlJhf0pMmknIvUkuPTwAqcUO1PhmmD\nqlfu/fbM6ycewoj89hqmPm3nLHFN12vOC8ELsa2Ks8X4RyfvrBp7AYTCZBHYEC0X\nVGaGhXHyryHg0uYfo1LKqjYzj60aY8zyDGiy/qjvKYoXIRD8mqyg8qmBYFjtb2Sd\ngMa0Mm1D42YRkt9MQq3rR4XNbDsedr0GtypeIqnvVUiwiHrhdpGJY++NJBeUnDod\nnLAPGO55kQ/krzGlwsFrsr6dnMlfD2vAWf+o5/OzNnkoj2AHqgOZ+NAcgcEbnhlO\nWBW1gLbdz/5AZ+ymNHnPmHtJTCj0KX1OMbeRM/J4OEM3xofwYzHSIA9vWmfqmMZP\nmbsuQrBlP5q8HDGs8l9OuGcxI6KcgekTDMasgD63jwLGorNpDXoADB7O2P7XTf95\n0A+5Upe9dJcAyszkIO/29q2c+rv8kvmgmfc4oJalL9p9Nm5Ht7mkPM2jnSAIrkUl\nFf4S3D8feDz75XGV1OhbBHCNlfdwJgeXj9fQE/YJMoeWjDrazPo=\n=Xjld\n-----END PGP SIGNATURE-----",
        "payload": "tree 0479e83c6851265dff1e0c64717ca96223fd6184\nparent e31b152670ebd8743dadc9e228530e58f2fe91b3\nauthor Sjors Provoost <sjors@sprovoost.nl> 1564953961 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324965 +0200\n\n[rpc] sendtoaddress: support external signer\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23c992d390cc959d1d43a6e325924d62cbdb7391",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/23c992d390cc959d1d43a6e325924d62cbdb7391",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23c992d390cc959d1d43a6e325924d62cbdb7391/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e31b152670ebd8743dadc9e228530e58f2fe91b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e31b152670ebd8743dadc9e228530e58f2fe91b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e31b152670ebd8743dadc9e228530e58f2fe91b3"
      }
    ],
    "stats": {
      "total": 229,
      "additions": 225,
      "deletions": 4
    },
    "files": [
      {
        "sha": "36222ee75785efd4239e1ba1c5361c48edde115e",
        "filename": "src/util/error.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23c992d390cc959d1d43a6e325924d62cbdb7391/src/util/error.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23c992d390cc959d1d43a6e325924d62cbdb7391/src/util/error.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/error.cpp?ref=23c992d390cc959d1d43a6e325924d62cbdb7391",
        "patch": "@@ -31,6 +31,10 @@ bilingual_str TransactionErrorString(const TransactionError err)\n             return Untranslated(\"Specified sighash value does not match existing value\");\n         case TransactionError::MAX_FEE_EXCEEDED:\n             return Untranslated(\"Fee exceeds maximum configured by -maxtxfee\");\n+        case TransactionError::EXTERNAL_SIGNER_NOT_FOUND:\n+            return Untranslated(\"External signer not found\");\n+        case TransactionError::EXTERNAL_SIGNER_FAILED:\n+            return Untranslated(\"External signer failed to sign\");\n         // no default case, so the compiler can warn about missing cases\n     }\n     assert(false);"
      },
      {
        "sha": "75335a68ce69a3542e17ebde92d34abd393b2df7",
        "filename": "src/util/error.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23c992d390cc959d1d43a6e325924d62cbdb7391/src/util/error.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23c992d390cc959d1d43a6e325924d62cbdb7391/src/util/error.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/error.h?ref=23c992d390cc959d1d43a6e325924d62cbdb7391",
        "patch": "@@ -30,6 +30,8 @@ enum class TransactionError {\n     PSBT_MISMATCH,\n     SIGHASH_MISMATCH,\n     MAX_FEE_EXCEEDED,\n+    EXTERNAL_SIGNER_NOT_FOUND,\n+    EXTERNAL_SIGNER_FAILED,\n };\n \n bilingual_str TransactionErrorString(const TransactionError error);"
      },
      {
        "sha": "1a05850eb00dd554be72f8456341d5ec4d790944",
        "filename": "src/wallet/external_signer_scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23c992d390cc959d1d43a6e325924d62cbdb7391/src/wallet/external_signer_scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23c992d390cc959d1d43a6e325924d62cbdb7391/src/wallet/external_signer_scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/external_signer_scriptpubkeyman.cpp?ref=23c992d390cc959d1d43a6e325924d62cbdb7391",
        "patch": "@@ -63,3 +63,42 @@ bool ExternalSignerScriptPubKeyMan::DisplayAddress(const CScript scriptPubKey, c\n     return false;\n #endif\n }\n+\n+// If sign is true, transaction must previously have been filled\n+TransactionError ExternalSignerScriptPubKeyMan::FillPSBT(PartiallySignedTransaction& psbtx, int sighash_type, bool sign, bool bip32derivs) const\n+{\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+    if (!sign) {\n+        return DescriptorScriptPubKeyMan::FillPSBT(psbtx, sighash_type, false, bip32derivs);\n+    }\n+\n+    // Already complete if every input is now signed\n+    bool complete = true;\n+    for (const auto& input : psbtx.inputs) {\n+        // TODO: for multisig wallets, we should only care if all _our_ inputs are signed\n+        complete &= PSBTInputSigned(input);\n+    }\n+    if (complete) return TransactionError::OK;\n+\n+    const std::string command = gArgs.GetArg(\"-signer\", \"\"); // DEFAULT_EXTERNAL_SIGNER);\n+    if (command == \"\") throw std::runtime_error(std::string(__func__) + \": restart bitcoind with -signer=<cmd>\");\n+\n+    std::string chain = gArgs.GetChainName();\n+    const bool mainnet = chain == CBaseChainParams::MAIN;\n+    std::vector<ExternalSigner> signers;\n+    ExternalSigner::Enumerate(command, signers, mainnet);\n+    if (signers.empty()) return TransactionError::EXTERNAL_SIGNER_NOT_FOUND;\n+    // TODO: add fingerprint argument in case of multiple signers\n+    ExternalSigner signer = signers[0];\n+\n+    std::string strFailReason;\n+    if( !signer.signTransaction(psbtx, strFailReason)) {\n+        // TODO: identify and/or log failure reason\n+        return TransactionError::EXTERNAL_SIGNER_FAILED;\n+    }\n+    FinalizePSBT(psbtx); // This won't work in a multisig setup\n+    return TransactionError::OK;\n+#else\n+    throw std::runtime_error(std::string(__func__) + \": No external signer support compiled\");\n+#endif\n+}"
      },
      {
        "sha": "ce09b91e68ed837e446afb0b549b0cea5d8fb43b",
        "filename": "src/wallet/external_signer_scriptpubkeyman.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23c992d390cc959d1d43a6e325924d62cbdb7391/src/wallet/external_signer_scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23c992d390cc959d1d43a6e325924d62cbdb7391/src/wallet/external_signer_scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/external_signer_scriptpubkeyman.h?ref=23c992d390cc959d1d43a6e325924d62cbdb7391",
        "patch": "@@ -25,6 +25,8 @@ class ExternalSignerScriptPubKeyMan : public DescriptorScriptPubKeyMan\n   static ExternalSigner GetExternalSigner();\n \n   bool DisplayAddress(const CScript scriptPubKey, const ExternalSigner &signer) const;\n+\n+  TransactionError FillPSBT(PartiallySignedTransaction& psbtx, int sighash_type, bool sign, bool bip32derivs) const override;\n };\n \n #endif // BITCOIN_WALLET_EXTERNAL_SIGNER_SCRIPTPUBKEYMAN_H"
      },
      {
        "sha": "e44db792da5ca6ee5e5c2e19082ac2eaf82fcf45",
        "filename": "src/wallet/externalsigner.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23c992d390cc959d1d43a6e325924d62cbdb7391/src/wallet/externalsigner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23c992d390cc959d1d43a6e325924d62cbdb7391/src/wallet/externalsigner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/externalsigner.cpp?ref=23c992d390cc959d1d43a6e325924d62cbdb7391",
        "patch": "@@ -2,6 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <core_io.h>\n+#include <psbt.h>\n+#include <util/strencodings.h>\n+#include <util/system.h>\n #include <wallet/externalsigner.h>\n \n ExternalSigner::ExternalSigner(const std::string& command, const std::string& fingerprint, bool mainnet, std::string name): m_command(command), m_fingerprint(fingerprint), m_mainnet(mainnet), m_name(name) {}\n@@ -59,4 +63,46 @@ UniValue ExternalSigner::getDescriptors(int account)\n     return runCommandParseJSON(m_command + \" --fingerprint \\\"\" + m_fingerprint + \"\\\"\" + (m_mainnet ? \"\" : \" --testnet \") + \" getdescriptors --account \" + strprintf(\"%d\", account));\n }\n \n+bool ExternalSigner::signTransaction(PartiallySignedTransaction& psbtx, std::string& error)\n+{\n+    // Serialize the PSBT\n+    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n+    ssTx << psbtx;\n+\n+    // Check if signer fingerpint matches any input master key fingerprint\n+    bool match = false;\n+    for (unsigned int i = 0; i < psbtx.inputs.size(); ++i) {\n+        const PSBTInput& input = psbtx.inputs[i];\n+        for (auto entry : input.hd_keypaths) {\n+            if (m_fingerprint == strprintf(\"%08x\", ReadBE32(entry.second.fingerprint))) match = true;\n+        }\n+    }\n+\n+    if (!match) {\n+        error = \"Signer fingerprint \" + m_fingerprint + \" does not match any of the inputs:\\n\" + EncodeBase64(ssTx.str());\n+        return false;\n+    }\n+\n+    std::string command = m_command + \" --stdin --fingerprint \\\"\" + m_fingerprint + \"\\\"\" + (m_mainnet ? \"\" : \" --testnet \");\n+    std::string stdinStr = \"signtx \\\"\" + EncodeBase64(ssTx.str()) + \"\\\"\";\n+\n+    const UniValue signer_result = runCommandParseJSON(command, stdinStr);\n+\n+    if (!find_value(signer_result, \"psbt\").isStr()) {\n+        error = \"Unexpected result from signer\";\n+        return false;\n+    }\n+\n+    PartiallySignedTransaction signer_psbtx;\n+    std::string signer_psbt_error;\n+    if (!DecodeBase64PSBT(signer_psbtx, find_value(signer_result, \"psbt\").get_str(), signer_psbt_error)) {\n+        error = strprintf(\"TX decode failed %s\", signer_psbt_error);\n+        return false;\n+    }\n+\n+    psbtx = signer_psbtx;\n+\n+    return true;\n+}\n+\n #endif"
      },
      {
        "sha": "24553f5d64ace62cebf794fd4fed6a60e8ce55b2",
        "filename": "src/wallet/externalsigner.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23c992d390cc959d1d43a6e325924d62cbdb7391/src/wallet/externalsigner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23c992d390cc959d1d43a6e325924d62cbdb7391/src/wallet/externalsigner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/externalsigner.h?ref=23c992d390cc959d1d43a6e325924d62cbdb7391",
        "patch": "@@ -10,6 +10,8 @@\n #include <univalue.h>\n #include <util/system.h>\n \n+struct PartiallySignedTransaction;\n+\n class ExternalSignerException : public std::runtime_error {\n public:\n     using std::runtime_error::runtime_error;\n@@ -57,6 +59,11 @@ class ExternalSigner\n     //! @param[out] UniValue see doc/external-signer.md\n     UniValue getDescriptors(int account);\n \n+    //! Sign PartiallySignedTransaction on the device.\n+    //! Calls `<command> signtransaction` and passes the PSBT via stdin.\n+    //! @param[in,out] psbt  PartiallySignedTransaction to be signed\n+    bool signTransaction(PartiallySignedTransaction& psbt, std::string& error);\n+\n #endif\n };\n "
      },
      {
        "sha": "945466dd5f27a4f415ff15aec25493c9828c9124",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23c992d390cc959d1d43a6e325924d62cbdb7391/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23c992d390cc959d1d43a6e325924d62cbdb7391/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=23c992d390cc959d1d43a6e325924d62cbdb7391",
        "patch": "@@ -10,6 +10,7 @@\n #include <util/strencodings.h>\n #include <util/string.h>\n #include <util/translation.h>\n+#include <wallet/externalsigner.h>\n #include <wallet/scriptpubkeyman.h>\n \n //! Value for the first BIP 32 hardened derivation. Can be used as a bit mask and as a value. See BIP 32 for more details."
      },
      {
        "sha": "601a3ec9f50fd8cfa04eb0c0911074ee26b1f32b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23c992d390cc959d1d43a6e325924d62cbdb7391/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23c992d390cc959d1d43a6e325924d62cbdb7391/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=23c992d390cc959d1d43a6e325924d62cbdb7391",
        "patch": "@@ -19,6 +19,7 @@\n #include <policy/policy.h>\n #include <primitives/block.h>\n #include <primitives/transaction.h>\n+#include <psbt.h>\n #include <script/descriptor.h>\n #include <script/script.h>\n #include <script/signingprovider.h>"
      },
      {
        "sha": "8cb40c6b77f9cb239ed82f2c12b6d5810a3b4f1b",
        "filename": "test/functional/mocks/signer.py",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23c992d390cc959d1d43a6e325924d62cbdb7391/test/functional/mocks/signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23c992d390cc959d1d43a6e325924d62cbdb7391/test/functional/mocks/signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mocks/signer.py?ref=23c992d390cc959d1d43a6e325924d62cbdb7391",
        "patch": "@@ -52,8 +52,25 @@ def displayaddress(args):\n \n     return sys.stdout.write(json.dumps({\"address\": \"bcrt1qm90ugl4d48jv8n6e5t9ln6t9zlpm5th68x4f8g\"}))\n \n+def signtx(args):\n+    if args.fingerprint != \"00000001\":\n+        return sys.stdout.write(json.dumps({\"error\": \"Unexpected fingerprint\", \"fingerprint\": args.fingerprint}))\n+\n+    f = open(os.path.join(os.getcwd(), \"mock_psbt\"), \"r\")\n+    mock_psbt = f.read()\n+    f.close()\n+\n+    if args.fingerprint == \"00000001\" :\n+        sys.stdout.write(json.dumps({\n+            \"psbt\": mock_psbt,\n+            \"complete\": True\n+        }))\n+    else:\n+        sys.stdout.write(json.dumps({\"psbt\": args.psbt}))\n+\n parser = argparse.ArgumentParser(prog='./signer.py', description='External signer mock')\n parser.add_argument('--fingerprint')\n+parser.add_argument('--stdin', action='store_true')\n parser.add_argument('--testnet', action='store_true')\n subparsers = parser.add_subparsers()\n \n@@ -68,10 +85,20 @@ def displayaddress(args):\n parser_displayaddress.add_argument('--desc', metavar='desc')\n parser_displayaddress.set_defaults(func=displayaddress)\n \n+parser_signtx = subparsers.add_parser('signtx')\n+parser_signtx.add_argument('psbt', metavar='psbt')\n+\n+parser_signtx.set_defaults(func=signtx)\n+\n if len(sys.argv) == 1:\n   args = parser.parse_args(['-h'])\n   exit()\n \n+if not sys.stdin.isatty():\n+    buffer = sys.stdin.read()\n+    if buffer and buffer.rstrip() != \"\":\n+       sys.argv.extend(buffer.rstrip().split(\" \"))\n+\n args = parser.parse_args()\n \n perform_pre_checks()"
      },
      {
        "sha": "0c574d16762f84aefbc584f7e2a0e267a9917850",
        "filename": "test/functional/wallet_signer.py",
        "status": "modified",
        "additions": 96,
        "deletions": 4,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23c992d390cc959d1d43a6e325924d62cbdb7391/test/functional/wallet_signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23c992d390cc959d1d43a6e325924d62cbdb7391/test/functional/wallet_signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_signer.py?ref=23c992d390cc959d1d43a6e325924d62cbdb7391",
        "patch": "@@ -25,11 +25,12 @@ def mock_signer_path(self):\n             return path\n \n     def set_test_params(self):\n-        self.num_nodes = 3\n+        self.num_nodes = 4\n \n         self.extra_args = [\n             [],\n-            ['-signer=%s' % self.mock_signer_path()],\n+            ['-signer=%s' % self.mock_signer_path(), '-keypool=10'],\n+            ['-signer=%s' % self.mock_signer_path(), '-keypool=10'],\n             ['-signer=%s' % \"fake.py\"],\n         ]\n \n@@ -55,7 +56,7 @@ def run_test(self):\n \n         # Handle script missing:\n         assert_raises_rpc_error(-1, 'execve failed: No such file or directory',\n-            self.nodes[2].enumeratesigners\n+            self.nodes[3].enumeratesigners\n         )\n \n         # Handle error thrown by script\n@@ -79,6 +80,11 @@ def run_test(self):\n         self.nodes[1].createwallet(wallet_name='hww', disable_private_keys=True, descriptors=True, external_signer=True)\n         hww = self.nodes[1].get_wallet_rpc('hww')\n \n+        # Create a second identical wallet, in order to test both sendmany and sendtoaddress\n+        # self.nodes[2].createwallet(wallet_name='hww2', disable_private_keys=True, descriptors=True, external_signer=True)\n+        # hww2 = self.nodes[2].get_wallet_rpc('hww2')\n+\n+\n         result = hww.enumeratesigners()\n         assert_equal(len(result['signers']), 2)\n         assert_equal(result['signers'][0][\"fingerprint\"], \"00000001\")\n@@ -98,7 +104,7 @@ def run_test(self):\n         # )\n         # self.clear_mock_result(self.nodes[1])\n \n-        assert_equal(hww.getwalletinfo()[\"keypoolsize\"], 3)\n+        assert_equal(hww.getwalletinfo()[\"keypoolsize\"], 30)\n \n         address1 = hww.getnewaddress(address_type=\"bech32\")\n         assert_equal(address1, \"bcrt1qm90ugl4d48jv8n6e5t9ln6t9zlpm5th68x4f8g\")\n@@ -132,5 +138,91 @@ def run_test(self):\n         )\n         self.clear_mock_result(self.nodes[1])\n \n+        self.log.info('Prepare mock PSBT')\n+        self.nodes[0].sendtoaddress(address1, 1)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        # Load private key into wallet to generate a signed PSBT for the mock\n+        self.nodes[1].createwallet(wallet_name=\"mock\", disable_private_keys=False, blank=True, descriptors=True)\n+        mock_wallet = self.nodes[1].get_wallet_rpc(\"mock\")\n+        assert mock_wallet.getwalletinfo()['private_keys_enabled']\n+\n+        result = mock_wallet.importdescriptors([{\n+            \"desc\": \"wpkh([00000001/84'/1'/0']tprv8ZgxMBicQKsPd7Uf69XL1XwhmjHopUGep8GuEiJDZmbQz6o58LninorQAfcKZWARbtRtfnLcJ5MQ2AtHcQJCCRUcMRvmDUjyEmNUWwx8UbK/0/*)#rweraev0\",\n+            \"timestamp\": 0,\n+            \"range\": [0,1],\n+            \"internal\": False,\n+            \"active\": True\n+        },\n+        {\n+            \"desc\": \"wpkh([00000001/84'/1'/0']tprv8ZgxMBicQKsPd7Uf69XL1XwhmjHopUGep8GuEiJDZmbQz6o58LninorQAfcKZWARbtRtfnLcJ5MQ2AtHcQJCCRUcMRvmDUjyEmNUWwx8UbK/1/*)#j6uzqvuh\",\n+            \"timestamp\": 0,\n+            \"range\": [0, 0],\n+            \"internal\": True,\n+            \"active\": True\n+        }])\n+        assert_equal(result[0], {'success': True})\n+        assert_equal(result[1], {'success': True})\n+        assert_equal(mock_wallet.getwalletinfo()[\"txcount\"], 1)\n+        dest = self.nodes[0].getnewaddress(address_type='bech32')\n+        mock_psbt = mock_wallet.walletcreatefundedpsbt([], {dest:0.5}, 0, {}, True)['psbt']\n+        mock_psbt_signed = mock_wallet.walletprocesspsbt(psbt=mock_psbt, sign=True, sighashtype=\"ALL\", bip32derivs=True)\n+        mock_psbt_final = mock_wallet.finalizepsbt(mock_psbt_signed[\"psbt\"])\n+        mock_tx = mock_psbt_final[\"hex\"]\n+        assert(mock_wallet.testmempoolaccept([mock_tx])[0][\"allowed\"])\n+\n+        # # Create a new wallet and populate with specific public keys, in order\n+        # # to work with the mock signed PSBT.\n+        # self.nodes[1].createwallet(wallet_name=\"hww4\", disable_private_keys=True, descriptors=True, external_signer=True)\n+        # hww4 = self.nodes[1].get_wallet_rpc(\"hww4\")\n+        #\n+        # descriptors = [{\n+        #     \"desc\": \"wpkh([00000001/84'/1'/0']tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/0/*)#x30uthjs\",\n+        #     \"timestamp\": \"now\",\n+        #     \"range\": [0, 1],\n+        #     \"internal\": False,\n+        #     \"watchonly\": True,\n+        #     \"active\": True\n+        # },\n+        # {\n+        #     \"desc\": \"wpkh([00000001/84'/1'/0']tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/1/*)#h92akzzg\",\n+        #     \"timestamp\": \"now\",\n+        #     \"range\": [0, 0],\n+        #     \"internal\": True,\n+        #     \"watchonly\": True,\n+        #     \"active\": True\n+        # }]\n+\n+        # result = hww4.importdescriptors(descriptors)\n+        # assert_equal(result[0], {'success': True})\n+        # assert_equal(result[1], {'success': True})\n+        assert_equal(hww.getwalletinfo()[\"txcount\"], 1)\n+\n+        assert(hww.testmempoolaccept([mock_tx])[0][\"allowed\"])\n+\n+        f = open(os.path.join(self.nodes[1].cwd, \"mock_psbt\"), \"w\")\n+        f.write(mock_psbt_signed[\"psbt\"])\n+        f.close()\n+\n+        self.log.info('Test sendmany using hww1')\n+\n+        result = hww.sendmany(amounts={dest:0.5})\n+        tx = hww.getrawtransaction(result)\n+        assert_equal(tx, mock_tx)\n+\n+        # self.log.info('Test sendtoaddress using hww2')\n+        #\n+        # result = hww2.sendtoaddress(address=dest, amount=0.5)\n+        # tx = hww2.getrawtransaction(result)\n+        # assert_equal(tx, mock_tx)\n+\n+        # # Handle error thrown by script\n+        # self.set_mock_result(self.nodes[4], \"2\")\n+        # assert_raises_rpc_error(-1, 'Unable to parse JSON',\n+        #     hww4.signerprocesspsbt, psbt_orig, \"00000001\"\n+        # )\n+        # self.clear_mock_result(self.nodes[4])\n+\n if __name__ == '__main__':\n     SignerTest().main()"
      }
    ]
  },
  {
    "sha": "36f8792ede8057f39cb56cef41cbc6d55b59ae34",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNmY4NzkyZWRlODA1N2YzOWNiNTZjZWY0MWNiYzZkNTViNTlhZTM0",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-01-30T13:34:45Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:25Z"
      },
      "message": "[doc] add external-signer.md",
      "tree": {
        "sha": "f9cc4618733103b2f33f80e28a5f390463e4c033",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f9cc4618733103b2f33f80e28a5f390463e4c033"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/36f8792ede8057f39cb56cef41cbc6d55b59ae34",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o82UACgkQV/+b28ww\nEAmEww//cBaE5rGbywpldJZPNJtZ6oANwc7UradT//h8ui4KbtEC7AjlZNdhAaK4\nQ4oXv41pawxYpYHgO2ckNESXFE9EixZdF6TBhRLjyNCdKFsVc4G3jk0HHo86ntUU\ngJLRiXpQTbUxRk0dMiorWGD3IkGrNOKJkpSsQsgUdKDmGxeUR5452Hc3dGj5NPT/\nOxf+R14oLgIiR76e2dLLhJgbVWDyYGGyp6Mgdj2KMjdK+bZUVr75MeHn0jqsXC9g\nbrjZexvl7ujOAg+nOfT7mYfj6vh9cHS+PcuepP0TgQQpQ0Cb0GCE1LNUahSx86Uj\nT0giMpfpD3YO466kr1OoqhpfCJo7rC5innGPfF0W1vkffQQIWwHSKl7nugcfBd2L\noMxoMKERQH8MUTDx9UYw1sUuV69byCrY/usnjekF0L8n9RhmuQd6vEAbE6HLArEC\nZKskVprzK5ze2zdnDcGErFdn3lBPgLqyUrbok8DxnXi+3dJ/2uLBZorq+g8kV5Pl\nSIB5ilqzkO2YzB6BSK5zZTeGVolhpTvJsqmoXuKMvrla+v+ZWFv43nFy994A7HYn\nq5+/w/xlUa2o2+1rBV4Dj06bzi1bfOd4wFdpbzFJ6pD9G19z1y0H1OcIaTfE7WE0\nyJKhLmDnmbhyYg/ka5+brePolVkV+Nj1/c+5utLQ8edxXkUjce8=\n=6Y5L\n-----END PGP SIGNATURE-----",
        "payload": "tree f9cc4618733103b2f33f80e28a5f390463e4c033\nparent 23c992d390cc959d1d43a6e325924d62cbdb7391\nauthor Sjors Provoost <sjors@sprovoost.nl> 1580391285 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324965 +0200\n\n[doc] add external-signer.md\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36f8792ede8057f39cb56cef41cbc6d55b59ae34",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/36f8792ede8057f39cb56cef41cbc6d55b59ae34",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36f8792ede8057f39cb56cef41cbc6d55b59ae34/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "23c992d390cc959d1d43a6e325924d62cbdb7391",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23c992d390cc959d1d43a6e325924d62cbdb7391",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/23c992d390cc959d1d43a6e325924d62cbdb7391"
      }
    ],
    "stats": {
      "total": 171,
      "additions": 171,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f897bdbb6b1866edd58dfa26ee0fc1b2c580dfef",
        "filename": "doc/external-signer.md",
        "status": "added",
        "additions": 171,
        "deletions": 0,
        "changes": 171,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36f8792ede8057f39cb56cef41cbc6d55b59ae34/doc/external-signer.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36f8792ede8057f39cb56cef41cbc6d55b59ae34/doc/external-signer.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/external-signer.md?ref=36f8792ede8057f39cb56cef41cbc6d55b59ae34",
        "patch": "@@ -0,0 +1,171 @@\n+# Support for signing transactions outside of Bitcoin Core\n+\n+Bitcoin Core can be launched with `-signer=<cmd>` where `<cmd>` is an external tool which can sign transactions and perform other functions. For example, it can be used to communicate with a hardware wallet.\n+\n+## Example usage\n+\n+The following example is based on the [HWI](https://github.com/bitcoin-core/HWI) tool. Although this tool is hosted under the Bitcoin Core Github organization and maintained by Bitcoin Core developers, it should be used with caution. It is considered experimental and has far less review than Bitcoin Core itself. Be particularly careful when running tools such as these on a computer with private keys on it.\n+\n+When using a hardware wallet, consult the manufacturer website for (alternative) software they recommend. As long as their software conforms to the standard below, it should be able to work with Bitcoin Core.\n+\n+Start Bitcoin Core:\n+\n+```sh\n+$ bitcoind -signer=../HWI/hwi.py\n+```\n+\n+### Device setup\n+\n+Follow the hardware manufacturers instructions for the initial device setup, as well as their instructions for creating a backup. Alternatively, for some devices, you can use the `setup`, `restore` and `backup` commands provided by [HWI](https://github.com/bitcoin-core/HWI).\n+\n+### Create wallet and import keys\n+\n+Get a list of signing devices / services:\n+\n+```\n+$ bitcoin-cli enumeratesigners\n+{\n+  \"signers\": [\n+    {\n+      \"fingerprint\": \"c8df832a\"\n+    }\n+]\n+```\n+\n+The master key fingerprint is used to identify a device.\n+\n+Create a wallet, this automatically imports the public keys:\n+\n+```sh\n+$ bitcoin-cli createwallet \"hww\" true true \"\" true true true\n+```\n+\n+### Verify an address\n+\n+Display an address on the device:\n+\n+```sh\n+$ bitcoin-cli -rpcwallet=<wallet> getnewaddress\n+$ bitcoin-cli -rpcwallet=<wallet> signerdisplayaddress <address>\n+```\n+\n+Replace `<address>` with the result of `getnewaddress`.\n+\n+### Spending\n+\n+Under the hood this uses a [Partially Signed Bitcoin Transaction](psbt.md).\n+\n+```sh\n+$ bitcoin-cli -rpcwallet=<wallet> sendtoaddress <address> <amount>\n+```\n+\n+This prompts your hardware wallet to sign, and fail if it's not connected. If successful\n+it automatically broadcasts the transaction.\n+\n+```sh\n+{\"complete\": true, \"txid\": <txid>}\n+```\n+\n+## Signer API\n+\n+In order to be compatible with Bitcoin Core any signer command should conform to the specification below. This specification is subject to change. Ideally a BIP should propose a standard so that other wallets can also make use of it.\n+\n+Prerequisite knowledge:\n+* [Output Descriptors](descriptors.md)\n+* Partially Signed Bitcoin Transaction ([PSBT](psbt.md))\n+\n+### `enumerate` (required)\n+\n+Usage:\n+```\n+$ <cmd> enumerate\n+[\n+    {\n+        \"fingerprint\": \"00000000\"\n+    }\n+]\n+```\n+\n+The command MUST return an (empty) array with at least a `fingerprint` field.\n+\n+A future extension could add an optional return field with device capabilities. Perhaps a descriptor with wildcards. For example: `[\"pkh(\"44'/0'/$'/{0,1}/*\"), sh(wpkh(\"49'/0'/$'/{0,1}/*\")), wpkh(\"84'/0'/$'/{0,1}/*\")]`. This would indicate the device supports legacy, wrapped SegWit and native SegWit. In addition it restricts the derivation paths that can used for those, to maintain compatibility with other wallet software. It also indicates the device, or the driver, doesn't support multisig.\n+\n+A future extension could add an optional return field `reachable`, in case `<cmd>` knows a signer exists but can't currently reach it.\n+\n+### `signtransaction` (required)\n+\n+Usage:\n+```\n+$ <cmd> --fingerprint=<fingerprint> (--testnet) signtransaction <psbt>\n+base64_encode_signed_psbt\n+```\n+\n+The command returns a psbt with any signatures.\n+\n+The `psbt` SHOULD include bip32 derivations. The command SHOULD fail if none of the bip32 derivations match a key owned by the device.\n+\n+The command SHOULD fail if the user cancels (return code?).\n+\n+The command MAY complain if `--testnet` is set, but any of the BIP32 derivation paths contain a coin type other than `1h` (and vice versa).\n+\n+### `getdescriptors` (optional)\n+\n+Usage:\n+\n+```\n+$ <cmd> --fingerprint=<fingerprint> (--testnet) getdescriptors <account>\n+<xpub>\n+```\n+\n+Returns descriptors supported by the device. Example:\n+\n+```\n+$ <cmd> --fingerprint=00000000 --testnet getdescriptors\n+{\n+  \"receive\": [\n+    \"pkh([00000000/44h/0h/0h]xpub6C.../0/*)#fn95jwmg\",\n+    \"sh(wpkh([00000000/49h/0h/0h]xpub6B..../0/*))#j4r9hntt\",\n+    \"wpkh([00000000/84h/0h/0h]xpub6C.../0/*)#qw72dxa9\"\n+  ],\n+  \"internal\": [\n+    \"pkh([00000000/44h/0h/0h]xpub6C.../1/*)#c8q40mts\",\n+    \"sh(wpkh([00000000/49h/0h/0h]xpub6B..../1/*))#85dn0v75\",\n+    \"wpkh([00000000/84h/0h/0h]xpub6C..../1/*)#36mtsnda\"\n+  ]\n+}\n+```\n+\n+### `displayaddress` (optional)\n+\n+Usage:\n+```\n+<cmd> --fingerprint=<fingerprint> (--testnet) displayaddress --desc descriptor\n+```\n+\n+Example, display the first native SegWit receive address on Testnet:\n+\n+```\n+<cmd> --fingerprint=00000000 --testnet displayaddress --desc \"wpkh([00000000/84h/1h/0h]tpubDDUZ..../0/0)\"\n+```\n+\n+The command MUST be able to figure out the address type from the descriptor.\n+\n+If <descriptor> contains a master key fingerprint, the command MUST fail if it does not match the fingerprint known by the device.\n+\n+If <descriptor> contains an xpub, the command MUST fail if it does not match the xpub known by the device.\n+\n+The command MAY complain if `--testnet` is set, but the BIP32 coin type is not `1h` (and vice versa).\n+\n+## How Bitcoin Core uses the Signer API\n+\n+The `enumeratesigners` RPC simply calls `<cmd> enumerate`.\n+\n+The `createwallet` RPC calls:\n+\n+* `<cmd> --fingerprint=00000000 getdescriptors 0`\n+\n+It then imports descriptors for all support address types, in a BIP44/49/84 compatible manner.\n+\n+The `displayaddress` RPC reuses some code from `getaddressinfo` on the provided address and obtains the inferred descriptor. It then calls `<cmd> --fingerprint=00000000 displayaddress --desc=<descriptor>`.\n+\n+`sendtoaddress` and `sendmany` check `inputs->bip32_derivs` to see if any inputs have the same `master_fingerprint` as the signer. If so, it calls `<cmd> --fingerprint=00000000 signtransaction <psbt>`. It waits for the device to return a (partially) signed psbt, tries to finalize it and broadcasts the transation."
      }
    ]
  },
  {
    "sha": "7218c328b1d37f49ff1cc399cf0d307561a6dcfb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjE4YzMyOGIxZDM3ZjQ5ZmYxY2MzOTljZjBkMzA3NTYxYTZkY2Zi",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-09-16T16:51:24Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:42Z"
      },
      "message": "[gui] options: add external signer path",
      "tree": {
        "sha": "b18c724405909679cd75daa77fa697fb3fcb4827",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b18c724405909679cd75daa77fa697fb3fcb4827"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7218c328b1d37f49ff1cc399cf0d307561a6dcfb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o83YACgkQV/+b28ww\nEAlvYw/+Kgev2du9hldcL+ruLZEIjcrwY1lLpQJm84FahaT3M9PqzGTuBWYVhbFD\n18Dn3MuLCsiVqPtmQ2sgW+d0KDKenEY4Oa+KQoa9awDp9QJnQxKHHi1yl7g/qG4z\nzwq0ygwWw+yJqHnkFUFqthsWOk75bKEqFda+TtQwL5/aTrCH/itjOUUJEM2XVjxY\nF9K4xNbS5Ou/C4xr0VA2D2dG4SKhfQx6aIAMDMM+eCsIJdJCi/OyVZKE8nUej1lz\n63c6cH6+H/NrldOCqc/R48hZ7x4I07X6+hEqaLfHMPXJUfX0OIrFAKyZGF9pufKk\nnc+a7oIn9Gf8dXzmswPyz+AkBBqNDL7250X2ZY6q4/MZy+3Qal/cN0rpEfwMBP22\nMkrvHsZONjPwH5m0KNv2GGAEV58s9QVx4658Ofm+B5mTIfla5pPksR8kJjEsZjl4\nDSDdjrqTcymPEb6pT2bS47VpmuhkHyBw8hCrWNLDN3/927dEiAYkwwtTQCSkT+TE\ncD4Ao7cQ1Zs1CnJNGpDlNCEABrYKIUKfTopCWydKT2vhyS11K+DiZ04vWLXLT/Qk\nGmAj4OMlLMlXbx80hAvX5Inxd1AN5OqFctvZ1Xr+JqaL6GA8gEagxY+ux3Fo7Y7L\niF8RCYAlnl60EpDMr4Pq258uEMeGQ0f1oJjU5dh9rkggbndEUDQ=\n=oB8Z\n-----END PGP SIGNATURE-----",
        "payload": "tree b18c724405909679cd75daa77fa697fb3fcb4827\nparent 36f8792ede8057f39cb56cef41cbc6d55b59ae34\nauthor Sjors Provoost <sjors@sprovoost.nl> 1568652684 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324982 +0200\n\n[gui] options: add external signer path\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7218c328b1d37f49ff1cc399cf0d307561a6dcfb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7218c328b1d37f49ff1cc399cf0d307561a6dcfb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7218c328b1d37f49ff1cc399cf0d307561a6dcfb/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "36f8792ede8057f39cb56cef41cbc6d55b59ae34",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36f8792ede8057f39cb56cef41cbc6d55b59ae34",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/36f8792ede8057f39cb56cef41cbc6d55b59ae34"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 48,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2b4be4c21dff8e89631e989c4f56c6545cd1c98a",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7218c328b1d37f49ff1cc399cf0d307561a6dcfb/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7218c328b1d37f49ff1cc399cf0d307561a6dcfb/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=7218c328b1d37f49ff1cc399cf0d307561a6dcfb",
        "patch": "@@ -242,6 +242,36 @@\n          </property>\n         </spacer>\n        </item>\n+       <item>\n+        <widget class=\"QGroupBox\" name=\"groupBoxHww\">\n+         <property name=\"title\">\n+          <string>External Signer (e.g. hardware wallet)</string>\n+         </property>\n+         <layout class=\"QVBoxLayout\" name=\"verticalLayoutHww\">\n+           <item>\n+            <layout class=\"QHBoxLayout\" name=\"horizontalLayoutHww\">\n+             <item>\n+              <widget class=\"QLabel\" name=\"externalSignerPathLabel\">\n+               <property name=\"text\">\n+                <string>&amp;External signer script path</string>\n+               </property>\n+               <property name=\"buddy\">\n+                <cstring>thirdPartyTxUrls</cstring>\n+               </property>\n+              </widget>\n+             </item>\n+             <item>\n+              <widget class=\"QLineEdit\" name=\"externalSignerPath\">\n+                <property name=\"toolTip\">\n+                  <string>Full path to a Bitcoin Core compatible script (e.g. C:\\Downloads\\hwi.exe or /Users/you/Downloads/hwi.py). Beware: malware can steal your coins!</string>\n+                </property>\n+              </widget>\n+             </item>\n+            </layout>\n+           </item>\n+         </layout>\n+        </widget>\n+       </item>\n       </layout>\n      </widget>\n      <widget class=\"QWidget\" name=\"tabNetwork\">"
      },
      {
        "sha": "5303785629d9f3128b67729d1c1e5f4642b63726",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7218c328b1d37f49ff1cc399cf0d307561a6dcfb/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7218c328b1d37f49ff1cc399cf0d307561a6dcfb/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=7218c328b1d37f49ff1cc399cf0d307561a6dcfb",
        "patch": "@@ -177,6 +177,7 @@ void OptionsDialog::setModel(OptionsModel *_model)\n     connect(ui->prune, &QCheckBox::clicked, this, &OptionsDialog::togglePruneWarning);\n     connect(ui->pruneSize, static_cast<void (QSpinBox::*)(int)>(&QSpinBox::valueChanged), this, &OptionsDialog::showRestartWarning);\n     connect(ui->databaseCache, static_cast<void (QSpinBox::*)(int)>(&QSpinBox::valueChanged), this, &OptionsDialog::showRestartWarning);\n+    connect(ui->externalSignerPath, &QLineEdit::textChanged, [this]{ showRestartWarning(); });\n     connect(ui->threadsScriptVerif, static_cast<void (QSpinBox::*)(int)>(&QSpinBox::valueChanged), this, &OptionsDialog::showRestartWarning);\n     /* Wallet */\n     connect(ui->spendZeroConfChange, &QCheckBox::clicked, this, &OptionsDialog::showRestartWarning);\n@@ -211,6 +212,7 @@ void OptionsDialog::setMapper()\n     /* Wallet */\n     mapper->addMapping(ui->spendZeroConfChange, OptionsModel::SpendZeroConfChange);\n     mapper->addMapping(ui->coinControlFeatures, OptionsModel::CoinControlFeatures);\n+    mapper->addMapping(ui->externalSignerPath, OptionsModel::ExternalSignerPath);\n \n     /* Network */\n     mapper->addMapping(ui->mapPortUpnp, OptionsModel::MapPortUPnP);"
      },
      {
        "sha": "6b616ae39f237b3ea6f050d58e8371d7df791f6d",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7218c328b1d37f49ff1cc399cf0d307561a6dcfb/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7218c328b1d37f49ff1cc399cf0d307561a6dcfb/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=7218c328b1d37f49ff1cc399cf0d307561a6dcfb",
        "patch": "@@ -114,6 +114,13 @@ void OptionsModel::Init(bool resetSettings)\n         settings.setValue(\"bSpendZeroConfChange\", true);\n     if (!m_node.softSetBoolArg(\"-spendzeroconfchange\", settings.value(\"bSpendZeroConfChange\").toBool()))\n         addOverriddenOption(\"-spendzeroconfchange\");\n+\n+    if (!settings.contains(\"strExternalSigner\"))\n+        settings.setValue(\"strExternalSigner\", \"\");\n+\n+    if (!m_node.softSetArg(\"-signer\", settings.value(\"strExternalSignerPath\").toString().toStdString())) {\n+        addOverriddenOption(\"-signer\");\n+    }\n #endif\n \n     // Network\n@@ -304,6 +311,8 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n #ifdef ENABLE_WALLET\n         case SpendZeroConfChange:\n             return settings.value(\"bSpendZeroConfChange\");\n+        case ExternalSignerPath:\n+            return settings.value(\"strExternalSignerPath\");\n #endif\n         case DisplayUnit:\n             return nDisplayUnit;\n@@ -419,6 +428,12 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n                 setRestartRequired(true);\n             }\n             break;\n+        case ExternalSignerPath:\n+            if (settings.value(\"strExternalSignerPath\") != value.toString()) {\n+                settings.setValue(\"strExternalSignerPath\", value.toString());\n+                setRestartRequired(true);\n+            }\n+            break;\n #endif\n         case DisplayUnit:\n             setDisplayUnit(value);"
      },
      {
        "sha": "b917320ecbd342e0a84c443e67cd71e6c948993e",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7218c328b1d37f49ff1cc399cf0d307561a6dcfb/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7218c328b1d37f49ff1cc399cf0d307561a6dcfb/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=7218c328b1d37f49ff1cc399cf0d307561a6dcfb",
        "patch": "@@ -60,6 +60,7 @@ class OptionsModel : public QAbstractListModel\n         Prune,                  // bool\n         PruneSize,              // int\n         DatabaseCache,          // int\n+        ExternalSignerPath,     // QString\n         SpendZeroConfChange,    // bool\n         Listen,                 // bool\n         OptionIDRowCount,"
      }
    ]
  },
  {
    "sha": "3c21dd566c51d390b103d5ed33477581ddac2daa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzIxZGQ1NjZjNTFkMzkwYjEwM2Q1ZWQzMzQ3NzU4MWRkYWMyZGFh",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-02-21T20:13:43Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:43Z"
      },
      "message": "[gui] create wallet with external signer",
      "tree": {
        "sha": "a39080fff6f16ed3e0855c7875531008d1a629a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a39080fff6f16ed3e0855c7875531008d1a629a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c21dd566c51d390b103d5ed33477581ddac2daa",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o83cACgkQV/+b28ww\nEAmNaQ/5AbHgbBQBUxI5+3gwFTT4LrjWYofqHBNf0Luf4a3BNFN1x3UrF1JvtDPY\n4EHGryAE4qXFVD/JD8Aira/5lu/VVYwMWD8rjHkYsF11fUBw0ZUDwQloa6W4Wj6I\nhVPT/4ZVl74F5UFKv2Kqk++LM5Ud1QUEUMjRwbYr8QqyzPGMvSIvMumWBXLrpgc4\nlB/EzALKo0MTEPGiMXg76vC6asVEYAX78S3/a9QOVzzRcJknbXJDc/nv1bGveE4i\n0SnVgyXQOX0glc+YwXdcenk6AulUX6y4tKU574Ak/2bZL+8DjiijiwSz6mmdjQPi\nTSrdM6zrV3NAEkHu/2HHaANNe0G+4eNKY6TjHffC9F701M1AokkF6tXqyYD4LUdh\nk0CMNcs0sOb8dSnwwgCbxB1ErRryxLTqvt2Ejzfhx8x4W2CHRevsY+sfzC94oVhE\n9Y//6DDIraqRiI7HyxfoeH/AeHs3NkeiyZ7pPHza5UhVhNfELtwlu/9TKJTKOgCk\nZ68ghceMvXplnGbVZST941ynz5GxC/uodSO1JGFip5x03JJbUMlE3OH7XXgIAURO\n7/+xX6/+duS8uHeHn5IGXAmLih/GKhpxm/dm1CTnMLX52/dVKRhPupCuw3qEAfuc\nymyKH8VHLL/FspatCGMf/oGpter3dW423uG2CsEp4+f2n9eBgME=\n=29QE\n-----END PGP SIGNATURE-----",
        "payload": "tree a39080fff6f16ed3e0855c7875531008d1a629a9\nparent 7218c328b1d37f49ff1cc399cf0d307561a6dcfb\nauthor Sjors Provoost <sjors@sprovoost.nl> 1582316023 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324983 +0200\n\n[gui] create wallet with external signer\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c21dd566c51d390b103d5ed33477581ddac2daa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3c21dd566c51d390b103d5ed33477581ddac2daa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c21dd566c51d390b103d5ed33477581ddac2daa/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7218c328b1d37f49ff1cc399cf0d307561a6dcfb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7218c328b1d37f49ff1cc399cf0d307561a6dcfb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7218c328b1d37f49ff1cc399cf0d307561a6dcfb"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 53,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8049b18355c2c6c97908ee6c56833dd862196300",
        "filename": "src/qt/createwalletdialog.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 1,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c21dd566c51d390b103d5ed33477581ddac2daa/src/qt/createwalletdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c21dd566c51d390b103d5ed33477581ddac2daa/src/qt/createwalletdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/createwalletdialog.cpp?ref=3c21dd566c51d390b103d5ed33477581ddac2daa",
        "patch": "@@ -25,15 +25,37 @@ CreateWalletDialog::CreateWalletDialog(QWidget* parent) :\n     });\n \n     connect(ui->encrypt_wallet_checkbox, &QCheckBox::toggled, [this](bool checked) {\n-        // Disable the disable_privkeys_checkbox when isEncryptWalletChecked is\n+        // Disable the disable_privkeys_checkbox and external_signer_checkbox when isEncryptWalletChecked is\n         // set to true, enable it when isEncryptWalletChecked is false.\n         ui->disable_privkeys_checkbox->setEnabled(!checked);\n+        ui->external_signer_checkbox->setEnabled(!checked);\n \n         // When the disable_privkeys_checkbox is disabled, uncheck it.\n         if (!ui->disable_privkeys_checkbox->isEnabled()) {\n             ui->disable_privkeys_checkbox->setChecked(false);\n         }\n+\n+        // When the external_signer_checkbox box is disabled, uncheck it.\n+        if (!ui->external_signer_checkbox->isEnabled()) {\n+            ui->external_signer_checkbox->setChecked(false);\n+        }\n+\n+    });\n+\n+    connect(ui->external_signer_checkbox, &QCheckBox::toggled, [this](bool checked) {\n+        if (checked) {\n+            ui->encrypt_wallet_checkbox->setChecked(false);\n+            ui->blank_wallet_checkbox->setChecked(false);\n+            ui->disable_privkeys_checkbox->setChecked(true);\n+            ui->descriptor_checkbox->setChecked(true);\n+        }\n+\n+        ui->encrypt_wallet_checkbox->setEnabled(!checked);\n+        ui->blank_wallet_checkbox->setEnabled(!checked);\n+        ui->disable_privkeys_checkbox->setEnabled(!checked);\n+        ui->descriptor_checkbox->setEnabled(!checked);\n     });\n+\n }\n \n CreateWalletDialog::~CreateWalletDialog()\n@@ -65,3 +87,8 @@ bool CreateWalletDialog::isDescriptorWalletChecked() const\n {\n     return ui->descriptor_checkbox->isChecked();\n }\n+\n+bool CreateWalletDialog::isExternalSignerChecked() const\n+{\n+    return ui->external_signer_checkbox->isChecked();\n+}"
      },
      {
        "sha": "6eb79bc0603870a0c62af15e16d1bd059cb0108e",
        "filename": "src/qt/createwalletdialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c21dd566c51d390b103d5ed33477581ddac2daa/src/qt/createwalletdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c21dd566c51d390b103d5ed33477581ddac2daa/src/qt/createwalletdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/createwalletdialog.h?ref=3c21dd566c51d390b103d5ed33477581ddac2daa",
        "patch": "@@ -28,6 +28,7 @@ class CreateWalletDialog : public QDialog\n     bool isDisablePrivateKeysChecked() const;\n     bool isMakeBlankWalletChecked() const;\n     bool isDescriptorWalletChecked() const;\n+    bool isExternalSignerChecked() const;\n \n private:\n     Ui::CreateWalletDialog *ui;"
      },
      {
        "sha": "260b7fde11771ee480b78bbccda25b6c9577754b",
        "filename": "src/qt/forms/createwalletdialog.ui",
        "status": "modified",
        "additions": 21,
        "deletions": 1,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c21dd566c51d390b103d5ed33477581ddac2daa/src/qt/forms/createwalletdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c21dd566c51d390b103d5ed33477581ddac2daa/src/qt/forms/createwalletdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/createwalletdialog.ui?ref=3c21dd566c51d390b103d5ed33477581ddac2daa",
        "patch": "@@ -7,7 +7,7 @@\n     <x>0</x>\n     <y>0</y>\n     <width>364</width>\n-    <height>213</height>\n+    <height>243</height>\n    </rect>\n   </property>\n   <property name=\"windowTitle\">\n@@ -122,12 +122,32 @@\n     <string>Descriptor Wallet</string>\n    </property>\n   </widget>\n+  <widget class=\"QCheckBox\" name=\"external_signer_checkbox\">\n+    <property name=\"geometry\">\n+     <rect>\n+      <x>20</x>\n+      <y>170</y>\n+      <width>171</width>\n+      <height>22</height>\n+     </rect>\n+    </property>\n+   <property name=\"enabled\">\n+    <bool>false</bool>\n+   </property>\n+   <property name=\"text\">\n+     <string>External signer</string>\n+   </property>\n+   <property name=\"toolTip\">\n+     <string>Use an external signing device such as a hardware wallet. Configure the external signer script in wallet preferences first.</string>\n+   </property>\n  </widget>\n+</widget>\n  <tabstops>\n   <tabstop>wallet_name_line_edit</tabstop>\n   <tabstop>encrypt_wallet_checkbox</tabstop>\n   <tabstop>disable_privkeys_checkbox</tabstop>\n   <tabstop>blank_wallet_checkbox</tabstop>\n+  <tabstop>external_signer_checkbox</tabstop>\n  </tabstops>\n  <resources/>\n  <connections>"
      },
      {
        "sha": "47550c32aae9e218a88368fe8d03eb86a6d446b2",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c21dd566c51d390b103d5ed33477581ddac2daa/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c21dd566c51d390b103d5ed33477581ddac2daa/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=3c21dd566c51d390b103d5ed33477581ddac2daa",
        "patch": "@@ -247,6 +247,9 @@ void CreateWalletActivity::createWallet()\n     if (m_create_wallet_dialog->isDescriptorWalletChecked()) {\n         flags |= WALLET_FLAG_DESCRIPTORS;\n     }\n+    if (m_create_wallet_dialog->isExternalSignerChecked()) {\n+        flags |= WALLET_FLAG_EXTERNAL_SIGNER;\n+    }\n \n     QTimer::singleShot(500, worker(), [this, name, flags] {\n         WalletCreationStatus status;"
      }
    ]
  },
  {
    "sha": "26a9baffe9fece08bf39ca3b06c24cf5e4cc987b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNmE5YmFmZmU5ZmVjZTA4YmYzOWNhM2IwNmMyNGNmNWU0Y2M5ODdi",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-09-16T17:00:55Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:43Z"
      },
      "message": "Add displayAddress to wallet interface",
      "tree": {
        "sha": "ad1adaebc8b79e6b812316a33aef9c341d310487",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ad1adaebc8b79e6b812316a33aef9c341d310487"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/26a9baffe9fece08bf39ca3b06c24cf5e4cc987b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o83cACgkQV/+b28ww\nEAlhwRAAk/d2yP6g0Q4/iQ/my2dXDBDk9rdooaSykQg4Mq4TV34C9V1FfuviEhKK\nlkZgbfS10L0hdg7dlqgLKt4kCNNJILw8zrjTL4BrCuq3BB69StBT2r4Td1pP/k0O\nouIiVcA+bdQul237ecBwZ+Hi+YWLfVhTdUB+nluyhKPNt74P0wvQrVxXxQNlKZ2z\n4i5xX4EkiB3ltvUDeUkANZcv0c1QyrYHYyzfqxommUCF/2FecY+N5xuJJbNDn/at\nxv1dSu62W9ouhaU8VAF6lI2T/eevSxb/twL56yIr5rCYBPyDlstTGaBBrya2ah9G\neAc6zNNPsXXV56/S28Q0uGZ8ITA4Pl3VP4LbyY2M/y0ETAxbULQRo56fhAfsnoe9\nd8RKTOoT8wyOaaqJ/5UZbyo+JN3lcoIGGCqs/o+eQwIiqaQ2kZneRXB6NCtu2YPt\nBtJrbyrY+a+x/dZOmXJMrq+aYG8FpS1g+3kiIfO996y9XB1uWtdRS5lsk5KOVJwp\nbPw03cvL0TVVEPVQlWxrNZcZmFmnuqMYHfPJSG2fZKaG2bxW+QFHfPwCB5J9M89G\nX41KaTef4iL4bBoZwskmUa/KZ1LhrzsjRSOKCSJPSMWCq1K5IqghVJguyUr82Wm/\noHiBFmxtJhwjqCIopO6RwCTRk6FBnZDobE48aSWEMZbBUhEmhto=\n=k9uF\n-----END PGP SIGNATURE-----",
        "payload": "tree ad1adaebc8b79e6b812316a33aef9c341d310487\nparent 3c21dd566c51d390b103d5ed33477581ddac2daa\nauthor Sjors Provoost <sjors@sprovoost.nl> 1568653255 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324983 +0200\n\nAdd displayAddress to wallet interface\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26a9baffe9fece08bf39ca3b06c24cf5e4cc987b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/26a9baffe9fece08bf39ca3b06c24cf5e4cc987b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26a9baffe9fece08bf39ca3b06c24cf5e4cc987b/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c21dd566c51d390b103d5ed33477581ddac2daa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c21dd566c51d390b103d5ed33477581ddac2daa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c21dd566c51d390b103d5ed33477581ddac2daa"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8841cf912935ff108e5ee1e9e029dcfe83444284",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26a9baffe9fece08bf39ca3b06c24cf5e4cc987b/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26a9baffe9fece08bf39ca3b06c24cf5e4cc987b/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=26a9baffe9fece08bf39ca3b06c24cf5e4cc987b",
        "patch": "@@ -198,6 +198,11 @@ class WalletImpl : public Wallet\n         LOCK(m_wallet->cs_wallet);\n         return m_wallet->GetDestValues(prefix);\n     }\n+    bool displayAddress(const CTxDestination& dest) override\n+    {\n+        LOCK(m_wallet->cs_wallet);\n+        return m_wallet->DisplayAddress(dest);\n+    }\n     void lockCoin(const COutPoint& output) override\n     {\n         LOCK(m_wallet->cs_wallet);"
      },
      {
        "sha": "db7a4a635eb078708132a138c936edcc1e564ea5",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26a9baffe9fece08bf39ca3b06c24cf5e4cc987b/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26a9baffe9fece08bf39ca3b06c24cf5e4cc987b/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=26a9baffe9fece08bf39ca3b06c24cf5e4cc987b",
        "patch": "@@ -119,6 +119,9 @@ class Wallet\n     //! Get dest values with prefix.\n     virtual std::vector<std::string> getDestValues(const std::string& prefix) = 0;\n \n+    //! Display address on external signer\n+    virtual bool displayAddress(const CTxDestination& dest) = 0;\n+\n     //! Lock coin.\n     virtual void lockCoin(const COutPoint& output) = 0;\n "
      }
    ]
  },
  {
    "sha": "b5c46cb99e093576c6c84e484c5ffbe11198666e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNWM0NmNiOTllMDkzNTc2YzZjODRlNDg0YzVmZmJlMTExOTg2NjZl",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-09-16T17:01:04Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:43Z"
      },
      "message": "[gui] display address on external signer",
      "tree": {
        "sha": "4d7fda595e651cf75896b59eb7b7976947304225",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d7fda595e651cf75896b59eb7b7976947304225"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5c46cb99e093576c6c84e484c5ffbe11198666e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o83cACgkQV/+b28ww\nEAkBfhAApAYYfeI1jJUUVYeQRdMgn6Dme66pwvCv4xgAIxtHuNq7560wl3J2aUj2\nYToslj3VGuEmpwIYgG83urWLm5aFzyJYAcc0PO2tsggJVaGQYSki57YNw1Vo+jlg\nhhJlyKmxOGb5pYS6TiThglT5C0vhHL2bqWKgK0acIvVhOLqRTSFYCG3MvsxK2tcE\nZYmF1E1+26D6tifSI9PMOMUspUY+VU1dbex4+lI7TsZ5B8jJvEdkkcvCui9gohX5\nRRSAiE4XCJWR67nTJ7jjlA0lDlkCULw5H+t6+uG4PbcpL4yqiyOBWmJOEtvneAZC\nT/CFEODYTKmI5rf1AKK2vfHdUTQ+qtIfwuquZdwpCSBZQsi4p/Ndyj+0G62Y7mlI\nXMyfvqv1Rv7/sxumuOEvQVgzPVHhkavqeMmmDNWXZQao09AhiQdnNJDLjdbxbZPi\nSvZEQRAxekMEi/tBY9bmmZ3REiv7aJV10+/xTztkTXHfJ0/Fl20zIWG0Xb/lc2Ni\nPu8VgKsCTOsUGyH6/ATFdSe83TDp7PJCj+DcH94slqldCLgHk/u3SygrJ0iT8JXc\nhwsmziWcAf23NHNhmJWO8oTklDrjLfJjbzbTyzL6q21lN/Zi6gkTBgT+JwLP+Trb\np8yaZeRK+7MV1YVkA6mMRjBprmn6FdWiWpn+tr5KFZE0Zgdsl1U=\n=lX8j\n-----END PGP SIGNATURE-----",
        "payload": "tree 4d7fda595e651cf75896b59eb7b7976947304225\nparent 26a9baffe9fece08bf39ca3b06c24cf5e4cc987b\nauthor Sjors Provoost <sjors@sprovoost.nl> 1568653264 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324983 +0200\n\n[gui] display address on external signer\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5c46cb99e093576c6c84e484c5ffbe11198666e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b5c46cb99e093576c6c84e484c5ffbe11198666e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5c46cb99e093576c6c84e484c5ffbe11198666e/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "26a9baffe9fece08bf39ca3b06c24cf5e4cc987b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26a9baffe9fece08bf39ca3b06c24cf5e4cc987b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/26a9baffe9fece08bf39ca3b06c24cf5e4cc987b"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 38,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b589edf220d5033f7aa913531e62f1cba6daaadb",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5c46cb99e093576c6c84e484c5ffbe11198666e/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5c46cb99e093576c6c84e484c5ffbe11198666e/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=b5c46cb99e093576c6c84e484c5ffbe11198666e",
        "patch": "@@ -441,6 +441,7 @@ class WalletImpl : public Wallet\n     unsigned int getConfirmTarget() override { return m_wallet->m_confirm_target; }\n     bool hdEnabled() override { return m_wallet->IsHDEnabled(); }\n     bool canGetAddresses() override { return m_wallet->CanGetAddresses(); }\n+    bool hasExternalSigner() override { return m_wallet->IsWalletFlagSet(WALLET_FLAG_EXTERNAL_SIGNER); }\n     bool privateKeysDisabled() override { return m_wallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS); }\n     OutputType getDefaultAddressType() override { return m_wallet->m_default_address_type; }\n     OutputType getDefaultChangeType() override { return m_wallet->m_default_change_type; }"
      },
      {
        "sha": "fe235ac8dde687fa6c8fdf658a71860fe6f36aa8",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5c46cb99e093576c6c84e484c5ffbe11198666e/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5c46cb99e093576c6c84e484c5ffbe11198666e/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=b5c46cb99e093576c6c84e484c5ffbe11198666e",
        "patch": "@@ -255,6 +255,9 @@ class Wallet\n     // Return whether private keys enabled.\n     virtual bool privateKeysDisabled() = 0;\n \n+    // Return whether wallet uses an external signer.\n+    virtual bool hasExternalSigner() = 0;\n+\n     // Get default address type.\n     virtual OutputType getDefaultAddressType() = 0;\n "
      },
      {
        "sha": "c07314a1c5b5b4eda8a465d36a75a1732d68eda1",
        "filename": "src/qt/forms/receiverequestdialog.ui",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5c46cb99e093576c6c84e484c5ffbe11198666e/src/qt/forms/receiverequestdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5c46cb99e093576c6c84e484c5ffbe11198666e/src/qt/forms/receiverequestdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receiverequestdialog.ui?ref=b5c46cb99e093576c6c84e484c5ffbe11198666e",
        "patch": "@@ -254,6 +254,19 @@\n        </property>\n       </widget>\n      </item>\n+     <item>\n+      <widget class=\"QPushButton\" name=\"btnVerify\">\n+       <property name=\"text\">\n+        <string>&amp;Verify</string>\n+       </property>\n+       <property name=\"toolTip\">\n+        <string>Verify this address on e.g. a hardware wallet screen</string>\n+       </property>\n+       <property name=\"autoDefault\">\n+        <bool>false</bool>\n+       </property>\n+      </widget>\n+     </item>\n      <item>\n       <widget class=\"QPushButton\" name=\"btnSaveAs\">\n        <property name=\"text\">"
      },
      {
        "sha": "005c2611abf797b121feefa559e16980213b6165",
        "filename": "src/qt/receiverequestdialog.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5c46cb99e093576c6c84e484c5ffbe11198666e/src/qt/receiverequestdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5c46cb99e093576c6c84e484c5ffbe11198666e/src/qt/receiverequestdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.cpp?ref=b5c46cb99e093576c6c84e484c5ffbe11198666e",
        "patch": "@@ -89,6 +89,8 @@ void ReceiveRequestDialog::setInfo(const SendCoinsRecipient &_info)\n         ui->wallet_tag->hide();\n         ui->wallet_content->hide();\n     }\n+\n+    ui->btnVerify->setVisible(this->model->wallet().hasExternalSigner());\n }\n \n void ReceiveRequestDialog::updateDisplayUnit()\n@@ -106,3 +108,8 @@ void ReceiveRequestDialog::on_btnCopyAddress_clicked()\n {\n     GUIUtil::setClipboard(info.address);\n }\n+\n+void ReceiveRequestDialog::on_btnVerify_clicked()\n+{\n+    model->displayAddress(info.address.toStdString());\n+}"
      },
      {
        "sha": "67ee8fb77ce69bd549fa81aed4ac31dc4450e37a",
        "filename": "src/qt/receiverequestdialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5c46cb99e093576c6c84e484c5ffbe11198666e/src/qt/receiverequestdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5c46cb99e093576c6c84e484c5ffbe11198666e/src/qt/receiverequestdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.h?ref=b5c46cb99e093576c6c84e484c5ffbe11198666e",
        "patch": "@@ -29,6 +29,7 @@ class ReceiveRequestDialog : public QDialog\n private Q_SLOTS:\n     void on_btnCopyURI_clicked();\n     void on_btnCopyAddress_clicked();\n+    void on_btnVerify_clicked();\n     void updateDisplayUnit();\n \n private:"
      },
      {
        "sha": "3cf64445e0993173f241b559be5271d4d647f42b",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5c46cb99e093576c6c84e484c5ffbe11198666e/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5c46cb99e093576c6c84e484c5ffbe11198666e/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=b5c46cb99e093576c6c84e484c5ffbe11198666e",
        "patch": "@@ -563,6 +563,18 @@ bool WalletModel::bumpFee(uint256 hash, uint256& new_hash)\n     return true;\n }\n \n+bool WalletModel::displayAddress(std::string sAddress)\n+{\n+    CTxDestination dest = DecodeDestination(sAddress);\n+    bool res = false;\n+    try {\n+        res = m_wallet->displayAddress(dest);\n+    } catch (const ExternalSignerException& e) {\n+        QMessageBox::critical(nullptr, tr(\"Can't display address\"), e.what());\n+    }\n+    return res;\n+}\n+\n bool WalletModel::isWalletEnabled()\n {\n    return !gArgs.GetBoolArg(\"-disablewallet\", DEFAULT_DISABLE_WALLET);"
      },
      {
        "sha": "9807797d4d7c14dd41601f6fc20abb8b28d9cc95",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5c46cb99e093576c6c84e484c5ffbe11198666e/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5c46cb99e093576c6c84e484c5ffbe11198666e/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=b5c46cb99e093576c6c84e484c5ffbe11198666e",
        "patch": "@@ -139,6 +139,7 @@ class WalletModel : public QObject\n     bool saveReceiveRequest(const std::string &sAddress, const int64_t nId, const std::string &sRequest);\n \n     bool bumpFee(uint256 hash, uint256& new_hash);\n+    bool displayAddress(std::string sAddress);\n \n     static bool isWalletEnabled();\n "
      }
    ]
  },
  {
    "sha": "ee8b40eb2ec0e15e26264abda885592620e38378",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZThiNDBlYjJlYzBlMTVlMjYyNjRhYmRhODg1NTkyNjIwZTM4Mzc4",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-10-29T19:53:49Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:43Z"
      },
      "message": "[gui] node: get external signer list",
      "tree": {
        "sha": "1fdbfd85b1d65049f6e8718a46a7fda55c2f1671",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1fdbfd85b1d65049f6e8718a46a7fda55c2f1671"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee8b40eb2ec0e15e26264abda885592620e38378",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o83cACgkQV/+b28ww\nEAlQ9RAAoZ4LCPzS/uWBZW7DFYY7QIIcEp4Gn3kr3gUKGhn5/9/V6LMaZXPb0RLv\n5zi5uNSSMjXlUArvz25aIi+yq6QIsRULrfv6vQUzRc1l/AfK0sz8itMWvW2qjHoR\n8436aWRT+OXJPIkcQJJVNbtiNDooTrUAAI1t+IIgpTAjrxRzY57YpCCPtMhl2SqC\njasz//J6YyUfbJ0EWeZliDWETw8eOvGYni5kmdm3zaZlsF08k8cmS6Abuunnh1el\noSf44G1WuAik99aSYoSXq4rzSMNyDV42cE2ogydaT4A0TeQ3rfLIaWxVO0ZI8NEl\n0LBnZ7yGW6JpW2WliSX0t/D4IZr5C8hvMUKG8R3QzaZL+s8cED63g+EwxbIKEMPd\nTNwmNtUVTCwV9FOhY141FvC7E0iIEXtPdLji1lUg/ZN00Mt2KE+9Ylo8HYvqVOPf\ncx56BRDnMmKAr25ZJ02BUxGfmB12Xr5k7lfrHRbVvab2ad780T5OxzK54OiFyOHd\nfRcxfAiJQtkAywrtERRhkjOdAL89G7N4PnLEyACMKopl5ccFZijkOdzsZ37QQ9HN\nxcp1EQ7IgTaDKG5Hbb7PqnPdOXIhx/gaVVIxJu9NdQEVpNlLnWutGg3Y2VdHKQ8f\nxqZqBNht3GZDMYclFV2ryZcPZxgHhj/Af+fUQwPgoWUfnSy/Pbs=\n=3860\n-----END PGP SIGNATURE-----",
        "payload": "tree 1fdbfd85b1d65049f6e8718a46a7fda55c2f1671\nparent b5c46cb99e093576c6c84e484c5ffbe11198666e\nauthor Sjors Provoost <sjors@sprovoost.nl> 1572378829 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324983 +0200\n\n[gui] node: get external signer list\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee8b40eb2ec0e15e26264abda885592620e38378",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ee8b40eb2ec0e15e26264abda885592620e38378",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee8b40eb2ec0e15e26264abda885592620e38378/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b5c46cb99e093576c6c84e484c5ffbe11198666e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5c46cb99e093576c6c84e484c5ffbe11198666e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b5c46cb99e093576c6c84e484c5ffbe11198666e"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 50,
      "deletions": 3
    },
    "files": [
      {
        "sha": "a320b5686c02507b7da40d135c8a1541153ab31c",
        "filename": "src/dummywallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee8b40eb2ec0e15e26264abda885592620e38378/src/dummywallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee8b40eb2ec0e15e26264abda885592620e38378/src/dummywallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dummywallet.cpp?ref=ee8b40eb2ec0e15e26264abda885592620e38378",
        "patch": "@@ -92,6 +92,12 @@ std::unique_ptr<interfaces::Handler> HandleLoadWallet(LoadWalletFn load_wallet)\n     throw std::logic_error(\"Wallet function called in non-wallet build.\");\n }\n \n+typedef std::vector<std::pair<std::string, std::string>> ExternalSignerList; // TODO: figure out where to define this\n+ExternalSignerList ListExternalSigners()\n+{\n+    throw std::logic_error(\"Wallet function called in non-wallet build.\");\n+}\n+\n namespace interfaces {\n \n std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet)"
      },
      {
        "sha": "182e3328820b9bfebed54b091ffa2158daaf225c",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee8b40eb2ec0e15e26264abda885592620e38378/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee8b40eb2ec0e15e26264abda885592620e38378/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=ee8b40eb2ec0e15e26264abda885592620e38378",
        "patch": "@@ -44,6 +44,7 @@\n class CWallet;\n fs::path GetWalletDir();\n std::vector<fs::path> ListWalletDir();\n+ExternalSignerList ListExternalSigners();\n std::vector<std::shared_ptr<CWallet>> GetWallets();\n std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string& name, bilingual_str& error, std::vector<bilingual_str>& warnings);\n WalletCreationStatus CreateWallet(interfaces::Chain& chain, const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, bilingual_str& error, std::vector<bilingual_str>& warnings, std::shared_ptr<CWallet>& result);\n@@ -284,6 +285,10 @@ class NodeImpl : public Node\n         status = CreateWallet(*m_context.chain, passphrase, wallet_creation_flags, name, error, warnings, wallet);\n         return MakeWallet(wallet);\n     }\n+    ExternalSignerList ExternalSigners() override\n+    {\n+        return ListExternalSigners();\n+    }\n     std::unique_ptr<Handler> handleInitMessage(InitMessageFn fn) override\n     {\n         return MakeHandler(::uiInterface.InitMessage_connect(fn));"
      },
      {
        "sha": "88e0085fff4ef7c4073ecf5f331400a8860aa3df",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee8b40eb2ec0e15e26264abda885592620e38378/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee8b40eb2ec0e15e26264abda885592620e38378/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=ee8b40eb2ec0e15e26264abda885592620e38378",
        "patch": "@@ -34,6 +34,8 @@ struct CNodeStateStats;\n struct NodeContext;\n struct bilingual_str;\n \n+typedef std::vector<std::pair<std::string, std::string>> ExternalSignerList; // TODO: figure out where to define this\n+\n namespace interfaces {\n class Handler;\n class Wallet;\n@@ -213,6 +215,9 @@ class Node\n     //! Create a wallet from file\n     virtual std::unique_ptr<Wallet> createWallet(const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, bilingual_str& error, std::vector<bilingual_str>& warnings, WalletCreationStatus& status) = 0;\n \n+    //! List external signers\n+    virtual ExternalSignerList ExternalSigners() = 0;\n+\n     //! Register handler for init messages.\n     using InitMessageFn = std::function<void(const std::string& message)>;\n     virtual std::unique_ptr<Handler> handleInitMessage(InitMessageFn fn) = 0;"
      },
      {
        "sha": "0e2f9a251ee597cca121c26a75a991afa93cecfc",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee8b40eb2ec0e15e26264abda885592620e38378/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee8b40eb2ec0e15e26264abda885592620e38378/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=ee8b40eb2ec0e15e26264abda885592620e38378",
        "patch": "@@ -278,6 +278,9 @@ void CreateWalletActivity::finish()\n \n void CreateWalletActivity::create()\n {\n+    // Check for external signers\n+\n+\n     m_create_wallet_dialog = new CreateWalletDialog(m_parent_widget);\n     m_create_wallet_dialog->setWindowModality(Qt::ApplicationModal);\n     m_create_wallet_dialog->show();"
      },
      {
        "sha": "37c15e9cfa7bbd3d093ca74a490d4d07d992a1fd",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee8b40eb2ec0e15e26264abda885592620e38378/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee8b40eb2ec0e15e26264abda885592620e38378/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ee8b40eb2ec0e15e26264abda885592620e38378",
        "patch": "@@ -22,7 +22,6 @@\n #include <wallet/coinselection.h>\n #include <wallet/crypter.h>\n #include <wallet/scriptpubkeyman.h>\n-#include <wallet/externalsigner.h>\n #include <wallet/walletdb.h>\n #include <wallet/walletutil.h>\n \n@@ -91,8 +90,6 @@ constexpr CAmount DEFAULT_TRANSACTION_MAXFEE{COIN / 10};\n constexpr CAmount HIGH_TX_FEE_PER_KB{COIN / 100};\n //! -maxtxfee will warn if called with a higher fee than this amount (in satoshis)\n constexpr CAmount HIGH_MAX_TX_FEE{100 * HIGH_TX_FEE_PER_KB};\n-//! -signer default\n-static const std::string DEFAULT_EXTERNAL_SIGNER = \"\";\n //! Pre-calculated constants for input size estimation in *virtual size*\n static constexpr size_t DUMMY_NESTED_P2WPKH_INPUT_SIZE = 91;\n \n@@ -618,6 +615,7 @@ struct CoinSelectionParams\n     CoinSelectionParams() {}\n };\n \n+typedef std::vector<std::pair<std::string, std::string>> ExternalSignerList;\n class WalletRescanReserver; //forward declarations for ScanForWalletTransactions/RescanFromTime\n /**\n  * A CWallet maintains a set of transactions and balances, and provides the ability to create new transactions."
      },
      {
        "sha": "8ac992dcf9eaac2dbdf123ac0eb0318bb6ba1ca6",
        "filename": "src/wallet/walletutil.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee8b40eb2ec0e15e26264abda885592620e38378/src/wallet/walletutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee8b40eb2ec0e15e26264abda885592620e38378/src/wallet/walletutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletutil.cpp?ref=ee8b40eb2ec0e15e26264abda885592620e38378",
        "patch": "@@ -4,6 +4,7 @@\n \n #include <wallet/walletutil.h>\n \n+#include <chainparams.h>\n #include <logging.h>\n #include <util/system.h>\n \n@@ -92,6 +93,24 @@ std::vector<fs::path> ListWalletDir()\n     return paths;\n }\n \n+ExternalSignerList ListExternalSigners()\n+{\n+    ExternalSignerList result = {};\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+    const std::string command = gArgs.GetArg(\"-signer\", DEFAULT_EXTERNAL_SIGNER);\n+    if (command == \"\") return result;\n+    std::string chain = gArgs.GetChainName();\n+    const bool mainnet = chain == CBaseChainParams::MAIN;\n+    std::vector<ExternalSigner> signers;\n+    ExternalSigner::Enumerate(command, signers, mainnet, /* ignore_errors */ false);\n+    if (signers.empty()) return {};\n+    for (ExternalSigner signer : signers) {\n+        result.push_back(make_pair(signer.m_fingerprint, signer.m_name));\n+    }\n+#endif\n+    return result;\n+}\n+\n WalletLocation::WalletLocation(const std::string& name)\n     : m_name(name)\n     , m_path(fs::absolute(name, GetWalletDir()))"
      },
      {
        "sha": "c4aec7b91118e508ed751e413cb041f0f65bb201",
        "filename": "src/wallet/walletutil.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee8b40eb2ec0e15e26264abda885592620e38378/src/wallet/walletutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee8b40eb2ec0e15e26264abda885592620e38378/src/wallet/walletutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletutil.h?ref=ee8b40eb2ec0e15e26264abda885592620e38378",
        "patch": "@@ -7,9 +7,13 @@\n \n #include <fs.h>\n #include <script/descriptor.h>\n+#include <wallet/externalsigner.h>\n \n #include <vector>\n \n+//! -signer default\n+static const std::string DEFAULT_EXTERNAL_SIGNER = \"\";\n+\n /** (client) version numbers for particular wallet features */\n enum WalletFeature\n {\n@@ -70,6 +74,13 @@ fs::path GetWalletDir();\n //! Get wallets in wallet directory.\n std::vector<fs::path> ListWalletDir();\n \n+typedef std::vector<std::pair<std::string, std::string>> ExternalSignerList; // TODO: figure out where to define this\n+/**\n+ * Calls enumerate if -signer is configured and returns a list of signer\n+ * fingerpints and names. Otherwise returns an empty list.\n+ */\n+ExternalSignerList ListExternalSigners();\n+\n //! The WalletLocation class provides wallet information.\n class WalletLocation final\n {"
      }
    ]
  },
  {
    "sha": "c168ed00285525a697e9ff71bf34a20cefa8a591",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMTY4ZWQwMDI4NTUyNWE2OTdlOWZmNzFiZjM0YTIwY2VmYThhNTkx",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-07T18:06:40Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:43Z"
      },
      "message": "[gui] wallet creation detects external signer",
      "tree": {
        "sha": "e15219d061d79bb6e5eb0db05023d79c6d6f0a5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e15219d061d79bb6e5eb0db05023d79c6d6f0a5f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c168ed00285525a697e9ff71bf34a20cefa8a591",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o83cACgkQV/+b28ww\nEAl7OQ//bs6EE+heeOUARHMalZqihklKciZpPDlUVrSl7mrR0t5Jt7fEZLKk/fKt\nNDAtat23ai4Sp/SDVM+43ijQB+tNdx4n0z+o47kRhd0taQJv6O76KJNAR0dg3UVw\ng6meQ21dJi9NODtZWXzN2aCLNt/1th6/Fex0jSBS4aRYh8UyEB9NVEgSnNlYnvuD\nHCAgu1iX3Yy0/teBUpOUEVc6m8TOt5KdnOWnp2Lf2W1y8N6PDhGxo7TI4fLkYooN\nGGDXhxX5cQqS/A4JucQVYfSEDqR4BKZmW6HQHhWmf1PQtIxOkpCVM/EIXZOKcdgL\nZK7XLj33WTLPd53Zw8TDpbgEmt9nfb433feCCkrwt/uox5s/97DSzWuiI/jEbeAM\nOpCWZROWS4PP6DaJi4lWOjQySqOjjpmvlaS0wafYOt20cjcgo/maivS7h5QCOkme\njODt3bfiSmRJU3OZ26KO0e05AA3psGNgSpPzd7RAV5ySk1+OFIc15w4icYI6SV/K\nUdTGpe4kbdVHhlqZFv9Me1rVRgCuIMPaO5rlkpy/b9qk2NVN5QPUjO86/kBX03Eb\nx0FbE9PciRcxhoLHYAE1ROXN/yKVVqVm1G2GRHrUMTXqAJO9J62XeGDJlO4ZAbPz\n57StSTUut82UWMB3gPUt74n+O9m1AceHl+29oXW/dbFF+5up6Uc=\n=r1YI\n-----END PGP SIGNATURE-----",
        "payload": "tree e15219d061d79bb6e5eb0db05023d79c6d6f0a5f\nparent ee8b40eb2ec0e15e26264abda885592620e38378\nauthor Sjors Provoost <sjors@sprovoost.nl> 1573150000 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324983 +0200\n\n[gui] wallet creation detects external signer\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c168ed00285525a697e9ff71bf34a20cefa8a591",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c168ed00285525a697e9ff71bf34a20cefa8a591",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c168ed00285525a697e9ff71bf34a20cefa8a591/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ee8b40eb2ec0e15e26264abda885592620e38378",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee8b40eb2ec0e15e26264abda885592620e38378",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ee8b40eb2ec0e15e26264abda885592620e38378"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 25,
      "deletions": 4
    },
    "files": [
      {
        "sha": "88a878a85e9b0b6aef892674682ee4619700807e",
        "filename": "src/qt/createwalletdialog.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c168ed00285525a697e9ff71bf34a20cefa8a591/src/qt/createwalletdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c168ed00285525a697e9ff71bf34a20cefa8a591/src/qt/createwalletdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/createwalletdialog.cpp?ref=c168ed00285525a697e9ff71bf34a20cefa8a591",
        "patch": "@@ -11,7 +11,7 @@\n \n #include <QPushButton>\n \n-CreateWalletDialog::CreateWalletDialog(QWidget* parent) :\n+CreateWalletDialog::CreateWalletDialog(ExternalSignerList signers, QWidget* parent) :\n     QDialog(parent),\n     ui(new Ui::CreateWalletDialog)\n {\n@@ -56,6 +56,20 @@ CreateWalletDialog::CreateWalletDialog(QWidget* parent) :\n         ui->descriptor_checkbox->setEnabled(!checked);\n     });\n \n+    if (!signers.empty()) {\n+        ui->external_signer_checkbox->setEnabled(true);\n+        ui->external_signer_checkbox->setChecked(true);\n+        ui->encrypt_wallet_checkbox->setEnabled(false);\n+        ui->encrypt_wallet_checkbox->setChecked(false);\n+        ui->disable_privkeys_checkbox->setEnabled(false);\n+        ui->disable_privkeys_checkbox->setChecked(true);\n+        ui->blank_wallet_checkbox->setEnabled(false);\n+        ui->blank_wallet_checkbox->setChecked(false);\n+        const std::string label = signers[0].second;\n+        ui->wallet_name_line_edit->setText(QString::fromStdString(label));\n+        ui->buttonBox->button(QDialogButtonBox::Ok)->setEnabled(true);\n+    }\n+\n }\n \n CreateWalletDialog::~CreateWalletDialog()"
      },
      {
        "sha": "1fde9f9eed9245a2c209630735db9af105be6c41",
        "filename": "src/qt/createwalletdialog.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c168ed00285525a697e9ff71bf34a20cefa8a591/src/qt/createwalletdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c168ed00285525a697e9ff71bf34a20cefa8a591/src/qt/createwalletdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/createwalletdialog.h?ref=c168ed00285525a697e9ff71bf34a20cefa8a591",
        "patch": "@@ -13,14 +13,16 @@ namespace Ui {\n     class CreateWalletDialog;\n }\n \n+typedef std::vector<std::pair<std::string, std::string>> ExternalSignerList; // TODO: figure out where to define this\n+\n /** Dialog for creating wallets\n  */\n class CreateWalletDialog : public QDialog\n {\n     Q_OBJECT\n \n public:\n-    explicit CreateWalletDialog(QWidget* parent);\n+    explicit CreateWalletDialog(ExternalSignerList signers, QWidget* parent);\n     virtual ~CreateWalletDialog();\n \n     QString walletName() const;"
      },
      {
        "sha": "a95d7c311457ea71ffcceebaaa3ea8ad93c875d2",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c168ed00285525a697e9ff71bf34a20cefa8a591/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c168ed00285525a697e9ff71bf34a20cefa8a591/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=c168ed00285525a697e9ff71bf34a20cefa8a591",
        "patch": "@@ -279,9 +279,14 @@ void CreateWalletActivity::finish()\n void CreateWalletActivity::create()\n {\n     // Check for external signers\n+    ExternalSignerList signers;\n+    try {\n+        signers = node().ExternalSigners();\n+    } catch (const ExternalSignerException& e) {\n+        QMessageBox::critical(nullptr, tr(\"Can't list signers\"), e.what());\n+    }\n \n-\n-    m_create_wallet_dialog = new CreateWalletDialog(m_parent_widget);\n+    m_create_wallet_dialog = new CreateWalletDialog(signers, m_parent_widget);\n     m_create_wallet_dialog->setWindowModality(Qt::ApplicationModal);\n     m_create_wallet_dialog->show();\n "
      }
    ]
  },
  {
    "sha": "6f9259c790852dfe2a05530e01fe39108a879d29",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZjkyNTljNzkwODUyZGZlMmEwNTUzMGUwMWZlMzkxMDhhODc5ZDI5",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-02-21T21:28:40Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:29:43Z"
      },
      "message": "[gui] send: use external signer",
      "tree": {
        "sha": "500ca17ec3871798699a20483060d2aa03fb7761",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/500ca17ec3871798699a20483060d2aa03fb7761"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f9259c790852dfe2a05530e01fe39108a879d29",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o83cACgkQV/+b28ww\nEAnEJg//cH9yj8wxx84o1h9wdEnbk6/z22NDzQPqIcTan+B/Xf6yxve0Lg34DGtu\nVUd+Ej4ys9rXfx0MuKzsmJVJME+szmhxbcod3IDmPuSxiNSVv5iIbfJsa+sBhno1\nZA21zlrUv3mstOCH6wZcopKGtnBWJ53r6io2rP3NXnntrzN31AHyzNBikeXelozt\nUBri+2vUKjvVfZN1Jf1ACCfAbfbQIdeowDD1B9CTIlMJFfUAvB19rjWG4jj61arU\nsUnfMxxqfYgKFqWjr4bVeWQtBx5En/EjGfbAIoc6xnIY7kHulBeRB89xJNBIoI+8\nTi9hgbDNFvCT2wsqOOLqkvIrxznyscO5VT9n0rW0rDMq+D8NTFlDwPCSmG4fHekg\nNp5lWwIcFooMsYW7kOEwdiGsWbGWWBHJeLLW4v2+4n75jzenw7DDmsQUtWDYcuJc\ntc7qu1SCStHSuE+CsLU2rHMRgVIgNvWCHQ/QjpvjmIGG2nci0sSlp0dBp1TImGHK\n/TjAgkpCS9lQL26c+3u1p+I8Q5Qdh/6SYTmWNzhja6r4FMqWpqO+S5SOZEchEg1U\nCaSj4cdIteYwmkvmUoxJjV64TLY2P78oXLIIsKVvyji3fNquFx2mtPfuztVu2hTW\nTDFk2k+g71OAY9gcgAt7fISu4rqvUotQN3n5+O+kdLKPaOWTAoA=\n=1AHn\n-----END PGP SIGNATURE-----",
        "payload": "tree 500ca17ec3871798699a20483060d2aa03fb7761\nparent c168ed00285525a697e9ff71bf34a20cefa8a591\nauthor Sjors Provoost <sjors@sprovoost.nl> 1582320520 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592324983 +0200\n\n[gui] send: use external signer\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f9259c790852dfe2a05530e01fe39108a879d29",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6f9259c790852dfe2a05530e01fe39108a879d29",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f9259c790852dfe2a05530e01fe39108a879d29/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c168ed00285525a697e9ff71bf34a20cefa8a591",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c168ed00285525a697e9ff71bf34a20cefa8a591",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c168ed00285525a697e9ff71bf34a20cefa8a591"
      }
    ],
    "stats": {
      "total": 134,
      "additions": 86,
      "deletions": 48
    },
    "files": [
      {
        "sha": "4c2e955e1352dc9514edd94386e0fcaf0f0df622",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 86,
        "deletions": 48,
        "changes": 134,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f9259c790852dfe2a05530e01fe39108a879d29/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f9259c790852dfe2a05530e01fe39108a879d29/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=6f9259c790852dfe2a05530e01fe39108a879d29",
        "patch": "@@ -188,7 +188,16 @@ void SendCoinsDialog::setModel(WalletModel *_model)\n         // set default rbf checkbox state\n         ui->optInRBF->setCheckState(Qt::Checked);\n \n-        if (model->wallet().privateKeysDisabled()) {\n+        if (model->wallet().hasExternalSigner()) {\n+            ui->sendButton->setText(tr(\"Sign on device\"));\n+            if (gArgs.GetArg(\"-signer\", \"\") != \"\") {\n+                ui->sendButton->setEnabled(true);\n+                ui->sendButton->setToolTip(tr(\"Connect your hardware wallet first.\"));\n+            } else {\n+                ui->sendButton->setEnabled(false);\n+                ui->sendButton->setToolTip(tr(\"Set external signer script path in Options -> Wallet\"));\n+            }\n+        } else if (model->wallet().privateKeysDisabled()) {\n             ui->sendButton->setText(tr(\"Cr&eate Unsigned\"));\n             ui->sendButton->setToolTip(tr(\"Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.\").arg(PACKAGE_NAME));\n         }\n@@ -302,14 +311,14 @@ bool SendCoinsDialog::PrepareSendText(QString& question_string, QString& informa\n         formatted.append(recipientElement);\n     }\n \n-    if (model->wallet().privateKeysDisabled()) {\n+    if (model->wallet().privateKeysDisabled() && !model->wallet().hasExternalSigner()) {\n         question_string.append(tr(\"Do you want to draft this transaction?\"));\n     } else {\n         question_string.append(tr(\"Are you sure you want to send?\"));\n     }\n \n     question_string.append(\"<br /><span style='font-size:10pt;'>\");\n-    if (model->wallet().privateKeysDisabled()) {\n+    if (model->wallet().privateKeysDisabled() && !model->wallet().hasExternalSigner()) {\n         question_string.append(tr(\"Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can save or copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.\").arg(PACKAGE_NAME));\n     } else {\n         question_string.append(tr(\"Please, review your transaction.\"));\n@@ -375,8 +384,8 @@ void SendCoinsDialog::on_sendButton_clicked()\n     if (!PrepareSendText(question_string, informative_text, detailed_text)) return;\n     assert(m_current_transaction);\n \n-    const QString confirmation = model->wallet().privateKeysDisabled() ? tr(\"Confirm transaction proposal\") : tr(\"Confirm send coins\");\n-    const QString confirmButtonText = model->wallet().privateKeysDisabled() ? tr(\"Create Unsigned\") : tr(\"Send\");\n+    const QString confirmation = model->wallet().privateKeysDisabled() && !model->wallet().hasExternalSigner() ? tr(\"Confirm transaction proposal\") : tr(\"Confirm send coins\");\n+    const QString confirmButtonText = model->wallet().privateKeysDisabled() && !model->wallet().hasExternalSigner() ? tr(\"Create Unsigned\") : tr(\"Send\");\n     SendConfirmationDialog confirmationDialog(confirmation, question_string, informative_text, detailed_text, SEND_CONFIRM_DELAY, confirmButtonText, this);\n     confirmationDialog.exec();\n     QMessageBox::StandardButton retval = static_cast<QMessageBox::StandardButton>(confirmationDialog.result());\n@@ -392,49 +401,76 @@ void SendCoinsDialog::on_sendButton_clicked()\n         CMutableTransaction mtx = CMutableTransaction{*(m_current_transaction->getWtx())};\n         PartiallySignedTransaction psbtx(mtx);\n         bool complete = false;\n-        const TransactionError err = model->wallet().fillPSBT(SIGHASH_ALL, false /* sign */, true /* bip32derivs */, psbtx, complete);\n-        assert(!complete);\n-        assert(err == TransactionError::OK);\n-        // Serialize the PSBT\n-        CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n-        ssTx << psbtx;\n-        GUIUtil::setClipboard(EncodeBase64(ssTx.str()).c_str());\n-        QMessageBox msgBox;\n-        msgBox.setText(\"Unsigned Transaction\");\n-        msgBox.setInformativeText(\"The PSBT has been copied to the clipboard. You can also save it.\");\n-        msgBox.setStandardButtons(QMessageBox::Save | QMessageBox::Discard);\n-        msgBox.setDefaultButton(QMessageBox::Discard);\n-        switch (msgBox.exec()) {\n-        case QMessageBox::Save: {\n-            QString selectedFilter;\n-            QString fileNameSuggestion = \"\";\n-            bool first = true;\n-            for (const SendCoinsRecipient &rcp : m_current_transaction->getRecipients()) {\n-                if (!first) {\n-                    fileNameSuggestion.append(\" - \");\n-                }\n-                QString labelOrAddress = rcp.label.isEmpty() ? rcp.address : rcp.label;\n-                QString amount = BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), rcp.amount);\n-                fileNameSuggestion.append(labelOrAddress + \"-\" + amount);\n-                first = false;\n-            }\n-            fileNameSuggestion.append(\".psbt\");\n-            QString filename = GUIUtil::getSaveFileName(this,\n-                tr(\"Save Transaction Data\"), fileNameSuggestion,\n-                tr(\"Partially Signed Transaction (Binary) (*.psbt)\"), &selectedFilter);\n-            if (filename.isEmpty()) {\n+        // Always fill without signing first, to prevents an external signer\n+        // from being called prematurely. This is not expensive.\n+        TransactionError err = model->wallet().fillPSBT(SIGHASH_ALL, false /* sign */, true /* bip32derivs */, psbtx, complete);\n+        if (model->wallet().hasExternalSigner()) {\n+            try {\n+                err = model->wallet().fillPSBT(SIGHASH_ALL, true /* sign */, true /* bip32derivs */, psbtx, complete);\n+            } catch (const ExternalSignerException& e) {\n+                QMessageBox::critical(nullptr, tr(\"Sign failed\"), e.what());\n+                send_failure = true;\n                 return;\n             }\n-            std::ofstream out(filename.toLocal8Bit().data());\n-            out << ssTx.str();\n-            out.close();\n-            Q_EMIT message(tr(\"PSBT saved\"), \"PSBT saved to disk\", CClientUIInterface::MSG_INFORMATION);\n-            break;\n         }\n-        case QMessageBox::Discard:\n-            break;\n-        default:\n-            assert(false);\n+        // fillPSBT does not always properly finalize\n+        complete = FinalizeAndExtractPSBT(psbtx, mtx);\n+        if (complete) {\n+            std::string err_string;\n+            TransactionError result = BroadcastTransaction(*clientModel->node().context(), MakeTransactionRef(mtx), err_string, COIN / 10, /* relay */ true, /* await_callback */ false);\n+\n+            if (result == TransactionError::OK) {\n+                Q_EMIT coinsSent(mtx.GetHash());\n+            } else {\n+                processSendCoinsReturn(WalletModel::TransactionCreationFailed);\n+                send_failure = true;\n+            }\n+        } else if (err == TransactionError::OK) {\n+            // Serialize the PSBT\n+            CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n+            ssTx << psbtx;\n+            GUIUtil::setClipboard(EncodeBase64(ssTx.str()).c_str());\n+            QMessageBox msgBox;\n+            msgBox.setText(\"Unsigned Transaction\");\n+            msgBox.setInformativeText(\"The PSBT has been copied to the clipboard. You can also save it.\");\n+            msgBox.setStandardButtons(QMessageBox::Save | QMessageBox::Discard);\n+            msgBox.setDefaultButton(QMessageBox::Discard);\n+            switch (msgBox.exec()) {\n+            case QMessageBox::Save: {\n+                QString selectedFilter;\n+                QString fileNameSuggestion = \"\";\n+                bool first = true;\n+                for (const SendCoinsRecipient &rcp : m_current_transaction->getRecipients()) {\n+                    if (!first) {\n+                        fileNameSuggestion.append(\" - \");\n+                    }\n+                    QString labelOrAddress = rcp.label.isEmpty() ? rcp.address : rcp.label;\n+                    QString amount = BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), rcp.amount);\n+                    fileNameSuggestion.append(labelOrAddress + \"-\" + amount);\n+                    first = false;\n+                }\n+                fileNameSuggestion.append(\".psbt\");\n+                QString filename = GUIUtil::getSaveFileName(this,\n+                    tr(\"Save Transaction Data\"), fileNameSuggestion,\n+                    tr(\"Partially Signed Transaction (Binary) (*.psbt)\"), &selectedFilter);\n+                if (filename.isEmpty()) {\n+                    return;\n+                }\n+                std::ofstream out(filename.toLocal8Bit().data());\n+                out << ssTx.str();\n+                out.close();\n+                Q_EMIT message(tr(\"PSBT saved\"), \"PSBT saved to disk\", CClientUIInterface::MSG_INFORMATION);\n+                break;\n+            }\n+            case QMessageBox::Discard:\n+                break;\n+            default:\n+                assert(false);\n+            }\n+        } else {\n+            // TODO: process error\n+            processSendCoinsReturn(WalletModel::TransactionCreationFailed);\n+            send_failure = true;\n         }\n     } else {\n         // now send the prepared transaction\n@@ -602,7 +638,9 @@ void SendCoinsDialog::setBalance(const interfaces::WalletBalances& balances)\n     if(model && model->getOptionsModel())\n     {\n         CAmount balance = balances.balance;\n-        if (model->wallet().privateKeysDisabled()) {\n+        if (model->wallet().hasExternalSigner()) {\n+            ui->labelBalanceName->setText(tr(\"External balance:\"));\n+        } else if (model->wallet().privateKeysDisabled()) {\n             balance = balances.watch_only_balance;\n             ui->labelBalanceName->setText(tr(\"Watch-only balance:\"));\n         }\n@@ -686,7 +724,7 @@ void SendCoinsDialog::on_buttonMinimizeFee_clicked()\n void SendCoinsDialog::useAvailableBalance(SendCoinsEntry* entry)\n {\n     // Include watch-only for wallets without private key\n-    m_coin_control->fAllowWatchOnly = model->wallet().privateKeysDisabled();\n+    m_coin_control->fAllowWatchOnly = model->wallet().privateKeysDisabled() && !model->wallet().hasExternalSigner();\n \n     // Calculate available amount to send.\n     CAmount amount = model->wallet().getAvailableBalance(*m_coin_control);\n@@ -741,7 +779,7 @@ void SendCoinsDialog::updateCoinControlState(CCoinControl& ctrl)\n     ctrl.m_confirm_target = getConfTargetForIndex(ui->confTargetSelector->currentIndex());\n     ctrl.m_signal_bip125_rbf = ui->optInRBF->isChecked();\n     // Include watch-only for wallets without private key\n-    ctrl.fAllowWatchOnly = model->wallet().privateKeysDisabled();\n+    ctrl.fAllowWatchOnly = model->wallet().privateKeysDisabled() && !model->wallet().hasExternalSigner();\n }\n \n void SendCoinsDialog::updateSmartFeeLabel()"
      }
    ]
  },
  {
    "sha": "e306aaa3c0146a9aa613e038d0997b040cf5075f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMzA2YWFhM2MwMTQ2YTlhYTYxM2UwMzhkMDk5N2IwNDBjZjUwNzVm",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:56:11Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-06-16T16:56:11Z"
      },
      "message": "[build] enable external signer by default for GUI",
      "tree": {
        "sha": "b6e55e9e064cdfe3553774df4156fe06e7e158e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b6e55e9e064cdfe3553774df4156fe06e7e158e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e306aaa3c0146a9aa613e038d0997b040cf5075f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl7o+asACgkQV/+b28ww\nEAlF1Q/+KAuYiX0Ng6FAphe7qXjCzRtPKgLOo2baINt52r3E6RReNp/FhOGXehjp\nR7/7OyedOy/43M94X1ebmYhNRnlmsLGtjOFgdWEm/9FcCECOr6NchSCDi+y3bVo+\njSnZuIbo3c1zyBbW2prxw1HGuiFhnrRQvFMy/rs9ZXJGzRquL1G7ctGvjZbjFlmK\nPzBraK1mMCO81uSBM3/JilexFRT1jiDejwQDMBEje7XxeO15Y6bzhYJEK9CS7ptp\n/55AdFftQArbx3ZSLvP6SfDXsKh7lSM/HuXE8JFR8XSqhOKnFpwhChuWMQM12AC+\nC6znQIyfvoIybCI+W5q+1Z87K9QP2nAHVLncNuT1lxgBWcFI3ZkWczcmAWD0PIOu\nfUZhjlVMiVRYyIuJhT+Q5gOK/OxMYyfja8VLezfXiYuNChn3NOhRK79rQjMto45o\n15LQkMj2b7g73JpnXOFW6x7RGK1vSgG2iHLybiPPMeJRK8oFRFipFM4s5SfTiPPi\nL11nPs5lJtSMzbSr7LfFiYQDg/FJQdnTxZCRw57kVIv8Gg9wDk2ZY6xUFEdPS/IG\nIrNYq0yfV55/sHmgl5DIj1bxeU4xbsp0bjC75bOEQgU7MimqOtggYxWEm3ib1I7q\nIqRJLcmD/89v8vyF6qDuDogh7YBigltqNeYbSHUIzf8P2uDgQtY=\n=igyM\n-----END PGP SIGNATURE-----",
        "payload": "tree b6e55e9e064cdfe3553774df4156fe06e7e158e1\nparent 6f9259c790852dfe2a05530e01fe39108a879d29\nauthor Sjors Provoost <sjors@sprovoost.nl> 1592326571 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1592326571 +0200\n\n[build] enable external signer by default for GUI\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e306aaa3c0146a9aa613e038d0997b040cf5075f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e306aaa3c0146a9aa613e038d0997b040cf5075f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e306aaa3c0146a9aa613e038d0997b040cf5075f/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6f9259c790852dfe2a05530e01fe39108a879d29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f9259c790852dfe2a05530e01fe39108a879d29",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6f9259c790852dfe2a05530e01fe39108a879d29"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 14,
      "deletions": 14
    },
    "files": [
      {
        "sha": "cef62df51700cab2a98db3b2f865cabc5ceda2ee",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e306aaa3c0146a9aa613e038d0997b040cf5075f/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e306aaa3c0146a9aa613e038d0997b040cf5075f/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=e306aaa3c0146a9aa613e038d0997b040cf5075f",
        "patch": "@@ -136,18 +136,6 @@ AC_ARG_ENABLE([upnp-default],\n   [use_upnp_default=$enableval],\n   [use_upnp_default=no])\n \n-dnl Enable external signer support when opting in to boost process\n-if test x$with_boost_process = xyes; then\n-  use_external_signer_default=yes;\n-else\n-  use_external_signer_default=no;\n-fi\n-\n-AC_ARG_ENABLE([external-signer],\n-    [AS_HELP_STRING([--enable-external-signer],[compile external signer support (requires Boost::Process)])],\n-    [use_external_signer=$enableval],\n-    [use_external_signer=$use_external_signer_default])\n-\n AC_ARG_ENABLE(tests,\n     AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n     [use_tests=$enableval],\n@@ -1155,6 +1143,18 @@ else\n   BITCOIN_QT_CONFIGURE\n fi\n \n+dnl Enable external signer support when opting in to boost process, or building GUI\n+if test x$with_boost_process = xyes || test x$bitcoin_enable_qt != xno; then\n+  use_external_signer_default=yes;\n+else\n+  use_external_signer_default=no;\n+fi\n+\n+AC_ARG_ENABLE([external-signer],\n+    [AS_HELP_STRING([--enable-external-signer],[compile external signer support (requires Boost::Process)])],\n+    [use_external_signer=$enableval],\n+    [use_external_signer=$use_external_signer_default])\n+\n if test x$enable_wallet != xno; then\n     dnl Check for libdb_cxx only if wallet enabled\n     BITCOIN_FIND_BDB48\n@@ -1209,8 +1209,8 @@ AX_BOOST_SYSTEM\n AX_BOOST_FILESYSTEM\n AX_BOOST_THREAD\n \n-dnl Opt-in to boost-process, unless external signer support is requested\n-if test x$with_boost_process = xyes || test x$use_external_signer = xyes; then\n+dnl Opt-in to boost-process, unless external signer support is requested, or building with GUI\n+if test x$with_boost_process = xyes || test x$use_external_signer = xyes || test x$bitcoin_enable_qt != xno; then\n     AX_BOOST_PROCESS\n fi\n "
      }
    ]
  }
]