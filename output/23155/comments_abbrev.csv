DrahtBot,2021-10-01 17:41:21,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23497](https://github.com/bitcoin/bitcoin/pull/23497) (Add `src/node/` and `src/wallet/` code to `node::` and `wallet::`",https://github.com/bitcoin/bitcoin/pull/23155#issuecomment-932430430,932430430,
laanwj,2021-10-27 10:58:50,"```\n./tinyformat.h:1028:20:   required from ‘tinyformat::detail::FormatListN<sizeof... (Args)> tinyformat::makeFormatList(const Args& ...) [with Args = {int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, fs::path, fs::path}]’\n./tinyformat.h:1064:37:   required from ‘void tinyformat::format(std::ostream&, const char*, const Args& ...) [with Args = {int, std::_",https://github.com/bitcoin/bitcoin/pull/23155#issuecomment-952799496,952799496,
jamesob,2021-10-29 13:56:09,"> needs to be updated for #22937\n\nFixed, thanks.",https://github.com/bitcoin/bitcoin/pull/23155#issuecomment-954765290,954765290,
jamesob,2021-11-03 12:49:11,"This change is functionally tested, should be uncontroversial, easy to review/merge, etc. if anyone has spare cycles.",https://github.com/bitcoin/bitcoin/pull/23155#issuecomment-959000256,959000256,
jamesob,2021-11-16 15:10:11,Addressed all feedback - thanks for the good reviews @MarcoFalke @ryanofsky.,https://github.com/bitcoin/bitcoin/pull/23155#issuecomment-970367148,970367148,
jamesob,2021-11-30 16:22:50,"Pushed [a small doc fix](https://github.com/bitcoin/bitcoin/compare/7c27d38ccc89d49a7271b3d9a43159b34f8baed1..ffd09281fe26446fcefa0627c220a52706e35227) based on Marco, Russ' feedback. \n\nI think this small change is easily reviewable and could be merged without much risk.",https://github.com/bitcoin/bitcoin/pull/23155#issuecomment-982796399,982796399,
benthecarman,2021-10-01 16:14:34,"`assumeutxo` seems like a weird name for this result, why not something like `txoutset_hash`?",https://github.com/bitcoin/bitcoin/pull/23155#discussion_r720375701,720375701,src/rpc/blockchain.cpp
jamesob,2021-10-01 18:26:20,"Yeah, good point - thought I had done it for consistency with something else but I guess not.",https://github.com/bitcoin/bitcoin/pull/23155#discussion_r720458024,720458024,src/rpc/blockchain.cpp
benthecarman,2021-10-01 22:32:48,looks like `path` is already being tested above on line 36,https://github.com/bitcoin/bitcoin/pull/23155#discussion_r720572139,720572139,test/functional/rpc_dumptxoutset.py
jamesob,2021-10-29 13:59:17,"Fixed, thanks.",https://github.com/bitcoin/bitcoin/pull/23155#discussion_r739258885,739258885,test/functional/rpc_dumptxoutset.py
MarcoFalke,2021-11-03 13:11:13,"nit, could explain what ""nchaintx value"" means instead:\n\n```suggestion\n                    {RPCResult::Type::NUM, ""num_chain_txs"", ""the number of transactions in the chain of the base block""},\n```",https://github.com/bitcoin/bitcoin/pull/23155#discussion_r741920667,741920667,src/rpc/blockchain.cpp
MarcoFalke,2021-11-03 13:12:16,"pretty sure this will overflow soon, if it doesn't already",https://github.com/bitcoin/bitcoin/pull/23155#discussion_r741921637,741921637,src/rpc/blockchain.cpp
ryanofsky,2021-11-16 01:13:17,"In commit ""rpc: various fixups for dumptxoutset"" (b637ffaad40ea8707bdb27334990d2bcac28cf53)\n\nShould use `path.u8string()` here not `fs::PathToString(path)` because JSON strings (unlike log strings) need to be UTF-8",https://github.com/bitcoin/bitcoin/pull/23155#discussion_r749824259,749824259,src/rpc/blockchain.cpp
ryanofsky,2021-11-16 01:14:11,"re: https://github.com/bitcoin/bitcoin/pull/23155#discussion_r741921637\n\n> pretty sure this will overflow soon, if it doesn't already\n\nSeems worth addressing. Should this just cast to int64 or is there a more ideal fix?",https://github.com/bitcoin/bitcoin/pull/23155#discussion_r749824622,749824622,src/rpc/blockchain.cpp
ryanofsky,2021-11-16 01:20:08,"In commit ""rpc: various fixups for dumptxoutset"" (b637ffaad40ea8707bdb27334990d2bcac28cf53)\n\nMinor: Should use either `const fs::path &` or non-const `fs::path` with `std::move` to avoid creating unneeded temporary copies. `const path` just combines worst of both approaches.",https://github.com/bitcoin/bitcoin/pull/23155#discussion_r749826861,749826861,src/rpc/blockchain.h
MarcoFalke,2021-11-16 15:11:49,"Can you explain why a cast is needed? If one is needed, it might be better to use a non-narrowing.\n\n```suggestion\n    result.pushKV(""nchaintx"", int64_t{tip->nChainTx});\n```",https://github.com/bitcoin/bitcoin/pull/23155#discussion_r750372767,750372767,src/rpc/blockchain.cpp
jamesob,2021-11-16 15:18:16,"```\nrpc/blockchain.cpp:2654:12: error: call to member function 'pushKV' is ambiguous\n    result.pushKV(""nchaintx"", tip->nChainTx);\n    ~~~~~~~^~~~~~\n./univalue/include/univalue.h:125:10: note: candidate function\n    bool pushKV(const std::string& key, int64_t val_) {\n         ^\n./univalue/include/univalue.h:129:10: note: candidate function\n    bool pushKV(const std::string& key, ui",https://github.com/bitcoin/bitcoin/pull/23155#discussion_r750379435,750379435,src/rpc/blockchain.cpp
ryanofsky,2021-11-17 04:26:13,"In commit ""rpc: various fixups for dumptxoutset"" (7c27d38ccc89d49a7271b3d9a43159b34f8baed1)\n\nThis is a little different than what marco suggested https://github.com/bitcoin/bitcoin/pull/23155#discussion_r741920667 because it is keeping the ""nchaintx"" name and saying ""chain up to the base block"" instead of ""chain of the base block"". I think ""up to"" seems a little misleading or ambiguous because",https://github.com/bitcoin/bitcoin/pull/23155#discussion_r750872449,750872449,src/rpc/blockchain.cpp
jamesob,2021-11-30 16:20:05,"Fixed, thanks",https://github.com/bitcoin/bitcoin/pull/23155#discussion_r759444593,759444593,src/rpc/blockchain.cpp
