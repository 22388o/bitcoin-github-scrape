[
  {
    "sha": "5cb7ee67a5c0e5da39eb698b64d23722fb2f7b3e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Y2I3ZWU2N2E1YzBlNWRhMzllYjY5OGI2NGQyMzcyMmZiMmY3YjNl",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-05-28T00:07:49Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-05-29T16:07:48Z"
      },
      "message": "net: improve code documentation for dns seed behaviour",
      "tree": {
        "sha": "81f48b6d379ab6cc096eac3df0d18f9822443340",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/81f48b6d379ab6cc096eac3df0d18f9822443340"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5cb7ee67a5c0e5da39eb698b64d23722fb2f7b3e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5cb7ee67a5c0e5da39eb698b64d23722fb2f7b3e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5cb7ee67a5c0e5da39eb698b64d23722fb2f7b3e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5cb7ee67a5c0e5da39eb698b64d23722fb2f7b3e/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c19fd96694d15966f1cc83c43bae2746b92d3149",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c19fd96694d15966f1cc83c43bae2746b92d3149",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c19fd96694d15966f1cc83c43bae2746b92d3149"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 19,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2ccb89248f01d71f848349aa1e904c974608f15d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 4,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5cb7ee67a5c0e5da39eb698b64d23722fb2f7b3e/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5cb7ee67a5c0e5da39eb698b64d23722fb2f7b3e/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=5cb7ee67a5c0e5da39eb698b64d23722fb2f7b3e",
        "patch": "@@ -53,10 +53,17 @@ static constexpr std::chrono::minutes DUMP_PEERS_INTERVAL{15};\n static constexpr int DNSSEEDS_TO_QUERY_AT_ONCE = 3;\n \n /** How long to delay before querying DNS seeds\n+ *\n+ * If we have more than THRESHOLD entries in addrman, then it's likely\n+ * that we got those addresses from having previously connected to the P2P\n+ * network, and that we'll be able to successfully reconnect to the P2P\n+ * network via contacting one of them. So if that's the case, spend a\n+ * little longer trying to connect to known peers before querying the\n+ * DNS seeds.\n  */\n-static constexpr std::chrono::seconds DNSSEEDS_DELAY_FEW_PEERS{11}; // 11sec\n-static constexpr std::chrono::seconds DNSSEEDS_DELAY_MANY_PEERS{300}; // 5min\n-static constexpr int DNSSEEDS_DELAY_PEER_THRESHOLD = 1000; // \"many\" vs \"few\" peers -- you should only get this many if you've been on the live network\n+static constexpr std::chrono::seconds DNSSEEDS_DELAY_FEW_PEERS{11};\n+static constexpr std::chrono::minutes DNSSEEDS_DELAY_MANY_PEERS{5};\n+static constexpr int DNSSEEDS_DELAY_PEER_THRESHOLD = 1000; // \"many\" vs \"few\" peers\n \n // We add a random period time (0 to 1 seconds) to feeler connections to prevent synchronization.\n #define FEELER_SLEEP_WINDOW 1\n@@ -1595,6 +1602,8 @@ void CConnman::ThreadDNSAddressSeed()\n         seeds_right_now = seeds.size();\n     } else if (addrman.size() == 0) {\n         // If we have no known peers, query all.\n+        // This will occur on the first run, or if peers.dat has been\n+        // deleted.\n         seeds_right_now = seeds.size();\n     }\n \n@@ -1620,6 +1629,9 @@ void CConnman::ThreadDNSAddressSeed()\n                 LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n                 std::chrono::seconds to_wait = seeds_wait_time;\n                 while (to_wait.count() > 0) {\n+                    // if sleeping for the MANY_PEERS interval, wake up\n+                    // early to see if we have enough peers and can stop\n+                    // this thread entirely freeing up its resources\n                     std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n                     if (!interruptNet.sleep_for(w)) return;\n                     to_wait -= w;\n@@ -1646,7 +1658,7 @@ void CConnman::ThreadDNSAddressSeed()\n \n         if (interruptNet) return;\n \n-        // hold off on querying seeds if p2p network deactivated\n+        // hold off on querying seeds if P2P network deactivated\n         if (!fNetworkActive) {\n             LogPrintf(\"Waiting for network to be reactivated before querying DNS seeds.\\n\");\n             do {\n@@ -1797,6 +1809,9 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             return;\n \n         // Add seed nodes if DNS seeds are all down (an infrastructure attack?).\n+        // Note that we only do this if we started with an empty peers.dat,\n+        // (in which case we will query DNS seeds immediately) *and* the DNS\n+        // seeds have not returned any results.\n         if (addrman.size() == 0 && (GetTime() - nStart > 60)) {\n             static bool done = false;\n             if (!done) {"
      }
    ]
  }
]