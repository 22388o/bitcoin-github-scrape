[
  {
    "sha": "96bf2309403ef60b86838c733ec36423bfe1881b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NmJmMjMwOTQwM2VmNjBiODY4MzhjNzMzZWMzNjQyM2JmZTE4ODFi",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2013-11-10T23:35:47Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2015-07-23T18:12:41Z"
      },
      "message": "Require configuration of mining before creating blocks",
      "tree": {
        "sha": "a5f81bc4ade5c41a4cec05ec548a23bd3ee79862",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a5f81bc4ade5c41a4cec05ec548a23bd3ee79862"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96bf2309403ef60b86838c733ec36423bfe1881b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96bf2309403ef60b86838c733ec36423bfe1881b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/96bf2309403ef60b86838c733ec36423bfe1881b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96bf2309403ef60b86838c733ec36423bfe1881b/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9546a977d354b2ec6cd8455538e68fe4ba343a44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9546a977d354b2ec6cd8455538e68fe4ba343a44",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9546a977d354b2ec6cd8455538e68fe4ba343a44"
      }
    ],
    "stats": {
      "total": 87,
      "additions": 74,
      "deletions": 13
    },
    "files": [
      {
        "sha": "2ba08e98e6c1793c9dd02870c89306e70f4edeac",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96bf2309403ef60b86838c733ec36423bfe1881b/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96bf2309403ef60b86838c733ec36423bfe1881b/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=96bf2309403ef60b86838c733ec36423bfe1881b",
        "patch": "@@ -101,6 +101,7 @@ class CMainParams : public CChainParams {\n \n         fRequireRPCPassword = true;\n         fMiningRequiresPeers = true;\n+        fMiningRequiresConfiguration = true;\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = true;\n         fMineBlocksOnDemand = false;\n@@ -173,6 +174,7 @@ class CTestNetParams : public CMainParams {\n \n         fRequireRPCPassword = true;\n         fMiningRequiresPeers = true;\n+        fMiningRequiresConfiguration = false;\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = false;\n         fMineBlocksOnDemand = false;\n@@ -220,6 +222,7 @@ class CRegTestParams : public CTestNetParams {\n \n         fRequireRPCPassword = false;\n         fMiningRequiresPeers = false;\n+        fMiningRequiresConfiguration = false;\n         fDefaultConsistencyChecks = true;\n         fRequireStandard = false;\n         fMineBlocksOnDemand = true;"
      },
      {
        "sha": "618b724ced2c582813ae69869c4637b8a6373936",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96bf2309403ef60b86838c733ec36423bfe1881b/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96bf2309403ef60b86838c733ec36423bfe1881b/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=96bf2309403ef60b86838c733ec36423bfe1881b",
        "patch": "@@ -56,6 +56,8 @@ class CChainParams\n     bool RequireRPCPassword() const { return fRequireRPCPassword; }\n     /** Make miner wait to have peers to avoid wasting work */\n     bool MiningRequiresPeers() const { return fMiningRequiresPeers; }\n+    /** Require policy configuration before mining */\n+    bool MiningRequiresConfiguration() const { return fMiningRequiresConfiguration; }\n     /** Default value for -checkmempool and -checkblockindex argument */\n     bool DefaultConsistencyChecks() const { return fDefaultConsistencyChecks; }\n     /** Policy: Filter transactions that do not match well-defined patterns */\n@@ -88,6 +90,7 @@ class CChainParams\n     std::vector<SeedSpec6> vFixedSeeds;\n     bool fRequireRPCPassword;\n     bool fMiningRequiresPeers;\n+    bool fMiningRequiresConfiguration;\n     bool fDefaultConsistencyChecks;\n     bool fRequireStandard;\n     bool fMineBlocksOnDemand;"
      },
      {
        "sha": "01f7d8dccd2dc205f2fbc829fb0c0896422aedc6",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96bf2309403ef60b86838c733ec36423bfe1881b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96bf2309403ef60b86838c733ec36423bfe1881b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=96bf2309403ef60b86838c733ec36423bfe1881b",
        "patch": "@@ -401,9 +401,9 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-datacarriersize\", strprintf(_(\"Maximum size of data in data carrier transactions we relay and mine (default: %u)\"), MAX_OP_RETURN_RELAY));\n \n     strUsage += HelpMessageGroup(_(\"Block creation options:\"));\n-    strUsage += HelpMessageOpt(\"-blockminsize=<n>\", strprintf(_(\"Set minimum block size in bytes (default: %u)\"), 0));\n-    strUsage += HelpMessageOpt(\"-blockmaxsize=<n>\", strprintf(_(\"Set maximum block size in bytes (default: %d)\"), DEFAULT_BLOCK_MAX_SIZE));\n-    strUsage += HelpMessageOpt(\"-blockprioritysize=<n>\", strprintf(_(\"Set maximum size of high-priority/low-fee transactions in bytes (default: %d)\"), DEFAULT_BLOCK_PRIORITY_SIZE));\n+    strUsage += HelpMessageOpt(\"-blockminsize=<n>\", _(\"Minimum block size in bytes\"));\n+    strUsage += HelpMessageOpt(\"-blockmaxsize=<n>\", _(\"Maximum block size in bytes\"));\n+    strUsage += HelpMessageOpt(\"-blockprioritysize=<n>\", _(\"Maximum size of high-priority/low-fee transactions in bytes\"));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-blockversion=<n>\", strprintf(\"Override block version to test forking scenarios (default: %d)\", (int)CBlock::CURRENT_VERSION));\n "
      },
      {
        "sha": "e53974714e152cbfb3d217baa4cce9579f377f01",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96bf2309403ef60b86838c733ec36423bfe1881b/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96bf2309403ef60b86838c733ec36423bfe1881b/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=96bf2309403ef60b86838c733ec36423bfe1881b",
        "patch": "@@ -735,10 +735,10 @@ CAmount GetMinRelayFee(const CTransaction& tx, unsigned int nBytes, bool fAllowF\n     if (fAllowFree)\n     {\n         // There is a free transaction area in blocks created by most miners,\n-        // * If we are relaying we allow transactions up to DEFAULT_BLOCK_PRIORITY_SIZE - 1000\n+        // * If we are relaying we allow transactions up to MAX_GRATIS_TX_SIZE\n         //   to be considered to fall into this category. We don't want to encourage sending\n         //   multiple transactions instead of one big transaction to avoid fees.\n-        if (nBytes < (DEFAULT_BLOCK_PRIORITY_SIZE - 1000))\n+        if (nBytes < MAX_GRATIS_TX_SIZE)\n             nMinFee = 0;\n     }\n "
      },
      {
        "sha": "3c1f70953e4e10cd9c493447bbf6ea27b078e884",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96bf2309403ef60b86838c733ec36423bfe1881b/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96bf2309403ef60b86838c733ec36423bfe1881b/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=96bf2309403ef60b86838c733ec36423bfe1881b",
        "patch": "@@ -116,18 +116,18 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n     pblocktemplate->vTxSigOps.push_back(-1); // updated at end\n \n     // Largest block you're willing to create:\n-    unsigned int nBlockMaxSize = GetArg(\"-blockmaxsize\", DEFAULT_BLOCK_MAX_SIZE);\n+    unsigned int nBlockMaxSize = GetArg(\"-blockmaxsize\", MAX_BLOCK_SIZE);\n     // Limit to betweeen 1K and MAX_BLOCK_SIZE-1K for sanity:\n     nBlockMaxSize = std::max((unsigned int)1000, std::min((unsigned int)(MAX_BLOCK_SIZE-1000), nBlockMaxSize));\n \n     // How much of the block should be dedicated to high-priority transactions,\n     // included regardless of the fees they pay\n-    unsigned int nBlockPrioritySize = GetArg(\"-blockprioritysize\", DEFAULT_BLOCK_PRIORITY_SIZE);\n+    unsigned int nBlockPrioritySize = GetArg(\"-blockprioritysize\", MAX_BLOCK_SIZE);\n     nBlockPrioritySize = std::min(nBlockMaxSize, nBlockPrioritySize);\n \n     // Minimum block size you want to create; block will be filled with free transactions\n     // until there are no more or the block reaches this size:\n-    unsigned int nBlockMinSize = GetArg(\"-blockminsize\", DEFAULT_BLOCK_MIN_SIZE);\n+    unsigned int nBlockMinSize = GetArg(\"-blockminsize\", 0);\n     nBlockMinSize = std::min(nBlockMaxSize, nBlockMinSize);\n \n     // Collect memory pool transactions into the block"
      },
      {
        "sha": "3183ca1394099f48999940018eb6645c86aec8bf",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96bf2309403ef60b86838c733ec36423bfe1881b/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96bf2309403ef60b86838c733ec36423bfe1881b/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=96bf2309403ef60b86838c733ec36423bfe1881b",
        "patch": "@@ -14,13 +14,10 @@\n \n class CCoinsViewCache;\n \n-/** Default for -blockmaxsize and -blockminsize, which control the range of sizes the mining code will create **/\n-static const unsigned int DEFAULT_BLOCK_MAX_SIZE = 750000;\n-static const unsigned int DEFAULT_BLOCK_MIN_SIZE = 0;\n-/** Default for -blockprioritysize, maximum space for zero/low-fee transactions **/\n-static const unsigned int DEFAULT_BLOCK_PRIORITY_SIZE = 50000;\n /** The maximum size for transactions we're willing to relay/mine */\n static const unsigned int MAX_STANDARD_TX_SIZE = 100000;\n+/** The maximum size for transactions we're willing to relay/mine without a fee */\n+static const unsigned int MAX_GRATIS_TX_SIZE = 50000 - 1000;\n /** Maximum number of signature check operations in an IsStandard() P2SH script */\n static const unsigned int MAX_P2SH_SIGOPS = 15;\n /** The maximum number of sigops we're willing to relay/mine in a single tx */"
      },
      {
        "sha": "67d2326c04a3a639a19101568d1fb1cda9b787b7",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96bf2309403ef60b86838c733ec36423bfe1881b/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96bf2309403ef60b86838c733ec36423bfe1881b/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=96bf2309403ef60b86838c733ec36423bfe1881b",
        "patch": "@@ -26,6 +26,56 @@\n \n using namespace std;\n \n+bool CheckIsMiningSetup()\n+{\n+    if (!Params().MiningRequiresConfiguration())\n+        return true;\n+\n+    if (!mapArgs.count(\"-blockminsize\"))\n+        return false;\n+    if (!mapArgs.count(\"-blockmaxsize\"))\n+        return false;\n+    if (!mapArgs.count(\"-blockprioritysize\"))\n+        return false;\n+\n+    // Either datacarriersize must be set, or datacarrier must be disabled\n+    if (!(mapArgs.count(\"-datacarriersize\") || !GetBoolArg(\"-datacarrier\", true)))\n+        return false;\n+\n+    return true;\n+}\n+\n+void CheckMiningSetup(const char * const strWhatAmI)\n+{\n+    static bool fIsMiningSetup = false;\n+    if (!fIsMiningSetup)\n+        fIsMiningSetup = CheckIsMiningSetup();\n+    if (fIsMiningSetup)\n+        return;\n+\n+    unsigned long minsz = insecure_rand() % MAX_BLOCK_SIZE;\n+    unsigned long maxsz = std::max((unsigned long)250000, minsz);\n+    maxsz = maxsz + (insecure_rand() % (MAX_BLOCK_SIZE - maxsz));\n+    unsigned long prisz = insecure_rand() % MAX_BLOCK_SIZE;\n+    unsigned long datacarrier = insecure_rand() % 2;\n+    unsigned long datacarriersize = insecure_rand() % 0x100;\n+    throw JSONRPCError(RPC_NOT_CONFIGURED, strprintf(\n+        _(\"To use %s, you must set mining options in the configuration file:\\n\"\n+          \"%s\\n\"\n+          \"For example (randomly chosen, please choose your own values):\\n\"\n+          \"blockminsize=%lu\\n\"\n+          \"blockmaxsize=%lu\\n\"\n+          \"blockprioritysize=%lu\\n\"\n+          \"datacarrier=%u\\n\"\n+          \"datacarriersize=%u\\n\"\n+          \"Please understand what each setting does by reading bitcoind --help\\n\"),\n+            strWhatAmI,\n+            GetConfigFile().string().c_str(),\n+            minsz, maxsz, prisz,\n+            datacarrier, datacarriersize\n+    ));\n+}\n+\n /**\n  * Return average network hashes per second based on the last 'lookup' blocks,\n  * or from the last difficulty change if 'lookup' is nonpositive.\n@@ -127,6 +177,8 @@ UniValue generate(const UniValue& params, bool fHelp)\n     if (!Params().MineBlocksOnDemand())\n         throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"This method can only be used on regtest\");\n \n+    CheckMiningSetup(\"generate\");\n+\n     int nHeightStart = 0;\n     int nHeightEnd = 0;\n     int nHeight = 0;\n@@ -203,6 +255,9 @@ UniValue setgenerate(const UniValue& params, bool fHelp)\n     if (params.size() > 0)\n         fGenerate = params[0].get_bool();\n \n+    if (fGenerate)\n+        CheckMiningSetup(\"setgenerate\");\n+\n     int nGenProcLimit = -1;\n     if (params.size() > 1)\n     {\n@@ -426,6 +481,8 @@ UniValue getblocktemplate(const UniValue& params, bool fHelp)\n     if (strMode != \"template\")\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid mode\");\n \n+    CheckMiningSetup(\"getblocktemplate\");\n+\n     if (vNodes.empty())\n         throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"Bitcoin is not connected!\");\n "
      },
      {
        "sha": "bfdb35d1d2496921384fdcebdeae3c91fec4f47e",
        "filename": "src/rpcprotocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96bf2309403ef60b86838c733ec36423bfe1881b/src/rpcprotocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96bf2309403ef60b86838c733ec36423bfe1881b/src/rpcprotocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.h?ref=96bf2309403ef60b86838c733ec36423bfe1881b",
        "patch": "@@ -52,6 +52,7 @@ enum RPCErrorCode\n     RPC_VERIFY_REJECTED             = -26, //! Transaction or block was rejected by network rules\n     RPC_VERIFY_ALREADY_IN_CHAIN     = -27, //! Transaction already in chain\n     RPC_IN_WARMUP                   = -28, //! Client still warming up\n+    RPC_NOT_CONFIGURED              = -29, //! Some configuration is required\n \n     //! Aliases for backward compatibility\n     RPC_TRANSACTION_ERROR           = RPC_VERIFY_ERROR,"
      }
    ]
  }
]