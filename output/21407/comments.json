[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/795373018",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#issuecomment-795373018",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21407",
    "id": 795373018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NTM3MzAxOA==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-10T12:54:28Z",
    "updated_at": "2021-03-10T12:54:28Z",
    "author_association": "MEMBER",
    "body": "Is this from the OOM raised by the new fuzzer? Approach ACK; a test may be good.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/795373018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/795378332",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#issuecomment-795378332",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21407",
    "id": 795378332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NTM3ODMzMg==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-10T12:59:28Z",
    "updated_at": "2021-03-10T12:59:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think so. To demonstrate the problem this PR is fixing a fuzz seed would have to supply all the data to cause OOM, whereas the [output](https://github.com/bitcoin/bitcoin/pull/21387#issuecomment-795334306) of the OOM you reported reads \"will not generate inputs larger than 1048576 bytes\".",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/795378332/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/795472083",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#issuecomment-795472083",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21407",
    "id": 795472083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NTQ3MjA4Mw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-10T14:16:44Z",
    "updated_at": "2021-03-10T14:16:44Z",
    "author_association": "MEMBER",
    "body": "Concept and code review ACK 32b63eb166470b05795f39ab01bc57d62abf79e7",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/795472083/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/795714357",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#issuecomment-795714357",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21407",
    "id": 795714357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NTcxNDM1Nw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-10T16:43:42Z",
    "updated_at": "2021-03-10T16:43:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21387 (fuzz: test the I2P Session public interface by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/795714357/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/796227143",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#issuecomment-796227143",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21407",
    "id": 796227143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NjIyNzE0Mw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-10T22:23:51Z",
    "updated_at": "2021-03-10T22:23:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nHappy this was caught so soon after I2P merge, and more importantly before release: we're doing something right :)\r\n\r\n@vasild May I ask how you found this issue?\r\n\r\nIf it wasn't found using the the I2P fuzzer awaiting review, could you add a fuzzing harness which would have been able to catch this issue (\"regression fuzzing\")?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/796227143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/796585929",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#issuecomment-796585929",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21407",
    "id": 796585929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NjU4NTkyOQ==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-11T09:08:58Z",
    "updated_at": "2021-03-11T09:08:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@practicalswift,\r\n> how you found this issue?\r\n\r\nExactly the right question! :)\r\n\r\nIt was not found by #21387, but a problem in it put this in front of my eyes. While fuzzing with #21387 I noticed that there is one slow case which was unexpected because the fuzz test is very small and should be quick.\r\n\r\nIt turned out that once the fuzz data is exhausted `FuzzedSock::Recv()` will keep returning `-1` and setting `errno` to `EAGAIN` forever. So `RecvUntilTerminator()` was (properly) re-calling `Recv()` zillion times before it gave up due to a timeout. This was fixed in the test by https://github.com/bitcoin/bitcoin/pull/21387/commits/5e085082fae5b90507aca3277800bfb367705617 but it made me think what's the worse that can happen with a `Recv()` that never returns a terminator.\r\n\r\n> we're doing something right\r\n\r\nThat is adding tests that increase the coverage, I guess :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/796585929/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/796662855",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#issuecomment-796662855",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21407",
    "id": 796662855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NjY2Mjg1NQ==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-11T11:17:14Z",
    "updated_at": "2021-03-11T11:17:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Do we need to make the new param max_data optional?\r\n\r\nI think it is good to have the possibility for the old behavior (unlimited), which fits well with `std::optional` - \"if the limit is not set, then it is unlimited\".",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/796662855/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/796821419",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#issuecomment-796821419",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21407",
    "id": 796821419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NjgyMTQxOQ==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-11T15:31:25Z",
    "updated_at": "2021-03-11T15:31:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Appended a new commit with a unit test to ensure that the added functionality of `Sock::RecvUntilTerminator()` works as expected.\r\n\r\nThis is not a regression test that would fail if the bug being fixed by this PR resurfaces. I am working on that too, but it will require the changes from #21387 and will be in a separate PR of its own.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/796821419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797262982",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#issuecomment-797262982",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21407",
    "id": 797262982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzI2Mjk4Mg==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-12T06:16:32Z",
    "updated_at": "2021-03-12T06:16:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Appended a new commit with a unit test to ensure that the added functionality of `Sock::RecvUntilTerminator()` works as expected.\r\n\r\nOr, in other words: invalidate two ACKs and break the CI at the same time :disappointed: \r\n\r\n`b9373ec8f...28cfd6de4`: fix the CI failure",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797262982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797873015",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#issuecomment-797873015",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21407",
    "id": 797873015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5Nzg3MzAxNQ==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-13T05:51:36Z",
    "updated_at": "2021-03-13T05:51:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "`28cfd6de4...faea165c9`: move the `MAX_MSG_SIZE` constant from `i2p.cpp` to `i2p.h` so that it can be used later by tests to send more than that without `\\n`.\r\n\r\n@MarcoFalke `fa`!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/797873015/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 2
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800032155",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#issuecomment-800032155",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21407",
    "id": 800032155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDAzMjE1NQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-16T07:42:53Z",
    "updated_at": "2021-03-16T07:42:53Z",
    "author_association": "MEMBER",
    "body": "> Do we need to make the new param max_data optional?\r\n\r\n> I think it is good to have the possibility for the old behavior (unlimited), which fits well with std::optional - \"if the limit is not set, then it is unlimited\".\r\n\r\nI also thought about this; if there is no realistic case where to use \"unlimited\" (as it would always open some kind of DoS risk), it is more developer friendly to remove the possibility to set it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800032155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800128133",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#issuecomment-800128133",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21407",
    "id": 800128133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDEyODEzMw==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-16T10:11:22Z",
    "updated_at": "2021-03-16T10:11:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Alright, keep it simple - no callers currently need \"unlimited\" behavior, so drop that functionality. It would be easy to re-add it if necessary in the future. Thanks, @jonatack, @laanwj, @MarcoFalke for the feedback!\r\n\r\n`faea165c9...7059e6d82`: remove optional'ness of the max size argument",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800128133/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800169914",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#issuecomment-800169914",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21407",
    "id": 800169914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDE2OTkxNA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-16T11:13:28Z",
    "updated_at": "2021-03-16T11:13:28Z",
    "author_association": "MEMBER",
    "body": "Thank you\r\nRe-ACK 7059e6d82275b44efc41675ee10760145b6c1073",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800169914/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800284886",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#issuecomment-800284886",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21407",
    "id": 800284886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDI4NDg4Ng==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-16T14:03:58Z",
    "updated_at": "2021-03-16T14:03:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "> a test may be good\r\n\r\nA test requires the changes made in https://github.com/bitcoin/bitcoin/pull/21387, added in that PR under the commit `test: add I2P test for a runaway SAM proxy`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800284886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800333803",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#issuecomment-800333803",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21407",
    "id": 800333803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDMzMzgwMw==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-16T14:59:05Z",
    "updated_at": "2021-03-16T14:59:05Z",
    "author_association": "MEMBER",
    "body": "Changes since my previous review LGTM per `git diff 32b63eb 7059e6d`\r\n\r\nPosthumous ACK 7059e6d82275b44efc41675ee10760145b6c1073",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/800333803/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592229682",
    "pull_request_review_id": 609586826,
    "id": 592229682,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjIyOTY4Mg==",
    "diff_hunk": "@@ -191,8 +192,17 @@ std::string Sock::RecvUntilTerminator(uint8_t terminator,\n \n     for (;;) {\n         char buf[512];\n+        size_t peek_bytes{sizeof(buf)};\n \n-        const ssize_t peek_ret{Recv(buf, sizeof(buf), MSG_PEEK)};\n+        if (max_data.has_value()) {\n+            if (data.size() >= max_data.value()) {\n+                throw std::runtime_error(\n+                    strprintf(\"Received too many bytes without a terminator (%u)\", data.size()));\n+            }\n+            peek_bytes = std::min(sizeof(buf), max_data.value() - data.size());\n+        }",
    "path": "src/util/sock.cpp",
    "position": 17,
    "original_position": 23,
    "commit_id": "7059e6d82275b44efc41675ee10760145b6c1073",
    "original_commit_id": "32b63eb166470b05795f39ab01bc57d62abf79e7",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The dereference operator `operator*()` does not check if this optional contains a value, which may be more efficient than `value()` (https://en.cppreference.com/w/cpp/utility/optional/value). As `has_value()` is already checked, can also do (maybe not worth it but as a note):\r\n\r\n```diff\r\n         if (max_data.has_value()) {\r\n-            if (data.size() >= max_data.value()) {\r\n+            const size_t bytes{data.size()};\r\n+            if (bytes >= *max_data) {\r\n                 throw std::runtime_error(\r\n-                    strprintf(\"Received too many bytes without a terminator (%u)\", data.size()));\r\n+                    strprintf(\"Received too many bytes without a terminator (%u)\", bytes));\r\n             }\r\n-            peek_bytes = std::min(sizeof(buf), max_data.value() - data.size());\r\n+            peek_bytes = std::min(sizeof(buf), *max_data - bytes);\r\n         }\r\n ```\r\n",
    "created_at": "2021-03-11T10:11:39Z",
    "updated_at": "2021-03-16T10:08:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#discussion_r592229682",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21407",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592229682"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21407#discussion_r592229682"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592229682/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 197,
    "original_line": 197,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592260224",
    "pull_request_review_id": 609631235,
    "id": 592260224,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjI2MDIyNA==",
    "diff_hunk": "@@ -191,8 +192,17 @@ std::string Sock::RecvUntilTerminator(uint8_t terminator,\n \n     for (;;) {\n         char buf[512];\n+        size_t peek_bytes{sizeof(buf)};\n \n-        const ssize_t peek_ret{Recv(buf, sizeof(buf), MSG_PEEK)};\n+        if (max_data.has_value()) {\n+            if (data.size() >= max_data.value()) {\n+                throw std::runtime_error(\n+                    strprintf(\"Received too many bytes without a terminator (%u)\", data.size()));\n+            }\n+            peek_bytes = std::min(sizeof(buf), max_data.value() - data.size());\n+        }",
    "path": "src/util/sock.cpp",
    "position": 17,
    "original_position": 23,
    "commit_id": "7059e6d82275b44efc41675ee10760145b6c1073",
    "original_commit_id": "32b63eb166470b05795f39ab01bc57d62abf79e7",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, there is more than one way to write this. I chose the current one because I think the performance of `operator*` is negligible in this case and I find `.value()` more readable. Also\r\n```cpp\r\nif (max_data.has_value()) {\r\n```\r\ncan be written as\r\n```cpp\r\nif (max_data) {\r\n```\r\nbut I don't like those \"hidden\" casts and somehow prefer the former. The latter raises the question: \"given that `max_data` represents a number, did the programmer intend to check for non-zero value instead of whether the optional has value or not?\"\r\n\r\nI also prefer explicit comparisons (avoid implicit cast to boolean):\r\n```cpp\r\nif (foo != 0) { // makes it obvious that foo is a number\r\nif (foo != nullptr) { // makes it obvious that foo is a pointer\r\nif (foo) { // use this only if foo is a boolean\r\n```",
    "created_at": "2021-03-11T10:54:37Z",
    "updated_at": "2021-03-16T10:08:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#discussion_r592260224",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21407",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592260224"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21407#discussion_r592260224"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592260224/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 197,
    "original_line": 197,
    "side": "RIGHT",
    "in_reply_to_id": 592229682
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592261547",
    "pull_request_review_id": 609632835,
    "id": 592261547,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjI2MTU0Nw==",
    "diff_hunk": "@@ -135,13 +136,16 @@ class Sock\n      * @param[in] terminator Character up to which to read from the socket.\n      * @param[in] timeout Timeout for the entire operation.\n      * @param[in] interrupt If this is signaled then the operation is canceled.\n+     * @param[in] max_data The maximum amount of data (in bytes) to receive without\n+     * a terminator before giving up. Use `std::nullopt` to avoid this limit.\n      * @return The data that has been read, without the terminating character.\n      * @throws std::runtime_error if the operation cannot be completed. In this case some bytes may\n      * have been consumed from the socket.\n      */\n     virtual std::string RecvUntilTerminator(uint8_t terminator,\n                                             std::chrono::milliseconds timeout,\n-                                            CThreadInterrupt& interrupt) const;\n+                                            CThreadInterrupt& interrupt,\n+                                            std::optional<size_t> max_data = std::nullopt) const;",
    "path": "src/util/sock.h",
    "position": null,
    "original_position": 22,
    "commit_id": "7059e6d82275b44efc41675ee10760145b6c1073",
    "original_commit_id": "32b63eb166470b05795f39ab01bc57d62abf79e7",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "not sure what is more idiomatic\r\n```suggestion\r\n                                            std::optional<size_t> max_data = {}) const;\r\n```",
    "created_at": "2021-03-11T10:56:26Z",
    "updated_at": "2021-03-16T10:08:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#discussion_r592261547",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21407",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592261547"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21407#discussion_r592261547"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592261547/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 148,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592262205",
    "pull_request_review_id": 609633652,
    "id": 592262205,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjI2MjIwNQ==",
    "diff_hunk": "@@ -191,8 +192,17 @@ std::string Sock::RecvUntilTerminator(uint8_t terminator,\n \n     for (;;) {\n         char buf[512];\n+        size_t peek_bytes{sizeof(buf)};\n \n-        const ssize_t peek_ret{Recv(buf, sizeof(buf), MSG_PEEK)};\n+        if (max_data.has_value()) {\n+            if (data.size() >= max_data.value()) {\n+                throw std::runtime_error(\n+                    strprintf(\"Received too many bytes without a terminator (%u)\", data.size()));\n+            }\n+            peek_bytes = std::min(sizeof(buf), max_data.value() - data.size());\n+        }",
    "path": "src/util/sock.cpp",
    "position": 17,
    "original_position": 23,
    "commit_id": "7059e6d82275b44efc41675ee10760145b6c1073",
    "original_commit_id": "32b63eb166470b05795f39ab01bc57d62abf79e7",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I generally agree. It was more of a note to expose options.",
    "created_at": "2021-03-11T10:57:20Z",
    "updated_at": "2021-03-16T10:08:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#discussion_r592262205",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21407",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592262205"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21407#discussion_r592262205"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592262205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 197,
    "original_line": 197,
    "side": "RIGHT",
    "in_reply_to_id": 592229682
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592612008",
    "pull_request_review_id": 610101881,
    "id": 592612008,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjYxMjAwOA==",
    "diff_hunk": "@@ -135,13 +136,16 @@ class Sock\n      * @param[in] terminator Character up to which to read from the socket.\n      * @param[in] timeout Timeout for the entire operation.\n      * @param[in] interrupt If this is signaled then the operation is canceled.\n+     * @param[in] max_data The maximum amount of data (in bytes) to receive without\n+     * a terminator before giving up. Use `std::nullopt` to avoid this limit.\n      * @return The data that has been read, without the terminating character.\n      * @throws std::runtime_error if the operation cannot be completed. In this case some bytes may\n      * have been consumed from the socket.\n      */\n     virtual std::string RecvUntilTerminator(uint8_t terminator,\n                                             std::chrono::milliseconds timeout,\n-                                            CThreadInterrupt& interrupt) const;\n+                                            CThreadInterrupt& interrupt,\n+                                            std::optional<size_t> max_data = std::nullopt) const;",
    "path": "src/util/sock.h",
    "position": null,
    "original_position": 22,
    "commit_id": "7059e6d82275b44efc41675ee10760145b6c1073",
    "original_commit_id": "32b63eb166470b05795f39ab01bc57d62abf79e7",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "personally I think nullopt is more readable. E.g., even though we know that {} is nullopt here, size_t x{} would be x == 0 right? So then could max_data={{}} be some(0)? ",
    "created_at": "2021-03-11T18:34:57Z",
    "updated_at": "2021-03-16T10:08:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#discussion_r592612008",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21407",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592612008"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21407#discussion_r592612008"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592612008/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 148,
    "side": "RIGHT",
    "in_reply_to_id": 592261547
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592630605",
    "pull_request_review_id": 610118295,
    "id": 592630605,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjYzMDYwNQ==",
    "diff_hunk": "@@ -135,13 +136,16 @@ class Sock\n      * @param[in] terminator Character up to which to read from the socket.\n      * @param[in] timeout Timeout for the entire operation.\n      * @param[in] interrupt If this is signaled then the operation is canceled.\n+     * @param[in] max_data The maximum amount of data (in bytes) to receive without\n+     * a terminator before giving up. Use `std::nullopt` to avoid this limit.\n      * @return The data that has been read, without the terminating character.\n      * @throws std::runtime_error if the operation cannot be completed. In this case some bytes may\n      * have been consumed from the socket.\n      */\n     virtual std::string RecvUntilTerminator(uint8_t terminator,\n                                             std::chrono::milliseconds timeout,\n-                                            CThreadInterrupt& interrupt) const;\n+                                            CThreadInterrupt& interrupt,\n+                                            std::optional<size_t> max_data = std::nullopt) const;",
    "path": "src/util/sock.h",
    "position": null,
    "original_position": 22,
    "commit_id": "7059e6d82275b44efc41675ee10760145b6c1073",
    "original_commit_id": "32b63eb166470b05795f39ab01bc57d62abf79e7",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "yes, `std::nullopt` has the advantage of being more precise",
    "created_at": "2021-03-11T18:54:02Z",
    "updated_at": "2021-03-16T10:08:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#discussion_r592630605",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21407",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592630605"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21407#discussion_r592630605"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/592630605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 148,
    "side": "RIGHT",
    "in_reply_to_id": 592261547
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594927313",
    "pull_request_review_id": 612931511,
    "id": 594927313,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDkyNzMxMw==",
    "diff_hunk": "@@ -135,13 +136,16 @@ class Sock\n      * @param[in] terminator Character up to which to read from the socket.\n      * @param[in] timeout Timeout for the entire operation.\n      * @param[in] interrupt If this is signaled then the operation is canceled.\n+     * @param[in] max_data The maximum amount of data (in bytes) to receive without\n+     * a terminator before giving up. Use `std::nullopt` to avoid this limit.\n      * @return The data that has been read, without the terminating character.\n      * @throws std::runtime_error if the operation cannot be completed. In this case some bytes may\n      * have been consumed from the socket.\n      */\n     virtual std::string RecvUntilTerminator(uint8_t terminator,\n                                             std::chrono::milliseconds timeout,\n-                                            CThreadInterrupt& interrupt) const;\n+                                            CThreadInterrupt& interrupt,\n+                                            std::optional<size_t> max_data = std::nullopt) const;",
    "path": "src/util/sock.h",
    "position": null,
    "original_position": 22,
    "commit_id": "7059e6d82275b44efc41675ee10760145b6c1073",
    "original_commit_id": "faea165c9c034bfacffe00f9ae1dc1242f5b7e00",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Even if the optional is kept, wouldn't it make more sense to not provide a default value here?",
    "created_at": "2021-03-16T07:47:43Z",
    "updated_at": "2021-03-16T10:08:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#discussion_r594927313",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21407",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594927313"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21407#discussion_r594927313"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594927313/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 148,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595027434",
    "pull_request_review_id": 613061338,
    "id": 595027434,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTAyNzQzNA==",
    "diff_hunk": "@@ -135,13 +136,16 @@ class Sock\n      * @param[in] terminator Character up to which to read from the socket.\n      * @param[in] timeout Timeout for the entire operation.\n      * @param[in] interrupt If this is signaled then the operation is canceled.\n+     * @param[in] max_data The maximum amount of data (in bytes) to receive without\n+     * a terminator before giving up. Use `std::nullopt` to avoid this limit.\n      * @return The data that has been read, without the terminating character.\n      * @throws std::runtime_error if the operation cannot be completed. In this case some bytes may\n      * have been consumed from the socket.\n      */\n     virtual std::string RecvUntilTerminator(uint8_t terminator,\n                                             std::chrono::milliseconds timeout,\n-                                            CThreadInterrupt& interrupt) const;\n+                                            CThreadInterrupt& interrupt,\n+                                            std::optional<size_t> max_data = std::nullopt) const;",
    "path": "src/util/sock.h",
    "position": null,
    "original_position": 22,
    "commit_id": "7059e6d82275b44efc41675ee10760145b6c1073",
    "original_commit_id": "faea165c9c034bfacffe00f9ae1dc1242f5b7e00",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Dropped `std::optional` altogether.",
    "created_at": "2021-03-16T10:12:03Z",
    "updated_at": "2021-03-16T10:12:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21407#discussion_r595027434",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21407",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595027434"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21407#discussion_r595027434"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21407"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595027434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 148,
    "side": "RIGHT",
    "in_reply_to_id": 594927313
  }
]