[
  {
    "sha": "c8664eeac75fb87282dc69049cfa23d583742629",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjODY2NGVlYWM3NWZiODcyODJkYzY5MDQ5Y2ZhMjNkNTgzNzQyNjI5",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-17T03:49:46Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-27T21:58:04Z"
      },
      "message": "Trivial: pass Consensus::Params& instead of CChainParams& in ContextualCheckBlock",
      "tree": {
        "sha": "4490d850f9e29b67ef32c565b033ecae0e98cdb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4490d850f9e29b67ef32c565b033ecae0e98cdb9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8664eeac75fb87282dc69049cfa23d583742629",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8664eeac75fb87282dc69049cfa23d583742629",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c8664eeac75fb87282dc69049cfa23d583742629",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8664eeac75fb87282dc69049cfa23d583742629/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "381917f610e3c770acb5e323884e7eef6fd25841",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/381917f610e3c770acb5e323884e7eef6fd25841",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/381917f610e3c770acb5e323884e7eef6fd25841"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "b7a20c78d59ab29e4b71e415db2f1990e5c55bf6",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8664eeac75fb87282dc69049cfa23d583742629/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8664eeac75fb87282dc69049cfa23d583742629/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=c8664eeac75fb87282dc69049cfa23d583742629",
        "patch": "@@ -3525,10 +3525,9 @@ bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& sta\n     return true;\n }\n \n-bool ContextualCheckBlock(const CBlock& block, CValidationState& state, const CBlockIndex* pindexPrev)\n+bool ContextualCheckBlock(const CBlock& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev)\n {\n     const int nHeight = pindexPrev == NULL ? 0 : pindexPrev->nHeight + 1;\n-    const Consensus::Params& consensusParams = Params().GetConsensus();\n \n     // Start enforcing BIP113 (Median Time Past) using versionbits logic.\n     int nLockTimeFlags = 0;\n@@ -3689,7 +3688,8 @@ static bool AcceptBlock(const CBlock& block, CValidationState& state, const CCha\n     }\n     if (fNewBlock) *fNewBlock = true;\n \n-    if ((!CheckBlock(block, state, chainparams.GetConsensus(), GetAdjustedTime())) || !ContextualCheckBlock(block, state, pindex->pprev)) {\n+    if (!CheckBlock(block, state, chainparams.GetConsensus(), GetAdjustedTime()) ||\n+        !ContextualCheckBlock(block, state, chainparams.GetConsensus(), pindex->pprev)) {\n         if (state.IsInvalid() && !state.CorruptionPossible()) {\n             pindex->nStatus |= BLOCK_FAILED_VALID;\n             setDirtyBlockIndex.insert(pindex);\n@@ -3780,7 +3780,7 @@ bool TestBlockValidity(CValidationState& state, const CChainParams& chainparams,\n         return error(\"%s: Consensus::ContextualCheckBlockHeader: %s\", __func__, FormatStateMessage(state));\n     if (!CheckBlock(block, state, chainparams.GetConsensus(), fCheckPOW, fCheckMerkleRoot))\n         return error(\"%s: Consensus::CheckBlock: %s\", __func__, FormatStateMessage(state));\n-    if (!ContextualCheckBlock(block, state, pindexPrev))\n+    if (!ContextualCheckBlock(block, state, chainparams.GetConsensus(), pindexPrev))\n         return error(\"%s: Consensus::ContextualCheckBlock: %s\", __func__, FormatStateMessage(state));\n     if (!ConnectBlock(block, state, &indexDummy, viewNew, chainparams, true))\n         return false;"
      },
      {
        "sha": "262e94b9f8f5257331ff3cfe8011ff690bf7770e",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8664eeac75fb87282dc69049cfa23d583742629/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8664eeac75fb87282dc69049cfa23d583742629/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=c8664eeac75fb87282dc69049cfa23d583742629",
        "patch": "@@ -448,7 +448,7 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n  *  By \"context\", we mean only the previous block headers, but not the UTXO\n  *  set; UTXO-related validity checks are done in ConnectBlock(). */\n bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime);\n-bool ContextualCheckBlock(const CBlock& block, CValidationState& state, const CBlockIndex* pindexPrev);\n+bool ContextualCheckBlock(const CBlock& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev);\n \n /** Apply the effects of this block (with given index) on the UTXO set represented by coins.\n  *  Validity checks that depend on the UTXO set are also done; ConnectBlock()"
      }
    ]
  }
]