[
  {
    "sha": "014110c47d94ece6e3e655cdbf02ed8c91c7a5cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTQxMTBjNDdkOTRlY2U2ZTNlNjU1Y2RiZjAyZWQ4YzkxYzdhNWNm",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-03-13T19:23:17Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-07-05T05:59:38Z"
      },
      "message": "Use C++17 [[fallthrough]] attribute, and drop -Wno-implicit-fallthrough",
      "tree": {
        "sha": "e8081ec6eb17c133d84b3457561021f5252e0807",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8081ec6eb17c133d84b3457561021f5252e0807"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmDin8oACgkQQQEIES5+\nqB+nhw//RzsbgIAahtRQfXyjINDVvQ+cSV5de4zQ8obXdTt0ekyZ0jQ5JjyzG3+/\nc6dmhFTN/6BLkSHe13WumABOWFdGdiieQS2bhzBom2shT1dG3PTqy6Wt3Ko/+pyk\nbTDCUVmMyVoFWeVmQYGAvyTW1TtMVkOgznqdIvtzBq9SR1o0keuGPa7GyLLCqPkm\n16JCH1s0av8L2cD3dr5YLeDBBnRCYd/DPb2htt6IlcyjdqnoV/X7RsXyWb5t6ykx\n+eQ/i4PvuXCIU4zo8d7hXB1YuPn3aTcZz0LYEpqj9jNZV149hDYHOG6nKcQlwShu\nemOYnEIzyMzYiZ8oZWEPmLkOkG+++574oNioxUDjhzgS0uZI8Npyk0f/45GAesFO\npx6SRT24jGpUkn9ddM1a6gwUgiaaHyMymgEXwV3aKqGRiakabXm/pNFoW92ONI2t\nG0TieEjY4AJNnPq1OkGLCJsGKgLuPhODgyOkcjGJuS9h47iORC8EpIeQfVrR2m7p\nxeWDVDyazi8e6V+amg17oadodHV0vfV8rT7+R5CHWrjer75YTZyPtaSezI0anLmd\nMJlIc+oZH1HgEjpmxvF3Q63U94L8qcsBzBbP4GAvpXvHOk5csTa+RmS6bZzXmzCb\nErszKt9nrkV197UBU6/ukApXCz/k4koH6C6Mtq+IZNgBezBcc+s=\n=6aMW\n-----END PGP SIGNATURE-----",
        "payload": "tree e8081ec6eb17c133d84b3457561021f5252e0807\nparent 7a49fdc58115845ece3a9890bf9498bee6b559de\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1615663397 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1625464778 +0300\n\nUse C++17 [[fallthrough]] attribute, and drop -Wno-implicit-fallthrough\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7a49fdc58115845ece3a9890bf9498bee6b559de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a49fdc58115845ece3a9890bf9498bee6b559de",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7a49fdc58115845ece3a9890bf9498bee6b559de"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 13,
      "deletions": 7
    },
    "files": [
      {
        "sha": "a1ddeb127107ef4adea0295a70fbe57d8c11c57b",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=014110c47d94ece6e3e655cdbf02ed8c91c7a5cf",
        "patch": "@@ -463,6 +463,7 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wsuggest-override],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wsuggest-override\"],,[[$CXXFLAG_WERROR]],\n                         [AC_LANG_SOURCE([[struct A { virtual void f(); }; struct B : A { void f() final; };]])])\n   AX_CHECK_COMPILE_FLAG([-Wunreachable-code-loop-increment],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough], [WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wimplicit-fallthrough\"], [], [$CXXFLAG_WERROR])\n \n   if test x$suppress_external_warnings != xno ; then\n     AX_CHECK_COMPILE_FLAG([-Wdocumentation],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdocumentation\"],,[[$CXXFLAG_WERROR]])\n@@ -474,7 +475,6 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wself-assign],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n   if test x$suppress_external_warnings != xyes ; then\n     AX_CHECK_COMPILE_FLAG([-Wdeprecated-copy],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-copy\"],,[[$CXXFLAG_WERROR]])\n   fi"
      },
      {
        "sha": "ce1f93f11f3b50d1e30f439b56767e7199205ff8",
        "filename": "src/Makefile.leveldb.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf/src/Makefile.leveldb.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf/src/Makefile.leveldb.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.leveldb.include?ref=014110c47d94ece6e3e655cdbf02ed8c91c7a5cf",
        "patch": "@@ -22,6 +22,7 @@ LEVELDB_CPPFLAGS_INT += -DHAVE_SNAPPY=0 -DHAVE_CRC32C=1\n LEVELDB_CPPFLAGS_INT += -DHAVE_FDATASYNC=@HAVE_FDATASYNC@\n LEVELDB_CPPFLAGS_INT += -DHAVE_FULLFSYNC=@HAVE_FULLFSYNC@\n LEVELDB_CPPFLAGS_INT += -DHAVE_O_CLOEXEC=@HAVE_O_CLOEXEC@\n+LEVELDB_CPPFLAGS_INT += -DFALLTHROUGH_INTENDED=[[fallthrough]]\n \n if WORDS_BIGENDIAN\n LEVELDB_CPPFLAGS_INT += -DLEVELDB_IS_BIG_ENDIAN=1"
      },
      {
        "sha": "3465caa3a937cad71670a06ae810c8a9af54bdb1",
        "filename": "src/hash.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf/src/hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf/src/hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.cpp?ref=014110c47d94ece6e3e655cdbf02ed8c91c7a5cf",
        "patch": "@@ -47,8 +47,10 @@ unsigned int MurmurHash3(unsigned int nHashSeed, Span<const unsigned char> vData\n     switch (vDataToHash.size() & 3) {\n         case 3:\n             k1 ^= tail[2] << 16;\n+            [[fallthrough]];\n         case 2:\n             k1 ^= tail[1] << 8;\n+            [[fallthrough]];\n         case 1:\n             k1 ^= tail[0];\n             k1 *= c1;"
      },
      {
        "sha": "9bb675a5fceed1e4f8a6740db928f089611303f1",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=014110c47d94ece6e3e655cdbf02ed8c91c7a5cf",
        "patch": "@@ -287,6 +287,7 @@ bool RPCConsole::RPCParseCommandLine(interfaces::Node* node, std::string &strRes\n                 }\n                 if (breakParsing)\n                     break;\n+                [[fallthrough]];\n             }\n             case STATE_ARGUMENT: // In or after argument\n             case STATE_EATING_SPACES_IN_ARG:\n@@ -400,6 +401,7 @@ bool RPCConsole::RPCParseCommandLine(interfaces::Node* node, std::string &strRes\n                 strResult = lastResult.get_str();\n             else\n                 strResult = lastResult.write(2);\n+            [[fallthrough]];\n         case STATE_ARGUMENT:\n         case STATE_EATING_SPACES:\n             return true;"
      },
      {
        "sha": "e50ab33e5440a9fe40b39b1b927f9fc1dec90842",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=014110c47d94ece6e3e655cdbf02ed8c91c7a5cf",
        "patch": "@@ -524,6 +524,7 @@ static bool rest_getutxos(const std::any& context, HTTPRequest* req, const std::\n         // convert hex to bin, continue then with bin part\n         std::vector<unsigned char> strRequestV = ParseHex(strRequestMutable);\n         strRequestMutable.assign(strRequestV.begin(), strRequestV.end());\n+        [[fallthrough]];\n     }\n \n     case RetFormat::BINARY: {"
      },
      {
        "sha": "692096367c8ed2b422a81cdd81652989eb73dd3e",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=014110c47d94ece6e3e655cdbf02ed8c91c7a5cf",
        "patch": "@@ -850,7 +850,7 @@ static RPCHelpMan getblocktemplate()\n             case ThresholdState::LOCKED_IN:\n                 // Ensure bit is set in block version\n                 pblock->nVersion |= g_versionbitscache.Mask(consensusParams, pos);\n-                // FALL THROUGH to get vbavailable set...\n+                [[fallthrough]];\n             case ThresholdState::STARTED:\n             {\n                 const struct VBDeploymentInfo& vbinfo = VersionBitsDeploymentInfo[pos];"
      },
      {
        "sha": "bedaa14007f1074e81c96d898ada5bdd87a1b71d",
        "filename": "src/tinyformat.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf/src/tinyformat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf/src/tinyformat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/tinyformat.h?ref=014110c47d94ece6e3e655cdbf02ed8c91c7a5cf",
        "patch": "@@ -797,27 +797,27 @@ inline const char* streamStateFromFormat(std::ostream& out, bool& positionalMode\n             break;\n         case 'X':\n             out.setf(std::ios::uppercase);\n-            // Falls through\n+            [[fallthrough]];\n         case 'x': case 'p':\n             out.setf(std::ios::hex, std::ios::basefield);\n             intConversion = true;\n             break;\n         case 'E':\n             out.setf(std::ios::uppercase);\n-            // Falls through\n+            [[fallthrough]];\n         case 'e':\n             out.setf(std::ios::scientific, std::ios::floatfield);\n             out.setf(std::ios::dec, std::ios::basefield);\n             break;\n         case 'F':\n             out.setf(std::ios::uppercase);\n-            // Falls through\n+            [[fallthrough]];\n         case 'f':\n             out.setf(std::ios::fixed, std::ios::floatfield);\n             break;\n         case 'A':\n             out.setf(std::ios::uppercase);\n-            // Falls through\n+            [[fallthrough]];\n         case 'a':\n #           ifdef _MSC_VER\n             // Workaround https://developercommunity.visualstudio.com/content/problem/520472/hexfloat-stream-output-does-not-ignore-precision-a.html\n@@ -829,7 +829,7 @@ inline const char* streamStateFromFormat(std::ostream& out, bool& positionalMode\n             break;\n         case 'G':\n             out.setf(std::ios::uppercase);\n-            // Falls through\n+            [[fallthrough]];\n         case 'g':\n             out.setf(std::ios::dec, std::ios::basefield);\n             // As in boost::format, let stream decide float format."
      }
    ]
  },
  {
    "sha": "3c4c8e79baf02af97ba1502189f649b04ef2198d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzRjOGU3OWJhZjAyYWY5N2JhMTUwMjE4OWY2NDliMDRlZjIxOThk",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-03-13T19:30:41Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-07-05T05:59:54Z"
      },
      "message": "build: Add -Werror=implicit-fallthrough compile flag",
      "tree": {
        "sha": "31306249f0fcf9736cf5e0b27b1c6d25d3953e0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31306249f0fcf9736cf5e0b27b1c6d25d3953e0b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c4c8e79baf02af97ba1502189f649b04ef2198d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmDin9oACgkQQQEIES5+\nqB8hJg//RAUbgiSFsay2CLjXv0CO4RnE+XYj3XMR8vqKrT0u15RpiEHA280xCbz0\nDa5gZ+t5O30VmsyF+xwlFZAZ2XeLc9JUvHjzFcRyb6lgCl63QVHIecfsBIgaNuKH\n1QdnH5wuEreC+dST90x2NEZPZVLfTk4ijlXBnAK0etKLbXl8H9S7e7CDUYCLl4Qn\nXC3zEOXcaIomDBsAcw0KCotZAisespzQIjXYitSnE95lM2kTrx1aYXKRStcBfusi\nvTzdRQ+TTL2UQnmpjnXI38zH/tb7MCyiDJofK1yeSUEQTcvwuNuTZiq2NHk2oAPE\neHRBKmn4fjiyYmqzaIWQhoqJ8VmHrGViwXR0i2w1yKa0rAsZWmIADTWv+1YvEgC+\nN49GqveVv50nFxT9TeklSlacUIl5al71nE6GXenrRbUkr7gaDlpU103xzzAZ0n1r\ncFiAJeb5wp3CoAb4bIiMZUS7ubJnpGIJfrbeotYiAa6P+XgH2oiGM4KjxAHxXEBr\nn4ZEjwV7U3gKF845yWIqxPGr+JefETp88IPOdt5vmMEjEBcpbPfmILlOKEPu0BMh\nSTlmLBrudYqu3+H0vvC4TEu8BoduxxXvKFUoNE2RPI47KvmqAvLxVWFy9b+1CO8+\nl/QScMVATvUpyOtRzC8ZayRQprTCO68uDajh2/36zzHVbgxhIfs=\n=b3St\n-----END PGP SIGNATURE-----",
        "payload": "tree 31306249f0fcf9736cf5e0b27b1c6d25d3953e0b\nparent 014110c47d94ece6e3e655cdbf02ed8c91c7a5cf\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1615663841 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1625464794 +0300\n\nbuild: Add -Werror=implicit-fallthrough compile flag\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c4c8e79baf02af97ba1502189f649b04ef2198d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3c4c8e79baf02af97ba1502189f649b04ef2198d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c4c8e79baf02af97ba1502189f649b04ef2198d/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "014110c47d94ece6e3e655cdbf02ed8c91c7a5cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/014110c47d94ece6e3e655cdbf02ed8c91c7a5cf"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "dd187a4e572e6c322b3535195776e5c36d1f8de5",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c4c8e79baf02af97ba1502189f649b04ef2198d/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c4c8e79baf02af97ba1502189f649b04ef2198d/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=3c4c8e79baf02af97ba1502189f649b04ef2198d",
        "patch": "@@ -433,6 +433,7 @@ if test \"x$enable_werror\" = \"xyes\"; then\n                         [AC_LANG_SOURCE([[struct A { virtual void f(); }; struct B : A { void f() final; };]])])\n   AX_CHECK_COMPILE_FLAG([-Werror=unreachable-code-loop-increment],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unreachable-code-loop-increment\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Werror=mismatched-tags], [ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=mismatched-tags\"], [], [$CXXFLAG_WERROR])\n+  AX_CHECK_COMPILE_FLAG([-Werror=implicit-fallthrough], [ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=implicit-fallthrough\"], [], [$CXXFLAG_WERROR])\n \n   if test x$suppress_external_warnings != xno ; then\n     AX_CHECK_COMPILE_FLAG([-Werror=documentation],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=documentation\"],,[[$CXXFLAG_WERROR]])"
      }
    ]
  }
]