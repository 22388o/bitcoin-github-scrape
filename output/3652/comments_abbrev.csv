sipa,2014-02-11T19:43:52Z,"Sorry, I misclicked, please ignore.\n\nYou'll need to get rid of the merge commits though.\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-34797110,34797110,
jmcorgan,2014-02-11T19:45:42Z,"I don't mind squashing all of these into a new single commit; however, this will mean that your original contributions will show up as done by me instead.  If that is not a problem, I'll do this right now and update the PR.\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-34797318,34797318,
sipa,2014-02-11T19:45:56Z,"Also, I don't understand how you can call it a ""lite"" wallet if it requires a fully-indexed full node behind the scenes. That's exactly why I hate this.\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-34797341,34797341,
jmcorgan,2014-02-11T19:47:41Z,"Poor terminology.  I have a personal need to have this index, and I also already run multiple copies of bitcoind fully indexed for other reasons.\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-34797552,34797552,
luke-jr,2014-02-11T19:48:08Z,@jmcorgan Just cherry-pick the original commits on top of master. Or commit with --date=... --author=...\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-34797595,34797595,
jmcorgan,2014-02-11T19:49:29Z,"@luke-jr: unfortunately, I can't cherry-pick like that; the original commits were a year ago and way too much has changed.\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-34797758,34797758,
luke-jr,2014-02-11T19:50:40Z,@jmcorgan Just resolve the conflicts like you had to for this..\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-34797895,34797895,
jmcorgan,2014-02-11T19:54:45Z,"@luke-jr The conflicts were extensive and spread over many files, including through file renames and code movement to new binaries (like bitcoin-cli).  I think I'll just squash this whole branch to a commit, make sipa the author, and go with it.  It's not like I wrote any of the actual features, just the drudge work to get them current.\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-34798363,34798363,
jmcorgan,2014-02-11T20:03:22Z,This has been squashed to a single commit.\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-34799370,34799370,
ghost,2014-02-11T20:18:42Z,nice!\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-34800991,34800991,
sipa,2014-02-11T20:21:01Z,"Wanting this to implement a wallet still sounds like a horrible idea. It's awfully inefficient, and will only work with confirmed transactions.\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-34801233,34801233,
jmcorgan,2014-02-11T20:37:44Z,"Well, it does what I need, that's why I spent the time and effort to refresh it.   Maybe it is useful to others, maybe not--you guys decide.  If it doesn't get merged I'll try to keep it fresh on my repo as master changes.\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-34803262,34803262,
jmcorgan,2014-03-01T18:02:58Z,"Rebased off 0.9.0rc2, minor conflict in main.cpp.\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-36431555,36431555,
jmcorgan,2014-03-31T14:58:01Z,Rebased off master to accommodate rpc call table reorg conflict.\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-39098068,39098068,
jmcorgan,2014-06-07T16:30:34Z,"Rebased on current master with minor fixups (**func** usage, switch away from boost::int64_t).  Also, there is now a addrindex-0.9.2 branch in my repo with the same functionality that is rebased on v0.9.2rc2.\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-45414489,45414489,
leofidus,2014-06-08T03:00:45Z,"so the main reason against implementing this is that there is no equivalent index over the utxo set, so people would start depending on a fully indexed blockchain?\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-45427062,45427062,
laanwj,2014-06-08T07:41:48Z,"Right, there are other tools that can be used to index the entire block chain if you need to, for example for forensic reasons. One of these is Bitpay's insight. Anything that relies on indexing the whole block chain doesn't belong in Bitcoin Core. These indices could be anything, depending on the kind of queries you want to do. So use the right tool for the job.\n\nFrom mailing list discussion a ",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-45430751,45430751,
jmcorgan,2014-06-29T02:53:56Z,Minor rebase to accommodate CTransaction and POW refactoring.\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-47444439,47444439,
jmcorgan,2014-07-01T16:51:24Z,Minor rebase to accommodate #4415 merge.\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-47681107,47681107,
jmcorgan,2014-07-07T17:08:49Z,Minor rebase to accommodate smart fees merge.\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-48207289,48207289,
jmcorgan,2014-07-14T00:25:37Z,Minor rebase for rpcserver.cpp changes.\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-48856358,48856358,
jmcorgan,2014-07-30T16:03:55Z,Minor rebase to accommodate #4593 changes.\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-50636442,50636442,
jmcorgan,2014-08-12T08:30:37Z,Minor rebase to accommodate RPC server help categorization.\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-51886952,51886952,
jmcorgan,2014-08-18T13:40:29Z,Minor rebase to accommodate #4656.\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-52492881,52492881,
BitcoinPullTester,2014-08-18T19:54:02Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p3652_609a0a7831e2dea70f32ddb1603593a3a9437701/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-52545441,52545441,
luke-jr,2014-08-20T12:12:19Z,@gmaxwell mentioned this was buggy - hope he can elaborate.\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-52766735,52766735,
jmcorgan,2014-08-22T19:30:23Z,@luke-jr @gmaxwell Context?\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-53109691,53109691,
jgarzik,2014-10-13T15:24:41Z,(1) Still waiting on @gmaxwell comment?\n(2) Intersects with #5048 ?\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-58908149,58908149,
btcdrak,2014-10-26T20:52:07Z,Needs rebase\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-60531770,60531770,
dexX7,2014-11-26T19:26:07Z,"@gmaxwell: I'm very interested in learning about potential bugs here as well. The only issue that I noticed, besides a fixed FD leak, and one should be aware of: orphaned transactions are not rermoved from the index.\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-64698122,64698122,
luke-jr,2014-11-26T20:23:32Z,I wouldn't expect orphaned transactions to be removed from the index...?\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-64705636,64705636,
sipa,2014-11-26T20:26:10Z,They're kept in -txindex as well.\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-64705925,64705925,
gmaxwell,2014-11-26T20:34:10Z,"What I observed was missing transactions. But I can't tell why they were missing... e.g. perhaps they were inserted and reorged out. I'm absolutely sure they were missing, since ... thats easy to reliably test..   \n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-64706828,64706828,
dexX7,2014-11-26T20:54:09Z,"Bad choice of words: returning and keeping orphaned transactions is fine and not an issue per se, but it wasn't something I expected.\n\nThanks for information.\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-64709136,64709136,
btcdrak,2014-12-12T20:53:11Z,We have ported this to the current `master` branch of bitcoin if anyone is still interested https://github.com/viacoin/viacoin/pull/19 by @reorder\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-66833527,66833527,
ghost,2014-12-30T14:06:31Z,i hope this hasn't been shelved\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-68358516,68358516,
btcdrak,2015-04-05T22:16:07Z,"I dont know if there is still interest in this PR. I have it adapted for bitcoin 0.10 here https://github.com/btcdrak/bitcoin/tree/addrindex\n\nIt's been used in deployment now for many months, including by Counterparty without any problems or missing transactions. @gmaxwell unless there is a concrete example of it missing data out, I would suggest it's been well tested to date. Counterparty has b",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-89864038,89864038,
dexX7,2015-04-05T22:50:02Z,"@btcdrak: it's great that you maintain the branch and I'm sure there are a few using it. For a longer time the Counterparty integration did not filter orphaned transactions, and just used all of them, and this was basically unnoticed, until pointed out, if I recall correctly. So when you say ""stress tested"", does this equal ""really tested"" or ""there were no complaints so far""?\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-89867507,89867507,
reorder,2015-04-06T06:48:31Z,"@dexX7 Counterparty (and other users of addrindex) rely on 'confirmations' field of transaction record to be non-zero, which only holds if transaction block is in mapBlockIndex. I am not sure how are reorgs handled by current Counterparty code but it used to reparse blockchain tail and invalidate orphaned transactions.\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-89947756,89947756,
dexX7,2015-04-06T07:33:52Z,"@reorder: I'm not really familiar with how the address index is used in the context of XCP, thus the curiosity. Also: https://github.com/CounterpartyXCP/counterpartyd/pull/418#issuecomment-64180770.. :)\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-89960037,89960037,
reorder,2015-04-06T07:54:24Z,"@dexX7 I was actually assuming XCP logic is similar to what we have done in Clearinghouse/Viacoin using the same addrindex code: with Viacoin extremely short blocktime there happens a reorg or two every hour so handling it can indeed be considered ""stress tested"".\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-89963756,89963756,
btcdrak,2015-04-06T08:41:57Z,"@dexX7 Counterparty have relied exclusively on this patch for 5 months in production processing thousands of requests per day in counterwallet.co, I believe this counts as stress testing. In Viacoin's ClearingHouse we have relied on this patch for about 8 months and as reorder explains we have a lot more reorgs than the bitcoin blockchain. This is why I am confident that the patch, as it exists in",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-89977745,89977745,
dexX7,2015-04-06T08:47:24Z,Thanks for the follow up.\n,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-89979188,89979188,
deweller,2015-07-13T21:51:32Z,@btcdrak \n\nHere is a picture of results from running https://gist.github.com/deweller/b823eb3f76f84071b761 for 90 minutes this afternoon:\nThis is on a t2.large instance with an SSD EBS drive.\n\n![untitled_spreadsheet_-_google_sheets](https://cloud.githubusercontent.com/assets/51414/8661728/41eaa260-297f-11e5-9308-c0aeee7c8ed8.png)\n\nLink to the data:\n\nhttps://docs.google.com/spreadsheets/d/,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-121072729,121072729,
dexX7,2015-07-13T22:34:06Z,"@deweller: so what did you learn, based on this data?\n\nThere are a few things to keep in mind here:\n- a great number of results is empty, because there is no transaction history yet (> 50 %)\n- the delay grows proportionally to the number of results\n\nI'm not sure, what exactly you want to test, but you're probably better off, if you'd exclude empty results, and messure delays in time/byte or ",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-121080808,121080808,
deweller,2015-07-14T00:50:54Z,We have been experiencing issues with delayed transaction creations in counterparty.  The problem became significantly worse during the recent spam attacks on the bitcoin network.\n\nOur preliminary tests pointed toward bitcoind responding very slowly to a `getrawtransaction` RPC call.  So we ran some tests to see what kind of response we were getting from queries to the address index.\n\nI've pos,https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-121100851,121100851,
jgarzik,2015-07-23T17:53:22Z,"Leaning towards closing this - pinging interested parties here for comment.\n\nRationale:  For whatever reason, this seems stuck and not getting merged.  That is _not_ a judgement on the goal or code quality or a NAK, simply an observation over time.\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-124181588,124181588,
ghost,2015-07-24T18:28:14Z,"I integrated this into my alt and find it very useful, i may try get time and submit a refactored version. IMO it is a feature well worth the effort as it reduces reliance on web explorers for information, maybe label it as an advanced option much like coin-control. \n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-124610516,124610516,
jgarzik,2015-09-15T17:14:12Z,"Closing for aforementioned non-technical reasons.  I'm hoping that someone will come along, volunteer as a maintainer of this change, and work to shepherd this in.\n",https://github.com/bitcoin/bitcoin/pull/3652#issuecomment-140468795,140468795,
,2014-12-30T17:52:01Z,"This function is giving problems to compile on the latest master branch, particularly \n\nconst CKeyID *pkeyid = boost::get<CKeyID>(&dest);\n\nanyone know how to re-write it so it compiles?\n",https://github.com/bitcoin/bitcoin/pull/3652#discussion_r22356834,22356834,src/main.cpp
davecgh,2015-02-05T16:31:01Z,searchrawtransactions\n,https://github.com/bitcoin/bitcoin/pull/3652#discussion_r24175633,24175633,src/rpcclient.cpp
