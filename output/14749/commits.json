[
  {
    "sha": "a1fb77ec0e4a5f17770c5ee138af833b8ef9a4d5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMWZiNzdlYzBlNGE1ZjE3NzcwYzVlZTEzOGFmODMzYjhlZjlhNGQ1",
    "commit": {
      "author": {
        "name": "vim88",
        "email": "vim88vim88@gmail.com",
        "date": "2018-11-17T20:13:48Z"
      },
      "committer": {
        "name": "vim88",
        "email": "vim88vim88@gmail.com",
        "date": "2018-11-17T20:13:48Z"
      },
      "message": "Refactor: Changes postincrement to preincrement in for loop in src/consensus files",
      "tree": {
        "sha": "d97e112dd4efafe17d93a64bc86da25848804f98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d97e112dd4efafe17d93a64bc86da25848804f98"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a1fb77ec0e4a5f17770c5ee138af833b8ef9a4d5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1fb77ec0e4a5f17770c5ee138af833b8ef9a4d5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a1fb77ec0e4a5f17770c5ee138af833b8ef9a4d5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1fb77ec0e4a5f17770c5ee138af833b8ef9a4d5/comments",
    "author": {
      "login": "vim88",
      "id": 45130411,
      "node_id": "MDQ6VXNlcjQ1MTMwNDEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/45130411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vim88",
      "html_url": "https://github.com/vim88",
      "followers_url": "https://api.github.com/users/vim88/followers",
      "following_url": "https://api.github.com/users/vim88/following{/other_user}",
      "gists_url": "https://api.github.com/users/vim88/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vim88/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vim88/subscriptions",
      "organizations_url": "https://api.github.com/users/vim88/orgs",
      "repos_url": "https://api.github.com/users/vim88/repos",
      "events_url": "https://api.github.com/users/vim88/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vim88/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "vim88",
      "id": 45130411,
      "node_id": "MDQ6VXNlcjQ1MTMwNDEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/45130411?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vim88",
      "html_url": "https://github.com/vim88",
      "followers_url": "https://api.github.com/users/vim88/followers",
      "following_url": "https://api.github.com/users/vim88/following{/other_user}",
      "gists_url": "https://api.github.com/users/vim88/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vim88/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vim88/subscriptions",
      "organizations_url": "https://api.github.com/users/vim88/orgs",
      "repos_url": "https://api.github.com/users/vim88/repos",
      "events_url": "https://api.github.com/users/vim88/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vim88/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35739976c1d9ad250ece573980c57e7e7976ae23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35739976c1d9ad250ece573980c57e7e7976ae23",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35739976c1d9ad250ece573980c57e7e7976ae23"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "7cf9486d8913054099c03da80a9426ddf3525129",
        "filename": "src/consensus/merkle.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1fb77ec0e4a5f17770c5ee138af833b8ef9a4d5/src/consensus/merkle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1fb77ec0e4a5f17770c5ee138af833b8ef9a4d5/src/consensus/merkle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/merkle.cpp?ref=a1fb77ec0e4a5f17770c5ee138af833b8ef9a4d5",
        "patch": "@@ -67,7 +67,7 @@ uint256 BlockMerkleRoot(const CBlock& block, bool* mutated)\n {\n     std::vector<uint256> leaves;\n     leaves.resize(block.vtx.size());\n-    for (size_t s = 0; s < block.vtx.size(); s++) {\n+    for (size_t s = 0; s < block.vtx.size(); ++s) {\n         leaves[s] = block.vtx[s]->GetHash();\n     }\n     return ComputeMerkleRoot(std::move(leaves), mutated);\n@@ -78,7 +78,7 @@ uint256 BlockWitnessMerkleRoot(const CBlock& block, bool* mutated)\n     std::vector<uint256> leaves;\n     leaves.resize(block.vtx.size());\n     leaves[0].SetNull(); // The witness hash of the coinbase is 0.\n-    for (size_t s = 1; s < block.vtx.size(); s++) {\n+    for (size_t s = 1; s < block.vtx.size(); ++s) {\n         leaves[s] = block.vtx[s]->GetWitnessHash();\n     }\n     return ComputeMerkleRoot(std::move(leaves), mutated);"
      },
      {
        "sha": "082d4fe2f7c0233496093e83b786ab34fc1fe5f1",
        "filename": "src/consensus/tx_verify.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1fb77ec0e4a5f17770c5ee138af833b8ef9a4d5/src/consensus/tx_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1fb77ec0e4a5f17770c5ee138af833b8ef9a4d5/src/consensus/tx_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.cpp?ref=a1fb77ec0e4a5f17770c5ee138af833b8ef9a4d5",
        "patch": "@@ -51,7 +51,7 @@ std::pair<int, int64_t> CalculateSequenceLocks(const CTransaction &tx, int flags\n         return std::make_pair(nMinHeight, nMinTime);\n     }\n \n-    for (size_t txinIndex = 0; txinIndex < tx.vin.size(); txinIndex++) {\n+    for (size_t txinIndex = 0; txinIndex < tx.vin.size(); ++txinIndex) {\n         const CTxIn& txin = tx.vin[txinIndex];\n \n         // Sequence numbers with the most significant bit set are not\n@@ -124,7 +124,7 @@ unsigned int GetP2SHSigOpCount(const CTransaction& tx, const CCoinsViewCache& in\n         return 0;\n \n     unsigned int nSigOps = 0;\n-    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    for (unsigned int i = 0; i < tx.vin.size(); ++i)\n     {\n         const Coin& coin = inputs.AccessCoin(tx.vin[i].prevout);\n         assert(!coin.IsSpent());\n@@ -146,7 +146,7 @@ int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& i\n         nSigOps += GetP2SHSigOpCount(tx, inputs) * WITNESS_SCALE_FACTOR;\n     }\n \n-    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    for (unsigned int i = 0; i < tx.vin.size(); ++i)\n     {\n         const Coin& coin = inputs.AccessCoin(tx.vin[i].prevout);\n         assert(!coin.IsSpent());"
      }
    ]
  }
]