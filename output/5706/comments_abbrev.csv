laanwj,2015-01-26T10:48:32Z,"Thanks for reporting this in such detail. I'm not sure this limitation is intended, so we may go for a different fix.\n",https://github.com/bitcoin/bitcoin/pull/5706#issuecomment-71443115,71443115,
luke-jr,2015-01-26T10:51:57Z,Pretty sure it should fail with >15 due to the P2SH limitations.\n,https://github.com/bitcoin/bitcoin/pull/5706#issuecomment-71443523,71443523,
laanwj,2015-01-26T11:03:01Z,"Right, I remember now, we already check the resulting script against MAX_SCRIPT_ELEMENT_SIZE for that later.\n\nThe issue is that some assertion before that fails while constructing the script\n\nIn any case, the proposed fix to hardcode a limit at 16 (because the underlying code fails) is not so bad then. Though it may make sense to move the check down to GetScriptForMultisig instead of in the RP",https://github.com/bitcoin/bitcoin/pull/5706#issuecomment-71444788,71444788,
fsb4000,2015-01-26T11:03:29Z,"**luke-jr:**\n\n> Pretty sure it should fail with >15 due to the P2SH limitations.\n\nYes, it should.\nif keys.size equal 16 then  error message looks like:\n\n```\nredeemScript exceeds size limit: 547 > 520 (code -1)\n```\n\nBut I left a restriction on 16 because\n\n``` c\nstatic const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520; // bytes\n```\n\nmay change in the future\n",https://github.com/bitcoin/bitcoin/pull/5706#issuecomment-71444830,71444830,
luke-jr,2015-01-26T11:59:12Z,"Not likely, that'd be a hardfork.\n",https://github.com/bitcoin/bitcoin/pull/5706#issuecomment-71450675,71450675,
