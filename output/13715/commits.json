[
  {
    "sha": "ea5340c9d24b5b59b178c06e7cb25495a282fdd0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYTUzNDBjOWQyNGI1YjU5YjE3OGMwNmU3Y2IyNTQ5NWEyODJmZGQw",
    "commit": {
      "author": {
        "name": "marcoagner",
        "email": "marco@agner.io",
        "date": "2018-07-19T11:14:05Z"
      },
      "committer": {
        "name": "marcoagner",
        "email": "marco@agner.io",
        "date": "2018-07-19T11:24:31Z"
      },
      "message": "tests: fixes mininode's P2PConnection sending messages on closing transport\n\n- checks if  _transport.is_closing() (added in python3.4.4/python3.5.1)\nbefore attempting to send messages on P2PConnection's send_message\nmethod.",
      "tree": {
        "sha": "6992387bfefd974d599c335679d184c2ad4a812e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6992387bfefd974d599c335679d184c2ad4a812e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea5340c9d24b5b59b178c06e7cb25495a282fdd0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEBVLlIGnnSaHbHcvrDcd/xh7T7MQFAltQdO8ACgkQDcd/xh7T\n7MSLuA//YZyGR+MlTYIiY89JLAvY/FSRt8WrJ7Kaye76ZbmMwUyiagsPwIS3AOrk\n38y8UbQtkwGwAyD6d56NJ5EA1UFhCCCaS9LJiJbZqtQCWUM3APaWZ7JstoMioaNB\nsnDCBEFeSTfTedOKGI2IftS2sYgFNv1gZvOSW/bFHd7c7K8866Z5If69ViI/DG09\naGwxh7/TpPSbrc2FNx9ZLD3WmhWTC08/dQfCdappTnCLjeZnK+I8zX0olmtJedl6\nPOPz5Lj2b8mbhjuDba7ntX+uMIYJGB/xSmvWHyIE4zF3hPUCPZ87uPmazgpsgKVw\n4141QgXLXCqJDFRwvQYfcfweMG90JH8YEl5qAan/uLe1WIJbdc6BK3y9Rjb+HDG1\n1/slkJbOTSrPvowh1/EBo/XmCL/2tmXnpQ8+PxfDsX6oUtl8w5z7Yk0svyoW/P0D\n9mv0RsPoRBvBhDb6JPztVa130RNwWoyfsVDcuPVXc/6bAH/ZAtbPhyu5NdrF4KR3\n6xe0ccNIg9kYqOa8HzPniszCsAUwATr3Anm0KzvOMw1ZB/067g9AlUaUn5tzS28Q\nc0ZOJ8GKkfQiNabgQO4s7Hy9BtxUhp832M6eOEwgZ6fi8kGMjMWuN3eVOH4C5qg0\nvFluK3oBBx8p+T+NVKlUitCbZFDtgGzaXsdRBsAOtOyoUsQJhuU=\n=HTwD\n-----END PGP SIGNATURE-----",
        "payload": "tree 6992387bfefd974d599c335679d184c2ad4a812e\nparent 4a3e8c5aa6a5d8dda15a76d644b2a9f0f40cdec7\nauthor marcoagner <marco@agner.io> 1531998845 +0100\ncommitter marcoagner <marco@agner.io> 1531999471 +0100\n\ntests: fixes mininode's P2PConnection sending messages on closing transport\n\n- checks if  _transport.is_closing() (added in python3.4.4/python3.5.1)\nbefore attempting to send messages on P2PConnection's send_message\nmethod.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea5340c9d24b5b59b178c06e7cb25495a282fdd0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea5340c9d24b5b59b178c06e7cb25495a282fdd0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea5340c9d24b5b59b178c06e7cb25495a282fdd0/comments",
    "author": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "marcoagner",
      "id": 5016303,
      "node_id": "MDQ6VXNlcjUwMTYzMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5016303?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcoagner",
      "html_url": "https://github.com/marcoagner",
      "followers_url": "https://api.github.com/users/marcoagner/followers",
      "following_url": "https://api.github.com/users/marcoagner/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcoagner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcoagner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcoagner/subscriptions",
      "organizations_url": "https://api.github.com/users/marcoagner/orgs",
      "repos_url": "https://api.github.com/users/marcoagner/repos",
      "events_url": "https://api.github.com/users/marcoagner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcoagner/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4a3e8c5aa6a5d8dda15a76d644b2a9f0f40cdec7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a3e8c5aa6a5d8dda15a76d644b2a9f0f40cdec7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4a3e8c5aa6a5d8dda15a76d644b2a9f0f40cdec7"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d5b1a90687e8decc46cd706a59fad2f0f2841f28",
        "filename": "test/functional/test_framework/mininode.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea5340c9d24b5b59b178c06e7cb25495a282fdd0/test/functional/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea5340c9d24b5b59b178c06e7cb25495a282fdd0/test/functional/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/mininode.py?ref=ea5340c9d24b5b59b178c06e7cb25495a282fdd0",
        "patch": "@@ -179,7 +179,7 @@ def send_message(self, message):\n             raise IOError('Not connected')\n         self._log_message(\"send\", message)\n         tmsg = self._build_message(message)\n-        NetworkThread.network_event_loop.call_soon_threadsafe(lambda: self._transport and self._transport.write(tmsg))\n+        NetworkThread.network_event_loop.call_soon_threadsafe(lambda: self._transport and not self._transport.is_closing() and self._transport.write(tmsg))\n \n     # Class utility methods\n "
      }
    ]
  }
]