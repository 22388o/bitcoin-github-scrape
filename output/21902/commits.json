[
  {
    "sha": "fa4bbd306e1ca369d02eb864983fbb4d64b50ca9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTRiYmQzMDZlMWNhMzY5ZDAyZWI4NjQ5ODNmYmI0ZDY0YjUwY2E5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-10T07:13:33Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-10T07:09:24Z"
      },
      "message": "refactor: Remove useless extern keyword",
      "tree": {
        "sha": "ec15e4e5218de8c0826f23294f7cad8656b770cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec15e4e5218de8c0826f23294f7cad8656b770cc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa4bbd306e1ca369d02eb864983fbb4d64b50ca9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjvLwv/Qgf3/9eeL01oGzKa+Tu6U9xQ1qQzBFAZ4PoDwqmO+xOZcbEXBkjVGD+d\npdIoJNkkVaUf2U1M/SEmLlLQ2mNksI0icxzRLBjlUNPAkvG4kDAc7FwhAS4HP8bx\ndcrJwu5umb3q17gJQpZPKc2YLib6NRVm4VTlDy4wbv/+LUI6UZ7aG7JC6WWndMge\nY4xciFcmsSS2wIO7GSjPuNiLmexf33l6mxc+yMdugq/a9Cd9PbUEZWVhfNqTWbxQ\nH6hLp/vDHVs1MvO7bYZs2FJ01XkH6S4qOQjTwOkH0kbFwBgb/MoBic8AP9g1Suez\n0wjPYfn/FKnhjSjGhN+1h2T+xQ4UWRARm7znXP/7RPwluqUicZvDstThPeyCq3ZU\n0DREQyqc2sCuN4oyT8QmHuDq1ongcHiRlWSZFeKg3KPe4zWqI4HkSNK7MLp5bB+x\neAUdCVPmK49J6GI6w/2BSOiflaMHxlYYDxEQ3DtXkwbbZ02htJq2WjV8acjaeNes\n81W83C2w\n=3K3F\n-----END PGP SIGNATURE-----",
        "payload": "tree ec15e4e5218de8c0826f23294f7cad8656b770cc\nparent adf78434100204f2eb799bbb96a28b734fb084f0\nauthor MarcoFalke <falke.marco@gmail.com> 1620630813 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1620630564 +0200\n\nrefactor: Remove useless extern keyword\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4bbd306e1ca369d02eb864983fbb4d64b50ca9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa4bbd306e1ca369d02eb864983fbb4d64b50ca9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4bbd306e1ca369d02eb864983fbb4d64b50ca9/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "adf78434100204f2eb799bbb96a28b734fb084f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/adf78434100204f2eb799bbb96a28b734fb084f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/adf78434100204f2eb799bbb96a28b734fb084f0"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 14,
      "deletions": 15
    },
    "files": [
      {
        "sha": "d43ee33b0f7f64ace4055b723dce6875bc5a2201",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4bbd306e1ca369d02eb864983fbb4d64b50ca9/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4bbd306e1ca369d02eb864983fbb4d64b50ca9/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=fa4bbd306e1ca369d02eb864983fbb4d64b50ca9",
        "patch": "@@ -72,10 +72,10 @@ void RPCTypeCheckObj(const UniValue& o,\n  * Utilities: convert hex-encoded Values\n  * (throws error if not hex).\n  */\n-extern uint256 ParseHashV(const UniValue& v, std::string strName);\n-extern uint256 ParseHashO(const UniValue& o, std::string strKey);\n-extern std::vector<unsigned char> ParseHexV(const UniValue& v, std::string strName);\n-extern std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKey);\n+uint256 ParseHashV(const UniValue& v, std::string strName);\n+uint256 ParseHashO(const UniValue& o, std::string strKey);\n+std::vector<unsigned char> ParseHexV(const UniValue& v, std::string strName);\n+std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKey);\n \n /**\n  * Validate and return a CAmount from a UniValue number or string.\n@@ -84,13 +84,13 @@ extern std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKe\n  * @param[in] decimals  Number of significant digits (default: 8).\n  * @returns a CAmount if the various checks pass.\n  */\n-extern CAmount AmountFromValue(const UniValue& value, int decimals = 8);\n+CAmount AmountFromValue(const UniValue& value, int decimals = 8);\n \n using RPCArgList = std::vector<std::pair<std::string, UniValue>>;\n-extern std::string HelpExampleCli(const std::string& methodname, const std::string& args);\n-extern std::string HelpExampleCliNamed(const std::string& methodname, const RPCArgList& args);\n-extern std::string HelpExampleRpc(const std::string& methodname, const std::string& args);\n-extern std::string HelpExampleRpcNamed(const std::string& methodname, const RPCArgList& args);\n+std::string HelpExampleCli(const std::string& methodname, const std::string& args);\n+std::string HelpExampleCliNamed(const std::string& methodname, const RPCArgList& args);\n+std::string HelpExampleRpc(const std::string& methodname, const std::string& args);\n+std::string HelpExampleRpcNamed(const std::string& methodname, const RPCArgList& args);\n \n CPubKey HexToPubKey(const std::string& hex_in);\n CPubKey AddrToPubKey(const FillableSigningProvider& keystore, const std::string& addr_in);"
      },
      {
        "sha": "a090cb340beea3dafbc330ef3507058eaa3d4cc4",
        "filename": "src/test/base58_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4bbd306e1ca369d02eb864983fbb4d64b50ca9/src/test/base58_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4bbd306e1ca369d02eb864983fbb4d64b50ca9/src/test/base58_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base58_tests.cpp?ref=fa4bbd306e1ca369d02eb864983fbb4d64b50ca9",
        "patch": "@@ -16,7 +16,7 @@\n \n using namespace std::literals;\n \n-extern UniValue read_json(const std::string& jsondata);\n+UniValue read_json(const std::string& jsondata);\n \n BOOST_FIXTURE_TEST_SUITE(base58_tests, BasicTestingSetup)\n "
      },
      {
        "sha": "8629d13840ca4670cd6f025f42c340ee91c888bb",
        "filename": "src/test/key_io_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4bbd306e1ca369d02eb864983fbb4d64b50ca9/src/test/key_io_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4bbd306e1ca369d02eb864983fbb4d64b50ca9/src/test/key_io_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/key_io_tests.cpp?ref=fa4bbd306e1ca369d02eb864983fbb4d64b50ca9",
        "patch": "@@ -15,7 +15,7 @@\n \n #include <univalue.h>\n \n-extern UniValue read_json(const std::string& jsondata);\n+UniValue read_json(const std::string& jsondata);\n \n BOOST_FIXTURE_TEST_SUITE(key_io_tests, BasicTestingSetup)\n "
      },
      {
        "sha": "62fd81673d96a9da9e8afebf8047660ce84cba36",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4bbd306e1ca369d02eb864983fbb4d64b50ca9/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4bbd306e1ca369d02eb864983fbb4d64b50ca9/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=fa4bbd306e1ca369d02eb864983fbb4d64b50ca9",
        "patch": "@@ -39,8 +39,7 @@ static const unsigned int gFlags = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_STRICTENC;\n unsigned int ParseScriptFlags(std::string strFlags);\n std::string FormatScriptFlags(unsigned int flags);\n \n-UniValue\n-read_json(const std::string& jsondata)\n+UniValue read_json(const std::string& jsondata)\n {\n     UniValue v;\n "
      },
      {
        "sha": "195565c1f8b131d97e221b998bd003a621bc2ac7",
        "filename": "src/test/sighash_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4bbd306e1ca369d02eb864983fbb4d64b50ca9/src/test/sighash_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4bbd306e1ca369d02eb864983fbb4d64b50ca9/src/test/sighash_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sighash_tests.cpp?ref=fa4bbd306e1ca369d02eb864983fbb4d64b50ca9",
        "patch": "@@ -21,7 +21,7 @@\n \n #include <univalue.h>\n \n-extern UniValue read_json(const std::string& jsondata);\n+UniValue read_json(const std::string& jsondata);\n \n // Old script.cpp SignatureHash function\n uint256 static SignatureHashOld(CScript scriptCode, const CTransaction& txTo, unsigned int nIn, int nHashType)"
      },
      {
        "sha": "40c53cb2ec5bf8d2cbb167b0d271c250d2d1eb03",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4bbd306e1ca369d02eb864983fbb4d64b50ca9/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4bbd306e1ca369d02eb864983fbb4d64b50ca9/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=fa4bbd306e1ca369d02eb864983fbb4d64b50ca9",
        "patch": "@@ -39,7 +39,7 @@\n typedef std::vector<unsigned char> valtype;\n \n // In script_tests.cpp\n-extern UniValue read_json(const std::string& jsondata);\n+UniValue read_json(const std::string& jsondata);\n \n static std::map<std::string, unsigned int> mapFlagNames = {\n     {std::string(\"P2SH\"), (unsigned int)SCRIPT_VERIFY_P2SH},"
      }
    ]
  }
]