sipa,2012-06-24T15:48:10Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/1515#issuecomment-6533858,6533858,
gavinandresen,2012-06-24T16:00:37Z,Good idea.\n,https://github.com/bitcoin/bitcoin/pull/1515#issuecomment-6533968,6533968,
Diapolo,2012-06-24T16:11:21Z,Sounds good.\n,https://github.com/bitcoin/bitcoin/pull/1515#issuecomment-6534067,6534067,
laanwj,2012-06-25T13:42:09Z,"Good idea.\n\nI've only got a comment about the thread names: it makes sense to link them to thread names in in the enumeration in net.h (sockethandler, openconnections, messagehandler, miner, etc...) to be consistent and for easy debugging. Or add least add a comment in net.h by which name each of the threads can be recognized.\n",https://github.com/bitcoin/bitcoin/pull/1515#issuecomment-6547507,6547507,
muggenhor,2012-06-26T05:25:14Z,"@laanwj I've tried to make the names look like those in the thread enumeration, unfortunately only 15 characters are available. So I've deviated from those names for some instances to improve readability. That being said I could add a copy of the thread names as comments to that enum.\n",https://github.com/bitcoin/bitcoin/pull/1515#issuecomment-6567343,6567343,
luke-jr,2012-06-28T17:55:18Z,"Might add pthread_set_name_np for BSD.\n\nI haven't checked, but it would be annoying if this erases the commandline parameters - I use a dummy -name=foo to discern between different bitcoinds in ps right now.\n",https://github.com/bitcoin/bitcoin/pull/1515#issuecomment-6636747,6636747,
muggenhor,2012-06-30T15:05:12Z,"@luke-jr If pthread_set_name_np is implemented similar to BSD's setprogname then it _will_ modify the commandline parameters (that's how it does this: overwriting argv[0-n] memory).\n\nIt's manpage seems to suggest otherwise though. I can add the code easily enough, but I'm not even sure if my FreeBSD 8 installation still boots. So I'd appreciate if you could test & confirm that it works as advert",https://github.com/bitcoin/bitcoin/pull/1515#issuecomment-6685868,6685868,
luke-jr,2012-06-30T15:12:04Z,"@muggenhor I only use Linux, just came across the BSD variant looking at your pullreq.\n",https://github.com/bitcoin/bitcoin/pull/1515#issuecomment-6685910,6685910,
muggenhor,2012-06-30T15:25:23Z,"@luke-jr Right, I've just confirmed that I can cross-compile an isolated call to pthread_set_name_np for FreeBSD 8.\n\nI'll try dusting off my FreeBSD 8 box for a test run.\n",https://github.com/bitcoin/bitcoin/pull/1515#issuecomment-6685998,6685998,
muggenhor,2012-06-30T18:03:53Z,"Right, my FreeBSD system doesn't even boot properly anymore. So I'll disable the FreeBSD code (but leave it in) so that it won't break on those systems but another developer (who _does_ have FreeBSD/OpenBSD) can confirm that it _does_ work and enable it.\n",https://github.com/bitcoin/bitcoin/pull/1515#issuecomment-6687122,6687122,
Diapolo,2012-07-08T19:57:24Z,"In qtipcserver.cpp we have another thread afaik, any reason to not cover that one in this pull?\n",https://github.com/bitcoin/bitcoin/pull/1515#issuecomment-6834030,6834030,
muggenhor,2012-07-08T21:24:27Z,@Diapolo: that was just an oversight. Addressed in my last commit.\n,https://github.com/bitcoin/bitcoin/pull/1515#issuecomment-6835036,6835036,
muggenhor,2012-07-16T23:54:48Z,"Rebased again, still waiting to be merged...\n",https://github.com/bitcoin/bitcoin/pull/1515#issuecomment-7023095,7023095,
luke-jr,2012-06-28T17:48:33Z,Is there a reason to check for **linux** specifically?\n,https://github.com/bitcoin/bitcoin/pull/1515#discussion_r1070066,1070066,src/util.h
luke-jr,2012-06-28T17:50:03Z,"But doesn't this thread _relock_ the wallet? So ""bitcoin-lock-wlt""\n",https://github.com/bitcoin/bitcoin/pull/1515#discussion_r1070078,1070078,src/bitcoinrpc.cpp
luke-jr,2012-06-28T17:51:41Z,"""bitcoin-miner"" for consistency... (some similar ones later)\n",https://github.com/bitcoin/bitcoin/pull/1515#discussion_r1070094,1070094,src/main.cpp
muggenhor,2012-06-30T14:53:43Z,"That syscall with that parameter is Linux specific, additionally the PR_SET_NAME checking-part is because it's only available on Linux upwards of 2.6.9.\n",https://github.com/bitcoin/bitcoin/pull/1515#discussion_r1080651,1080651,src/util.h
muggenhor,2012-06-30T15:06:16Z,"Right, fixed it.\n",https://github.com/bitcoin/bitcoin/pull/1515#discussion_r1080660,1080660,src/bitcoinrpc.cpp
muggenhor,2012-06-30T15:06:20Z,Fixed.\n,https://github.com/bitcoin/bitcoin/pull/1515#discussion_r1080661,1080661,src/main.cpp
luke-jr,2012-06-30T15:11:43Z,"Yes, my point was that just checking for PR_SET_NAME should probably suffice?\n",https://github.com/bitcoin/bitcoin/pull/1515#discussion_r1080662,1080662,src/util.h
muggenhor,2012-06-30T18:09:09Z,"Right, I suppose it does, removed the **linux** part.\n",https://github.com/bitcoin/bitcoin/pull/1515#discussion_r1080819,1080819,src/util.h
laanwj,2012-07-08T08:17:03Z,"Please move this implementation (and associated includes such as `sys/prctl.h`) to the .cpp instead of the .h, there is no need for inlining here.\n",https://github.com/bitcoin/bitcoin/pull/1515#discussion_r1119043,1119043,src/util.h
muggenhor,2012-07-08T18:22:14Z,"ACK, see rebased commits.\n",https://github.com/bitcoin/bitcoin/pull/1515#discussion_r1119478,1119478,src/util.h
Diapolo,2012-07-08T19:56:07Z,"I'm just asking myself, why not all Thread use `IMPLEMENT_RANDOMIZE_STACK`? Even if this is unrelated to this pull, what's the reason for that?\n",https://github.com/bitcoin/bitcoin/pull/1515#discussion_r1119585,1119585,src/net.cpp
muggenhor,2012-07-08T21:27:11Z,"When put like that I'd like to ask why IMPLEMENT_RANDOMIZE_STACK isn't implemented in CreateThread instead... Would call for a lot less duplication of code that way.\n\nIn fact, _why_ are we using CreateThread at all the way it is right now (as some kind of Windows API-like-wrapper) instead of Boost.Thread? Especially considering that the latter can be passed arbitrary parameters of arbitrary type",https://github.com/bitcoin/bitcoin/pull/1515#discussion_r1119684,1119684,src/net.cpp
Diapolo,2012-07-09T05:06:14Z,"I like the first idea, saves a few lines of code and we won't forget to add it (perhaps as another pull or commit for this one?).\n\nI can't comment on the Boost.Thread stuff, but as we include or somewhere else use it (the lib is there), why not ... perhaps main devs can comment here.\n",https://github.com/bitcoin/bitcoin/pull/1515#discussion_r1120245,1120245,src/net.cpp
muggenhor,2012-07-16T23:46:39Z,@Diapolo adding IMPLEMENT_RANDOMIZE_STACK to CreateThread would probably be best for another pull request.\n,https://github.com/bitcoin/bitcoin/pull/1515#discussion_r1174574,1174574,src/net.cpp
