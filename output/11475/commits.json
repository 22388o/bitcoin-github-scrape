[
  {
    "sha": "149dffd3b2a137d575ad19b8c0b13345efe3ada1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNDlkZmZkM2IyYTEzN2Q1NzVhZDE5YjhjMGIxMzM0NWVmZTNhZGEx",
    "commit": {
      "author": {
        "name": "Cristian Mircea Messel",
        "email": "mess110@gmail.com",
        "date": "2017-10-10T16:36:27Z"
      },
      "committer": {
        "name": "Cristian Mircea Messel",
        "email": "mess110@gmail.com",
        "date": "2017-10-11T20:39:47Z"
      },
      "message": "[rpc] mempoolinfo should take ::minRelayTxFee into account",
      "tree": {
        "sha": "ac8d63ea3fb651e0678619ef8a825d92a44f66b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac8d63ea3fb651e0678619ef8a825d92a44f66b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/149dffd3b2a137d575ad19b8c0b13345efe3ada1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/149dffd3b2a137d575ad19b8c0b13345efe3ada1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/149dffd3b2a137d575ad19b8c0b13345efe3ada1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/149dffd3b2a137d575ad19b8c0b13345efe3ada1/comments",
    "author": {
      "login": "mess110",
      "id": 226170,
      "node_id": "MDQ6VXNlcjIyNjE3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/226170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mess110",
      "html_url": "https://github.com/mess110",
      "followers_url": "https://api.github.com/users/mess110/followers",
      "following_url": "https://api.github.com/users/mess110/following{/other_user}",
      "gists_url": "https://api.github.com/users/mess110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mess110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mess110/subscriptions",
      "organizations_url": "https://api.github.com/users/mess110/orgs",
      "repos_url": "https://api.github.com/users/mess110/repos",
      "events_url": "https://api.github.com/users/mess110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mess110/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mess110",
      "id": 226170,
      "node_id": "MDQ6VXNlcjIyNjE3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/226170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mess110",
      "html_url": "https://github.com/mess110",
      "followers_url": "https://api.github.com/users/mess110/followers",
      "following_url": "https://api.github.com/users/mess110/following{/other_user}",
      "gists_url": "https://api.github.com/users/mess110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mess110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mess110/subscriptions",
      "organizations_url": "https://api.github.com/users/mess110/orgs",
      "repos_url": "https://api.github.com/users/mess110/repos",
      "events_url": "https://api.github.com/users/mess110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mess110/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "892809309c1bc370677241a715e57a2744f94323",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/892809309c1bc370677241a715e57a2744f94323",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/892809309c1bc370677241a715e57a2744f94323"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "874645f653ae4c247b4c4f02761aff71ad64b9b4",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/149dffd3b2a137d575ad19b8c0b13345efe3ada1/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/149dffd3b2a137d575ad19b8c0b13345efe3ada1/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=149dffd3b2a137d575ad19b8c0b13345efe3ada1",
        "patch": "@@ -1345,7 +1345,7 @@ UniValue mempoolInfoToJSON()\n     ret.push_back(Pair(\"usage\", (int64_t) mempool.DynamicMemoryUsage()));\n     size_t maxmempool = gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n     ret.push_back(Pair(\"maxmempool\", (int64_t) maxmempool));\n-    ret.push_back(Pair(\"mempoolminfee\", ValueFromAmount(mempool.GetMinFee(maxmempool).GetFeePerK())));\n+    ret.push_back(Pair(\"mempoolminfee\", ValueFromAmount(std::max(mempool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK())));\n \n     return ret;\n }"
      },
      {
        "sha": "d0ca24119ccdc98b3151c03bc26b5a95be128d60",
        "filename": "test/functional/wallet.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/149dffd3b2a137d575ad19b8c0b13345efe3ada1/test/functional/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/149dffd3b2a137d575ad19b8c0b13345efe3ada1/test/functional/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet.py?ref=149dffd3b2a137d575ad19b8c0b13345efe3ada1",
        "patch": "@@ -33,6 +33,9 @@ def run_test(self):\n         assert_equal(len(self.nodes[1].listunspent()), 0)\n         assert_equal(len(self.nodes[2].listunspent()), 0)\n \n+        self.log.info(\"Check for mempoolminfee in getmempoolinfo\")\n+        assert_equal(self.nodes[0].getmempoolinfo()['mempoolminfee'], Decimal('0.00001000'))\n+\n         self.log.info(\"Mining blocks...\")\n \n         self.nodes[0].generate(1)"
      }
    ]
  }
]