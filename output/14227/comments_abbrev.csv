sipa,2018-09-16T01:37:28Z,utACK,https://github.com/bitcoin/bitcoin/pull/14227#issuecomment-421668811,421668811,
practicalswift,2018-09-16T06:34:48Z,utACK be54f42e5f309ff332d74828ae294636d77fb8ea,https://github.com/bitcoin/bitcoin/pull/14227#issuecomment-421709234,421709234,
donaloconnor,2018-09-16T14:18:38Z,utACK https://github.com/bitcoin/bitcoin/commit/be54f42e5f309ff332d74828ae294636d77fb8ea,https://github.com/bitcoin/bitcoin/pull/14227#issuecomment-421772653,421772653,
gmaxwell,2018-09-16T15:40:15Z,utACK. ,https://github.com/bitcoin/bitcoin/pull/14227#issuecomment-421784472,421784472,
promag,2018-09-16T21:14:57Z,utACK be54f42.,https://github.com/bitcoin/bitcoin/pull/14227#issuecomment-421834870,421834870,
Empact,2018-09-16T23:34:25Z,utACK be54f42,https://github.com/bitcoin/bitcoin/pull/14227#issuecomment-421853234,421853234,
MarcoFalke,2018-09-17T23:03:47Z,"utACK be54f42, but I'd prefer a type safe `CAmount` that also provides constexpr compatible constructors similar to python's `Decimal('0.01')`.",https://github.com/bitcoin/bitcoin/pull/14227#issuecomment-422199610,422199610,
arvidn,2018-09-18T00:11:34Z,"> utACK [be54f42](https://github.com/bitcoin/bitcoin/commit/be54f42e5f309ff332d74828ae294636d77fb8ea), but I'd prefer a type safe `CAmount`\n\nI'm working on it. that's how this came up",https://github.com/bitcoin/bitcoin/pull/14227#issuecomment-422211093,422211093,
arvidn,2018-09-15T19:50:19Z,I imagine this could just be `CENT` as well,https://github.com/bitcoin/bitcoin/pull/14227#discussion_r217893878,217893878,src/validation.h
laanwj,2018-09-17T14:19:10Z,"neh, please don't re-use `CENT`, better to leave this as a separate constant",https://github.com/bitcoin/bitcoin/pull/14227#discussion_r218087319,218087319,src/validation.h
