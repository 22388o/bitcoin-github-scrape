pstratem,2016-02-11T23:21:37Z,utACK\n\n5a2b1c0c8b49c5ae79946e71b9f989b33c9fcf5c\n,https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183098297,183098297,
sipa,2016-02-11T23:22:41Z,utACK\n\n@pstratem Unnested ACK?\n,https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183098476,183098476,
morcos,2016-02-11T23:38:45Z,"@laanwj sorry, needs backport\n",https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183108724,183108724,
pstratem,2016-02-12T00:11:09Z,@sipa typo\n,https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183119993,183119993,
luke-jr,2016-02-12T00:54:49Z,Why not? How will they get relayed then?\n\nAt least attempt to add it to our own mempool again before failing...\n,https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183134329,183134329,
morcos,2016-02-12T01:25:33Z,"@luke-jr My original attempt included trying to add it to your own mempool again first, but its an unfortunate amount of cs_main locking that would be needed.\nAlso this behavior preserves the functionality from 0.11 when txs not in your mempool had GetDepthInMainChain return less than 0.\n",https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183141872,183141872,
gmaxwell,2016-02-12T01:30:29Z,ACK (with moderate testing)\n,https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183142991,183142991,
luke-jr,2016-02-12T01:44:08Z,> Also this behavior preserves the functionality from 0.11 when txs not in your mempool had GetDepthInMainChain return less than 0.\n\nThat's a bug. They shouldn't be negative until a conflict is mined.\n,https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183145126,183145126,
luke-jr,2016-02-12T01:44:31Z,"> My original attempt included trying to add it to your own mempool again first, but its an unfortunate amount of cs_main locking that would be needed.\n\nRebroadcasts are rare anyway, right? I don't see why locking would be an issue...\n",https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183145201,183145201,
gmaxwell,2016-02-12T01:45:44Z,"@luke-jr This needs to be the simplest and most obviously-does-no-harm change to avoid a serious behavior regression in 0.12.  The whole rebroadcast logic in general is brain-damaged and privacy destroying and we should fix it more completely, but this PR is not the time.\n",https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183145596,183145596,
morcos,2016-02-12T01:48:26Z,"@luke-jr yes, i'm saying that in 0.11 they were negative so weren't rebroadcast.  now they aren't negative, so we need to explicitly not rebroadcast them.  i dont think they are rare are they?\n",https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183146009,183146009,
luke-jr,2016-02-12T02:31:40Z,"@morcos It was literally impossible to have a wallet transaction that was rejected by your own mempool, in 0.11.\n\n@gmaxwell What behaviour is regressed right now? The PR is severely lacking in details on what it's trying to fix...\n",https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183152793,183152793,
gmaxwell,2016-02-12T02:37:05Z,"@luke-jr In 0.11 same as in 0.12, a wallet transaction will be rejected by your mempool if your fee settings are higher than the tx pays.\n\nThe regressed behavior is that in 0.12 the node will continually rebroadcast non-mempoolable (and non-mempool) transactions; which is incredibly deanonymizing (and somewhat bandwidth wasting). E.g. you pay someone a tiny amount with a 1e-8/byte fee when their",https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183153440,183153440,
luke-jr,2016-02-12T02:49:54Z,"Oh! So this doesn't restore the ""-1 if not in mempool"" bug, it only restores the side effect of that preventing rebroadcast. Makes [enough] sense for now. ~~Concept ACK.~~\n",https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183155144,183155144,
luke-jr,2016-02-12T02:52:44Z,@morcos Can you document the rationale here better in the commit message? Maybe something like:\n\n```\nwallet: Don't resend wallet txs that aren't in our own mempool\n\nRebroadcasting of wtx for not-in-mempool transactions was previously prevented by GetDepthInMainChain erroneously returning -1 for them. This restores that previous behaviour.\n```\n,https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183156782,183156782,
luke-jr,2016-02-12T02:54:41Z,"Actually, this is a new condition in 0.12, since 0.11 never would create a transaction that wouldn't be accepted to the mempool (and why the -1 bug wasn't really quite a bug in 0.11). So this does seem to indeed still change the behaviour negatively... so I guess I'm back to not seeing a justification for this change. :(\n",https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183157843,183157843,
gmaxwell,2016-02-12T10:43:44Z,"@luke-jr ""wouldn't create"" is too limited, people sendrawtransaction, wallets get copied, nodes get restarted with different settings, and this covers received transactions too.\n",https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-183267557,183267557,
dcousens,2016-02-23T01:11:19Z,utACK 5a2b1c0\n,https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-187461813,187461813,
sdaftuar,2016-02-25T01:34:36Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-188551597,188551597,
laanwj,2016-03-03T14:09:45Z,utACK 5a2b1c0\n,https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-191777522,191777522,
MarcoFalke,2016-06-09T10:56:07Z,Backported as part of #7938. Removing label 'Needs backport'.\n,https://github.com/bitcoin/bitcoin/pull/7521#issuecomment-224862438,224862438,
jonasschnelli,2016-02-19T16:07:01Z,orange flag: another coupling between the wallet and the full-node.\n,https://github.com/bitcoin/bitcoin/pull/7521#discussion_r53479529,53479529,src/wallet/wallet.cpp
laanwj,2016-03-03T14:08:44Z,"@jonasschnelli Sometimes I think 'outgoing' transactions need to be in a special section of the wallet. A bit like how mail programs have an 'outbox'. Newly created transactions will end up there, and are removed after trying to broadcast for a while - or when the user wants to give up on them.\n\nIt would be better than considering all transactions for rebroadcast. At the least it would give the ",https://github.com/bitcoin/bitcoin/pull/7521#discussion_r54883501,54883501,src/wallet/wallet.cpp
