wizkid057,2012-06-02T03:49:53Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-6074683,6074683,
Diapolo,2012-06-03T15:03:47Z,"I'm not sure if I understand it, do you intend to remove the ""generated"" status from the client? That would lead to more changes, I think of the mature vs. immature state and other strings used in Qt. Perhaps you can clarify this.\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-6086175,6086175,
wizkid057,2012-06-03T15:33:13Z,"@Diapolo It seems to set it up so that generation transactions are just treated more like normal transactions and are tagged in the category ""received"".  Since I would guess that anything that made use of this data already should be able to handle a ""received"" transaction, I don't see the issue.\n\nHere is a paste of the last block I mined on testnet3 with it: http://pastebin.com/Q6HdDiiT\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-6086388,6086388,
Diapolo,2012-06-03T15:37:35Z,"@wizkid057 I think there are still places in the code that need to be changed for the GUI client to handle generated like received, but I guess @luke-jr should give his thoughts on this, too.\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-6086423,6086423,
luke-jr,2012-06-03T17:36:38Z,"It's not meant to make generation identical to ordinary received coins. That would create problems. It's just intended to make the common parts behave the same, so it's not a hassle to handle generated coins properly. With all current versions, it's impossible to tell what address or account generation was received on, which makes it impossible to handle them without hacking the code.\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-6087323,6087323,
sipa,2012-06-13T11:33:26Z,"I like this. Less special casing for generations and ability to assign them to accounts. I do think that changing the way for denoting generations (by ""from"" : ""generation"" instead of ""category"" : ""generation"") may need some discussion first though, as this breaks compatibility.\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-6298568,6298568,
jgarzik,2012-08-02T23:25:39Z,It is nice to remove this special casing\n,https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7471221,7471221,
BitcoinPullTester,2012-08-10T03:37:42Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ee9eecb54db794a97de6e5add719aa6c4c020589 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7633490,7633490,
sipa,2012-08-13T18:50:10Z,"ACK on the latest change ({""generated"" : true} instead of {""from"" : ""generated""}).\n\nOne minor nitpick: setting the status to ""processing"" instead of ""validating"" only at 2 confirmations seems arbitrary to me. 1 confirmation seems more natural. Anyone else with an opinion?\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7703265,7703265,
Diapolo,2012-08-13T20:52:55Z,"@sipa I also like ""processing"" on 1+ confirmation better, I don't get the 2+ here.\n\n@luke-jr Does this touch or better do you need to look into other Qt code using mature / immature amounts or did you consider all that with the current patch?\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7707634,7707634,
luke-jr,2012-08-13T22:36:18Z,@Diapolo The only effect on Bitcoin-Qt is that it shows the address.\n,https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7710555,7710555,
BitcoinPullTester,2012-08-13T23:15:35Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/22e16c5d56f9506f2ff7fbce01e488bc0551aaf4 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7711499,7711499,
sipa,2012-08-22T11:51:59Z,Can you rebase?\n,https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7931754,7931754,
gavinandresen,2012-08-22T14:12:40Z,"I don't like the ""processing"" state. I say simplify and go with:\n\n""confirmed"" -- 6+ confirmations (120+ for generation)\n""validating"" -- 0+ confirmations ( 1+ for generation)\n""invalid"" -- negative confirmations (contradicted in main chain)\n\nThose three states plus the explicit 'confirmations' number should be plenty.\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7935374,7935374,
luke-jr,2012-08-22T16:07:51Z,"@gavinandresen I think it might be nice to have a state that represents ""possible to spend immediately, but not confirmed yet"" (so 1+/100+); thoughts?\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7939420,7939420,
sipa,2012-08-23T16:43:24Z,"I don't mind a ""maturing""/""processing""/""confirming"" state for 1+/100+, but I don't really care.\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7975862,7975862,
freewil,2012-08-23T17:00:40Z,">  I think it might be nice to have a state that represents ""possible to spend immediately, but not confirmed yet"" (so 1+/100+); thoughts?\n\n+1\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7976399,7976399,
gmaxwell,2012-08-23T20:24:06Z,"Hm. I thought this was supposted to make generated txn work better with accounts, but it doesn't seem to. E.g. listtransactions ""accountthathashadgenerationsenttoit"" still doesn't give the expected results.\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7982809,7982809,
luke-jr,2012-08-23T20:38:34Z,@gmaxwell It does for me?\n,https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7983236,7983236,
gmaxwell,2012-08-23T20:41:02Z,erp. Nevermind. I fail at testing— just didn't have an account set on my last p2pool address.\n,https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7983319,7983319,
gmaxwell,2012-08-23T20:45:23Z,"How about:\n""invalid"" for conflicted txn / orphan coinbase\n""validating"" for 0\n""confirming"" for 1-6\n""maturing"" for 1-120 coinbase\n""confirmed"" for >=6 / >=120\n\nIn any case, shed painting the terms aside, this appears to work for me.\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7983443,7983443,
luke-jr,2012-08-23T20:59:11Z,"@gmaxwell Having a special status for coinbases contradicts the main goal of the status ;)\n\nI'd worry ""confirming"" could be misread as ""confirmed"" too easily.\n\nI can rebase this as soon as @gavinandresen makes a final call on the shed painting :)\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7983832,7983832,
gmaxwell,2012-08-23T21:24:55Z,"Good call on confirming being potentially misread (even though the RPC is, in theory, just for machines— lots of code will pass along our text, and it costs nothing to use another string).\n\nI think this is ready to go in, except for the rebase and shed painting. \n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7984656,7984656,
gavinandresen,2012-08-23T21:48:07Z,"Luke, it is long discussions like this where you're pig-headed and ignore what everybody else says that makes me want to ignore every single one of your pull requests.\n\nSo:  fix your idiosyncratic coding conventions for   ... else if.\n\nAnd get rid of the status key entirely; applications have survived without it, and there is obviously no consensus on what words or confirmation levels aught to",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7985346,7985346,
luke-jr,2012-08-23T22:18:01Z,"Rebased without ""status""\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7986148,7986148,
luke-jr,2012-08-23T23:22:23Z,"""category"" changes reverted to be safer (without ""status"" it can more easily be misinterpreted).\n",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7987647,7987647,
gmaxwell,2012-08-23T23:28:47Z,"This is a often requested big improvement, even without the status changes. With the category being left alone, it's reasonably conservative.  I've tested it fairly extensively both on testnet and mainnet wallets.\n\nFuture pulls can put the status stuff back in after we figure it out in some future version.  The status can also indicate things like observed doublespends. I'll open an issue for th",https://github.com/bitcoin/bitcoin/pull/1409#issuecomment-7987791,7987791,
sipa,2012-06-13T10:59:35Z,"Do I understand correctly that this doesn't change the ""generated coins always to '' account"" behaviour?\n\nEDIT: nevermind\n",https://github.com/bitcoin/bitcoin/pull/1409#discussion_r975072,975072,src/bitcoinrpc.cpp
luke-jr,2012-06-13T14:08:25Z,"It does, intentionally.\n",https://github.com/bitcoin/bitcoin/pull/1409#discussion_r976236,976236,src/bitcoinrpc.cpp
Diapolo,2012-08-13T20:50:09Z,"Why don't you just use `else if`, this looks weird ... same for all other occurrences!\n",https://github.com/bitcoin/bitcoin/pull/1409#discussion_r1366438,1366438,src/bitcoinrpc.cpp
wizkid057,2012-08-13T20:52:34Z,"I personally prefer to not use else if, but, that's me. Doesn't make the code any less functional.\n",https://github.com/bitcoin/bitcoin/pull/1409#discussion_r1366461,1366461,src/bitcoinrpc.cpp
Diapolo,2012-08-13T20:55:01Z,"Yes it is a personal favor, but I wanted to express my dislike here :-D. I think it's also harder to read.\n",https://github.com/bitcoin/bitcoin/pull/1409#discussion_r1366491,1366491,src/bitcoinrpc.cpp
luke-jr,2012-08-13T22:35:24Z,"The actual meaning/syntax is clearer this way, and plays nicer with diff\n",https://github.com/bitcoin/bitcoin/pull/1409#discussion_r1367538,1367538,src/bitcoinrpc.cpp
laanwj,2012-08-14T03:46:05Z,"It is harder to see that the if()s belong to an else this way, while reading the code quickly, as they start on their own line just like stand-alone ifs.  Also this is style is used nowhere else in the source.\n",https://github.com/bitcoin/bitcoin/pull/1409#discussion_r1369240,1369240,src/bitcoinrpc.cpp
Diapolo,2012-08-14T08:52:07Z,@laanwj I couldn't have said it any better!\n,https://github.com/bitcoin/bitcoin/pull/1409#discussion_r1370337,1370337,src/bitcoinrpc.cpp
