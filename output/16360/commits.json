[
  {
    "sha": "66127bb384ce480898cb7be757e517023d84f7a4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NjEyN2JiMzg0Y2U0ODA4OThjYjdiZTc1N2U1MTcwMjNkODRmN2E0",
    "commit": {
      "author": {
        "name": "darosior",
        "email": "darosior@protonmail.com",
        "date": "2019-07-09T12:56:58Z"
      },
      "committer": {
        "name": "darosior",
        "email": "darosior@protonmail.com",
        "date": "2019-07-09T15:13:05Z"
      },
      "message": "Make UpgradeWallet() a CWallet method\n\nThis remove the wallet upgrade code from the 'CreateWalletFromFile' method to create a new wallet method: 'UpgradeWallet', which make it possible to upgrade a wallet instance outside of 'CreateWalletFromFile' and thus not only at startup.",
      "tree": {
        "sha": "f99f9343328543111ddd366574888a605f442499",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f99f9343328543111ddd366574888a605f442499"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/66127bb384ce480898cb7be757e517023d84f7a4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAl0krwEACgkQ4T/BRc0/\nQwQSEgwAyMccDJrOZXChRK+b4eTguw+SgIg1p2bE8Yl/n7NIFZW79EegZnucn5bp\n91yeZlTPs+V0gty8ap1+W2G4okxrU7o7h4tJUpWeTyW/JJ8PsdNiekc2AUnBVbZo\nsgaRYM+VM+y9+GE9pK5GPYvayYUSaoFwtGn5l8ahuaZwGab/jk54aeq9084Stma2\nEJFVmMEv5MG7c8icyqpppA3GGvCkNF5G3GgGGI+1S7ssJh69VfDXklbg2HzWEnat\nfyS17GqeSMoCWGK/I/zVFYxUnNfd0gvbSCQiyFTrSSRZKNckBClQxzZZRD1KOzu8\nfzg3/opDWNnlSDzt4JtEfRqrLQc2nBWff1wljtXBXJ9j9YFqSkMQiRTphQ/bMcia\nCLkq5AtZu/B47UR+5Hk5TYL4neTXpIZ9v2boCs65LuDhiOt1S+M2Z0rAbjCydu/R\namKThMW0PqVK/axPnTWzOri33ktb2v5+hd7SLawr/KpWv9WkLzsaOMx61E6+PUOU\nZ6L/NTuE\n=32nS\n-----END PGP SIGNATURE-----",
        "payload": "tree f99f9343328543111ddd366574888a605f442499\nparent 8046a3e0befeea641b6309bc0c742b7481e681d9\nauthor darosior <darosior@protonmail.com> 1562677018 +0200\ncommitter darosior <darosior@protonmail.com> 1562685185 +0200\n\nMake UpgradeWallet() a CWallet method\n\nThis remove the wallet upgrade code from the 'CreateWalletFromFile' method to create a new wallet method: 'UpgradeWallet', which make it possible to upgrade a wallet instance outside of 'CreateWalletFromFile' and thus not only at startup.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66127bb384ce480898cb7be757e517023d84f7a4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/66127bb384ce480898cb7be757e517023d84f7a4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66127bb384ce480898cb7be757e517023d84f7a4/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8046a3e0befeea641b6309bc0c742b7481e681d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8046a3e0befeea641b6309bc0c742b7481e681d9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8046a3e0befeea641b6309bc0c742b7481e681d9"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 29,
      "deletions": 25
    },
    "files": [
      {
        "sha": "80b393923e1a66f7a4f2b6d201e6eaba94ba5ee4",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 25,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/66127bb384ce480898cb7be757e517023d84f7a4/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/66127bb384ce480898cb7be757e517023d84f7a4/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=66127bb384ce480898cb7be757e517023d84f7a4",
        "patch": "@@ -4080,6 +4080,31 @@ bool CWallet::Verify(interfaces::Chain& chain, const WalletLocation& location, b\n     return WalletBatch::VerifyDatabaseFile(wallet_path, warning_string, error_string);\n }\n \n+bool CWallet::UpgradeWallet()\n+{\n+    LOCK(cs_wallet);\n+\n+    int previousVersion = GetVersion();\n+    if (CanSupportFeature(FEATURE_HD) && !IsHDEnabled()) {\n+        WalletLogPrintf(\"Upgrading wallet to HD\\n\");\n+        SetMinVersion(FEATURE_HD);\n+\n+        // generate a new master key\n+        CPubKey masterPubKey = GenerateNewSeed();\n+        SetHDSeed(masterPubKey);\n+    }\n+    // Upgrade to HD chain split if necessary\n+    if (CanSupportFeature(FEATURE_HD_SPLIT)) {\n+        WalletLogPrintf(\"Upgrading wallet to use HD chain split\\n\");\n+        SetMinVersion(FEATURE_PRE_SPLIT_KEYPOOL);\n+\n+        // Mark all keys currently in the keypool as pre-split\n+        MarkPreSplitKeys();\n+    }\n+\n+    return nWalletVersion > previousVersion;\n+}\n+\n std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain, const WalletLocation& location, uint64_t wallet_creation_flags)\n {\n     const std::string& walletFile = WalletDataFilePath(location.GetPath()).string();\n@@ -4133,7 +4158,6 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         }\n     }\n \n-    int prev_version = walletInstance->GetVersion();\n     if (gArgs.GetBoolArg(\"-upgradewallet\", fFirstRun))\n     {\n         int nMaxVersion = gArgs.GetArg(\"-upgradewallet\", 0);\n@@ -4156,37 +4180,14 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     // Upgrade to HD if explicit upgrade\n     if (gArgs.GetBoolArg(\"-upgradewallet\", false)) {\n         LOCK(walletInstance->cs_wallet);\n-\n         // Do not upgrade versions to any version between HD_SPLIT and FEATURE_PRE_SPLIT_KEYPOOL unless already supporting HD_SPLIT\n         int max_version = walletInstance->GetVersion();\n         if (!walletInstance->CanSupportFeature(FEATURE_HD_SPLIT) && max_version >= FEATURE_HD_SPLIT && max_version < FEATURE_PRE_SPLIT_KEYPOOL) {\n             chain.initError(_(\"Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use -upgradewallet=169900 or -upgradewallet with no version specified.\"));\n             return nullptr;\n         }\n-\n-        bool hd_upgrade = false;\n-        bool split_upgrade = false;\n-        if (walletInstance->CanSupportFeature(FEATURE_HD) && !walletInstance->IsHDEnabled()) {\n-            walletInstance->WalletLogPrintf(\"Upgrading wallet to HD\\n\");\n-            walletInstance->SetMinVersion(FEATURE_HD);\n-\n-            // generate a new master key\n-            CPubKey masterPubKey = walletInstance->GenerateNewSeed();\n-            walletInstance->SetHDSeed(masterPubKey);\n-            hd_upgrade = true;\n-        }\n-        // Upgrade to HD chain split if necessary\n-        if (walletInstance->CanSupportFeature(FEATURE_HD_SPLIT)) {\n-            walletInstance->WalletLogPrintf(\"Upgrading wallet to use HD chain split\\n\");\n-            walletInstance->SetMinVersion(FEATURE_PRE_SPLIT_KEYPOOL);\n-            split_upgrade = FEATURE_HD_SPLIT > prev_version;\n-        }\n-        // Mark all keys currently in the keypool as pre-split\n-        if (split_upgrade) {\n-            walletInstance->MarkPreSplitKeys();\n-        }\n         // Regenerate the keypool if upgraded to HD\n-        if (hd_upgrade) {\n+        if (walletInstance->UpgradeWallet()) {\n             if (!walletInstance->TopUpKeyPool()) {\n                 chain.initError(_(\"Unable to generate keys\"));\n                 return nullptr;"
      },
      {
        "sha": "98252cea418e9b7d20760e96a5a56be224f2cad2",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/66127bb384ce480898cb7be757e517023d84f7a4/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/66127bb384ce480898cb7be757e517023d84f7a4/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=66127bb384ce480898cb7be757e517023d84f7a4",
        "patch": "@@ -1246,6 +1246,9 @@ class CWallet final : public CCryptoKeyStore, private interfaces::Chain::Notific\n     /** Mark a transaction as replaced by another transaction (e.g., BIP 125). */\n     bool MarkReplaced(const uint256& originalHash, const uint256& newHash);\n \n+    /** Upgrade, if supported, the minimum version to HD wallet or HD_SPLIT wallet **/\n+    bool UpgradeWallet();\n+\n     //! Verify wallet naming and perform salvage on the wallet if required\n     static bool Verify(interfaces::Chain& chain, const WalletLocation& location, bool salvage_wallet, std::string& error_string, std::string& warning_string);\n "
      }
    ]
  },
  {
    "sha": "803f6425c6da0508b9ef12ab98139d3720cccef1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MDNmNjQyNWM2ZGEwNTA4YjllZjEyYWI5ODEzOWQzNzIwY2NjZWYx",
    "commit": {
      "author": {
        "name": "darosior",
        "email": "darosior@protonmail.com",
        "date": "2019-07-09T13:00:40Z"
      },
      "committer": {
        "name": "darosior",
        "email": "darosior@protonmail.com",
        "date": "2019-07-09T15:13:13Z"
      },
      "message": "Add the 'upgradewallet' RPC command\n\nThis add a new RPC command which permits to upgrade a wallet to, by default, the latest version or to an optionally passed as a parameter version",
      "tree": {
        "sha": "550bb19c5f5e2c4da6db58f151db75d054db71e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/550bb19c5f5e2c4da6db58f151db75d054db71e4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/803f6425c6da0508b9ef12ab98139d3720cccef1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/803f6425c6da0508b9ef12ab98139d3720cccef1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/803f6425c6da0508b9ef12ab98139d3720cccef1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/803f6425c6da0508b9ef12ab98139d3720cccef1/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "66127bb384ce480898cb7be757e517023d84f7a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/66127bb384ce480898cb7be757e517023d84f7a4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/66127bb384ce480898cb7be757e517023d84f7a4"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 50,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ca311997511093d7c643909dda4f46ce4e2a25f0",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/803f6425c6da0508b9ef12ab98139d3720cccef1/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/803f6425c6da0508b9ef12ab98139d3720cccef1/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=803f6425c6da0508b9ef12ab98139d3720cccef1",
        "patch": "@@ -151,6 +151,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"logging\", 0, \"include\" },\n     { \"logging\", 1, \"exclude\" },\n     { \"disconnectnode\", 1, \"nodeid\" },\n+    { \"upgradewallet\", 0, \"wallet_version\" },\n     // Echo with conversion (For testing only)\n     { \"echojson\", 0, \"arg0\" },\n     { \"echojson\", 1, \"arg1\" },"
      },
      {
        "sha": "36f80a3be9e5384e7c71c4faaba26790adb1d94f",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/803f6425c6da0508b9ef12ab98139d3720cccef1/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/803f6425c6da0508b9ef12ab98139d3720cccef1/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=803f6425c6da0508b9ef12ab98139d3720cccef1",
        "patch": "@@ -4277,6 +4277,54 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n     return result;\n }\n \n+static UniValue upgradewallet(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 1)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"upgradewallet\",\n+                \"\\nUpgrade the wallet to the last version (default) or to a specific version.\\n\",\n+                {\n+                    {\"version\", RPCArg::Type::NUM, RPCArg::Optional::OMITTED_NAMED_ARG, \"A specific version to which upgrade the wallet.\"},\n+                },\n+                RPCResult{\n+            \"  \\\"wallet_version\\\" : version        (numeric) The new wallet version\\n\"\n+                },\n+                RPCExamples{\n+                    \"Upgrade wallet to the latest version: \"\n+            + HelpExampleCli(\"upgradewallet\", \"\")\n+                },\n+            }.ToString());\n+\n+    EnsureWalletIsUnlocked(pwallet);\n+    LOCK(pwallet->cs_wallet);\n+\n+    int newVersion;\n+    newVersion = request.params[0].isNull() ? FEATURE_LATEST : request.params[0].get_int();\n+\n+    if (!pwallet->CanSupportFeature(FEATURE_LATEST) && newVersion >= FEATURE_HD_SPLIT && newVersion < FEATURE_PRE_SPLIT_KEYPOOL)\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot upgrade a non HD split wallet without upgrading to support pre split keypool.\");\n+    if (pwallet->GetVersion() > newVersion)\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot downgrade the wallet.\");\n+    if (pwallet->GetVersion() == newVersion)\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Wallet already at latest version.\");\n+\n+    pwallet->SetMaxVersion(newVersion);\n+    if (!pwallet->UpgradeWallet())\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, strprintf(\"Cannot upgrade the wallet. Current version: %i.\", pwallet->GetVersion()));\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.pushKV(\"wallet_version\", pwallet->GetVersion());\n+    return result;\n+}\n+\n+\n UniValue abortrescan(const JSONRPCRequest& request); // in rpcdump.cpp\n UniValue dumpprivkey(const JSONRPCRequest& request); // in rpcdump.cpp\n UniValue importprivkey(const JSONRPCRequest& request);\n@@ -4343,6 +4391,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"signmessage\",                      &signmessage,                   {\"address\",\"message\"} },\n     { \"wallet\",             \"signrawtransactionwithwallet\",     &signrawtransactionwithwallet,  {\"hexstring\",\"prevtxs\",\"sighashtype\"} },\n     { \"wallet\",             \"unloadwallet\",                     &unloadwallet,                  {\"wallet_name\"} },\n+    { \"wallet\",             \"upgradewallet\",                    &upgradewallet,                 {\"wallet_version\"} },\n     { \"wallet\",             \"walletcreatefundedpsbt\",           &walletcreatefundedpsbt,        {\"inputs\",\"outputs\",\"locktime\",\"options\",\"bip32derivs\"} },\n     { \"wallet\",             \"walletlock\",                       &walletlock,                    {} },\n     { \"wallet\",             \"walletpassphrase\",                 &walletpassphrase,              {\"passphrase\",\"timeout\"} },"
      }
    ]
  }
]