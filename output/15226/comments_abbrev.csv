DrahtBot,2019-01-22T04:19:28Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15288](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15288.html) (Remove wallet -> node global function calls",https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-456266282,456266282,
jonasschnelli,2019-01-22T06:32:44Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-456286368,456286368,
Sjors,2019-01-22T17:14:55Z,"Concept ACK, thanks for saving me some work :-)\n\nAre you sure older clients will understand this mandatory flag? Testing this is a good use of #12134, though such test should be in a separate PR to prevent a long wait.",https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-456482937,456482937,
ryanofsky,2019-01-22T17:41:38Z,This should probably replace #14938 on the high priority list: https://github.com/bitcoin/bitcoin/projects/8,https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-456492572,456492572,
achow101,2019-01-22T21:07:15Z,"> Are you sure older clients will understand this mandatory flag? Testing this is a good use of #12134, though such test should be in a separate PR to prevent a long wait.\n\nJust tested with 0.17 and 0.16. 0.17 knows what the wallet flags are so it does understand the mandatory flag and refuses to load wallets with the blank flag set. ~~However 0.16 does not know about wallet flags and will act",https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-456563479,456563479,
jonasschnelli,2019-01-22T21:59:59Z,Would it had made (or still make) sense to raise the wallet version number to prevent ignoring wallet flags?,https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-456579771,456579771,
ryanofsky,2019-01-22T23:22:01Z,"> Would it had made (or still make) sense to raise the wallet version number to prevent ignoring wallet flags?\n\nIt makes sense that if you are going to set a mandatory flag, you also need to increase the minimum version to whatever bitcoin version started checking mandatory flags.",https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-456603366,456603366,
Sjors,2019-01-23T12:02:32Z,"Wallet feature flags were introduced in 0.17.0, and as @achow101 and the source comment points out, ""wallet flags in the upper section (> 1 << 31) will lead to not opening the wallet if flag is unknown"".\n\nThe following, added in a8da482a8bc87ff26194612727d4a7b86b2fb60d and released in v0.17.0, should already prevent 0.16 nodes from opening a >=0.17.0 wallet:\n\n```cpp\nFEATURE_PRE_SPLIT_KEY",https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-456776635,456776635,
achow101,2019-01-23T19:34:14Z,"Oh, I made a mistake. Just tested it again and yes, 0.16 does not open wallets that have flags set, so there is no need to do another version bump.",https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-456936359,456936359,
laanwj,2019-01-24T15:23:05Z,"> Also with this, the term ""blank wallet"" is used instead of ""empty wallet"" to avoid confusion with wallets that have balance which would also be referred to as ""empty"".\n\nThank you, I really like this distinct terminology.",https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-457235957,457235957,
achow101,2019-01-29T19:57:15Z,Rebased,https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-458684676,458684676,
achow101,2019-01-31T19:59:39Z,I've updated the docs and added a few code comments as suggested by earlier comments (which I can't respond to for some reason).,https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-459484688,459484688,
achow101,2019-02-01T15:40:43Z,Rebased,https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-459764312,459764312,
Sjors,2019-02-01T17:39:27Z,"tACK 4d2b8b4, since last check: rebase and moved some tests to another commit\n\nI checked again that v0.17.1 refuses to open a blank wallet, and that after `sethdseed`  it does.",https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-459804361,459804361,
achow101,2019-02-07T03:54:21Z,"I've reworked `IsHDEnabled()`, `HasHDSeed()`, and `IsBlank()`. I have decided to lave `IsHDEnabled()` as it is and dropped `HasHDSeed()`. Instead `IsBlank()` will now check whether the blank wallet flag is set or if HD support is specified in the version but no HD seed is set. This change should clear up any confusion.\n\nI've also squashed down the commits as I don't think the original commit s",https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-461279855,461279855,
jonasschnelli,2019-02-07T20:00:37Z,Tested ACK 8061ea4611696b22d5d5dcdd73c1e053ffecc09d,https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-461574951,461574951,
gwillen,2019-02-07T23:02:06Z,"Tested on OS X, reviewed and looks good but I don't feel qualified to ACK as I don't understand the intricacies of the wallet well enough.",https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-461628262,461628262,
Sjors,2019-02-08T13:14:45Z,I'll try to give this another review in the next few days.,https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-461798875,461798875,
achow101,2019-02-09T18:43:15Z,"I have taken @ryanofsky's suggestions and reworked this a bit more. This should also help with #14075.\n\nI got rid of `IsBlank` and replaced it with two functions: `CanGenerateKeys` and `CanGetAddresses`. `CanGenerateKeys` is as @ryanofsky commented; it checks for whether there is an HD seed or whether the wallet is non-HD. `CanGetAddresses` checks whether there are keys in the keypool (default",https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-462068869,462068869,
meshcollider,2019-02-10T10:02:17Z,"utACK https://github.com/bitcoin/bitcoin/pull/15226/commits/707eabab827250cc1b726179cabe97d3e0c100de\n\nI'll give @Sjors a chance to finish his last review of this, then merge tomorrow",https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-462119069,462119069,
Sjors,2019-02-10T18:58:54Z,re-utACK 7687f78,https://github.com/bitcoin/bitcoin/pull/15226#issuecomment-462161103,462161103,
jonasschnelli,2019-01-22T06:28:35Z,Does this mean we are currently generating a new seed if one encrypts a wallet where private keys are disabled?,https://github.com/bitcoin/bitcoin/pull/15226#discussion_r249653693,249653693,src/wallet/wallet.cpp
jonasschnelli,2019-01-22T06:31:36Z,Should we mention in the release notes that blank wallets can not be used in older bitcoin core versions?,https://github.com/bitcoin/bitcoin/pull/15226#discussion_r249654230,249654230,src/wallet/wallet.h
achow101,2019-01-22T06:47:59Z,"No. ~~Looking at what we currently do, this should actually be checking for `HasHDSeed()`. Will change.~~ Actually for the behavior that I want, this is correct. The reason this is changed is because `IsHDEnabled()` is different now.",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r249657163,249657163,src/wallet/wallet.cpp
Sjors,2019-01-22T17:31:33Z,"Nit: ""blank capable"".",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r249884724,249884724,src/wallet/wallet.cpp
Sjors,2019-01-22T17:34:02Z,"Nit: document that for older wallets this relies on `IsHDEnabled()` checking `HasHDSeed()`, so there's no way this returns a false positive.",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r249885644,249885644,src/wallet/wallet.cpp
Sjors,2019-01-22T17:40:55Z,"So this would add a seed to an empty wallet? That should be made more clear in the documentation.\n\nWhat if I want to import private keys and encrypt those? Should we add a `bool` to `encryptwallet` to determine if it should generate a key?",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r249888180,249888180,src/wallet/wallet.cpp
laanwj,2019-01-24T15:42:56Z,"Same comment here as https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250547555\n",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r250658673,250658673,test/functional/test_framework/test_node.py
Sjors,2019-01-30T10:43:04Z,Should be a single `!`?,https://github.com/bitcoin/bitcoin/pull/15226#discussion_r252201757,252201757,src/qt/walletmodel.cpp
Sjors,2019-01-30T10:47:23Z,"With this additional flag, it makes more sense to fix `hdEnabled()` in `interfaces::Wallet`.",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r252203186,252203186,src/qt/walletmodel.cpp
Sjors,2019-01-30T11:15:34Z,"Let's fix `hdEnabled` in `WalletModel` instead, otherwise things are going to get confusing fast.",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r252212761,252212761,src/interfaces/wallet.cpp
achow101,2019-01-31T15:39:50Z,"Since this issue affects multiple PRs, I've split it into a separate PR: #15301",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r252718113,252718113,test/functional/test_framework/test_node.py
Sjors,2019-01-31T16:26:14Z,"Introducing these tests in 6382e96ab9b8d9f7f9ad4ab1b318262ff3890916 seems too early (I assume they're fail, which hurts `git-bisect`).",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r252738777,252738777,test/functional/wallet_createwallet.py
Sjors,2019-01-31T16:30:09Z,"Now both 6382e96ab9b8d9f7f9ad4ab1b318262ff3890916 and 2774bec3aa2bc20b578453b103fbe04cf34ecbdf change `bool hdEnabled()` in `interfaces/wallet.cpp` .\n\nI don't like it that `hdEnabled()` on interfaces wallet calls `m_wallet.HasHDSeed`, even though m_wallet also has a ruction called `IsHDEnabled`.",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r252740525,252740525,src/interfaces/wallet.cpp
achow101,2019-01-31T18:14:06Z,"No, the order is correct. Github is just showing it in the wrong order because of the dates. I'll fix the dates so it shows correctly.",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r252780377,252780377,test/functional/wallet_createwallet.py
achow101,2019-01-31T19:58:50Z,I've changed it so that `hdEnabled()` does the same thing as before and instead added a `hasHDSeed()` which calls `HasHDSeed`. `hasHDSeed` is used instead of `hdEnabled` in the `walletmodel.cpp` changes.,https://github.com/bitcoin/bitcoin/pull/15226#discussion_r252818222,252818222,src/interfaces/wallet.cpp
achow101,2019-01-31T19:58:57Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/15226#discussion_r252818266,252818266,src/qt/walletmodel.cpp
Sjors,2019-01-31T20:31:56Z,nit: missing `; and`,https://github.com/bitcoin/bitcoin/pull/15226#discussion_r252829640,252829640,src/qt/walletmodel.cpp
Sjors,2019-01-31T20:43:36Z,"nit: `, i.e. it has no private keys` (because it might have scripts, and the keypool isn't taken into account) ",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r252833195,252833195,src/wallet/wallet.h
ryanofsky,2019-02-06T23:02:27Z,"re: https://github.com/bitcoin/bitcoin/pull/15226#discussion_r249653693\n\nIn commit ""If there are no encrypted keys, default is passing"" (e4ffedbb91e129ca282e47a5f5836dc0212deecf)\n\n> So this would add a seed to an empty wallet?\n\nI also think this is a confusing UI. What's the advantage of requiring a seed in order to use encryption?\n\nWhy not simply change the condition to `if (HasHD",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r254487952,254487952,src/wallet/wallet.cpp
ryanofsky,2019-02-07T01:02:38Z,"In commit ""[wallet] support creating a blank wallet"" (96476657a06797913edffd42d3fdae320b86e9df):\n\nThis isn't checking the WALLET_FLAG_BLANK_WALLET flag at all. It seems weird that to allow topping up keypool or generating keys (in GetKeyFromPool) in a wallet that supports hd but intentionally has no seed. Am I understanding this correctly, or is there another check somewhere else?",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r254514195,254514195,src/wallet/wallet.cpp
ryanofsky,2019-02-07T01:11:37Z,"In commit ""Set a wallet flag for blank wallets"" (4d2b8b4d93cb979fba81182258d93d562608a632)\n\nI don't understand the GUI part of this change at all. Does it actually make sense to show an HD enabled logo for a wallet that doesn't have an HD key? And will generate non-HD keys if an address is requested (IIUC)?",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r254515793,254515793,src/interfaces/wallet.cpp
ryanofsky,2019-02-07T05:14:12Z,"In commit ""[wallet] Support creating a blank wallet"" (1cdb8d8346649434450e410971cc3d68c3504a25)\n\nIf there a wallet was created after the FEATURE_HD version but with `-usehd=0` set, would it cause this function to return true and no longer let GetKeyFromPool and TopUpKeyPool work?",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r254549269,254549269,src/wallet/wallet.cpp
ryanofsky,2019-02-07T05:20:24Z,"In commit ""[wallet] Support creating a blank wallet"" (1cdb8d8346649434450e410971cc3d68c3504a25)\n\nIt looks like if you import a watch-only key into a blank wallet WalletModel::canGetAddresses() will start returning true. I wonder if canGetAddresses should be using IsBlank.",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r254550097,254550097,src/wallet/wallet.cpp
achow101,2019-02-07T05:34:34Z,I don't think so because those wallets would have a version less than FEATURE_HD.,https://github.com/bitcoin/bitcoin/pull/15226#discussion_r254552117,254552117,src/wallet/wallet.cpp
achow101,2019-02-07T06:02:44Z,I think it should. I've added `isBlank()` to the wallet interface and `canGetAddresses()` calls it instead of checking the wallet flag.,https://github.com/bitcoin/bitcoin/pull/15226#discussion_r254555906,254555906,src/wallet/wallet.cpp
jonasschnelli,2019-02-07T19:59:57Z,"I can't follow your comment.\nThe `IsBlank()` check here stops the refill-process if the wallet is either blank or if no HD seed is available (while HD is enabled).\nI also tested this by creating a blank wallet, import a watch-only and then calling `keypoolrefill`.",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r254846379,254846379,src/wallet/wallet.cpp
ryanofsky,2019-02-07T20:34:34Z,"re: https://github.com/bitcoin/bitcoin/pull/15226#discussion_r254514195\n\n> I can't follow your comment.\n\nThis comment was wrong about the keypool, but it was added reviewing a previous version of this PR (commit hash mentioned was 96476657a06797913edffd42d3fdae320b86e9df) before isBlank checked the blank flag, which is probably why you were confused.\n\nI actually think now that this sho",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r254857849,254857849,src/wallet/wallet.cpp
ryanofsky,2019-02-08T20:45:20Z,Resolved when the PR was reworked,https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255229618,255229618,src/interfaces/wallet.cpp
ryanofsky,2019-02-08T20:49:40Z,"In commit ""[wallet] Support creating a blank wallet"" (8061ea4611696b22d5d5dcdd73c1e053ffecc09d)\n\nWould suggest replacing this line with if `(walletInstance->CanGenerateKeys() && !walletInstance->TopUpKeyPool())` if you use my other suggestion.",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255230811,255230811,src/wallet/wallet.cpp
ryanofsky,2019-02-08T21:22:46Z,You're right. Apparently the `SetMinVersion(FEATURE_LATEST)` that now happens on first run didn't used to happen on first run.,https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255239631,255239631,src/wallet/wallet.cpp
ryanofsky,2019-02-08T21:52:44Z,"In commit ""[wallet] Support creating a blank wallet"" (8061ea4611696b22d5d5dcdd73c1e053ffecc09d)\n\nI think just ""keys"" here would be more accurate than ""private keys"". If you import a watchonly address the wallet isn't really blank in the sense you're describing here (it can be opened in 0.17.x).",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255247395,255247395,doc/release-notes-15226.md
ryanofsky,2019-02-08T22:02:58Z,"In commit ""[wallet] Support creating a blank wallet"" (8061ea4611696b22d5d5dcdd73c1e053ffecc09d)\n\nI think there is no point to checking WALLET_FLAG_BLANK_WALLET here. It's redundant and just complicates the logic.\n\nAlso, I don't think this function should be called IsBlank, because this creates two slightly different definitions of blank, one where a wallet stops being blank when a watch-on",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255249959,255249959,src/wallet/wallet.cpp
ryanofsky,2019-02-08T22:07:02Z,"In commit ""[wallet] Support creating a blank wallet"" (8061ea4611696b22d5d5dcdd73c1e053ffecc09d)\n\nThis is pretty convoluted. It would be more straightforward to avoid all the cancelling conditions and just write `if (!CanSupportFeature(FEATURE_HD))`",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255250957,255250957,src/wallet/rpcwallet.cpp
ryanofsky,2019-02-08T22:10:35Z,"In commit ""[wallet] Support creating a blank wallet"" (8061ea4611696b22d5d5dcdd73c1e053ffecc09d)\n\nWould suggest replacing this line with if `(!CanGenerateKeys()) return false` if you use my other suggestion.",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255251930,255251930,src/wallet/wallet.cpp
ryanofsky,2019-02-08T22:17:29Z,"In commit ""[wallet] Support creating a blank wallet"" (8061ea4611696b22d5d5dcdd73c1e053ffecc09d)\n\nIt would be nice to explain how the flag works. I'd suggest.\n\n```c++\n//! Flag set when a wallet contains no HD seed and no private keys, scripts,\n//! addresses, and other watch only things, and is therefore ""blank.""\n//!\n//! The only function this flag serves is to distinguish a blank wa",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255253505,255253505,src/wallet/wallet.h
ryanofsky,2019-02-09T14:03:06Z,"re: https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255249959\n\nAfter seeing #14075, I'd tweak my suggestion above and call this `CanGenerateKeys` or `CanTopUpKeyPool` instead of `CanGenerateAddresses`. After #14075 it looks like it will be possible to generate addresses with imported keys even if the wallet can't generate new keys.",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255299609,255299609,src/wallet/wallet.cpp
ryanofsky,2019-02-09T14:30:57Z,"In commit ""[wallet] Support creating a blank wallet"" (8061ea4611696b22d5d5dcdd73c1e053ffecc09d)\n\nThis will now allow calling `sethdseed` on a wallet with `WALLET_FLAG_DISABLE_PRIVATE_KEYS` set. That seems like a mistake because I'm not sure the resulting state would make sense, and at the very least `GenerateNewSeed` would assert false in this case.\n\nWould suggest adding a check for WALLET",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255300413,255300413,src/wallet/rpcwallet.cpp
ryanofsky,2019-02-09T14:33:16Z,"In commit ""[wallet] Support creating a blank wallet"" (8061ea4611696b22d5d5dcdd73c1e053ffecc09d)\n\nI think this entire line is equivalent to `return !m_wallet->isBlank()`.",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255300465,255300465,src/qt/walletmodel.cpp
achow101,2019-02-09T17:12:48Z,There's already a check for that flag above.,https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255305573,255305573,src/wallet/rpcwallet.cpp
ryanofsky,2019-02-09T19:36:00Z,"In commit ""[wallet] Support creating a blank wallet"" (8b5533ee281ba114b8bb5c195f4a9b715b02a644)\n\nCurious what other people think but I think it would be great to remove WALLET_FLAG_DISABLE_PRIVATE_KEYS check above in light of this check.\n\nOne thing that makes flag code hard to understand is that you can grep and have to dig through 20 usages of a flag where checking it is redundant or has ",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255310659,255310659,src/wallet/rpcwallet.cpp
ryanofsky,2019-02-09T19:37:52Z,"In commit ""[wallet] Support creating a blank wallet"" (8b5533ee281ba114b8bb5c195f4a9b715b02a644)\n\nThere's another WALLET_FLAG_DISABLE_PRIVATE_KEYS check above that could be removed or noted belt and suspenders.",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255310698,255310698,src/wallet/rpcwallet.cpp
ryanofsky,2019-02-09T19:39:28Z,Thread could be could be marked resolved.,https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255310747,255310747,src/wallet/wallet.cpp
ryanofsky,2019-02-09T19:52:56Z,"In commit ""[wallet] Support creating a blank wallet"" (8b5533ee281ba114b8bb5c195f4a9b715b02a644)\n\nHere and other three places where wallet code is calling CanGetAddresses(), I think it should be calling CanGenerateKeys() instead. CanGetAddresses() is definitely useful for the GUI, because the GUI has to continuously keep its display state up to date with state of the keypool, and this is inhere",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255311178,255311178,src/wallet/wallet.cpp
achow101,2019-02-09T21:28:45Z,The reason I have the `CanGetAddresses` check here is for future work where you can get a key from the keypool without the ability to generate addresses.,https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255314300,255314300,src/wallet/wallet.cpp
achow101,2019-02-09T21:34:26Z,I've added a comment,https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255314466,255314466,src/wallet/rpcwallet.cpp
Sjors,2019-02-10T16:13:10Z,"Agree with the usefulness of `CanGetAddresses` for followup stuff. Longer term I also think it's a useful distinction in a descriptor based wallet, which may support a lot more (semi) watch-only (solvable, but not IsMine) things like being part of a multisig group.\n\n Regarding the ""racy"" stuff, maybe it helps to add `AssertLockHeld` to `CWallet CanGetAddresses` and `CanGenerateKeys`? That way ",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255343926,255343926,src/wallet/wallet.cpp
Sjors,2019-02-10T16:32:00Z,"`IsHDEnabled()` should be renamed to `HasHDSeed()` because that's actually what it checks (as opposed to `CanSupportFeature(FEATURE_HD)`). Can perhaps wait until a followup, since it's clear enough from the comments.",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255344608,255344608,src/wallet/wallet.h
Sjors,2019-02-10T16:35:51Z,"I don't see how ""create a fresh seed"" happens here, because if there's no seed `IsHDEnabled()` returns false.",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255344727,255344727,src/wallet/wallet.cpp
achow101,2019-02-10T17:23:58Z,I would prefer to leave it as-is for now. That can be changed in a followup.,https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255346516,255346516,src/wallet/wallet.h
achow101,2019-02-10T17:25:11Z,Outdated comment. I've changed it back.,https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255346553,255346553,src/wallet/wallet.cpp
Sjors,2019-02-10T18:50:34Z,"That's fine, but I'll keep stalking you :-)",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255350011,255350011,src/wallet/wallet.h
Sjors,2019-02-10T19:00:30Z,"Might be useful to add ""If no HD seed is set, e.g. because it is a blank wallet, do not add one."", can be done in the same followup as renaming `IsHDEnabled()` (though that rename would make the comment unnecessary :-).",https://github.com/bitcoin/bitcoin/pull/15226#discussion_r255350458,255350458,src/wallet/wallet.cpp
