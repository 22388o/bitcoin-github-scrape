amitiuttarwar,2020-02-07 21:11:00,ACK 5546ed61c65c167ba839df7b5277f8689242ae8b. Sheds light on a confusing corner of the code. ,https://github.com/bitcoin/bitcoin/pull/18096#issuecomment-583614009,583614009,
DrahtBot,2020-02-17 04:31:51,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18096#issuecomment-586812804,586812804,
amitiuttarwar,2020-05-09 22:13:30,@nothingmuch could you squash the fixup commit ?,https://github.com/bitcoin/bitcoin/pull/18096#issuecomment-626242223,626242223,
nothingmuch,2020-05-10 01:28:37,Done. I've also included @michaelfolkson's suggestion.,https://github.com/bitcoin/bitcoin/pull/18096#issuecomment-626258591,626258591,
nothingmuch,2020-05-10 01:36:10,"After rereading the diff I added a minor rewording of the comment explaining nLockTime covenants, since I felt it lacked clarity, and force pushed that so that the PR is still squashed at the moment.",https://github.com/bitcoin/bitcoin/pull/18096#issuecomment-626259177,626259177,
michaelfolkson,2020-05-11 15:51:58,"ACK ae93eb3379604a5ee83242f420bb5431fa238b9e. British English spelling of ""behaviour"" but not worth another force push to change in my view.",https://github.com/bitcoin/bitcoin/pull/18096#issuecomment-626789056,626789056,
theStack,2020-07-26 21:14:38,"Concept ACK, definitely makes sense to document unexpected behaviour in more detail.",https://github.com/bitcoin/bitcoin/pull/18096#issuecomment-664041343,664041343,
nothingmuch,2020-07-26 23:09:23,"i fixed both ""behaviour"" and ""the the"", will squash & rebase after i reread everything tomorrow",https://github.com/bitcoin/bitcoin/pull/18096#issuecomment-664052311,664052311,
nothingmuch,2020-07-28 02:56:06,"so, despite previous ACKs i couldn't resist rephrasing the paragraph about the locktime covenants, since i could barely understand what i had originally meant by it... squashed and rebased on master",https://github.com/bitcoin/bitcoin/pull/18096#issuecomment-664746288,664746288,
amitiuttarwar,2020-08-08 03:35:22,"ACK abc8f3bae2cd9a65e170528d77973307050c5b47.\n\nHoping this PR can get merged soon! ",https://github.com/bitcoin/bitcoin/pull/18096#issuecomment-670817502,670817502,
benthecarman,2020-09-08 23:42:02,ACK `abc8f3b`,https://github.com/bitcoin/bitcoin/pull/18096#issuecomment-689193009,689193009,
Zero-1729,2020-09-09 03:53:35,ACK abc8f3b. Looks good.,https://github.com/bitcoin/bitcoin/pull/18096#issuecomment-689284793,689284793,
MarcoFalke,2021-06-29 07:44:53,ACK f9e37f33ce2d8b463a0bcbe7189c9bc5b36530b7,https://github.com/bitcoin/bitcoin/pull/18096#issuecomment-870357492,870357492,
ariard,2020-02-13 21:30:49,"""This enable a lightweight onchain covenant where you can be safe than constrained output can't be spent until reaching committed nBlockHeight/nBlockTime""",https://github.com/bitcoin/bitcoin/pull/18096#discussion_r379129481,379129481,src/script/interpreter.cpp
nothingmuch,2020-02-15 14:09:32,"I expanded a bit on your suggestion in c4a022d4\n\np.s. sorry for accidentally clicking resolve",https://github.com/bitcoin/bitcoin/pull/18096#discussion_r379833669,379833669,src/script/interpreter.cpp
michaelfolkson,2020-05-09 22:06:58,nit: You could make clear that by final you mean if the nSequence values are maxed out to `0xffffffff`. Perhaps this wording of final is clear to everyone else (in which case ignore).,https://github.com/bitcoin/bitcoin/pull/18096#discussion_r422552076,422552076,src/consensus/tx_verify.cpp
amitiuttarwar,2020-05-15 17:19:35,"I'm not a huge fan of having function names in the comments, because the code might change over time. eg. theoretically there could be another calling path that also disables, right? \n\nin this case I don't think its a big deal esp bc its consensus code that seems _quite unlikely_ to change ",https://github.com/bitcoin/bitcoin/pull/18096#discussion_r425941699,425941699,src/script/interpreter.cpp
nothingmuch,2020-05-15 18:47:25,"FWIW the rationale for adding it was specifically to cross reference these the two locations in the code, as they are more easily understood together.\n\nI can definitely see why this is not worth the risk of stale comments, but [edit to add: assuming it's desired] couldn't think of a simpler way.\n\nMaybe just mentioning `CHECKLOCKTIMEVERIFY` and `SEQUENCE_FINAL` is a good compromise, there a",https://github.com/bitcoin/bitcoin/pull/18096#discussion_r425985481,425985481,src/script/interpreter.cpp
amitiuttarwar,2020-05-15 22:00:13,"> FWIW the rationale for adding it was specifically to cross reference these the two locations in the code, as they are more easily understood together.\n\nfair enough. makes sense in this case",https://github.com/bitcoin/bitcoin/pull/18096#discussion_r426065637,426065637,src/script/interpreter.cpp
MarcoFalke,2021-04-21 09:52:25,"I think the Bitcoin Core source code (or interpreter source code) is the wrong place to document what is possible with each opcode. Better places to document this is the BIPs repo (or stackexchange, the mailing list, your private blog or website, ...).\n\nIn fact the BIP already mentions several use cases. See https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki#Motivation . Should the",https://github.com/bitcoin/bitcoin/pull/18096#discussion_r617375783,617375783,src/script/interpreter.cpp
nothingmuch,2021-04-21 14:35:18,That sounds reasonable to me and fits in with the original motivation. @ariard since this was your [suggestion](https://github.com/bitcoin/bitcoin/pull/18096#discussion_r379129481) do you mind if I remove it?,https://github.com/bitcoin/bitcoin/pull/18096#discussion_r617607405,617607405,src/script/interpreter.cpp
nothingmuch,2021-04-24 03:14:01,I went ahead and removed this addition.,https://github.com/bitcoin/bitcoin/pull/18096#discussion_r619572373,619572373,src/script/interpreter.cpp
ariard,2021-04-26 17:31:16,"Fine to remove it. IIRC, I did advise you this comment because I was surprised to see nowhere this relation between nLocktime enforcement and finality of inputs documented. At least not in BOLT3, where timeout transactions nSequence are carefully set to non-final.\n\nOverall I agree with @MarcoFalke. Though I would say some mechanism usage towards specific Bitcoin applications are already docume",https://github.com/bitcoin/bitcoin/pull/18096#discussion_r620505684,620505684,src/script/interpreter.cpp
ariard,2021-04-26 17:31:38,nit: if all inputs's nSequence,https://github.com/bitcoin/bitcoin/pull/18096#discussion_r620505955,620505955,src/consensus/tx_verify.cpp
