prayank23,2021-06-24 21:16:19,"Concept ACK\n\nSince BIP 342 is implemented in Bitcoin Core, OP_CHECKSIGADD is the last executable opcode now according to my understanding.\n\n> This change is not really necessary as MAX_OPCODE check is only really\nused while decoding transactions\n\nNot sure about this part",https://github.com/bitcoin/bitcoin/pull/22338#issuecomment-867957088,867957088,
sanket1729,2021-06-24 23:35:03,"> This change is not really necessary as MAX_OPCODE check is only really\nused while decoding transactions\n\nTo elaborate, right now this is used while parsing scrpitPubkey and ScrpitSig in a Tx. It is impossible for `CHECKSIGADD` to end up in `scriptSig` or `scriptPubkey` in taproot. Secondly, the opcode execution is only valid for taproot scripts, but according to the current design, the fun",https://github.com/bitcoin/bitcoin/pull/22338#issuecomment-868036191,868036191,
benthecarman,2021-06-25 18:23:37,"Concept ACK\n\n",https://github.com/bitcoin/bitcoin/pull/22338#issuecomment-868752087,868752087,
theStack,2021-06-28 22:16:31,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22338#issuecomment-870082432,870082432,
JeremyRubin,2021-06-28 22:58:02,Would it be a better idea to split the baby now and make the handling of pre-v1 and v1 scripts different here?,https://github.com/bitcoin/bitcoin/pull/22338#issuecomment-870099869,870099869,
laanwj,2021-11-10 15:56:03,"Concept ACK\n\n> So, the ideal solution would be to somehow pass the script context and enforce that the CHECKSIGADD is only used in tapscripts, but that probably requires more discussion and is out of scope for this PR.\n\nThe main thing to review here is then that this doesn't create any risk for non-tapscript verification. It seems that `MAX_OPCODE` is used in:\n- `ParseOpCode` parsing fro",https://github.com/bitcoin/bitcoin/pull/22338#issuecomment-965462742,965462742,
DrahtBot,2021-11-10 16:13:58,"> I don't think this should even be labeled ""consensus""? Or am I missing something.\n\nI am still learning. Not mixing consensus code with utility code would help me.",https://github.com/bitcoin/bitcoin/pull/22338#issuecomment-965500053,965500053,
laanwj,2021-11-10 15:45:49,"context:\n```c++\nOP_NOP10 = 0xb9,\nOP_CHECKSIGADD = 0xba,\n```",https://github.com/bitcoin/bitcoin/pull/22338#discussion_r746720591,746720591,src/script/script.h
