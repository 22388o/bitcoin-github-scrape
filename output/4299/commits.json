[
  {
    "sha": "797aea6f9542f7b321e3cbe61ef3ce61e60737ef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OTdhZWE2Zjk1NDJmN2IzMjFlM2NiZTYxZWYzY2U2MWU2MDczN2Vm",
    "commit": {
      "author": {
        "name": "Huang Le",
        "email": "4tarhl@gmail.com",
        "date": "2014-06-06T19:09:03Z"
      },
      "committer": {
        "name": "Huang Le",
        "email": "4tarhl@gmail.com",
        "date": "2014-06-06T19:09:03Z"
      },
      "message": "Using Boost Asio to do async resolving\n\nSigned-off-by: Huang Le <4tarhl@gmail.com>",
      "tree": {
        "sha": "a9fdb7e95ec31d7c5ad884883c5c4725da5de391",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9fdb7e95ec31d7c5ad884883c5c4725da5de391"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/797aea6f9542f7b321e3cbe61ef3ce61e60737ef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/797aea6f9542f7b321e3cbe61ef3ce61e60737ef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/797aea6f9542f7b321e3cbe61ef3ce61e60737ef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/797aea6f9542f7b321e3cbe61ef3ce61e60737ef/comments",
    "author": {
      "login": "4tar",
      "id": 882771,
      "node_id": "MDQ6VXNlcjg4Mjc3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/882771?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/4tar",
      "html_url": "https://github.com/4tar",
      "followers_url": "https://api.github.com/users/4tar/followers",
      "following_url": "https://api.github.com/users/4tar/following{/other_user}",
      "gists_url": "https://api.github.com/users/4tar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/4tar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/4tar/subscriptions",
      "organizations_url": "https://api.github.com/users/4tar/orgs",
      "repos_url": "https://api.github.com/users/4tar/repos",
      "events_url": "https://api.github.com/users/4tar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/4tar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "4tar",
      "id": 882771,
      "node_id": "MDQ6VXNlcjg4Mjc3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/882771?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/4tar",
      "html_url": "https://github.com/4tar",
      "followers_url": "https://api.github.com/users/4tar/followers",
      "following_url": "https://api.github.com/users/4tar/following{/other_user}",
      "gists_url": "https://api.github.com/users/4tar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/4tar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/4tar/subscriptions",
      "organizations_url": "https://api.github.com/users/4tar/orgs",
      "repos_url": "https://api.github.com/users/4tar/repos",
      "events_url": "https://api.github.com/users/4tar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/4tar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "97ab93f50b6f35bc362990e9dd665b90ca4132df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97ab93f50b6f35bc362990e9dd665b90ca4132df",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/97ab93f50b6f35bc362990e9dd665b90ca4132df"
      }
    ],
    "stats": {
      "total": 144,
      "additions": 68,
      "deletions": 76
    },
    "files": [
      {
        "sha": "ecde6aab5ac95a5b2836efa96c94bfe5bc212417",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 48,
        "deletions": 31,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/797aea6f9542f7b321e3cbe61ef3ce61e60737ef/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/797aea6f9542f7b321e3cbe61ef3ce61e60737ef/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=797aea6f9542f7b321e3cbe61ef3ce61e60737ef",
        "patch": "@@ -16,6 +16,7 @@\n \n #include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n #include <boost/algorithm/string/predicate.hpp> // for startswith() and endswith()\n+#include <boost/bind.hpp>\n \n #if !defined(HAVE_MSG_NOSIGNAL) && !defined(MSG_NOSIGNAL)\n #define MSG_NOSIGNAL 0\n@@ -59,6 +60,16 @@ void SplitHostPort(std::string in, int &portOut, std::string &hostOut) {\n         hostOut = in;\n }\n \n+static void resolve_handler(std::vector<CNetAddr>* vIP, unsigned int nMax, const boost::system::error_code& ec, boost::asio::ip::tcp::resolver::iterator itr)\n+{\n+    if (ec)\n+        return;\n+\n+    boost::asio::ip::tcp::resolver::iterator end;\n+    for (; (nMax == 0 || vIP->size() < nMax) && itr != end; ++itr)\n+        vIP->push_back(CNetAddr(itr->endpoint().address()));\n+}\n+\n bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup)\n {\n     vIP.clear();\n@@ -71,42 +82,26 @@ bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsign\n         }\n     }\n \n-    struct addrinfo aiHint;\n-    memset(&aiHint, 0, sizeof(struct addrinfo));\n+    boost::system::error_code ec;\n+    boost::asio::ip::address addr;\n \n-    aiHint.ai_socktype = SOCK_STREAM;\n-    aiHint.ai_protocol = IPPROTO_TCP;\n-    aiHint.ai_family = AF_UNSPEC;\n-#ifdef WIN32\n-    aiHint.ai_flags = fAllowLookup ? 0 : AI_NUMERICHOST;\n-#else\n-    aiHint.ai_flags = fAllowLookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n-#endif\n-    struct addrinfo *aiRes = NULL;\n-    int nErr = getaddrinfo(pszName, NULL, &aiHint, &aiRes);\n-    if (nErr)\n-        return false;\n+    if (fAllowLookup) {\n+        boost::asio::io_service ios;\n+        boost::asio::ip::tcp::resolver resolver(ios);\n+        boost::asio::ip::tcp::resolver::query query(pszName, \"\");\n \n-    struct addrinfo *aiTrav = aiRes;\n-    while (aiTrav != NULL && (nMaxSolutions == 0 || vIP.size() < nMaxSolutions))\n-    {\n-        if (aiTrav->ai_family == AF_INET)\n-        {\n-            assert(aiTrav->ai_addrlen >= sizeof(sockaddr_in));\n-            vIP.push_back(CNetAddr(((struct sockaddr_in*)(aiTrav->ai_addr))->sin_addr));\n-        }\n+        resolver.async_resolve(query, boost::bind(resolve_handler, &vIP, nMaxSolutions, boost::asio::placeholders::error, boost::asio::placeholders::iterator));\n \n-        if (aiTrav->ai_family == AF_INET6)\n-        {\n-            assert(aiTrav->ai_addrlen >= sizeof(sockaddr_in6));\n-            vIP.push_back(CNetAddr(((struct sockaddr_in6*)(aiTrav->ai_addr))->sin6_addr));\n+        while (!ios.poll(ec) && !ec) {\n+            boost::this_thread::interruption_point();\n+            MilliSleep(500);\n         }\n-\n-        aiTrav = aiTrav->ai_next;\n+    } else {\n+        addr = boost::asio::ip::address::from_string(pszName, ec);\n+        if (!ec)\n+            vIP.push_back(CNetAddr(addr));\n     }\n \n-    freeaddrinfo(aiRes);\n-\n     return (vIP.size() > 0);\n }\n \n@@ -588,6 +583,29 @@ CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr)\n     SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n }\n \n+CNetAddr::CNetAddr(const boost::asio::ip::address& asioAddr)\n+{\n+    boost::asio::ip::address addr;\n+\n+    if (asioAddr.is_v6()\n+     && (asioAddr.to_v6().is_v4_compatible()\n+      || asioAddr.to_v6().is_v4_mapped()))\n+        addr = asioAddr.to_v6().to_v4();\n+    else\n+        addr = asioAddr;\n+\n+    if(addr.is_v4())\n+    {\n+        boost::asio::ip::address_v4::bytes_type bytes = addr.to_v4().to_bytes();\n+        SetRaw(NET_IPV4, &bytes[0]);\n+    }\n+    else\n+    {\n+        boost::asio::ip::address_v6::bytes_type bytes = addr.to_v6().to_bytes();\n+        SetRaw(NET_IPV6, &bytes[0]);\n+    }\n+}\n+\n CNetAddr::CNetAddr(const char *pszIp, bool fAllowLookup)\n {\n     Init();\n@@ -732,7 +750,6 @@ bool CNetAddr::IsValid() const\n         if (memcmp(ip+12, &ipNone, 4) == 0)\n             return false;\n     }\n-\n     return true;\n }\n "
      },
      {
        "sha": "ec0acb7efe0af9ce1b29631806a2c2bf74b6eebc",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/797aea6f9542f7b321e3cbe61ef3ce61e60737ef/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/797aea6f9542f7b321e3cbe61ef3ce61e60737ef/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=797aea6f9542f7b321e3cbe61ef3ce61e60737ef",
        "patch": "@@ -15,6 +15,7 @@\n #include <stdint.h>\n #include <string>\n #include <vector>\n+#include <boost/asio.hpp>\n \n extern int nConnectTimeout;\n \n@@ -45,6 +46,8 @@ class CNetAddr\n     public:\n         CNetAddr();\n         CNetAddr(const struct in_addr& ipv4Addr);\n+        CNetAddr(const struct in6_addr& ipv6Addr);\n+        CNetAddr(const boost::asio::ip::address& asioAddr);\n         explicit CNetAddr(const char *pszIp, bool fAllowLookup = false);\n         explicit CNetAddr(const std::string &strIp, bool fAllowLookup = false);\n         void Init();\n@@ -80,13 +83,11 @@ class CNetAddr\n         unsigned int GetByte(int n) const;\n         uint64_t GetHash() const;\n         bool GetInAddr(struct in_addr* pipv4Addr) const;\n+        bool GetIn6Addr(struct in6_addr* pipv6Addr) const;\n         std::vector<unsigned char> GetGroup() const;\n         int GetReachabilityFrom(const CNetAddr *paddrPartner = NULL) const;\n         void print() const;\n \n-        CNetAddr(const struct in6_addr& pipv6Addr);\n-        bool GetIn6Addr(struct in6_addr* pipv6Addr) const;\n-\n         friend bool operator==(const CNetAddr& a, const CNetAddr& b);\n         friend bool operator!=(const CNetAddr& a, const CNetAddr& b);\n         friend bool operator<(const CNetAddr& a, const CNetAddr& b);"
      },
      {
        "sha": "db8e8992fa28e50788f917cd7b17491a5ccd4bf5",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 23,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/797aea6f9542f7b321e3cbe61ef3ce61e60737ef/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/797aea6f9542f7b321e3cbe61ef3ce61e60737ef/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=797aea6f9542f7b321e3cbe61ef3ce61e60737ef",
        "patch": "@@ -360,31 +360,9 @@ void ErrorReply(std::ostream& stream, const Object& objError, const Value& id)\n     stream << HTTPReply(nStatus, strReply, false) << std::flush;\n }\n \n-CNetAddr BoostAsioToCNetAddr(boost::asio::ip::address address)\n-{\n-    CNetAddr netaddr;\n-    // Make sure that IPv4-compatible and IPv4-mapped IPv6 addresses are treated as IPv4 addresses\n-    if (address.is_v6()\n-     && (address.to_v6().is_v4_compatible()\n-      || address.to_v6().is_v4_mapped()))\n-        address = address.to_v6().to_v4();\n-\n-    if(address.is_v4())\n-    {\n-        boost::asio::ip::address_v4::bytes_type bytes = address.to_v4().to_bytes();\n-        netaddr.SetRaw(NET_IPV4, &bytes[0]);\n-    }\n-    else\n-    {\n-        boost::asio::ip::address_v6::bytes_type bytes = address.to_v6().to_bytes();\n-        netaddr.SetRaw(NET_IPV6, &bytes[0]);\n-    }\n-    return netaddr;\n-}\n-\n bool ClientAllowed(const boost::asio::ip::address& address)\n {\n-    CNetAddr netaddr = BoostAsioToCNetAddr(address);\n+    CNetAddr netaddr(address);\n     BOOST_FOREACH(const CSubNet &subnet, rpc_allow_subnets)\n         if (subnet.Match(netaddr))\n             return true;"
      },
      {
        "sha": "1092c691beede19d23b2cfaffaf8e426c3e97b61",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/797aea6f9542f7b321e3cbe61ef3ce61e60737ef/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/797aea6f9542f7b321e3cbe61ef3ce61e60737ef/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=797aea6f9542f7b321e3cbe61ef3ce61e60737ef",
        "patch": "@@ -19,7 +19,6 @@\n #include \"json/json_spirit_writer_template.h\"\n \n class CBlockIndex;\n-class CNetAddr;\n \n /* Start RPC threads */\n void StartRPCThreads();\n@@ -51,9 +50,6 @@ void RPCTypeCheck(const json_spirit::Object& o,\n  */\n void RPCRunLater(const std::string& name, boost::function<void(void)> func, int64_t nSeconds);\n \n-//! Convert boost::asio address to CNetAddr\n-extern CNetAddr BoostAsioToCNetAddr(boost::asio::ip::address address);\n-\n typedef json_spirit::Value(*rpcfn_type)(const json_spirit::Array& params, bool fHelp);\n \n class CRPCCommand"
      },
      {
        "sha": "9420c6f3d550e4ba8a6e0de76ab1352bd6f24d15",
        "filename": "src/test/netbase_tests.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/797aea6f9542f7b321e3cbe61ef3ce61e60737ef/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/797aea6f9542f7b321e3cbe61ef3ce61e60737ef/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=797aea6f9542f7b321e3cbe61ef3ce61e60737ef",
        "patch": "@@ -139,4 +139,19 @@ BOOST_AUTO_TEST_CASE(subnet_test)\n     BOOST_CHECK(!CSubNet(\"fuzzy\").IsValid());\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_from_boostasio)\n+{\n+    // Check IPv4 addresses\n+    BOOST_CHECK_EQUAL(CNetAddr(boost::asio::ip::address::from_string(\"1.2.3.4\")).ToString(), \"1.2.3.4\");\n+    BOOST_CHECK_EQUAL(CNetAddr(boost::asio::ip::address::from_string(\"127.0.0.1\")).ToString(), \"127.0.0.1\");\n+    // Check IPv6 addresses\n+    BOOST_CHECK_EQUAL(CNetAddr(boost::asio::ip::address::from_string(\"::1\")).ToString(), \"::1\");\n+    BOOST_CHECK_EQUAL(CNetAddr(boost::asio::ip::address::from_string(\"123:4567:89ab:cdef:123:4567:89ab:cdef\")).ToString(),\n+                                         \"123:4567:89ab:cdef:123:4567:89ab:cdef\");\n+    // v4 compatible must be interpreted as IPv4\n+    BOOST_CHECK_EQUAL(CNetAddr(boost::asio::ip::address::from_string(\"::0:127.0.0.1\")).ToString(), \"127.0.0.1\");\n+    // v4 mapped must be interpreted as IPv4\n+    BOOST_CHECK_EQUAL(CNetAddr(boost::asio::ip::address::from_string(\"::ffff:127.0.0.1\")).ToString(), \"127.0.0.1\");\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "55e247a7c9cfa7c3b29ce47a635fa1c6976f18a4",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/797aea6f9542f7b321e3cbe61ef3ce61e60737ef/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/797aea6f9542f7b321e3cbe61ef3ce61e60737ef/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=797aea6f9542f7b321e3cbe61ef3ce61e60737ef",
        "patch": "@@ -139,19 +139,4 @@ BOOST_AUTO_TEST_CASE(rpc_parse_monetary_values)\n     BOOST_CHECK(AmountFromValue(ValueFromString(\"20999999.99999999\")) == 2099999999999999LL);\n }\n \n-BOOST_AUTO_TEST_CASE(rpc_boostasiotocnetaddr)\n-{\n-    // Check IPv4 addresses\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"1.2.3.4\")).ToString(), \"1.2.3.4\");\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"127.0.0.1\")).ToString(), \"127.0.0.1\");\n-    // Check IPv6 addresses\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"::1\")).ToString(), \"::1\");\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"123:4567:89ab:cdef:123:4567:89ab:cdef\")).ToString(),\n-                                         \"123:4567:89ab:cdef:123:4567:89ab:cdef\");\n-    // v4 compatible must be interpreted as IPv4\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"::0:127.0.0.1\")).ToString(), \"127.0.0.1\");\n-    // v4 mapped must be interpreted as IPv4\n-    BOOST_CHECK_EQUAL(BoostAsioToCNetAddr(boost::asio::ip::address::from_string(\"::ffff:127.0.0.1\")).ToString(), \"127.0.0.1\");\n-}\n-\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "7c3b15975eba1b80ac485bfa62f73352175fb347",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YzNiMTU5NzVlYmExYjgwYWM0ODViZmE2MmY3MzM1MjE3NWZiMzQ3",
    "commit": {
      "author": {
        "name": "Huang Le",
        "email": "4tarhl@gmail.com",
        "date": "2014-06-07T03:01:11Z"
      },
      "committer": {
        "name": "Huang Le",
        "email": "4tarhl@gmail.com",
        "date": "2014-06-07T03:01:11Z"
      },
      "message": "A null commit for triggering auto testing\n\nSigned-off-by: Huang Le <4tarhl@gmail.com>",
      "tree": {
        "sha": "e3dc3e5b08c8e04862e8434ddb161e87586c2adc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e3dc3e5b08c8e04862e8434ddb161e87586c2adc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c3b15975eba1b80ac485bfa62f73352175fb347",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c3b15975eba1b80ac485bfa62f73352175fb347",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7c3b15975eba1b80ac485bfa62f73352175fb347",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c3b15975eba1b80ac485bfa62f73352175fb347/comments",
    "author": {
      "login": "4tar",
      "id": 882771,
      "node_id": "MDQ6VXNlcjg4Mjc3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/882771?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/4tar",
      "html_url": "https://github.com/4tar",
      "followers_url": "https://api.github.com/users/4tar/followers",
      "following_url": "https://api.github.com/users/4tar/following{/other_user}",
      "gists_url": "https://api.github.com/users/4tar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/4tar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/4tar/subscriptions",
      "organizations_url": "https://api.github.com/users/4tar/orgs",
      "repos_url": "https://api.github.com/users/4tar/repos",
      "events_url": "https://api.github.com/users/4tar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/4tar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "4tar",
      "id": 882771,
      "node_id": "MDQ6VXNlcjg4Mjc3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/882771?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/4tar",
      "html_url": "https://github.com/4tar",
      "followers_url": "https://api.github.com/users/4tar/followers",
      "following_url": "https://api.github.com/users/4tar/following{/other_user}",
      "gists_url": "https://api.github.com/users/4tar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/4tar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/4tar/subscriptions",
      "organizations_url": "https://api.github.com/users/4tar/orgs",
      "repos_url": "https://api.github.com/users/4tar/repos",
      "events_url": "https://api.github.com/users/4tar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/4tar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "797aea6f9542f7b321e3cbe61ef3ce61e60737ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/797aea6f9542f7b321e3cbe61ef3ce61e60737ef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/797aea6f9542f7b321e3cbe61ef3ce61e60737ef"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "950295e8f18e6bf597eaef7459f155b56ecd9fc1",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c3b15975eba1b80ac485bfa62f73352175fb347/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c3b15975eba1b80ac485bfa62f73352175fb347/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=7c3b15975eba1b80ac485bfa62f73352175fb347",
        "patch": "@@ -16,7 +16,7 @@\n \n #include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n #include <boost/algorithm/string/predicate.hpp> // for startswith() and endswith()\n-#include <boost/bind.hpp>\n+#include <boost/bind.hpp> // for async_resolve_handler of LookupIntern()\n \n #if !defined(HAVE_MSG_NOSIGNAL) && !defined(MSG_NOSIGNAL)\n #define MSG_NOSIGNAL 0"
      }
    ]
  },
  {
    "sha": "387bfd2c268bc3d49c21019e16c3cbded67ea4a8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODdiZmQyYzI2OGJjM2Q0OWMyMTAxOWUxNmMzY2JkZWQ2N2VhNGE4",
    "commit": {
      "author": {
        "name": "Huang Le",
        "email": "4tarhl@gmail.com",
        "date": "2014-06-07T11:21:18Z"
      },
      "committer": {
        "name": "Huang Le",
        "email": "4tarhl@gmail.com",
        "date": "2014-06-07T11:21:18Z"
      },
      "message": "Insert one interruption_point inside the resolve handler to avoid the wait loop in LookupIntern()\n\nSigned-off-by: Huang Le <4tarhl@gmail.com>",
      "tree": {
        "sha": "a480fe586bebeec20c2819e3e005adc23f9b7667",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a480fe586bebeec20c2819e3e005adc23f9b7667"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/387bfd2c268bc3d49c21019e16c3cbded67ea4a8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/387bfd2c268bc3d49c21019e16c3cbded67ea4a8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/387bfd2c268bc3d49c21019e16c3cbded67ea4a8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/387bfd2c268bc3d49c21019e16c3cbded67ea4a8/comments",
    "author": {
      "login": "4tar",
      "id": 882771,
      "node_id": "MDQ6VXNlcjg4Mjc3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/882771?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/4tar",
      "html_url": "https://github.com/4tar",
      "followers_url": "https://api.github.com/users/4tar/followers",
      "following_url": "https://api.github.com/users/4tar/following{/other_user}",
      "gists_url": "https://api.github.com/users/4tar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/4tar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/4tar/subscriptions",
      "organizations_url": "https://api.github.com/users/4tar/orgs",
      "repos_url": "https://api.github.com/users/4tar/repos",
      "events_url": "https://api.github.com/users/4tar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/4tar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "4tar",
      "id": 882771,
      "node_id": "MDQ6VXNlcjg4Mjc3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/882771?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/4tar",
      "html_url": "https://github.com/4tar",
      "followers_url": "https://api.github.com/users/4tar/followers",
      "following_url": "https://api.github.com/users/4tar/following{/other_user}",
      "gists_url": "https://api.github.com/users/4tar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/4tar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/4tar/subscriptions",
      "organizations_url": "https://api.github.com/users/4tar/orgs",
      "repos_url": "https://api.github.com/users/4tar/repos",
      "events_url": "https://api.github.com/users/4tar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/4tar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7c3b15975eba1b80ac485bfa62f73352175fb347",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c3b15975eba1b80ac485bfa62f73352175fb347",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7c3b15975eba1b80ac485bfa62f73352175fb347"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "597ae41efbccaf3d79144df634cc0d0c9847d7c5",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/387bfd2c268bc3d49c21019e16c3cbded67ea4a8/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/387bfd2c268bc3d49c21019e16c3cbded67ea4a8/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=387bfd2c268bc3d49c21019e16c3cbded67ea4a8",
        "patch": "@@ -65,6 +65,8 @@ static void resolve_handler(std::vector<CNetAddr>* vIP, unsigned int nMax, const\n     if (ec)\n         return;\n \n+    boost::this_thread::interruption_point();\n+\n     boost::asio::ip::tcp::resolver::iterator end;\n     for (; (nMax == 0 || vIP->size() < nMax) && itr != end; ++itr)\n         vIP->push_back(CNetAddr(itr->endpoint().address()));\n@@ -92,10 +94,7 @@ bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsign\n \n         resolver.async_resolve(query, boost::bind(resolve_handler, &vIP, nMaxSolutions, boost::asio::placeholders::error, boost::asio::placeholders::iterator));\n \n-        while (!ios.poll(ec) && !ec) {\n-            boost::this_thread::interruption_point();\n-            MilliSleep(500);\n-        }\n+        ios.run();\n     } else {\n         addr = boost::asio::ip::address::from_string(pszName, ec);\n         if (!ec)"
      }
    ]
  }
]