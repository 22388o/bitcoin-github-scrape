[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/504012990",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16251#issuecomment-504012990",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16251",
    "id": 504012990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDAxMjk5MA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-20T12:50:23Z",
    "updated_at": "2019-09-10T03:35:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16841](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16841.html) (Replace GetScriptForWitness with GetScriptForDestination by meshcollider)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/504012990/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/504013209",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16251#issuecomment-504013209",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16251",
    "id": 504013209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDAxMzIwOQ==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-20T12:51:05Z",
    "updated_at": "2019-06-20T12:51:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "With this patch, partial signature error message looks like:\r\n\r\n    \"error\": \"CHECK(MULTI)SIG failing with non-zero signature (possibly need more signatures)\"\r\n\r\ninstead of:\r\n\r\n    \"error\": \"Signature must be zero for failed CHECK(MULTI)SIG operation\"\r\n\r\nMismatching scripts give a new error of either:\r\n\r\n    error code: -3\r\n    error message:\r\n    redeemScript/witnessScript does not match scriptPubKey\r\n\r\nor\r\n\r\n    error code: -3\r\n    error message:\r\n    redeemScript does not correspond to witnessScript\r\n\r\ninstead of an apparently successful operation (but unchanged rawtx) with embedded error of:\r\n\r\n    \"error\": \"Witness program was passed an empty witness\"\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/504013209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516330802",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16251#issuecomment-516330802",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16251",
    "id": 516330802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjMzMDgwMg==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-30T08:57:53Z",
    "updated_at": "2019-07-30T08:57:53Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, looks right to me after an initial read",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516330802/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/530047693",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16251#issuecomment-530047693",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16251",
    "id": 530047693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDA0NzY5Mw==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-10T17:48:26Z",
    "updated_at": "2019-09-10T17:48:26Z",
    "author_association": "MEMBER",
    "body": "utACK https://github.com/bitcoin/bitcoin/pull/16251/commits/ec4c79326bb670c2cc1757ecfb1900f8460c5257",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/530047693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/530211345",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16251#issuecomment-530211345",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16251",
    "id": 530211345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDIxMTM0NQ==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-11T04:09:53Z",
    "updated_at": "2019-09-11T04:09:53Z",
    "author_association": "MEMBER",
    "body": "Code Review ACK ec4c79326bb670c2cc1757ecfb1900f8460c5257",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/530211345/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300003466",
    "pull_request_review_id": 257546873,
    "id": 300003466,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDAwMzQ2Ng==",
    "diff_hunk": "@@ -221,6 +221,9 @@ UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival\n                     // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n                     keystore->AddCScript(GetScriptForWitness(witnessScript));\n                 }\n+                if (rs.isNull() && ws.isNull()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing redeemScript/witnessScript\");\n+                }",
    "path": "src/rpc/rawtransaction_util.cpp",
    "position": 32,
    "original_position": 6,
    "commit_id": "ec4c79326bb670c2cc1757ecfb1900f8460c5257",
    "original_commit_id": "01174596e69568c434198a86f54cb9ea6740e6c2",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I feel like this has already been merged",
    "created_at": "2019-07-03T14:55:49Z",
    "updated_at": "2019-09-10T05:42:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r300003466",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300003466"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r300003466"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300003466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 211,
    "original_line": 211,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300007679",
    "pull_request_review_id": 257552247,
    "id": 300007679,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDAwNzY3OQ==",
    "diff_hunk": "@@ -221,6 +221,9 @@ UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival\n                     // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n                     keystore->AddCScript(GetScriptForWitness(witnessScript));\n                 }\n+                if (rs.isNull() && ws.isNull()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing redeemScript/witnessScript\");\n+                }",
    "path": "src/rpc/rawtransaction_util.cpp",
    "position": 32,
    "original_position": 6,
    "commit_id": "ec4c79326bb670c2cc1757ecfb1900f8460c5257",
    "original_commit_id": "01174596e69568c434198a86f54cb9ea6740e6c2",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, I just rebased it (` ajtowns force-pushed the ajtowns:201906-signrawerror branch from 073a2f8 to f7e4676`) but github's not picking up the new HEAD?",
    "created_at": "2019-07-03T15:03:23Z",
    "updated_at": "2019-09-10T05:42:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r300007679",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300007679"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r300007679"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300007679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 211,
    "original_line": 211,
    "side": "RIGHT",
    "in_reply_to_id": 300003466
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300009913",
    "pull_request_review_id": 257555008,
    "id": 300009913,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDAwOTkxMw==",
    "diff_hunk": "@@ -221,6 +221,9 @@ UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival\n                     // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n                     keystore->AddCScript(GetScriptForWitness(witnessScript));\n                 }\n+                if (rs.isNull() && ws.isNull()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing redeemScript/witnessScript\");\n+                }",
    "path": "src/rpc/rawtransaction_util.cpp",
    "position": 32,
    "original_position": 6,
    "commit_id": "ec4c79326bb670c2cc1757ecfb1900f8460c5257",
    "original_commit_id": "01174596e69568c434198a86f54cb9ea6740e6c2",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It is well known for GitHub to show outdated branches in the web view (see also https://github.com/bitcoin/bitcoin/issues/15847#issuecomment-484871831)\r\n\r\n\r\nI guess you have to force push twice?",
    "created_at": "2019-07-03T15:07:22Z",
    "updated_at": "2019-09-10T05:42:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r300009913",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300009913"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r300009913"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300009913/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 211,
    "original_line": 211,
    "side": "RIGHT",
    "in_reply_to_id": 300003466
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300011443",
    "pull_request_review_id": 257556880,
    "id": 300011443,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwMDAxMTQ0Mw==",
    "diff_hunk": "@@ -221,6 +221,9 @@ UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival\n                     // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n                     keystore->AddCScript(GetScriptForWitness(witnessScript));\n                 }\n+                if (rs.isNull() && ws.isNull()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing redeemScript/witnessScript\");\n+                }",
    "path": "src/rpc/rawtransaction_util.cpp",
    "position": 32,
    "original_position": 6,
    "commit_id": "ec4c79326bb670c2cc1757ecfb1900f8460c5257",
    "original_commit_id": "01174596e69568c434198a86f54cb9ea6740e6c2",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Looks like it's doing the right thing now (I pushed a dummy commit and force-pushed it out of existence). You should be seeing f7e4676591c9027a6fe4dd1ebc9e1ed35b27574f as HEAD.",
    "created_at": "2019-07-03T15:10:10Z",
    "updated_at": "2019-09-10T05:42:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r300011443",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300011443"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r300011443"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/300011443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 211,
    "original_line": 211,
    "side": "RIGHT",
    "in_reply_to_id": 300003466
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322263307",
    "pull_request_review_id": 285534858,
    "id": 322263307,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjI2MzMwNw==",
    "diff_hunk": "@@ -196,32 +196,73 @@ void ParsePrevouts(const UniValue& prevTxsUnival, FillableSigningProvider* keyst\n             }\n \n             // if redeemScript and private keys were given, add redeemScript to the keystore so it can be signed\n-            if (keystore && (scriptPubKey.IsPayToScriptHash() || scriptPubKey.IsPayToWitnessScriptHash())) {\n+            const bool is_p2sh = scriptPubKey.IsPayToScriptHash();\n+            const bool is_p2wsh = scriptPubKey.IsPayToWitnessScriptHash();\n+            if (keystore && (is_p2sh || is_p2wsh)) {\n                 RPCTypeCheckObj(prevOut,\n                     {\n                         {\"redeemScript\", UniValueType(UniValue::VSTR)},\n                         {\"witnessScript\", UniValueType(UniValue::VSTR)},\n                     }, true);\n                 UniValue rs = find_value(prevOut, \"redeemScript\");\n-                if (!rs.isNull()) {\n-                    std::vector<unsigned char> rsData(ParseHexV(rs, \"redeemScript\"));\n-                    CScript redeemScript(rsData.begin(), rsData.end());\n-                    keystore->AddCScript(redeemScript);\n-                    // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n-                    // This is only for compatibility, it is encouraged to use the explicit witnessScript field instead.\n-                    keystore->AddCScript(GetScriptForWitness(redeemScript));\n-                }\n                 UniValue ws = find_value(prevOut, \"witnessScript\");\n-                if (!ws.isNull()) {\n-                    std::vector<unsigned char> wsData(ParseHexV(ws, \"witnessScript\"));\n-                    CScript witnessScript(wsData.begin(), wsData.end());\n-                    keystore->AddCScript(witnessScript);\n-                    // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n-                    keystore->AddCScript(GetScriptForWitness(witnessScript));\n-                }\n                 if (rs.isNull() && ws.isNull()) {\n                     throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing redeemScript/witnessScript\");\n                 }\n+\n+                // work from witnessScript when possible\n+                std::vector<unsigned char> scriptData(!ws.isNull() ? ParseHexV(ws, \"witnessScript\") : ParseHexV(rs, \"redeemScript\"));\n+                CScript script(scriptData.begin(), scriptData.end());\n+                keystore->AddCScript(script);\n+                // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n+                // This is done for redeemScript only for compatibility, it is encouraged to use the explicit witnessScript field instead.\n+                CScript witnessScript{GetScriptForWitness(script)};\n+                keystore->AddCScript(witnessScript);\n+\n+                if (is_p2sh) {\n+                    const CTxDestination p2sh{ScriptHash(script)};\n+                    const CTxDestination p2sh_p2wsh{ScriptHash(witnessScript)};\n+                    if (scriptPubKey == GetScriptForDestination(p2sh)) {\n+                        // traditional p2sh; arguably an error if\n+                        // we got here with rs.IsNull(), because\n+                        // that means the p2sh script was specified\n+                        // via witnessScript param, but for now\n+                        // we'll just quietly accept it\n+                    } else if (scriptPubKey == GetScriptForDestination(p2sh_p2wsh)) {\n+                        // p2wsh encoded as p2sh; ideally the witness\n+                        // script was specified in the witnessScript\n+                        // param, but also support specifying it via\n+                        // redeemScript param for backwards compat\n+                        // (in which case ws.IsNull() == true)\n+                    } else {\n+                        // otherwise, can't generate scriptPubKey from\n+                        // either script, so we got unusable parameters\n+                        throw JSONRPCError(RPC_INVALID_PARAMETER, \"redeemScript/witnessScript does not match scriptPubKey\");\n+                    }\n+                } else if (is_p2wsh) {\n+                    const CTxDestination p2wsh{WitnessV0ScriptHash(script)};\n+                    // plain p2wsh; could throw an error if script\n+                    // was specified by redeemScript rather than\n+                    // witnessScript (ie, ws.IsNull() == true), but\n+                    // accept it for backwards compat\n+",
    "path": "src/rpc/rawtransaction_util.cpp",
    "position": null,
    "original_position": 69,
    "commit_id": "ec4c79326bb670c2cc1757ecfb1900f8460c5257",
    "original_commit_id": "a4b351a6c6d3da00c5fb94c51af027ace7051bb4",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: extra newline",
    "created_at": "2019-09-09T14:10:07Z",
    "updated_at": "2019-09-10T05:42:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r322263307",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322263307"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r322263307"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322263307/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 248,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322265375",
    "pull_request_review_id": 285534858,
    "id": 322265375,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjI2NTM3NQ==",
    "diff_hunk": "@@ -196,32 +196,73 @@ void ParsePrevouts(const UniValue& prevTxsUnival, FillableSigningProvider* keyst\n             }\n \n             // if redeemScript and private keys were given, add redeemScript to the keystore so it can be signed\n-            if (keystore && (scriptPubKey.IsPayToScriptHash() || scriptPubKey.IsPayToWitnessScriptHash())) {\n+            const bool is_p2sh = scriptPubKey.IsPayToScriptHash();\n+            const bool is_p2wsh = scriptPubKey.IsPayToWitnessScriptHash();\n+            if (keystore && (is_p2sh || is_p2wsh)) {\n                 RPCTypeCheckObj(prevOut,\n                     {\n                         {\"redeemScript\", UniValueType(UniValue::VSTR)},\n                         {\"witnessScript\", UniValueType(UniValue::VSTR)},\n                     }, true);\n                 UniValue rs = find_value(prevOut, \"redeemScript\");\n-                if (!rs.isNull()) {\n-                    std::vector<unsigned char> rsData(ParseHexV(rs, \"redeemScript\"));\n-                    CScript redeemScript(rsData.begin(), rsData.end());\n-                    keystore->AddCScript(redeemScript);\n-                    // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n-                    // This is only for compatibility, it is encouraged to use the explicit witnessScript field instead.\n-                    keystore->AddCScript(GetScriptForWitness(redeemScript));\n-                }\n                 UniValue ws = find_value(prevOut, \"witnessScript\");\n-                if (!ws.isNull()) {\n-                    std::vector<unsigned char> wsData(ParseHexV(ws, \"witnessScript\"));\n-                    CScript witnessScript(wsData.begin(), wsData.end());\n-                    keystore->AddCScript(witnessScript);\n-                    // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n-                    keystore->AddCScript(GetScriptForWitness(witnessScript));\n-                }\n                 if (rs.isNull() && ws.isNull()) {\n                     throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing redeemScript/witnessScript\");\n                 }\n+\n+                // work from witnessScript when possible\n+                std::vector<unsigned char> scriptData(!ws.isNull() ? ParseHexV(ws, \"witnessScript\") : ParseHexV(rs, \"redeemScript\"));\n+                CScript script(scriptData.begin(), scriptData.end());\n+                keystore->AddCScript(script);\n+                // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n+                // This is done for redeemScript only for compatibility, it is encouraged to use the explicit witnessScript field instead.\n+                CScript witnessScript{GetScriptForWitness(script)};",
    "path": "src/rpc/rawtransaction_util.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "ec4c79326bb670c2cc1757ecfb1900f8460c5257",
    "original_commit_id": "a4b351a6c6d3da00c5fb94c51af027ace7051bb4",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "this is the witness output script aka script with version number and witness program, not `witnessScript`, right?",
    "created_at": "2019-09-09T14:13:49Z",
    "updated_at": "2019-09-10T05:42:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r322265375",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322265375"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r322265375"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322265375/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 219,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322550289",
    "pull_request_review_id": 285903066,
    "id": 322550289,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjU1MDI4OQ==",
    "diff_hunk": "@@ -196,32 +196,73 @@ void ParsePrevouts(const UniValue& prevTxsUnival, FillableSigningProvider* keyst\n             }\n \n             // if redeemScript and private keys were given, add redeemScript to the keystore so it can be signed\n-            if (keystore && (scriptPubKey.IsPayToScriptHash() || scriptPubKey.IsPayToWitnessScriptHash())) {\n+            const bool is_p2sh = scriptPubKey.IsPayToScriptHash();\n+            const bool is_p2wsh = scriptPubKey.IsPayToWitnessScriptHash();\n+            if (keystore && (is_p2sh || is_p2wsh)) {\n                 RPCTypeCheckObj(prevOut,\n                     {\n                         {\"redeemScript\", UniValueType(UniValue::VSTR)},\n                         {\"witnessScript\", UniValueType(UniValue::VSTR)},\n                     }, true);\n                 UniValue rs = find_value(prevOut, \"redeemScript\");\n-                if (!rs.isNull()) {\n-                    std::vector<unsigned char> rsData(ParseHexV(rs, \"redeemScript\"));\n-                    CScript redeemScript(rsData.begin(), rsData.end());\n-                    keystore->AddCScript(redeemScript);\n-                    // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n-                    // This is only for compatibility, it is encouraged to use the explicit witnessScript field instead.\n-                    keystore->AddCScript(GetScriptForWitness(redeemScript));\n-                }\n                 UniValue ws = find_value(prevOut, \"witnessScript\");\n-                if (!ws.isNull()) {\n-                    std::vector<unsigned char> wsData(ParseHexV(ws, \"witnessScript\"));\n-                    CScript witnessScript(wsData.begin(), wsData.end());\n-                    keystore->AddCScript(witnessScript);\n-                    // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n-                    keystore->AddCScript(GetScriptForWitness(witnessScript));\n-                }\n                 if (rs.isNull() && ws.isNull()) {\n                     throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing redeemScript/witnessScript\");\n                 }\n+\n+                // work from witnessScript when possible\n+                std::vector<unsigned char> scriptData(!ws.isNull() ? ParseHexV(ws, \"witnessScript\") : ParseHexV(rs, \"redeemScript\"));\n+                CScript script(scriptData.begin(), scriptData.end());\n+                keystore->AddCScript(script);\n+                // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n+                // This is done for redeemScript only for compatibility, it is encouraged to use the explicit witnessScript field instead.\n+                CScript witnessScript{GetScriptForWitness(script)};",
    "path": "src/rpc/rawtransaction_util.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "ec4c79326bb670c2cc1757ecfb1900f8460c5257",
    "original_commit_id": "a4b351a6c6d3da00c5fb94c51af027ace7051bb4",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, it is technically a P2SH redeemScript in the form of a P2WSH scriptPubKey, but I don't think the current name is bad",
    "created_at": "2019-09-10T04:46:28Z",
    "updated_at": "2019-09-10T05:42:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r322550289",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322550289"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r322550289"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322550289/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 219,
    "side": "RIGHT",
    "in_reply_to_id": 322265375
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322560455",
    "pull_request_review_id": 285915742,
    "id": 322560455,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjU2MDQ1NQ==",
    "diff_hunk": "@@ -196,32 +196,73 @@ void ParsePrevouts(const UniValue& prevTxsUnival, FillableSigningProvider* keyst\n             }\n \n             // if redeemScript and private keys were given, add redeemScript to the keystore so it can be signed\n-            if (keystore && (scriptPubKey.IsPayToScriptHash() || scriptPubKey.IsPayToWitnessScriptHash())) {\n+            const bool is_p2sh = scriptPubKey.IsPayToScriptHash();\n+            const bool is_p2wsh = scriptPubKey.IsPayToWitnessScriptHash();\n+            if (keystore && (is_p2sh || is_p2wsh)) {\n                 RPCTypeCheckObj(prevOut,\n                     {\n                         {\"redeemScript\", UniValueType(UniValue::VSTR)},\n                         {\"witnessScript\", UniValueType(UniValue::VSTR)},\n                     }, true);\n                 UniValue rs = find_value(prevOut, \"redeemScript\");\n-                if (!rs.isNull()) {\n-                    std::vector<unsigned char> rsData(ParseHexV(rs, \"redeemScript\"));\n-                    CScript redeemScript(rsData.begin(), rsData.end());\n-                    keystore->AddCScript(redeemScript);\n-                    // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n-                    // This is only for compatibility, it is encouraged to use the explicit witnessScript field instead.\n-                    keystore->AddCScript(GetScriptForWitness(redeemScript));\n-                }\n                 UniValue ws = find_value(prevOut, \"witnessScript\");\n-                if (!ws.isNull()) {\n-                    std::vector<unsigned char> wsData(ParseHexV(ws, \"witnessScript\"));\n-                    CScript witnessScript(wsData.begin(), wsData.end());\n-                    keystore->AddCScript(witnessScript);\n-                    // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n-                    keystore->AddCScript(GetScriptForWitness(witnessScript));\n-                }\n                 if (rs.isNull() && ws.isNull()) {\n                     throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing redeemScript/witnessScript\");\n                 }\n+\n+                // work from witnessScript when possible\n+                std::vector<unsigned char> scriptData(!ws.isNull() ? ParseHexV(ws, \"witnessScript\") : ParseHexV(rs, \"redeemScript\"));\n+                CScript script(scriptData.begin(), scriptData.end());\n+                keystore->AddCScript(script);\n+                // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n+                // This is done for redeemScript only for compatibility, it is encouraged to use the explicit witnessScript field instead.\n+                CScript witnessScript{GetScriptForWitness(script)};\n+                keystore->AddCScript(witnessScript);\n+\n+                if (is_p2sh) {\n+                    const CTxDestination p2sh{ScriptHash(script)};\n+                    const CTxDestination p2sh_p2wsh{ScriptHash(witnessScript)};\n+                    if (scriptPubKey == GetScriptForDestination(p2sh)) {\n+                        // traditional p2sh; arguably an error if\n+                        // we got here with rs.IsNull(), because\n+                        // that means the p2sh script was specified\n+                        // via witnessScript param, but for now\n+                        // we'll just quietly accept it\n+                    } else if (scriptPubKey == GetScriptForDestination(p2sh_p2wsh)) {\n+                        // p2wsh encoded as p2sh; ideally the witness\n+                        // script was specified in the witnessScript\n+                        // param, but also support specifying it via\n+                        // redeemScript param for backwards compat\n+                        // (in which case ws.IsNull() == true)\n+                    } else {\n+                        // otherwise, can't generate scriptPubKey from\n+                        // either script, so we got unusable parameters\n+                        throw JSONRPCError(RPC_INVALID_PARAMETER, \"redeemScript/witnessScript does not match scriptPubKey\");\n+                    }\n+                } else if (is_p2wsh) {\n+                    const CTxDestination p2wsh{WitnessV0ScriptHash(script)};\n+                    // plain p2wsh; could throw an error if script\n+                    // was specified by redeemScript rather than\n+                    // witnessScript (ie, ws.IsNull() == true), but\n+                    // accept it for backwards compat\n+",
    "path": "src/rpc/rawtransaction_util.cpp",
    "position": null,
    "original_position": 69,
    "commit_id": "ec4c79326bb670c2cc1757ecfb1900f8460c5257",
    "original_commit_id": "a4b351a6c6d3da00c5fb94c51af027ace7051bb4",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "wow, that is nitty! fixed",
    "created_at": "2019-09-10T05:42:38Z",
    "updated_at": "2019-09-10T05:42:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r322560455",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322560455"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r322560455"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322560455/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 248,
    "side": "RIGHT",
    "in_reply_to_id": 322263307
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322560538",
    "pull_request_review_id": 285915840,
    "id": 322560538,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMjU2MDUzOA==",
    "diff_hunk": "@@ -196,32 +196,73 @@ void ParsePrevouts(const UniValue& prevTxsUnival, FillableSigningProvider* keyst\n             }\n \n             // if redeemScript and private keys were given, add redeemScript to the keystore so it can be signed\n-            if (keystore && (scriptPubKey.IsPayToScriptHash() || scriptPubKey.IsPayToWitnessScriptHash())) {\n+            const bool is_p2sh = scriptPubKey.IsPayToScriptHash();\n+            const bool is_p2wsh = scriptPubKey.IsPayToWitnessScriptHash();\n+            if (keystore && (is_p2sh || is_p2wsh)) {\n                 RPCTypeCheckObj(prevOut,\n                     {\n                         {\"redeemScript\", UniValueType(UniValue::VSTR)},\n                         {\"witnessScript\", UniValueType(UniValue::VSTR)},\n                     }, true);\n                 UniValue rs = find_value(prevOut, \"redeemScript\");\n-                if (!rs.isNull()) {\n-                    std::vector<unsigned char> rsData(ParseHexV(rs, \"redeemScript\"));\n-                    CScript redeemScript(rsData.begin(), rsData.end());\n-                    keystore->AddCScript(redeemScript);\n-                    // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n-                    // This is only for compatibility, it is encouraged to use the explicit witnessScript field instead.\n-                    keystore->AddCScript(GetScriptForWitness(redeemScript));\n-                }\n                 UniValue ws = find_value(prevOut, \"witnessScript\");\n-                if (!ws.isNull()) {\n-                    std::vector<unsigned char> wsData(ParseHexV(ws, \"witnessScript\"));\n-                    CScript witnessScript(wsData.begin(), wsData.end());\n-                    keystore->AddCScript(witnessScript);\n-                    // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n-                    keystore->AddCScript(GetScriptForWitness(witnessScript));\n-                }\n                 if (rs.isNull() && ws.isNull()) {\n                     throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing redeemScript/witnessScript\");\n                 }\n+\n+                // work from witnessScript when possible\n+                std::vector<unsigned char> scriptData(!ws.isNull() ? ParseHexV(ws, \"witnessScript\") : ParseHexV(rs, \"redeemScript\"));\n+                CScript script(scriptData.begin(), scriptData.end());\n+                keystore->AddCScript(script);\n+                // Automatically also add the P2WSH wrapped version of the script (to deal with P2SH-P2WSH).\n+                // This is done for redeemScript only for compatibility, it is encouraged to use the explicit witnessScript field instead.\n+                CScript witnessScript{GetScriptForWitness(script)};",
    "path": "src/rpc/rawtransaction_util.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "ec4c79326bb670c2cc1757ecfb1900f8460c5257",
    "original_commit_id": "a4b351a6c6d3da00c5fb94c51af027ace7051bb4",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed",
    "created_at": "2019-09-10T05:42:59Z",
    "updated_at": "2019-09-10T05:42:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r322560538",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322560538"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16251#discussion_r322560538"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16251"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/322560538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 219,
    "side": "RIGHT",
    "in_reply_to_id": 322265375
  }
]