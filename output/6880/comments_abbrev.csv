sipa,2015-10-23T15:37:11Z,"Any reason not to go to microsecond precision immediately? We have\nGetTimeMicros, and in most places in the code use microsecond int64_t\nvalues for time already.\n",https://github.com/bitcoin/bitcoin/pull/6880#issuecomment-150610480,150610480,
gavinandresen,2015-10-23T15:43:29Z,If you expect microsecond precision from messages in debug.log... you'll be disappointed. And I'd find it annoying to ignore the extra three essentially-random digits that microsecond timestamps would give.\n,https://github.com/bitcoin/bitcoin/pull/6880#issuecomment-150612207,150612207,
morcos,2015-10-23T16:01:42Z,"You can't get microsecond precision, but you can certainly get sub-millisecond precision.  So I'd also vote for microseconds.  More importantly, I'd greatly prefer to just add the extra precision to the existing time stamps instead (at least as an option).  Often I have no idea that I wanted to look at precise timing of something until after the fact, and I would not want to run all my debug logs ",https://github.com/bitcoin/bitcoin/pull/6880#issuecomment-150618466,150618466,
btcdrak,2015-10-23T16:20:13Z,Agree with @morcos \n,https://github.com/bitcoin/bitcoin/pull/6880#issuecomment-150623939,150623939,
gavinandresen,2015-10-23T16:22:57Z,Not important enough to me to bikeshed.\n,https://github.com/bitcoin/bitcoin/pull/6880#issuecomment-150624532,150624532,
