[
  {
    "sha": "176325a5a47befe32d480b3dc206dd0e64e04b21",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzYzMjVhNWE0N2JlZmUzMmQ0ODBiM2RjMjA2ZGQwZTY0ZTA0YjIx",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-22T17:48:31Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-22T17:48:31Z"
      },
      "message": "[net processing] Remove dropmessagestest\n\n-dropmessagestest is a command line option that causes 1 in n received\nmessages to be dropped. The Bitcoin P2P protocol is stateful and in\ngeneral cannot handle messages being dropped. Dropped\nversion/verack/ping/pong messages will cause the connection to time out\nand be torn down. Other dropped messages may also cause the peer to\nbelieve that the peer has stalled and tear down the connection.\n\nIt seems difficult to uncover any actual issues with -dropmessagestest,\nand any coverage that could be generated would probably be easier to\ntrigger with fuzz testing.",
      "tree": {
        "sha": "6e51f5ea77d8cd98761b17545351693b2610250f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6e51f5ea77d8cd98761b17545351693b2610250f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/176325a5a47befe32d480b3dc206dd0e64e04b21",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/176325a5a47befe32d480b3dc206dd0e64e04b21",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/176325a5a47befe32d480b3dc206dd0e64e04b21",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/176325a5a47befe32d480b3dc206dd0e64e04b21/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9286b1cbce78d7e427135ba8b5e8f56c9a611a81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9286b1cbce78d7e427135ba8b5e8f56c9a611a81",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9286b1cbce78d7e427135ba8b5e8f56c9a611a81"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 0,
      "deletions": 6
    },
    "files": [
      {
        "sha": "97a588c8dfbe9d923fa2972496f3df3af3e0c854",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/176325a5a47befe32d480b3dc206dd0e64e04b21/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/176325a5a47befe32d480b3dc206dd0e64e04b21/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=176325a5a47befe32d480b3dc206dd0e64e04b21",
        "patch": "@@ -508,7 +508,6 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-checkmempool=<n>\", strprintf(\"Run checks every <n> transactions (default: %u, regtest: %u)\", defaultChainParams->DefaultConsistencyChecks(), regtestChainParams->DefaultConsistencyChecks()), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-checkpoints\", strprintf(\"Enable rejection of any forks from the known historical chain until block %s (default: %u)\", defaultChainParams->Checkpoints().GetHeight(), DEFAULT_CHECKPOINTS_ENABLED), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-deprecatedrpc=<method>\", \"Allows deprecated RPC method(s) to be used\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n-    argsman.AddArg(\"-dropmessagestest=<n>\", \"Randomly drop 1 of every <n> network messages\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", DEFAULT_STOPAFTERBLOCKIMPORT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-stopatheight\", strprintf(\"Stop running after reaching the given height in the main chain (default: %u)\", DEFAULT_STOPATHEIGHT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-limitancestorcount=<n>\", strprintf(\"Do not accept transactions if number of in-mempool ancestors is <n> or more (default: %u)\", DEFAULT_ANCESTOR_LIMIT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);"
      },
      {
        "sha": "0dfb8e1344695c1696e79e78dfdb1336d633a5fe",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/176325a5a47befe32d480b3dc206dd0e64e04b21/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/176325a5a47befe32d480b3dc206dd0e64e04b21/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=176325a5a47befe32d480b3dc206dd0e64e04b21",
        "patch": "@@ -2272,11 +2272,6 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n                                          const std::atomic<bool>& interruptMsgProc)\n {\n     LogPrint(BCLog::NET, \"received: %s (%u bytes) peer=%d\\n\", SanitizeString(msg_type), vRecv.size(), pfrom.GetId());\n-    if (gArgs.IsArgSet(\"-dropmessagestest\") && GetRand(gArgs.GetArg(\"-dropmessagestest\", 0)) == 0)\n-    {\n-        LogPrintf(\"dropmessagestest DROPPING RECV MESSAGE\\n\");\n-        return;\n-    }\n \n     PeerRef peer = GetPeerRef(pfrom.GetId());\n     if (peer == nullptr) return;"
      }
    ]
  }
]