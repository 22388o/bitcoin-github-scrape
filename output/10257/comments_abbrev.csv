laanwj,2017-04-25T11:32:23Z,"It's good to have a test for `getmemoryinfo`, but I'm not sure we should hardcode 32 bytes per key in the test. It should be acceptable for the wallet implementation to vary this, there's no reason to force a certain allocation policy.\n\nI guess a requirement ""at least 32 bytes of locked memory should be allocated per key"" would do? Then check at the end versus the beginning, and not so much wh",https://github.com/bitcoin/bitcoin/pull/10257#issuecomment-297001529,297001529,
jimmysong,2017-04-25T14:31:52Z,Made changes per @laanwj and squashed.,https://github.com/bitcoin/bitcoin/pull/10257#issuecomment-297049125,297049125,
laanwj,2017-04-25T14:53:24Z,"Thanks!\nutACK https://github.com/bitcoin/bitcoin/pull/10257/commits/32eb3e7eb9cf9b242ec0dc097332e2210d86e0a6",https://github.com/bitcoin/bitcoin/pull/10257#issuecomment-297056161,297056161,
paveljanik,2017-04-28T17:24:41Z,ACK https://github.com/bitcoin/bitcoin/pull/10257/commits/32eb3e7eb9cf9b242ec0dc097332e2210d86e0a6,https://github.com/bitcoin/bitcoin/pull/10257#issuecomment-298057605,298057605,
jnewbery,2017-04-28T19:35:20Z,"I'm on the fence about this. It's good to increase code coverage and exercise a new RPC, but I'm not sure this is the best way to go about this. getmemoryinfo isn't obviously linked to wallet functionality, so I don't think it naturally lives in the wallet.py test. In this case it probably makes more sense to create a new test (perhaps also exercising the other RPCs in misc.cpp).\n\nAnother conc",https://github.com/bitcoin/bitcoin/pull/10257#issuecomment-298087874,298087874,
jimmysong,2017-04-28T19:53:54Z,"@jnewbery I can write a separate test, but the only way to make getmemoryinfo change is via usage of private keys which can only happen by spending coins from the wallet. In my mind, that doesn't seem to warrant a separate test. Maybe I'm missing something about how this RPC call works? Or if there's some other way to test this information, I'm open to ideas.",https://github.com/bitcoin/bitcoin/pull/10257#issuecomment-298091730,298091730,
jnewbery,2017-04-28T20:11:14Z,"Really this just me being overly picky. I think a test script should have a clearly defined objective (eg ""this is the wallet test - it tests functions a user might want to use the wallet for""). Adding random one line tests to the script dilutes that objective.\n\nTo be honest, it's not really an issue. If we add any more tests for getmemoryinfo in future, I think they should be separated off in",https://github.com/bitcoin/bitcoin/pull/10257#issuecomment-298095348,298095348,
jimmysong,2017-05-09T21:49:11Z,Rebased and ready. Thanks @MarcoFalke ,https://github.com/bitcoin/bitcoin/pull/10257#issuecomment-300311980,300311980,
paveljanik,2017-05-15T14:50:24Z,reACK https://github.com/bitcoin/bitcoin/pull/10257/commits/d4668f35ab230083e39ab05857ccae4fe77dcb50,https://github.com/bitcoin/bitcoin/pull/10257#issuecomment-301498966,301498966,
paveljanik,2017-04-25T16:39:04Z,"How does 64 below correspond to 32 bytes here?\n",https://github.com/bitcoin/bitcoin/pull/10257#discussion_r113247791,113247791,test/functional/wallet.py
paveljanik,2017-04-25T16:39:29Z,Two `getnewaddress`/`sendtoaddress` calls?,https://github.com/bitcoin/bitcoin/pull/10257#discussion_r113247909,113247909,test/functional/wallet.py
jimmysong,2017-04-25T17:00:34Z,"Yes, two transactions get signed.",https://github.com/bitcoin/bitcoin/pull/10257#discussion_r113252969,113252969,test/functional/wallet.py
paveljanik,2017-04-25T17:03:35Z,"OK, but where is it guaranteed that [locked][used] is not re-used or freed after use? You test some other internal implementation behaviour here, not `getmemoryinfo`.\n",https://github.com/bitcoin/bitcoin/pull/10257#discussion_r113253662,113253662,test/functional/wallet.py
jimmysong,2017-04-25T17:08:51Z,"Good question. @laanwj, are there any guarantees to `getmemoryinfo` that can be tested? I was under the impression that the locked memory is only used for private keys and thus is really only reserved for wallet. But how do we know it won't get freed?",https://github.com/bitcoin/bitcoin/pull/10257#discussion_r113254907,113254907,test/functional/wallet.py
laanwj,2017-04-27T14:00:32Z,"Wallet keys are never freed (until shutdown), so this should be OK.",https://github.com/bitcoin/bitcoin/pull/10257#discussion_r113702751,113702751,test/functional/wallet.py
