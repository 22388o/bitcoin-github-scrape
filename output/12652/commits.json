[
  {
    "sha": "de04fde534997f15235ded46912806d47c615c23",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZTA0ZmRlNTM0OTk3ZjE1MjM1ZGVkNDY5MTI4MDZkNDdjNjE1YzIz",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-03-09T05:09:57Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-03-09T13:55:44Z"
      },
      "message": "bitcoin-cli: Provide a better error message when bitcoind is not running\n\nBefore this patch:\n\n```\n$ bitcoin-cli -testnet echo 'hello world'\nerror: Could not locate RPC credentials. No authentication cookie could be found, and RPC password is not set.  See -rpcpassword and -stdinrpcpass.  Configuration file: (/root/.bitcoin/bitcoin.conf)\n```\n\nAfter this patch:\n\n```\n$ bitcoin-cli -testnet echo 'hello world'\nerror: Could not connect to the server 127.0.0.1:18332\n\nMake sure the bitcoind server is running and that you are connecting to the correct RPC port.\n```",
      "tree": {
        "sha": "bf288d8d9e171d07436a30d09fe862cf201f5e06",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf288d8d9e171d07436a30d09fe862cf201f5e06"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de04fde534997f15235ded46912806d47c615c23",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de04fde534997f15235ded46912806d47c615c23",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/de04fde534997f15235ded46912806d47c615c23",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de04fde534997f15235ded46912806d47c615c23/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29fad97c320c892ab6a480c81e2078ec22ab354b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29fad97c320c892ab6a480c81e2078ec22ab354b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29fad97c320c892ab6a480c81e2078ec22ab354b"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 19,
      "deletions": 11
    },
    "files": [
      {
        "sha": "8bdc2109976888285e6edf1b8caf4b0219e42ebe",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 9,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de04fde534997f15235ded46912806d47c615c23/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de04fde534997f15235ded46912806d47c615c23/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=de04fde534997f15235ded46912806d47c615c23",
        "patch": "@@ -313,13 +313,11 @@ static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, co\n \n     // Get credentials\n     std::string strRPCUserColonPass;\n+    bool failedToGetAuthCookie = false;\n     if (gArgs.GetArg(\"-rpcpassword\", \"\") == \"\") {\n         // Try fall back to cookie-based authentication if no password is provided\n         if (!GetAuthCookie(&strRPCUserColonPass)) {\n-            throw std::runtime_error(strprintf(\n-                _(\"Could not locate RPC credentials. No authentication cookie could be found, and RPC password is not set.  See -rpcpassword and -stdinrpcpass.  Configuration file: (%s)\"),\n-                    GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME)).string().c_str()));\n-\n+            failedToGetAuthCookie = true;\n         }\n     } else {\n         strRPCUserColonPass = gArgs.GetArg(\"-rpcuser\", \"\") + \":\" + gArgs.GetArg(\"-rpcpassword\", \"\");\n@@ -358,11 +356,21 @@ static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, co\n \n     event_base_dispatch(base.get());\n \n-    if (response.status == 0)\n-        throw CConnectionFailed(strprintf(\"couldn't connect to server: %s (code %d)\\n(make sure server is running and you are connecting to the correct RPC port)\", http_errorstring(response.error), response.error));\n-    else if (response.status == HTTP_UNAUTHORIZED)\n-        throw std::runtime_error(\"incorrect rpcuser or rpcpassword (authorization failed)\");\n-    else if (response.status >= 400 && response.status != HTTP_BAD_REQUEST && response.status != HTTP_NOT_FOUND && response.status != HTTP_INTERNAL_SERVER_ERROR)\n+    if (response.status == 0) {\n+        std::string responseErrorMessage;\n+        if (response.error != -1) {\n+            responseErrorMessage = strprintf(\" (error code %d - \\\"%s\\\")\", response.error, http_errorstring(response.error));\n+        }\n+        throw CConnectionFailed(strprintf(\"Could not connect to the server %s:%d%s\\n\\nMake sure the bitcoind server is running and that you are connecting to the correct RPC port.\", host, port, responseErrorMessage));\n+    } else if (response.status == HTTP_UNAUTHORIZED) {\n+        if (failedToGetAuthCookie) {\n+            throw std::runtime_error(strprintf(\n+                _(\"Could not locate RPC credentials. No authentication cookie could be found, and RPC password is not set.  See -rpcpassword and -stdinrpcpass.  Configuration file: (%s)\"),\n+                GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME)).string().c_str()));\n+        } else {\n+            throw std::runtime_error(\"Authorization failed: Incorrect rpcuser or rpcpassword\");\n+        }\n+    } else if (response.status >= 400 && response.status != HTTP_BAD_REQUEST && response.status != HTTP_NOT_FOUND && response.status != HTTP_INTERNAL_SERVER_ERROR)\n         throw std::runtime_error(strprintf(\"server returned HTTP error %d\", response.status));\n     else if (response.body.empty())\n         throw std::runtime_error(\"no response from server\");"
      },
      {
        "sha": "a349e23791a45166a834a2337c03129854714316",
        "filename": "test/functional/interface_bitcoin_cli.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de04fde534997f15235ded46912806d47c615c23/test/functional/interface_bitcoin_cli.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de04fde534997f15235ded46912806d47c615c23/test/functional/interface_bitcoin_cli.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_bitcoin_cli.py?ref=de04fde534997f15235ded46912806d47c615c23",
        "patch": "@@ -29,11 +29,11 @@ def run_test(self):\n \n         self.log.info(\"Test -stdinrpcpass option\")\n         assert_equal(0, self.nodes[0].cli('-rpcuser=%s' % user, '-stdinrpcpass', input=password).getblockcount())\n-        assert_raises_process_error(1, \"incorrect rpcuser or rpcpassword\", self.nodes[0].cli('-rpcuser=%s' % user, '-stdinrpcpass', input=\"foo\").echo)\n+        assert_raises_process_error(1, \"Incorrect rpcuser or rpcpassword\", self.nodes[0].cli('-rpcuser=%s' % user, '-stdinrpcpass', input=\"foo\").echo)\n \n         self.log.info(\"Test -stdin and -stdinrpcpass\")\n         assert_equal([\"foo\", \"bar\"], self.nodes[0].cli('-rpcuser=%s' % user, '-stdin', '-stdinrpcpass', input=password + \"\\nfoo\\nbar\").echo())\n-        assert_raises_process_error(1, \"incorrect rpcuser or rpcpassword\", self.nodes[0].cli('-rpcuser=%s' % user, '-stdin', '-stdinrpcpass', input=\"foo\").echo)\n+        assert_raises_process_error(1, \"Incorrect rpcuser or rpcpassword\", self.nodes[0].cli('-rpcuser=%s' % user, '-stdin', '-stdinrpcpass', input=\"foo\").echo)\n \n         self.log.info(\"Make sure that -getinfo with arguments fails\")\n         assert_raises_process_error(1, \"-getinfo takes no arguments\", self.nodes[0].cli('-getinfo').help)"
      }
    ]
  },
  {
    "sha": "a2b2476e96b34cba2e413bb099bcef5e4165b29a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMmIyNDc2ZTk2YjM0Y2JhMmU0MTNiYjA5OWJjZWY1ZTQxNjViMjlh",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-03-19T21:26:38Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-03-19T21:44:43Z"
      },
      "message": "tests: Test connecting to a non-existing server",
      "tree": {
        "sha": "2870719f7cfdab436679335667d350987fe67d52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2870719f7cfdab436679335667d350987fe67d52"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a2b2476e96b34cba2e413bb099bcef5e4165b29a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2b2476e96b34cba2e413bb099bcef5e4165b29a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a2b2476e96b34cba2e413bb099bcef5e4165b29a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2b2476e96b34cba2e413bb099bcef5e4165b29a/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "de04fde534997f15235ded46912806d47c615c23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de04fde534997f15235ded46912806d47c615c23",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/de04fde534997f15235ded46912806d47c615c23"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f48874274d4a2c33ae8cb8e88decc4e5bd2ff0b8",
        "filename": "test/functional/interface_bitcoin_cli.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a2b2476e96b34cba2e413bb099bcef5e4165b29a/test/functional/interface_bitcoin_cli.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a2b2476e96b34cba2e413bb099bcef5e4165b29a/test/functional/interface_bitcoin_cli.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_bitcoin_cli.py?ref=a2b2476e96b34cba2e413bb099bcef5e4165b29a",
        "patch": "@@ -35,6 +35,9 @@ def run_test(self):\n         assert_equal([\"foo\", \"bar\"], self.nodes[0].cli('-rpcuser=%s' % user, '-stdin', '-stdinrpcpass', input=password + \"\\nfoo\\nbar\").echo())\n         assert_raises_process_error(1, \"Incorrect rpcuser or rpcpassword\", self.nodes[0].cli('-rpcuser=%s' % user, '-stdin', '-stdinrpcpass', input=\"foo\").echo)\n \n+        self.log.info(\"Test connecting to a non-existing server\")\n+        assert_raises_process_error(1, \"Could not connect to the server\", self.nodes[0].cli('-rpcport=1').echo)\n+\n         self.log.info(\"Make sure that -getinfo with arguments fails\")\n         assert_raises_process_error(1, \"-getinfo takes no arguments\", self.nodes[0].cli('-getinfo').help)\n "
      }
    ]
  },
  {
    "sha": "8b2ef27ff9be20fc1a53d8804b403859251f1fca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjJlZjI3ZmY5YmUyMGZjMWE1M2Q4ODA0YjQwMzg1OTI1MWYxZmNh",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-03-19T21:41:52Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-03-19T21:44:43Z"
      },
      "message": "tests: Test connecting with non-existing RPC cookie file",
      "tree": {
        "sha": "bc3ab6df5f1074480b1669e46a2ac7befcd84f99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc3ab6df5f1074480b1669e46a2ac7befcd84f99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b2ef27ff9be20fc1a53d8804b403859251f1fca",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b2ef27ff9be20fc1a53d8804b403859251f1fca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b2ef27ff9be20fc1a53d8804b403859251f1fca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b2ef27ff9be20fc1a53d8804b403859251f1fca/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a2b2476e96b34cba2e413bb099bcef5e4165b29a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2b2476e96b34cba2e413bb099bcef5e4165b29a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a2b2476e96b34cba2e413bb099bcef5e4165b29a"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e29fdc84e7bb3dd140bdaa4a40eee7b7da19aafd",
        "filename": "test/functional/interface_bitcoin_cli.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b2ef27ff9be20fc1a53d8804b403859251f1fca/test/functional/interface_bitcoin_cli.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b2ef27ff9be20fc1a53d8804b403859251f1fca/test/functional/interface_bitcoin_cli.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_bitcoin_cli.py?ref=8b2ef27ff9be20fc1a53d8804b403859251f1fca",
        "patch": "@@ -38,6 +38,9 @@ def run_test(self):\n         self.log.info(\"Test connecting to a non-existing server\")\n         assert_raises_process_error(1, \"Could not connect to the server\", self.nodes[0].cli('-rpcport=1').echo)\n \n+        self.log.info(\"Test connecting with non-existing RPC cookie file\")\n+        assert_raises_process_error(1, \"Could not locate RPC credentials\", self.nodes[0].cli('-rpccookiefile=does-not-exist', '-rpcpassword=').echo)\n+\n         self.log.info(\"Make sure that -getinfo with arguments fails\")\n         assert_raises_process_error(1, \"-getinfo takes no arguments\", self.nodes[0].cli('-getinfo').help)\n "
      }
    ]
  }
]