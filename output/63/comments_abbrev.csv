jgarzik,2011-02-13T07:03:31Z,"I understand the motivation, but this seems contrary to satoshi's original intent.  Recommend deferring this for a year or three :)\n",https://github.com/bitcoin/bitcoin/pull/63#issuecomment-767128,767128,
cdecker,2011-02-13T09:21:45Z,"And what would the motivation be? It would allow others to be compatible with the mainline client, without having to create a new version each time the mainline is updated, just to ensure compatibility? It won't be the last change conflicting with Satoshi's original intents.\n",https://github.com/bitcoin/bitcoin/pull/63#issuecomment-767223,767223,
jhyslop,2011-03-06T06:47:27Z,I second cdecker's question - what is satoshi's original intent? Is his intent that there shall be One True Client?\n,https://github.com/bitcoin/bitcoin/pull/63#issuecomment-839229,839229,
TheBlueMatt,2011-03-09T19:31:40Z,"Satoshi was clearly brilliant, but that doesn't mean we have to follow his original intent religiously.  I think this is a good idea, especially as we move towards more clients in more languages, on more devices.\n",https://github.com/bitcoin/bitcoin/pull/63#issuecomment-853049,853049,
jgarzik,2011-03-09T19:51:49Z,"I agree with the intent -- differentiate client & proto version -- but not the implementation in this pull request.\n\nAnd in general, the current protocol does permit some flag-based extensibility beyond simple protocol versioning.  We could simply freeze the as-exported proto version, and add flags where necessary to indicate new feature[set]s.\n",https://github.com/bitcoin/bitcoin/pull/63#issuecomment-853125,853125,
jhyslop,2011-03-12T16:48:25Z,Can you elaborate on the flags? I don't think I've come across the code you're talking about.\n,https://github.com/bitcoin/bitcoin/pull/63#issuecomment-863899,863899,
cdecker,2011-03-12T17:31:47Z,"Just to respond to the criticism on the patch. I myself found it strange to ask for a patch for a thing that isn't solvable with a patch, but I was asked to do it. It is not difficult to add protocol extensibility, as discussed on the Forum, it just needs either a new message (capabilities?) or an extension to the version message (variable list of strings each denoting capability support). But it'",https://github.com/bitcoin/bitcoin/pull/63#issuecomment-863971,863971,
jgarzik,2011-03-12T18:18:27Z,"The ""nServices"" bitmask is sent with each version message, at the beginning of each TCP connection between two P2P nodes.\n",https://github.com/bitcoin/bitcoin/pull/63#issuecomment-864056,864056,
cdecker,2011-03-12T19:48:42Z,"True, I had forgotten about the nServices bitmask, my bad. I have a few criticisms about that too, but I'll create a new Forum thread for them, since this is only to decouple protocol versioning from client versioning. Estensibility should be left for a broader discussion.\n",https://github.com/bitcoin/bitcoin/pull/63#issuecomment-864193,864193,
jgarzik,2011-03-12T20:08:32Z,"The two issues are coupled, as I indicated in my original reply.\n",https://github.com/bitcoin/bitcoin/pull/63#issuecomment-864225,864225,
cdecker,2011-03-12T21:56:04Z,"Ok, I think we aren't thinking about the same kind of extensibility. My goal basically is to have a minimal protocol that is standardized (let's say the current protocol), it is simple and easy to understand. The protocol version should indicate that if a client supports the protocol version it'll understand the messages that are going to be sent. Where up until now the protocol version was being ",https://github.com/bitcoin/bitcoin/pull/63#issuecomment-864497,864497,
cdecker,2011-03-12T22:24:46Z,"Anyway, to get back on track with this pull request: jgarzik, if I understand you correctly you agree with my point, right? Keeping the protocol version distinct from the client version allows us to differentiate the implementations and thus grow and secure the network. I don't care if this pull request makes it into the main trunk, as long as we alternative developers get a commitment from the ma",https://github.com/bitcoin/bitcoin/pull/63#issuecomment-864558,864558,
jgarzik,2011-03-12T22:34:26Z,"Alternative clients, nor mainline clients, have -never- had to release a dummy update, due to the current release scheme.  That's a red herring, and an invalid justification.  The network protocol has always been backwards compatible, even way back to ancient client versions.\n\nI understand the desire to separate the two versions, but beyond that point you're making up nonsensical justifications ",https://github.com/bitcoin/bitcoin/pull/63#issuecomment-864575,864575,
cdecker,2011-03-12T23:11:05Z,"Sorry you feel that way. I see that there is no point in continuing this conversation, consider the pull request withdrawn. Although I maintain that my points are still valid. You were the one who brought up extensibility, whereas I maintain that protocol evolution is different than protocol extension.\n\nThe need to separate protocol development from client development is felt by many of us, and ",https://github.com/bitcoin/bitcoin/pull/63#issuecomment-864657,864657,
jgarzik,2011-03-13T00:42:27Z,"To use an absurd example, it is trivial to see how we can create a flag ""use a totally different protocol.""  There is no limit to extensibility through flags.  We could simply freeze currently reported protocol version, while still incrementing client version.\n",https://github.com/bitcoin/bitcoin/pull/63#issuecomment-864823,864823,
bluecmd,2011-06-06T07:43:41Z,"I don't know if it is still possible to merge this but this is ridiculous that this has not been merged. As a developer for an alternative client I don't want to depend solely when the mainline add GUI features and calls that an update. ""Add flags""? I assume you meant software versioning flags and not the services flags. That will only hold for so long, I mean, you will end up with 0.3.12.32.1z an",https://github.com/bitcoin/bitcoin/pull/63#issuecomment-1307605,1307605,
ferrouswheel,2011-06-06T10:24:25Z,I would like to see this issue addressed. As someone starting another Bitcoin client it concerns me greatly that the core Bitcoin client is trying to monopolise what should be decentralised currency. How are we supposed to differentiate between protocol version and client? A client shouldn't be the protocol and forcing it to be the same thing is a silly coupling.\n\nblueCommand also makes a good p,https://github.com/bitcoin/bitcoin/pull/63#issuecomment-1308334,1308334,
cdecker,2011-06-06T14:24:45Z,"As original author of the issue it is in my interest to have it adressed, but I have to correct a small misunderstanding: the flags are a good way to identify capabilities as jgarzik pointed out. It is a bitfield in the version message which allows boolean announcements about the capabilities of the client.\nMy main point is to freeze the protocol version increment and use the version string to id",https://github.com/bitcoin/bitcoin/pull/63#issuecomment-1309470,1309470,
davout,2011-06-07T13:11:10Z,+1\n,https://github.com/bitcoin/bitcoin/pull/63#issuecomment-1315584,1315584,
