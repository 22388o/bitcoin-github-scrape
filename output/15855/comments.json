[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484968085",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15855#issuecomment-484968085",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15855",
    "id": 484968085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDk2ODA4NQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-19T17:43:09Z",
    "updated_at": "2019-05-13T15:10:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15931](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15931.html) (Remove GetDepthInMainChain dependency on locked chain interface by ariard)\n* [#15921](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15921.html) (Tidy up ValidationState interface by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484968085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485413943",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15855#issuecomment-485413943",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15855",
    "id": 485413943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTQxMzk0Mw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-22T13:08:55Z",
    "updated_at": "2019-04-22T13:08:55Z",
    "author_association": "MEMBER",
    "body": "Addressed feedback by @promag ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485413943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490153673",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15855#issuecomment-490153673",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15855",
    "id": 490153673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDE1MzY3Mw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-07T16:30:36Z",
    "updated_at": "2019-05-07T16:30:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490153673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/491860599",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15855#issuecomment-491860599",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15855",
    "id": 491860599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTg2MDU5OQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T15:04:24Z",
    "updated_at": "2019-05-13T15:04:24Z",
    "author_association": "MEMBER",
    "body": "utACK face05a080c081fc426ff34ecb39ac072710034b.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/491860599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/491935276",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15855#issuecomment-491935276",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15855",
    "id": 491935276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTkzNTI3Ng==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T18:30:31Z",
    "updated_at": "2019-05-13T18:33:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MarcoFalke The added comment makes it easier to understand for human reviewers. That is good, but I still think we would be better off if we used different annotations for the \"opt-out of analysis\" and \"give the compiler a locking guarantee when it fails to understand our code\" use cases:\r\n\r\nWhen analysing locks using static analysis etc I want to be able to let `LockAnnotation` imply the stronger \"`AssertLockHeld(\u2026)`\" (instead of the weaker `NO_THREAD_SAFETY_ANALYSIS`).\r\n\r\nThis change breaks that implication.\r\n\r\nPerhaps `--enable-debug` builds should do `AssertLockHeld(\u2026)` as part of the `LockAnnotation`ctor  to make sure the `LockAnnotation` guarantees hold up over time? The opt-out variant shouldn't have that (obviously) :-)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/491935276/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/491940936",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15855#issuecomment-491940936",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15855",
    "id": 491940936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTk0MDkzNg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-13T18:47:31Z",
    "updated_at": "2019-05-13T18:47:31Z",
    "author_association": "MEMBER",
    "body": "> Perhaps --enable-debug builds should do AssertLockHeld(\u2026) as part of the LockAnnotationctor to make sure the LockAnnotation guarantees hold up over time\r\n\r\nSounds good. I have addressed your concerns, but this suggestion should go into a follow-up pull request?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/491940936/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/492083466",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15855#issuecomment-492083466",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15855",
    "id": 492083466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjA4MzQ2Ng==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-14T05:25:09Z",
    "updated_at": "2019-05-14T05:25:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK fa3c6511435149782545ac0d09d4722dc115d709",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/492083466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277184092",
    "pull_request_review_id": 228929315,
    "id": 277184092,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzE4NDA5Mg==",
    "diff_hunk": "@@ -245,9 +246,11 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n BOOST_FIXTURE_TEST_CASE(coin_mark_dirty_immature_credit, TestChain100Setup)\n {\n     auto chain = interfaces::MakeChain();\n+    LockAnnotation lock(::cs_main);\n+    auto locked_chain = chain->lock();",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": null,
    "original_position": 59,
    "commit_id": "fa3c6511435149782545ac0d09d4722dc115d709",
    "original_commit_id": "fa90b1a2e1c9d51848c0e1b0a92e14c04a87c746",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why was this moved?",
    "created_at": "2019-04-21T22:50:03Z",
    "updated_at": "2019-05-13T18:47:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r277184092",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277184092"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r277184092"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277184092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 250,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277184156",
    "pull_request_review_id": 228929315,
    "id": 277184156,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NzE4NDE1Ng==",
    "diff_hunk": "@@ -66,29 +66,41 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)\n \n     // Test 1: block with both of those transactions should be rejected.\n     block = CreateAndProcessBlock(spends, scriptPubKey);\n-    BOOST_CHECK(chainActive.Tip()->GetBlockHash() != block.GetHash());\n+    {\n+        LOCK(cs_main);\n+        BOOST_CHECK(chainActive.Tip()->GetBlockHash() != block.GetHash());\n+    }\n \n     // Test 2: ... and should be rejected if spend1 is in the memory pool\n     BOOST_CHECK(ToMemPool(spends[0]));\n     block = CreateAndProcessBlock(spends, scriptPubKey);\n-    BOOST_CHECK(chainActive.Tip()->GetBlockHash() != block.GetHash());\n-    mempool.clear();\n+    {\n+        LOCK(cs_main);\n+        BOOST_CHECK(chainActive.Tip()->GetBlockHash() != block.GetHash());\n+        mempool.clear();",
    "path": "src/test/txvalidationcache_tests.cpp",
    "position": null,
    "original_position": 44,
    "commit_id": "fa3c6511435149782545ac0d09d4722dc115d709",
    "original_commit_id": "fa90b1a2e1c9d51848c0e1b0a92e14c04a87c746",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This gives the bad impression `cs_main` is necessary.",
    "created_at": "2019-04-21T22:52:34Z",
    "updated_at": "2019-05-13T18:47:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r277184156",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277184156"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r277184156"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/277184156/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 80,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283437966",
    "pull_request_review_id": 236795346,
    "id": 283437966,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzQzNzk2Ng==",
    "diff_hunk": "@@ -37,14 +37,14 @@ static void AddKey(CWallet& wallet, const CKey& key)\n BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n {\n     auto chain = interfaces::MakeChain();\n+    LockAnnotation lock(::cs_main);",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "fa3c6511435149782545ac0d09d4722dc115d709",
    "original_commit_id": "face05a080c081fc426ff34ecb39ac072710034b",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I might be missing something but shouldn't `LockAnnotation` be used only when we are holding the mutex but the compiler thread analysis doesn't understand it? In this case we aren't holding `cs_main` here, right?\r\n\r\nIf it is used simply to opt-out of thread-safety analysis (when we are not holding the mutex) then `NO_THREAD_SAFETY_ANALYSIS` should be used, no?",
    "created_at": "2019-05-13T16:47:25Z",
    "updated_at": "2019-05-13T18:47:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r283437966",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283437966"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r283437966"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283437966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 40,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283439664",
    "pull_request_review_id": 236797543,
    "id": 283439664,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzQzOTY2NA==",
    "diff_hunk": "@@ -37,14 +37,14 @@ static void AddKey(CWallet& wallet, const CKey& key)\n BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n {\n     auto chain = interfaces::MakeChain();\n+    LockAnnotation lock(::cs_main);",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "fa3c6511435149782545ac0d09d4722dc115d709",
    "original_commit_id": "face05a080c081fc426ff34ecb39ac072710034b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The tests are single threaded, so taking a lock is equivalent to pretending it is taken.\r\n\r\nNot sure how I can use `NO_THREAD_SAFETY_ANALYSIS` to achieve that.",
    "created_at": "2019-05-13T16:51:48Z",
    "updated_at": "2019-05-13T18:47:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r283439664",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283439664"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r283439664"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283439664/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 40,
    "side": "RIGHT",
    "in_reply_to_id": 283437966
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283444423",
    "pull_request_review_id": 236803640,
    "id": 283444423,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzQ0NDQyMw==",
    "diff_hunk": "@@ -37,14 +37,14 @@ static void AddKey(CWallet& wallet, const CKey& key)\n BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n {\n     auto chain = interfaces::MakeChain();\n+    LockAnnotation lock(::cs_main);",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "fa3c6511435149782545ac0d09d4722dc115d709",
    "original_commit_id": "face05a080c081fc426ff34ecb39ac072710034b",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, I know the tests are single-threaded but I think it might be confusing for newcomers if we use `LockAnnotation` to both a.) guarantee to the compiler that the lock is taken (like in `src/interfaces/chain.cpp`), and b.) to opt-out of thread safety analysis when the lock is not taken (like in this file).\r\n\r\nJust to make it crystal clear to readers what we are doing we could use different names for these two use-cases? (If using `NO_THREAD_SAFETY_ANALYSIS` is not an option.)\r\n\r\nSomething like `struct SCOPED_LOCKABLE DisableThreadSafetyAnalysis` (like `LockAnnotation`) or `#define DISABLE_THREAD_SAFETY_ANALYSIS(cs, code) [&] NO_THREAD_SAFETY_ANALYSIS { code; }()` (like `WITH_LOCK`)?",
    "created_at": "2019-05-13T17:04:04Z",
    "updated_at": "2019-05-13T18:47:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r283444423",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283444423"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r283444423"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283444423/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 40,
    "side": "RIGHT",
    "in_reply_to_id": 283437966
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283455523",
    "pull_request_review_id": 236817736,
    "id": 283455523,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzQ1NTUyMw==",
    "diff_hunk": "@@ -37,14 +37,14 @@ static void AddKey(CWallet& wallet, const CKey& key)\n BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n {\n     auto chain = interfaces::MakeChain();\n+    LockAnnotation lock(::cs_main);",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "fa3c6511435149782545ac0d09d4722dc115d709",
    "original_commit_id": "face05a080c081fc426ff34ecb39ac072710034b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added a comment instead. Is that fine?",
    "created_at": "2019-05-13T17:33:32Z",
    "updated_at": "2019-05-13T18:47:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r283455523",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283455523"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15855#discussion_r283455523"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15855"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283455523/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 40,
    "side": "RIGHT",
    "in_reply_to_id": 283437966
  }
]