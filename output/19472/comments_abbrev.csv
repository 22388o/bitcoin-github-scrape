DrahtBot,2020-07-08 23:32:06,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19316 ([net] Cleanup logic around connection types by amitiuttarwar)\n\nIf you consider this pull request important, plea",https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-655810542,655810542,
jnewbery,2020-07-09 14:28:50,Thanks for the review @promag . I've addressed your comments.,https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-656161599,656161599,
jnewbery,2020-07-10 12:50:46,"Thanks for the review @jonatack. I've addressed your inline comments. For your commit log comments:\n\n> Commit message in f54af5e: If we don't disconnect a peer in MaybeDiscourageAndDisconnect because it has NOBAN permissions or it's a manual connection, continue SendMessages processing rather than exiting early -> Was this a bit of a bug?\n\nNot a bug, but inefficient and confusing. I've upd",https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-656659501,656659501,
jnewbery,2020-07-10 16:30:07,rebased,https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-656766880,656766880,
jonatack,2020-07-11 06:10:38,re-ACK a37331f per `git range-diff 505b4ed f54af5e a37331f`,https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-656998334,656998334,
jonatack,2020-07-11 06:45:47,"re-ACK 655b195 per `git range-diff 505b4ed f54af5e 655b195`, code/commit messages review, a bit of code history, and debug build.\n\nMaybe (only if you have to retouch again):\n```diff\n bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n {\n-    NodeId peer_id{pnode.GetId()};\n+    const NodeId peer_id{pnode.GetId()};\n```\n",https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-657003084,657003084,
jnewbery,2020-07-24 07:16:49,"Thanks for the review @MarcoFalke . Rather than invalidate the three ACKs on this branch, I've added a commit to the next branch that addresses your comments: https://github.com/jnewbery/bitcoin/tree/2020-07-tidy-misbehavior.\n\nI think this PR may be ready for merge soon.",https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-663381734,663381734,
jnewbery,2020-07-24 07:21:18,"@jonatack \n\n> Maybe (only if you have to retouch again):\n> \n> bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n> ...\n\nDone in follow-up: https://github.com/jnewbery/bitcoin/commits/2020-07-tidy-misbehavior",https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-663383199,663383199,
jnewbery,2020-07-24 15:48:11,Thanks for review everyone. The next PR is #19583 (including the suggested fixups by @jonatack and @MarcoFalke),https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-663604540,663604540,
theuni,2020-07-24 18:10:57,"I'm worried that we may end up spending a more significant amount of time in SendMessages now, whereas before it was opportunistic. Do you have any idea what the TRY_LOCK hit/miss ratio looked like for a busy node over a few days?\n\nI'd also be curious to know what the cpu usage/profile of a busy node looks like before/after this change.",https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-663666625,663666625,
jnewbery,2020-07-24 18:44:25,"Thanks for looking at this @theuni!\n\n> Do you have any idea what the TRY_LOCK hit/miss ratio looked like for a busy node over a few days?\n\nI don't know exactly but I'd expect it to be very high (ie we almost always take the lock). What other threads are you expecting to be holding cs_main on a regular basis?",https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-663680030,663680030,
MarcoFalke,2020-07-25 07:44:54,"I guess this depends on the use case and what other modules are used that might aggressively poll cs_main. (GUI, wallet, indices, RPC, ...)",https://github.com/bitcoin/bitcoin/pull/19472#issuecomment-663824176,663824176,
MarcoFalke,2020-07-09 09:53:10,"```\nnet_processing.cpp:3574:9: error: acquiring mutex 'cs_main' that is already held [-Werror,-Wthread-safety-analysis]\n\n        LOCK(cs_main);\n\n        ^",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452101343,452101343,src/net_processing.cpp
MarcoFalke,2020-07-09 09:55:34,You might have to use clang++ to reproduce locally,https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452102686,452102686,src/net_processing.cpp
jnewbery,2020-07-09 10:38:50,Ah. I didn't remove the lock annotation from the function declaration. Fixed.,https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452125782,452125782,src/net_processing.cpp
promag,2020-07-09 11:23:44,"edd1a8a5c76a15174985fe0a1a876eba9e7ee33c\n\nDo you have an idea why this wasn't in the top?",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452147247,452147247,src/net_processing.cpp
promag,2020-07-09 11:28:28,"37e7265796102df35ec83b53fe9114e07d214910\n\nMaybe drop these `else` since you early return on each block.",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452149662,452149662,src/net_processing.cpp
promag,2020-07-09 11:30:50,"37e7265796102df35ec83b53fe9114e07d214910\n\nnit, I only find this comment useful when the block is big enough.",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452150787,452150787,src/net_processing.cpp
promag,2020-07-09 11:31:54,"37e7265796102df35ec83b53fe9114e07d214910\n\nNo test for this right?",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452151279,452151279,src/net_processing.cpp
jonatack,2020-07-09 12:03:47,Saw this warning as well @ 5722b338d. Now building at 37e726579.,https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452166851,452166851,src/net_processing.cpp
jnewbery,2020-07-09 13:59:25,"Because it used to be `SendRejectsAndCheckIfBanned()`, and before that it was just sending rejects. Those required cs_main, which is taken after the ping processing at the top.\n\nI've added that explanation to the commit log.",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452238852,452238852,src/net_processing.cpp
jnewbery,2020-07-09 14:26:18,Agree. That's much clearer.,https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452258091,452258091,src/net_processing.cpp
jnewbery,2020-07-09 14:26:32,"That's fair, but I don't think it does any harm.",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452258263,452258263,src/net_processing.cpp
jnewbery,2020-07-09 14:28:28,It seems that feature_maxuploadtarget.py tests the `-noban` permission (by verifying that a peer stays connected after exceeding the banscore.,https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452259600,452259600,src/net_processing.cpp
jonatack,2020-07-09 16:29:56,"The whitespace linter needs appeasing, looks like extra whitespace in lines 3589 and 3595.\n```diff\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\n\n@@ -3573,16 +3582,18 @@ bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n\n+\n\n+\n\n^---- failure generated from test/lint/lint-whitespace.sh\n```\n(which won't prevent me from reviewing tomorrow am, s",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452343368,452343368,src/net_processing.cpp
dongcarl,2020-07-09 20:03:25,"What about something along the lines of ""True if the peer was marked for disconnection in this function""?",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452458981,452458981,src/net_processing.cpp
jnewbery,2020-07-09 20:20:02,Sure. Happy to make that change if I need to retouch this PR.,https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452467029,452467029,src/net_processing.cpp
jonatack,2020-07-10 11:08:57,"f54af5e nit suggestion while refactoring this function\n\n```diff\n@@ -3581,27 +3581,29 @@ bool PeerLogicValidation::MaybeDiscourageAndDisconnect(CNode& pnode)\n         state.m_should_discourage = false;\n     } // cs_main\n \n+    std::string peer{pnode.addr.ToString()};\n\n-        LogPrintf(""Warning: not punishing whitelisted peer %s!\n"", pnode.addr.ToString());\n+        LogPrintf(""",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452778563,452778563,src/net_processing.cpp
jonatack,2020-07-10 11:10:22,"f54af5e58649d527d53990259f77892ad07f7ffa maybe log ""NOBAN|noban permission (flag)""\n```suggestion\n        LogPrintf(""Warning: not punishing peer with NOBAN permission %s!\n"", pnode.addr.ToString());\n```",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452779171,452779171,src/net_processing.cpp
jonatack,2020-07-10 11:21:42,"f54af5e58649d527d nit while touching this code, perhaps fix up the logging output: s/manually-connected/manually connected/",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452783772,452783772,src/net_processing.cpp
jonatack,2020-07-10 11:28:09,"Agree with @dongcarl. Maybe ""True if the peer is marked for disconnection in this function.""",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452786397,452786397,src/net_processing.cpp
jonatack,2020-07-10 11:45:13,"38c96ef in this commit that removes `MaybeDiscourageAndDisconnect()` from `ProcessMessages()`, future reviewers may appreciate a comment here in the remaining call to make the order dependency explicit.\n\ne.g. that `MaybeDiscourageAndDisconnect()` here depends on all misbehavior calls (currently `Misbehaving`) occurring in ProcessMessages which needs to remain called before SendMessages in `CCo",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452793191,452793191,src/net_processing.cpp
jnewbery,2020-07-10 12:28:09,Done (but called the variable `peer_name` since a future commit adds a `Peer` object to this function.,https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452811594,452811594,src/net_processing.cpp
jnewbery,2020-07-10 12:28:29,"I expect this PR will need to be rebased on #19474, so I've copied the log text from there.",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452811745,452811745,src/net_processing.cpp
jnewbery,2020-07-10 12:29:08,done,https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452811981,452811981,src/net_processing.cpp
jnewbery,2020-07-10 12:29:27,done,https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452812137,452812137,src/net_processing.cpp
jnewbery,2020-07-10 12:44:53,"`nMisbehavior` is a tally in `CNodeState` that can be incremented from anywhere. That almost always happens inside a `ProcessMessages()` call (because we increment the misbehavior score when receiving a bad messages from a peer), but not always. See, for example, the call to `MaybePunishNodeForBlock()` inside `BlockChecked()`, which is an asynchronous callback from the validation interface, execut",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r452819554,452819554,src/net_processing.cpp
MarcoFalke,2020-07-10 20:22:47,"I know this is unrelated, but is there any reason to not log the peer id? All other peer-related messages log the id, so logging the address+port makes it harder to relate this log to all other logs.",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453060447,453060447,src/net_processing.cpp
practicalswift,2020-07-10 21:18:00,"Also, isn't the general policy that we should try to avoid logging IP addresses (at least when the user is not opting in to detailed `-debug=net` logging)?\n\nFWIW: IP addresses are considered personal data in some jurisdictions (EU via GDPR?) IIRC.",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453081460,453081460,src/net_processing.cpp
jnewbery,2020-07-11 06:09:55,"We've been logging the peer address for node misbehavior since banning was introduced: https://github.com/bitcoin/bitcoin/commit/15f3ad4dbdf0d245b936e68c51a7ecb9f472d2cd#diff-9a82240fe7dfe86564178691cc57f2f1R757 , and these logs have probably just persisted all that time.\n\nI've changed this to log the peer id instead of the address.",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453161595,453161595,src/net_processing.cpp
jonatack,2020-07-11 06:28:13,"Thanks, @jnewbery, makes sense.\n\nThe previous behavior before this PR had me wondering if there were particular optimisation reasons for it, but I don't see any.",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453162915,453162915,src/net_processing.cpp
jonatack,2020-07-11 06:49:13,"Wow! -- banscore goes way back, TIL",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453164461,453164461,src/net_processing.cpp
MarcoFalke,2020-07-11 08:29:17,Thanks for fixing!,https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453172039,453172039,src/net_processing.cpp
MarcoFalke,2020-07-11 09:08:25,"style-nit in commit 655b195747:\n\nI don't like comments that repeat the source code like `pnode.addr.IsLocal() // Peer is on a local address`. Ideally source code should be self-documenting and in this case simply reading the condition and the logged format string should be sufficient to understand *what* is being done.\n\nHowever, a comment could make sense to explain *why* something is done",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453174970,453174970,src/net_processing.cpp
MarcoFalke,2020-07-11 09:10:12,"clang-format style-nit in commit 655b1957470c39bcab64917747c9f467444bd809\n\n```suggestion\n        CNodeState& state = *State(peer_id);\n```",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453175093,453175093,src/net_processing.cpp
MarcoFalke,2020-07-11 09:16:16,"Style-nit in commit body of c581cc16bb5e490c0960ccf440de2d1e5f23c417:\n\nInstead of a GitHub-branded `#1117`, which either needs online-access to GitHub or two local commands to show the referenced commit (`git log --grep='#1117 ' --merges`), what about simply saying `commit c581cc16bb`.\n\nSame for the other one, but since it has two commits, maybe the merge commit can be mentioned `commit 82",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r453175610,453175610,src/net_processing.cpp
jnewbery,2020-07-24 07:17:33,Done in a follow-up: https://github.com/jnewbery/bitcoin/commits/2020-07-tidy-misbehavior,https://github.com/bitcoin/bitcoin/pull/19472#discussion_r459888669,459888669,src/net_processing.cpp
jnewbery,2020-07-24 07:17:43,Done in a follow-up: https://github.com/jnewbery/bitcoin/commits/2020-07-tidy-misbehavior,https://github.com/bitcoin/bitcoin/pull/19472#discussion_r459888731,459888731,src/net_processing.cpp
jnewbery,2020-07-24 07:18:01,Thanks. Will refer directly to commit hashes in future.,https://github.com/bitcoin/bitcoin/pull/19472#discussion_r459888862,459888862,src/net_processing.cpp
ariard,2020-07-24 14:36:08,"For future work, do we still need `cs_sendProcessing` ? It only guards `m_next_addr_send/m_next_local_addr_send`, both of them only RW in `SendMessages`, inside `ThreadMessageHandler`. \n\nIs this a relic from the past or do you see another reason ?",https://github.com/bitcoin/bitcoin/pull/19472#discussion_r460092944,460092944,src/net_processing.cpp
jnewbery,2020-07-24 14:53:00,I've removed it from `m_next_addr_send` and `m_next_local_addr_send` in https://github.com/jnewbery/bitcoin/commits/2020-06-cs-main-split. It could theoretically also be removed from guarding `SendMessages()` since we only ever call that from the message handler thread.,https://github.com/bitcoin/bitcoin/pull/19472#discussion_r460103462,460103462,src/net_processing.cpp
