[
  {
    "sha": "98625502607dd9180ab6840b832dc89986d0b150",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODYyNTUwMjYwN2RkOTE4MGFiNjg0MGI4MzJkYzg5OTg2ZDBiMTUw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-07-31T17:44:01Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-07-31T17:44:01Z"
      },
      "message": "Use the noexcept specifier (C++11) instead of deprecated throw()",
      "tree": {
        "sha": "b2ad13123c4dc83d66fe20184e76a98c10cc2e06",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b2ad13123c4dc83d66fe20184e76a98c10cc2e06"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/98625502607dd9180ab6840b832dc89986d0b150",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98625502607dd9180ab6840b832dc89986d0b150",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/98625502607dd9180ab6840b832dc89986d0b150",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98625502607dd9180ab6840b832dc89986d0b150/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "42307c4bf363d695c68a65ba7cbf8d6790079abf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42307c4bf363d695c68a65ba7cbf8d6790079abf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42307c4bf363d695c68a65ba7cbf8d6790079abf"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "961dd422e0797487e8c49da50ecd167e5d2c6202",
        "filename": "src/support/allocators/secure.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98625502607dd9180ab6840b832dc89986d0b150/src/support/allocators/secure.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98625502607dd9180ab6840b832dc89986d0b150/src/support/allocators/secure.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/allocators/secure.h?ref=98625502607dd9180ab6840b832dc89986d0b150",
        "patch": "@@ -26,13 +26,13 @@ struct secure_allocator : public std::allocator<T> {\n     typedef typename base::reference reference;\n     typedef typename base::const_reference const_reference;\n     typedef typename base::value_type value_type;\n-    secure_allocator() throw() {}\n-    secure_allocator(const secure_allocator& a) throw() : base(a) {}\n+    secure_allocator() noexcept {}\n+    secure_allocator(const secure_allocator& a) noexcept : base(a) {}\n     template <typename U>\n-    secure_allocator(const secure_allocator<U>& a) throw() : base(a)\n+    secure_allocator(const secure_allocator<U>& a) noexcept : base(a)\n     {\n     }\n-    ~secure_allocator() throw() {}\n+    ~secure_allocator() noexcept {}\n     template <typename _Other>\n     struct rebind {\n         typedef secure_allocator<_Other> other;"
      },
      {
        "sha": "c740faf371dccb84c26139ffb2e06587902d6251",
        "filename": "src/support/allocators/zeroafterfree.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98625502607dd9180ab6840b832dc89986d0b150/src/support/allocators/zeroafterfree.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98625502607dd9180ab6840b832dc89986d0b150/src/support/allocators/zeroafterfree.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/allocators/zeroafterfree.h?ref=98625502607dd9180ab6840b832dc89986d0b150",
        "patch": "@@ -22,13 +22,13 @@ struct zero_after_free_allocator : public std::allocator<T> {\n     typedef typename base::reference reference;\n     typedef typename base::const_reference const_reference;\n     typedef typename base::value_type value_type;\n-    zero_after_free_allocator() throw() {}\n-    zero_after_free_allocator(const zero_after_free_allocator& a) throw() : base(a) {}\n+    zero_after_free_allocator() noexcept {}\n+    zero_after_free_allocator(const zero_after_free_allocator& a) noexcept : base(a) {}\n     template <typename U>\n-    zero_after_free_allocator(const zero_after_free_allocator<U>& a) throw() : base(a)\n+    zero_after_free_allocator(const zero_after_free_allocator<U>& a) noexcept : base(a)\n     {\n     }\n-    ~zero_after_free_allocator() throw() {}\n+    ~zero_after_free_allocator() noexcept {}\n     template <typename _Other>\n     struct rebind {\n         typedef zero_after_free_allocator<_Other> other;"
      }
    ]
  }
]