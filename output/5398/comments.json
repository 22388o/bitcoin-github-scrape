[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65065787",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5398#issuecomment-65065787",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5398",
    "id": 65065787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDY1Nzg3",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T13:43:31Z",
    "updated_at": "2014-12-01T13:43:31Z",
    "author_association": "MEMBER",
    "body": "Don't care strongly, but untested ACK. It makes more sense to mimick GBT here than wallet RPCs.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65065787/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65066714",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5398#issuecomment-65066714",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5398",
    "id": 65066714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDY2NzE0",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T13:51:16Z",
    "updated_at": "2014-12-01T13:52:18Z",
    "author_association": "MEMBER",
    "body": "utACK, I hate flip-flopping code and this makes the interface seeming less consistent, but currently the RPC call doesn't even work (as AmountFromValue doesn't accept negative values).\nCan you add a comment that satoshis are to be used in mining-related RPCs to avoid that someone changes this back yet again?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/65066714/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21932942",
    "pull_request_review_id": null,
    "id": 21932942,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTMyOTQy",
    "diff_hunk": "@@ -277,22 +278,20 @@ Value prioritisetransaction(const Array& params, bool fHelp)\n             \"2. priority delta (numeric, required) The priority to add or subtract.\\n\"\n             \"                  The transaction selection algorithm considers the tx as it would have a higher priority.\\n\"\n             \"                  (priority of a transaction is calculated: coinage * value_in_satoshis / txsize) \\n\"\n-            \"3. fee delta      (numeric, required) The absolute fee value to add or subtract in bitcoin.\\n\"\n+            \"3. fee delta      (numeric, required) The fee value (in satoshis) to add (or subtract, if negative).\\n\"\n             \"                  The fee is not actually paid, only the algorithm for selecting transactions into a block\\n\"\n             \"                  considers the transaction as it would have paid a higher (or lower) fee.\\n\"\n             \"\\nResult\\n\"\n             \"true              (boolean) Returns true\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"prioritisetransaction\", \"\\\"txid\\\" 0.0 0.00010000\")\n-            + HelpExampleRpc(\"prioritisetransaction\", \"\\\"txid\\\", 0.0, 0.00010000\")\n+            + HelpExampleCli(\"prioritisetransaction\", \"\\\"txid\\\" 0.0 10000\")\n+            + HelpExampleRpc(\"prioritisetransaction\", \"\\\"txid\\\", 0.0, 10000\")\n         );\n \n     uint256 hash;\n     hash.SetHex(params[0].get_str());\n ",
    "path": "src/rpcmining.cpp",
    "position": 27,
    "original_position": 27,
    "commit_id": "8a20cd3c516c1134905d943861d506213e33e90e",
    "original_commit_id": "8a20cd3c516c1134905d943861d506213e33e90e",
    "user": {
      "login": "SergioDemianLerner",
      "id": 1752347,
      "node_id": "MDQ6VXNlcjE3NTIzNDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1752347?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SergioDemianLerner",
      "html_url": "https://github.com/SergioDemianLerner",
      "followers_url": "https://api.github.com/users/SergioDemianLerner/followers",
      "following_url": "https://api.github.com/users/SergioDemianLerner/following{/other_user}",
      "gists_url": "https://api.github.com/users/SergioDemianLerner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SergioDemianLerner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SergioDemianLerner/subscriptions",
      "organizations_url": "https://api.github.com/users/SergioDemianLerner/orgs",
      "repos_url": "https://api.github.com/users/SergioDemianLerner/repos",
      "events_url": "https://api.github.com/users/SergioDemianLerner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SergioDemianLerner/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Instead of SetHex, a function similar to ParseHashStr() should be used to report invalid values.\n",
    "created_at": "2014-12-16T21:21:58Z",
    "updated_at": "2014-12-16T21:21:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5398#discussion_r21932942",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5398",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21932942"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5398#discussion_r21932942"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5398"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21932942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 293,
    "original_line": 293,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21933366",
    "pull_request_review_id": null,
    "id": 21933366,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTMzMzY2",
    "diff_hunk": "@@ -277,22 +278,20 @@ Value prioritisetransaction(const Array& params, bool fHelp)\n             \"2. priority delta (numeric, required) The priority to add or subtract.\\n\"\n             \"                  The transaction selection algorithm considers the tx as it would have a higher priority.\\n\"\n             \"                  (priority of a transaction is calculated: coinage * value_in_satoshis / txsize) \\n\"\n-            \"3. fee delta      (numeric, required) The absolute fee value to add or subtract in bitcoin.\\n\"\n+            \"3. fee delta      (numeric, required) The fee value (in satoshis) to add (or subtract, if negative).\\n\"\n             \"                  The fee is not actually paid, only the algorithm for selecting transactions into a block\\n\"\n             \"                  considers the transaction as it would have paid a higher (or lower) fee.\\n\"\n             \"\\nResult\\n\"\n             \"true              (boolean) Returns true\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"prioritisetransaction\", \"\\\"txid\\\" 0.0 0.00010000\")\n-            + HelpExampleRpc(\"prioritisetransaction\", \"\\\"txid\\\", 0.0, 0.00010000\")\n+            + HelpExampleCli(\"prioritisetransaction\", \"\\\"txid\\\" 0.0 10000\")\n+            + HelpExampleRpc(\"prioritisetransaction\", \"\\\"txid\\\", 0.0, 10000\")\n         );\n \n     uint256 hash;\n     hash.SetHex(params[0].get_str());\n \n-    CAmount nAmount = 0;\n-    if (params[2].get_real() != 0.0)\n-        nAmount = AmountFromValue(params[2]);\n+    CAmount nAmount = params[2].get_int64();\n \n     mempool.PrioritiseTransaction(hash, params[0].get_str(), params[1].get_real(), nAmount);",
    "path": "src/rpcmining.cpp",
    "position": 33,
    "original_position": 33,
    "commit_id": "8a20cd3c516c1134905d943861d506213e33e90e",
    "original_commit_id": "8a20cd3c516c1134905d943861d506213e33e90e",
    "user": {
      "login": "SergioDemianLerner",
      "id": 1752347,
      "node_id": "MDQ6VXNlcjE3NTIzNDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1752347?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SergioDemianLerner",
      "html_url": "https://github.com/SergioDemianLerner",
      "followers_url": "https://api.github.com/users/SergioDemianLerner/followers",
      "following_url": "https://api.github.com/users/SergioDemianLerner/following{/other_user}",
      "gists_url": "https://api.github.com/users/SergioDemianLerner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SergioDemianLerner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SergioDemianLerner/subscriptions",
      "organizations_url": "https://api.github.com/users/SergioDemianLerner/orgs",
      "repos_url": "https://api.github.com/users/SergioDemianLerner/repos",
      "events_url": "https://api.github.com/users/SergioDemianLerner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SergioDemianLerner/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "params[0].get_str() is passed to PrioritiseTransaction() without filter. Then this is logged into the logfile without filter. This can be used to crash a logfile parser application, to embed malicius javascript, to add confusing log messages, etc. \nparams[0] should not be passed, since hash already can be converted into an hex string for logging.\n",
    "created_at": "2014-12-16T21:28:42Z",
    "updated_at": "2014-12-16T21:28:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5398#discussion_r21933366",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5398",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21933366"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5398#discussion_r21933366"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5398"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/21933366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 296,
    "original_line": 296,
    "side": "RIGHT"
  }
]