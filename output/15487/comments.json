[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/467623894",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15487#issuecomment-467623894",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15487",
    "id": 467623894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzYyMzg5NA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-26T21:36:48Z",
    "updated_at": "2019-04-10T08:21:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15463](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15463.html) (rpc: Speedup getaddressesbylabel by promag)\n* [#15452](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15452.html) (Replace CScriptID and CKeyID in CTxDestination with dedicated types by instagibbs)\n* [#15129](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15129.html) (rpc: Added ability to remove watch only addresses by benthecarman)\n* [#15112](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15112.html) (build: Optionally enable -Wzero-as-null-pointer-constant by Empact)\n* [#15006](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15006.html) (Add option to create an encrypted wallet by achow101)\n* [#13756](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13756.html) (wallet: \"avoid_reuse\" wallet flag for improved privacy by kallewoof)\n* [#12419](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/12419.html) (Force distinct destinations in CWallet::CreateTransaction by promag)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/467623894/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468421203",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15487#issuecomment-468421203",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15487",
    "id": 468421203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODQyMTIwMw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-28T20:14:48Z",
    "updated_at": "2019-02-28T20:14:48Z",
    "author_association": "MEMBER",
    "body": "@practicalswift There is absolutely no point in giving coding nits on a PR that is just at a proof of concept stage like this.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468421203/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468439619",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15487#issuecomment-468439619",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15487",
    "id": 468439619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODQzOTYxOQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-28T21:10:30Z",
    "updated_at": "2019-02-28T22:15:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sipa Oh, personally I'm very happy as a PR author when reviewers take time to point out areas of improvement (large or small) or small mistakes in my code also in the WIP stage.  In the event that I find a particular nit irrelevant or premature I would simply hit \"Resolve conversation\" and be done with it.\r\n\r\nWhat do you think @Sjors?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468439619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468452395",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15487#issuecomment-468452395",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15487",
    "id": 468452395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODQ1MjM5NQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-28T21:50:15Z",
    "updated_at": "2019-02-28T21:50:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Perhaps [\"Draft pull requests\"](https://help.github.com/en/articles/about-pull-requests#draft-pull-requests) could be used to opt out of any code feedback:\r\n\r\n> When you create a pull request, you can choose to create a pull request that is ready for review or a draft pull request. [\u2026] When you're ready to get feedback on your draft pull request, you can mark your pull request as ready for review.\r\n\r\nEither way it would be nice to have something something similar to the developer notes for review work with clearly stated rationales for the guidelines.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468452395/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468644160",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15487#issuecomment-468644160",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15487",
    "id": 468644160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODY0NDE2MA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-01T12:05:55Z",
    "updated_at": "2019-03-01T12:09:07Z",
    "author_association": "MEMBER",
    "body": "I don't mind and usually just fix it in the next update, but whether it's useful depends on the type of nit.\r\n\r\nSemi columns, whitespace, consts and return value stuff feedback is not useful imo, because those things are likely to be moved around. I suggest holding on off on those until I remove the WIP label. My own standard for WIP is anything that compiles and works in the happy-case scenario.\r\n\r\nWhat I find more useful is help like \"don't use unique_ptr in this way\", or suggestions anywhere I put \"TODO: this is terrible\".",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468644160/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468708304",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15487#issuecomment-468708304",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15487",
    "id": 468708304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODcwODMwNA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-01T15:43:44Z",
    "updated_at": "2019-03-01T15:43:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I took a look at this, and it seems well structured. I'm curious what the first use-case will be. Or I guess what's the minimum thing that needs that needs to be implemented here for this to be useful for hardware wallets and #14912? Current state as of df794753284cc1bd991a5cdf0bd747fffb1db3b9 seems to be that a descriptor wallet is a blank wallet that you're allowed to import public key descriptors to, without them being used for anything yet.\r\n\r\nIt does seem to me that the flag stuff might be overkill. I don't think we need a new flag or changes to createwallet now that we already have blank wallets. It looks like `WALLET_FLAG_DESCRIPTOR_WALLET` just creates a lot of new branches all over the code that don't need to exist or could be replaced with `!m_descriptors.empty()`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468708304/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468717867",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15487#issuecomment-468717867",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15487",
    "id": 468717867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODcxNzg2Nw==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-01T16:11:40Z",
    "updated_at": "2019-03-01T16:13:49Z",
    "author_association": "MEMBER",
    "body": "The reason for the flag is to prevent \"legacy\" keys from getting mixed with descriptors. Maybe later on I discover that such mixing is fine, then I can drop the flag.\r\n\r\nAlso note that the blank flag goes away when you add a key. Which reminds me that it should also go away when you add a descriptor; that's missing in this version.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468717867/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473595683",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15487#issuecomment-473595683",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15487",
    "id": 473595683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzU5NTY4Mw==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-16T21:52:28Z",
    "updated_at": "2019-03-16T21:52:28Z",
    "author_association": "MEMBER",
    "body": "It now distinguishes \"address source\" descriptors (similar to keypool) from \"archive\" descriptors. There can only be one base58 and one bech32 receive / change address source descriptor.\r\n\r\nI implemented `getnewaddress` and `dumpwallet` includes address labels.\r\n\r\nI could use feedback on the details of what we're serializing, as well as on how I implemented the serialization / wallet loading code. That's mainly in commits `[wallet] add descriptor (de)serialization\r\n` and `[wallet] descriptor address serialization + derivation`.\r\n\r\nI got a little dizzy from tossing around unique pointers and I couldn't figure out how to deserialize a descriptor in one go. The next step is probably to add serializer code to the Descriptor class, but I'm not sure how to do that.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473595683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484227298",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15487#issuecomment-484227298",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15487",
    "id": 484227298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDIyNzI5OA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-17T19:24:06Z",
    "updated_at": "2019-04-17T19:24:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484227298/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499421275",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15487#issuecomment-499421275",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15487",
    "id": 499421275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTQyMTI3NQ==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-06T09:30:08Z",
    "updated_at": "2019-06-06T09:30:08Z",
    "author_association": "MEMBER",
    "body": "Closing in favor of @achow101's #15764 which has better momentum.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499421275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261363963",
    "pull_request_review_id": 209285307,
    "id": 261363963,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTM2Mzk2Mw==",
    "diff_hunk": "@@ -800,6 +804,8 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n \n     std::map<uint256, CWalletTx> mapWallet GUARDED_BY(cs_wallet);\n \n+    std::map<unsigned int, std::unique_ptr<WalletDescriptor>> m_descriptors GUARDED_BY(cs_wallet);;",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 26,
    "commit_id": "ad60f1e40a2f2bdc92f9270a49b7991122025d84",
    "original_commit_id": "df794753284cc1bd991a5cdf0bd747fffb1db3b9",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: `;;` at end of line :-)",
    "created_at": "2019-02-28T20:10:27Z",
    "updated_at": "2019-03-21T18:41:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15487#discussion_r261363963",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15487",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261363963"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15487#discussion_r261363963"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15487"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261363963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 805,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261364647",
    "pull_request_review_id": 209286247,
    "id": 261364647,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTM2NDY0Nw==",
    "diff_hunk": "@@ -491,6 +490,24 @@ bool CWallet::LoadWatchOnly(const CScript &dest)\n     return CCryptoKeyStore::AddWatchOnly(dest);\n }\n \n+bool CWallet::LoadDescriptor(const unsigned int nID, std::unique_ptr<WalletDescriptor>descriptor) {\n+    m_descriptors[nID] = std::move(descriptor);\n+    return true;\n+}\n+\n+bool CWallet::HaveDescriptor(const unsigned int nID) {",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "ad60f1e40a2f2bdc92f9270a49b7991122025d84",
    "original_commit_id": "df794753284cc1bd991a5cdf0bd747fffb1db3b9",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could be `const`?",
    "created_at": "2019-02-28T20:12:36Z",
    "updated_at": "2019-03-21T18:41:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15487#discussion_r261364647",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15487",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261364647"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15487#discussion_r261364647"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15487"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261364647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 499,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261364886",
    "pull_request_review_id": 209286552,
    "id": 261364886,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTM2NDg4Ng==",
    "diff_hunk": "@@ -491,6 +490,24 @@ bool CWallet::LoadWatchOnly(const CScript &dest)\n     return CCryptoKeyStore::AddWatchOnly(dest);\n }\n \n+bool CWallet::LoadDescriptor(const unsigned int nID, std::unique_ptr<WalletDescriptor>descriptor) {\n+    m_descriptors[nID] = std::move(descriptor);\n+    return true;\n+}\n+\n+bool CWallet::HaveDescriptor(const unsigned int nID) {\n+    return m_descriptors.find(nID) != m_descriptors.end();\n+}\n+\n+bool CWallet::AddDescriptor(const unsigned int nID, std::string descriptor, int64_t nCreateTime) {\n+    auto desc = MakeUnique<WalletDescriptor>(descriptor, nCreateTime);\n+    if (!WalletBatch(*database).WriteDescriptor(nID, desc.get())) {\n+        return false;\n+    }\n+    bool res = LoadDescriptor(nID, std::move(desc));",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 26,
    "commit_id": "ad60f1e40a2f2bdc92f9270a49b7991122025d84",
    "original_commit_id": "df794753284cc1bd991a5cdf0bd747fffb1db3b9",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: Just `return LoadDescriptor(nID, std::move(desc));`?",
    "created_at": "2019-02-28T20:13:18Z",
    "updated_at": "2019-03-21T18:41:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15487#discussion_r261364886",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15487",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261364886"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15487#discussion_r261364886"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15487"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261364886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 508,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261579660",
    "pull_request_review_id": 209552984,
    "id": 261579660,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2MTU3OTY2MA==",
    "diff_hunk": "@@ -418,6 +424,18 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                 strErr = \"Error reading wallet database: Unknown non-tolerable wallet flags found\";\n                 return false;\n             }\n+        } else if (strType == \"descriptor\") {\n+           unsigned int nID;\n+           ssKey >> nID;\n+           WalletDescriptor desc;\n+           ssValue >> desc;\n+           // TODO: figure out how to combine ssValue >> with MakeUnique<WalletDescriptor>",
    "path": "src/wallet/walletdb.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "ad60f1e40a2f2bdc92f9270a49b7991122025d84",
    "original_commit_id": "df794753284cc1bd991a5cdf0bd747fffb1db3b9",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@practicalswift e.g. this is the kind of thing I find feedback more useful on in the WIP stage",
    "created_at": "2019-03-01T12:07:30Z",
    "updated_at": "2019-03-21T18:41:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15487#discussion_r261579660",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15487",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261579660"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15487#discussion_r261579660"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15487"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/261579660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 432,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267269671",
    "pull_request_review_id": 216632494,
    "id": 267269671,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NzI2OTY3MQ==",
    "diff_hunk": "@@ -142,6 +145,97 @@ class CKeyMetadata\n     }\n };\n \n+/* Descriptor address model for the wallet */\n+class DescriptorAddress\n+{\n+public:\n+    static const int VERSION_BASIC=1;\n+    static const int CURRENT_VERSION=VERSION_BASIC;\n+    int nVersion;\n+    int64_t nCreateTime;\n+    CTxDestination m_address;\n+    std::string m_address_str;\n+    std::string m_label;\n+\n+    DescriptorAddress() {}\n+\n+    explicit DescriptorAddress(int64_t nCreateTime_, CTxDestination address_, std::string label_) :\n+        nCreateTime(nCreateTime_), m_address(address_), m_label(label_)\n+    {\n+        nVersion = DescriptorAddress::CURRENT_VERSION;\n+        m_address_str = EncodeDestination(m_address);\n+    }\n+\n+    explicit DescriptorAddress(int64_t nCreateTime_, std::string address_str_, std::string label_) :\n+        nCreateTime(nCreateTime_), m_address_str(address_str_), m_label(label_)\n+    {\n+        nVersion = DescriptorAddress::CURRENT_VERSION;\n+        m_address = DecodeDestination(m_address_str);\n+    }\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action) {\n+        READWRITE(this->nVersion);\n+        READWRITE(nCreateTime);\n+        READWRITE(m_address_str);\n+        READWRITE(m_label);\n+    }\n+};\n+\n+static const int DESCRIPTOR_PURPOSE_RECEIVE_CURRENT = 1;\n+static const int DESCRIPTOR_PURPOSE_CHANGE_CURRENT  = 2;\n+static const int DESCRIPTOR_PURPOSE_RECEIVE_ARCHIVE = 3;\n+static const int DESCRIPTOR_PURPOSE_CHANGE_ARCHIVE  = 4;\n+\n+/* Descriptor data model for the wallet */\n+class WalletDescriptor\n+{\n+public:\n+    static const int VERSION_BASIC=1;\n+    static const int CURRENT_VERSION=VERSION_BASIC;\n+    int nVersion;\n+    std::unique_ptr<Descriptor> m_descriptor;\n+    std::string m_descriptor_string;\n+    int64_t nCreateTime;\n+    uint64_t m_id;\n+    int m_purpose;\n+\n+    std::vector<DescriptorAddress> m_addresses;\n+\n+    WalletDescriptor() {}\n+\n+    explicit WalletDescriptor(std::unique_ptr<Descriptor>descriptor_, int64_t nCreateTime_, uint64_t id_, int purpose_) :\n+        m_descriptor(std::move(descriptor_)), nCreateTime(nCreateTime_), m_id(id_), m_purpose(purpose_)\n+    {\n+        nVersion = WalletDescriptor::CURRENT_VERSION;\n+        m_descriptor_string = m_descriptor->ToString();\n+    }\n+\n+    explicit WalletDescriptor(std::string descriptor_string_, int64_t nCreateTime_, uint64_t id_, int purpose_) :\n+        m_descriptor_string(descriptor_string_), nCreateTime(nCreateTime_), m_id(id_), m_purpose(purpose_)\n+    {\n+        nVersion = WalletDescriptor::CURRENT_VERSION;\n+        // ReadKeyValue first initalizes an empty WalletDescriptor",
    "path": "src/wallet/walletdb.h",
    "position": null,
    "original_position": 91,
    "commit_id": "ad60f1e40a2f2bdc92f9270a49b7991122025d84",
    "original_commit_id": "839c4e7cef1d3be264c476b2963355d952273d03",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should be \"initializes\" :-)",
    "created_at": "2019-03-20T10:23:12Z",
    "updated_at": "2019-03-21T18:41:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15487#discussion_r267269671",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15487",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267269671"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15487#discussion_r267269671"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15487"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267269671/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 211,
    "side": "RIGHT"
  }
]