[
  {
    "sha": "b5d67b2d9d52546d1b098acbc68b48f7018c6ece",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNWQ2N2IyZDlkNTI1NDZkMWIwOThhY2JjNjhiNDhmNzAxOGM2ZWNl",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-13T12:25:09Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-13T12:25:09Z"
      },
      "message": "[build] add IO support for Boost::Optional",
      "tree": {
        "sha": "d27979943061b22e76276251c45094c4b2d6e899",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d27979943061b22e76276251c45094c4b2d6e899"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5d67b2d9d52546d1b098acbc68b48f7018c6ece",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyI9qcACgkQV/+b28ww\nEAmy6g/+K8PrAkfwdxCtrkhR9UREoarnikGOLNIBHZkeZ/xMMTTiDQdTBQsdsR+x\nf/MBNLE/NpjpL9z4FhGFq6fFPpbkij2FcsDaXQ4cdmBNGSUu2NesUQI+GyqSBcMt\nloTDSrusPWYDyiCdc7t05cXnG5p0mA5jtDsb7u8DqrUTH5MLhJO2DORRK7skwLyq\naWRTF0i4FTkbEhGe8UTIEUBPMJ24mRieOuq5Xlk9s7hiu/Kp0ZiyA0oG+63MVGem\nVNds3/rqW1/Fn1SNWmmrti+eVq3ZIN6TKAUYmiIOSRg20u3mP2avwn8Qwm6MaHsw\ndGZvawzahR/slqzZuv4e/XAKboWP7LlglP6KWYEoV12lcXcQqrdv/OMoGchUYF0o\nXst2QC27D4W2Pl1jZOpUSvwLmPWkRxge+G3wUkvkxn4FzI/rQgkaYUk9WS1SZXX8\nL66naPB61+QP/QuQF0ii2ulVjw+ZKFwpbjkKusY9FztoPYAiHTHYl3TpR0gqh640\nUjUovAOrsEnRIwkD5/R9eXSdKmTuZR9OZ0DO1oQRKiPmv5aDT5yimarAHmPn+CLE\nx9AMXyWnrcryHKoUD1ZFABr14zKbrTWIFR2aQp//tU8AQJLxA2DrR2A/OfgjEH2Z\nbS2/vJDQiFp9asTqCwDdcQhqYrqHk2YnOMMqaV7oNe4YbAzQRMA=\n=B9oi\n-----END PGP SIGNATURE-----",
        "payload": "tree d27979943061b22e76276251c45094c4b2d6e899\nparent c3b1cb958f7c57c5d87db663f2b1a83e3471d354\nauthor Sjors Provoost <sjors@sprovoost.nl> 1552479909 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1552479909 +0100\n\n[build] add IO support for Boost::Optional\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5d67b2d9d52546d1b098acbc68b48f7018c6ece",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b5d67b2d9d52546d1b098acbc68b48f7018c6ece",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5d67b2d9d52546d1b098acbc68b48f7018c6ece/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c3b1cb958f7c57c5d87db663f2b1a83e3471d354",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3b1cb958f7c57c5d87db663f2b1a83e3471d354",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c3b1cb958f7c57c5d87db663f2b1a83e3471d354"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a9fe397e9224d7bcb6428760de4b302f4ed68e36",
        "filename": "src/optional.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5d67b2d9d52546d1b098acbc68b48f7018c6ece/src/optional.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5d67b2d9d52546d1b098acbc68b48f7018c6ece/src/optional.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/optional.h?ref=b5d67b2d9d52546d1b098acbc68b48f7018c6ece",
        "patch": "@@ -8,6 +8,7 @@\n #include <utility>\n \n #include <boost/optional.hpp>\n+#include <boost/optional/optional_io.hpp>\n \n //! Substitute for C++17 std::optional\n template <typename T>"
      },
      {
        "sha": "659dc298c5e65eeaac1b37fd64d8be1d793859aa",
        "filename": "test/lint/lint-includes.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5d67b2d9d52546d1b098acbc68b48f7018c6ece/test/lint/lint-includes.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5d67b2d9d52546d1b098acbc68b48f7018c6ece/test/lint/lint-includes.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-includes.sh?ref=b5d67b2d9d52546d1b098acbc68b48f7018c6ece",
        "patch": "@@ -59,6 +59,7 @@ EXPECTED_BOOST_INCLUDES=(\n     boost/multi_index/sequenced_index.hpp\n     boost/multi_index_container.hpp\n     boost/optional.hpp\n+    boost/optional/optional_io.hpp\n     boost/preprocessor/cat.hpp\n     boost/preprocessor/stringize.hpp\n     boost/signals2/connection.hpp"
      }
    ]
  },
  {
    "sha": "74a893f2b60ee4a57cc8193bcac72354be3a2a0b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NGE4OTNmMmI2MGVlNGE1N2NjODE5M2JjYWM3MjM1NGJlM2EyYTBi",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-13T12:25:59Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-14T09:57:14Z"
      },
      "message": "Add AddressType (base58, bech32)",
      "tree": {
        "sha": "235cc0bef2e4b3e5a0e6a1b23c1e66a2d1a8caae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/235cc0bef2e4b3e5a0e6a1b23c1e66a2d1a8caae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74a893f2b60ee4a57cc8193bcac72354be3a2a0b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyKJXoACgkQV/+b28ww\nEAlHwg/8DT+OIAr25jkSzR5fodgz0lz+mB9YK7hcg/QlhCClYel6Qfn7Ze9xhikF\nR2GHqhmtn7KNG4vlf+fQgEMe1xXN5CaUctQlEET95JylmD0RGpxkDVn9GjumO1N3\nDZqRtCdccu0ssrrphxQgwk9yvWpgbOjehexHJZJWUtLFErmnIYqhAVzAfebVMULL\nZKdMgYMAfV1iI/uh60s5PF9YuqEZ4344uI4Mu+2F1MSuyxeASy0It3MQmex5cmy/\neuyBAt1H9pczXOYLIOowRH3mAJshDTOuoySmOO+2Sn4+WlgHMW5f6inQ+WJ69QP+\n7YZkJZAW9+j2pQqdi5Ij/N/4+eXpsU9KwMFv7pKLJ5XcnNSEM0FWjNaC1mvGyp2b\nhxLNUkqMIN3i+BRwaojI5ad8USjujWy4EM9nErtVtmxcX8alUeAwK2y/ahBgVQ9N\n8lWS6WU4WyFLt9hagq+1+EtGCTAySTj56DEsijjHwkF5GUhuXJH3hRcKxptG/J97\nLY5fZtJRJ69AmdlBaMiE99zqkrsHdO7mRK/oKTpqD4FpyONkimmIGLB7CEsUaLSc\nsa7wuS+WyQF5G6z/abVRM3poHaKv9gxiQjozvHpflsR2K/2Xd7HHLfnW/CJq6Cjc\nYD9CgIrWA3BVT6rToiu0JtGNpyU6ZwhNUj7OGvkZt7WQddDpNnQ=\n=m3CB\n-----END PGP SIGNATURE-----",
        "payload": "tree 235cc0bef2e4b3e5a0e6a1b23c1e66a2d1a8caae\nparent b5d67b2d9d52546d1b098acbc68b48f7018c6ece\nauthor Sjors Provoost <sjors@sprovoost.nl> 1552479959 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1552557434 +0100\n\nAdd AddressType (base58, bech32)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74a893f2b60ee4a57cc8193bcac72354be3a2a0b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/74a893f2b60ee4a57cc8193bcac72354be3a2a0b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74a893f2b60ee4a57cc8193bcac72354be3a2a0b/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b5d67b2d9d52546d1b098acbc68b48f7018c6ece",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5d67b2d9d52546d1b098acbc68b48f7018c6ece",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b5d67b2d9d52546d1b098acbc68b48f7018c6ece"
      }
    ],
    "stats": {
      "total": 75,
      "additions": 75,
      "deletions": 0
    },
    "files": [
      {
        "sha": "dc58eee8975a2493df530042aadd3159f66a1c0b",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a893f2b60ee4a57cc8193bcac72354be3a2a0b/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a893f2b60ee4a57cc8193bcac72354be3a2a0b/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=74a893f2b60ee4a57cc8193bcac72354be3a2a0b",
        "patch": "@@ -100,6 +100,7 @@ endif\n .PHONY: FORCE check-symbols check-security\n # bitcoin core #\n BITCOIN_CORE_H = \\\n+  addresstype.h \\\n   addrdb.h \\\n   addrman.h \\\n   attributes.h \\\n@@ -239,6 +240,7 @@ libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h\n libbitcoin_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n libbitcoin_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_server_a_SOURCES = \\\n+  addresstype.cpp \\\n   addrdb.cpp \\\n   addrman.cpp \\\n   banman.cpp \\"
      },
      {
        "sha": "966e4009b6cb96f5dd692b5ddb9cc763640f9e36",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a893f2b60ee4a57cc8193bcac72354be3a2a0b/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a893f2b60ee4a57cc8193bcac72354be3a2a0b/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=74a893f2b60ee4a57cc8193bcac72354be3a2a0b",
        "patch": "@@ -81,6 +81,7 @@ FUZZ_SUITE_LD_COMMON = \\\n BITCOIN_TESTS =\\\n   test/arith_uint256_tests.cpp \\\n   test/scriptnum10.h \\\n+  test/addresstype_tests.cpp \\\n   test/addrman_tests.cpp \\\n   test/amount_tests.cpp \\\n   test/allocator_tests.cpp \\"
      },
      {
        "sha": "231f2f9d1901f6ce5d9b5ff845027e393faba0c2",
        "filename": "src/addresstype.cpp",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a893f2b60ee4a57cc8193bcac72354be3a2a0b/src/addresstype.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a893f2b60ee4a57cc8193bcac72354be3a2a0b/src/addresstype.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addresstype.cpp?ref=74a893f2b60ee4a57cc8193bcac72354be3a2a0b",
        "patch": "@@ -0,0 +1,26 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <addresstype.h>\n+\n+static const std::string ADDRESS_TYPE_STRING_BASE58 = \"legacy\";\n+static const std::string ADDRESS_TYPE_STRING_BECH32 = \"bech32\";\n+\n+Optional<AddressType> ParseAddressType(const std::string& type)\n+{\n+    if (type == ADDRESS_TYPE_STRING_BASE58) {\n+        return AddressType::BASE58;\n+    } else if (type == ADDRESS_TYPE_STRING_BECH32) {\n+        return AddressType::BECH32;\n+    }\n+    return nullopt;\n+}\n+\n+const std::string& FormatAddressType(AddressType type)\n+{\n+    switch (type) {\n+    case AddressType::BASE58: return ADDRESS_TYPE_STRING_BASE58;\n+    case AddressType::BECH32: return ADDRESS_TYPE_STRING_BECH32;\n+    }\n+}"
      },
      {
        "sha": "9b0382c02115a2299f7ffd6c83e1f891019f5c81",
        "filename": "src/addresstype.h",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a893f2b60ee4a57cc8193bcac72354be3a2a0b/src/addresstype.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a893f2b60ee4a57cc8193bcac72354be3a2a0b/src/addresstype.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addresstype.h?ref=74a893f2b60ee4a57cc8193bcac72354be3a2a0b",
        "patch": "@@ -0,0 +1,20 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_ADDRESSTYPE_H\n+#define BITCOIN_ADDRESSTYPE_H\n+\n+#include <optional.h>\n+\n+#include <string>\n+\n+enum class AddressType {\n+    BASE58,\n+    BECH32\n+};\n+\n+Optional<AddressType> ParseAddressType(const std::string& type);\n+const std::string& FormatAddressType(AddressType type);\n+\n+#endif // BITCOIN_ADDRESSTYPE_H"
      },
      {
        "sha": "85bdcb3b0a91b25d0453251964d0f749cc0d6f7b",
        "filename": "src/test/addresstype_tests.cpp",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74a893f2b60ee4a57cc8193bcac72354be3a2a0b/src/test/addresstype_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74a893f2b60ee4a57cc8193bcac72354be3a2a0b/src/test/addresstype_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addresstype_tests.cpp?ref=74a893f2b60ee4a57cc8193bcac72354be3a2a0b",
        "patch": "@@ -0,0 +1,26 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <addresstype.h>\n+\n+#include <boost/test/unit_test.hpp>\n+#include <test/test_bitcoin.h>\n+\n+#include <optional.h>\n+\n+BOOST_FIXTURE_TEST_SUITE(addresstype_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(addresstype_test)\n+{\n+    // Check parsing\n+    BOOST_CHECK_EQUAL(ParseAddressType(\"invalid\"), nullopt);\n+    BOOST_CHECK_EQUAL(ParseAddressType(\"legacy\"), AddressType::BASE58);\n+    BOOST_CHECK_EQUAL(ParseAddressType(\"bech32\"), AddressType::BECH32);\n+\n+    // Check formatting\n+    BOOST_CHECK_EQUAL(FormatAddressType(AddressType::BASE58), \"legacy\");\n+    BOOST_CHECK_EQUAL(FormatAddressType(AddressType::BECH32), \"bech32\");\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "4371f3aca15e3a9fe7f84912672b4daed7357a70",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MzcxZjNhY2ExNWUzYTlmZTdmODQ5MTI2NzJiNGRhZWQ3MzU3YTcw",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-13T12:26:09Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-14T09:57:14Z"
      },
      "message": "Descriptor: add GetAddressType()",
      "tree": {
        "sha": "5d683c0e2353080f0f524fbf5d516f517e6d2b03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d683c0e2353080f0f524fbf5d516f517e6d2b03"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4371f3aca15e3a9fe7f84912672b4daed7357a70",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyKJXoACgkQV/+b28ww\nEAnaJxAAkns3CPqbKgScgUOnsvjDXdtro+WeNueabbiB40dndAw9o4mdQ0mi+Ipm\no1MYcmMxCyy57a0GtW8UCfAKr1YD/2PoqDrxS1y83Lo77qPJfM4Vx6ILjpoqV9EV\nUjRwiVOwUze8bPycPRntoeqVevoz63035pIzB071im718z+IeKwcvmJa+rPyyxeE\nPXPXwgoTXjmI0TEFxLLNuzJ8aWFdgUZz74uSs9phiUlbOHK3E9HK7dJws4x4Blgv\nS31M1z9n//8noW/CLgb1xlw93W+ndZstArnOEAyryeHdOYZljIE+4JNJ0eGcSh/s\nhSjQYZSTZsoqv0UWO4sURbZM/GJW49LHJzhoSy6FORAnggqpbqkjR9R6e8jH51dO\n+5BaCTkQ79x4vqshRcQCulC33PrrZgB75O1hMYkkq10/8dkSw6GgtwBCH00m95Re\nFxVFfBiJljqGzoHLuB40dAh7fhqZnG+LTsm6z12dk3LChXD88iwquJnKku/mMhON\nsYz7ECRlwsfdURKwpnDNKQSro5Liey/WdYRjfFTeIiGTRIWQZwVQXvM0IN71URFT\n13O8inswa8xTc8xs/8iNEw1/hHkN5zMdHz2Jx9Sl+gwKv/SXzZUsDEj2ZQSDs6i8\n3TbEdwBOeSsXU+OwA+J0zbooWDkQQg0fqlL1fasTbEIUc+M7oj8=\n=VC/x\n-----END PGP SIGNATURE-----",
        "payload": "tree 5d683c0e2353080f0f524fbf5d516f517e6d2b03\nparent 74a893f2b60ee4a57cc8193bcac72354be3a2a0b\nauthor Sjors Provoost <sjors@sprovoost.nl> 1552479969 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1552557434 +0100\n\nDescriptor: add GetAddressType()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4371f3aca15e3a9fe7f84912672b4daed7357a70",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4371f3aca15e3a9fe7f84912672b4daed7357a70",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4371f3aca15e3a9fe7f84912672b4daed7357a70/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "74a893f2b60ee4a57cc8193bcac72354be3a2a0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74a893f2b60ee4a57cc8193bcac72354be3a2a0b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/74a893f2b60ee4a57cc8193bcac72354be3a2a0b"
      }
    ],
    "stats": {
      "total": 81,
      "additions": 61,
      "deletions": 20
    },
    "files": [
      {
        "sha": "9fd481bbfcad169853e838019b75abc4923f450b",
        "filename": "src/script/descriptor.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4371f3aca15e3a9fe7f84912672b4daed7357a70/src/script/descriptor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4371f3aca15e3a9fe7f84912672b4daed7357a70/src/script/descriptor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.cpp?ref=4371f3aca15e3a9fe7f84912672b4daed7357a70",
        "patch": "@@ -402,6 +402,10 @@ class DescriptorImpl : public Descriptor\n         return ret;\n     }\n \n+    Optional<AddressType> GetAddressType() const override {\n+        return nullopt;\n+    }\n+\n     bool ExpandHelper(int pos, const SigningProvider& arg, Span<const unsigned char>* cache_read, std::vector<CScript>& output_scripts, FlatSigningProvider& out, std::vector<unsigned char>* cache_write) const\n     {\n         std::vector<std::pair<CPubKey, KeyOriginInfo>> entries;\n@@ -518,6 +522,11 @@ class PKHDescriptor final : public DescriptorImpl\n     }\n public:\n     PKHDescriptor(std::unique_ptr<PubkeyProvider> prov) : DescriptorImpl(Singleton(std::move(prov)), {}, \"pkh\") {}\n+\n+    Optional<AddressType> GetAddressType() const override final\n+    {\n+        return AddressType::BASE58;\n+    }\n };\n \n /** A parsed wpkh(P) descriptor. */\n@@ -532,6 +541,11 @@ class WPKHDescriptor final : public DescriptorImpl\n     }\n public:\n     WPKHDescriptor(std::unique_ptr<PubkeyProvider> prov) : DescriptorImpl(Singleton(std::move(prov)), {}, \"wpkh\") {}\n+\n+    Optional<AddressType> GetAddressType() const override final\n+    {\n+        return AddressType::BECH32;\n+    }\n };\n \n /** A parsed combo(P) descriptor. */\n@@ -575,6 +589,11 @@ class SHDescriptor final : public DescriptorImpl\n     std::vector<CScript> MakeScripts(const std::vector<CPubKey>&, const CScript* script, FlatSigningProvider&) const override { return Singleton(GetScriptForDestination(CScriptID(*script))); }\n public:\n     SHDescriptor(std::unique_ptr<DescriptorImpl> desc) : DescriptorImpl({}, std::move(desc), \"sh\") {}\n+\n+    Optional<AddressType> GetAddressType() const override final\n+    {\n+        return AddressType::BASE58;\n+    }\n };\n \n /** A parsed wsh(...) descriptor. */\n@@ -584,6 +603,11 @@ class WSHDescriptor final : public DescriptorImpl\n     std::vector<CScript> MakeScripts(const std::vector<CPubKey>&, const CScript* script, FlatSigningProvider&) const override { return Singleton(GetScriptForDestination(WitnessV0ScriptHash(*script))); }\n public:\n     WSHDescriptor(std::unique_ptr<DescriptorImpl> desc) : DescriptorImpl({}, std::move(desc), \"wsh\") {}\n+\n+    Optional<AddressType> GetAddressType() const override final\n+    {\n+        return AddressType::BECH32;\n+    }\n };\n \n ////////////////////////////////////////////////////////////////////////////"
      },
      {
        "sha": "8b0d4a9d25bd9236f3cda46fa39b9e8dbc794e47",
        "filename": "src/script/descriptor.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4371f3aca15e3a9fe7f84912672b4daed7357a70/src/script/descriptor.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4371f3aca15e3a9fe7f84912672b4daed7357a70/src/script/descriptor.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.h?ref=4371f3aca15e3a9fe7f84912672b4daed7357a70",
        "patch": "@@ -5,6 +5,8 @@\n #ifndef BITCOIN_SCRIPT_DESCRIPTOR_H\n #define BITCOIN_SCRIPT_DESCRIPTOR_H\n \n+#include <addresstype.h>\n+#include <optional.h>\n #include <script/script.h>\n #include <script/sign.h>\n \n@@ -42,6 +44,9 @@ struct Descriptor {\n     /** Convert the descriptor to a private string. This fails if the provided provider does not have the relevant private keys. */\n     virtual bool ToPrivateString(const SigningProvider& provider, std::string& out) const = 0;\n \n+    /** What address type this descriptor produces when converted to a string. */\n+    virtual Optional<AddressType> GetAddressType() const = 0;\n+\n     /** Expand a descriptor at a specified position.\n      *\n      * pos: the position at which to expand the descriptor. If IsRange() is false, this is ignored."
      },
      {
        "sha": "7db7bf1aa60ee5a5ffcb0b95bc1fab2ba05914eb",
        "filename": "src/test/descriptor_tests.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 20,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4371f3aca15e3a9fe7f84912672b4daed7357a70/src/test/descriptor_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4371f3aca15e3a9fe7f84912672b4daed7357a70/src/test/descriptor_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/descriptor_tests.cpp?ref=4371f3aca15e3a9fe7f84912672b4daed7357a70",
        "patch": "@@ -27,6 +27,9 @@ constexpr int RANGE = 1; // Expected to be ranged descriptor\n constexpr int HARDENED = 2; // Derivation needs access to private keys\n constexpr int UNSOLVABLE = 4; // This descriptor is not expected to be solvable\n constexpr int SIGNABLE = 8; // We can sign with this descriptor (this is not true when actual BIP32 derivation is used, as that's not integrated in our signing code)\n+constexpr int ADDRESS_TYPE_NONE = 16; // This descriptor should not have an AddressType\n+constexpr int ADDRESS_TYPE_BASE58  = 32; // This descriptor should have AddressType::BASE58\n+constexpr int ADDRESS_TYPE_BECH32  = 64; // This descriptor should have AddressType::BECH32\n \n /** Compare two descriptors. If only one of them has a checksum, the checksum is ignored. */\n bool EqualDescriptor(std::string a, std::string b)\n@@ -88,6 +91,15 @@ void Check(const std::string& prv, const std::string& pub, int flags, const std:\n     BOOST_CHECK(EqualDescriptor(prv, prv1));\n     BOOST_CHECK(!parse_pub->ToPrivateString(keys_pub, prv1));\n \n+    // Check if the address type is correct:\n+    if (flags & ADDRESS_TYPE_NONE) {\n+        BOOST_CHECK_EQUAL(parse_pub->GetAddressType(), nullopt);\n+    } else if (flags & ADDRESS_TYPE_BASE58) {\n+        BOOST_CHECK_EQUAL(parse_pub->GetAddressType(), AddressType::BASE58);\n+    } else if (flags & ADDRESS_TYPE_BECH32) {\n+        BOOST_CHECK_EQUAL(parse_pub->GetAddressType(), AddressType::BECH32);\n+    }\n+\n     // Check whether IsRange on both returns the expected result\n     BOOST_CHECK_EQUAL(parse_pub->IsRange(), (flags & RANGE) != 0);\n     BOOST_CHECK_EQUAL(parse_priv->IsRange(), (flags & RANGE) != 0);\n@@ -172,42 +184,42 @@ BOOST_AUTO_TEST_CASE(descriptor_test)\n {\n     // Basic single-key compressed\n     Check(\"combo(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)\", \"combo(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)\", SIGNABLE, {{\"2103a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bdac\",\"76a9149a1c78a507689f6f54b847ad1cef1e614ee23f1e88ac\",\"00149a1c78a507689f6f54b847ad1cef1e614ee23f1e\",\"a91484ab21b1b2fd065d4504ff693d832434b6108d7b87\"}});\n-    Check(\"pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)\", \"pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)\", SIGNABLE, {{\"2103a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bdac\"}});\n-    Check(\"pkh([deadbeef/1/2'/3/4']L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)\", \"pkh([deadbeef/1/2'/3/4']03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)\", SIGNABLE, {{\"76a9149a1c78a507689f6f54b847ad1cef1e614ee23f1e88ac\"}}, {{1,0x80000002UL,3,0x80000004UL}});\n-    Check(\"wpkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)\", \"wpkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)\", SIGNABLE, {{\"00149a1c78a507689f6f54b847ad1cef1e614ee23f1e\"}});\n-    Check(\"sh(wpkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"sh(wpkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE, {{\"a91484ab21b1b2fd065d4504ff693d832434b6108d7b87\"}});\n+    Check(\"pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)\", \"pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)\", SIGNABLE | ADDRESS_TYPE_NONE, {{\"2103a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bdac\"}});\n+    Check(\"pkh([deadbeef/1/2'/3/4']L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)\", \"pkh([deadbeef/1/2'/3/4']03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)\", SIGNABLE|ADDRESS_TYPE_BASE58, {{\"76a9149a1c78a507689f6f54b847ad1cef1e614ee23f1e88ac\"}}, {{1,0x80000002UL,3,0x80000004UL}});\n+    Check(\"wpkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)\", \"wpkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)\", SIGNABLE | ADDRESS_TYPE_BECH32, {{\"00149a1c78a507689f6f54b847ad1cef1e614ee23f1e\"}});\n+    Check(\"sh(wpkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"sh(wpkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE | ADDRESS_TYPE_BASE58, {{\"a91484ab21b1b2fd065d4504ff693d832434b6108d7b87\"}});\n \n     // Basic single-key uncompressed\n     Check(\"combo(5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss)\", \"combo(04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\", SIGNABLE, {{\"4104a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235ac\",\"76a914b5bd079c4d57cc7fc28ecf8213a6b791625b818388ac\"}});\n-    Check(\"pk(5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss)\", \"pk(04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\", SIGNABLE, {{\"4104a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235ac\"}});\n-    Check(\"pkh(5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss)\", \"pkh(04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\", SIGNABLE, {{\"76a914b5bd079c4d57cc7fc28ecf8213a6b791625b818388ac\"}});\n+    Check(\"pk(5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss)\", \"pk(04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\", SIGNABLE | ADDRESS_TYPE_NONE, {{\"4104a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235ac\"}});\n+    Check(\"pkh(5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss)\", \"pkh(04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\", SIGNABLE | ADDRESS_TYPE_BASE58, {{\"76a914b5bd079c4d57cc7fc28ecf8213a6b791625b818388ac\"}});\n     CheckUnparsable(\"wpkh(5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss)\", \"wpkh(04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\"); // No uncompressed keys in witness\n     CheckUnparsable(\"wsh(pk(5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss))\", \"wsh(pk(04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235))\"); // No uncompressed keys in witness\n     CheckUnparsable(\"sh(wpkh(5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss))\", \"sh(wpkh(04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235))\"); // No uncompressed keys in witness\n \n     // Some unconventional single-key constructions\n-    Check(\"sh(pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"sh(pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE, {{\"a9141857af51a5e516552b3086430fd8ce55f7c1a52487\"}});\n-    Check(\"sh(pkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"sh(pkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE, {{\"a9141a31ad23bf49c247dd531a623c2ef57da3c400c587\"}});\n-    Check(\"wsh(pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"wsh(pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE, {{\"00202e271faa2325c199d25d22e1ead982e45b64eeb4f31e73dbdf41bd4b5fec23fa\"}});\n-    Check(\"wsh(pkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"wsh(pkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE, {{\"0020338e023079b91c58571b20e602d7805fb808c22473cbc391a41b1bd3a192e75b\"}});\n-    Check(\"sh(wsh(pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)))\", \"sh(wsh(pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)))\", SIGNABLE, {{\"a91472d0c5a3bfad8c3e7bd5303a72b94240e80b6f1787\"}});\n-    Check(\"sh(wsh(pkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)))\", \"sh(wsh(pkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)))\", SIGNABLE, {{\"a914b61b92e2ca21bac1e72a3ab859a742982bea960a87\"}});\n+    Check(\"sh(pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"sh(pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE | ADDRESS_TYPE_BASE58, {{\"a9141857af51a5e516552b3086430fd8ce55f7c1a52487\"}});\n+    Check(\"sh(pkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"sh(pkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE | ADDRESS_TYPE_BASE58, {{\"a9141a31ad23bf49c247dd531a623c2ef57da3c400c587\"}});\n+    Check(\"wsh(pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"wsh(pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE | ADDRESS_TYPE_BECH32, {{\"00202e271faa2325c199d25d22e1ead982e45b64eeb4f31e73dbdf41bd4b5fec23fa\"}});\n+    Check(\"wsh(pkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1))\", \"wsh(pkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd))\", SIGNABLE | ADDRESS_TYPE_BECH32, {{\"0020338e023079b91c58571b20e602d7805fb808c22473cbc391a41b1bd3a192e75b\"}});\n+    Check(\"sh(wsh(pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)))\", \"sh(wsh(pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)))\", SIGNABLE | ADDRESS_TYPE_BASE58, {{\"a91472d0c5a3bfad8c3e7bd5303a72b94240e80b6f1787\"}});\n+    Check(\"sh(wsh(pkh(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)))\", \"sh(wsh(pkh(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)))\", SIGNABLE | ADDRESS_TYPE_BASE58, {{\"a914b61b92e2ca21bac1e72a3ab859a742982bea960a87\"}});\n \n     // Versions with BIP32 derivations\n     Check(\"combo([01234567]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc)\", \"combo([01234567]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL)\", SIGNABLE, {{\"2102d2b36900396c9282fa14628566582f206a5dd0bcc8d5e892611806cafb0301f0ac\",\"76a91431a507b815593dfc51ffc7245ae7e5aee304246e88ac\",\"001431a507b815593dfc51ffc7245ae7e5aee304246e\",\"a9142aafb926eb247cb18240a7f4c07983ad1f37922687\"}});\n     Check(\"pk(xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0)\", \"pk(xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0)\", DEFAULT, {{\"210379e45b3cf75f9c5f9befd8e9506fb962f6a9d185ac87001ec44a8d3df8d4a9e3ac\"}}, {{0}});\n-    Check(\"pkh(xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U/2147483647'/0)\", \"pkh(xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/2147483647'/0)\", HARDENED, {{\"76a914ebdc90806a9c4356c1c88e42216611e1cb4c1c1788ac\"}}, {{0xFFFFFFFFUL,0}});\n-    Check(\"wpkh([ffffffff/13']xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt/1/2/*)\", \"wpkh([ffffffff/13']xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/1/2/*)\", RANGE, {{\"0014326b2249e3a25d5dc60935f044ee835d090ba859\"},{\"0014af0bd98abc2f2cae66e36896a39ffe2d32984fb7\"},{\"00141fa798efd1cbf95cebf912c031b8a4a6e9fb9f27\"}}, {{0x8000000DUL, 1, 2, 0}, {0x8000000DUL, 1, 2, 1}, {0x8000000DUL, 1, 2, 2}});\n-    Check(\"sh(wpkh(xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi/10/20/30/40/*'))\", \"sh(wpkh(xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8/10/20/30/40/*'))\", RANGE | HARDENED, {{\"a9149a4d9901d6af519b2a23d4a2f51650fcba87ce7b87\"},{\"a914bed59fc0024fae941d6e20a3b44a109ae740129287\"},{\"a9148483aa1116eb9c05c482a72bada4b1db24af654387\"}}, {{10, 20, 30, 40, 0x80000000UL}, {10, 20, 30, 40, 0x80000001UL}, {10, 20, 30, 40, 0x80000002UL}});\n+    Check(\"pkh(xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U/2147483647'/0)\", \"pkh(xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/2147483647'/0)\", HARDENED | ADDRESS_TYPE_BASE58, {{\"76a914ebdc90806a9c4356c1c88e42216611e1cb4c1c1788ac\"}}, {{0xFFFFFFFFUL,0}});\n+    Check(\"wpkh([ffffffff/13']xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt/1/2/*)\", \"wpkh([ffffffff/13']xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/1/2/*)\", RANGE | ADDRESS_TYPE_BECH32, {{\"0014326b2249e3a25d5dc60935f044ee835d090ba859\"},{\"0014af0bd98abc2f2cae66e36896a39ffe2d32984fb7\"},{\"00141fa798efd1cbf95cebf912c031b8a4a6e9fb9f27\"}}, {{0x8000000DUL, 1, 2, 0}, {0x8000000DUL, 1, 2, 1}, {0x8000000DUL, 1, 2, 2}});\n+    Check(\"sh(wpkh(xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi/10/20/30/40/*'))\", \"sh(wpkh(xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8/10/20/30/40/*'))\", RANGE | HARDENED | ADDRESS_TYPE_BASE58, {{\"a9149a4d9901d6af519b2a23d4a2f51650fcba87ce7b87\"},{\"a914bed59fc0024fae941d6e20a3b44a109ae740129287\"},{\"a9148483aa1116eb9c05c482a72bada4b1db24af654387\"}}, {{10, 20, 30, 40, 0x80000000UL}, {10, 20, 30, 40, 0x80000001UL}, {10, 20, 30, 40, 0x80000002UL}});\n     Check(\"combo(xprvA2JDeKCSNNZky6uBCviVfJSKyQ1mDYahRjijr5idH2WwLsEd4Hsb2Tyh8RfQMuPh7f7RtyzTtdrbdqqsunu5Mm3wDvUAKRHSC34sJ7in334/*)\", \"combo(xpub6FHa3pjLCk84BayeJxFW2SP4XRrFd1JYnxeLeU8EqN3vDfZmbqBqaGJAyiLjTAwm6ZLRQUMv1ZACTj37sR62cfN7fe5JnJ7dh8zL4fiyLHV/*)\", RANGE, {{\"2102df12b7035bdac8e3bab862a3a83d06ea6b17b6753d52edecba9be46f5d09e076ac\",\"76a914f90e3178ca25f2c808dc76624032d352fdbdfaf288ac\",\"0014f90e3178ca25f2c808dc76624032d352fdbdfaf2\",\"a91408f3ea8c68d4a7585bf9e8bda226723f70e445f087\"},{\"21032869a233c9adff9a994e4966e5b821fd5bac066da6c3112488dc52383b4a98ecac\",\"76a914a8409d1b6dfb1ed2a3e8aa5e0ef2ff26b15b75b788ac\",\"0014a8409d1b6dfb1ed2a3e8aa5e0ef2ff26b15b75b7\",\"a91473e39884cb71ae4e5ac9739e9225026c99763e6687\"}}, {{0}, {1}});\n     CheckUnparsable(\"combo([012345678]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc)\", \"combo([012345678]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL)\"); // Too long key fingerprint\n     CheckUnparsable(\"pkh(xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U/2147483648)\", \"pkh(xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/2147483648)\"); // BIP 32 path element overflow\n \n     // Multisig constructions\n     Check(\"multi(1,L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1,5KYZdUEo39z3FPrtuX2QbbwGnNP5zTd7yyr2SC1j299sBCnWjss)\", \"multi(1,03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd,04a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea235)\", SIGNABLE, {{\"512103a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd4104a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd5b8dec5235a0fa8722476c7709c02559e3aa73aa03918ba2d492eea75abea23552ae\"}});\n-    Check(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))\", DEFAULT, {{\"a91445a9a622a8b0a1269944be477640eedc447bbd8487\"}}, {{0x8000006FUL,222},{0}});\n-    Check(\"wsh(multi(2,xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U/2147483647'/0,xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt/1/2/*,xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi/10/20/30/40/*'))\", \"wsh(multi(2,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/2147483647'/0,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/1/2/*,xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8/10/20/30/40/*'))\", HARDENED | RANGE, {{\"0020b92623201f3bb7c3771d45b2ad1d0351ea8fbf8cfe0a0e570264e1075fa1948f\"},{\"002036a08bbe4923af41cf4316817c93b8d37e2f635dd25cfff06bd50df6ae7ea203\"},{\"0020a96e7ab4607ca6b261bfe3245ffda9c746b28d3f59e83d34820ec0e2b36c139c\"}}, {{0xFFFFFFFFUL,0}, {1,2,0}, {1,2,1}, {1,2,2}, {10, 20, 30, 40, 0x80000000UL}, {10, 20, 30, 40, 0x80000001UL}, {10, 20, 30, 40, 0x80000002UL}});\n-    Check(\"sh(wsh(multi(16,KzoAz5CanayRKex3fSLQ2BwJpN7U52gZvxMyk78nDMHuqrUxuSJy,KwGNz6YCCQtYvFzMtrC6D3tKTKdBBboMrLTsjr2NYVBwapCkn7Mr,KxogYhiNfwxuswvXV66eFyKcCpm7dZ7TqHVqujHAVUjJxyivxQ9X,L2BUNduTSyZwZjwNHynQTF14mv2uz2NRq5n5sYWTb4FkkmqgEE9f,L1okJGHGn1kFjdXHKxXjwVVtmCMR2JA5QsbKCSpSb7ReQjezKeoD,KxDCNSST75HFPaW5QKpzHtAyaCQC7p9Vo3FYfi2u4dXD1vgMiboK,L5edQjFtnkcf5UWURn6UuuoFrabgDQUHdheKCziwN42aLwS3KizU,KzF8UWFcEC7BYTq8Go1xVimMkDmyNYVmXV5PV7RuDicvAocoPB8i,L3nHUboKG2w4VSJ5jYZ5CBM97oeK6YuKvfZxrefdShECcjEYKMWZ,KyjHo36dWkYhimKmVVmQTq3gERv3pnqA4xFCpvUgbGDJad7eS8WE,KwsfyHKRUTZPQtysN7M3tZ4GXTnuov5XRgjdF2XCG8faAPmFruRF,KzCUbGhN9LJhdeFfL9zQgTJMjqxdBKEekRGZX24hXdgCNCijkkap,KzgpMBwwsDLwkaC5UrmBgCYaBD2WgZ7PBoGYXR8KT7gCA9UTN5a3,KyBXTPy4T7YG4q9tcAM3LkvfRpD1ybHMvcJ2ehaWXaSqeGUxEdkP,KzJDe9iwJRPtKP2F2AoN6zBgzS7uiuAwhWCfGdNeYJ3PC1HNJ8M8,L1xbHrxynrqLKkoYc4qtoQPx6uy5qYXR5ZDYVYBSRmCV5piU3JG9)))\",\"sh(wsh(multi(16,03669b8afcec803a0d323e9a17f3ea8e68e8abe5a278020a929adbec52421adbd0,0260b2003c386519fc9eadf2b5cf124dd8eea4c4e68d5e154050a9346ea98ce600,0362a74e399c39ed5593852a30147f2959b56bb827dfa3e60e464b02ccf87dc5e8,0261345b53de74a4d721ef877c255429961b7e43714171ac06168d7e08c542a8b8,02da72e8b46901a65d4374fe6315538d8f368557dda3a1dcf9ea903f3afe7314c8,0318c82dd0b53fd3a932d16e0ba9e278fcc937c582d5781be626ff16e201f72286,0297ccef1ef99f9d73dec9ad37476ddb232f1238aff877af19e72ba04493361009,02e502cfd5c3f972fe9a3e2a18827820638f96b6f347e54d63deb839011fd5765d,03e687710f0e3ebe81c1037074da939d409c0025f17eb86adb9427d28f0f7ae0e9,02c04d3a5274952acdbc76987f3184b346a483d43be40874624b29e3692c1df5af,02ed06e0f418b5b43a7ec01d1d7d27290fa15f75771cb69b642a51471c29c84acd,036d46073cbb9ffee90473f3da429abc8de7f8751199da44485682a989a4bebb24,02f5d1ff7c9029a80a4e36b9a5497027ef7f3e73384a4a94fbfe7c4e9164eec8bc,02e41deffd1b7cce11cde209a781adcffdabd1b91c0ba0375857a2bfd9302419f3,02d76625f7956a7fc505ab02556c23ee72d832f1bac391bcd2d3abce5710a13d06,0399eb0a5487515802dc14544cf10b3666623762fbed2ec38a3975716e2c29c232)))\", SIGNABLE, {{\"a9147fc63e13dc25e8a95a3cee3d9a714ac3afd96f1e87\"}});\n+    Check(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))\", DEFAULT | ADDRESS_TYPE_BASE58, {{\"a91445a9a622a8b0a1269944be477640eedc447bbd8487\"}}, {{0x8000006FUL,222},{0}});\n+    Check(\"wsh(multi(2,xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U/2147483647'/0,xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt/1/2/*,xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi/10/20/30/40/*'))\", \"wsh(multi(2,xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/2147483647'/0,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/1/2/*,xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8/10/20/30/40/*'))\", HARDENED | RANGE | ADDRESS_TYPE_BECH32, {{\"0020b92623201f3bb7c3771d45b2ad1d0351ea8fbf8cfe0a0e570264e1075fa1948f\"},{\"002036a08bbe4923af41cf4316817c93b8d37e2f635dd25cfff06bd50df6ae7ea203\"},{\"0020a96e7ab4607ca6b261bfe3245ffda9c746b28d3f59e83d34820ec0e2b36c139c\"}}, {{0xFFFFFFFFUL,0}, {1,2,0}, {1,2,1}, {1,2,2}, {10, 20, 30, 40, 0x80000000UL}, {10, 20, 30, 40, 0x80000001UL}, {10, 20, 30, 40, 0x80000002UL}});\n+    Check(\"sh(wsh(multi(16,KzoAz5CanayRKex3fSLQ2BwJpN7U52gZvxMyk78nDMHuqrUxuSJy,KwGNz6YCCQtYvFzMtrC6D3tKTKdBBboMrLTsjr2NYVBwapCkn7Mr,KxogYhiNfwxuswvXV66eFyKcCpm7dZ7TqHVqujHAVUjJxyivxQ9X,L2BUNduTSyZwZjwNHynQTF14mv2uz2NRq5n5sYWTb4FkkmqgEE9f,L1okJGHGn1kFjdXHKxXjwVVtmCMR2JA5QsbKCSpSb7ReQjezKeoD,KxDCNSST75HFPaW5QKpzHtAyaCQC7p9Vo3FYfi2u4dXD1vgMiboK,L5edQjFtnkcf5UWURn6UuuoFrabgDQUHdheKCziwN42aLwS3KizU,KzF8UWFcEC7BYTq8Go1xVimMkDmyNYVmXV5PV7RuDicvAocoPB8i,L3nHUboKG2w4VSJ5jYZ5CBM97oeK6YuKvfZxrefdShECcjEYKMWZ,KyjHo36dWkYhimKmVVmQTq3gERv3pnqA4xFCpvUgbGDJad7eS8WE,KwsfyHKRUTZPQtysN7M3tZ4GXTnuov5XRgjdF2XCG8faAPmFruRF,KzCUbGhN9LJhdeFfL9zQgTJMjqxdBKEekRGZX24hXdgCNCijkkap,KzgpMBwwsDLwkaC5UrmBgCYaBD2WgZ7PBoGYXR8KT7gCA9UTN5a3,KyBXTPy4T7YG4q9tcAM3LkvfRpD1ybHMvcJ2ehaWXaSqeGUxEdkP,KzJDe9iwJRPtKP2F2AoN6zBgzS7uiuAwhWCfGdNeYJ3PC1HNJ8M8,L1xbHrxynrqLKkoYc4qtoQPx6uy5qYXR5ZDYVYBSRmCV5piU3JG9)))\",\"sh(wsh(multi(16,03669b8afcec803a0d323e9a17f3ea8e68e8abe5a278020a929adbec52421adbd0,0260b2003c386519fc9eadf2b5cf124dd8eea4c4e68d5e154050a9346ea98ce600,0362a74e399c39ed5593852a30147f2959b56bb827dfa3e60e464b02ccf87dc5e8,0261345b53de74a4d721ef877c255429961b7e43714171ac06168d7e08c542a8b8,02da72e8b46901a65d4374fe6315538d8f368557dda3a1dcf9ea903f3afe7314c8,0318c82dd0b53fd3a932d16e0ba9e278fcc937c582d5781be626ff16e201f72286,0297ccef1ef99f9d73dec9ad37476ddb232f1238aff877af19e72ba04493361009,02e502cfd5c3f972fe9a3e2a18827820638f96b6f347e54d63deb839011fd5765d,03e687710f0e3ebe81c1037074da939d409c0025f17eb86adb9427d28f0f7ae0e9,02c04d3a5274952acdbc76987f3184b346a483d43be40874624b29e3692c1df5af,02ed06e0f418b5b43a7ec01d1d7d27290fa15f75771cb69b642a51471c29c84acd,036d46073cbb9ffee90473f3da429abc8de7f8751199da44485682a989a4bebb24,02f5d1ff7c9029a80a4e36b9a5497027ef7f3e73384a4a94fbfe7c4e9164eec8bc,02e41deffd1b7cce11cde209a781adcffdabd1b91c0ba0375857a2bfd9302419f3,02d76625f7956a7fc505ab02556c23ee72d832f1bac391bcd2d3abce5710a13d06,0399eb0a5487515802dc14544cf10b3666623762fbed2ec38a3975716e2c29c232)))\", SIGNABLE | ADDRESS_TYPE_BASE58, {{\"a9147fc63e13dc25e8a95a3cee3d9a714ac3afd96f1e87\"}});\n     CheckUnparsable(\"sh(multi(16,KzoAz5CanayRKex3fSLQ2BwJpN7U52gZvxMyk78nDMHuqrUxuSJy,KwGNz6YCCQtYvFzMtrC6D3tKTKdBBboMrLTsjr2NYVBwapCkn7Mr,KxogYhiNfwxuswvXV66eFyKcCpm7dZ7TqHVqujHAVUjJxyivxQ9X,L2BUNduTSyZwZjwNHynQTF14mv2uz2NRq5n5sYWTb4FkkmqgEE9f,L1okJGHGn1kFjdXHKxXjwVVtmCMR2JA5QsbKCSpSb7ReQjezKeoD,KxDCNSST75HFPaW5QKpzHtAyaCQC7p9Vo3FYfi2u4dXD1vgMiboK,L5edQjFtnkcf5UWURn6UuuoFrabgDQUHdheKCziwN42aLwS3KizU,KzF8UWFcEC7BYTq8Go1xVimMkDmyNYVmXV5PV7RuDicvAocoPB8i,L3nHUboKG2w4VSJ5jYZ5CBM97oeK6YuKvfZxrefdShECcjEYKMWZ,KyjHo36dWkYhimKmVVmQTq3gERv3pnqA4xFCpvUgbGDJad7eS8WE,KwsfyHKRUTZPQtysN7M3tZ4GXTnuov5XRgjdF2XCG8faAPmFruRF,KzCUbGhN9LJhdeFfL9zQgTJMjqxdBKEekRGZX24hXdgCNCijkkap,KzgpMBwwsDLwkaC5UrmBgCYaBD2WgZ7PBoGYXR8KT7gCA9UTN5a3,KyBXTPy4T7YG4q9tcAM3LkvfRpD1ybHMvcJ2ehaWXaSqeGUxEdkP,KzJDe9iwJRPtKP2F2AoN6zBgzS7uiuAwhWCfGdNeYJ3PC1HNJ8M8,L1xbHrxynrqLKkoYc4qtoQPx6uy5qYXR5ZDYVYBSRmCV5piU3JG9))\",\"sh(multi(16,03669b8afcec803a0d323e9a17f3ea8e68e8abe5a278020a929adbec52421adbd0,0260b2003c386519fc9eadf2b5cf124dd8eea4c4e68d5e154050a9346ea98ce600,0362a74e399c39ed5593852a30147f2959b56bb827dfa3e60e464b02ccf87dc5e8,0261345b53de74a4d721ef877c255429961b7e43714171ac06168d7e08c542a8b8,02da72e8b46901a65d4374fe6315538d8f368557dda3a1dcf9ea903f3afe7314c8,0318c82dd0b53fd3a932d16e0ba9e278fcc937c582d5781be626ff16e201f72286,0297ccef1ef99f9d73dec9ad37476ddb232f1238aff877af19e72ba04493361009,02e502cfd5c3f972fe9a3e2a18827820638f96b6f347e54d63deb839011fd5765d,03e687710f0e3ebe81c1037074da939d409c0025f17eb86adb9427d28f0f7ae0e9,02c04d3a5274952acdbc76987f3184b346a483d43be40874624b29e3692c1df5af,02ed06e0f418b5b43a7ec01d1d7d27290fa15f75771cb69b642a51471c29c84acd,036d46073cbb9ffee90473f3da429abc8de7f8751199da44485682a989a4bebb24,02f5d1ff7c9029a80a4e36b9a5497027ef7f3e73384a4a94fbfe7c4e9164eec8bc,02e41deffd1b7cce11cde209a781adcffdabd1b91c0ba0375857a2bfd9302419f3,02d76625f7956a7fc505ab02556c23ee72d832f1bac391bcd2d3abce5710a13d06,0399eb0a5487515802dc14544cf10b3666623762fbed2ec38a3975716e2c29c232))\"); // P2SH does not fit 16 compressed pubkeys in a redeemscript\n     CheckUnparsable(\"wsh(multi(2,[aaaaaaaa][aaaaaaaa]xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U/2147483647'/0,xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt/1/2/*,xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi/10/20/30/40/*'))\", \"wsh(multi(2,[aaaaaaaa][aaaaaaaa]xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/2147483647'/0,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/1/2/*,xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8/10/20/30/40/*'))\"); // Double key origin descriptor\n     CheckUnparsable(\"wsh(multi(2,[aaaagaaa]xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U/2147483647'/0,xprv9vHkqa6EV4sPZHYqZznhT2NPtPCjKuDKGY38FBWLvgaDx45zo9WQRUT3dKYnjwih2yJD9mkrocEZXo1ex8G81dwSM1fwqWpWkeS3v86pgKt/1/2/*,xprv9s21ZrQH143K3QTDL4LXw2F7HEK3wJUD2nW2nRk4stbPy6cq3jPPqjiChkVvvNKmPGJxWUtg6LnF5kejMRNNU3TGtRBeJgk33yuGBxrMPHi/10/20/30/40/*'))\", \"wsh(multi(2,[aaagaaaa]xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB/2147483647'/0,xpub69H7F5d8KSRgmmdJg2KhpAK8SR3DjMwAdkxj3ZuxV27CprR9LgpeyGmXUbC6wb7ERfvrnKZjXoUmmDznezpbZb7ap6r1D3tgFxHmwMkQTPH/1/2/*,xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8/10/20/30/40/*'))\"); // Non hex fingerprint\n@@ -225,8 +237,8 @@ BOOST_AUTO_TEST_CASE(descriptor_test)\n     CheckUnparsable(\"wsh(wsh(pk(L4rK1yDtCWekvXuE6oXD9jCYfFNV2cWRpVuPLBcCU2z8TrisoyY1)))\", \"wsh(wsh(pk(03a34b99f22c790c4e36b2b3c2c35a36db06226e41c692fc82b8b56ac1c540c5bd)))\"); // Cannot embed P2WSH inside P2WSH\n \n     // Checksums\n-    Check(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))#ggrsrxfy\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))#tjg09x5t\", DEFAULT, {{\"a91445a9a622a8b0a1269944be477640eedc447bbd8487\"}}, {{0x8000006FUL,222},{0}});\n-    Check(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))\", DEFAULT, {{\"a91445a9a622a8b0a1269944be477640eedc447bbd8487\"}}, {{0x8000006FUL,222},{0}});\n+    Check(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))#ggrsrxfy\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))#tjg09x5t\", DEFAULT | ADDRESS_TYPE_BASE58, {{\"a91445a9a622a8b0a1269944be477640eedc447bbd8487\"}}, {{0x8000006FUL,222},{0}});\n+    Check(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))\", DEFAULT | ADDRESS_TYPE_BASE58, {{\"a91445a9a622a8b0a1269944be477640eedc447bbd8487\"}}, {{0x8000006FUL,222},{0}});\n     CheckUnparsable(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))#\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))#\"); // Empty checksum\n     CheckUnparsable(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))#ggrsrxfyq\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))#tjg09x5tq\"); // Too long checksum\n     CheckUnparsable(\"sh(multi(2,[00000000/111'/222]xprvA1RpRA33e1JQ7ifknakTFpgNXPmW2YvmhqLQYMmrj4xJXXWYpDPS3xz7iAxn8L39njGVyuoseXzU6rcxFLJ8HFsTjSyQbLYnMpCqE2VbFWc,xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L/0))#ggrsrxf\", \"sh(multi(2,[00000000/111'/222]xpub6ERApfZwUNrhLCkDtcHTcxd75RbzS1ed54G1LkBUHQVHQKqhMkhgbmJbZRkrgZw4koxb5JaHWkY4ALHY2grBGRjaDMzQLcgJvLJuZZvRcEL,xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y/0))#tjg09x5\"); // Too short checksum"
      }
    ]
  },
  {
    "sha": "2489c72a4e0b61a31319d5df637acdae283e4920",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNDg5YzcyYTRlMGI2MWEzMTMxOWQ1ZGY2MzdhY2RhZTI4M2U0OTIw",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-26T11:53:00Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-15T18:08:49Z"
      },
      "message": "[wallet] add mandatory flag for descriptor based wallet",
      "tree": {
        "sha": "60ed1a9791bf501e8ff51cf4c043cead9eb7606d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/60ed1a9791bf501e8ff51cf4c043cead9eb7606d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2489c72a4e0b61a31319d5df637acdae283e4920",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyL6jEACgkQV/+b28ww\nEAlg1xAAm917tp/lAo82U+M70sxEsIKSG5FDGCSzIcSFKP1zT+WWN46xX7552R/5\n/rRBSxHSET4AMZ/9WoEEgguBFlxFZ7bDi/Syx932IumssYWl1QHNqaVbVkrr/wyI\naQV2BcByznniq4OXfoScpg5/thEBMvbLiFK5RoAHZ5HaAAloSfSmLCFsBovcdSwy\n2QuRoMu0rk4QImzCT8SyoSdyV1YbZnBFfA9Y44h7de0XR7kqmZY385Vx5FEL1ttb\ncR3ZLV0FeVqcnPWXMveIuk0MgdaIMdArcg0+d1ZUj95yoXE9jBnKxMScrEiUYX9s\nWqSdZHpguOJyoG0HbETh83JZ56/BQRCq6eb0O8XrmUuoM9s0BU26vV3mX6Tz+K7m\nmn+TswUr2J+zZoSAu1rrpdjd3hXkwFjXpWdMhSCBq8FXWtijauNBBgbzTY+3EOcz\nsYHvyLbzyNLIWfr/z1JaDI5MNW75IkJaLT+MOaxTh+KuhCXUqwXWKcAD5kb129Pj\n5vVIUgnqBNGGOB2Ru+4gPTgatwPWIPyK6a0PdFQz2H16RWPulKrFvHc9AEMPvvec\nEZqvsq/6zpzOkh5tqZHnMpqexq3996vcHbgF9aV+g8Tc/t/25zb9sfylG5wKf5wi\n6SUhFFOumqGfeNft+IJaeT4pX9MoAHaTu2QIZjrQJpbScsqjvp8=\n=N/K2\n-----END PGP SIGNATURE-----",
        "payload": "tree 60ed1a9791bf501e8ff51cf4c043cead9eb7606d\nparent 4371f3aca15e3a9fe7f84912672b4daed7357a70\nauthor Sjors Provoost <sjors@sprovoost.nl> 1551181980 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1552673329 +0100\n\n[wallet] add mandatory flag for descriptor based wallet\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2489c72a4e0b61a31319d5df637acdae283e4920",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2489c72a4e0b61a31319d5df637acdae283e4920",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2489c72a4e0b61a31319d5df637acdae283e4920/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4371f3aca15e3a9fe7f84912672b4daed7357a70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4371f3aca15e3a9fe7f84912672b4daed7357a70",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4371f3aca15e3a9fe7f84912672b4daed7357a70"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "bcb588f9d348264bd1218e527f07b8b2529e3a33",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2489c72a4e0b61a31319d5df637acdae283e4920/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2489c72a4e0b61a31319d5df637acdae283e4920/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=2489c72a4e0b61a31319d5df637acdae283e4920",
        "patch": "@@ -4190,6 +4190,9 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n+        if ((wallet_creation_flags & WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+            walletInstance->SetWalletFlag(WALLET_FLAG_DESCRIPTOR_WALLET);\n+        }\n         if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n             //selective allow to set flags\n             walletInstance->SetWalletFlag(WALLET_FLAG_DISABLE_PRIVATE_KEYS);"
      },
      {
        "sha": "30b05dc4f10e69867b724f7050e914bcb55af580",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2489c72a4e0b61a31319d5df637acdae283e4920/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2489c72a4e0b61a31319d5df637acdae283e4920/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=2489c72a4e0b61a31319d5df637acdae283e4920",
        "patch": "@@ -150,9 +150,12 @@ enum WalletFlags : uint64_t {\n     //! bitcoin from opening the wallet, thinking it was newly created, and\n     //! then improperly reinitializing it.\n     WALLET_FLAG_BLANK_WALLET = (1ULL << 33),\n+\n+    //! Mandatory flag set for a descriptor based wallet. It is not backwards compatible.\n+    WALLET_FLAG_DESCRIPTOR_WALLET = (1ULL << 34),\n };\n \n-static constexpr uint64_t g_known_wallet_flags = WALLET_FLAG_DISABLE_PRIVATE_KEYS | WALLET_FLAG_BLANK_WALLET | WALLET_FLAG_KEY_ORIGIN_METADATA;\n+static constexpr uint64_t g_known_wallet_flags = WALLET_FLAG_DISABLE_PRIVATE_KEYS | WALLET_FLAG_BLANK_WALLET | WALLET_FLAG_KEY_ORIGIN_METADATA | WALLET_FLAG_DESCRIPTOR_WALLET;\n \n /** A key pool entry */\n class CKeyPool"
      }
    ]
  },
  {
    "sha": "c61a4515639ca14e719feb87d4549431217a0c4c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNjFhNDUxNTYzOWNhMTRlNzE5ZmViODdkNDU0OTQzMTIxN2EwYzRj",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-26T11:56:37Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-15T18:09:03Z"
      },
      "message": "[rpc] createwallet: add descriptor argument",
      "tree": {
        "sha": "ab8ad58749d77578a1ad8c9e91ab1a965cc70bc1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab8ad58749d77578a1ad8c9e91ab1a965cc70bc1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c61a4515639ca14e719feb87d4549431217a0c4c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyL6j8ACgkQV/+b28ww\nEAnjKhAArh+ZIeIFyPvNIGdcQlQqmbqTaijeG3zLSCTUsrpZE3v48HUd1zssN70V\nw6TqIIj0LNURojNrJ8a+wb3mNDlgmjJYMDQGrwMRkCHSLjuPUsebvG6xVmKSnVCk\njZckbWbK2xHlSxaPNTy4cg97tBCJxAnMIB5eixuCeI6YoQyoKgw2FcEJSAHka8K+\nwvMYDU09iOwL9Izp1aFd/IQwcaoVoM4LNmqGWK3bXBwsdcku7XNME1nyKShg8rKW\nHtMGVZ3RjL3M9Mnguoe8P/8GP5yx9bfPweqapTcShC+cP57z+7oAIU8wOBI+rR4c\ndPJnawiahc3QVPo3Ymi/FmSE34AJZzYI/rgv0REhdfNeeSp6vuSsHkH01cOcu+7q\nIOik+1hga6PYd1kopFyGuW9VmoyEwoEolONEEKwOLVCOI2HkOYt/z3PCbr0sORBK\nNDNz2qeYvRTfvggBADRMPhHRQ8MTAEUD75pszjvoazm8Dhetcq5TJ4Ux81dFG60V\nobQcEQi1+LDB9stxVx7DHJoXc0cWIIpUG50sGe8LOkWP5q8RcUk4217ucBnLzmBI\nIwFDxTzFsxYaN+yZ2c2S+U9pAzszspfi9VuTCo3N5oyv5oxjsdfqbvEX0d30Mb0A\n3xxbOzyC02lieMLMeW8YRsA2oEyqQctXNBr21U4VTlfCP1wcd0I=\n=+1z9\n-----END PGP SIGNATURE-----",
        "payload": "tree ab8ad58749d77578a1ad8c9e91ab1a965cc70bc1\nparent 2489c72a4e0b61a31319d5df637acdae283e4920\nauthor Sjors Provoost <sjors@sprovoost.nl> 1551182197 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1552673343 +0100\n\n[rpc] createwallet: add descriptor argument\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c61a4515639ca14e719feb87d4549431217a0c4c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c61a4515639ca14e719feb87d4549431217a0c4c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c61a4515639ca14e719feb87d4549431217a0c4c/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2489c72a4e0b61a31319d5df637acdae283e4920",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2489c72a4e0b61a31319d5df637acdae283e4920",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2489c72a4e0b61a31319d5df637acdae283e4920"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 10,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7c5ef3d7308191df75db209104f8f49bda472a4d",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c61a4515639ca14e719feb87d4549431217a0c4c/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c61a4515639ca14e719feb87d4549431217a0c4c/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=c61a4515639ca14e719feb87d4549431217a0c4c",
        "patch": "@@ -160,6 +160,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"rescanblockchain\", 1, \"stop_height\"},\n     { \"createwallet\", 1, \"disable_private_keys\"},\n     { \"createwallet\", 2, \"blank\"},\n+    { \"createwallet\", 3, \"descriptor\"},\n     { \"getnodeaddresses\", 0, \"count\"},\n     { \"stop\", 0, \"wait\" },\n };"
      },
      {
        "sha": "ad95f01dc5ee5e6a215aaaf16c8f3dcacf146b29",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c61a4515639ca14e719feb87d4549431217a0c4c/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c61a4515639ca14e719feb87d4549431217a0c4c/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=c61a4515639ca14e719feb87d4549431217a0c4c",
        "patch": "@@ -2566,14 +2566,15 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n \n static UniValue createwallet(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3) {\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4) {\n         throw std::runtime_error(\n             RPCHelpMan{\"createwallet\",\n                 \"\\nCreates and loads a new wallet.\\n\",\n                 {\n                     {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the new wallet. If this is a path, the wallet will be created at the path location.\"},\n                     {\"disable_private_keys\", RPCArg::Type::BOOL, /* default */ \"false\", \"Disable the possibility of private keys (only watchonlys are possible in this mode).\"},\n                     {\"blank\", RPCArg::Type::BOOL, /* default */ \"false\", \"Create a blank wallet. A blank wallet has no keys or HD seed. One can be set using sethdseed.\"},\n+                    {\"descriptor\", RPCArg::Type::BOOL, /* default */ \"false\", \"Create a descriptor based wallet. Must also be blank.\"},\n                 },\n                 RPCResult{\n             \"{\\n\"\n@@ -2599,6 +2600,10 @@ static UniValue createwallet(const JSONRPCRequest& request)\n         flags |= WALLET_FLAG_BLANK_WALLET;\n     }\n \n+    if (!request.params[3].isNull() && request.params[3].get_bool()) {\n+        flags |= WALLET_FLAG_DESCRIPTOR_WALLET;\n+    }\n+\n     WalletLocation location(request.params[0].get_str());\n     if (location.Exists()) {\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet \" + location.GetName() + \" already exists.\");\n@@ -4105,7 +4110,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"addmultisigaddress\",               &addmultisigaddress,            {\"nrequired\",\"keys\",\"label\",\"address_type\"} },\n     { \"wallet\",             \"backupwallet\",                     &backupwallet,                  {\"destination\"} },\n     { \"wallet\",             \"bumpfee\",                          &bumpfee,                       {\"txid\", \"options\"} },\n-    { \"wallet\",             \"createwallet\",                     &createwallet,                  {\"wallet_name\", \"disable_private_keys\", \"blank\"} },\n+    { \"wallet\",             \"createwallet\",                     &createwallet,                  {\"wallet_name\", \"disable_private_keys\", \"blank\", \"descriptor\"} },\n     { \"wallet\",             \"dumpprivkey\",                      &dumpprivkey,                   {\"address\"}  },\n     { \"wallet\",             \"dumpwallet\",                       &dumpwallet,                    {\"filename\"} },\n     { \"wallet\",             \"encryptwallet\",                    &encryptwallet,                 {\"passphrase\"} },"
      },
      {
        "sha": "485cbce84d7c29fc593071973801460ab006e3bf",
        "filename": "test/functional/wallet_createwallet.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c61a4515639ca14e719feb87d4549431217a0c4c/test/functional/wallet_createwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c61a4515639ca14e719feb87d4549431217a0c4c/test/functional/wallet_createwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_createwallet.py?ref=c61a4515639ca14e719feb87d4549431217a0c4c",
        "patch": "@@ -96,5 +96,7 @@ def run_test(self):\n         assert_raises_rpc_error(-4, \"Error: This wallet has no available keys\", w5.getnewaddress)\n         assert_raises_rpc_error(-4, \"Error: This wallet has no available keys\", w5.getrawchangeaddress)\n \n+        self.log.info(\"Test descriptor based wallet creation.\")\n+        self.nodes[0].createwallet(wallet_name='w6', blank=True, descriptor=True)\n if __name__ == '__main__':\n     CreateWalletTest().main()"
      }
    ]
  },
  {
    "sha": "0eacc98ec76999ea572d5bc2ce51b25f752111c9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZWFjYzk4ZWM3Njk5OWVhNTcyZDViYzJjZTUxYjI1Zjc1MjExMWM5",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-26T11:57:55Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-15T18:09:03Z"
      },
      "message": "[wallet] descriptor wallet must be created blank",
      "tree": {
        "sha": "4974e79eef9c2dffb6911ef31b55e0e53963f7ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4974e79eef9c2dffb6911ef31b55e0e53963f7ba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0eacc98ec76999ea572d5bc2ce51b25f752111c9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyL6j8ACgkQV/+b28ww\nEAml8w/+PKmiN9m2oB0GsukikOIvGofqyS/P51wv7abcIGllVkPsLtTGEUUdHcPL\n8hf0p298C4u3JFT7FJrGyXfwDI02wSOq8Hzv8NwK+7FskeakAdyp1qi6OIsZ3fDr\nkrZBXKfr5pToTrUNIHcue2NGcH2YJg3AsapT/vh8vkafKEuD/q8RqtMpaZcAUZTI\nv6paJ8vsk5sXNr7A4CCAOWhKCtl4brC/VGsYyCfcGwz9oMgJA6WaU1MZd8NA9HGo\nwPYaHrWb58m+HuXhB/34ZTOuwXLA83IReFaz55lEpmpbcgnXfkOFO3vnSaPQ5O0C\nKJ6TTFpzHsRLASk0ow0Y6qnlapMiTTM3/5VA1k9JNElc6iohkik2ezP2Wte3mM8k\nGf76T6+iiQCoSC5cI+L0Lfky5yexvF+8w2akLFxDfMWmUMivJUW6ZN0HTe+zwTPh\naZu6qtMzPPItRGnBbSwA6aig/VIMXUbqPB5JiAVIOnM/W/eENp6CHB1Y0FZGPGtt\nlBhofwyLM1yicC044sMb8aNLJjFdBEp9CdKi1jQ3vse1gkzQk1i3xQ56IY8WRznZ\nMt6QtRGBnbc2pvHKHjjhdoAJafp82P7vfoWw+hfgEJkZD8X80T959pYv6q0VqLJU\nBSK/89RTWoIaN/Qn0AaV8yq7JoR085fqxc3+WWfZeZ70tRZ+fZA=\n=4QIi\n-----END PGP SIGNATURE-----",
        "payload": "tree 4974e79eef9c2dffb6911ef31b55e0e53963f7ba\nparent c61a4515639ca14e719feb87d4549431217a0c4c\nauthor Sjors Provoost <sjors@sprovoost.nl> 1551182275 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1552673343 +0100\n\n[wallet] descriptor wallet must be created blank\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0eacc98ec76999ea572d5bc2ce51b25f752111c9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0eacc98ec76999ea572d5bc2ce51b25f752111c9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0eacc98ec76999ea572d5bc2ce51b25f752111c9/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c61a4515639ca14e719feb87d4549431217a0c4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c61a4515639ca14e719feb87d4549431217a0c4c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c61a4515639ca14e719feb87d4549431217a0c4c"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 13,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a6cba574de04d4efd4d9ec8bfbec91b90a461330",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eacc98ec76999ea572d5bc2ce51b25f752111c9/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eacc98ec76999ea572d5bc2ce51b25f752111c9/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=0eacc98ec76999ea572d5bc2ce51b25f752111c9",
        "patch": "@@ -2604,6 +2604,10 @@ static UniValue createwallet(const JSONRPCRequest& request)\n         flags |= WALLET_FLAG_DESCRIPTOR_WALLET;\n     }\n \n+    if ((flags & WALLET_FLAG_DESCRIPTOR_WALLET) && !(flags & WALLET_FLAG_BLANK_WALLET)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"A descriptor wallet must be created blank.\");\n+    }\n+\n     WalletLocation location(request.params[0].get_str());\n     if (location.Exists()) {\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet \" + location.GetName() + \" already exists.\");"
      },
      {
        "sha": "40e9a08cb5cc4e10f74017175f5a03f4475734a7",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eacc98ec76999ea572d5bc2ce51b25f752111c9/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eacc98ec76999ea572d5bc2ce51b25f752111c9/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=0eacc98ec76999ea572d5bc2ce51b25f752111c9",
        "patch": "@@ -4192,6 +4192,12 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n \n         if ((wallet_creation_flags & WALLET_FLAG_DESCRIPTOR_WALLET)) {\n             walletInstance->SetWalletFlag(WALLET_FLAG_DESCRIPTOR_WALLET);\n+\n+            // Descriptor based wallets must be created blank:\n+            if (!(wallet_creation_flags & WALLET_FLAG_BLANK_WALLET)) {\n+                InitError(_(\"A descriptor wallet must be created blank.\"));\n+                return nullptr;\n+            }\n         }\n         if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n             //selective allow to set flags"
      },
      {
        "sha": "7bc9eff0ba0906f3025c0fa35f245ac335554917",
        "filename": "test/functional/wallet_createwallet.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eacc98ec76999ea572d5bc2ce51b25f752111c9/test/functional/wallet_createwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eacc98ec76999ea572d5bc2ce51b25f752111c9/test/functional/wallet_createwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_createwallet.py?ref=0eacc98ec76999ea572d5bc2ce51b25f752111c9",
        "patch": "@@ -98,5 +98,8 @@ def run_test(self):\n \n         self.log.info(\"Test descriptor based wallet creation.\")\n         self.nodes[0].createwallet(wallet_name='w6', blank=True, descriptor=True)\n+\n+        self.log.info(\"Test descriptor based wallet must be created blank.\")\n+        assert_raises_rpc_error(-4, \"A descriptor wallet must be created blank.\", self.nodes[0].createwallet, wallet_name='w7', blank=False, descriptor=True)\n if __name__ == '__main__':\n     CreateWalletTest().main()"
      }
    ]
  },
  {
    "sha": "3ef7a78c18b7ea551ab39115b627a8a3effa8ae0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZWY3YTc4YzE4YjdlYTU1MWFiMzkxMTViNjI3YThhM2VmZmE4YWUw",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-26T11:58:33Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-15T18:09:03Z"
      },
      "message": "[test] createwallet: descriptor wallet must have private keys disabled",
      "tree": {
        "sha": "692ced29581952b3b3cd8bca97365a3c4a0cafff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/692ced29581952b3b3cd8bca97365a3c4a0cafff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ef7a78c18b7ea551ab39115b627a8a3effa8ae0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyL6j8ACgkQV/+b28ww\nEAkKpg//VHJZZ/5lyeruMA4WsohYwe5L5NKxk5cFCbQzLw2c3OJUpKYN3CJs7+tk\nWY5NLwYKsUrI3F6aZa3yvyTk+v1TaEYYN3mnCbE6MMpMQDy0lNCCVl1/BxAKls2O\nVFncvB7d6KDnRvXt90md5+aFmZ7tn9HxFkL0uN92TeESsO3Tj+MGiTtGcYWLWd3a\n7C2UHCZxHf7s7rjrE1VOj8ScGxHwvJuKGMRYRGCrl03alvBYX8ggx1+4yknMPQAo\nWpDCcF94kCFDyEvqCVbN7WJ9GUKPWYwJzyDiZSnCxsaOF2eyRhibC2LyU5IpUDcV\n7YAgMJcsVmGKGDlPVH8j+mMmqTZme6++FcK0K5v41H1CKuLfX1mYSDVQVNddf07A\n3TQ7ZiCdl8Sn7wkE+uW48yadfaBNNEFOLiazSY4Lmil0nzNimzk0Xs/5fTxMygVg\nb6RH3f07W765t71XbRPctkkI5dy1Dw/gj/YUMWQy44E+OT4Y5sv+XiDn24DyFgwo\nRSu6pS8LOIgou7szhzXGbM648CzziPty5tc4YHDPabenTiP0Lar6KiM85d43BC06\nOQf/9ksADeO3rU83jFMLUtNE6Ihqzs393VAifn3PjdEdUrKVpvGv6fiSVfdSAimz\nPxktUU7v/KshJ+Don6+AIbrkehXVkG+Ab+0gyp/JdYS+U1tWk4I=\n=squV\n-----END PGP SIGNATURE-----",
        "payload": "tree 692ced29581952b3b3cd8bca97365a3c4a0cafff\nparent 0eacc98ec76999ea572d5bc2ce51b25f752111c9\nauthor Sjors Provoost <sjors@sprovoost.nl> 1551182313 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1552673343 +0100\n\n[test] createwallet: descriptor wallet must have private keys disabled\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ef7a78c18b7ea551ab39115b627a8a3effa8ae0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3ef7a78c18b7ea551ab39115b627a8a3effa8ae0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ef7a78c18b7ea551ab39115b627a8a3effa8ae0/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0eacc98ec76999ea572d5bc2ce51b25f752111c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0eacc98ec76999ea572d5bc2ce51b25f752111c9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0eacc98ec76999ea572d5bc2ce51b25f752111c9"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 17,
      "deletions": 3
    },
    "files": [
      {
        "sha": "951ceeb1a26dbe2aef25acda660da730e1080dcf",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ef7a78c18b7ea551ab39115b627a8a3effa8ae0/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ef7a78c18b7ea551ab39115b627a8a3effa8ae0/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=3ef7a78c18b7ea551ab39115b627a8a3effa8ae0",
        "patch": "@@ -2574,7 +2574,7 @@ static UniValue createwallet(const JSONRPCRequest& request)\n                     {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the new wallet. If this is a path, the wallet will be created at the path location.\"},\n                     {\"disable_private_keys\", RPCArg::Type::BOOL, /* default */ \"false\", \"Disable the possibility of private keys (only watchonlys are possible in this mode).\"},\n                     {\"blank\", RPCArg::Type::BOOL, /* default */ \"false\", \"Create a blank wallet. A blank wallet has no keys or HD seed. One can be set using sethdseed.\"},\n-                    {\"descriptor\", RPCArg::Type::BOOL, /* default */ \"false\", \"Create a descriptor based wallet. Must also be blank.\"},\n+                    {\"descriptor\", RPCArg::Type::BOOL, /* default */ \"false\", \"Create a descriptor based wallet. Must also be blank and have private keys disabled.\"},\n                 },\n                 RPCResult{\n             \"{\\n\"\n@@ -2608,6 +2608,10 @@ static UniValue createwallet(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_WALLET_ERROR, \"A descriptor wallet must be created blank.\");\n     }\n \n+    if ((flags & WALLET_FLAG_DESCRIPTOR_WALLET) && !(flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"A descriptor wallet must have private keys disabled.\");\n+    }\n+\n     WalletLocation location(request.params[0].get_str());\n     if (location.Exists()) {\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet \" + location.GetName() + \" already exists.\");"
      },
      {
        "sha": "0853cf2d8e72dfe24a708bf6047db0e86d967f5c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ef7a78c18b7ea551ab39115b627a8a3effa8ae0/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ef7a78c18b7ea551ab39115b627a8a3effa8ae0/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=3ef7a78c18b7ea551ab39115b627a8a3effa8ae0",
        "patch": "@@ -4198,6 +4198,12 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n                 InitError(_(\"A descriptor wallet must be created blank.\"));\n                 return nullptr;\n             }\n+\n+            // Descriptor based wallets must have private keys disabled:\n+            if (!(wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n+                InitError(_(\"A descriptor wallet must have private keys disabled.\"));\n+                return nullptr;\n+            }\n         }\n         if ((wallet_creation_flags & WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n             //selective allow to set flags"
      },
      {
        "sha": "b074c639d25da0eca4b4901d09f69c11089f7b3f",
        "filename": "test/functional/wallet_createwallet.py",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ef7a78c18b7ea551ab39115b627a8a3effa8ae0/test/functional/wallet_createwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ef7a78c18b7ea551ab39115b627a8a3effa8ae0/test/functional/wallet_createwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_createwallet.py?ref=3ef7a78c18b7ea551ab39115b627a8a3effa8ae0",
        "patch": "@@ -97,9 +97,13 @@ def run_test(self):\n         assert_raises_rpc_error(-4, \"Error: This wallet has no available keys\", w5.getrawchangeaddress)\n \n         self.log.info(\"Test descriptor based wallet creation.\")\n-        self.nodes[0].createwallet(wallet_name='w6', blank=True, descriptor=True)\n+        self.nodes[0].createwallet(wallet_name='w6', disable_private_keys=True, blank=True, descriptor=True)\n \n         self.log.info(\"Test descriptor based wallet must be created blank.\")\n-        assert_raises_rpc_error(-4, \"A descriptor wallet must be created blank.\", self.nodes[0].createwallet, wallet_name='w7', blank=False, descriptor=True)\n+        assert_raises_rpc_error(-4, \"A descriptor wallet must be created blank.\", self.nodes[0].createwallet, wallet_name='w7', disable_private_keys=True, blank=False, descriptor=True)\n+\n+        self.log.info(\"Test descriptor based wallet must have private keys disabled.\")\n+        assert_raises_rpc_error(-4, \"A descriptor wallet must have private keys disabled.\", self.nodes[0].createwallet, wallet_name='w8', disable_private_keys=False, blank=True, descriptor=True)\n+\n if __name__ == '__main__':\n     CreateWalletTest().main()"
      }
    ]
  },
  {
    "sha": "6ea2d2b05a8b95beca99c850295a8622687a8b41",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZWEyZDJiMDVhOGI5NWJlY2E5OWM4NTAyOTVhODYyMjY4N2E4YjQx",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-26T11:59:06Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-15T18:13:07Z"
      },
      "message": "[wallet] cannot upgrade to descriptor wallet",
      "tree": {
        "sha": "5621245228c7814bb559ca6cc7e9980ed4c593c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5621245228c7814bb559ca6cc7e9980ed4c593c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ea2d2b05a8b95beca99c850295a8622687a8b41",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyL6zoACgkQV/+b28ww\nEAmyjRAAmXnRFPEbmHlWXUZ00bCreRG6I88NqW5eTzqhaksVIhp5IkmhvljqDEYV\nQgvuHV003bM/NQUsH0J5f+cRlRrEX1mOJfjWDzAq1mYrPk6OSCSQ9iAftfHnKbsF\n3QeRyk3WEHGjMChEMAlDtSxVejBBercqC/V7Ve5vQI1UWFxCC6a6enQ8k/sHDe7s\nbHYPnxVrc3iBdkhauHx2vRHDLDzUH7C2dFvo2uinfjItR5p06hSSRW7i2TTPvcN6\nJRW3t923kjE+6GNVhvpaEQuvxG2Q+eQi+pcVZZkrpYzslRx8HoMFw3UuqKH3f8W4\n/FN5T5uS7yYNIQAuR1FLFmMf4jnnF6+78jiCUYQFRPAcsE9T+uq4HUpevmY5G3EG\nxttJodkIbSyycLzdqlfdpUscxppp+TEhcJ5iocGYvTTKbTSSPOmyWD88/ysgKmoq\nVmZhToB4HJg+uyolY8vjgykHJZVEl9eZCfdHNRpEH34aftdkzyr5Grvx//GxVuhE\na8pxkwBjCLjGyBrHRsZMz8DVEdI1ASU9NeQyYwxl82sdH/jxLVtJhyWg8WFljP8B\nFpfXYQ61ljyGeJ/ULgXyIPUokVh+Z24kLmaoM2YiMCDTA+ntiNZkSqypicN4wyuy\nN08EKXmHax56AROUZZhDoJmXkrqkN43zmmhABOHKaE3vU7lcMAg=\n=ReVp\n-----END PGP SIGNATURE-----",
        "payload": "tree 5621245228c7814bb559ca6cc7e9980ed4c593c1\nparent 3ef7a78c18b7ea551ab39115b627a8a3effa8ae0\nauthor Sjors Provoost <sjors@sprovoost.nl> 1551182346 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1552673587 +0100\n\n[wallet] cannot upgrade to descriptor wallet\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ea2d2b05a8b95beca99c850295a8622687a8b41",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6ea2d2b05a8b95beca99c850295a8622687a8b41",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ea2d2b05a8b95beca99c850295a8622687a8b41/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3ef7a78c18b7ea551ab39115b627a8a3effa8ae0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ef7a78c18b7ea551ab39115b627a8a3effa8ae0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ef7a78c18b7ea551ab39115b627a8a3effa8ae0"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a35c9eda4e0d67233db24a75e0aa735a0ea95a2a",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ea2d2b05a8b95beca99c850295a8622687a8b41/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ea2d2b05a8b95beca99c850295a8622687a8b41/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=6ea2d2b05a8b95beca99c850295a8622687a8b41",
        "patch": "@@ -4228,6 +4228,10 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         // Make it impossible to disable private keys after creation\n         chain.initError(strprintf(_(\"Error loading %s: Private keys can only be disabled during creation\"), walletFile));\n         return NULL;\n+    } else if (wallet_creation_flags & WALLET_FLAG_DESCRIPTOR_WALLET) {\n+        // Pre-descriptor wallets can not be upgraded.\n+        InitError(strprintf(_(\"Error loading %s: Cannot upgrade to descriptor wallet\"), walletFile));\n+        return NULL;\n     } else if (walletInstance->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n         LOCK(walletInstance->cs_KeyStore);\n         if (!walletInstance->mapKeys.empty() || !walletInstance->mapCryptedKeys.empty()) {"
      }
    ]
  },
  {
    "sha": "a7500122910d95d74e67369d44c504d8bf991958",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzUwMDEyMjkxMGQ5NWQ3NGU2NzM2OWQ0NGM1MDRkOGJmOTkxOTU4",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-26T12:04:56Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-15T18:13:14Z"
      },
      "message": "[wallet] descriptor based wallets do not have a keypool",
      "tree": {
        "sha": "da910d014cf3579c6f17bbfe9243e4e928ce8a4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da910d014cf3579c6f17bbfe9243e4e928ce8a4a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7500122910d95d74e67369d44c504d8bf991958",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyL6zoACgkQV/+b28ww\nEAk+tQ//QMSfwZDV751EZQIy4U7aRQ/Ge8s46pF3o9d00WYPwf8rwfCTHnZ9FPxQ\n6b9pjHuCuxCrP9S1v9dTWY4hvzEeBrk+iUcHACBNWdP0RZbHI+0BSEyCRduFbxTz\nvXu+8zzDAKufTmczztiQHAwj3zRPO34UBFQHg4mEVvwoexWFnplGFxg9DVRJjE1a\nb5Tz/Xgx8fpBGSQQ0pFDiBP3WK8ry2YczKEONx97MxYPACzDliZEIeByg9z1sGh5\nh1F4eN+GqdOkzhScyzTQ5WSNTaVbw6u2h3qifLkM+5upSi9IxVM9SfdH29BxUOyj\nsR3OPbMgp026BsHXNoTvNZMnNGsaq1bAd4qyh98DDV53XID6fvZLeVckBsQXSIUF\nUoswVd1X9BtuD7jxZYJnxVsxj28V4FgUqogeRmY9abzkdQD9PhJ7iOBCM39Uy4z6\nXkWo04GXbv+RWAhvda1ln2TTzzMV4zoePvjRQ7xjyrL9AlVmr5JWVSGDJsyX8Db6\n8SvpI57sYRC1FKwxgOrtcwueSyk+79Hi1c+RSc5THAhozdT2FIMIOW8gI61KU4Sa\nhoRi8debtaj6tzewabZ0qxvtVGcnTYbayeksoxGlBo4PPcctIFMHQ6QrnkxHBLRv\nSNiYA2Tkcy7UlFCvYwe+tpomUCz0M+/M+RtWG/cHffQ6iJ+KLY0=\n=31RA\n-----END PGP SIGNATURE-----",
        "payload": "tree da910d014cf3579c6f17bbfe9243e4e928ce8a4a\nparent 6ea2d2b05a8b95beca99c850295a8622687a8b41\nauthor Sjors Provoost <sjors@sprovoost.nl> 1551182696 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1552673594 +0100\n\n[wallet] descriptor based wallets do not have a keypool\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7500122910d95d74e67369d44c504d8bf991958",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a7500122910d95d74e67369d44c504d8bf991958",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7500122910d95d74e67369d44c504d8bf991958/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6ea2d2b05a8b95beca99c850295a8622687a8b41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ea2d2b05a8b95beca99c850295a8622687a8b41",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6ea2d2b05a8b95beca99c850295a8622687a8b41"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 8,
      "deletions": 3
    },
    "files": [
      {
        "sha": "6253558cbbd3f0c6f2f9fb64c0408cd150eead72",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7500122910d95d74e67369d44c504d8bf991958/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7500122910d95d74e67369d44c504d8bf991958/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=a7500122910d95d74e67369d44c504d8bf991958",
        "patch": "@@ -4311,8 +4311,10 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n \n     walletInstance->WalletLogPrintf(\"Wallet completed loading in %15dms\\n\", GetTimeMillis() - nStart);\n \n-    // Try to top up keypool. No-op if the wallet is locked.\n-    walletInstance->TopUpKeyPool();\n+    // Try to top up keypool, except for descriptor based wallet. No-op if the wallet is locked.\n+    if (!(wallet_creation_flags & WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+        walletInstance->TopUpKeyPool();\n+    }\n \n     auto locked_chain = chain.lock();\n     LOCK(walletInstance->cs_wallet);\n@@ -4409,7 +4411,10 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     walletInstance->SetBroadcastTransactions(gArgs.GetBoolArg(\"-walletbroadcast\", DEFAULT_WALLETBROADCAST));\n \n     {\n-        walletInstance->WalletLogPrintf(\"setKeyPool.size() = %u\\n\",      walletInstance->GetKeyPoolSize());\n+        // Descriptor based wallet does not have a keypool\n+        if (!(wallet_creation_flags & WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+            walletInstance->WalletLogPrintf(\"setKeyPool.size() = %u\\n\",      walletInstance->GetKeyPoolSize());\n+        }\n         walletInstance->WalletLogPrintf(\"mapWallet.size() = %u\\n\",       walletInstance->mapWallet.size());\n         walletInstance->WalletLogPrintf(\"mapAddressBook.size() = %u\\n\",  walletInstance->mapAddressBook.size());\n     }"
      }
    ]
  },
  {
    "sha": "7e01e28f7ceae918d902efd122153755e71d0d59",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZTAxZTI4ZjdjZWFlOTE4ZDkwMmVmZDEyMjE1Mzc1NWU3MWQwZDU5",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-26T21:06:32Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T10:30:47Z"
      },
      "message": "[wallet] add descriptor (de)serialization",
      "tree": {
        "sha": "36e0c76dcd4abc96ad53ac7d85773d2341a62220",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/36e0c76dcd4abc96ad53ac7d85773d2341a62220"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e01e28f7ceae918d902efd122153755e71d0d59",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyTZ9cACgkQV/+b28ww\nEAmPoQ/+PbtPQ6v6VzFPplU6Iuyv7wKG8rd1AXoHzaa00T28KEAqd2AygUhWWKv8\ny6bFPNZyZFHvHDlMo/IbPmBrmLiQgxhBj4AjWVSmPvHVk9uYDrasqlnt9WnpY5PA\nN1r9XaZ5TUG//EzTp4sxtqSIp9War1uXZzlQ54BVjvdIEEBhAAIEKHaP+mbXh/sr\nqRI0vigH17am2YlQSnsa+oaeJ22FcZMtT55f6PcEj8p3zK58rg5TrCRFsqyavHu1\n6sR2475DBx+qLq16RgBujBXPhdXwVv+nMtMdkFstF3sYR1T4Nx7IBACSkZBKlKwU\n2yrZTGQ7QDgtBV6p3sF4ABBFESCJIjpVzb/tITeV/q74SdiV5YIl2PxqlzsLy5O9\ndFe5ytxER8oGDDA4Tgs/mPcLvlOEPquKp7Q3geCKnlOi4W56LhmIq8QdWSmY94MX\nh5RTIfwzgZOn3+S/G/q8vKeC7bPIdun+j3BuPFcf1+CJoSuFsSQ8Qx5ohUH/tjYN\nPIYOMitMGy1WuqKKRhLPWezIvEbdUi80frraiwf9jbXdxyLd0YEMjLQzq4bZ67ab\nB2gC8he9vTcZefUVotGX5EsDSiQvBuSi6IPsvkNru6+rJLLvAKkYRCOTC9HKUdkA\nw/iX6pSWUyGWrG2kaOLPqIMIz3sQJFweGnFIOwSJE7e8pwwLBPw=\n=l5B5\n-----END PGP SIGNATURE-----",
        "payload": "tree 36e0c76dcd4abc96ad53ac7d85773d2341a62220\nparent a7500122910d95d74e67369d44c504d8bf991958\nauthor Sjors Provoost <sjors@sprovoost.nl> 1551215192 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553164247 +0100\n\n[wallet] add descriptor (de)serialization\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e01e28f7ceae918d902efd122153755e71d0d59",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7e01e28f7ceae918d902efd122153755e71d0d59",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e01e28f7ceae918d902efd122153755e71d0d59/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7500122910d95d74e67369d44c504d8bf991958",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7500122910d95d74e67369d44c504d8bf991958",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7500122910d95d74e67369d44c504d8bf991958"
      }
    ],
    "stats": {
      "total": 124,
      "additions": 122,
      "deletions": 2
    },
    "files": [
      {
        "sha": "90365d8cf8d4841781eadd2013d21f45fbdaa6bf",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 1,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e01e28f7ceae918d902efd122153755e71d0d59/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e01e28f7ceae918d902efd122153755e71d0d59/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=7e01e28f7ceae918d902efd122153755e71d0d59",
        "patch": "@@ -23,7 +23,6 @@\n #include <policy/rbf.h>\n #include <primitives/block.h>\n #include <primitives/transaction.h>\n-#include <script/descriptor.h>\n #include <script/script.h>\n #include <shutdown.h>\n #include <timedata.h>\n@@ -492,6 +491,42 @@ bool CWallet::LoadWatchOnly(const CScript &dest)\n     return CCryptoKeyStore::AddWatchOnly(dest);\n }\n \n+bool CWallet::LoadDescriptor(std::unique_ptr<WalletDescriptor>wdesc)\n+{\n+    m_descriptors[wdesc->m_id] = std::move(wdesc);\n+    return true;\n+}\n+\n+bool CWallet::HaveDescriptor(Descriptor *descriptor)\n+{\n+    for (auto& pair : m_descriptors) {\n+        if (pair.second->m_descriptor->ToString() == descriptor->ToString()) return true;\n+    }\n+    return false;\n+}\n+\n+bool CWallet::AddDescriptor(std::unique_ptr<Descriptor>descriptor, int purpose, int64_t nCreateTime)\n+{\n+    uint64_t wdesc_id = m_descriptors.size();\n+    auto wdesc = MakeUnique<WalletDescriptor>(std::move(descriptor), nCreateTime, wdesc_id, purpose);\n+    if (!WalletBatch(*database).WriteDescriptor(wdesc.get())) {\n+        return false;\n+    }\n+    bool res = LoadDescriptor(std::move(wdesc));\n+    return res;\n+}\n+\n+bool CWallet::HaveAddressSourceDescriptor(bool internal, AddressType address_type)\n+{\n+    for (auto& pair : m_descriptors) {\n+        if (\n+            pair.second->m_purpose == (internal ? DESCRIPTOR_PURPOSE_CHANGE_CURRENT : DESCRIPTOR_PURPOSE_RECEIVE_CURRENT)\n+            && pair.second->m_descriptor->GetAddressType() == address_type\n+        ) return true;\n+    }\n+    return false;\n+}\n+\n bool CWallet::Unlock(const SecureString& strWalletPassphrase, bool accept_no_keys)\n {\n     CCrypter crypter;"
      },
      {
        "sha": "87ac4bcd7f1bb4717e18f5596a57d2f2e9e86292",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e01e28f7ceae918d902efd122153755e71d0d59/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e01e28f7ceae918d902efd122153755e71d0d59/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=7e01e28f7ceae918d902efd122153755e71d0d59",
        "patch": "@@ -6,6 +6,7 @@\n #ifndef BITCOIN_WALLET_WALLET_H\n #define BITCOIN_WALLET_WALLET_H\n \n+#include <addresstype.h>\n #include <amount.h>\n #include <interfaces/chain.h>\n #include <outputtype.h>\n@@ -15,6 +16,7 @@\n #include <ui_interface.h>\n #include <util/strencodings.h>\n #include <validationinterface.h>\n+#include <script/descriptor.h>\n #include <script/ismine.h>\n #include <script/sign.h>\n #include <util/system.h>\n@@ -801,6 +803,8 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n \n     std::map<uint256, CWalletTx> mapWallet GUARDED_BY(cs_wallet);\n \n+    std::map<int, std::unique_ptr<WalletDescriptor>> m_descriptors GUARDED_BY(cs_wallet);\n+\n     typedef std::multimap<int64_t, CWalletTx*> TxItems;\n     TxItems wtxOrdered;\n \n@@ -902,6 +906,11 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     //! Adds a watch-only address to the store, without saving it to disk (used by LoadWallet)\n     bool LoadWatchOnly(const CScript &dest);\n \n+    bool HaveDescriptor(Descriptor* descriptor) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool LoadDescriptor(std::unique_ptr<WalletDescriptor>wdesc) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool AddDescriptor(std::unique_ptr<Descriptor>descriptor, int purpose, int64_t nCreateTime) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool HaveAddressSourceDescriptor(bool internal, AddressType address_type) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+\n     //! Holds a timestamp at which point the wallet is scheduled (externally) to be relocked. Caller must arrange for actual relocking to occur via Lock().\n     int64_t nRelockTime = 0;\n "
      },
      {
        "sha": "8e41910c1d9c38d633d238b7db8e3564f98c64a4",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e01e28f7ceae918d902efd122153755e71d0d59/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e01e28f7ceae918d902efd122153755e71d0d59/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=7e01e28f7ceae918d902efd122153755e71d0d59",
        "patch": "@@ -119,6 +119,12 @@ bool WalletBatch::EraseWatchOnly(const CScript &dest)\n     return EraseIC(std::make_pair(std::string(\"watchs\"), dest));\n }\n \n+bool WalletBatch::WriteDescriptor(WalletDescriptor* wdesc)\n+{\n+    assert(wdesc != nullptr);\n+    return WriteIC(std::make_pair(std::string(\"descriptor\"), wdesc->m_id), *wdesc, true);\n+}\n+\n bool WalletBatch::WriteBestBlock(const CBlockLocator& locator)\n {\n     WriteIC(std::string(\"bestblock\"), CBlockLocator()); // Write empty block locator so versions that require a merkle branch automatically rescan\n@@ -418,6 +424,23 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                 strErr = \"Error reading wallet database: Unknown non-tolerable wallet flags found\";\n                 return false;\n             }\n+        } else if (strType == \"descriptor\") {\n+            uint64_t wdesc_id;\n+            ssKey >> wdesc_id;\n+            // Unfortunately this doesn't work:\n+            // std::unique_ptr<WalletDescriptor> wdesc_u;\n+            // ssValue >> wdesc_u;\n+            WalletDescriptor wdesc;\n+            ssValue >> wdesc;\n+            FlatSigningProvider dummy;\n+            wdesc.m_id = wdesc_id;\n+            wdesc.m_descriptor = Parse(wdesc.m_descriptor_string, dummy, /* require_checksum = */ true);\n+            std::unique_ptr<WalletDescriptor> wdesc_u = MakeUnique<WalletDescriptor>(std::move(wdesc));\n+\n+            if (!pwallet->LoadDescriptor(std::move(wdesc_u))) {\n+                strErr = \"Error reading wallet database: unable to process descriptor\";\n+                return false;\n+            }\n         } else if (strType != \"bestblock\" && strType != \"bestblock_nomerkle\" &&\n                 strType != \"minversion\" && strType != \"acentry\") {\n             wss.m_unknown_records++;"
      },
      {
        "sha": "4dc9f494b25c2cacd1fa511584325fb69895379c",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 54,
        "deletions": 1,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e01e28f7ceae918d902efd122153755e71d0d59/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e01e28f7ceae918d902efd122153755e71d0d59/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=7e01e28f7ceae918d902efd122153755e71d0d59",
        "patch": "@@ -7,10 +7,11 @@\n #define BITCOIN_WALLET_WALLETDB_H\n \n #include <amount.h>\n+#include <key.h>\n #include <primitives/transaction.h>\n+#include <script/descriptor.h>\n #include <script/sign.h>\n #include <wallet/db.h>\n-#include <key.h>\n \n #include <list>\n #include <stdint.h>\n@@ -142,6 +143,56 @@ class CKeyMetadata\n     }\n };\n \n+static const int DESCRIPTOR_PURPOSE_RECEIVE_CURRENT = 1;\n+static const int DESCRIPTOR_PURPOSE_CHANGE_CURRENT  = 2;\n+static const int DESCRIPTOR_PURPOSE_RECEIVE_ARCHIVE = 3;\n+static const int DESCRIPTOR_PURPOSE_CHANGE_ARCHIVE  = 4;\n+\n+/* Descriptor data model for the wallet */\n+class WalletDescriptor\n+{\n+public:\n+    static const int VERSION_BASIC=1;\n+    static const int CURRENT_VERSION=VERSION_BASIC;\n+    int nVersion;\n+    std::unique_ptr<Descriptor> m_descriptor;\n+    std::string m_descriptor_string;\n+    int64_t nCreateTime;\n+    uint64_t m_id;\n+    int m_purpose;\n+    FlatSigningProvider m_provider;\n+\n+    WalletDescriptor() {}\n+\n+    explicit WalletDescriptor(std::unique_ptr<Descriptor>descriptor_, int64_t nCreateTime_, uint64_t id_, int purpose_) :\n+        m_descriptor(std::move(descriptor_)), nCreateTime(nCreateTime_), m_id(id_), m_purpose(purpose_)\n+    {\n+        nVersion = WalletDescriptor::CURRENT_VERSION;\n+        m_descriptor_string = m_descriptor->ToString();\n+    }\n+\n+    explicit WalletDescriptor(std::string descriptor_string_, int64_t nCreateTime_, uint64_t id_, int purpose_) :\n+        m_descriptor_string(descriptor_string_), nCreateTime(nCreateTime_), m_id(id_), m_purpose(purpose_)\n+    {\n+        nVersion = WalletDescriptor::CURRENT_VERSION;\n+        // ReadKeyValue first initializes an empty WalletDescriptor\n+        if(m_descriptor_string.length()) {\n+            m_descriptor = Parse(m_descriptor_string, m_provider, /* require_checksum = */ true);\n+        }\n+    }\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action) {\n+        READWRITE(this->nVersion);\n+        READWRITE(m_id);\n+        READWRITE(m_descriptor_string);\n+        READWRITE(nCreateTime);\n+        READWRITE(m_purpose);\n+    }\n+};\n+\n /** Access to the wallet database.\n  * This represents a single transaction at the\n  * database. It will be committed when the object goes out of scope.\n@@ -198,6 +249,8 @@ class WalletBatch\n     bool WriteWatchOnly(const CScript &script, const CKeyMetadata &keymeta);\n     bool EraseWatchOnly(const CScript &script);\n \n+    bool WriteDescriptor(WalletDescriptor *wdesc);\n+\n     bool WriteBestBlock(const CBlockLocator& locator);\n     bool ReadBestBlock(CBlockLocator& locator);\n "
      }
    ]
  },
  {
    "sha": "d3fb62c82804f354438dad37dfb21d188f4728a1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkM2ZiNjJjODI4MDRmMzU0NDM4ZGFkMzdkZmIyMWQxODhmNDcyOGEx",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-26T21:07:40Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T10:30:47Z"
      },
      "message": "[rpc] add importdescriptor\n\nimportdescriptor replaces importmulti for descriptor based wallets.",
      "tree": {
        "sha": "7a149d678a20057ae3c632a637bc9206f822b084",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7a149d678a20057ae3c632a637bc9206f822b084"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3fb62c82804f354438dad37dfb21d188f4728a1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyTZ9cACgkQV/+b28ww\nEAnElg/+OSxaL7YaEO3JFOieX+m1QV+PKvWPRBnMW10oktI0hyadACHzr/bC9hin\n7JH8Shl6iwNvPGWKJAB7YHWykAgNHMBkvY+trmwLa/Ovr2BHYs52BVgG7si0qYdX\nvXfjb9inQywqzWQjE8dpHDkibKLmP4MequBsaz7VJJnzU75N019JgzgWr1hq+OoJ\nEbUBst5GqphiN7andJdOz9dGaznwJ3yu4e+mT2n5x4vn2PsHr1y6uyxa3JJ8P7Ma\nLAyRhcZZYTwsarAmvDxHIAJWZdLPf9iZjXvdOgl+TIJ/xM92ccU4XWtznslhWd/J\nHzkLQh19jc97v5EGwyFI1FxXDSNvcHzoWkWC7UqIwfjTvZA5kSVkhcBy3K7Frh4s\nVb4RYkEmz6vrgA501K8c7BgObWWUSCPQ/gVBamYEri8niOWFwKX+fEtBlS2gEe5z\ntT0EUtwqaDu+my8n7hCmnrD/xGcN4mY4eOgA5lNxLSDwXR6fqi0dau7EhCQO4woz\nPqZFssDPwgU5Ub47FHbO1Q03j2pD9cd2D8R0gB2HWWTDI7QZiBG84Sy00FL50vSH\niGpzXsmMzwkx7PgEqmK1LCk/z36BuXxRaWVnChvjN16cugn10DqZY8pIC/TTA1BS\n8P7O6GLLstKJlocLMgEEC+qFZQ8WKf/+ru+AWvHaWDeoMDpoFLI=\n=cWOm\n-----END PGP SIGNATURE-----",
        "payload": "tree 7a149d678a20057ae3c632a637bc9206f822b084\nparent 7e01e28f7ceae918d902efd122153755e71d0d59\nauthor Sjors Provoost <sjors@sprovoost.nl> 1551215260 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553164247 +0100\n\n[rpc] add importdescriptor\n\nimportdescriptor replaces importmulti for descriptor based wallets.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3fb62c82804f354438dad37dfb21d188f4728a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d3fb62c82804f354438dad37dfb21d188f4728a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3fb62c82804f354438dad37dfb21d188f4728a1/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7e01e28f7ceae918d902efd122153755e71d0d59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e01e28f7ceae918d902efd122153755e71d0d59",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7e01e28f7ceae918d902efd122153755e71d0d59"
      }
    ],
    "stats": {
      "total": 232,
      "additions": 229,
      "deletions": 3
    },
    "files": [
      {
        "sha": "faaff9267af33d33d613a383666e8baa33a50cce",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3fb62c82804f354438dad37dfb21d188f4728a1/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3fb62c82804f354438dad37dfb21d188f4728a1/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=d3fb62c82804f354438dad37dfb21d188f4728a1",
        "patch": "@@ -419,6 +419,7 @@ libbitcoin_consensus_a_SOURCES = \\\n libbitcoin_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n libbitcoin_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_common_a_SOURCES = \\\n+  addresstype.cpp \\\n   base58.cpp \\\n   bech32.cpp \\\n   chainparams.cpp \\"
      },
      {
        "sha": "e67f44249767a4374904fa082d7b2181fe1cab54",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3fb62c82804f354438dad37dfb21d188f4728a1/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3fb62c82804f354438dad37dfb21d188f4728a1/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=d3fb62c82804f354438dad37dfb21d188f4728a1",
        "patch": "@@ -121,6 +121,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"importprivkey\", 2, \"rescan\" },\n     { \"importaddress\", 2, \"rescan\" },\n     { \"importaddress\", 3, \"p2sh\" },\n+    { \"importdescriptor\", 1, \"options\" },\n     { \"importpubkey\", 2, \"rescan\" },\n     { \"importmulti\", 0, \"requests\" },\n     { \"importmulti\", 1, \"options\" },"
      },
      {
        "sha": "a0e8e62f76777e4867b01dba7116a3580c7d1fca",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 155,
        "deletions": 3,
        "changes": 158,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3fb62c82804f354438dad37dfb21d188f4728a1/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3fb62c82804f354438dad37dfb21d188f4728a1/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=d3fb62c82804f354438dad37dfb21d188f4728a1",
        "patch": "@@ -2,11 +2,13 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <addresstype.h>\n #include <chain.h>\n #include <core_io.h>\n #include <interfaces/chain.h>\n #include <key_io.h>\n #include <merkleblock.h>\n+#include <optional.h>\n #include <rpc/server.h>\n #include <rpc/util.h>\n #include <script/descriptor.h>\n@@ -1315,7 +1317,7 @@ static UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, con\n     return result;\n }\n \n-static int64_t GetImportTimestamp(const UniValue& data, int64_t now)\n+static int64_t GetImportTimestamp(const UniValue& data, int64_t now, bool required=true)\n {\n     if (data.exists(\"timestamp\")) {\n         const UniValue& timestamp = data[\"timestamp\"];\n@@ -1326,7 +1328,10 @@ static int64_t GetImportTimestamp(const UniValue& data, int64_t now)\n         }\n         throw JSONRPCError(RPC_TYPE_ERROR, strprintf(\"Expected number or \\\"now\\\" timestamp value for key. got type %s\", uvTypeName(timestamp.type())));\n     }\n-    throw JSONRPCError(RPC_TYPE_ERROR, \"Missing required timestamp field for key\");\n+    if (required) {\n+        throw JSONRPCError(RPC_TYPE_ERROR, \"Missing required timestamp field for key\");\n+    }\n+    return now;\n }\n \n UniValue importmulti(const JSONRPCRequest& mainRequest)\n@@ -1337,6 +1342,10 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n         return NullUniValue;\n     }\n \n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Use importdescriptor for this wallet.\");\n+    }\n+\n     if (mainRequest.fHelp || mainRequest.params.size() < 1 || mainRequest.params.size() > 2)\n         throw std::runtime_error(\n             RPCHelpMan{\"importmulti\",\n@@ -1448,7 +1457,8 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n         for (const UniValue& data : requests.getValues()) {\n             const int64_t timestamp = std::max(GetImportTimestamp(data, now), minimumTimestamp);\n-            const UniValue result = ProcessImport(pwallet, data, timestamp);\n+            UniValue result;\n+            result = ProcessImport(pwallet, data, timestamp);\n             response.push_back(result);\n \n             if (!fRescan) {\n@@ -1509,3 +1519,145 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     return response;\n }\n+\n+UniValue importdescriptor(const JSONRPCRequest& request)\n+{\n+    std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+    CWallet* const pwallet = wallet.get();\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"importdescriptor\",\n+                \"\\nImports scripts / addresses via an output descriptor, optionally rescanning the blockchain from the earliest creation time of the imported scripts. Requires a new wallet backup.\\n\"\n+                \"\\nNote: This call can take over an hour to complete if rescan is true, during that time, other rpc calls\\n\"\n+                \"may report that the imported keys, addresses or scripts exists but related transactions are still missing.\\n\",\n+                {\n+                    {\"desc\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Descriptor to import. Private keys will be ignored.\"},\n+                    {\"options\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED_NAMED_ARG, \"\",\n+                        {\n+                            {\"change\", RPCArg::Type::BOOL, /* default */ \"false\", \"Stating whether matching outputs should be treated as not incoming payments\"},\n+                            {\"address_source\", RPCArg::Type::BOOL, /* default */ \"false\", \"Use for getnewaddress and to generate change addresses (similar to keypool). There be no more than one receive or change address source per address type (legacy and bech32).\"},\n+                            {\"rescan\", RPCArg::Type::BOOL, /* default */ \"true\", \"Stating if should rescan the blockchain after all imports\"},\n+                            {\"timestamp\", RPCArg::Type::NUM, /* default */ \"now\", \"Creation time of the key in seconds since epoch (Jan 1 1970 GMT),\\n\"\n+\"                                                              or the string \\\"now\\\" to substitute the current synced blockchain time. This\\n\"\n+\"                                                              will determine how far back blockchain rescans need to begin for missing wallet transactions.\\n\"\n+\"                                                              \\\"now\\\" can be specified to bypass scanning, for keys which are known to never have been used.\\n\"\n+\"                                                              The past two hours are always scanned. 0 can be specified to scan the entire blockchain.\",\n+                                /* oneline_description */ \"\", {\"timestamp | \\\"now\\\"\", \"integer / string\"}\n+                            },\n+\n+                        },\n+                    }\n+                },\n+                RPCResult{\n+            \"  {\\\"success\\\": true}\\n\"\n+                },\n+                RPCExamples{\"\"},\n+            }.ToString()\n+        );\n+\n+    if (!pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"This is not a descriptor based wallet. Use importmulti instead.\");\n+    }\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VOBJ});\n+\n+    const std::string& descriptor = request.params[0].get_str();\n+\n+    //Default options\n+    bool fRescan = true;\n+\n+    const UniValue& options = request.params[1];\n+\n+    if (options.exists(\"rescan\")) {\n+        fRescan = options[\"rescan\"].get_bool();\n+    }\n+\n+    const bool change = options.exists(\"change\") ? options[\"change\"].get_bool() : false;\n+    const bool address_source = options.exists(\"address_source\") ? options[\"address_source\"].get_bool() : false;\n+\n+    WalletRescanReserver reserver(pwallet);\n+    if (fRescan && !reserver.reserve()) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n+    }\n+\n+    int64_t now = 0;\n+    bool fRunRescan = false;\n+    int64_t nRescanTimestamp = 0;\n+\n+    FlatSigningProvider keys;\n+    auto parsed_desc = Parse(descriptor, keys, /* require_checksum = */ true);\n+    if (!parsed_desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Descriptor is invalid\");\n+    }\n+\n+    if (!parsed_desc->IsSolvable()) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Descriptor must be solvable\");\n+    }\n+\n+    {\n+        auto locked_chain = pwallet->chain().lock();\n+        LOCK(pwallet->cs_wallet);\n+        EnsureWalletIsUnlocked(pwallet);\n+\n+        if (pwallet->HaveDescriptor(parsed_desc.get())) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Descriptor already in wallet\");\n+        }\n+\n+        int purpose = 0;\n+        if (address_source) {\n+            purpose = change ? DESCRIPTOR_PURPOSE_CHANGE_CURRENT : DESCRIPTOR_PURPOSE_RECEIVE_CURRENT;\n+        } else {\n+            purpose = change ? DESCRIPTOR_PURPOSE_CHANGE_ARCHIVE : DESCRIPTOR_PURPOSE_RECEIVE_ARCHIVE;\n+        }\n+\n+        Optional<AddressType>address_type = parsed_desc->GetAddressType();\n+        if (address_type == nullopt) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Descriptor can't generate addresses\");\n+        }\n+\n+        if (address_source && pwallet->HaveAddressSourceDescriptor(change, *address_type)) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Wallet already contains a %s %s descriptor.\", FormatAddressType(*address_type), change ? \"change\" : \"receive\"));\n+        }\n+\n+        // Verify all timestamps are present before importing any keys.\n+        const Optional<int> tip_height = locked_chain->getHeight();\n+        now = tip_height ? locked_chain->getBlockMedianTimePast(*tip_height) : 0;\n+        const int64_t minimumTimestamp = 1;\n+        nRescanTimestamp = std::max(GetImportTimestamp(options, now, false), minimumTimestamp);\n+\n+        pwallet->MarkDirty();\n+\n+        if (!pwallet->AddDescriptor(std::move(parsed_desc), purpose, nRescanTimestamp)) {\n+             throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding descriptor to wallet\");\n+        }\n+        pwallet->UpdateTimeFirstKey(nRescanTimestamp);\n+    }\n+    if (fRunRescan) {\n+        int64_t scannedTime = pwallet->RescanFromTime(nRescanTimestamp, reserver, true /* update */);\n+        pwallet->ReacceptWalletTransactions();\n+\n+        if (pwallet->IsAbortingRescan()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted by user.\");\n+        }\n+        if (scannedTime > nRescanTimestamp) {\n+            throw JSONRPCError(RPC_MISC_ERROR,\n+                strprintf(\"Rescan failed for key with creation timestamp %d. There was an error reading a \"\n+                          \"block from time %d, which is after or within %d seconds of key creation, and \"\n+                          \"could contain transactions pertaining to the key. As a result, transactions \"\n+                          \"and coins using this key may not appear in the wallet. This error could be \"\n+                          \"caused by pruning or data corruption (see bitcoind log for details) and could \"\n+                          \"be dealt with by downloading and rescanning the relevant blocks (see -reindex \"\n+                          \"and -rescan options).\",\n+                    nRescanTimestamp, scannedTime - TIMESTAMP_WINDOW - 1, TIMESTAMP_WINDOW)\n+            );\n+        }\n+    }\n+\n+    UniValue result = UniValue(UniValue::VOBJ);\n+    result.pushKV(\"success\", UniValue(true));\n+    return result;\n+}"
      },
      {
        "sha": "67acf1e1ae1d145d9a133e27d4c07c0ee5dc3759",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3fb62c82804f354438dad37dfb21d188f4728a1/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3fb62c82804f354438dad37dfb21d188f4728a1/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=d3fb62c82804f354438dad37dfb21d188f4728a1",
        "patch": "@@ -4100,6 +4100,7 @@ UniValue abortrescan(const JSONRPCRequest& request); // in rpcdump.cpp\n UniValue dumpprivkey(const JSONRPCRequest& request); // in rpcdump.cpp\n UniValue importprivkey(const JSONRPCRequest& request);\n UniValue importaddress(const JSONRPCRequest& request);\n+UniValue importdescriptor(const JSONRPCRequest& request); // in rpcdump.cpp\n UniValue importpubkey(const JSONRPCRequest& request);\n UniValue dumpwallet(const JSONRPCRequest& request);\n UniValue importwallet(const JSONRPCRequest& request);\n@@ -4133,6 +4134,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"getunconfirmedbalance\",            &getunconfirmedbalance,         {} },\n     { \"wallet\",             \"getwalletinfo\",                    &getwalletinfo,                 {} },\n     { \"wallet\",             \"importaddress\",                    &importaddress,                 {\"address\",\"label\",\"rescan\",\"p2sh\"} },\n+    { \"wallet\",             \"importdescriptor\",                 &importdescriptor,              {\"desc\",\"options\"} },\n     { \"wallet\",             \"importmulti\",                      &importmulti,                   {\"requests\",\"options\"} },\n     { \"wallet\",             \"importprivkey\",                    &importprivkey,                 {\"privkey\",\"label\",\"rescan\"} },\n     { \"wallet\",             \"importprunedfunds\",                &importprunedfunds,             {\"rawtransaction\",\"txoutproof\"} },"
      },
      {
        "sha": "7939de8380b9132f7eb62bc18d04749e977a1665",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3fb62c82804f354438dad37dfb21d188f4728a1/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3fb62c82804f354438dad37dfb21d188f4728a1/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=d3fb62c82804f354438dad37dfb21d188f4728a1",
        "patch": "@@ -90,6 +90,7 @@\n     'p2p_sendheaders.py',\n     'wallet_zapwallettxes.py',\n     'wallet_importmulti.py',\n+    'wallet_importdescriptor.py',\n     'mempool_limit.py',\n     'rpc_txoutproof.py',\n     'wallet_listreceivedby.py',"
      },
      {
        "sha": "d35bc513404293737f461a3e42534988ec61ff37",
        "filename": "test/functional/wallet_importdescriptor.py",
        "status": "added",
        "additions": 68,
        "deletions": 0,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3fb62c82804f354438dad37dfb21d188f4728a1/test/functional/wallet_importdescriptor.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3fb62c82804f354438dad37dfb21d188f4728a1/test/functional/wallet_importdescriptor.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importdescriptor.py?ref=d3fb62c82804f354438dad37dfb21d188f4728a1",
        "patch": "@@ -0,0 +1,68 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the importdescriptor RPC.\n+\n+Test importdescriptor by generating keys on node0, importing descriptors on node1\n+and then testing the address info for the different address variants.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.descriptors import descsum_create\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error\n+)\n+\n+class ImportDescriptorTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-addresstype=legacy\"], [\"-addresstype=legacy\"]]\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Mining blocks...\")\n+        self.nodes[0].generate(1)\n+        self.nodes[1].generate(1)\n+        timestamp = self.nodes[1].getblock(self.nodes[1].getbestblockhash())['mediantime']\n+\n+        xpub = \"tpubDAXcJ7s7ZwicqjprRaEWdPoHKrCS215qxGYxpusRLLmJuT69ZSicuGdSfyvyKpvUNYBW1s2U3NSrT6vrCYB9e6nZUEvrqnwXPF8ArTCRXMY\"\n+\n+        # Import into native descriptor wallet\n+        self.log.info(\"Should import into a descriptor wallet\")\n+        self.nodes[1].createwallet(wallet_name=\"descriptor\", disable_private_keys=True, blank=True, descriptor=True)\n+        wrpc = self.nodes[1].get_wallet_rpc(\"descriptor\")\n+\n+        # addr1 = self.nodes[0].getnewaddress()\n+        # addr2 = self.nodes[0].getnewaddress()\n+        # pub1 = self.nodes[0].getaddressinfo(addr1)['pubkey']\n+        # pub2 = self.nodes[0].getaddressinfo(addr2)['pubkey']\n+        result = wrpc.importdescriptor(descsum_create('wpkh(' + xpub + '/0/*)'), {\"timestamp\": timestamp, \"address_source\": True})\n+        assert_equal(result, {'success': True})\n+        result = wrpc.importdescriptor(descsum_create('sh(wpkh(' + xpub + '/0/*))'), {\"timestamp\": timestamp, \"address_source\": True})\n+        assert_equal(result, {'success': True})\n+        result = wrpc.importdescriptor(descsum_create('wpkh(' + xpub + '/1/*)'), {\"change\": True, \"address_source\": True})\n+        assert_equal(result, {'success': True})\n+        result = wrpc.importdescriptor(descsum_create('sh(wpkh(' + xpub + '/1/*))'), {\"change\": True, \"address_source\": True})\n+        assert_equal(result, {'success': True})\n+\n+\n+        self.log.info(\"Should not import the same descriptor twice\")\n+        assert_raises_rpc_error(-4, 'Descriptor already in wallet', wrpc.importdescriptor, descsum_create('wpkh(' + xpub + '/0/*)'))\n+\n+        self.log.info(\"Should only import one receive/change descriptor per address type for address source\")\n+        assert_raises_rpc_error(-4, 'Wallet already contains a bech32 receive descriptor.', wrpc.importdescriptor, descsum_create('wpkh(' + xpub + '/2/*)'), {\"address_source\": True})\n+        assert_raises_rpc_error(-4, 'Wallet already contains a legacy change descriptor.', wrpc.importdescriptor, descsum_create('sh(wpkh(' + xpub + '/2/*))'), {\"change\": True, \"address_source\": True})\n+\n+        self.log.info(\"Can import multiple receive/change descriptor per address type for non address source\")\n+        wrpc.importdescriptor(descsum_create('wpkh(' + xpub + '/2/*)'))\n+        wrpc.importdescriptor(descsum_create('sh(wpkh(' + xpub + '/2/*))'), {\"internal\": True})\n+\n+if __name__ == '__main__':\n+    ImportDescriptorTest().main()"
      },
      {
        "sha": "cd19a8b908ef22ad517778f9b45b7ac60ee593f9",
        "filename": "test/functional/wallet_importmulti.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3fb62c82804f354438dad37dfb21d188f4728a1/test/functional/wallet_importmulti.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3fb62c82804f354438dad37dfb21d188f4728a1/test/functional/wallet_importmulti.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importmulti.py?ref=d3fb62c82804f354438dad37dfb21d188f4728a1",
        "patch": "@@ -813,5 +813,6 @@ def run_test(self):\n             addr = wrpc.getnewaddress('', 'bech32')\n             assert_equal(addr, addresses[i])\n \n+\n if __name__ == '__main__':\n     ImportMultiTest().main()"
      }
    ]
  },
  {
    "sha": "c3d226b0cc6d752f2b86ca788e4ffa9cdf4f9876",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjM2QyMjZiMGNjNmQ3NTJmMmI4NmNhNzg4ZTRmZmE5Y2RmNGY5ODc2",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-26T21:08:13Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T10:30:48Z"
      },
      "message": "[rpc] dumpwallet: dump descriptors",
      "tree": {
        "sha": "37e8f795663b06b91d43e52b3062fad09ae64b7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37e8f795663b06b91d43e52b3062fad09ae64b7a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3d226b0cc6d752f2b86ca788e4ffa9cdf4f9876",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyTZ9gACgkQV/+b28ww\nEAm0VQ//UfTyOWc6V/IM2YW+qCSsFc/YYQJEKO/d+Qgo0bneSO/E+O5B7x7xsKrT\nd/jMX0CldYMc5Yhs4L6rRqeyD5uV0Ysqs7EZDENLdxsZrOMF0JgLpQwl3S9MD+UN\nAL8VTZ4agIAi7/JlQhIIsvFmi/sunicMeRWn80pGGpC10uOj8BefQUFwTqTfbIY2\n68y8q0og32KbewMGLTCCFoV3roCF7+Jym8yIrgJG6ixvg1RUXqSJV54yRh85Xkla\nuiRvRLg8pQnmbYsj8APi3K/IW/lO5mGz+mh7r83pYvnCFdgI4gXrtwWOWE1vadwE\nG6ttMSo5772pCh8tYKxIW9HwY2xOWbVnidOZkwHFQaisdeElJ1KT76twcnXFEPS0\n67sqjPUFmOSt3+JmoTids5+Tp+uTmuwACrEN3mRUD6nGCWfh3iDVLC6jdDzUFzYP\npGnrT81UoET8s1uKV6lJTVuZnjgRvPNXiHB3FaukU1T3cyWe77TnK9ZdDiZTIqmR\nO1meA+cKdT0siyncOWkVtz5Nywq7qnEWQaG1KlUAJZ+k5+2bckbH/k9hu5eZ29gC\nCq9wvnUsFlZRDNoXAYpZ1S9UErmOO2ofegQh29MrlosNjBm7Oyb6n5QvCbmXt8Wi\n6QhpPBtFQDJXYtdJeaOXG27IVfPfdJeUpih6zXyhMeW1V5tB7u8=\n=RMgM\n-----END PGP SIGNATURE-----",
        "payload": "tree 37e8f795663b06b91d43e52b3062fad09ae64b7a\nparent d3fb62c82804f354438dad37dfb21d188f4728a1\nauthor Sjors Provoost <sjors@sprovoost.nl> 1551215293 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553164248 +0100\n\n[rpc] dumpwallet: dump descriptors\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3d226b0cc6d752f2b86ca788e4ffa9cdf4f9876",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c3d226b0cc6d752f2b86ca788e4ffa9cdf4f9876",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3d226b0cc6d752f2b86ca788e4ffa9cdf4f9876/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d3fb62c82804f354438dad37dfb21d188f4728a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3fb62c82804f354438dad37dfb21d188f4728a1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d3fb62c82804f354438dad37dfb21d188f4728a1"
      }
    ],
    "stats": {
      "total": 99,
      "additions": 54,
      "deletions": 45
    },
    "files": [
      {
        "sha": "1e73770ef99cd5240b60c51d48ef872a16a3ec4a",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 45,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3d226b0cc6d752f2b86ca788e4ffa9cdf4f9876/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3d226b0cc6d752f2b86ca788e4ffa9cdf4f9876/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=c3d226b0cc6d752f2b86ca788e4ffa9cdf4f9876",
        "patch": "@@ -826,53 +826,62 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     file << strprintf(\"#   mined on %s\\n\", tip_height ? FormatISO8601DateTime(locked_chain->getBlockTime(*tip_height)) : \"(missing block time)\");\n     file << \"\\n\";\n \n-    // add the base58check encoded extended master if the wallet uses HD\n-    CKeyID seed_id = pwallet->GetHDChain().seed_id;\n-    if (!seed_id.IsNull())\n-    {\n-        CKey seed;\n-        if (pwallet->GetKey(seed_id, seed)) {\n-            CExtKey masterKey;\n-            masterKey.SetSeed(seed.begin(), seed.size());\n-\n-            file << \"# extended private masterkey: \" << EncodeExtKey(masterKey) << \"\\n\\n\";\n-        }\n-    }\n-    for (std::vector<std::pair<int64_t, CKeyID> >::const_iterator it = vKeyBirth.begin(); it != vKeyBirth.end(); it++) {\n-        const CKeyID &keyid = it->second;\n-        std::string strTime = FormatISO8601DateTime(it->first);\n-        std::string strAddr;\n-        std::string strLabel;\n-        CKey key;\n-        if (pwallet->GetKey(keyid, key)) {\n-            file << strprintf(\"%s %s \", EncodeSecret(key), strTime);\n-            if (GetWalletAddressesForKey(pwallet, keyid, strAddr, strLabel)) {\n-               file << strprintf(\"label=%s\", strLabel);\n-            } else if (keyid == seed_id) {\n-                file << \"hdseed=1\";\n-            } else if (mapKeyPool.count(keyid)) {\n-                file << \"reserve=1\";\n-            } else if (pwallet->mapKeyMetadata[keyid].hdKeypath == \"s\") {\n-                file << \"inactivehdseed=1\";\n-            } else {\n-                file << \"change=1\";\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+        for (auto& p : pwallet->m_descriptors) {\n+            file << strprintf(\"%lu \", p.second->m_id);\n+            file << strprintf(\"%d \", p.second->m_purpose);\n+            file << strprintf(\"%s\", p.second->m_descriptor->ToString().c_str());\n+            file << \"\\n\";\n+        }\n+    } else {\n+        // add the base58check encoded extended master if the wallet uses HD\n+        CKeyID seed_id = pwallet->GetHDChain().seed_id;\n+        if (!seed_id.IsNull())\n+        {\n+            CKey seed;\n+            if (pwallet->GetKey(seed_id, seed)) {\n+                CExtKey masterKey;\n+                masterKey.SetSeed(seed.begin(), seed.size());\n+\n+                file << \"# extended private masterkey: \" << EncodeExtKey(masterKey) << \"\\n\\n\";\n             }\n-            file << strprintf(\" # addr=%s%s\\n\", strAddr, (pwallet->mapKeyMetadata[keyid].has_key_origin ? \" hdkeypath=\"+WriteHDKeypath(pwallet->mapKeyMetadata[keyid].key_origin.path) : \"\"));\n         }\n-    }\n-    file << \"\\n\";\n-    for (const CScriptID &scriptid : scripts) {\n-        CScript script;\n-        std::string create_time = \"0\";\n-        std::string address = EncodeDestination(scriptid);\n-        // get birth times for scripts with metadata\n-        auto it = pwallet->m_script_metadata.find(scriptid);\n-        if (it != pwallet->m_script_metadata.end()) {\n-            create_time = FormatISO8601DateTime(it->second.nCreateTime);\n-        }\n-        if(pwallet->GetCScript(scriptid, script)) {\n-            file << strprintf(\"%s %s script=1\", HexStr(script.begin(), script.end()), create_time);\n-            file << strprintf(\" # addr=%s\\n\", address);\n+        for (std::vector<std::pair<int64_t, CKeyID> >::const_iterator it = vKeyBirth.begin(); it != vKeyBirth.end(); it++) {\n+            const CKeyID &keyid = it->second;\n+            std::string strTime = FormatISO8601DateTime(it->first);\n+            std::string strAddr;\n+            std::string strLabel;\n+            CKey key;\n+            if (pwallet->GetKey(keyid, key)) {\n+                file << strprintf(\"%s %s \", EncodeSecret(key), strTime);\n+                if (GetWalletAddressesForKey(pwallet, keyid, strAddr, strLabel)) {\n+                   file << strprintf(\"label=%s\", strLabel);\n+                } else if (keyid == seed_id) {\n+                    file << \"hdseed=1\";\n+                } else if (mapKeyPool.count(keyid)) {\n+                    file << \"reserve=1\";\n+                } else if (pwallet->mapKeyMetadata[keyid].hdKeypath == \"s\") {\n+                    file << \"inactivehdseed=1\";\n+                } else {\n+                    file << \"change=1\";\n+                }\n+                file << strprintf(\" # addr=%s%s\\n\", strAddr, (pwallet->mapKeyMetadata[keyid].has_key_origin ? \" hdkeypath=\"+WriteHDKeypath(pwallet->mapKeyMetadata[keyid].key_origin.path) : \"\"));\n+            }\n+        }\n+        file << \"\\n\";\n+        for (const CScriptID &scriptid : scripts) {\n+            CScript script;\n+            std::string create_time = \"0\";\n+            std::string address = EncodeDestination(scriptid);\n+            // get birth times for scripts with metadata\n+            auto it = pwallet->m_script_metadata.find(scriptid);\n+            if (it != pwallet->m_script_metadata.end()) {\n+                create_time = FormatISO8601DateTime(it->second.nCreateTime);\n+            }\n+            if(pwallet->GetCScript(scriptid, script)) {\n+                file << strprintf(\"%s %s script=1\", HexStr(script.begin(), script.end()), create_time);\n+                file << strprintf(\" # addr=%s\\n\", address);\n+            }\n         }\n     }\n     file << \"\\n\";"
      }
    ]
  },
  {
    "sha": "fff1afd538d9cf59ad3f7c793d315b398033efae",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZmYxYWZkNTM4ZDljZjU5YWQzZjdjNzkzZDMxNWIzOTgwMzNlZmFl",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-26T21:08:46Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T10:30:48Z"
      },
      "message": "[rpc] importwallet: no descriptor import",
      "tree": {
        "sha": "58843e0a2071358851ff1594d4e782cdbc6628bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/58843e0a2071358851ff1594d4e782cdbc6628bb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fff1afd538d9cf59ad3f7c793d315b398033efae",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyTZ9gACgkQV/+b28ww\nEAmmWQ/8DAVPvWsdebEPF7lrXlUhpIipsq7QisCCqOSoki2w5+2zV1VFcTV9kxsI\nbNgkBdqX5PJ/emLqnTK6zdORVqKz8p20FcLeK0fANlf7tMLCo/cYm151ShkZypCd\nfdGgxlN3E977GHBaC1I4ETSUulGJTTv753GXijdZAD7qL3F/+EeKlip5o4GxmwB1\nfuNaRUVhIxSm/XxgnSfIKEuX2QRJEm0HPnnmMlld27Op6lC9xqVT8atlE4jw8t/7\neMbGqoDvKdEe0zE7+BRJD7TEYQrFXvecZ7EJUzWQm1NQnF1fnlVgZZwB6oyDQmqV\naXCIa+W/LpmjU/OtBOSKmVrvAnuAIwagCNRfhwMMpZjiPRnCTcPvxhbyTH9b0APR\n9pRQ4fR9qX3d+17+jG2yZBMCPO9yRwrD5QGTWTEIUUkct75GMY+BQvutGtkZNq1s\nCqYhyOmRHtVb8nnClzkVtS+wXUvhDFatkOfiuuX6Giy1CqEmIeOb4WQKsIs6N032\nsYNUWJlGU69RIsj9fte/UEkkVtQMI04X4ECdSR3SFaiEK2X6l5NkGTqe5i2HslvA\neSaQYkomTMP5MhcPqAMcXJWgtAoUk5LGY59AtJYBcXKd2Bxv0lID1PjM7gQaISs7\nRecah3GaZ6XAqRV6FQrGKDbKmvKWu5ex7g57mvzirGLC9B2tcPM=\n=BK8Z\n-----END PGP SIGNATURE-----",
        "payload": "tree 58843e0a2071358851ff1594d4e782cdbc6628bb\nparent c3d226b0cc6d752f2b86ca788e4ffa9cdf4f9876\nauthor Sjors Provoost <sjors@sprovoost.nl> 1551215326 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553164248 +0100\n\n[rpc] importwallet: no descriptor import\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fff1afd538d9cf59ad3f7c793d315b398033efae",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fff1afd538d9cf59ad3f7c793d315b398033efae",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fff1afd538d9cf59ad3f7c793d315b398033efae/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c3d226b0cc6d752f2b86ca788e4ffa9cdf4f9876",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3d226b0cc6d752f2b86ca788e4ffa9cdf4f9876",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c3d226b0cc6d752f2b86ca788e4ffa9cdf4f9876"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e820a687b715bd3a0a5d8074cf2d604cb5fc8218",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fff1afd538d9cf59ad3f7c793d315b398033efae/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fff1afd538d9cf59ad3f7c793d315b398033efae/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=fff1afd538d9cf59ad3f7c793d315b398033efae",
        "patch": "@@ -567,6 +567,10 @@ UniValue importwallet(const JSONRPCRequest& request)\n                 },\n             }.ToString());\n \n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot import a descriptor based wallet\");\n+    }\n+\n     if (pwallet->chain().getPruneMode()) {\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Importing wallets is disabled in pruned mode\");\n     }"
      }
    ]
  },
  {
    "sha": "b8ff7b1412d9eda7c01008b6e7672d4ec90baf98",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOGZmN2IxNDEyZDllZGE3YzAxMDA4YjZlNzY3MmQ0ZWM5MGJhZjk4",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-16T21:40:07Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:07:16Z"
      },
      "message": "[wallet] descriptor address serialization + derivation",
      "tree": {
        "sha": "0d03a36d047b8e09b9ab24eba7b006fc39479488",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d03a36d047b8e09b9ab24eba7b006fc39479488"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b8ff7b1412d9eda7c01008b6e7672d4ec90baf98",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyT0tQACgkQV/+b28ww\nEAnZ9xAAimlqoEiIhUChhKrtSNwDrqUWNub2mMHAy6uaF4qCi0UgAtqB1+37VtMz\ny1SAApRP41rLXGmPpe3pSAWee14MeBvt25seBPaMR5F1b8QX7+e3zg00/D+5eZ0a\nXKYISI70y5N2ipKHaBR264Z3nKaKQFCXobxSBxv7ux0NrB5YlU8OuDH9WLvTVCCS\n8TZ86F+36/ZJtetPZcqWGrZLV9Whe5ZNxINef3CZ7bWiLRw/u+1A+rcpn96r2NT1\nmCFwVVnBiLM7PDW3OqFYEqw+YjkYLCFy7zHcUwxOH9myw24AcytIV0WsVyhtORuu\nx+SVIak+EwwumLI99stS97JlNssEdxxFfPmv7gfzoQaBPGztDkrU777B4CtCcmY8\n+IJR2V91rix147rD1CKj6N3hvcHN8rx/WM0XebDHr6ltemcelTCF0axBISYMaD2n\n3EOMsL21yjexy+ypMbVXGka9Cb9hdGUsVfyhcpDSitSGMSP+km7e2R2M5V6c44Gw\n4flFl8Vqq2OK6Z4yb/JZUD8unqnzReGZAzg/NDH/mOrUh6YV7RuVjHBaPCyBPpry\neLJexYCDnJdGJiJbVY8YSaITrG9XHXvO9Lq0QlfeUkGKF7Pd1msG37QtWEl+vPIL\nevYnMU/XpE1jpsLBXkXryuO5RouCbu9ck7M3pr1JrKAtLm00OwQ=\n=FbQW\n-----END PGP SIGNATURE-----",
        "payload": "tree 0d03a36d047b8e09b9ab24eba7b006fc39479488\nparent fff1afd538d9cf59ad3f7c793d315b398033efae\nauthor Sjors Provoost <sjors@sprovoost.nl> 1552772407 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553191636 +0100\n\n[wallet] descriptor address serialization + derivation\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8ff7b1412d9eda7c01008b6e7672d4ec90baf98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b8ff7b1412d9eda7c01008b6e7672d4ec90baf98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8ff7b1412d9eda7c01008b6e7672d4ec90baf98/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fff1afd538d9cf59ad3f7c793d315b398033efae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fff1afd538d9cf59ad3f7c793d315b398033efae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fff1afd538d9cf59ad3f7c793d315b398033efae"
      }
    ],
    "stats": {
      "total": 139,
      "additions": 139,
      "deletions": 0
    },
    "files": [
      {
        "sha": "93d99ee2d5c56c19c34dd880406d90ca6efccb2e",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b8ff7b1412d9eda7c01008b6e7672d4ec90baf98/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b8ff7b1412d9eda7c01008b6e7672d4ec90baf98/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=b8ff7b1412d9eda7c01008b6e7672d4ec90baf98",
        "patch": "@@ -527,6 +527,68 @@ bool CWallet::HaveAddressSourceDescriptor(bool internal, AddressType address_typ\n     return false;\n }\n \n+bool CWallet::PickFromAddressSourceDescriptor(CTxDestination &newAddress, bool internal, AddressType address_type, std::string label)\n+{\n+    for (auto& pair : m_descriptors) {\n+        if (\n+            pair.second->m_purpose == (internal ? DESCRIPTOR_PURPOSE_CHANGE_CURRENT : DESCRIPTOR_PURPOSE_RECEIVE_CURRENT)\n+            && pair.second->m_descriptor->GetAddressType() == address_type\n+        ) {\n+            auto& desc = pair.second->m_descriptor;\n+\n+            int64_t index = pair.second->m_addresses.size();\n+\n+            FlatSigningProvider provider;\n+            std::vector<CScript> scripts;\n+            std::vector<unsigned char> cache;\n+            if (!desc->Expand(index, pair.second->m_provider, scripts, pair.second->m_provider, &cache)) {\n+                // Cannot derive script without private keys\n+                assert(false);\n+            }\n+\n+            assert(scripts.size() == 1);\n+\n+            if (!ExtractDestination(scripts[0], newAddress)) {\n+                // Descriptor does not have a corresponding address (this is prevented by importdescriptor)\n+                assert(false);\n+            }\n+\n+            // TODO: notification similar to NotifyAddressBookChanged\n+\n+            if (!AddDescriptorAddress(pair.second->m_id, index, label, &cache)) {\n+                assert(false);\n+            }\n+\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n+bool CWallet::LoadDescriptorAddress(uint64_t wdesc_id, uint64_t index, DescriptorAddress dAddr)\n+{\n+    assert(m_descriptors.size() >= wdesc_id); // WalletDescriptor is stored and loaded before its WalletAddress entries\n+    auto &wDesc = m_descriptors[wdesc_id];\n+    assert(wDesc->m_addresses.size() == index); // WalletAddress entries are stored and loaded in sequence\n+    wDesc->m_addresses.push_back(dAddr);\n+    return true;\n+}\n+\n+bool CWallet::AddDescriptorAddress(uint64_t wdesc_id, uint64_t index, std::string label, std::vector<unsigned char>* cache)\n+{\n+    assert(m_descriptors.size() >= wdesc_id);\n+    int64_t nCreateTime = GetTime();\n+    assert(cache != nullptr);\n+    DescriptorAddress dAddr(nCreateTime, index, label, *cache);\n+\n+    if (!WalletBatch(*database).WriteDescriptorAddress(wdesc_id, dAddr)) {\n+        return false;\n+    }\n+\n+    bool res = LoadDescriptorAddress(wdesc_id, index, dAddr);\n+    return res;\n+}\n+\n bool CWallet::Unlock(const SecureString& strWalletPassphrase, bool accept_no_keys)\n {\n     CCrypter crypter;"
      },
      {
        "sha": "ccd5678a99013f7efdae12162265084dca82cbee",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b8ff7b1412d9eda7c01008b6e7672d4ec90baf98/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b8ff7b1412d9eda7c01008b6e7672d4ec90baf98/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=b8ff7b1412d9eda7c01008b6e7672d4ec90baf98",
        "patch": "@@ -911,6 +911,11 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     bool AddDescriptor(std::unique_ptr<Descriptor>descriptor, int purpose, int64_t nCreateTime) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool HaveAddressSourceDescriptor(bool internal, AddressType address_type) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n+    bool PickFromAddressSourceDescriptor(CTxDestination &newAddress, bool internal, AddressType address_type, std::string label) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+\n+    bool LoadDescriptorAddress(uint64_t wdesc_id, uint64_t index, DescriptorAddress dAddr) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool AddDescriptorAddress(uint64_t wdesc_id, uint64_t index, std::string label, std::vector<unsigned char>* cache) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+\n     //! Holds a timestamp at which point the wallet is scheduled (externally) to be relocked. Caller must arrange for actual relocking to occur via Lock().\n     int64_t nRelockTime = 0;\n "
      },
      {
        "sha": "edf4bc480ef7237be511370a58575feb577b2dbc",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b8ff7b1412d9eda7c01008b6e7672d4ec90baf98/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b8ff7b1412d9eda7c01008b6e7672d4ec90baf98/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=b8ff7b1412d9eda7c01008b6e7672d4ec90baf98",
        "patch": "@@ -21,6 +21,23 @@\n \n #include <boost/thread.hpp>\n \n+//\n+// WalletDescriptor\n+//\n+\n+CTxDestination WalletDescriptor::GetDestination(DescriptorAddress& dAddr) {\n+    std::vector<CScript> output_scripts;\n+    bool success = m_descriptor->ExpandFromCache(dAddr.m_index, dAddr.m_cache, output_scripts, m_provider);\n+    assert(success);\n+    assert(output_scripts.size() == 1);\n+\n+    CTxDestination dest;\n+    success = ExtractDestination(output_scripts[0], dest);\n+    assert(success);\n+\n+    return dest;\n+}\n+\n //\n // WalletBatch\n //\n@@ -125,6 +142,11 @@ bool WalletBatch::WriteDescriptor(WalletDescriptor* wdesc)\n     return WriteIC(std::make_pair(std::string(\"descriptor\"), wdesc->m_id), *wdesc, true);\n }\n \n+bool WalletBatch::WriteDescriptorAddress(uint64_t wdesc_id, DescriptorAddress& descAddr)\n+{\n+    return WriteIC(std::make_pair(std::string(\"descriptor_address\"), std::make_pair(wdesc_id, descAddr.m_index)), descAddr, true);\n+}\n+\n bool WalletBatch::WriteBestBlock(const CBlockLocator& locator)\n {\n     WriteIC(std::string(\"bestblock\"), CBlockLocator()); // Write empty block locator so versions that require a merkle branch automatically rescan\n@@ -441,6 +463,16 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                 strErr = \"Error reading wallet database: unable to process descriptor\";\n                 return false;\n             }\n+        } else if (strType == \"descriptor_address\") {\n+            uint64_t wdesc_id;\n+            ssKey >> wdesc_id;\n+            uint64_t index;\n+            ssKey >> index;\n+\n+            DescriptorAddress wAddr;\n+            ssValue >> wAddr;\n+\n+            pwallet->LoadDescriptorAddress(wdesc_id, index, wAddr);\n         } else if (strType != \"bestblock\" && strType != \"bestblock_nomerkle\" &&\n                 strType != \"minversion\" && strType != \"acentry\") {\n             wss.m_unknown_records++;"
      },
      {
        "sha": "da9bcb89a78a7e8eb48c54e960c79afd61004fa2",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b8ff7b1412d9eda7c01008b6e7672d4ec90baf98/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b8ff7b1412d9eda7c01008b6e7672d4ec90baf98/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=b8ff7b1412d9eda7c01008b6e7672d4ec90baf98",
        "patch": "@@ -11,6 +11,7 @@\n #include <primitives/transaction.h>\n #include <script/descriptor.h>\n #include <script/sign.h>\n+#include <script/standard.h>\n #include <wallet/db.h>\n \n #include <list>\n@@ -143,6 +144,39 @@ class CKeyMetadata\n     }\n };\n \n+/* Descriptor address model for the wallet */\n+class DescriptorAddress\n+{\n+public:\n+    static const int VERSION_BASIC=1;\n+    static const int CURRENT_VERSION=VERSION_BASIC;\n+    int nVersion;\n+    int64_t nCreateTime;\n+    int64_t m_index;\n+    std::string m_label;\n+    std::vector<unsigned char> m_cache;\n+\n+    DescriptorAddress() {}\n+\n+    explicit DescriptorAddress(int64_t nCreateTime_, int64_t index_, std::string label_, std::vector<unsigned char> cache_) :\n+        nCreateTime(nCreateTime_), m_index(index_), m_label(label_), m_cache(cache_)\n+    {\n+        nVersion = DescriptorAddress::CURRENT_VERSION;\n+        m_index = index_;\n+    }\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action) {\n+        READWRITE(this->nVersion);\n+        READWRITE(nCreateTime);\n+        READWRITE(m_index);\n+        READWRITE(m_label);\n+        READWRITE(m_cache);\n+    }\n+};\n+\n static const int DESCRIPTOR_PURPOSE_RECEIVE_CURRENT = 1;\n static const int DESCRIPTOR_PURPOSE_CHANGE_CURRENT  = 2;\n static const int DESCRIPTOR_PURPOSE_RECEIVE_ARCHIVE = 3;\n@@ -162,6 +196,8 @@ class WalletDescriptor\n     int m_purpose;\n     FlatSigningProvider m_provider;\n \n+    std::vector<DescriptorAddress> m_addresses;\n+\n     WalletDescriptor() {}\n \n     explicit WalletDescriptor(std::unique_ptr<Descriptor>descriptor_, int64_t nCreateTime_, uint64_t id_, int purpose_) :\n@@ -181,6 +217,8 @@ class WalletDescriptor\n         }\n     }\n \n+    CTxDestination GetDestination(DescriptorAddress& dAddr);\n+\n     ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n@@ -251,6 +289,8 @@ class WalletBatch\n \n     bool WriteDescriptor(WalletDescriptor *wdesc);\n \n+    bool WriteDescriptorAddress(uint64_t wdesc_id, DescriptorAddress& descAddr);\n+\n     bool WriteBestBlock(const CBlockLocator& locator);\n     bool ReadBestBlock(CBlockLocator& locator);\n "
      }
    ]
  },
  {
    "sha": "8debda3276837d771178e89103620c28389c1811",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZGViZGEzMjc2ODM3ZDc3MTE3OGU4OTEwMzYyMGMyODM4OWMxODEx",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-16T21:40:44Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:07:16Z"
      },
      "message": "[rpc] getnewaddress: support descriptor wallet",
      "tree": {
        "sha": "d27ab6f95b3cf0c64f70bb98ea0b2ac1c5c3d21f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d27ab6f95b3cf0c64f70bb98ea0b2ac1c5c3d21f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8debda3276837d771178e89103620c28389c1811",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyT0tQACgkQV/+b28ww\nEAkEGxAAsYgCYxFgzhmbzLvaR1r+kLDaxnJqnnTRet5mTrO8rpbApsa7BTQ6gJ0U\nzW4+wip2C71+5MA7I3kxYOR9xP1wG2/Gc17vKO+ucopnhRHKhcFromN5QDpg8Oxe\ncvXX9+xCLV7NDuhoFzvXZU43UJcbodB1iThDzdbhSbzai46vVo3vIXlA2qQNowkN\nUgUEg4LEC0npnHljzPznJnGl0N+ZJCdt4rYYUHcGpEM8c9df4gC7nW5uIHbCm5Yd\nAgqeTIwfEDcKWDsdyqY1vFHCS9ySlojbjZdKSNR9VQoSPQVWsvVcvfr/Xa0dbsPt\nE0jXHhx0/ePAg6+RNL6DOu8j6Yyd5mh9OvOi6dwhNvjhDgcdslypRY0Y7UK/+DqE\nVRNUV0HjzXo4ohRuG2i4GgF4OTmVUb0Vy+Hk2UzAPhfm771ys97b1KV1FA15h4YC\nkebj34xxPq0yp2yE8wSOmloZ6xp/VlkY9bOnoEW4z8W1X6Tzg2JBBH5PkbTytm0s\nY2LqlzpK5yScDTvWsVvfxUOXjgUJdWbAkdhQlhrqYm/6AaK49W72otOvr5SLKyw1\nOeCGmd02GI4D589W+BdTdzgymt0lzud3/A3hkuJWE7yWlj9njtqK6ZYMYFS55Xse\ntusZRxcG91L8QXH9/lwRgfMAEQlhPSFJWKXT77cKyH1cwn+idmY=\n=lfPg\n-----END PGP SIGNATURE-----",
        "payload": "tree d27ab6f95b3cf0c64f70bb98ea0b2ac1c5c3d21f\nparent b8ff7b1412d9eda7c01008b6e7672d4ec90baf98\nauthor Sjors Provoost <sjors@sprovoost.nl> 1552772444 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553191636 +0100\n\n[rpc] getnewaddress: support descriptor wallet\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8debda3276837d771178e89103620c28389c1811",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8debda3276837d771178e89103620c28389c1811",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8debda3276837d771178e89103620c28389c1811/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b8ff7b1412d9eda7c01008b6e7672d4ec90baf98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8ff7b1412d9eda7c01008b6e7672d4ec90baf98",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b8ff7b1412d9eda7c01008b6e7672d4ec90baf98"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 51,
      "deletions": 17
    },
    "files": [
      {
        "sha": "151f411177378480fbc237d3e83894062ec7dda5",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 17,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8debda3276837d771178e89103620c28389c1811/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8debda3276837d771178e89103620c28389c1811/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=8debda3276837d771178e89103620c28389c1811",
        "patch": "@@ -160,7 +160,7 @@ static UniValue getnewaddress(const JSONRPCRequest& request)\n                 \"so payments received with the address will be associated with 'label'.\\n\",\n                 {\n                     {\"label\", RPCArg::Type::STR, /* default */ \"\\\"\\\"\", \"The label name for the address to be linked to. It can also be set to the empty string \\\"\\\" to represent the default label. The label does not need to exist, it will be created if there is no label by the given name.\"},\n-                    {\"address_type\", RPCArg::Type::STR, /* default */ \"set by -addresstype\", \"The address type to use. Options are \\\"legacy\\\", \\\"p2sh-segwit\\\", and \\\"bech32\\\".\"},\n+                    {\"address_type\", RPCArg::Type::STR, /* default */ \"set by -addresstype\", \"The address type to use. Options are \\\"legacy\\\", \\\"p2sh-segwit\\\", and \\\"bech32\\\". Use \\\"legacy\\\" instead of \\\"p2sh-segwit\\\" in descriptor based wallets.\"},\n                 },\n                 RPCResult{\n             \"\\\"address\\\"    (string) The new bitcoin address\\n\"\n@@ -173,10 +173,6 @@ static UniValue getnewaddress(const JSONRPCRequest& request)\n \n     LOCK(pwallet->cs_wallet);\n \n-    if (!pwallet->CanGetAddresses()) {\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Error: This wallet has no available keys\");\n-    }\n-\n     // Parse the label first so we don't generate a key if there's an error\n     std::string label;\n     if (!request.params[0].isNull())\n@@ -189,21 +185,59 @@ static UniValue getnewaddress(const JSONRPCRequest& request)\n         }\n     }\n \n-    if (!pwallet->IsLocked()) {\n-        pwallet->TopUpKeyPool();\n-    }\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+        AddressType address_type;\n+        switch (output_type) {\n+        case OutputType::LEGACY:\n+            address_type = AddressType::BASE58;\n+            break;\n+        case OutputType::BECH32:\n+            address_type = AddressType::BECH32;\n+            break;\n+        case OutputType::P2SH_SEGWIT:\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"address_type must be %s or %s. Use %s for base58 addresses, including p2sh wrapped SegWit.\", FormatAddressType(AddressType::BASE58), FormatAddressType(AddressType::BECH32), FormatAddressType(AddressType::BASE58)));\n+        default:\n+            assert(false);\n+        }\n \n-    // Generate a new key that is added to wallet\n-    CPubKey newKey;\n-    if (!pwallet->GetKeyFromPool(newKey)) {\n-        throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n-    }\n-    pwallet->LearnRelatedScripts(newKey, output_type);\n-    CTxDestination dest = GetDestinationForKey(newKey, output_type);\n+        // TODO: expand any descriptors with hardened derivation if wallet is unlocked\n+        // if (!pwallet->IsLocked()) {\n+        //     pwallet->TopUpKeyPool();\n+        // }\n \n-    pwallet->SetAddressBook(dest, label, \"receive\");\n+        if (!pwallet->HaveAddressSourceDescriptor(/* change */ false, address_type)) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Error: This wallet has no descriptor for %s receive addresses\", FormatAddressType(address_type)));\n+        }\n \n-    return EncodeDestination(dest);\n+        CTxDestination newAddress;\n+        if (!pwallet->PickFromAddressSourceDescriptor(newAddress, /* change */ false, address_type, label)) {\n+            assert(false);\n+            // TODO: if wallet is unlocked, a descriptor with hardened derivation needs to be expanded first\n+            // throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n+        }\n+\n+        return EncodeDestination(newAddress);\n+    } else {\n+        if (!pwallet->CanGetAddresses()) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"Error: This wallet has no available keys\");\n+        }\n+\n+        if (!pwallet->IsLocked()) {\n+            pwallet->TopUpKeyPool();\n+        }\n+\n+        // Generate a new key that is added to wallet\n+        CPubKey newKey;\n+        if (!pwallet->GetKeyFromPool(newKey)) {\n+            throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, \"Error: Keypool ran out, please call keypoolrefill first\");\n+        }\n+        pwallet->LearnRelatedScripts(newKey, output_type);\n+        CTxDestination dest = GetDestinationForKey(newKey, output_type);\n+\n+        pwallet->SetAddressBook(dest, label, \"receive\");\n+\n+        return EncodeDestination(dest);\n+    }\n }\n \n static UniValue getrawchangeaddress(const JSONRPCRequest& request)"
      }
    ]
  },
  {
    "sha": "ee86df4f3c3c1b3a4ad874f48124a4478e47d899",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZTg2ZGY0ZjNjM2MxYjNhNGFkODc0ZjQ4MTI0YTQ0NzhlNDdkODk5",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-16T21:41:11Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:07:16Z"
      },
      "message": "[rpc] dumpwallet: add descriptor addresses",
      "tree": {
        "sha": "ad03c857e0667f7fe2922a368b887615548049ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ad03c857e0667f7fe2922a368b887615548049ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee86df4f3c3c1b3a4ad874f48124a4478e47d899",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyT0tQACgkQV/+b28ww\nEAnb3g//QjMxbemfC3YvcMRdCaw0rzhbxOwXc//LYzs72+AaS/d6GUkR2DBfJHd8\nqXd1KFrT0tiHHcoBhIp4rjIZ+/CoRZp7H6HwqY/bYAvI+14mEsxq//gyC/vcNTCG\n6BDBXEESkwvLLH976BRAa0C5Ai/oN9IK0MaF60b9j6VdRuKowWNmhxQ9c0mtM4Wm\n5DAKlZJYg0cfx3BBlh1TIKQkx4m9RxahFnHJWSV/4A9ED23utJ4UqShJYn15Vpu3\nMOQ/BUcnPzJFqTnBnnLS2jr4dlX/sd64TwwePFtRfgyrtfSQCAq08joh4IrariHk\nA/4DWRnGk6D0TLtnQrKHe/vTSorhn/v/5r9KHYIxUY9nTO3c1R1qpboaGFxGg6HT\nuIAiT2IFFZTFerq52jokjyXqU2S2Gturs8bpL8MXfjpVdxHvMefANUJd9ktXCDf3\nvhfpdKO2WGXQX7rH5V6QfRQaTjmOvvx2kEO87qt/u+jr8PNvWGM0LA+mymabN4Ye\n7g+jORBuTZkvxY/g8R74sPWP0O+mpynO2PDG9kchbCSASKVFRlzJ3EsfTTJsaSyx\nmAYCTuU+JK+t+2hOByY0d3D1RQHJKIZFY+nXwiFvgqvBcJ5whvkFdlrK7DMH02pb\n8sT43EUS9oLbQUYGR9OGBLHzPKiD45xAjcvTqbJBHgyt5Hsu4xQ=\n=mFE7\n-----END PGP SIGNATURE-----",
        "payload": "tree ad03c857e0667f7fe2922a368b887615548049ad\nparent 8debda3276837d771178e89103620c28389c1811\nauthor Sjors Provoost <sjors@sprovoost.nl> 1552772471 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553191636 +0100\n\n[rpc] dumpwallet: add descriptor addresses\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee86df4f3c3c1b3a4ad874f48124a4478e47d899",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ee86df4f3c3c1b3a4ad874f48124a4478e47d899",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee86df4f3c3c1b3a4ad874f48124a4478e47d899/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8debda3276837d771178e89103620c28389c1811",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8debda3276837d771178e89103620c28389c1811",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8debda3276837d771178e89103620c28389c1811"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5858dd1d1a8b56fa895be64449d673e44f5f3a6b",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee86df4f3c3c1b3a4ad874f48124a4478e47d899/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee86df4f3c3c1b3a4ad874f48124a4478e47d899/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=ee86df4f3c3c1b3a4ad874f48124a4478e47d899",
        "patch": "@@ -836,6 +836,16 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n             file << strprintf(\"%d \", p.second->m_purpose);\n             file << strprintf(\"%s\", p.second->m_descriptor->ToString().c_str());\n             file << \"\\n\";\n+            if (p.second->m_addresses.size()) {\n+                for (auto& a : p.second->m_addresses) {\n+                    CTxDestination dest = p.second->GetDestination(a);\n+                    file << strprintf(\"%lu \", p.second->m_id);\n+                    file << strprintf(\"%lu \", a.m_index);\n+                    file << strprintf(\"%s \", EncodeDestination(dest).c_str());\n+                    file << strprintf(\"%s\", a.m_label.c_str());\n+                    file << \"\\n\";\n+                }\n+            }\n         }\n     } else {\n         // add the base58check encoded extended master if the wallet uses HD"
      }
    ]
  },
  {
    "sha": "02ae76e7cc6c457cb74d754f1087c3ba1409b3c6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMmFlNzZlN2NjNmM0NTdjYjc0ZDc1NGYxMDg3YzNiYTE0MDliM2M2",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T11:43:13Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:39:11Z"
      },
      "message": "[wallet] add FindDescriptorAddress",
      "tree": {
        "sha": "ebfd4c31c4f257f51d8f8043ecc0285082e7ddd1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ebfd4c31c4f257f51d8f8043ecc0285082e7ddd1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02ae76e7cc6c457cb74d754f1087c3ba1409b3c6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyT2loACgkQV/+b28ww\nEAmMPhAAnfgSECYrYPVAhhYzUmLoCszo2rE1SAQBqjQfy+cvqm6gFA4M2l0zIvv0\njqLzie4ELZqMcuz71isYQ/q81dh1yTWGt5Nf257srwyeMWEMijZ/6MmrkM4axTiF\nqB/4e7kgn5Nb8EBkDm/TuF3nPUD+I7FlBafVnyV8KSxwMbwjMbmHJX8ysQyFJ1mv\n94pDOas0TK+MqqkWOdqI37dqiVasReLC65WkYWv7VgixIuc97XrTD8e1/hgPaJCk\nQJZIoZ5dwdMpS5F2i77El7PFya+ShkAUxSobjxhm9Zk/uimAj0+jkvksSrkr597+\nQpDkxqlq24pAdBfkRv+wlm+iPyLbrQGhsL7nUD7lJAMJD+OTEo08kbLb8QBEtD6e\ny3XeOcTWJJ39JUR17OAj9KVjtlTr0Q8XTMo656pQUnyKTI9VpmX69tDvqBtsxfqb\ndz8wqYmQqMzdOhj5illNHAeStQM01+rO1hiqBYOeCz/fTf++wHhhdj74CF4ZHDUb\neTawM+K8I7b/qrA5ZNONKP3JZrpizGzncna+Fa8e0lgjpF5HMmD+etq6eh8JRO6r\nGyzeLfC5e5nb821t3MYBkk7RA9nVbod0dIYUJ1ciuzcJMxI0X8qZoQOhvhTfL+WE\n7K2Av0m0keBzEyhMYchqKt6lNGT7WhuI9zgaQfQoMBLNkdr3/e4=\n=ereu\n-----END PGP SIGNATURE-----",
        "payload": "tree ebfd4c31c4f257f51d8f8043ecc0285082e7ddd1\nparent ee86df4f3c3c1b3a4ad874f48124a4478e47d899\nauthor Sjors Provoost <sjors@sprovoost.nl> 1553168593 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553193551 +0100\n\n[wallet] add FindDescriptorAddress\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02ae76e7cc6c457cb74d754f1087c3ba1409b3c6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/02ae76e7cc6c457cb74d754f1087c3ba1409b3c6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02ae76e7cc6c457cb74d754f1087c3ba1409b3c6/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ee86df4f3c3c1b3a4ad874f48124a4478e47d899",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee86df4f3c3c1b3a4ad874f48124a4478e47d899",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ee86df4f3c3c1b3a4ad874f48124a4478e47d899"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 26,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c62137c8add8826bdb039788a201148a52098ec4",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02ae76e7cc6c457cb74d754f1087c3ba1409b3c6/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02ae76e7cc6c457cb74d754f1087c3ba1409b3c6/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=02ae76e7cc6c457cb74d754f1087c3ba1409b3c6",
        "patch": "@@ -565,6 +565,30 @@ bool CWallet::PickFromAddressSourceDescriptor(CTxDestination &newAddress, bool i\n     return false;\n }\n \n+bool CWallet::FindDescriptorAddress(DescriptorAddress& dAddr, WalletDescriptor*& wDesc, CScript scriptPubKey) {\n+    for (auto& p : m_descriptors) {\n+        for (auto& a : p.second->m_addresses) {\n+            std::vector<CScript> output_scripts;\n+            bool success = p.second->m_descriptor->ExpandFromCache(a.m_index, a.m_cache, output_scripts, p.second->m_provider);\n+            if (success) {\n+                for (CScript script : output_scripts) {\n+                    if (script == scriptPubKey) {\n+                        wDesc = p.second.get();\n+                        dAddr = a;\n+                        return true;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    return false;\n+}\n+\n+bool CWallet::FindDescriptorAddress(DescriptorAddress& dAddr, WalletDescriptor*& wDesc, CTxDestination dest) {\n+    CScript scriptPubKey = GetScriptForDestination(dest);\n+    return FindDescriptorAddress(dAddr, wDesc, scriptPubKey);\n+}\n+\n bool CWallet::LoadDescriptorAddress(uint64_t wdesc_id, uint64_t index, DescriptorAddress dAddr)\n {\n     assert(m_descriptors.size() >= wdesc_id); // WalletDescriptor is stored and loaded before its WalletAddress entries"
      },
      {
        "sha": "77c92c9e8829b89704e6bdba5b963ce1882e0984",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02ae76e7cc6c457cb74d754f1087c3ba1409b3c6/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02ae76e7cc6c457cb74d754f1087c3ba1409b3c6/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=02ae76e7cc6c457cb74d754f1087c3ba1409b3c6",
        "patch": "@@ -915,6 +915,8 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n \n     bool LoadDescriptorAddress(uint64_t wdesc_id, uint64_t index, DescriptorAddress dAddr) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool AddDescriptorAddress(uint64_t wdesc_id, uint64_t index, std::string label, std::vector<unsigned char>* cache) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool FindDescriptorAddress(DescriptorAddress& dAddr, WalletDescriptor*& wDesc, CScript scriptPubKey) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool FindDescriptorAddress(DescriptorAddress& dAddr, WalletDescriptor*& wDesc, CTxDestination dest) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n     //! Holds a timestamp at which point the wallet is scheduled (externally) to be relocked. Caller must arrange for actual relocking to occur via Lock().\n     int64_t nRelockTime = 0;"
      }
    ]
  },
  {
    "sha": "1f823ba8a4c71388c95ef84a76f6f627d6e8d385",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZjgyM2JhOGE0YzcxMzg4Yzk1ZWY4NGE3NmY2ZjYyN2Q2ZThkMzg1",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T11:43:40Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:39:23Z"
      },
      "message": "[rpc] getaddressinfo: support descriptor wallets",
      "tree": {
        "sha": "b5b1364c53c8405a5e40c2de2314bd8bf884291e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5b1364c53c8405a5e40c2de2314bd8bf884291e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f823ba8a4c71388c95ef84a76f6f627d6e8d385",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyT2lsACgkQV/+b28ww\nEAnkDBAAuzRYGLyRRz2ssttJrxgP198U07hHW7xUiA6vU5GFgRrFLfuBKpB1TRKq\nM++VOPlMwoCT6tJQwGkYEJpbbHhnewzRFeANz9/MCaxtdUzWFH6+Hx2xzRN6C9Bm\nCs9v8s38Z7fcXc9n3X67R7cEMPYexbX7dfl/4tHMVxq+MnbImcgPj2qjMirOJOgQ\nh7iNHM7A17tHJfpFHDNSRKWRinVgC//gUdIqm5nMLNb5+eao1C2x8zvDu+L1uQqC\nnpT+1/XF3J2BOzwPj5wAPGWTjaclblYXoaqvCZuZtk6AW6i2VCqlt2jN6lytHBiS\n3BFfaGMSGu5wOlQTGmggtemRIC0aBFwc7g36twz5mRFAsDsXdLpaMRceVEEBAqVH\nUK8AN5ZB7qd+mIsNoZsOGNjBmjxXz6VjyynoP8zV7e1GB/1iv74wJCmjDln8f4XU\nVL92fC+PEA/EJ5fWS4L5Yl9ahouZ69VR6PwqrSXLUXWilyUbXEXunoBVtkIuljv5\nA96TDUoU5ZrpoINRgPujP90zaWU9/yo/CUeB8qsBeL5sGV6bqrtICwMRYjG8Xb/H\nKLvS7MF1zIAq59gg1nr6+BKVWfIu6TvIMYT0cDiKdT3CZHa0CvOm2ZnQP/0OSTcu\nKPdEChw3wpUNpVovW6D+GgKHJ6vTaP/+0vvJlGFJW8GU8fyHalM=\n=Rp0W\n-----END PGP SIGNATURE-----",
        "payload": "tree b5b1364c53c8405a5e40c2de2314bd8bf884291e\nparent 02ae76e7cc6c457cb74d754f1087c3ba1409b3c6\nauthor Sjors Provoost <sjors@sprovoost.nl> 1553168620 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553193563 +0100\n\n[rpc] getaddressinfo: support descriptor wallets\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f823ba8a4c71388c95ef84a76f6f627d6e8d385",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1f823ba8a4c71388c95ef84a76f6f627d6e8d385",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f823ba8a4c71388c95ef84a76f6f627d6e8d385/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02ae76e7cc6c457cb74d754f1087c3ba1409b3c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02ae76e7cc6c457cb74d754f1087c3ba1409b3c6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02ae76e7cc6c457cb74d754f1087c3ba1409b3c6"
      }
    ],
    "stats": {
      "total": 100,
      "additions": 59,
      "deletions": 41
    },
    "files": [
      {
        "sha": "b44abe98aa9e6951c0a28479aab3275d0585d93a",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 59,
        "deletions": 41,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1f823ba8a4c71388c95ef84a76f6f627d6e8d385/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1f823ba8a4c71388c95ef84a76f6f627d6e8d385/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=1f823ba8a4c71388c95ef84a76f6f627d6e8d385",
        "patch": "@@ -3694,52 +3694,70 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     CScript scriptPubKey = GetScriptForDestination(dest);\n     ret.pushKV(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end()));\n \n-    isminetype mine = IsMine(*pwallet, dest);\n-    ret.pushKV(\"ismine\", bool(mine & ISMINE_SPENDABLE));\n-    bool solvable = IsSolvable(*pwallet, scriptPubKey);\n-    ret.pushKV(\"solvable\", solvable);\n-    if (solvable) {\n-       ret.pushKV(\"desc\", InferDescriptor(scriptPubKey, *pwallet)->ToString());\n-    }\n-    ret.pushKV(\"iswatchonly\", bool(mine & ISMINE_WATCH_ONLY));\n-    UniValue detail = DescribeWalletAddress(pwallet, dest);\n-    ret.pushKVs(detail);\n-    if (pwallet->mapAddressBook.count(dest)) {\n-        ret.pushKV(\"label\", pwallet->mapAddressBook[dest].name);\n-    }\n-    ret.pushKV(\"ischange\", pwallet->IsChange(scriptPubKey));\n-    const CKeyMetadata* meta = nullptr;\n-    CKeyID key_id = GetKeyForDestination(*pwallet, dest);\n-    if (!key_id.IsNull()) {\n-        auto it = pwallet->mapKeyMetadata.find(key_id);\n-        if (it != pwallet->mapKeyMetadata.end()) {\n-            meta = &it->second;\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+        DescriptorAddress dAddr;\n+        WalletDescriptor* wDesc = nullptr;\n+\n+        if (pwallet->FindDescriptorAddress(dAddr, wDesc, scriptPubKey)) {\n+            assert(wDesc != nullptr);\n+            ret.pushKV(\"desc\", wDesc->m_descriptor->ToString());\n+            if (wDesc->m_descriptor->IsRange()) {\n+                ret.pushKV(\"index\", dAddr.m_index);\n+            }\n+            ret.pushKV(\"solvable\", wDesc->m_descriptor->IsSolvable());\n+            // TODO: add ismine or iswatchonly\n+            ret.pushKV(\"ischange\", wDesc->m_purpose == DESCRIPTOR_PURPOSE_CHANGE_CURRENT || wDesc->m_purpose == DESCRIPTOR_PURPOSE_CHANGE_ARCHIVE);\n+            ret.pushKV(\"label\", dAddr.m_label);\n+            ret.pushKV(\"timestamp\", dAddr.nCreateTime);\n         }\n-    }\n-    if (!meta) {\n-        auto it = pwallet->m_script_metadata.find(CScriptID(scriptPubKey));\n-        if (it != pwallet->m_script_metadata.end()) {\n-            meta = &it->second;\n+    } else {\n+        isminetype mine = IsMine(*pwallet, dest);\n+        ret.pushKV(\"ismine\", bool(mine & ISMINE_SPENDABLE));\n+        bool solvable = IsSolvable(*pwallet, scriptPubKey);\n+        ret.pushKV(\"solvable\", solvable);\n+        if (solvable) {\n+           ret.pushKV(\"desc\", InferDescriptor(scriptPubKey, *pwallet)->ToString());\n         }\n-    }\n-    if (meta) {\n-        ret.pushKV(\"timestamp\", meta->nCreateTime);\n-        if (meta->has_key_origin) {\n-            ret.pushKV(\"hdkeypath\", WriteHDKeypath(meta->key_origin.path));\n-            ret.pushKV(\"hdseedid\", meta->hd_seed_id.GetHex());\n-            ret.pushKV(\"hdmasterfingerprint\", HexStr(meta->key_origin.fingerprint, meta->key_origin.fingerprint + 4));\n+        ret.pushKV(\"iswatchonly\", bool(mine & ISMINE_WATCH_ONLY));\n+        UniValue detail = DescribeWalletAddress(pwallet, dest);\n+        ret.pushKVs(detail);\n+        if (pwallet->mapAddressBook.count(dest)) {\n+            ret.pushKV(\"label\", pwallet->mapAddressBook[dest].name);\n+        }\n+        ret.pushKV(\"ischange\", pwallet->IsChange(scriptPubKey));\n+        const CKeyMetadata* meta = nullptr;\n+        CKeyID key_id = GetKeyForDestination(*pwallet, dest);\n+        if (!key_id.IsNull()) {\n+            auto it = pwallet->mapKeyMetadata.find(key_id);\n+            if (it != pwallet->mapKeyMetadata.end()) {\n+                meta = &it->second;\n+            }\n+        }\n+        if (!meta) {\n+            auto it = pwallet->m_script_metadata.find(CScriptID(scriptPubKey));\n+            if (it != pwallet->m_script_metadata.end()) {\n+                meta = &it->second;\n+            }\n+        }\n+        if (meta) {\n+            ret.pushKV(\"timestamp\", meta->nCreateTime);\n+            if (meta->has_key_origin) {\n+                ret.pushKV(\"hdkeypath\", WriteHDKeypath(meta->key_origin.path));\n+                ret.pushKV(\"hdseedid\", meta->hd_seed_id.GetHex());\n+                ret.pushKV(\"hdmasterfingerprint\", HexStr(meta->key_origin.fingerprint, meta->key_origin.fingerprint + 4));\n+            }\n         }\n-    }\n \n-    // Currently only one label can be associated with an address, return an array\n-    // so the API remains stable if we allow multiple labels to be associated with\n-    // an address.\n-    UniValue labels(UniValue::VARR);\n-    std::map<CTxDestination, CAddressBookData>::iterator mi = pwallet->mapAddressBook.find(dest);\n-    if (mi != pwallet->mapAddressBook.end()) {\n-        labels.push_back(AddressBookDataToJSON(mi->second, true));\n+        // Currently only one label can be associated with an address, return an array\n+        // so the API remains stable if we allow multiple labels to be associated with\n+        // an address.\n+        UniValue labels(UniValue::VARR);\n+        std::map<CTxDestination, CAddressBookData>::iterator mi = pwallet->mapAddressBook.find(dest);\n+        if (mi != pwallet->mapAddressBook.end()) {\n+            labels.push_back(AddressBookDataToJSON(mi->second, true));\n+        }\n+        ret.pushKV(\"labels\", std::move(labels));\n     }\n-    ret.pushKV(\"labels\", std::move(labels));\n \n     return ret;\n }"
      }
    ]
  },
  {
    "sha": "2e5e977dc4b77c7ff87372c13d1147036daaddfa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZTVlOTc3ZGM0Yjc3YzdmZjg3MzcyYzEzZDExNDcwMzZkYWFkZGZh",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:12:59Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:39:23Z"
      },
      "message": "[test] add descriptor wallet multisig tests",
      "tree": {
        "sha": "9f0549e49c6dca4bfb9ade2dcaf8e4a386f7ab54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f0549e49c6dca4bfb9ade2dcaf8e4a386f7ab54"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2e5e977dc4b77c7ff87372c13d1147036daaddfa",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyT2lsACgkQV/+b28ww\nEAliGRAAwnGNkFKfAIwxWk+vpFORA1dTkz+goE8Mk/rOKp/OuW3kebA5sdQWb43I\noIzmWCOqgqvElVTky74UhnTXeIgE5WnKnQPUOINcdTQdF+Yd4vX6xkVSN+XxnQLg\nNY/bwTHFaw22FtPj9REK5KgIfrksrnZp7FrN1hjyf05WQFdQPKHBUgDtqzW6bqBs\nfWeUF905gOsNGgldS/altGv3K92uomR+JHieF6pLb2RiTBrvzbDCy4mPp/0UCs61\np1cBAz1ckjWTzLxC73W2U+uovzRWnRQIYpGJIFApPqyYSFjePpLTIJGKcD1VTQKq\n4h+Wil95SdAoaU1tnAnKanB58I9PZdyR6vueAPb7sLrdfNlhWQqGGUQiWxfMS3Lf\nkLWhPp/YHefDDLlBhU1JFxv9ft2zyti1T68W3lDgH82LBaryOYn0hs+g+W97FcfH\nu42mXdFHNIq9/fS7M6RPrA3jli3ebqqxBwx6x88wcsC9EFUdOraWIL92YH8VX/is\nTgBr0g2n7QstbNSlbccQ822rpg3+9LqPrYYf4uSxDHa2BVYWQDQgvb085M9CvDy+\nCXPpfzXTa2eEOjY23qSS6Ed5htdGIISg9gFHp9fxqHN12HVzfGCDYFIEz0TV+Uod\nhnhFxt2BXyibYLeM27QcnRp7NNrpUCCuskrD0OkiI8jt4/mTFbM=\n=pKGK\n-----END PGP SIGNATURE-----",
        "payload": "tree 9f0549e49c6dca4bfb9ade2dcaf8e4a386f7ab54\nparent 1f823ba8a4c71388c95ef84a76f6f627d6e8d385\nauthor Sjors Provoost <sjors@sprovoost.nl> 1553191979 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553193563 +0100\n\n[test] add descriptor wallet multisig tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e5e977dc4b77c7ff87372c13d1147036daaddfa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2e5e977dc4b77c7ff87372c13d1147036daaddfa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e5e977dc4b77c7ff87372c13d1147036daaddfa/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1f823ba8a4c71388c95ef84a76f6f627d6e8d385",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f823ba8a4c71388c95ef84a76f6f627d6e8d385",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1f823ba8a4c71388c95ef84a76f6f627d6e8d385"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 49,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9de5aad8d4c67037c194a56160367b79bef6dbcf",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e5e977dc4b77c7ff87372c13d1147036daaddfa/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e5e977dc4b77c7ff87372c13d1147036daaddfa/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=2e5e977dc4b77c7ff87372c13d1147036daaddfa",
        "patch": "@@ -91,6 +91,7 @@\n     'wallet_zapwallettxes.py',\n     'wallet_importmulti.py',\n     'wallet_importdescriptor.py',\n+    'wallet_multisig.py',\n     'mempool_limit.py',\n     'rpc_txoutproof.py',\n     'wallet_listreceivedby.py',"
      },
      {
        "sha": "583f3d05c9d098093988586ecf1816c0c9a8e413",
        "filename": "test/functional/wallet_multisig.py",
        "status": "added",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e5e977dc4b77c7ff87372c13d1147036daaddfa/test/functional/wallet_multisig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e5e977dc4b77c7ff87372c13d1147036daaddfa/test/functional/wallet_multisig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multisig.py?ref=2e5e977dc4b77c7ff87372c13d1147036daaddfa",
        "patch": "@@ -0,0 +1,48 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test RPC calls based multisig wallets.\n+\n+Currently only covers descriptor based based wallets. Test for non-descriptor\n+based multisig wallets are in wallet_address_types.py and wallet_labels.py and\n+feature-segwit.py and rpc_psbt.py. Non-wallet multisig tests are in\n+rpc_createmultisig.py, rpc_fundrawtransaction.py, rpc_rawtransaction.py and rpc_psbt.py.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_raises_rpc_error\n+)\n+\n+class WalletMultisigTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.extra_args = [[], [\"-addresstype=bech32\"]]\n+        self.setup_clean_chain = True\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        compressed_1 = \"0296b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52\"\n+        compressed_2 = \"037211a824f55b505228e4c3d5194c1fcfaa15a456abdf37f9b9d97a4040afc073\"\n+\n+        # w1: blank, watch-only wallet, not descriptor based\n+        self.nodes[1].createwallet(wallet_name='w1', disable_private_keys=False, blank=True, descriptor=False)\n+        w1 = self.nodes[1].get_wallet_rpc('w1')\n+\n+        # w2: blank, watch-only wallet, descriptor based\n+        self.nodes[1].createwallet(wallet_name='w2', disable_private_keys=True, blank=True, descriptor=True)\n+        w2 = self.nodes[1].get_wallet_rpc('w2')\n+\n+        self.log.info(\"Test addmultisigaddress\")\n+        # TODO: add one private key, because addmultisigaddress is only intended for use with non-watchonly addresses\n+        w1.addmultisigaddress(2, [compressed_1, compressed_2])\n+\n+\n+if __name__ == '__main__':\n+    WalletMultisigTest().main()"
      }
    ]
  },
  {
    "sha": "542b1a784212431361b1ea6b1e8af903b6c18340",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDJiMWE3ODQyMTI0MzEzNjFiMWVhNmIxZThhZjkwM2I2YzE4MzQw",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T15:53:41Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:39:23Z"
      },
      "message": "[rpc] addmultisigaddress: no descriptor support",
      "tree": {
        "sha": "29feeefc1a9d55de3602529652136154e4c4cb8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/29feeefc1a9d55de3602529652136154e4c4cb8e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/542b1a784212431361b1ea6b1e8af903b6c18340",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyT2lsACgkQV/+b28ww\nEAn01RAAvRsOifJFX5IgKZHNr72UEcRJLGFxL5XxDy0eUPY/Uog7kg0ZumUFNVke\nDIFTOiHkUdjAbwIYiOT/2EN817S539pyu17Srca6pQGHqmRfFSASAU8KOldBa9Pf\n7PLwvLAUvAtCbupwiW6/vMxJfZcOzAPeDPf60xCO8aAwbd6lfzGhZDhgmG0dT/ja\nxGzlfjIy5Se3wpQrjbowBfFd0GOgx/jaREtqqNvxFiH+/zwP338PuM/UAcT3mlXG\nrYyrVhO95PqC9bXcLUfsY+0EvlyjRS4Vwoy5LZyUT2ajE7fNBP+FzCzGt2yKvD6U\n284RCDdPIWLIkIWNuNPbbJZb0CPe1U2W6tz7Z5dUPnnutkUQBtgu9DcLSs7knOyz\naVCU2ZjMSFvmqe0QDJAIdMcCr76Ohu/bS6PC4ymMkj+vID7vqIqe7kurmk+uJkRD\nAqY5fD/z85Req1dn4JMTGBVLVoXPd6ZSKh1KJmAD74dhSeu3I6sHx1jdQdtNk8pW\ng+7rSJoWbM3a1UTJsp7aaF05poXX8wQnEa/pyAM0e4JFRj/RfYYKL4z/Ok7lv8W/\nva04/CVpkvjW8vIRUXVD1ki5sYeaL3QghglhVc7iTOKzoHbQCbp+SD7tkERFiInQ\nqzM+vTgV8XoLCB6pKNMWUyifche850/v2rlUX9kp6Rlbybl4xvQ=\n=Oi77\n-----END PGP SIGNATURE-----",
        "payload": "tree 29feeefc1a9d55de3602529652136154e4c4cb8e\nparent 2e5e977dc4b77c7ff87372c13d1147036daaddfa\nauthor Sjors Provoost <sjors@sprovoost.nl> 1553183621 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553193563 +0100\n\n[rpc] addmultisigaddress: no descriptor support\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/542b1a784212431361b1ea6b1e8af903b6c18340",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/542b1a784212431361b1ea6b1e8af903b6c18340",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/542b1a784212431361b1ea6b1e8af903b6c18340/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2e5e977dc4b77c7ff87372c13d1147036daaddfa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e5e977dc4b77c7ff87372c13d1147036daaddfa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2e5e977dc4b77c7ff87372c13d1147036daaddfa"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b4f70e0f2a6e4876f81f5811c4bb8250992af29e",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/542b1a784212431361b1ea6b1e8af903b6c18340/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/542b1a784212431361b1ea6b1e8af903b6c18340/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=542b1a784212431361b1ea6b1e8af903b6c18340",
        "patch": "@@ -1035,6 +1035,10 @@ static UniValue addmultisigaddress(const JSONRPCRequest& request)\n     auto locked_chain = pwallet->chain().lock();\n     LOCK(pwallet->cs_wallet);\n \n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"addmultisigaddress is not available for a descriptor based wallet, use importdescriptor instead.\");\n+    }\n+\n     std::string label;\n     if (!request.params[2].isNull())\n         label = LabelFromValue(request.params[2]);"
      },
      {
        "sha": "371d02a27c7694e3e0944f9039604154bcf56bf4",
        "filename": "test/functional/wallet_multisig.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/542b1a784212431361b1ea6b1e8af903b6c18340/test/functional/wallet_multisig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/542b1a784212431361b1ea6b1e8af903b6c18340/test/functional/wallet_multisig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multisig.py?ref=542b1a784212431361b1ea6b1e8af903b6c18340",
        "patch": "@@ -43,6 +43,9 @@ def run_test(self):\n         # TODO: add one private key, because addmultisigaddress is only intended for use with non-watchonly addresses\n         w1.addmultisigaddress(2, [compressed_1, compressed_2])\n \n+        self.log.info(\"Descriptor based wallets do not support addmultisigaddress\")\n+        assert_raises_rpc_error(-4, \"addmultisigaddress is not available for a descriptor based wallet, use importdescriptor instead.\", w2.addmultisigaddress, 2, [compressed_1, compressed_2])\n+\n \n if __name__ == '__main__':\n     WalletMultisigTest().main()"
      }
    ]
  },
  {
    "sha": "a1ae0651d2d0e5b7f9ba7139074b08c3c4fbbc97",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMWFlMDY1MWQyZDBlNWI3ZjliYTcxMzkwNzRiMDhjM2M0ZmJiYzk3",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T16:13:26Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:39:23Z"
      },
      "message": "[rpc] dumpprivkey and importprivkey: no descriptor support",
      "tree": {
        "sha": "223d3bae6fc437160806f47eaf600c382c4d231a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/223d3bae6fc437160806f47eaf600c382c4d231a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a1ae0651d2d0e5b7f9ba7139074b08c3c4fbbc97",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyT2lsACgkQV/+b28ww\nEAlsyg//cXVUgnkwrYCiq8np6XVl9oZJ+wzgHwH/e0v07f6+FF+jhB0GQJN2GqCK\n+HJyvCDCCEr/LfOwZMLKOGGXdrf3YlhpHSayIPLYlQi0dCYIGPw7/3N1EgG2jrPU\nDQZSnSrU+lU+ze2hbIw17yLk+dIDnDKXTfeEqulFQ9myTa30tEP4FH/ql6hfuL7h\nkxKY9e2VKf3XL6NCxWMaQ9qA9GnH4tT5t+ru2fNbYtU3R0ka8Zitjm8ekcmiVGTX\nmDWBxih3TRUeXRL8yauX1yJpzt/dyuFbHbBga+fjRVJq0rSMJ26Or8XIu9tZC8jP\nK3UCQcrGFPGZ9KM7Wil0mWmVRhNQ69NocTyptxjRpGfycU05+Chsb3f9ccPm2V+j\nJ+pnhFVyUE720Uk61vzRV5M4KcJUb+FSx9sfRbop5NGulxii5PdvLFsIpzoAuWwY\nCm8uutbxBIeqYK3QcojfaahQUJRMu1hzFvdanur60L7GpnIQmN9rhrvXIuVCR+aM\nzaQqebVb8xWUDNvUGA+ZknwDmkqy9yGbAcbkRczWZPuIIflsULMTlWrhATiAjZcB\nlrH+dHGjbQ+vl0bXR2mrOfwFpdHQyxW5yHJLhMy341a7RyyHfuck+OwM0NaUgNaH\nrrP3p812hOci4vkfXi15f+YyQUniAvv1teeQFvtHu3c89KQMcAw=\n=YEg6\n-----END PGP SIGNATURE-----",
        "payload": "tree 223d3bae6fc437160806f47eaf600c382c4d231a\nparent 542b1a784212431361b1ea6b1e8af903b6c18340\nauthor Sjors Provoost <sjors@sprovoost.nl> 1553184806 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553193563 +0100\n\n[rpc] dumpprivkey and importprivkey: no descriptor support\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1ae0651d2d0e5b7f9ba7139074b08c3c4fbbc97",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a1ae0651d2d0e5b7f9ba7139074b08c3c4fbbc97",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1ae0651d2d0e5b7f9ba7139074b08c3c4fbbc97/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "542b1a784212431361b1ea6b1e8af903b6c18340",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/542b1a784212431361b1ea6b1e8af903b6c18340",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/542b1a784212431361b1ea6b1e8af903b6c18340"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ec72951b65b98f70776a7b00bf9ba545fe05b11a",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1ae0651d2d0e5b7f9ba7139074b08c3c4fbbc97/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1ae0651d2d0e5b7f9ba7139074b08c3c4fbbc97/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=a1ae0651d2d0e5b7f9ba7139074b08c3c4fbbc97",
        "patch": "@@ -138,6 +138,10 @@ UniValue importprivkey(const JSONRPCRequest& request)\n                 },\n             }.ToString());\n \n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"dumpprivkey is not available for a descriptor based wallet\");\n+    }\n+\n     if (pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Cannot import private keys to a wallet with private keys disabled\");\n     }\n@@ -735,6 +739,10 @@ UniValue dumpprivkey(const JSONRPCRequest& request)\n     auto locked_chain = pwallet->chain().lock();\n     LOCK(pwallet->cs_wallet);\n \n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"importprivkey is not available for a descriptor based wallet\");\n+    }\n+\n     EnsureWalletIsUnlocked(pwallet);\n \n     std::string strAddress = request.params[0].get_str();"
      }
    ]
  },
  {
    "sha": "06f23b3ece50e1d053f8a35502a94c89c2fb4ed8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNmYyM2IzZWNlNTBlMWQwNTNmOGEzNTUwMmE5NGM4OWMyZmI0ZWQ4",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T16:36:09Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:39:23Z"
      },
      "message": "[rpc] importaddress and importpubkey: no descriptor support",
      "tree": {
        "sha": "7383d87599175e8c8be4877078e10ec6c751ec61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7383d87599175e8c8be4877078e10ec6c751ec61"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06f23b3ece50e1d053f8a35502a94c89c2fb4ed8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyT2lsACgkQV/+b28ww\nEAlYPBAAnMQS8YKDOHVRtXLcjo435xPN/nx16oTAhAToMufqIz61ZGG7vGUTNyOl\nR7HKbIfhWSIGupNfsGrDVABtNuiFsEpBfshPHd9ZJPW6r693zNv6r8YNTceN+6Yx\nvtUlLLkwjqVaJzKYoQl4fqX3FTG6rGmuUvwkCWeaUeCEQhm/tkCxbHhpYrY0iRVd\nzC/95PgzQ/E0iXam4AelV85yiJMZMedukjHl4V3MmT4wv+b0tMSEOTB44RP5XtL5\nNFjRzxObWTh7OGLcKBIrKqjiJ3TEgEu4qoLnIX1ap6JS2DEp1NE1gUFQilCcfvOA\nIXznMZdP916Bib5DPo78aHSQOINq6fampfn7M/C52Gx0ovUfbDAbuMZM31QGjMp6\nF1/aIEq9smbm7RyItQUZwELf1WBdbFl4LkI7MTXvwGYropQz1ioA94y+ZIQVloKy\nk2ZoDmO4jXBfA8fhgJ6Z9unCJev/GSlTzAOgct2Pg6qB8THGFrAjX6kojupQeHC3\nHygqgqXxAkfKkHC2yeSdbwe5Pdokvspaf/mlXl37XIFTUIbakGS4czVLf+oOxF6X\nGfqNrFkSppNSHkPPXp6WVefK5Ri75y0COoh2z6hXCuQO+GVsKEkC8RrkfEG2XDMr\ntePRYQiBX9uy27cVvdD+qIWo+KYOCVM3pMsv8oce5wetQ8Mo7qo=\n=YWLa\n-----END PGP SIGNATURE-----",
        "payload": "tree 7383d87599175e8c8be4877078e10ec6c751ec61\nparent a1ae0651d2d0e5b7f9ba7139074b08c3c4fbbc97\nauthor Sjors Provoost <sjors@sprovoost.nl> 1553186169 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553193563 +0100\n\n[rpc] importaddress and importpubkey: no descriptor support\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06f23b3ece50e1d053f8a35502a94c89c2fb4ed8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06f23b3ece50e1d053f8a35502a94c89c2fb4ed8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06f23b3ece50e1d053f8a35502a94c89c2fb4ed8/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a1ae0651d2d0e5b7f9ba7139074b08c3c4fbbc97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1ae0651d2d0e5b7f9ba7139074b08c3c4fbbc97",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a1ae0651d2d0e5b7f9ba7139074b08c3c4fbbc97"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f6fa013459fa08664df21507a257b127c6c2321e",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06f23b3ece50e1d053f8a35502a94c89c2fb4ed8/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06f23b3ece50e1d053f8a35502a94c89c2fb4ed8/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=06f23b3ece50e1d053f8a35502a94c89c2fb4ed8",
        "patch": "@@ -310,6 +310,9 @@ UniValue importaddress(const JSONRPCRequest& request)\n                 },\n             }.ToString());\n \n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"importaddress is not available for a descriptor based wallet, use importdescriptor instead.\");\n+    }\n \n     std::string strLabel;\n     if (!request.params[1].isNull())\n@@ -499,6 +502,9 @@ UniValue importpubkey(const JSONRPCRequest& request)\n                 },\n             }.ToString());\n \n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"importpubkey is not available for a descriptor based wallet, use importdescriptor instead.\");\n+    }\n \n     std::string strLabel;\n     if (!request.params[1].isNull())"
      }
    ]
  },
  {
    "sha": "88968b631df1e99c461f7900630929baa29737ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ODk2OGI2MzFkZjFlOTljNDYxZjc5MDA2MzA5MjliYWEyOTczN2Vl",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T16:37:55Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:39:24Z"
      },
      "message": "[rpc] keypoolrefill: no descriptor support",
      "tree": {
        "sha": "1b41b46cfc793772b2e6316ccf91fd0661b00c69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b41b46cfc793772b2e6316ccf91fd0661b00c69"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88968b631df1e99c461f7900630929baa29737ee",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyT2lwACgkQV/+b28ww\nEAnXUg//fE3yzmRsx2H2QTqfcmFLUxpQKeIForSx+PSYCGtdkkOQGI4TA4VewfR5\n+UDxSS3gbbzhJcbdmoVBIPYsom/irHHRBAkCfDD9oqPDV4yXoNjre7y+KRIe9c3P\nujrtj/X5hAC9Gx8hhb54Edr74CBwS6xmqloP9ZAANhHaOJshfnPGxliSCghVqMoe\nJUYYMeHRr1ejxANdLUe3spsmx/ZDpgQ+j5ksHtRyOfE7sIzHT2gH9VpaJuVJSYSH\nDgmAn0bDn3VAgoTxHtYrTxWwXexZ3c1H5UKQzrEC5mRur6y4Q0D6cFXH4XRlJHgI\nveC1+3n2UqspbGq5LUITTe3b1ryrvh5iGA3hDoCaxXhuLizfbMa9k+z0OPULLe4P\ncfxIamKPe/KmmyPjPg6v7N0C6a33Qf3W0Pq+eO+ZJ9GnSu21hDKPRRGRpEwTR9nI\nyUVXnbKpquFtBMpuZ+HUDWQgoEAzWEse7I0nlKBLXOyzDJpQgaF0yV1G8LBcKpVX\n1NUVAp5UH7FMgpwpuYPYBbI2bnBbs+jQ1OWUhlci78KhWfida8a8XpdHN07TpD+g\nGxF/qiX5BIeA99+XrGS2JgomK8toB8yh5P6kAbZ7TXuB1GZE1VmaLbCt2vR/v88a\nSIO2wwhKGXVI6rpYmEzZwR6jpx9MIz00H/YD7+BsRZX2sQHvyh8=\n=5H5z\n-----END PGP SIGNATURE-----",
        "payload": "tree 1b41b46cfc793772b2e6316ccf91fd0661b00c69\nparent 06f23b3ece50e1d053f8a35502a94c89c2fb4ed8\nauthor Sjors Provoost <sjors@sprovoost.nl> 1553186275 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553193564 +0100\n\n[rpc] keypoolrefill: no descriptor support\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88968b631df1e99c461f7900630929baa29737ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/88968b631df1e99c461f7900630929baa29737ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88968b631df1e99c461f7900630929baa29737ee/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "06f23b3ece50e1d053f8a35502a94c89c2fb4ed8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06f23b3ece50e1d053f8a35502a94c89c2fb4ed8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06f23b3ece50e1d053f8a35502a94c89c2fb4ed8"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "06b4ac0cd4ae086a10f5717fda1c9c23e265b8d9",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88968b631df1e99c461f7900630929baa29737ee/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88968b631df1e99c461f7900630929baa29737ee/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=88968b631df1e99c461f7900630929baa29737ee",
        "patch": "@@ -1915,6 +1915,10 @@ static UniValue keypoolrefill(const JSONRPCRequest& request)\n                 },\n             }.ToString());\n \n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"keypoolrefill is not available for a descriptor based wallet\");\n+    }\n+\n     if (pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Error: Private keys are disabled for this wallet\");\n     }"
      }
    ]
  },
  {
    "sha": "3fc3fe244fc2c3ead0cb4068ce88f0087c108e65",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZmMzZmUyNDRmYzJjM2VhZDBjYjQwNjhjZTg4ZjAwODdjMTA4ZTY1",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:05:22Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:40:26Z"
      },
      "message": "[wallet] label helpers",
      "tree": {
        "sha": "5ee196d680e28dea7d7db8e703748cf5ff6071d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5ee196d680e28dea7d7db8e703748cf5ff6071d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3fc3fe244fc2c3ead0cb4068ce88f0087c108e65",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyT2pwACgkQV/+b28ww\nEAnRcg/6A3mm32Y9K90wU/lmrPciRO0kl3DnqNvN1MxiHChsHA7t8jKmQpldtKpC\nktIAeveTWyo2r3QRafjhDvjlvUiG78bLQRTGmdH2mX8lvm1s978J6K7c6xR/4iZA\nBLyoXtUwlms7l8M/R+Wvj6NLinkZi24/F2C8lOghTZKGRRsZiAcrpLGfLQhzxHvl\nhtlTyAI/hspGnTxf0p8sOWjtR3d/dxHE0myUCobWcGUlBOnwUdXG76fSxGps5mnJ\nHnA6LULLEfr6FU6UtTp0l/8BaO3QRxl1KHOC+nsa8yzmgQASyBmT8bjfJ92GnHxn\nzvMUlV9hH4q1w6nHWERHn2FnZ2WYDCgM2TF2jVA5PRs9a3Px9tRLenAjDMMjx0xA\ny/QxRXvIcHcMS4Xis/VHcoCe1vQXw1bWk1rFMFyR+kfhq8bUYgYZvlrGXQBd4eBJ\nUzX+434Kq4pD4O7Vw9xdkIqhj4tJQLzlyh+rszkpFb1v50eX4ZJq7BrMJtbi9zUi\n2qyh/bgTJzyWzViV8wMBJ3ZksnCAtI8QOSSuodeyFb288p1/eLvJA9+hEWRG60Kx\nSxTVd24kBNbNIa7n2wcZqco2mfn67anrKhhKRySjWvx9cbNbiKI/7QcLJtUOoUsG\nWCfqDCGlTrSKqQqRAGfIX26KBoD+fxbsiPjAAH9HQuZMxuk4eIE=\n=f/Z9\n-----END PGP SIGNATURE-----",
        "payload": "tree 5ee196d680e28dea7d7db8e703748cf5ff6071d4\nparent 88968b631df1e99c461f7900630929baa29737ee\nauthor Sjors Provoost <sjors@sprovoost.nl> 1553191522 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553193626 +0100\n\n[wallet] label helpers\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fc3fe244fc2c3ead0cb4068ce88f0087c108e65",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3fc3fe244fc2c3ead0cb4068ce88f0087c108e65",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fc3fe244fc2c3ead0cb4068ce88f0087c108e65/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "88968b631df1e99c461f7900630929baa29737ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88968b631df1e99c461f7900630929baa29737ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/88968b631df1e99c461f7900630929baa29737ee"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 13,
      "deletions": 0
    },
    "files": [
      {
        "sha": "dc69920baaeb100405c535e66037d36fb9ac2693",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fc3fe244fc2c3ead0cb4068ce88f0087c108e65/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fc3fe244fc2c3ead0cb4068ce88f0087c108e65/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=3fc3fe244fc2c3ead0cb4068ce88f0087c108e65",
        "patch": "@@ -589,6 +589,18 @@ bool CWallet::FindDescriptorAddress(DescriptorAddress& dAddr, WalletDescriptor*&\n     return FindDescriptorAddress(dAddr, wDesc, scriptPubKey);\n }\n \n+std::vector<std::pair<DescriptorAddress, WalletDescriptor*>> CWallet::FindDescriptorAddressesForLabel(std::string label) {\n+    std::vector<std::pair<DescriptorAddress, WalletDescriptor*>> result;\n+    for (auto& p : m_descriptors) {\n+        for (auto& a : p.second->m_addresses) {\n+            if (a.m_label == label) {\n+                result.push_back(std::pair<DescriptorAddress, WalletDescriptor*>(a, p.second.get()));\n+            }\n+        }\n+    }\n+    return result;\n+}\n+\n bool CWallet::LoadDescriptorAddress(uint64_t wdesc_id, uint64_t index, DescriptorAddress dAddr)\n {\n     assert(m_descriptors.size() >= wdesc_id); // WalletDescriptor is stored and loaded before its WalletAddress entries"
      },
      {
        "sha": "7d838b20c6b3ab60cc7459a62cd423f95f436ca1",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3fc3fe244fc2c3ead0cb4068ce88f0087c108e65/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3fc3fe244fc2c3ead0cb4068ce88f0087c108e65/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=3fc3fe244fc2c3ead0cb4068ce88f0087c108e65",
        "patch": "@@ -917,6 +917,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     bool AddDescriptorAddress(uint64_t wdesc_id, uint64_t index, std::string label, std::vector<unsigned char>* cache) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool FindDescriptorAddress(DescriptorAddress& dAddr, WalletDescriptor*& wDesc, CScript scriptPubKey) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool FindDescriptorAddress(DescriptorAddress& dAddr, WalletDescriptor*& wDesc, CTxDestination dest) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    std::vector<std::pair<DescriptorAddress, WalletDescriptor*>> FindDescriptorAddressesForLabel(std::string label) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n     //! Holds a timestamp at which point the wallet is scheduled (externally) to be relocked. Caller must arrange for actual relocking to occur via Lock().\n     int64_t nRelockTime = 0;"
      }
    ]
  },
  {
    "sha": "1238f69e4b95df82ac3e5217eaf381f433802731",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMjM4ZjY5ZTRiOTVkZjgyYWMzZTUyMTdlYWYzODFmNDMzODAyNzMx",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:05:43Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:40:28Z"
      },
      "message": "[rpc] getaddressesbylabel descriptor wallet support",
      "tree": {
        "sha": "3db3de6f9695512e8ff9d71a96bc26a5f6a94628",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3db3de6f9695512e8ff9d71a96bc26a5f6a94628"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1238f69e4b95df82ac3e5217eaf381f433802731",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIyBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyT2pwACgkQV/+b28ww\nEAmgXw/4zRfz5DFVIguWj04BrxSlbsB8/cvkiFmYr9DiK0Sx6fTgf4vzmk/y5c33\nbFTxuoHmEvSfqh74O6hTuel08Gs6HzhKSoG843vzz4RofmW0NusCexXSSpEDl0wt\nvktU7zBl1v2A5xmRV/xmrhlLggg0mGaC2NklAsKWZZshoMIcFTFkHtfmdZ5OcxRX\nCre89KabfJvba7eHB3YYs1PVogac/sObgETVWKRceHh5eNTqwvn16KivIQiY7N1s\n8GKODRNJWpE+erl0xSMTAMgQvBBz1Lg/TcD/da6Z6HSvRJT3sOaO2eFwZmQijNt4\nVTGb178dR5weeUnYG/S4jEeNxFjda1yaecujiIJgPM/BCmpTuVIWxi+PG62xxRNA\nPMu2LyI5HHJPikYPVOFlnfr3B4/of9PIuqPFInVZAou2Lw/XPzw+YWdwl5xcFcHM\n0MtUFQgFbsdZLC1nBqBS7FRptiGLyXlf6YBbVW9e3Bd4wpc3ijAXgREMcVDZtsex\n/mN+ESZsvyFrlaAuJixNOMp6rKmYEHKV68HJS4hj3beFf9/3sK6ZKpaO1QZpY3Oe\nd7rBt3ZlhgeJdEqF5y/ufUaWvkNXZiqYYNQIbHx90bej4PpK/P4v3FV2LZcaAmLU\nrOVMIGBAAIpHmRpfHRUksvY+jO/1Q5PMh8oTRCbPn+2/uo1nYg==\n=aXwZ\n-----END PGP SIGNATURE-----",
        "payload": "tree 3db3de6f9695512e8ff9d71a96bc26a5f6a94628\nparent 3fc3fe244fc2c3ead0cb4068ce88f0087c108e65\nauthor Sjors Provoost <sjors@sprovoost.nl> 1553191543 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553193628 +0100\n\n[rpc] getaddressesbylabel descriptor wallet support\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1238f69e4b95df82ac3e5217eaf381f433802731",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1238f69e4b95df82ac3e5217eaf381f433802731",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1238f69e4b95df82ac3e5217eaf381f433802731/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3fc3fe244fc2c3ead0cb4068ce88f0087c108e65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3fc3fe244fc2c3ead0cb4068ce88f0087c108e65",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3fc3fe244fc2c3ead0cb4068ce88f0087c108e65"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 14,
      "deletions": 3
    },
    "files": [
      {
        "sha": "92bde9c5d0762de7ea4d4d0aeabef5aee8fa2a1f",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1238f69e4b95df82ac3e5217eaf381f433802731/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1238f69e4b95df82ac3e5217eaf381f433802731/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=1238f69e4b95df82ac3e5217eaf381f433802731",
        "patch": "@@ -3805,9 +3805,20 @@ static UniValue getaddressesbylabel(const JSONRPCRequest& request)\n \n     // Find all addresses that have the given label\n     UniValue ret(UniValue::VOBJ);\n-    for (const std::pair<const CTxDestination, CAddressBookData>& item : pwallet->mapAddressBook) {\n-        if (item.second.name == label) {\n-            ret.pushKV(EncodeDestination(item.first), AddressBookDataToJSON(item.second, false));\n+\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+        std::vector<std::pair<DescriptorAddress, WalletDescriptor*>> matches = pwallet->FindDescriptorAddressesForLabel(label);\n+\n+        for (auto& match : matches) {\n+            CTxDestination dest = match.second->GetDestination(match.first);\n+            ret.pushKV(EncodeDestination(dest), match.second->m_purpose == DESCRIPTOR_PURPOSE_CHANGE_CURRENT || match.second->m_purpose == DESCRIPTOR_PURPOSE_CHANGE_ARCHIVE ? \"change\" : \"receive\");\n+        }\n+\n+    } else {\n+        for (const std::pair<const CTxDestination, CAddressBookData>& item : pwallet->mapAddressBook) {\n+            if (item.second.name == label) {\n+                ret.pushKV(EncodeDestination(item.first), AddressBookDataToJSON(item.second, false));\n+            }\n         }\n     }\n "
      }
    ]
  },
  {
    "sha": "ad60f1e40a2f2bdc92f9270a49b7991122025d84",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDYwZjFlNDBhMmYyYmRjOTJmOTI3MGE0OWI3OTkxMTIyMDI1ZDg0",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:35:26Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-21T18:40:28Z"
      },
      "message": "[rpc] listaddressgroupings: descriptor wallet support",
      "tree": {
        "sha": "f31642809b489bfe3f0d1a7520038e69255912a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f31642809b489bfe3f0d1a7520038e69255912a4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad60f1e40a2f2bdc92f9270a49b7991122025d84",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlyT2pwACgkQV/+b28ww\nEAkF1g//fth9FM3HjHzs5pmdHczvCYkt3z+ZGR1qgcc2yb3NtFN8Ye5wPPKo5Y3q\nQ0Zeg56Zf9ejqHI1I18YXN3fftlwJJJdQplhSgNm+LATQKKrL4NtDdMxQMAgXbgF\nFuIu0WHDHztaBI35QNTCfoFGLvebDGxGBuhedlNsEIXoxtm4PLLAvVqXtOjUsJ2B\nc+WN8sxBU93OtxNDyZVpRoi7tL8PtWEcQkB2FhwiTNES9Mx2nJ/LtEqDpSp0kv+H\nNjy3V2crBGzkZj9vRksvik4CFfOPohvTpVQ1DPAOgYGgsOHI5LXhbf7UClcqjZnC\n2S6HicULnanR3w0AaLEq0u8qnF7Jb8g7EFpqMLa7rsY1B6SoiU4TYgFAFkijZzoL\noBPRR19uxToRyv/CJST16vT1KF/ReXBtqh/PntIMUrCUD4nwuvYBMZJ7ZYD6zQY7\napCEQ9mX3+sEG/7dOi+vhjavqDWBn8d+A6JHEJVkZDPrOQLf0qJQ1JD0FjZDGXVz\nzI14GwlOBNubQUM4OLyV4+qgqwWnA88nN7tDw7rCsKcX4MHYzPhdXYgJIlD/MmhJ\n7je04sMe4PV7TGwwz++qpbqFzxABHwxYvxHgwPpNeeR6fEHszzaJwn3qn1zK1Uj2\n0oHiRdQhOLePLju8GkHg88UvJonLxm+LjHWVL1CsxSkmgS2y1hI=\n=5c5v\n-----END PGP SIGNATURE-----",
        "payload": "tree f31642809b489bfe3f0d1a7520038e69255912a4\nparent 1238f69e4b95df82ac3e5217eaf381f433802731\nauthor Sjors Provoost <sjors@sprovoost.nl> 1553193326 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1553193628 +0100\n\n[rpc] listaddressgroupings: descriptor wallet support\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad60f1e40a2f2bdc92f9270a49b7991122025d84",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad60f1e40a2f2bdc92f9270a49b7991122025d84",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad60f1e40a2f2bdc92f9270a49b7991122025d84/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1238f69e4b95df82ac3e5217eaf381f433802731",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1238f69e4b95df82ac3e5217eaf381f433802731",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1238f69e4b95df82ac3e5217eaf381f433802731"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 13,
      "deletions": 5
    },
    "files": [
      {
        "sha": "ac65583259ea7066dc18934dddeb8183280dba77",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 5,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad60f1e40a2f2bdc92f9270a49b7991122025d84/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad60f1e40a2f2bdc92f9270a49b7991122025d84/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=ad60f1e40a2f2bdc92f9270a49b7991122025d84",
        "patch": "@@ -519,14 +519,22 @@ static UniValue listaddressgroupings(const JSONRPCRequest& request)\n     std::map<CTxDestination, CAmount> balances = pwallet->GetAddressBalances(*locked_chain);\n     for (const std::set<CTxDestination>& grouping : pwallet->GetAddressGroupings()) {\n         UniValue jsonGrouping(UniValue::VARR);\n-        for (const CTxDestination& address : grouping)\n+        for (const CTxDestination& dest : grouping)\n         {\n             UniValue addressInfo(UniValue::VARR);\n-            addressInfo.push_back(EncodeDestination(address));\n-            addressInfo.push_back(ValueFromAmount(balances[address]));\n+            addressInfo.push_back(EncodeDestination(dest));\n+            addressInfo.push_back(ValueFromAmount(balances[dest]));\n             {\n-                if (pwallet->mapAddressBook.find(address) != pwallet->mapAddressBook.end()) {\n-                    addressInfo.push_back(pwallet->mapAddressBook.find(address)->second.name);\n+                if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTOR_WALLET)) {\n+                    DescriptorAddress dAddr;\n+                    WalletDescriptor* wDesc = nullptr;\n+                    if (pwallet->FindDescriptorAddress(dAddr, wDesc, dest)) {\n+                        addressInfo.push_back(dAddr.m_label);\n+                    }\n+                } else {\n+                    if (pwallet->mapAddressBook.find(dest) != pwallet->mapAddressBook.end()) {\n+                        addressInfo.push_back(pwallet->mapAddressBook.find(dest)->second.name);\n+                    }\n                 }\n             }\n             jsonGrouping.push_back(addressInfo);"
      }
    ]
  }
]