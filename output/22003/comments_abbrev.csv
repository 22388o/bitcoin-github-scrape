hebasto,2021-05-20 14:35:41,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/22003#issuecomment-845178382,845178382,
practicalswift,2021-05-20 18:33:23,"Concept ACK\n\nThanks for making the thread-safety annotations more complete!",https://github.com/bitcoin/bitcoin/pull/22003#issuecomment-845366477,845366477,
DrahtBot,2021-05-21 04:05:06,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21618 (WIP: Reduce MinRelayFee slower when Mempool utilised and faster when needed. by rebroad)\n\nIf you consider this p",https://github.com/bitcoin/bitcoin/pull/22003#issuecomment-845637206,845637206,
MarcoFalke,2021-05-21 06:27:33,cr ACK 793b2682841b0bdd7eb93163e34728765cfe52b2,https://github.com/bitcoin/bitcoin/pull/22003#issuecomment-845691413,845691413,
vasild,2021-05-20 15:22:49,"This is only ever modified by assigning it in the constructor, can be `const` like `m_check_ratio`.\n```suggestion\n    CBlockPolicyEstimator* const minerPolicyEstimator;\n```",https://github.com/bitcoin/bitcoin/pull/22003#discussion_r636209579,636209579,src/txmempool.h
ajtowns,2021-05-21 02:14:57,And the object protects itself via its own mutex. Done.,https://github.com/bitcoin/bitcoin/pull/22003#discussion_r636589004,636589004,src/txmempool.h
