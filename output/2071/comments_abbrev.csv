sipa,2012-12-04T17:41:38Z,"I'm very much in favor of encapsulating the actual logic for many RPC methods to where it belongs. However, that doesn't mean that the conversion to JSON should happen there.\n\nFor example, if CWallet and CWalletTx had a cleaner interface for requesting information, this could reduce duplication between RPC and GUI. However, that probably means something a thin layer in between of data structure ",https://github.com/bitcoin/bitcoin/pull/2071#issuecomment-11006931,11006931,
mikegogulski,2012-12-04T17:45:35Z,"Yeah, I'm going to back out the JSON stuff. My eventual goal for this is to make CWallet a fully-functional first-class object, hide CWalletDB entirely, and have the RPC methods talking strictly to the wallet object. In addition to the ""standard"" benefits of proper encapsulation, this will eventually allow the client to support, for example, multiple wallets.\n",https://github.com/bitcoin/bitcoin/pull/2071#issuecomment-11007093,11007093,
sipa,2012-12-04T17:49:29Z,"@mikegogulski Sounds great, I think that's what we want. Note that there are some plans to move to another database backend for the wallets. Just so you don't waste effort on code that's going to be thrown out anyway.\n",https://github.com/bitcoin/bitcoin/pull/2071#issuecomment-11007249,11007249,
BitcoinPullTester,2012-12-04T17:52:34Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/82afcf6b0f6b6f286dca8d5444c43997bb602e1b for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/2071#issuecomment-11007371,11007371,
mikegogulski,2012-12-04T18:20:39Z,"Got it. I think it should be no problem, since the model I'm stumbling toward is like:\n\n```\nconsumer(e.g. bitcoind, bitcoin-qt, others)->walletRPCinterface->walletobject->...\n->...walletdbobject->nativedbobject\n->...blockchainRPCinterface->blockchainobject->whatever\n```\n\nwhere walletRPCinterface is the one and only interface to the wallet object, nothing but the wallet object talks to the ",https://github.com/bitcoin/bitcoin/pull/2071#issuecomment-11008492,11008492,
