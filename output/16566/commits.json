[
  {
    "sha": "0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNDgxZmEyNTg0NGRjNmVjOWY2YzNmYWM4NDI4ZDg3NGQzNGIwYWQw",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-08-07T04:42:54Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-08-08T02:35:14Z"
      },
      "message": "util: refactor upper/lowercase functions\n\nThis includes renaming Downcase() to ToLower() and make it return a string rather than modify referenced arg.\nAlso adds ToUpper() string version.",
      "tree": {
        "sha": "a47bab88fa0ff0abc0ea48b3c90cce6bd3e86a00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a47bab88fa0ff0abc0ea48b3c90cce6bd3e86a00"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl1LimIACgkQV692LbM1\nMyJnAg//cgzwneekPkk9tw4DJ+YbE7EmMpO0Cq87jD77hoEjpNbqiLID0SrXxMzL\n0s0pfC4NdRKsadV+J0E19JwkEnqs5uK2h4EoPOA0X5lA6WJjTHaJkyb9evdOx4GX\nN0d1AaewMQh+oRDZ2EqxiFph3g0OrsQ+IBzhoVnS4cDHwcSJBrtYGC6iEkaqnHu2\nceWeEizSmLObsYp7Kt3qrVTNJyJXSYOt6Z6KOGyRG43RViq4YIafNnaV+ZSJoCNt\nFROioTOPpwbokSsyJvHXvavaXxQL//DbIYigcE9AdxQhKRuAIHMn3mhQzrjQ8aFS\no7TYJKijSLDZ37rcY9g4wEHYaoKl+dLj/o8cx9WgK3m6hl0TTiYzmyeGDx4a663w\n/sCNnqj5ijAbA2TuRI/875fqBR0rQOO61aMNWEE7So6cvjkV8tq/Xpac9w5qlHtW\n3y3guXXpyioRb31F/tK7NV45cmaIAIQ/kajZ5Ce9vAmn7COiC8hkS6rXqxcZVy0c\nLahdDY3k+E22YP53UG4WcfX4C3RrzZcHrMZDeKQOO8I4sPqoGTJD9b267mFcu5yv\n1t5YQ8NIRkkE9SSVRUk9z+WaekpOnA9JFZALctp++YV9Sq+1F/4d0VLM6RiwuBJ7\nQbody8uMjAlqfUR14c4Hi+YIK2b5ZVkQYjLe8b1tnH2PO7nQl9Y=\n=Muvn\n-----END PGP SIGNATURE-----",
        "payload": "tree a47bab88fa0ff0abc0ea48b3c90cce6bd3e86a00\nparent e5fdda68c6d2313edb74443f0d1e6d2ce2d97f5e\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1565152974 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1565231714 +0900\n\nutil: refactor upper/lowercase functions\n\nThis includes renaming Downcase() to ToLower() and make it return a string rather than modify referenced arg.\nAlso adds ToUpper() string version.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0481fa25844dc6ec9f6c3fac8428d874d34b0ad0/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e5fdda68c6d2313edb74443f0d1e6d2ce2d97f5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5fdda68c6d2313edb74443f0d1e6d2ce2d97f5e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5fdda68c6d2313edb74443f0d1e6d2ce2d97f5e"
      }
    ],
    "stats": {
      "total": 72,
      "additions": 48,
      "deletions": 24
    },
    "files": [
      {
        "sha": "0148aea4286c406e419b95e95a2ab7037891bcfa",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0481fa25844dc6ec9f6c3fac8428d874d34b0ad0/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0481fa25844dc6ec9f6c3fac8428d874d34b0ad0/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
        "patch": "@@ -37,8 +37,8 @@ bool fNameLookup = DEFAULT_NAME_LOOKUP;\n static const int SOCKS5_RECV_TIMEOUT = 20 * 1000;\n static std::atomic<bool> interruptSocks5Recv(false);\n \n-enum Network ParseNetwork(std::string net) {\n-    Downcase(net);\n+enum Network ParseNetwork(const std::string& net_in) {\n+    std::string net = ToLower(net_in);\n     if (net == \"ipv4\") return NET_IPV4;\n     if (net == \"ipv6\") return NET_IPV6;\n     if (net == \"onion\") return NET_ONION;"
      },
      {
        "sha": "313a575687edab611b332b73fc265cec8ad8448c",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0481fa25844dc6ec9f6c3fac8428d874d34b0ad0/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0481fa25844dc6ec9f6c3fac8428d874d34b0ad0/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
        "patch": "@@ -37,7 +37,7 @@ class proxyType\n     bool randomize_credentials;\n };\n \n-enum Network ParseNetwork(std::string net);\n+enum Network ParseNetwork(const std::string& net);\n std::string GetNetworkName(enum Network net);\n bool SetProxy(enum Network net, const proxyType &addrProxy);\n bool GetProxy(enum Network net, proxyType &proxyInfoOut);"
      },
      {
        "sha": "7119f56fc378db181445fed85a50ee4bac4b5695",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 11,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0481fa25844dc6ec9f6c3fac8428d874d34b0ad0/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0481fa25844dc6ec9f6c3fac8428d874d34b0ad0/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
        "patch": "@@ -1532,17 +1532,9 @@ BOOST_AUTO_TEST_CASE(test_ToLower)\n     BOOST_CHECK_EQUAL(ToLower(0), 0);\n     BOOST_CHECK_EQUAL(ToLower('\\xff'), '\\xff');\n \n-    std::string testVector;\n-    Downcase(testVector);\n-    BOOST_CHECK_EQUAL(testVector, \"\");\n-\n-    testVector = \"#HODL\";\n-    Downcase(testVector);\n-    BOOST_CHECK_EQUAL(testVector, \"#hodl\");\n-\n-    testVector = \"\\x00\\xfe\\xff\";\n-    Downcase(testVector);\n-    BOOST_CHECK_EQUAL(testVector, \"\\x00\\xfe\\xff\");\n+    BOOST_CHECK_EQUAL(ToLower(\"\"), \"\");\n+    BOOST_CHECK_EQUAL(ToLower(\"#HODL\"), \"#hodl\");\n+    BOOST_CHECK_EQUAL(ToLower(\"\\x00\\xfe\\xff\"), \"\\x00\\xfe\\xff\");\n }\n \n BOOST_AUTO_TEST_CASE(test_ToUpper)\n@@ -1553,6 +1545,10 @@ BOOST_AUTO_TEST_CASE(test_ToUpper)\n     BOOST_CHECK_EQUAL(ToUpper('{'), '{');\n     BOOST_CHECK_EQUAL(ToUpper(0), 0);\n     BOOST_CHECK_EQUAL(ToUpper('\\xff'), '\\xff');\n+\n+    BOOST_CHECK_EQUAL(ToUpper(\"\"), \"\");\n+    BOOST_CHECK_EQUAL(ToUpper(\"#hodl\"), \"#HODL\");\n+    BOOST_CHECK_EQUAL(ToUpper(\"\\x00\\xfe\\xff\"), \"\\x00\\xfe\\xff\");\n }\n \n BOOST_AUTO_TEST_CASE(test_Capitalize)"
      },
      {
        "sha": "1e7d24c71c3cb890dd0cb062bc85a928e3543121",
        "filename": "src/util/strencodings.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0481fa25844dc6ec9f6c3fac8428d874d34b0ad0/src/util/strencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0481fa25844dc6ec9f6c3fac8428d874d34b0ad0/src/util/strencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.cpp?ref=0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
        "patch": "@@ -546,9 +546,18 @@ bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)\n     return true;\n }\n \n-void Downcase(std::string& str)\n+std::string ToLower(const std::string& str)\n {\n-    std::transform(str.begin(), str.end(), str.begin(), [](char c){return ToLower(c);});\n+    std::string r;\n+    for (auto ch : str) r += ToLower((unsigned char)ch);\n+    return r;\n+}\n+\n+std::string ToUpper(const std::string& str)\n+{\n+    std::string r;\n+    for (auto ch : str) r += ToUpper((unsigned char)ch);\n+    return r;\n }\n \n std::string Capitalize(std::string str)"
      },
      {
        "sha": "e35b2ab8571e40bdfd9bc50822031d807b7df460",
        "filename": "src/util/strencodings.h",
        "status": "modified",
        "additions": 26,
        "deletions": 7,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0481fa25844dc6ec9f6c3fac8428d874d34b0ad0/src/util/strencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0481fa25844dc6ec9f6c3fac8428d874d34b0ad0/src/util/strencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.h?ref=0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
        "patch": "@@ -199,6 +199,8 @@ bool ConvertBits(const O& outfn, I it, I end) {\n  * Converts the given character to its lowercase equivalent.\n  * This function is locale independent. It only converts uppercase\n  * characters in the standard 7-bit ASCII range.\n+ * This is a feature, not a limitation.\n+ *\n  * @param[in] c     the character to convert to lowercase.\n  * @return          the lowercase equivalent of c; or the argument\n  *                  if no conversion is possible.\n@@ -209,17 +211,22 @@ constexpr char ToLower(char c)\n }\n \n /**\n- * Converts the given string to its lowercase equivalent.\n+ * Returns the lowercase equivalent of the given string.\n  * This function is locale independent. It only converts uppercase\n  * characters in the standard 7-bit ASCII range.\n- * @param[in,out] str   the string to convert to lowercase.\n+ * This is a feature, not a limitation.\n+ *\n+ * @param[in] str   the string to convert to lowercase.\n+ * @returns         lowercased equivalent of str\n  */\n-void Downcase(std::string& str);\n+std::string ToLower(const std::string& str);\n \n /**\n  * Converts the given character to its uppercase equivalent.\n  * This function is locale independent. It only converts lowercase\n  * characters in the standard 7-bit ASCII range.\n+ * This is a feature, not a limitation.\n+ *\n  * @param[in] c     the character to convert to uppercase.\n  * @return          the uppercase equivalent of c; or the argument\n  *                  if no conversion is possible.\n@@ -229,13 +236,25 @@ constexpr char ToUpper(char c)\n     return (c >= 'a' && c <= 'z' ? (c - 'a') + 'A' : c);\n }\n \n+/**\n+ * Returns the uppercase equivalent of the given string.\n+ * This function is locale independent. It only converts lowercase\n+ * characters in the standard 7-bit ASCII range.\n+ * This is a feature, not a limitation.\n+ *\n+ * @param[in] str   the string to convert to uppercase.\n+ * @returns         UPPERCASED EQUIVALENT OF str\n+ */\n+std::string ToUpper(const std::string& str);\n+\n /**\n  * Capitalizes the first character of the given string.\n- * This function is locale independent. It only capitalizes the\n- * first character of the argument if it has an uppercase equivalent\n- * in the standard 7-bit ASCII range.\n+ * This function is locale independent. It only converts lowercase\n+ * characters in the standard 7-bit ASCII range.\n+ * This is a feature, not a limitation.\n+ *\n  * @param[in] str   the string to capitalize.\n- * @return          string with the first letter capitalized.\n+ * @returns         string with the first letter capitalized.\n  */\n std::string Capitalize(std::string str);\n "
      },
      {
        "sha": "f8bcc45a6a4950a588dc2a8cf9153db34fb261ee",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0481fa25844dc6ec9f6c3fac8428d874d34b0ad0/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0481fa25844dc6ec9f6c3fac8428d874d34b0ad0/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=0481fa25844dc6ec9f6c3fac8428d874d34b0ad0",
        "patch": "@@ -388,7 +388,7 @@ bool ArgsManager::ParseParameters(int argc, const char* const argv[], std::strin\n             key.erase(is_index);\n         }\n #ifdef WIN32\n-        std::transform(key.begin(), key.end(), key.begin(), ToLower);\n+        key = ToLower(key);\n         if (key[0] == '/')\n             key[0] = '-';\n #endif"
      }
    ]
  }
]