[
  {
    "sha": "eeee738d1c4b584968b816309dff78c8011d34bf",
    "node_id": "C_kwDOABII59oAKGVlZWU3MzhkMWM0YjU4NDk2OGI4MTYzMDlkZmY3OGM4MDExZDM0YmY",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-06-28T14:22:51Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-16T14:38:40Z"
      },
      "message": "net: Drop only invalid entries when reading banlist.json\n\nCurrently all entries in the file are dropped. Fix that by only dropping the invalid ones",
      "tree": {
        "sha": "5d8c2e136aa5798d729ca65b06601fae28be2eae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d8c2e136aa5798d729ca65b06601fae28be2eae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eeee738d1c4b584968b816309dff78c8011d34bf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjuVAv8Dsz6rULRleXEpqMiGs15B1sZKjmygXqJ0IRH8S5CuCUsgfOqGY0q3vlb\nAsRJ60Aflp9n6TX7NH/obuBXUOiIIztdXsRQt4UiSMzYilO50Js1+xdOGoN6Oaqr\nBsLfJqqWd7UpdSeXVTrVERNzN2arVc4PQRyNvBt74xQq8Ezg8eZxCWYcTGHAVPWL\nMraHmqlOIIKtIdNDsBZrve4TGFzp/suVHB/SnV37Xq0y54Rhe+tmrRhxVFILSse7\ndl0O6k+UP5JLoklJPZEaf8939XFs9KV6iNKCELfc4cUiZz7rrnuzKNPIP/mdg88D\nvyoN/S9RScKM8WPLbgPMCZ3edgn3gu0bYpkFWelrfBfN5Ru6yppK7cB50XUWLCbK\nqnpziZrtSE8eooVgO6ORfyR53X2f2Mjs26+bxvJZidNt3IENqZMrjoHwTdtFB4f9\nlkleHDH+rDde+HKZGDZ8GAtN8I++L5S82KgxLy/+SO/LsmCBL8p7zE9YilxO+Ssa\nbv575C8q\n=G9AF\n-----END PGP SIGNATURE-----",
        "payload": "tree 5d8c2e136aa5798d729ca65b06601fae28be2eae\nparent ad09c287cb7033a28f8d0a002c1ca4f194c12f11\nauthor MarcoFalke <falke.marco@gmail.com> 1624890171 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1637073520 +0100\n\nnet: Drop only invalid entries when reading banlist.json\n\nCurrently all entries in the file are dropped. Fix that by only dropping the invalid ones\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eeee738d1c4b584968b816309dff78c8011d34bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eeee738d1c4b584968b816309dff78c8011d34bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eeee738d1c4b584968b816309dff78c8011d34bf/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad09c287cb7033a28f8d0a002c1ca4f194c12f11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad09c287cb7033a28f8d0a002c1ca4f194c12f11",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad09c287cb7033a28f8d0a002c1ca4f194c12f11"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 57,
      "deletions": 4
    },
    "files": [
      {
        "sha": "6da83cbb36518185a92db9e9f027bc663c38a332",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eeee738d1c4b584968b816309dff78c8011d34bf/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eeee738d1c4b584968b816309dff78c8011d34bf/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=eeee738d1c4b584968b816309dff78c8011d34bf",
        "patch": "@@ -68,6 +68,7 @@ BITCOIN_TESTS =\\\n   test/allocator_tests.cpp \\\n   test/amount_tests.cpp \\\n   test/arith_uint256_tests.cpp \\\n+  test/banman_tests.cpp \\\n   test/base32_tests.cpp \\\n   test/base58_tests.cpp \\\n   test/base64_tests.cpp \\"
      },
      {
        "sha": "45382c46ffb4f53633475a4efed425599171a6b5",
        "filename": "src/net_types.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eeee738d1c4b584968b816309dff78c8011d34bf/src/net_types.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eeee738d1c4b584968b816309dff78c8011d34bf/src/net_types.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_types.cpp?ref=eeee738d1c4b584968b816309dff78c8011d34bf",
        "patch": "@@ -4,20 +4,24 @@\n \n #include <net_types.h>\n \n+#include <logging.h>\n #include <netaddress.h>\n #include <netbase.h>\n #include <univalue.h>\n \n+static const char* BANMAN_JSON_VERSION_KEY{\"version\"};\n+\n CBanEntry::CBanEntry(const UniValue& json)\n-    : nVersion(json[\"version\"].get_int()), nCreateTime(json[\"ban_created\"].get_int64()),\n+    : nVersion(json[BANMAN_JSON_VERSION_KEY].get_int()),\n+      nCreateTime(json[\"ban_created\"].get_int64()),\n       nBanUntil(json[\"banned_until\"].get_int64())\n {\n }\n \n UniValue CBanEntry::ToJson() const\n {\n     UniValue json(UniValue::VOBJ);\n-    json.pushKV(\"version\", nVersion);\n+    json.pushKV(BANMAN_JSON_VERSION_KEY, nVersion);\n     json.pushKV(\"ban_created\", nCreateTime);\n     json.pushKV(\"banned_until\", nBanUntil);\n     return json;\n@@ -54,11 +58,16 @@ UniValue BanMapToJson(const banmap_t& bans)\n void BanMapFromJson(const UniValue& bans_json, banmap_t& bans)\n {\n     for (const auto& ban_entry_json : bans_json.getValues()) {\n+        const int version{ban_entry_json[BANMAN_JSON_VERSION_KEY].get_int()};\n+        if (version != CBanEntry::CURRENT_VERSION) {\n+            LogPrintf(\"Dropping entry with unknown version (%s) from ban list\\n\", version);\n+            continue;\n+        }\n         CSubNet subnet;\n         const auto& subnet_str = ban_entry_json[BANMAN_JSON_ADDR_KEY].get_str();\n         if (!LookupSubNet(subnet_str, subnet)) {\n-            throw std::runtime_error(\n-                strprintf(\"Cannot parse banned address or subnet: %s\", subnet_str));\n+            LogPrintf(\"Dropping entry with unparseable address or subnet: %s\\n\", subnet_str);\n+            continue;\n         }\n         bans.insert_or_assign(subnet, CBanEntry{ban_entry_json});\n     }"
      },
      {
        "sha": "3d094af7fa1ca754b783f66b6f046c078f5aa28b",
        "filename": "src/test/banman_tests.cpp",
        "status": "added",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eeee738d1c4b584968b816309dff78c8011d34bf/src/test/banman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eeee738d1c4b584968b816309dff78c8011d34bf/src/test/banman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/banman_tests.cpp?ref=eeee738d1c4b584968b816309dff78c8011d34bf",
        "patch": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <banman.h>\n+#include <chainparams.h>\n+#include <netbase.h>\n+#include <streams.h>\n+#include <test/util/logging.h>\n+#include <test/util/setup_common.h>\n+#include <util/readwritefile.h>\n+\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(banman_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(file)\n+{\n+    SetMockTime(777s);\n+    const fs::path banlist_path{m_args.GetDataDirBase() / \"banlist_test\"};\n+    {\n+        const std::string entries_write{\n+            \"{ \\\"banned_nets\\\": [\"\n+            \"  { \\\"version\\\": 1, \\\"ban_created\\\": 0, \\\"banned_until\\\": 778, \\\"address\\\": \\\"aaaaaaaaa\\\" },\"\n+            \"  { \\\"version\\\": 2, \\\"ban_created\\\": 0, \\\"banned_until\\\": 778, \\\"address\\\": \\\"bbbbbbbbb\\\" },\"\n+            \"  { \\\"version\\\": 1, \\\"ban_created\\\": 0, \\\"banned_until\\\": 778, \\\"address\\\": \\\"1.0.0.0/8\\\" }\"\n+            \"] }\",\n+        };\n+        assert(WriteBinaryFile(banlist_path + \".json\", entries_write));\n+        {\n+            // The invalid entries will be dropped, but the valid one remains\n+            ASSERT_DEBUG_LOG(\"Dropping entry with unparseable address or subnet: aaaaaaaaa\");\n+            ASSERT_DEBUG_LOG(\"Dropping entry with unknown version (2) from ban list\");\n+            BanMan banman{banlist_path, /*client_interface=*/nullptr, /*default_ban_time=*/0};\n+            banmap_t entries_read;\n+            banman.GetBanned(entries_read);\n+            assert(entries_read.size() == 1);\n+        }\n+    }\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]