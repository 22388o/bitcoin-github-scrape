[
  {
    "sha": "5e1ddc421060e24bdcda75a863d9a5e03e633423",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTFkZGM0MjEwNjBlMjRiZGNkYTc1YTg2M2Q5YTVlMDNlNjMzNDIz",
    "commit": {
      "author": {
        "name": "Michael Hendricks",
        "email": "michael@ndrix.org",
        "date": "2011-11-30T02:06:10Z"
      },
      "committer": {
        "name": "Michael Hendricks",
        "email": "michael@ndrix.org",
        "date": "2011-12-02T00:28:14Z"
      },
      "message": "Only log time samples in debug mode\n\nThe full list of time samples is rarely useful outside of debugging.\nThe node's time offset, however is useful for discovering local clock\ndrift, so it's displayed in all logging modes.",
      "tree": {
        "sha": "6f838f9552b24ff8ce721aa6121af35e8b0add9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f838f9552b24ff8ce721aa6121af35e8b0add9c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e1ddc421060e24bdcda75a863d9a5e03e633423",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e1ddc421060e24bdcda75a863d9a5e03e633423",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e1ddc421060e24bdcda75a863d9a5e03e633423",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e1ddc421060e24bdcda75a863d9a5e03e633423/comments",
    "author": {
      "login": "mndrix",
      "id": 43997,
      "node_id": "MDQ6VXNlcjQzOTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/43997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mndrix",
      "html_url": "https://github.com/mndrix",
      "followers_url": "https://api.github.com/users/mndrix/followers",
      "following_url": "https://api.github.com/users/mndrix/following{/other_user}",
      "gists_url": "https://api.github.com/users/mndrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mndrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mndrix/subscriptions",
      "organizations_url": "https://api.github.com/users/mndrix/orgs",
      "repos_url": "https://api.github.com/users/mndrix/repos",
      "events_url": "https://api.github.com/users/mndrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mndrix/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mndrix",
      "id": 43997,
      "node_id": "MDQ6VXNlcjQzOTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/43997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mndrix",
      "html_url": "https://github.com/mndrix",
      "followers_url": "https://api.github.com/users/mndrix/followers",
      "following_url": "https://api.github.com/users/mndrix/following{/other_user}",
      "gists_url": "https://api.github.com/users/mndrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mndrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mndrix/subscriptions",
      "organizations_url": "https://api.github.com/users/mndrix/orgs",
      "repos_url": "https://api.github.com/users/mndrix/repos",
      "events_url": "https://api.github.com/users/mndrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mndrix/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "173efb1865e271dede53bcdff7ee2e189df07aa4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/173efb1865e271dede53bcdff7ee2e189df07aa4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/173efb1865e271dede53bcdff7ee2e189df07aa4"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 6,
      "deletions": 3
    },
    "files": [
      {
        "sha": "badf43c0def20f731d9cb8104401ac1ceb9ef229",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e1ddc421060e24bdcda75a863d9a5e03e633423/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e1ddc421060e24bdcda75a863d9a5e03e633423/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=5e1ddc421060e24bdcda75a863d9a5e03e633423",
        "patch": "@@ -977,9 +977,12 @@ void AddTimeData(unsigned int ip, int64 nTime)\n                 }\n             }\n         }\n-        BOOST_FOREACH(int64 n, vTimeOffsets)\n-            printf(\"%+\"PRI64d\"  \", n);\n-        printf(\"|  nTimeOffset = %+\"PRI64d\"  (%+\"PRI64d\" minutes)\\n\", nTimeOffset, nTimeOffset/60);\n+        if (fDebug) {\n+            BOOST_FOREACH(int64 n, vTimeOffsets)\n+                printf(\"%+\"PRI64d\"  \", n);\n+            printf(\"|  \");\n+        }\n+        printf(\"nTimeOffset = %+\"PRI64d\"  (%+\"PRI64d\" minutes)\\n\", nTimeOffset, nTimeOffset/60);\n     }\n }\n "
      }
    ]
  },
  {
    "sha": "1c4aab926e0b25e0c896d4703d858eda1eb14ea5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYzRhYWI5MjZlMGIyNWUwYzg5NmQ0NzAzZDg1OGVkYTFlYjE0ZWE1",
    "commit": {
      "author": {
        "name": "Michael Hendricks",
        "email": "michael@ndrix.org",
        "date": "2011-11-30T03:15:59Z"
      },
      "committer": {
        "name": "Michael Hendricks",
        "email": "michael@ndrix.org",
        "date": "2011-12-02T00:28:14Z"
      },
      "message": "Retain only the most recent time samples\n\nRemembering all time samples makes nTimeOffset slow to respond to\nsystem clock corrections.  For instance, I start my node with a system\nclock that's 30 minutes slow and run it for a few days.  During that\ntime, I accumulate 10,000 offset samples with a median of 1800\nseconds.  Now I correct my system clock.  Without this change, my node\nmust collect another 10,000 samples before nTimeOffset is correct\nagain.  With this change, I must only accumulate 100 samples to\ncorrect the offset.\n\nStoring unlimited time samples also allows an attacker with many IP\naddresses (ex, a large botnet) to perform a memory exhaustion attack\nagainst Bitcoin nodes.  The attacker sends a version message from each\nIP to his target, consuming more of the target's memory each time.\nTime samples are small, so this attack might be impractical under the\nold code, but it's impossible with the new code.",
      "tree": {
        "sha": "240889e74db6e8ebdbdbad818c7056d964eadde8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/240889e74db6e8ebdbdbad818c7056d964eadde8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1c4aab926e0b25e0c896d4703d858eda1eb14ea5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c4aab926e0b25e0c896d4703d858eda1eb14ea5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1c4aab926e0b25e0c896d4703d858eda1eb14ea5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c4aab926e0b25e0c896d4703d858eda1eb14ea5/comments",
    "author": {
      "login": "mndrix",
      "id": 43997,
      "node_id": "MDQ6VXNlcjQzOTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/43997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mndrix",
      "html_url": "https://github.com/mndrix",
      "followers_url": "https://api.github.com/users/mndrix/followers",
      "following_url": "https://api.github.com/users/mndrix/following{/other_user}",
      "gists_url": "https://api.github.com/users/mndrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mndrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mndrix/subscriptions",
      "organizations_url": "https://api.github.com/users/mndrix/orgs",
      "repos_url": "https://api.github.com/users/mndrix/repos",
      "events_url": "https://api.github.com/users/mndrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mndrix/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mndrix",
      "id": 43997,
      "node_id": "MDQ6VXNlcjQzOTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/43997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mndrix",
      "html_url": "https://github.com/mndrix",
      "followers_url": "https://api.github.com/users/mndrix/followers",
      "following_url": "https://api.github.com/users/mndrix/following{/other_user}",
      "gists_url": "https://api.github.com/users/mndrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mndrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mndrix/subscriptions",
      "organizations_url": "https://api.github.com/users/mndrix/orgs",
      "repos_url": "https://api.github.com/users/mndrix/repos",
      "events_url": "https://api.github.com/users/mndrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mndrix/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e1ddc421060e24bdcda75a863d9a5e03e633423",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e1ddc421060e24bdcda75a863d9a5e03e633423",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e1ddc421060e24bdcda75a863d9a5e03e633423"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 17,
      "deletions": 10
    },
    "files": [
      {
        "sha": "2b4169ad41b25664b196e42f776c8440e08522e8",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 10,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c4aab926e0b25e0c896d4703d858eda1eb14ea5/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c4aab926e0b25e0c896d4703d858eda1eb14ea5/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=1c4aab926e0b25e0c896d4703d858eda1eb14ea5",
        "patch": "@@ -30,7 +30,7 @@ string strMiscWarning;\n bool fTestNet = false;\n bool fNoListen = false;\n bool fLogTimestamps = false;\n-\n+CMedianFilter<int64> vTimeOffsets(200,0);\n \n \n \n@@ -940,15 +940,12 @@ void AddTimeData(unsigned int ip, int64 nTime)\n         return;\n \n     // Add data\n-    static vector<int64> vTimeOffsets;\n-    if (vTimeOffsets.empty())\n-        vTimeOffsets.push_back(0);\n-    vTimeOffsets.push_back(nOffsetSample);\n-    printf(\"Added time data, samples %d, offset %+\"PRI64d\" (%+\"PRI64d\" minutes)\\n\", vTimeOffsets.size(), vTimeOffsets.back(), vTimeOffsets.back()/60);\n+    vTimeOffsets.input(nOffsetSample);\n+    printf(\"Added time data, samples %d, offset %+\"PRI64d\" (%+\"PRI64d\" minutes)\\n\", vTimeOffsets.size(), nOffsetSample, nOffsetSample/60);\n     if (vTimeOffsets.size() >= 5 && vTimeOffsets.size() % 2 == 1)\n     {\n-        sort(vTimeOffsets.begin(), vTimeOffsets.end());\n-        int64 nMedian = vTimeOffsets[vTimeOffsets.size()/2];\n+        int64 nMedian = vTimeOffsets.median();\n+        std::vector<int64> vSorted = vTimeOffsets.sorted();\n         // Only let other nodes change our time by so much\n         if (abs64(nMedian) < 70 * 60)\n         {\n@@ -963,7 +960,7 @@ void AddTimeData(unsigned int ip, int64 nTime)\n             {\n                 // If nobody has a time different than ours but within 5 minutes of ours, give a warning\n                 bool fMatch = false;\n-                BOOST_FOREACH(int64 nOffset, vTimeOffsets)\n+                BOOST_FOREACH(int64 nOffset, vSorted)\n                     if (nOffset != 0 && abs64(nOffset) < 5 * 60)\n                         fMatch = true;\n \n@@ -978,7 +975,7 @@ void AddTimeData(unsigned int ip, int64 nTime)\n             }\n         }\n         if (fDebug) {\n-            BOOST_FOREACH(int64 n, vTimeOffsets)\n+            BOOST_FOREACH(int64 n, vSorted)\n                 printf(\"%+\"PRI64d\"  \", n);\n             printf(\"|  \");\n         }"
      },
      {
        "sha": "0dcd01100e4f403d5cbed35a60d2cfce64b7a222",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c4aab926e0b25e0c896d4703d858eda1eb14ea5/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c4aab926e0b25e0c896d4703d858eda1eb14ea5/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=1c4aab926e0b25e0c896d4703d858eda1eb14ea5",
        "patch": "@@ -623,6 +623,16 @@ template <typename T> class CMedianFilter\n             return (vSorted[size/2-1] + vSorted[size/2]) / 2;\n         }\n     }\n+\n+    int size() const\n+    {\n+        return vValues.size();\n+    }\n+\n+    std::vector<T> sorted () const\n+    {\n+        return vSorted;\n+    }\n };\n \n "
      }
    ]
  }
]