[
  {
    "sha": "ed671005654136b728768a423c8ac7f4e1ce637f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDY3MTAwNTY1NDEzNmI3Mjg3NjhhNDIzYzhhYzdmNGUxY2U2Mzdm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-04-23T06:05:05Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-04-23T06:05:05Z"
      },
      "message": "Add required locks in tests\n\nUnit tests with DEBUG_LOCKORDER were running into assertions.",
      "tree": {
        "sha": "de1cd7fa944c49a2baaf2805f18776de2a181892",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de1cd7fa944c49a2baaf2805f18776de2a181892"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed671005654136b728768a423c8ac7f4e1ce637f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed671005654136b728768a423c8ac7f4e1ce637f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed671005654136b728768a423c8ac7f4e1ce637f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed671005654136b728768a423c8ac7f4e1ce637f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bbe53f61db73237b8334207d696d99a4cf16a760",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbe53f61db73237b8334207d696d99a4cf16a760",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bbe53f61db73237b8334207d696d99a4cf16a760"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "eea249b114dcf9f8e11ffd9aecad3003b52b75f7",
        "filename": "src/test/rpc_wallet_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed671005654136b728768a423c8ac7f4e1ce637f/src/test/rpc_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed671005654136b728768a423c8ac7f4e1ce637f/src/test/rpc_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_wallet_tests.cpp?ref=ed671005654136b728768a423c8ac7f4e1ce637f",
        "patch": "@@ -65,7 +65,7 @@ BOOST_AUTO_TEST_CASE(rpc_wallet)\n     // Test RPC calls for various wallet statistics\n     Value r;\n \n-    LOCK(pwalletMain->cs_wallet);\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n \n     BOOST_CHECK_NO_THROW(CallRPC(\"listunspent\"));\n     BOOST_CHECK_THROW(CallRPC(\"listunspent string\"), runtime_error);"
      },
      {
        "sha": "9b1290e0ea07c4e06cf813dbe988fad4ad6d6472",
        "filename": "src/test/script_P2SH_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed671005654136b728768a423c8ac7f4e1ce637f/src/test/script_P2SH_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed671005654136b728768a423c8ac7f4e1ce637f/src/test/script_P2SH_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_P2SH_tests.cpp?ref=ed671005654136b728768a423c8ac7f4e1ce637f",
        "patch": "@@ -50,6 +50,7 @@ BOOST_AUTO_TEST_SUITE(script_P2SH_tests)\n \n BOOST_AUTO_TEST_CASE(sign)\n {\n+    LOCK(cs_main);\n     // Pay-to-script-hash looks like this:\n     // scriptSig:    <sig> <sig...> <serialized_script>\n     // scriptPubKey: HASH160 <hash> EQUAL\n@@ -147,6 +148,7 @@ BOOST_AUTO_TEST_CASE(norecurse)\n \n BOOST_AUTO_TEST_CASE(set)\n {\n+    LOCK(cs_main);\n     // Test the CScript::Set* methods\n     CBasicKeyStore keystore;\n     CKey key[4];\n@@ -250,6 +252,7 @@ BOOST_AUTO_TEST_CASE(switchover)\n \n BOOST_AUTO_TEST_CASE(AreInputsStandard)\n {\n+    LOCK(cs_main);\n     CCoinsView coinsDummy;\n     CCoinsViewCache coins(coinsDummy);\n     CBasicKeyStore keystore;"
      },
      {
        "sha": "24647950c46f63743e5654e97d3efdaf9677c77a",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed671005654136b728768a423c8ac7f4e1ce637f/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed671005654136b728768a423c8ac7f4e1ce637f/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=ed671005654136b728768a423c8ac7f4e1ce637f",
        "patch": "@@ -254,6 +254,7 @@ BOOST_AUTO_TEST_CASE(test_Get)\n \n BOOST_AUTO_TEST_CASE(test_IsStandard)\n {\n+    LOCK(cs_main);\n     CBasicKeyStore keystore;\n     CCoinsView coinsDummy;\n     CCoinsViewCache coins(coinsDummy);"
      }
    ]
  },
  {
    "sha": "41106a50d2be9358ab19e75c1d6d075a773525b7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MTEwNmE1MGQyYmU5MzU4YWIxOWU3NWMxZDZkMDc1YTc3MzUyNWI3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-04-23T06:40:48Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-04-23T07:07:18Z"
      },
      "message": "qt: get required locks upfront in polling functions\n\nThis avoids the GUI from getting stuck on\nperiodical polls if the core is holding the locks for a longer time -\nfor example, during a wallet rescan.",
      "tree": {
        "sha": "cdda729dd8d02fc4052531ee902f51a21b8a2b12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cdda729dd8d02fc4052531ee902f51a21b8a2b12"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41106a50d2be9358ab19e75c1d6d075a773525b7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41106a50d2be9358ab19e75c1d6d075a773525b7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/41106a50d2be9358ab19e75c1d6d075a773525b7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41106a50d2be9358ab19e75c1d6d075a773525b7/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed671005654136b728768a423c8ac7f4e1ce637f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed671005654136b728768a423c8ac7f4e1ce637f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed671005654136b728768a423c8ac7f4e1ce637f"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 34,
      "deletions": 18
    },
    "files": [
      {
        "sha": "3c0564c2081836654947e169ee42d4eb56df1b5b",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41106a50d2be9358ab19e75c1d6d075a773525b7/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41106a50d2be9358ab19e75c1d6d075a773525b7/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=41106a50d2be9358ab19e75c1d6d075a773525b7",
        "patch": "@@ -92,6 +92,12 @@ double ClientModel::getVerificationProgress() const\n \n void ClientModel::updateTimer()\n {\n+    // Get required lock upfront. This avoids the GUI from getting stuck on\n+    // periodical polls if the core is holding the locks for a longer time -\n+    // for example, during a wallet rescan.\n+    TRY_LOCK(cs_main, lockMain);\n+    if(!lockMain)\n+        return;\n     // Some quantities (such as number of blocks) change so fast that we don't want to be notified for each change.\n     // Periodically check and update with a timer.\n     int newNumBlocks = getNumBlocks();"
      },
      {
        "sha": "df412650d8cd746f3347b643ec32f61b532d1598",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 7,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41106a50d2be9358ab19e75c1d6d075a773525b7/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41106a50d2be9358ab19e75c1d6d075a773525b7/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=41106a50d2be9358ab19e75c1d6d075a773525b7",
        "patch": "@@ -24,7 +24,6 @@\n #include <QDebug>\n #include <QIcon>\n #include <QList>\n-#include <QTimer>\n \n // Amount column is right-aligned it contains numbers\n static int column_alignments[] = {\n@@ -187,17 +186,25 @@ class TransactionTablePriv\n         {\n             TransactionRecord *rec = &cachedWallet[idx];\n \n+            // Get required locks upfront. This avoids the GUI from getting\n+            // stuck if the core is holding the locks for a longer time - for\n+            // example, during a wallet rescan.\n+            //\n             // If a status update is needed (blocks came in since last check),\n             //  update the status of this transaction from the wallet. Otherwise,\n             // simply re-use the cached status.\n-            LOCK2(cs_main, wallet->cs_wallet);\n-            if(rec->statusUpdateNeeded())\n+            TRY_LOCK(cs_main, lockMain);\n+            if(lockMain)\n             {\n-                std::map<uint256, CWalletTx>::iterator mi = wallet->mapWallet.find(rec->hash);\n-\n-                if(mi != wallet->mapWallet.end())\n+                TRY_LOCK(wallet->cs_wallet, lockWallet);\n+                if(lockWallet && rec->statusUpdateNeeded())\n                 {\n-                    rec->updateStatus(mi->second);\n+                    std::map<uint256, CWalletTx>::iterator mi = wallet->mapWallet.find(rec->hash);\n+\n+                    if(mi != wallet->mapWallet.end())\n+                    {\n+                        rec->updateStatus(mi->second);\n+                    }\n                 }\n             }\n             return rec;"
      },
      {
        "sha": "37d82ec0633c868fcbab592fc28a3efeb6a9cbc8",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 11,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41106a50d2be9358ab19e75c1d6d075a773525b7/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41106a50d2be9358ab19e75c1d6d075a773525b7/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=41106a50d2be9358ab19e75c1d6d075a773525b7",
        "patch": "@@ -98,18 +98,21 @@ void WalletModel::updateStatus()\n \n void WalletModel::pollBalanceChanged()\n {\n-    bool heightChanged = false;\n-    {\n-        LOCK(cs_main);\n-        if(chainActive.Height() != cachedNumBlocks)\n-        {\n-            // Balance and number of transactions might have changed\n-            cachedNumBlocks = chainActive.Height();\n-            heightChanged = true;\n-        }\n-    }\n-    if(heightChanged)\n+    // Get required locks upfront. This avoids the GUI from getting stuck on\n+    // periodical polls if the core is holding the locks for a longer time -\n+    // for example, during a wallet rescan.\n+    TRY_LOCK(cs_main, lockMain);\n+    if(!lockMain)\n+        return;\n+    TRY_LOCK(wallet->cs_wallet, lockWallet);\n+    if(!lockWallet)\n+        return;\n+\n+    if(chainActive.Height() != cachedNumBlocks)\n     {\n+        // Balance and number of transactions might have changed\n+        cachedNumBlocks = chainActive.Height();\n+\n         checkBalanceChanged();\n         if(transactionTableModel)\n             transactionTableModel->updateConfirmations();"
      }
    ]
  },
  {
    "sha": "b39a07dc42ab6ba746a25206969fb81913146f1f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMzlhMDdkYzQyYWI2YmE3NDZhMjUyMDY5NjlmYjgxOTEzMTQ2ZjFm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-04-23T06:55:24Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-04-23T07:07:18Z"
      },
      "message": "Add missing AssertLockHeld in ConnectBlock",
      "tree": {
        "sha": "15d7a1f8f697ef2406b42feb059f05b3cfd223d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15d7a1f8f697ef2406b42feb059f05b3cfd223d6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b39a07dc42ab6ba746a25206969fb81913146f1f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b39a07dc42ab6ba746a25206969fb81913146f1f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b39a07dc42ab6ba746a25206969fb81913146f1f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b39a07dc42ab6ba746a25206969fb81913146f1f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "41106a50d2be9358ab19e75c1d6d075a773525b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41106a50d2be9358ab19e75c1d6d075a773525b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/41106a50d2be9358ab19e75c1d6d075a773525b7"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a591168c07b6f422f1be31a68d4fe4aa4c132206",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b39a07dc42ab6ba746a25206969fb81913146f1f/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b39a07dc42ab6ba746a25206969fb81913146f1f/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=b39a07dc42ab6ba746a25206969fb81913146f1f",
        "patch": "@@ -1727,6 +1727,7 @@ void ThreadScriptCheck() {\n \n bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, CCoinsViewCache& view, bool fJustCheck)\n {\n+    AssertLockHeld(cs_main);\n     // Check it again in case a previous version let a bad block in\n     if (!CheckBlock(block, state, !fJustCheck, !fJustCheck))\n         return false;"
      }
    ]
  }
]