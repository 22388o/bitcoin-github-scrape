[
  {
    "sha": "16d6113f4faa901e248adb693d4768a9e5019a16",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNmQ2MTEzZjRmYWE5MDFlMjQ4YWRiNjkzZDQ3NjhhOWU1MDE5YTE2",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-08-07T13:56:24Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-01-22T19:55:24Z"
      },
      "message": "Refactor message transport packaging",
      "tree": {
        "sha": "881ce4f3f41bd30d163915f0c184aa58bf0ec23e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/881ce4f3f41bd30d163915f0c184aa58bf0ec23e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16d6113f4faa901e248adb693d4768a9e5019a16",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl4oqK4ACgkQDMUhUxl5\nkaURqRAAwnP8MvI2/9izh5jQ4RSBd4u7LZvZzrzWc1dGhDkx/5x7o/V2yR+JkK4U\nrr8ODBh1oK7T4FFFtv5Uacx+9zBVKSHvrN+boBLKT8EeJQOjw+Rx2ZEnrBZY0GiE\nFP92VMPjn1sCM2knODHmW7YlHrn7T8YmaqgnixadaHHnXb8NERxIR41VXyJ381/H\n9vvsXJlXjPklHl8BGxFs8o3UmzDMSYsf56g5Titqa3MomJRxU4cJvDZP8y+b83+p\ninxjUdNauo6x2TxKU75SFU4Ifad968I+TzVSOb+cyclFw4sPUq2M6eC48xsQmsXF\nU8Ax3jDTU25IImsjEEpjAr7qET2zvV5c6HLifwwfuf8wfcWoZlpPA2aEx5GmbCoF\na5ewbem0qM+ydd+Yl+wcun67gp0+RMKT1//ehRLNvJc5keyM1sbA0DiPGEAnm1zV\nliotFGLN/DDxkKrlODrMVKTWVCo+dAb9r1MfcIgGZKpTx5AlvXzIBm22e7b/r06p\nnJb1HgPOepYKhTjcbZsRpT+LEi7XPw+YG2gdSAGzRt0/alhK3w9HsEscrYb3GwVP\nYoz/J+eVvvANFfcJHC3J7nCJA8ktAaLf7DHPuItsYZekaYgICEKR2vwOM9f50tTw\nWvfXW2tgx8i1RE4n/E53jbCZlm3BR1714dz+N5gYo9moDcbRGjI=\n=OPh5\n-----END PGP SIGNATURE-----",
        "payload": "tree 881ce4f3f41bd30d163915f0c184aa58bf0ec23e\nparent 04f78b818f02279d32c3ad3a1140e9410bfb26bf\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1565186184 +0200\ncommitter Carl Dong <contact@carldong.me> 1579722924 -0500\n\nRefactor message transport packaging\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16d6113f4faa901e248adb693d4768a9e5019a16",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/16d6113f4faa901e248adb693d4768a9e5019a16",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16d6113f4faa901e248adb693d4768a9e5019a16/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "04f78b818f02279d32c3ad3a1140e9410bfb26bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04f78b818f02279d32c3ad3a1140e9410bfb26bf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/04f78b818f02279d32c3ad3a1140e9410bfb26bf"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 32,
      "deletions": 7
    },
    "files": [
      {
        "sha": "f5de58204947fb577e7d5a9dcd52315be878a62d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 7,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16d6113f4faa901e248adb693d4768a9e5019a16/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16d6113f4faa901e248adb693d4768a9e5019a16/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=16d6113f4faa901e248adb693d4768a9e5019a16",
        "patch": "@@ -716,6 +716,19 @@ CNetMessage V1TransportDeserializer::GetMessage(const CMessageHeader::MessageSta\n     return msg;\n }\n \n+void V1TransportSerializer::prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) {\n+    // create dbl-sha256 checksum\n+    uint256 hash = Hash(msg.data.begin(), msg.data.end());\n+\n+    // create header\n+    CMessageHeader hdr(Params().MessageStart(), msg.command.c_str(), msg.data.size());\n+    memcpy(hdr.pchChecksum, hash.begin(), CMessageHeader::CHECKSUM_SIZE);\n+\n+    // serialize header\n+    header.reserve(CMessageHeader::HEADER_SIZE);\n+    CVectorWriter{SER_NETWORK, INIT_PROTO_VERSION, header, 0, hdr};\n+}\n+\n size_t CConnman::SocketSendData(CNode *pnode) const EXCLUSIVE_LOCKS_REQUIRED(pnode->cs_vSend)\n {\n     auto it = pnode->vSendMsg.begin();\n@@ -2703,6 +2716,7 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n     }\n \n     m_deserializer = MakeUnique<V1TransportDeserializer>(V1TransportDeserializer(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n+    m_serializer = MakeUnique<V1TransportSerializer>(V1TransportSerializer());\n }\n \n CNode::~CNode()\n@@ -2718,16 +2732,12 @@ bool CConnman::NodeFullyConnected(const CNode* pnode)\n void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     size_t nMessageSize = msg.data.size();\n-    size_t nTotalSize = nMessageSize + CMessageHeader::HEADER_SIZE;\n     LogPrint(BCLog::NET, \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command), nMessageSize, pnode->GetId());\n \n+    // make sure we use the appropriate network transport format\n     std::vector<unsigned char> serializedHeader;\n-    serializedHeader.reserve(CMessageHeader::HEADER_SIZE);\n-    uint256 hash = Hash(msg.data.data(), msg.data.data() + nMessageSize);\n-    CMessageHeader hdr(Params().MessageStart(), msg.command.c_str(), nMessageSize);\n-    memcpy(hdr.pchChecksum, hash.begin(), CMessageHeader::CHECKSUM_SIZE);\n-\n-    CVectorWriter{SER_NETWORK, INIT_PROTO_VERSION, serializedHeader, 0, hdr};\n+    pnode->m_serializer->prepareForTransport(msg, serializedHeader);\n+    size_t nTotalSize = nMessageSize + serializedHeader.size();\n \n     size_t nBytesSent = 0;\n     {"
      },
      {
        "sha": "14ab090685aa816d5ed35c8a1377a315fb2dcefc",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16d6113f4faa901e248adb693d4768a9e5019a16/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16d6113f4faa901e248adb693d4768a9e5019a16/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=16d6113f4faa901e248adb693d4768a9e5019a16",
        "patch": "@@ -699,12 +699,27 @@ class V1TransportDeserializer final : public TransportDeserializer\n     CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) override;\n };\n \n+/** The TransportSerializer prepares messages for the network transport\n+ */\n+class TransportSerializer {\n+public:\n+    // prepare message for transport (header construction, error-correction computation, payload encryption, etc.)\n+    virtual void prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) = 0;\n+    virtual ~TransportSerializer() {}\n+};\n+\n+class V1TransportSerializer  : public TransportSerializer {\n+public:\n+    void prepareForTransport(CSerializedNetMsg& msg, std::vector<unsigned char>& header) override;\n+};\n+\n /** Information about a peer */\n class CNode\n {\n     friend class CConnman;\n public:\n     std::unique_ptr<TransportDeserializer> m_deserializer;\n+    std::unique_ptr<TransportSerializer> m_serializer;\n \n     // socket\n     std::atomic<ServiceFlags> nServices{NODE_NONE};"
      }
    ]
  }
]