[
  {
    "sha": "1df77014d8bb733d7d89e36b28671cb47f436292",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZGY3NzAxNGQ4YmI3MzNkN2Q4OWUzNmIyODY3MWNiNDdmNDM2Mjky",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-03-04T17:41:18Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-18T23:39:33Z"
      },
      "message": "refactor: Remove unused bool parameter in BlockNotifyGenesisWait()",
      "tree": {
        "sha": "7d438584734a2f8f1888928ce3ebe4ba5782f6fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7d438584734a2f8f1888928ce3ebe4ba5782f6fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1df77014d8bb733d7d89e36b28671cb47f436292",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7DHLcACgkQQQEIES5+\nqB/2rhAAo2iAVSk4hLc2LcuTJkuEqlv2HgxC6ppWQOP6f+pOskmvtLYIWQOsLcGw\naA7ZjgfmBie49twLBNKpTTNwsOxrSpg6+rQzCTkizlPfkHEmnPz8FbI08xtwMz5h\nS3u26oXkUgd+qIHmVRbkqp0wMGfPV3Dwo6cQJKgLgouYdFVPnibsQQ7TOrNMgt/A\nT8NV8d8BgiNLZ6UxjMh0opw+2m2Ajp+UKWH6x/OplhYcOgM0WkLwKHrrFzjVcuDH\ninymOA/Rlkzs0XWz34NC5UdpU5f5AD1C1gLQgSJUI4bzNyvqTy97ciMaSLRYA3NU\nkpIsq573Jp8l+z3GLYL+A58UhB61YNfHvEAbFoHYxHv4Xqe7CLO1CuAhYR3wgqkm\ngJIqSkwnthTlUIjDHgEuCGNSqIoc3zCDjzS30VSOaV9WZPoEF3/Wxrn7+NZHDWUK\n5pLE7k65g1X2fbTQRU/BZRUC31ntKLf03tUkg+cL60qdLbClbKbjxO/6SLYvw9qT\n1w29PTbrssWhqCoAghS5y2edYUAVw9Tde9jCUFuJVWLirVQPfynvWph2LZMU+sBz\nFmsaribspYFzsWDMRgXEyr+FlFd8gjOCu7R4SwNtbsFOFZqiDNTAFUzYbkFw6Jup\ndWxuCo5RRw4swvsZrMvMSkNhHCu/KekhCcOyCjJ28/h/2ZP/2Uw=\n=Vvwl\n-----END PGP SIGNATURE-----",
        "payload": "tree 7d438584734a2f8f1888928ce3ebe4ba5782f6fe\nparent dc5333d31f280e09bb1e8cdacfbe842f4ab9e69b\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1583343678 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589845173 +0300\n\nrefactor: Remove unused bool parameter in BlockNotifyGenesisWait()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1df77014d8bb733d7d89e36b28671cb47f436292",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1df77014d8bb733d7d89e36b28671cb47f436292",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1df77014d8bb733d7d89e36b28671cb47f436292/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dc5333d31f280e09bb1e8cdacfbe842f4ab9e69b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc5333d31f280e09bb1e8cdacfbe842f4ab9e69b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dc5333d31f280e09bb1e8cdacfbe842f4ab9e69b"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "2e7b93d0e85b25cac721c619d4dd8f70a5013691",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1df77014d8bb733d7d89e36b28671cb47f436292/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1df77014d8bb733d7d89e36b28671cb47f436292/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=1df77014d8bb733d7d89e36b28671cb47f436292",
        "patch": "@@ -59,9 +59,10 @@\n #include <validationinterface.h>\n #include <walletinitinterface.h>\n \n+#include <functional>\n+#include <set>\n #include <stdint.h>\n #include <stdio.h>\n-#include <set>\n \n #ifndef WIN32\n #include <attributes.h>\n@@ -622,7 +623,7 @@ static bool fHaveGenesis = false;\n static Mutex g_genesis_wait_mutex;\n static std::condition_variable g_genesis_wait_cv;\n \n-static void BlockNotifyGenesisWait(bool, const CBlockIndex *pBlockIndex)\n+static void BlockNotifyGenesisWait(const CBlockIndex* pBlockIndex)\n {\n     if (pBlockIndex != nullptr) {\n         {\n@@ -1826,7 +1827,7 @@ bool AppInitMain(NodeContext& node)\n     // No locking, as this happens before any background thread is started.\n     boost::signals2::connection block_notify_genesis_wait_connection;\n     if (::ChainActive().Tip() == nullptr) {\n-        block_notify_genesis_wait_connection = uiInterface.NotifyBlockTip_connect(BlockNotifyGenesisWait);\n+        block_notify_genesis_wait_connection = uiInterface.NotifyBlockTip_connect(std::bind(BlockNotifyGenesisWait, std::placeholders::_2));\n     } else {\n         fHaveGenesis = true;\n     }"
      }
    ]
  },
  {
    "sha": "2bec309ad6d0f2543948d64ed26f7d9a903f67e5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYmVjMzA5YWQ2ZDBmMjU0Mzk0OGQ2NGVkMjZmN2Q5YTkwM2Y2N2U1",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-03-04T17:48:32Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-18T23:39:45Z"
      },
      "message": "refactor: Remove unused bool parameter in RPCNotifyBlockChange()",
      "tree": {
        "sha": "79821c9506be0209c3863b67596406b94f6d91c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/79821c9506be0209c3863b67596406b94f6d91c0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2bec309ad6d0f2543948d64ed26f7d9a903f67e5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7DHMEACgkQQQEIES5+\nqB/NLRAAgUBdYSA2IAjt4qDzcQZhr63ETJHLw+dSs+zkX8J/2VSIlXfJPBaM0VMV\nT0cL4oqtxbz17yzeSmqGb0MtJMG4yq6tlYR+Fogrrx1BtPTUlsjx0ZHQY5Lq3mvW\ncEll8+TSthhIh1De5LgfSYs4FXVAcDqduvm1w/ZXhk30VyDF9sj+zEh+Vjtayoln\n5VwmOqpdKKoip8pAI2MpHFemXSkCpP/e75QdKRlE2HiARVVBOOxxjil7kO0Bxn+q\nf2QpBjZpO1Xy2WdIWp2vAPVlPehGEJ2BYTXjkGIpoxaHEw2oXYPpDEBZriq82J82\nSuVh9cla9/cFyPabnPAGOnsldqo6i2yzT67b64nYaZDtwhvAep6rkjyatpDvZFmQ\nvXbnHjxKZe6JuYKpr4qe0MSIEODhfNd1nNA7F+7GdojkyrhvWZZxp+lKYnuiBpZ6\nQc1CAtaTz6Zeldz48MPen71qCs0FRUzLWK3NGz8OsTURD4yd2YtpCQT2rxhRNpQg\nGLCr8PfUrHjF7Zcu6TpCu9sP6xdLeLh0UmP2QIniqinJ7uDZsO88ywsr+jQy1Ukd\nz/xpn0d+Gqy9qVhtaoDjHQMktDb3rOO9uKzw7CoxFg5MkxnC0tZ8f9Mzui6HE5ca\nn2QMzxa3KfY9BgIaZFxTCO4TQm+K8H1Wrqglu2o/Dq8VoljKRv4=\n=80sG\n-----END PGP SIGNATURE-----",
        "payload": "tree 79821c9506be0209c3863b67596406b94f6d91c0\nparent 1df77014d8bb733d7d89e36b28671cb47f436292\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1583344112 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589845185 +0300\n\nrefactor: Remove unused bool parameter in RPCNotifyBlockChange()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bec309ad6d0f2543948d64ed26f7d9a903f67e5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2bec309ad6d0f2543948d64ed26f7d9a903f67e5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bec309ad6d0f2543948d64ed26f7d9a903f67e5/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1df77014d8bb733d7d89e36b28671cb47f436292",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1df77014d8bb733d7d89e36b28671cb47f436292",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1df77014d8bb733d7d89e36b28671cb47f436292"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "c5f0a5cf1fa4f9d080e5eb2141f3e000dfe0a763",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bec309ad6d0f2543948d64ed26f7d9a903f67e5/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bec309ad6d0f2543948d64ed26f7d9a903f67e5/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=2bec309ad6d0f2543948d64ed26f7d9a903f67e5",
        "patch": "@@ -351,13 +351,13 @@ static void registerSignalHandler(int signal, void(*handler)(int))\n static boost::signals2::connection rpc_notify_block_change_connection;\n static void OnRPCStarted()\n {\n-    rpc_notify_block_change_connection = uiInterface.NotifyBlockTip_connect(&RPCNotifyBlockChange);\n+    rpc_notify_block_change_connection = uiInterface.NotifyBlockTip_connect(std::bind(RPCNotifyBlockChange, std::placeholders::_2));\n }\n \n static void OnRPCStopped()\n {\n     rpc_notify_block_change_connection.disconnect();\n-    RPCNotifyBlockChange(false, nullptr);\n+    RPCNotifyBlockChange(nullptr);\n     g_best_block_cv.notify_all();\n     LogPrint(BCLog::RPC, \"RPC stopped.\\n\");\n }\n@@ -1702,7 +1702,7 @@ bool AppInitMain(NodeContext& node)\n                         }\n \n                         const CBlockIndex* tip = chainstate->m_chain.Tip();\n-                        RPCNotifyBlockChange(true, tip);\n+                        RPCNotifyBlockChange(tip);\n                         if (tip && tip->nTime > GetAdjustedTime() + 2 * 60 * 60) {\n                             strLoadError = _(\"The block database contains a block which appears to be from the future. \"\n                                     \"This may be due to your computer's date and time being set incorrectly. \""
      },
      {
        "sha": "2c984603ff0f0d26b065f5acf90d7e62b41659e6",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bec309ad6d0f2543948d64ed26f7d9a903f67e5/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bec309ad6d0f2543948d64ed26f7d9a903f67e5/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=2bec309ad6d0f2543948d64ed26f7d9a903f67e5",
        "patch": "@@ -205,7 +205,7 @@ static UniValue getbestblockhash(const JSONRPCRequest& request)\n     return ::ChainActive().Tip()->GetBlockHash().GetHex();\n }\n \n-void RPCNotifyBlockChange(bool ibd, const CBlockIndex * pindex)\n+void RPCNotifyBlockChange(const CBlockIndex* pindex)\n {\n     if(pindex) {\n         std::lock_guard<std::mutex> lock(cs_blockchange);"
      },
      {
        "sha": "54165af707c66889f34832484fc3216348fefe5f",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bec309ad6d0f2543948d64ed26f7d9a903f67e5/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bec309ad6d0f2543948d64ed26f7d9a903f67e5/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=2bec309ad6d0f2543948d64ed26f7d9a903f67e5",
        "patch": "@@ -30,7 +30,7 @@ static constexpr int NUM_GETBLOCKSTATS_PERCENTILES = 5;\n double GetDifficulty(const CBlockIndex* blockindex);\n \n /** Callback for when block tip changed. */\n-void RPCNotifyBlockChange(bool ibd, const CBlockIndex *);\n+void RPCNotifyBlockChange(const CBlockIndex*);\n \n /** Block description to JSON */\n UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIndex* blockindex, bool txDetails = false) LOCKS_EXCLUDED(cs_main);"
      }
    ]
  },
  {
    "sha": "1dab574edf57ccd6cdf5ec706ac328c62142d7a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZGFiNTc0ZWRmNTdjY2Q2Y2RmNWVjNzA2YWMzMjhjNjIxNDJkN2Ey",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-03-04T18:05:42Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-18T23:49:32Z"
      },
      "message": "refactor: Pass SynchronizationState enum to GUI\n\nCo-authored-by: Russell Yanofsky <russ@yanofsky.org>",
      "tree": {
        "sha": "ce6c55a92d99648b2adf4cbbda0ccf6c282654bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce6c55a92d99648b2adf4cbbda0ccf6c282654bc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1dab574edf57ccd6cdf5ec706ac328c62142d7a2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7DHw4ACgkQQQEIES5+\nqB+CPg/+OVmMBNz/oH1KZzkZ1VcjjZbhEOl7n9fKvqEbhFYaKqzx4Kd7PkTNpDPn\nj6b2G3+X54QKKr1Q0yNtuFG3TpxpzGLXVRaJre65HSMDmtsdaYx+yu/aUCE4Kvkz\njZpeMh0mhuLrked8w+uRuCe8w/yqaLmOaprsg5gy7om4csyZvUcwEneUq2skojTa\nFHoOr8KWACr9whkZN9CKGdaK4+2nlfhLhJiC2tKnWEwPd8cUZw0KCtpXZlod3jJm\nDbwCsPBYYMr3jYJzByXPAHKsMLb+I7HKTKSCEyajc5C867V1swnz62wmF+FqQF+C\nS6KXp4k2962sxFyjAJnidZVuzvLNh1EyIuauME9rT79nxi79RR0jU8q3ER8KiFff\nbBhf/FrcWO3EHtEyKt2j7YIaH6LbxlD/sLCNG2cXXFJtRojoSYw8YqYNEFm8yQc5\nFrmzGBCZ9mAXoinCtJtVo+cn/TzigD6/b7V9M4K9OlTbmHGAuVMOzqXVI9yeKPiW\n7wV6ZGCu9mcSWcNzI+vz8cn4/n2M2KeNXzLHPQniAI8vf2A5/LPNwXEFGlHDL+2U\ns9oSL5aPU/Ro1IkCBkaGCAPxEzELgRY2CLrALxnysn2ZCtcuL4/HbeIRYPTlL+Sv\nu98PqnRZMAd3TTJF2xHyqoH9SCVTie3HS8bYsJW3qDLVRtgvuJs=\n=GcMd\n-----END PGP SIGNATURE-----",
        "payload": "tree ce6c55a92d99648b2adf4cbbda0ccf6c282654bc\nparent 2bec309ad6d0f2543948d64ed26f7d9a903f67e5\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1583345142 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589845772 +0300\n\nrefactor: Pass SynchronizationState enum to GUI\n\nCo-authored-by: Russell Yanofsky <russ@yanofsky.org>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1dab574edf57ccd6cdf5ec706ac328c62142d7a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1dab574edf57ccd6cdf5ec706ac328c62142d7a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2bec309ad6d0f2543948d64ed26f7d9a903f67e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bec309ad6d0f2543948d64ed26f7d9a903f67e5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2bec309ad6d0f2543948d64ed26f7d9a903f67e5"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 35,
      "deletions": 16
    },
    "files": [
      {
        "sha": "341c37cc5ab6ef86b72488f7397a185e80afc6c5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=1dab574edf57ccd6cdf5ec706ac328c62142d7a2",
        "patch": "@@ -605,9 +605,9 @@ std::string LicenseInfo()\n }\n \n #if HAVE_SYSTEM\n-static void BlockNotifyCallback(bool initialSync, const CBlockIndex *pBlockIndex)\n+static void BlockNotifyCallback(SynchronizationState sync_state, const CBlockIndex* pBlockIndex)\n {\n-    if (initialSync || !pBlockIndex)\n+    if (sync_state != SynchronizationState::POST_INIT || !pBlockIndex)\n         return;\n \n     std::string strCmd = gArgs.GetArg(\"-blocknotify\", \"\");"
      },
      {
        "sha": "d619d2d67dd5f6554cc6d1f3c768f4d21286160b",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=1dab574edf57ccd6cdf5ec706ac328c62142d7a2",
        "patch": "@@ -308,16 +308,16 @@ class NodeImpl : public Node\n     }\n     std::unique_ptr<Handler> handleNotifyBlockTip(NotifyBlockTipFn fn) override\n     {\n-        return MakeHandler(::uiInterface.NotifyBlockTip_connect([fn](bool initial_download, const CBlockIndex* block) {\n-            fn(initial_download, block->nHeight, block->GetBlockTime(),\n+        return MakeHandler(::uiInterface.NotifyBlockTip_connect([fn](SynchronizationState sync_state, const CBlockIndex* block) {\n+            fn(sync_state, block->nHeight, block->GetBlockTime(),\n                 GuessVerificationProgress(Params().TxData(), block));\n         }));\n     }\n     std::unique_ptr<Handler> handleNotifyHeaderTip(NotifyHeaderTipFn fn) override\n     {\n         return MakeHandler(\n-            ::uiInterface.NotifyHeaderTip_connect([fn](bool initial_download, const CBlockIndex* block) {\n-                fn(initial_download, block->nHeight, block->GetBlockTime(),\n+            ::uiInterface.NotifyHeaderTip_connect([fn](SynchronizationState sync_state, const CBlockIndex* block) {\n+                fn(sync_state, block->nHeight, block->GetBlockTime(),\n                     /* verification progress is unused when a header was received */ 0);\n             }));\n     }"
      },
      {
        "sha": "45b0e18faeeaa4688962f9fd8e51bf2949c54f6e",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=1dab574edf57ccd6cdf5ec706ac328c62142d7a2",
        "patch": "@@ -27,6 +27,7 @@ class Coin;\n class RPCTimerInterface;\n class UniValue;\n class proxyType;\n+enum class SynchronizationState;\n enum class WalletCreationStatus;\n struct CNodeStateStats;\n struct NodeContext;\n@@ -249,12 +250,12 @@ class Node\n \n     //! Register handler for block tip messages.\n     using NotifyBlockTipFn =\n-        std::function<void(bool initial_download, int height, int64_t block_time, double verification_progress)>;\n+        std::function<void(SynchronizationState, int height, int64_t block_time, double verification_progress)>;\n     virtual std::unique_ptr<Handler> handleNotifyBlockTip(NotifyBlockTipFn fn) = 0;\n \n     //! Register handler for header tip messages.\n     using NotifyHeaderTipFn =\n-        std::function<void(bool initial_download, int height, int64_t block_time, double verification_progress)>;\n+        std::function<void(SynchronizationState, int height, int64_t block_time, double verification_progress)>;\n     virtual std::unique_ptr<Handler> handleNotifyHeaderTip(NotifyHeaderTipFn fn) = 0;\n \n     //! Return pointer to internal chain interface, useful for testing."
      },
      {
        "sha": "abda9803840d44ca5094fb793317b3242bd84875",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=1dab574edf57ccd6cdf5ec706ac328c62142d7a2",
        "patch": "@@ -15,6 +15,7 @@\n #include <net.h>\n #include <netbase.h>\n #include <util/system.h>\n+#include <validation.h>\n \n #include <stdint.h>\n \n@@ -234,8 +235,10 @@ static void BannedListChanged(ClientModel *clientmodel)\n     assert(invoked);\n }\n \n-static void BlockTipChanged(ClientModel *clientmodel, bool initialSync, int height, int64_t blockTime, double verificationProgress, bool fHeader)\n+static void BlockTipChanged(ClientModel* clientmodel, SynchronizationState sync_state, int height, int64_t blockTime, double verificationProgress, bool fHeader)\n {\n+    const bool initialSync = sync_state != SynchronizationState::POST_INIT;\n+\n     // lock free async UI updates in case we have a new block tip\n     // during initial sync, only update the UI if the last update\n     // was > 250ms (MODEL_UPDATE_DELAY) ago"
      },
      {
        "sha": "15795bd67f833e88b5960d98ae357644ac13587d",
        "filename": "src/ui_interface.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/src/ui_interface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/src/ui_interface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.cpp?ref=1dab574edf57ccd6cdf5ec706ac328c62142d7a2",
        "patch": "@@ -49,8 +49,8 @@ void CClientUIInterface::NotifyNumConnectionsChanged(int newNumConnections) { re\n void CClientUIInterface::NotifyNetworkActiveChanged(bool networkActive) { return g_ui_signals.NotifyNetworkActiveChanged(networkActive); }\n void CClientUIInterface::NotifyAlertChanged() { return g_ui_signals.NotifyAlertChanged(); }\n void CClientUIInterface::ShowProgress(const std::string& title, int nProgress, bool resume_possible) { return g_ui_signals.ShowProgress(title, nProgress, resume_possible); }\n-void CClientUIInterface::NotifyBlockTip(bool b, const CBlockIndex* i) { return g_ui_signals.NotifyBlockTip(b, i); }\n-void CClientUIInterface::NotifyHeaderTip(bool b, const CBlockIndex* i) { return g_ui_signals.NotifyHeaderTip(b, i); }\n+void CClientUIInterface::NotifyBlockTip(SynchronizationState s, const CBlockIndex* i) { return g_ui_signals.NotifyBlockTip(s, i); }\n+void CClientUIInterface::NotifyHeaderTip(SynchronizationState s, const CBlockIndex* i) { return g_ui_signals.NotifyHeaderTip(s, i); }\n void CClientUIInterface::BannedListChanged() { return g_ui_signals.BannedListChanged(); }\n \n bool InitError(const bilingual_str& str)"
      },
      {
        "sha": "d45811178fe0b70d36a480338e6f41245ab9e4ba",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=1dab574edf57ccd6cdf5ec706ac328c62142d7a2",
        "patch": "@@ -11,6 +11,7 @@\n #include <string>\n \n class CBlockIndex;\n+enum class SynchronizationState;\n struct bilingual_str;\n \n namespace boost {\n@@ -110,10 +111,10 @@ class CClientUIInterface\n     ADD_SIGNALS_DECL_WRAPPER(ShowProgress, void, const std::string& title, int nProgress, bool resume_possible);\n \n     /** New block has been accepted */\n-    ADD_SIGNALS_DECL_WRAPPER(NotifyBlockTip, void, bool, const CBlockIndex*);\n+    ADD_SIGNALS_DECL_WRAPPER(NotifyBlockTip, void, SynchronizationState, const CBlockIndex*);\n \n     /** Best header has changed */\n-    ADD_SIGNALS_DECL_WRAPPER(NotifyHeaderTip, void, bool, const CBlockIndex*);\n+    ADD_SIGNALS_DECL_WRAPPER(NotifyHeaderTip, void, SynchronizationState, const CBlockIndex*);\n \n     /** Banlist did change. */\n     ADD_SIGNALS_DECL_WRAPPER(BannedListChanged, void, void);"
      },
      {
        "sha": "a9dfa5c171d668a88a900484387926ca1ebcc2bf",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=1dab574edf57ccd6cdf5ec706ac328c62142d7a2",
        "patch": "@@ -2800,6 +2800,13 @@ bool CChainState::ActivateBestChainStep(BlockValidationState& state, const CChai\n     return true;\n }\n \n+static SynchronizationState GetSynchronizationState(bool init)\n+{\n+    if (!init) return SynchronizationState::POST_INIT;\n+    if (::fReindex) return SynchronizationState::INIT_REINDEX;\n+    return SynchronizationState::INIT_DOWNLOAD;\n+}\n+\n static bool NotifyHeaderTip() LOCKS_EXCLUDED(cs_main) {\n     bool fNotify = false;\n     bool fInitialBlockDownload = false;\n@@ -2817,7 +2824,7 @@ static bool NotifyHeaderTip() LOCKS_EXCLUDED(cs_main) {\n     }\n     // Send block tip changed notifications without cs_main\n     if (fNotify) {\n-        uiInterface.NotifyHeaderTip(fInitialBlockDownload, pindexHeader);\n+        uiInterface.NotifyHeaderTip(GetSynchronizationState(fInitialBlockDownload), pindexHeader);\n     }\n     return fNotify;\n }\n@@ -2906,7 +2913,7 @@ bool CChainState::ActivateBestChain(BlockValidationState &state, const CChainPar\n                 GetMainSignals().UpdatedBlockTip(pindexNewTip, pindexFork, fInitialDownload);\n \n                 // Always notify the UI if a new block tip was connected\n-                uiInterface.NotifyBlockTip(fInitialDownload, pindexNewTip);\n+                uiInterface.NotifyBlockTip(GetSynchronizationState(fInitialDownload), pindexNewTip);\n             }\n         }\n         // When we reach this point, we switched to a new tip (stored in pindexNewTip).\n@@ -3097,7 +3104,7 @@ bool CChainState::InvalidateBlock(BlockValidationState& state, const CChainParam\n \n     // Only notify about a new block tip if the active chain was modified.\n     if (pindex_was_in_chain) {\n-        uiInterface.NotifyBlockTip(IsInitialBlockDownload(), to_mark_failed->pprev);\n+        uiInterface.NotifyBlockTip(GetSynchronizationState(IsInitialBlockDownload()), to_mark_failed->pprev);\n     }\n     return true;\n }"
      },
      {
        "sha": "cbab65e79e353d94d3e3c9866ffa101d2d717b6c",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dab574edf57ccd6cdf5ec706ac328c62142d7a2/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=1dab574edf57ccd6cdf5ec706ac328c62142d7a2",
        "patch": "@@ -103,6 +103,13 @@ struct BlockHasher\n     size_t operator()(const uint256& hash) const { return ReadLE64(hash.begin()); }\n };\n \n+/** Current sync state passed to tip changed callbacks. */\n+enum class SynchronizationState {\n+    INIT_REINDEX,\n+    INIT_DOWNLOAD,\n+    POST_INIT\n+};\n+\n extern RecursiveMutex cs_main;\n extern CBlockPolicyEstimator feeEstimator;\n extern CTxMemPool mempool;"
      }
    ]
  },
  {
    "sha": "3c709aa69d5bb5a1564c339a0e6a16bac8f02c98",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzcwOWFhNjlkNWJiNWExNTY0YzMzOWEwZTZhMTZiYWM4ZjAyYzk4",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-03-04T19:35:08Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-18T23:49:48Z"
      },
      "message": "refactor: Remove Node::getReindex() call from GUI",
      "tree": {
        "sha": "4aa5441621e2dfba81f1486a15233133df676643",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4aa5441621e2dfba81f1486a15233133df676643"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c709aa69d5bb5a1564c339a0e6a16bac8f02c98",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7DHxwACgkQQQEIES5+\nqB+oEw//cd16ar0UU69z4+mHyDXUX9ih+BGYknjYtlXyO5fSrT2wBzcP98ZyAbiE\nKPq+sbckmRZ8YgD5C0K+0KYXGZuZ3QpAIyyFqo0Ln15hSAqZgUlOLpNBkXyFHG3T\nOZMp7yYXhIiTAD3z9724sporjGY+nEUGVyW13nrINTiJ1hzW9S+AhCpCi/He7NoI\np0S2f91l+asxY0DccjPdHTR1qyzkw1hwN11lk9v2yqMFEue+Al0ejAchdVSVr7aO\nLThPtjCdxOKxWSbppQdEULi2j8seoMgg5MqTKHyVJdYTYU2Ys13BC364WINmvkZJ\nctF64civ88nG1kQqUOjKzYPbj45OXd6wUhfMNJ/w9+buy0O0hwik+zhirH3Xj/5b\neN3CGTIVRfmVKo5DJi9Eyf8i+ZS3Kg/OAa8QD9YDHc2sWA/AO2ZA/fl+09iU6nyN\nuqlqRrKK1ru1yVPOw00Es0fQ1ddYz6jpdlYTD5d/o6DnzRKanLGrZ3jcogNx1UUs\nzfByzEXu1ORlORmbGYaE+v8lkGDQ/0SISvfOB+2uLK/jk9IdzfNFB1ouDwbJdFbS\n2gUke6NAKXNtULvwGb605oG90brYL/38REj5b3AIsvUlBN2GLl7eJTsq6jCCFEQn\noLyDwvjAYI0O0zZVr77NlvPfxe8r1OXlGFz6fS5aDYUYVxvxsPk=\n=Ramw\n-----END PGP SIGNATURE-----",
        "payload": "tree 4aa5441621e2dfba81f1486a15233133df676643\nparent 1dab574edf57ccd6cdf5ec706ac328c62142d7a2\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1583350508 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589845788 +0300\n\nrefactor: Remove Node::getReindex() call from GUI\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c709aa69d5bb5a1564c339a0e6a16bac8f02c98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3c709aa69d5bb5a1564c339a0e6a16bac8f02c98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c709aa69d5bb5a1564c339a0e6a16bac8f02c98/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1dab574edf57ccd6cdf5ec706ac328c62142d7a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1dab574edf57ccd6cdf5ec706ac328c62142d7a2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1dab574edf57ccd6cdf5ec706ac328c62142d7a2"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 14,
      "deletions": 21
    },
    "files": [
      {
        "sha": "a6bf5e10aaa40d0fe6d9ac2379c31470114f6d1f",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 21,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c709aa69d5bb5a1564c339a0e6a16bac8f02c98/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c709aa69d5bb5a1564c339a0e6a16bac8f02c98/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=3c709aa69d5bb5a1564c339a0e6a16bac8f02c98",
        "patch": "@@ -237,17 +237,6 @@ static void BannedListChanged(ClientModel *clientmodel)\n \n static void BlockTipChanged(ClientModel* clientmodel, SynchronizationState sync_state, int height, int64_t blockTime, double verificationProgress, bool fHeader)\n {\n-    const bool initialSync = sync_state != SynchronizationState::POST_INIT;\n-\n-    // lock free async UI updates in case we have a new block tip\n-    // during initial sync, only update the UI if the last update\n-    // was > 250ms (MODEL_UPDATE_DELAY) ago\n-    int64_t now = 0;\n-    if (initialSync)\n-        now = GetTimeMillis();\n-\n-    int64_t& nLastUpdateNotification = fHeader ? nLastHeaderTipUpdateNotification : nLastBlockTipUpdateNotification;\n-\n     if (fHeader) {\n         // cache best headers time and height to reduce future cs_main locks\n         clientmodel->cachedBestHeaderHeight = height;\n@@ -256,17 +245,21 @@ static void BlockTipChanged(ClientModel* clientmodel, SynchronizationState sync_\n         clientmodel->m_cached_num_blocks = height;\n     }\n \n-    // During initial sync, block notifications, and header notifications from reindexing are both throttled.\n-    if (!initialSync || (fHeader && !clientmodel->node().getReindex()) || now - nLastUpdateNotification > MODEL_UPDATE_DELAY) {\n-        //pass an async signal to the UI thread\n-        bool invoked = QMetaObject::invokeMethod(clientmodel, \"numBlocksChanged\", Qt::QueuedConnection,\n-                                  Q_ARG(int, height),\n-                                  Q_ARG(QDateTime, QDateTime::fromTime_t(blockTime)),\n-                                  Q_ARG(double, verificationProgress),\n-                                  Q_ARG(bool, fHeader));\n-        assert(invoked);\n-        nLastUpdateNotification = now;\n+    // Throttle GUI notifications about (a) blocks during initial sync, and (b) both blocks and headers during reindex.\n+    const bool throttle = (sync_state != SynchronizationState::POST_INIT && !fHeader) || sync_state == SynchronizationState::INIT_REINDEX;\n+    const int64_t now = throttle ? GetTimeMillis() : 0;\n+    int64_t& nLastUpdateNotification = fHeader ? nLastHeaderTipUpdateNotification : nLastBlockTipUpdateNotification;\n+    if (throttle && now < nLastUpdateNotification + MODEL_UPDATE_DELAY) {\n+        return;\n     }\n+\n+    bool invoked = QMetaObject::invokeMethod(clientmodel, \"numBlocksChanged\", Qt::QueuedConnection,\n+        Q_ARG(int, height),\n+        Q_ARG(QDateTime, QDateTime::fromTime_t(blockTime)),\n+        Q_ARG(double, verificationProgress),\n+        Q_ARG(bool, fHeader));\n+    assert(invoked);\n+    nLastUpdateNotification = now;\n }\n \n void ClientModel::subscribeToCoreSignals()"
      }
    ]
  },
  {
    "sha": "06d519f0b43ed16252428e935d3aeb5a38f582e0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNmQ1MTlmMGI0M2VkMTYyNTI0MjhlOTM1ZDNhZWI1YTM4ZjU4MmUw",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-03-04T20:12:07Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-19T00:01:42Z"
      },
      "message": "qt: Add SynchronizationState enum to signal parameter",
      "tree": {
        "sha": "f31285e9b235118e59432fa9915bdfb38768f503",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f31285e9b235118e59432fa9915bdfb38768f503"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06d519f0b43ed16252428e935d3aeb5a38f582e0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7DIegACgkQQQEIES5+\nqB/8OQ/8CM3ULFo9enhXqb2T28y9Zcxl/fRJjDI2lWZDulbB4ruynZ/wPKhwr7T5\nJePgB/wBPSq/n5raQzD02AmnRMpRzv4aQY8ploW+blA4WlbErW12CJI70xAWm+5d\niNgexthueRmQ5ynPPVBteoiic1+sBueys06tVmYgvKRF2XKcQQklTt2sfh1+ncHo\nR/LKd82PEvDK3mK1aN0EPg5/Z5n0iElsIVdJv0JqzVggddSN64fV6vIlhEsWYWGW\npcZj7GslyWn7LfOsvFD+qQHQtCwhx0mknxR02lny6KN3XPMqfjo77fv2ej9BEYD8\nYMW/8x1FyvinmtxCVTJ6MKEDK0ibKWx4btQ8fZfMClNxLwFoYkqxSMyfJ++0O708\nTYNr9W98001OmAFKNjMkeZMzE4g4E3Qf8mlByGETofOgFfTksSp9qIl8H52SMOME\ncFeQk11GNg67SKJaJFaIynYJ95zQLA6rStT2Sh8j9qknPYdQztzojwblrC4n74QP\nvWhL2Pnirys4LLMgrncA3dC+afMiNkzpv2T+A0eItbLVwLMQp6xp5dhCygvNjvZW\nosrGDQdDGdWuFiNsvFw2+fXIPW4FcHqwL5p/xgeHNmBIhV2EuFeK2hQ9595Ctw2k\nAaMd9p6/rKUgcBWGjOCtCEzTndFeBjaFyTQVHi/GqVmkzCmSV54=\n=lqps\n-----END PGP SIGNATURE-----",
        "payload": "tree f31285e9b235118e59432fa9915bdfb38768f503\nparent 3c709aa69d5bb5a1564c339a0e6a16bac8f02c98\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1583352727 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589846502 +0300\n\nqt: Add SynchronizationState enum to signal parameter\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06d519f0b43ed16252428e935d3aeb5a38f582e0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06d519f0b43ed16252428e935d3aeb5a38f582e0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06d519f0b43ed16252428e935d3aeb5a38f582e0/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c709aa69d5bb5a1564c339a0e6a16bac8f02c98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c709aa69d5bb5a1564c339a0e6a16bac8f02c98",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c709aa69d5bb5a1564c339a0e6a16bac8f02c98"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "6fdf6322ff17df19a2248ca73c1c9b5b38899faa",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06d519f0b43ed16252428e935d3aeb5a38f582e0/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06d519f0b43ed16252428e935d3aeb5a38f582e0/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=06d519f0b43ed16252428e935d3aeb5a38f582e0",
        "patch": "@@ -34,6 +34,7 @@\n #include <uint256.h>\n #include <util/system.h>\n #include <util/threadnames.h>\n+#include <validation.h>\n \n #include <memory>\n \n@@ -61,6 +62,7 @@ Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin);\n // Declare meta types used for QMetaObject::invokeMethod\n Q_DECLARE_METATYPE(bool*)\n Q_DECLARE_METATYPE(CAmount)\n+Q_DECLARE_METATYPE(SynchronizationState)\n Q_DECLARE_METATYPE(uint256)\n \n static QString GetLangTerritory()\n@@ -435,6 +437,7 @@ int GuiMain(int argc, char* argv[])\n \n     // Register meta types used for QMetaObject::invokeMethod and Qt::QueuedConnection\n     qRegisterMetaType<bool*>();\n+    qRegisterMetaType<SynchronizationState>();\n #ifdef ENABLE_WALLET\n     qRegisterMetaType<WalletModel*>();\n #endif"
      },
      {
        "sha": "159b0d3df359cbed02de6dc091ab3817b7b9c5b9",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06d519f0b43ed16252428e935d3aeb5a38f582e0/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06d519f0b43ed16252428e935d3aeb5a38f582e0/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=06d519f0b43ed16252428e935d3aeb5a38f582e0",
        "patch": "@@ -257,7 +257,8 @@ static void BlockTipChanged(ClientModel* clientmodel, SynchronizationState sync_\n         Q_ARG(int, height),\n         Q_ARG(QDateTime, QDateTime::fromTime_t(blockTime)),\n         Q_ARG(double, verificationProgress),\n-        Q_ARG(bool, fHeader));\n+        Q_ARG(bool, fHeader),\n+        Q_ARG(SynchronizationState, sync_state));\n     assert(invoked);\n     nLastUpdateNotification = now;\n }"
      },
      {
        "sha": "ace77f5972506c934d4c17ada245467863d5cf11",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06d519f0b43ed16252428e935d3aeb5a38f582e0/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06d519f0b43ed16252428e935d3aeb5a38f582e0/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=06d519f0b43ed16252428e935d3aeb5a38f582e0",
        "patch": "@@ -12,10 +12,10 @@\n #include <memory>\n \n class BanTableModel;\n+class CBlockIndex;\n class OptionsModel;\n class PeerTableModel;\n-\n-class CBlockIndex;\n+enum class SynchronizationState;\n \n namespace interfaces {\n class Handler;\n@@ -100,7 +100,7 @@ class ClientModel : public QObject\n \n Q_SIGNALS:\n     void numConnectionsChanged(int count);\n-    void numBlocksChanged(int count, const QDateTime& blockDate, double nVerificationProgress, bool header);\n+    void numBlocksChanged(int count, const QDateTime& blockDate, double nVerificationProgress, bool header, SynchronizationState sync_state);\n     void mempoolSizeChanged(long count, size_t mempoolSizeInBytes);\n     void networkActiveChanged(bool networkActive);\n     void alertsChanged(const QString &warnings);"
      }
    ]
  },
  {
    "sha": "a0d0f1c6c3d736bc0ee076b7f27a0ef59fd260bc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMGQwZjFjNmMzZDczNmJjMGVlMDc2YjdmMjdhMGVmNTlmZDI2MGJj",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-03-04T20:34:16Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-19T00:01:53Z"
      },
      "message": "refactor: Remove Node:: queries from GUI",
      "tree": {
        "sha": "ed1fffe2efb10531679493655e70aaa292398afa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed1fffe2efb10531679493655e70aaa292398afa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0d0f1c6c3d736bc0ee076b7f27a0ef59fd260bc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7DIfEACgkQQQEIES5+\nqB+tcw//SJW3Og8Y+U+5V4kv91AqTWSbJnXjp3KGyH1Vz2r1/eK+S7Bf9xyxetsh\ngEln12yJCDAMpOAg38/rjUr4NoFbAaD9WMUaH9pg3tMWXcGZxH1FXfjMocsWBn1X\n8Q8PAwffprN8BaNIDoKXEC8fOIhb7KeBvZapdXk16P1NEzFkfZsOLPsDZlXdthBm\nmIxF2+Ig6RSfNnoRXny4hTFh6InhFOhmpQMyGsq09zLdVDvhLbHxnkzcdQLdyvxt\nStHD3LrMA6h00XSBNGosGps9Rt1G9gYTIrq5S/9V529XIYO5fH0EU4c6Sp5rPpWV\nFl9vU6eI+1/iY7+Paptm78qJtIjufOjf2tZEJj8rabaV7KPT5PsNdFuBkk5pX4iP\nkPgnwUos+x4GsMhp3ZqSvFwY6lPBj5Hpoko0VQXs5MmiT0JKUGHQIK1p6ckLT/i1\nckx17bIKfDCInI20dZOXEr9yjAmZzrg32rF7o9VBgTglyM3vHUYCc5yEyGNG04ey\nWKyvkVwK5n0NmVo3B3oZRRekynROrQ7XkQ0NzHuS2wBE6l0O9Gs3ysdDg9xNd6j5\nPjCjBdFpY86nJy7bNM6SnH/y3lutVOk7btR3bfWN7Gedvfh4QPbc9AjY9lHD9hd7\nnod2D10Y/JBK5OghWqkqzSWuhHcbVUXwuqEj8T0AW1tXRpFEwQU=\n=Llsp\n-----END PGP SIGNATURE-----",
        "payload": "tree ed1fffe2efb10531679493655e70aaa292398afa\nparent 06d519f0b43ed16252428e935d3aeb5a38f582e0\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1583354056 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1589846513 +0300\n\nrefactor: Remove Node:: queries from GUI\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0d0f1c6c3d736bc0ee076b7f27a0ef59fd260bc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a0d0f1c6c3d736bc0ee076b7f27a0ef59fd260bc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0d0f1c6c3d736bc0ee076b7f27a0ef59fd260bc/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "06d519f0b43ed16252428e935d3aeb5a38f582e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06d519f0b43ed16252428e935d3aeb5a38f582e0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06d519f0b43ed16252428e935d3aeb5a38f582e0"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 10,
      "deletions": 4
    },
    "files": [
      {
        "sha": "4de48509031b3022b3c4353c209f8f0eac016381",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0d0f1c6c3d736bc0ee076b7f27a0ef59fd260bc/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0d0f1c6c3d736bc0ee076b7f27a0ef59fd260bc/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=a0d0f1c6c3d736bc0ee076b7f27a0ef59fd260bc",
        "patch": "@@ -37,6 +37,7 @@\n #include <ui_interface.h>\n #include <util/system.h>\n #include <util/translation.h>\n+#include <validation.h>\n \n #include <QAction>\n #include <QApplication>\n@@ -567,7 +568,7 @@ void BitcoinGUI::setClientModel(ClientModel *_clientModel)\n         connect(_clientModel, &ClientModel::networkActiveChanged, this, &BitcoinGUI::setNetworkActive);\n \n         modalOverlay->setKnownBestHeight(_clientModel->getHeaderTipHeight(), QDateTime::fromTime_t(_clientModel->getHeaderTipTime()));\n-        setNumBlocks(m_node.getNumBlocks(), QDateTime::fromTime_t(m_node.getLastBlockTime()), m_node.getVerificationProgress(), false);\n+        setNumBlocks(m_node.getNumBlocks(), QDateTime::fromTime_t(m_node.getLastBlockTime()), m_node.getVerificationProgress(), false, SynchronizationState::INIT_DOWNLOAD);\n         connect(_clientModel, &ClientModel::numBlocksChanged, this, &BitcoinGUI::setNumBlocks);\n \n         // Receive and report messages from client model\n@@ -926,11 +927,15 @@ void BitcoinGUI::openOptionsDialogWithTab(OptionsDialog::Tab tab)\n     dlg.exec();\n }\n \n-void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress, bool header)\n+void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress, bool header, SynchronizationState sync_state)\n {\n // Disabling macOS App Nap on initial sync, disk and reindex operations.\n #ifdef Q_OS_MAC\n-    (m_node.isInitialBlockDownload() || m_node.getReindex() || m_node.getImporting()) ? m_app_nap_inhibitor->disableAppNap() : m_app_nap_inhibitor->enableAppNap();\n+    if (sync_state == SynchronizationState::POST_INIT) {\n+        m_app_nap_inhibitor->enableAppNap();\n+    } else {\n+        m_app_nap_inhibitor->disableAppNap();\n+    }\n #endif\n \n     if (modalOverlay)"
      },
      {
        "sha": "82a2db9ba21033811f55cdfbedf2c1557201fa5f",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0d0f1c6c3d736bc0ee076b7f27a0ef59fd260bc/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0d0f1c6c3d736bc0ee076b7f27a0ef59fd260bc/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=a0d0f1c6c3d736bc0ee076b7f27a0ef59fd260bc",
        "patch": "@@ -38,6 +38,7 @@ class WalletFrame;\n class WalletModel;\n class HelpMessageDialog;\n class ModalOverlay;\n+enum class SynchronizationState;\n \n namespace interfaces {\n class Handler;\n@@ -213,7 +214,7 @@ public Q_SLOTS:\n     /** Set network state shown in the UI */\n     void setNetworkActive(bool networkActive);\n     /** Set number of blocks and last block date shown in the UI */\n-    void setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress, bool headers);\n+    void setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress, bool headers, SynchronizationState sync_state);\n \n     /** Notify the user of an event from the core network or transaction handling code.\n        @param[in] title             the message box / notification title"
      }
    ]
  }
]