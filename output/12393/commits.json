[
  {
    "sha": "11376b5583a283772c82f6d32d0007cdbf5b8ef0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMTM3NmI1NTgzYTI4Mzc3MmM4MmY2ZDMyZDAwMDdjZGJmNWI4ZWYw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-02-11T09:48:15Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-02-11T09:48:15Z"
      },
      "message": "Fix a-vs-an typos",
      "tree": {
        "sha": "743f25d31a5e9e181eb8a2e5a37bfcbcc2fee8ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/743f25d31a5e9e181eb8a2e5a37bfcbcc2fee8ec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11376b5583a283772c82f6d32d0007cdbf5b8ef0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11376b5583a283772c82f6d32d0007cdbf5b8ef0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/11376b5583a283772c82f6d32d0007cdbf5b8ef0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11376b5583a283772c82f6d32d0007cdbf5b8ef0/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "67447ba06057b8e83f962c82491d2fe6c5211f50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67447ba06057b8e83f962c82491d2fe6c5211f50",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/67447ba06057b8e83f962c82491d2fe6c5211f50"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "2790ef4acd445de0c659e59876d2b32abf604f0e",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11376b5583a283772c82f6d32d0007cdbf5b8ef0/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11376b5583a283772c82f6d32d0007cdbf5b8ef0/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=11376b5583a283772c82f6d32d0007cdbf5b8ef0",
        "patch": "@@ -124,7 +124,7 @@ def main():\n     g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n     g.write(' *\\n')\n     g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n-    g.write(' * IPv4 as well as onion addresses are wrapped inside a IPv6 address accordingly.\\n')\n+    g.write(' * IPv4 as well as onion addresses are wrapped inside an IPv6 address accordingly.\\n')\n     g.write(' */\\n')\n     with open(os.path.join(indir,'nodes_main.txt'),'r') as f:\n         process_nodes(g, f, 'pnSeed6_main', 8333)"
      },
      {
        "sha": "6e2b3c34a2236b4829104f8d5dd5468aef0678c9",
        "filename": "src/chainparamsseeds.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11376b5583a283772c82f6d32d0007cdbf5b8ef0/src/chainparamsseeds.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11376b5583a283772c82f6d32d0007cdbf5b8ef0/src/chainparamsseeds.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsseeds.h?ref=11376b5583a283772c82f6d32d0007cdbf5b8ef0",
        "patch": "@@ -5,7 +5,7 @@\n  * AUTOGENERATED by contrib/seeds/generate-seeds.py\n  *\n  * Each line contains a 16-byte IPv6 address and a port.\n- * IPv4 as well as onion addresses are wrapped inside a IPv6 address accordingly.\n+ * IPv4 as well as onion addresses are wrapped inside an IPv6 address accordingly.\n  */\n static SeedSpec6 pnSeed6_main[] = {\n     {{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0x05,0x13,0x05,0x7f}, 8333},"
      },
      {
        "sha": "edf1c29ea1937c228e4827c82118e2125616dfde",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11376b5583a283772c82f6d32d0007cdbf5b8ef0/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11376b5583a283772c82f6d32d0007cdbf5b8ef0/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=11376b5583a283772c82f6d32d0007cdbf5b8ef0",
        "patch": "@@ -101,7 +101,7 @@ QFont fixedPitchFont()\n #endif\n }\n \n-// Just some dummy data to generate an convincing random-looking (but consistent) address\n+// Just some dummy data to generate a convincing random-looking (but consistent) address\n static const uint8_t dummydata[] = {0xeb,0x15,0x23,0x1d,0xfc,0xeb,0x60,0x92,0x58,0x86,0xb6,0x7d,0x06,0x52,0x99,0x92,0x59,0x15,0xae,0xb1,0x72,0xc0,0x66,0x47};\n \n // Generate a dummy address with invalid CRC, starting with the network prefix."
      },
      {
        "sha": "fdd5cdad31bd58f6b272680d0c5ce4476fdf64d4",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11376b5583a283772c82f6d32d0007cdbf5b8ef0/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11376b5583a283772c82f6d32d0007cdbf5b8ef0/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=11376b5583a283772c82f6d32d0007cdbf5b8ef0",
        "patch": "@@ -692,7 +692,7 @@ UniValue signrawtransaction(const JSONRPCRequest& request)\n \n             \"\\nArguments:\\n\"\n             \"1. \\\"hexstring\\\"     (string, required) The transaction hex string\\n\"\n-            \"2. \\\"prevtxs\\\"       (string, optional) An json array of previous dependent transaction outputs\\n\"\n+            \"2. \\\"prevtxs\\\"       (string, optional) A json array of previous dependent transaction outputs\\n\"\n             \"     [               (json array of json objects, or 'null' if none provided)\\n\"\n             \"       {\\n\"\n             \"         \\\"txid\\\":\\\"id\\\",             (string, required) The transaction id\\n\""
      },
      {
        "sha": "4dad6b44c56d909a15c3f7e939b012d249ea37cc",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11376b5583a283772c82f6d32d0007cdbf5b8ef0/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11376b5583a283772c82f6d32d0007cdbf5b8ef0/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=11376b5583a283772c82f6d32d0007cdbf5b8ef0",
        "patch": "@@ -104,7 +104,7 @@ enum\n     //\n     SCRIPT_VERIFY_MINIMALIF = (1U << 13),\n \n-    // Signature(s) must be empty vector if an CHECK(MULTI)SIG operation failed\n+    // Signature(s) must be empty vector if a CHECK(MULTI)SIG operation failed\n     //\n     SCRIPT_VERIFY_NULLFAIL = (1U << 14),\n "
      },
      {
        "sha": "c1338c3a8efb15308dce2cc0e9990fddeb84bd0e",
        "filename": "src/script/ismine.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11376b5583a283772c82f6d32d0007cdbf5b8ef0/src/script/ismine.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11376b5583a283772c82f6d32d0007cdbf5b8ef0/src/script/ismine.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/ismine.h?ref=11376b5583a283772c82f6d32d0007cdbf5b8ef0",
        "patch": "@@ -29,7 +29,7 @@ enum isminetype\n typedef uint8_t isminefilter;\n \n /* isInvalid becomes true when the script is found invalid by consensus or policy. This will terminate the recursion\n- * and return a ISMINE_NO immediately, as an invalid script should never be considered as \"mine\". This is needed as\n+ * and return ISMINE_NO immediately, as an invalid script should never be considered as \"mine\". This is needed as\n  * different SIGVERSION may have different network rules. Currently the only use of isInvalid is indicate uncompressed\n  * keys in SIGVERSION_WITNESS_V0 script, but could also be used in similar cases in the future\n  */"
      },
      {
        "sha": "f8a1347c319fc5f29304dea0d0b8a767cf1c37e6",
        "filename": "src/test/data/tx_invalid.json",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11376b5583a283772c82f6d32d0007cdbf5b8ef0/src/test/data/tx_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11376b5583a283772c82f6d32d0007cdbf5b8ef0/src/test/data/tx_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_invalid.json?ref=11376b5583a283772c82f6d32d0007cdbf5b8ef0",
        "patch": "@@ -92,11 +92,11 @@\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n \"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004a010047304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH,NULLDUMMY\"],\n \n-[\"As above, but using a OP_1\"],\n+[\"As above, but using an OP_1\"],\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n \"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba26000000000495147304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH,NULLDUMMY\"],\n \n-[\"As above, but using a OP_1NEGATE\"],\n+[\"As above, but using an OP_1NEGATE\"],\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n \"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba26000000000494f47304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH,NULLDUMMY\"],\n "
      },
      {
        "sha": "7e39ec759914026fab9ba3cce99f0f3a5b41efdf",
        "filename": "src/test/data/tx_valid.json",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11376b5583a283772c82f6d32d0007cdbf5b8ef0/src/test/data/tx_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11376b5583a283772c82f6d32d0007cdbf5b8ef0/src/test/data/tx_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_valid.json?ref=11376b5583a283772c82f6d32d0007cdbf5b8ef0",
        "patch": "@@ -23,11 +23,11 @@\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n \"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004a01ff47304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH\"],\n \n-[\"As above, but using a OP_1\"],\n+[\"As above, but using an OP_1\"],\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n \"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba26000000000495147304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH\"],\n \n-[\"As above, but using a OP_1NEGATE\"],\n+[\"As above, but using an OP_1NEGATE\"],\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n \"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba26000000000494f47304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH\"],\n "
      },
      {
        "sha": "516ce8555b24e20080b42baa79b006ead64091f8",
        "filename": "test/functional/p2p_fingerprint.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11376b5583a283772c82f6d32d0007cdbf5b8ef0/test/functional/p2p_fingerprint.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11376b5583a283772c82f6d32d0007cdbf5b8ef0/test/functional/p2p_fingerprint.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_fingerprint.py?ref=11376b5583a283772c82f6d32d0007cdbf5b8ef0",
        "patch": "@@ -4,7 +4,7 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test various fingerprinting protections.\n \n-If an stale block more than a month old or its header are requested by a peer,\n+If a stale block more than a month old or its header are requested by a peer,\n the node should pretend that it does not have it to avoid fingerprinting.\n \"\"\"\n "
      },
      {
        "sha": "92126ef4b7537fc3809dccebca7703f4873c9403",
        "filename": "test/functional/rpc_rawtransaction.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11376b5583a283772c82f6d32d0007cdbf5b8ef0/test/functional/rpc_rawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11376b5583a283772c82f6d32d0007cdbf5b8ef0/test/functional/rpc_rawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_rawtransaction.py?ref=11376b5583a283772c82f6d32d0007cdbf5b8ef0",
        "patch": "@@ -186,7 +186,7 @@ def run_test(self):\n         self.nodes[0].generate(1)\n         self.sync_all()\n \n-        #THIS IS A INCOMPLETE FEATURE\n+        #THIS IS AN INCOMPLETE FEATURE\n         #NODE2 HAS TWO OF THREE KEY AND THE FUNDS SHOULD BE SPENDABLE AND COUNT AT BALANCE CALCULATION\n         assert_equal(self.nodes[2].getbalance(), bal) #for now, assume the funds of a 2of3 multisig tx are not marked as spendable\n "
      }
    ]
  }
]