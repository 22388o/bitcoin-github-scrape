[
  {
    "sha": "fa485d06ec10acd9a791f8d29689e1e82591fb70",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTQ4NWQwNmVjMTBhY2Q5YTc5MWY4ZDI5Njg5ZTFlODI1OTFmYjcw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-06-23T11:28:30Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-06-24T13:57:34Z"
      },
      "message": "fuzz: Check banman roundtrip",
      "tree": {
        "sha": "000875aadeed6ec2669e29369424d55fc5083b8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/000875aadeed6ec2669e29369424d55fc5083b8a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa485d06ec10acd9a791f8d29689e1e82591fb70",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYEACgkQzit1aX5p\npUh2sQv/RzOREYv//CzL1fvaOuxoka1nzpnTXn29BYmDw1Wq5ksC54xhbtUuKWn5\n1RZ3TfQA2GVrqZ9OylnoRhfVHpMj+qA0x8fA+qPepxj6lsth036hfNoWMK+K8dQi\n4ne9xR2+xbRf9MW/9E+at74h+rnKCxQhtTPg0qc+zaqMhZztaniwDNbASIAiuaBK\nmCQSUyH8AqswkQGStM7IUP4zFDYklBUlPY4LtBEGvqqf+P19M41yy9wejkTmrScn\nZStpkbBUrE1QP76mLS5kh16EFpxylWfky+if2IHrjqlM4d26xUDhw4tx8VhIZ55W\nK2RmNaR0SWysgIS3K6RW4qnW08E0ZfrWytRnsJKgmOhcuYI4v1FmB0GrYhPyqxz1\nAbXpe52maElVV4JjFE5LeomrTn6jqiI8uh6ysu1DPJM6JtL1P7Jl7UfMb6q6LaCb\nxxoef+RkEGba1acbasSP2vRfue4DBG9TaIj6cX49ieZVd842HozhoGSJW/XuXE6s\nvnKSKSAs\n=gOUk\n-----END PGP SIGNATURE-----",
        "payload": "tree 000875aadeed6ec2669e29369424d55fc5083b8a\nparent d6e0d78c31557660274ef53cac912c468eecbe2d\nauthor MarcoFalke <falke.marco@gmail.com> 1624447710 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1624543054 +0200\n\nfuzz: Check banman roundtrip\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa485d06ec10acd9a791f8d29689e1e82591fb70",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa485d06ec10acd9a791f8d29689e1e82591fb70",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa485d06ec10acd9a791f8d29689e1e82591fb70/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d6e0d78c31557660274ef53cac912c468eecbe2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6e0d78c31557660274ef53cac912c468eecbe2d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d6e0d78c31557660274ef53cac912c468eecbe2d"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 20,
      "deletions": 2
    },
    "files": [
      {
        "sha": "182aabc79b86bf9ce95cbf4809e4dc0273fdb6d9",
        "filename": "src/test/fuzz/banman.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 2,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa485d06ec10acd9a791f8d29689e1e82591fb70/src/test/fuzz/banman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa485d06ec10acd9a791f8d29689e1e82591fb70/src/test/fuzz/banman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/banman.cpp?ref=fa485d06ec10acd9a791f8d29689e1e82591fb70",
        "patch": "@@ -32,6 +32,13 @@ void initialize_banman()\n     static const auto testing_setup = MakeNoLogFileContext<>();\n }\n \n+static bool operator==(const CBanEntry& lhs, const CBanEntry& rhs)\n+{\n+    return lhs.nVersion == rhs.nVersion &&\n+           lhs.nCreateTime == rhs.nCreateTime &&\n+           lhs.nBanUntil == rhs.nBanUntil;\n+}\n+\n FUZZ_TARGET_INIT(banman, initialize_banman)\n {\n     // The complexity is O(N^2), where N is the input size, because each call\n@@ -43,19 +50,20 @@ FUZZ_TARGET_INIT(banman, initialize_banman)\n     fs::path banlist_file = gArgs.GetDataDirNet() / \"fuzzed_banlist\";\n \n     const bool start_with_corrupted_banlist{fuzzed_data_provider.ConsumeBool()};\n+    bool force_read_and_write_to_err{false};\n     if (start_with_corrupted_banlist) {\n         const std::string sfx{fuzzed_data_provider.ConsumeBool() ? \".dat\" : \".json\"};\n         assert(WriteBinaryFile(banlist_file.string() + sfx,\n                                fuzzed_data_provider.ConsumeRandomLengthString()));\n     } else {\n-        const bool force_read_and_write_to_err{fuzzed_data_provider.ConsumeBool()};\n+        force_read_and_write_to_err = fuzzed_data_provider.ConsumeBool();\n         if (force_read_and_write_to_err) {\n             banlist_file = fs::path{\"path\"} / \"to\" / \"inaccessible\" / \"fuzzed_banlist\";\n         }\n     }\n \n     {\n-        BanMan ban_man{banlist_file, nullptr, ConsumeBanTimeOffset(fuzzed_data_provider)};\n+        BanMan ban_man{banlist_file, /* client_interface */ nullptr, /* default_ban_time */ ConsumeBanTimeOffset(fuzzed_data_provider)};\n         while (--limit_max_ops >= 0 && fuzzed_data_provider.ConsumeBool()) {\n             CallOneOf(\n                 fuzzed_data_provider,\n@@ -93,6 +101,16 @@ FUZZ_TARGET_INIT(banman, initialize_banman)\n                     ban_man.Discourage(ConsumeNetAddr(fuzzed_data_provider));\n                 });\n         }\n+        if (!force_read_and_write_to_err) {\n+            ban_man.DumpBanlist();\n+            SetMockTime(ConsumeTime(fuzzed_data_provider));\n+            banmap_t banmap;\n+            ban_man.GetBanned(banmap);\n+            BanMan ban_man_read{banlist_file, /* client_interface */ nullptr, /* default_ban_time */ 0};\n+            banmap_t banmap_read;\n+            ban_man_read.GetBanned(banmap_read);\n+            assert(banmap == banmap_read);\n+        }\n     }\n     fs::remove(banlist_file.string() + \".dat\");\n     fs::remove(banlist_file.string() + \".json\");"
      }
    ]
  }
]