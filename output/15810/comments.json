[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482728862",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-482728862",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
    "id": 482728862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjcyODg2Mg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-12T21:28:11Z",
    "updated_at": "2019-04-12T21:28:11Z",
    "author_association": "MEMBER",
    "body": "Seems a lot of new code added for a simplification. Also, releasing the locks in between makes this non-atomic: Missing coins are counted as -1 satoshis (instead of their true amount), this can easily lead to not firing an error at all and accepting the tx later on, because the coins became available again.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/482728862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484595601",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-484595601",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
    "id": 484595601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDU5NTYwMQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-18T17:09:38Z",
    "updated_at": "2019-06-06T08:05:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16129](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16129.html) (refactor: Remove unused includes by practicalswift)\n* [#15921](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15921.html) (Tidy up ValidationState interface by jnewbery)\n* [#15713](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15713.html) (refactor: Replace chain relayTransactions/submitMemoryPool by higher method by ariard)\n* [#15169](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15169.html) (Parallelize CheckInputs() in AcceptToMemoryPool() by sdaftuar)\n* [#15112](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15112.html) (build: Optionally enable -Wzero-as-null-pointer-constant by Empact)\n* [#14920](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14920.html) (Build: enable -Wdocumentation via isystem by Empact)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484595601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484616488",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-484616488",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
    "id": 484616488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDYxNjQ4OA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-18T17:57:38Z",
    "updated_at": "2019-04-18T17:57:38Z",
    "author_association": "MEMBER",
    "body": "Thanks for looking at this @MarcoFalke . This is still in RFC mode and I'm looking for concept feedback.\r\n\r\n> Seems a lot of new code added for a simplification.\r\n\r\nYes, it's additional LOC. It removes code from validation and simplifies the interface to the mempool, in exchange for adding checking to client code (RPC, wallet). I think that counts as an improvement because all other things being equal, we'd prefer less and simpler code in validation. It also makes sense for me that the client should be responsible for this checking.\r\n\r\n> Also, releasing the locks in between makes this non-atomic: Missing coins are counted as -1 satoshis (instead of their true amount), this can easily lead to not firing an error at all and accepting the tx later on, because the coins became available again.\r\n\r\nYikes! Good catch.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484616488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484630260",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-484630260",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
    "id": 484630260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDYzMDI2MA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-18T18:31:17Z",
    "updated_at": "2019-04-18T18:31:17Z",
    "author_association": "MEMBER",
    "body": "> It removes code from validation and simplifies the interface to the mempool\r\n\r\nThe fee is already calculated in the mempool, so using it for other things is \"free\". I agree that the current interface to pass in the absurd fee is a bit odd, but what about returning the fee from testmempoolaccept? that way you wouldn't need to duplicate any utxo validation logic, but still could avoid passing in the absurd fee into the mempool and the client can use the result of TMPA to check if the fee was too high.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484630260/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484699029",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-484699029",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
    "id": 484699029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDY5OTAyOQ==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-18T21:40:24Z",
    "updated_at": "2019-04-18T21:40:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "It would be nice to get this \"local user specific behaviour\" out of ATMP, I agree!\r\n\r\nAnd even beyond that... fine with simplifying this, but having a lot of duplicated code isn't great. It's also important that it's reasonably precise. I think it would be okay to reject a txn with inputs not found, but we shouldn't bypass the check in that case.  I think if the original behaviour had looked like this, the change would have been rejected as not worth it.\r\n\r\nWe have seen this functionality protect users from loss (including people coming into irc furious that it wouldn't send because it was protecting them... :) ) and it seems likely that there is a lot more that we don't hear about. So I wouldn't suggest removing the functionality.\r\n\r\nIt's not entirely trivial because we do have to resolve inputs against the mempool not just the chain or wallet... which ATMP inherently does for us.\r\n\r\n+0.5 to Marco's suggestion, if something like that works, it sounds like it might be good.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/484699029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493134564",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-493134564",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
    "id": 493134564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MzEzNDU2NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-16T16:16:06Z",
    "updated_at": "2019-05-16T16:16:06Z",
    "author_association": "MEMBER",
    "body": "Rebased. I still haven't addressed the feedback from Marco here: https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-482728862",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/493134564/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/494100472",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-494100472",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
    "id": 494100472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDEwMDQ3Mg==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-20T18:30:06Z",
    "updated_at": "2019-05-20T18:30:06Z",
    "author_association": "MEMBER",
    "body": "I agree it's weird to have special logic for the absurd fee check in the mempool code, so concept ACK getting rid of that, but @MarcoFalke's suggestion seems simpler.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/494100472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499541783",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-499541783",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
    "id": 499541783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTU0MTc4Mw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-06T15:22:16Z",
    "updated_at": "2019-06-06T15:22:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499541783/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541108864",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-541108864",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
    "id": 541108864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTEwODg2NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-11T15:21:50Z",
    "updated_at": "2019-10-11T15:21:50Z",
    "author_association": "MEMBER",
    "body": "I'm not actively working on this, so I'm going to close the PR for now. In case anyone else wants to pick it up, I've rebased it on master.\r\n\r\nA couple of things need addressing:\r\n\r\n- @MarcoFalke has a suggestion for simplifying this by using testmempoolaccept (https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-484630260).\r\n- I've had to change a lot of the tests in `mempool_accept.py` to fail due to too-high feerate to make the test pass, but really they should be changed to set a higher feerate in `testmempoolaccept` so the transaction fails for the intended reason.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541108864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646698760",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-646698760",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
    "id": 646698760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjY5ODc2MA==",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?u=3e27bc6589085f3450be1b0e969d04008cc77565&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-19T15:30:12Z",
    "updated_at": "2020-06-19T15:30:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I\u2019ve started working on this, rationale still = (1) mempool behavior should not be user-specific and (2) enforcing a user\u2019s maxfeerate should be the responsibility of the client/wallet. I\u2019d like to ask for a little bit of approach advice.\r\n\r\n> but what about returning the fee from testmempoolaccept?\r\n\r\nI\u2019m guessing this motivates #19093; it\u2019ll be really simple to have a check in `testmempoolaccept` without passing `nAbsurdFee` to ATMP this way. But just to clarify, @MarcoFalke do you mean that `sendrawtransaction` wouldn\u2019t need to enforce maxfeerate anymore?\r\n\r\nFor `sendrawtransaction` and the wallet, my current thinking is we want something like John\u2019s `GetTransactionFee` here to calculate fee as cheaply as possible (maybe implemented with less duplicate code)... does this approach make sense?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646698760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646853974",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-646853974",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
    "id": 646853974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0Njg1Mzk3NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-19T20:44:30Z",
    "updated_at": "2020-06-19T20:44:30Z",
    "author_association": "MEMBER",
    "body": "@gzhao408 - I think the idea is that you call `AcceptToMemoryPool()` with `test_accept` set to `true` to determine the feerate, and then if it's below the acceptable level, call `AcceptToMemoryPool()` again with `test_accept` set to false to actually submit the transaction to the mempool.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646853974/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647035117",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-647035117",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
    "id": 647035117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzAzNTExNw==",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?u=3e27bc6589085f3450be1b0e969d04008cc77565&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-20T19:14:13Z",
    "updated_at": "2020-06-20T19:14:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ohhh okay \ud83d\udc4d  thanks @jnewbery! Is that what \"using the fee for other things is 'free'\" means? It should be easy to do this on top of #19093 then.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647035117/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647045991",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15810#issuecomment-647045991",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15810",
    "id": 647045991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzA0NTk5MQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-20T21:13:16Z",
    "updated_at": "2020-06-20T21:13:16Z",
    "author_association": "MEMBER",
    "body": "Yes, I think Marco means that no additional logic is required to be written in AcceptToMemoryPool. We already work out the feerate, so it's no additional work to just return it to the caller.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647045991/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]