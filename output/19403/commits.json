[
  {
    "sha": "9952242c03fe587b5dff46a9f770e319146103bf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTUyMjQyYzAzZmU1ODdiNWRmZjQ2YTlmNzcwZTMxOTE0NjEwM2Jm",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-06-29T03:24:25Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-06-29T03:31:17Z"
      },
      "message": "build: improve builtin_clz* detection\n\nThe way we currently test with AC_CHECK_DECLS do not work with Clang:\n```bash\nconfigure:21492: clang++-10 -std=c++11 -c -g -O2  -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS conftest.cpp >&5\nconftest.cpp:100:10: error: builtin functions must be directly called\n  (void) __builtin_clz;\n         ^\n1 error generated.\n```\n\nThis also removes the __builtin_clz() check, as we don't actually use\nit anywhere, and it's trvial to re-add detection if we do start using\nit at some point.",
      "tree": {
        "sha": "6177b4850642e0ed13144fe421cd2b3dc07e6497",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6177b4850642e0ed13144fe421cd2b3dc07e6497"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9952242c03fe587b5dff46a9f770e319146103bf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl75YOUACgkQLuufXMCV\nJsHMAg/+MDpjdWFdzz+AcRNwTDsg6mexyDiu8NJA0T3S6dROk8UvXTIQBOe4FCWC\nSEeYbrmv/1501YJ/tdqRWEeTC7ZZmLRmrqnypsjeydeoeDKQn9dYdJAIqELXmh/v\nGQTn+EPvkEfuuOo5/yoyMnZZaM0PY3dqqnhNZzr8fneYJqGibbqP3ct18+iKq64p\n6RU/Rhny4UAx0dEijLl6Z5B3fRaJTXhiqriyxpJsQlcdiPU9OefmDRNnwNAjuKSA\nrrXk/bSLUmo247cqcVPWkfFdeD8zFk4wYdRJuMmJggH82ogRGPxrVDKg4/X/FgVx\nyL0vc2VxleCF1nEtMwiPUamXwQmSwoC/DTSg8SmgKbWezNZ9ves0tcjbWJTsPPxL\nnEARHOVrBVnrx4yx1RkyMtqHYEmtzD/RRqLK43ZrTyxDAYt+QWlprVaMA785DHav\nTRqgX8Em5lEm+UKEAMGAy/okAheIpQvcfGVDngy7AmxFc8lktb0LFIQYZIrZSKNL\n0vD85CYrXZE8YSSLCQhZ4t2H3n2kq2eardMeBSqFTMk94j69ae2jPIZCqLcRC78G\ntWtRS13HjbIoPnLw3Wb4fqgodGGTjTZXQWNdghqUwax3seVYbkkBzMavKacu39So\nMZlmRHa5eT9SAQLWxF03U5C1VdxNwzkqE4VEEC+GAyJKuMeZZB4=\n=7RJy\n-----END PGP SIGNATURE-----",
        "payload": "tree 6177b4850642e0ed13144fe421cd2b3dc07e6497\nparent d3a5dbfd1f18b89dd990ee83ece7c1dd9ba94b1a\nauthor fanquake <fanquake@gmail.com> 1593401065 +0800\ncommitter fanquake <fanquake@gmail.com> 1593401477 +0800\n\nbuild: improve builtin_clz* detection\n\nThe way we currently test with AC_CHECK_DECLS do not work with Clang:\n```bash\nconfigure:21492: clang++-10 -std=c++11 -c -g -O2  -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS conftest.cpp >&5\nconftest.cpp:100:10: error: builtin functions must be directly called\n  (void) __builtin_clz;\n         ^\n1 error generated.\n```\n\nThis also removes the __builtin_clz() check, as we don't actually use\nit anywhere, and it's trvial to re-add detection if we do start using\nit at some point.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9952242c03fe587b5dff46a9f770e319146103bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9952242c03fe587b5dff46a9f770e319146103bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9952242c03fe587b5dff46a9f770e319146103bf/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d3a5dbfd1f18b89dd990ee83ece7c1dd9ba94b1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3a5dbfd1f18b89dd990ee83ece7c1dd9ba94b1a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d3a5dbfd1f18b89dd990ee83ece7c1dd9ba94b1a"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 17,
      "deletions": 15
    },
    "files": [
      {
        "sha": "fbbe1a21569df213a2547e6bc16f03665b7f641f",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "modified",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9952242c03fe587b5dff46a9f770e319146103bf/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9952242c03fe587b5dff46a9f770e319146103bf/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=9952242c03fe587b5dff46a9f770e319146103bf",
        "patch": "@@ -137,18 +137,6 @@\n    don't. */\n #define HAVE_DECL_STRNLEN 1\n \n-/* Define to 1 if you have the declaration of `__builtin_clz', and to 0 if you\n-   don't. */\n-//#define HAVE_DECL___BUILTIN_CLZ 1\n-\n-/* Define to 1 if you have the declaration of `__builtin_clzl', and to 0 if\n-   you don't. */\n-//#define HAVE_DECL___BUILTIN_CLZL 1\n-\n-/* Define to 1 if you have the declaration of `__builtin_clzll', and to 0 if\n-   you don't. */\n-//#define HAVE_DECL___BUILTIN_CLZLL 1\n-\n /* Define to 1 if you have the <dlfcn.h> header file. */\n /* #undef HAVE_DLFCN_H */\n "
      },
      {
        "sha": "0c7573c313d359fb0c3fd498b9dbf8edc76a8ab0",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9952242c03fe587b5dff46a9f770e319146103bf/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9952242c03fe587b5dff46a9f770e319146103bf/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=9952242c03fe587b5dff46a9f770e319146103bf",
        "patch": "@@ -849,7 +849,21 @@ AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n                  #include <byteswap.h>\n                  #endif])\n \n-AC_CHECK_DECLS([__builtin_clz, __builtin_clzl, __builtin_clzll])\n+AC_MSG_CHECKING(for __builtin_clzl)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n+ (void) __builtin_clzl(0);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_BUILTIN_CLZL, 1, [Define this symbol if you have __builtin_clzl])],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for __builtin_clzll)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[ ]], [[\n+  (void) __builtin_clzll(0);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_BUILTIN_CLZLL, 1, [Define this symbol if you have __builtin_clzll])],\n+ [ AC_MSG_RESULT(no)]\n+)\n \n dnl Check for malloc_info (for memory statistics information in getmemoryinfo)\n AC_MSG_CHECKING(for getmemoryinfo)"
      },
      {
        "sha": "5b4932c99273df5150b225922dace43aff845aa3",
        "filename": "src/crypto/common.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9952242c03fe587b5dff46a9f770e319146103bf/src/crypto/common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9952242c03fe587b5dff46a9f770e319146103bf/src/crypto/common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/common.h?ref=9952242c03fe587b5dff46a9f770e319146103bf",
        "patch": "@@ -82,12 +82,12 @@ void static inline WriteBE64(unsigned char* ptr, uint64_t x)\n /** Return the smallest number n such that (x >> n) == 0 (or 64 if the highest bit in x is set. */\n uint64_t static inline CountBits(uint64_t x)\n {\n-#if HAVE_DECL___BUILTIN_CLZL\n+#if HAVE_BUILTIN_CLZL\n     if (sizeof(unsigned long) >= sizeof(uint64_t)) {\n         return x ? 8 * sizeof(unsigned long) - __builtin_clzl(x) : 0;\n     }\n #endif\n-#if HAVE_DECL___BUILTIN_CLZLL\n+#if HAVE_BUILTIN_CLZLL\n     if (sizeof(unsigned long long) >= sizeof(uint64_t)) {\n         return x ? 8 * sizeof(unsigned long long) - __builtin_clzll(x) : 0;\n     }"
      }
    ]
  }
]