[
  {
    "sha": "f24ed6d39f963e7f1c0b4dbd9b784132ef975f2a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMjRlZDZkMzlmOTYzZTdmMWMwYjRkYmQ5Yjc4NDEzMmVmOTc1ZjJh",
    "commit": {
      "author": {
        "name": "Martin Erlandsson",
        "email": "merland@users.noreply.github.com",
        "date": "2019-01-17T11:26:55Z"
      },
      "committer": {
        "name": "Martin Erlandsson",
        "email": "merland@users.noreply.github.com",
        "date": "2019-01-21T19:24:33Z"
      },
      "message": "Delete README_osx.md and move its contents into build-osx.md",
      "tree": {
        "sha": "20b05ef7ccb4d959356ccbb72d8c25e86f63bfa1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20b05ef7ccb4d959356ccbb72d8c25e86f63bfa1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f24ed6d39f963e7f1c0b4dbd9b784132ef975f2a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f24ed6d39f963e7f1c0b4dbd9b784132ef975f2a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f24ed6d39f963e7f1c0b4dbd9b784132ef975f2a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f24ed6d39f963e7f1c0b4dbd9b784132ef975f2a/comments",
    "author": {
      "login": "merland",
      "id": 453092,
      "node_id": "MDQ6VXNlcjQ1MzA5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/453092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/merland",
      "html_url": "https://github.com/merland",
      "followers_url": "https://api.github.com/users/merland/followers",
      "following_url": "https://api.github.com/users/merland/following{/other_user}",
      "gists_url": "https://api.github.com/users/merland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/merland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/merland/subscriptions",
      "organizations_url": "https://api.github.com/users/merland/orgs",
      "repos_url": "https://api.github.com/users/merland/repos",
      "events_url": "https://api.github.com/users/merland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/merland/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "merland",
      "id": 453092,
      "node_id": "MDQ6VXNlcjQ1MzA5Mg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/453092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/merland",
      "html_url": "https://github.com/merland",
      "followers_url": "https://api.github.com/users/merland/followers",
      "following_url": "https://api.github.com/users/merland/following{/other_user}",
      "gists_url": "https://api.github.com/users/merland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/merland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/merland/subscriptions",
      "organizations_url": "https://api.github.com/users/merland/orgs",
      "repos_url": "https://api.github.com/users/merland/repos",
      "events_url": "https://api.github.com/users/merland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/merland/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "391a27376b30492f55b398fc220ee96cf3769a32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/391a27376b30492f55b398fc220ee96cf3769a32",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/391a27376b30492f55b398fc220ee96cf3769a32"
      }
    ],
    "stats": {
      "total": 199,
      "additions": 101,
      "deletions": 98
    },
    "files": [
      {
        "sha": "739e22d6341cd30bb9e28b396cf4438bc5feb5b9",
        "filename": "doc/README_osx.md",
        "status": "removed",
        "additions": 0,
        "deletions": 97,
        "changes": 97,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/391a27376b30492f55b398fc220ee96cf3769a32/doc/README_osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/391a27376b30492f55b398fc220ee96cf3769a32/doc/README_osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.md?ref=391a27376b30492f55b398fc220ee96cf3769a32",
        "patch": "@@ -1,97 +0,0 @@\n-Deterministic macOS DMG Notes.\n-\n-Working macOS DMGs are created in Linux by combining a recent clang,\n-the Apple binutils (ld, ar, etc) and DMG authoring tools.\n-\n-Apple uses clang extensively for development and has upstreamed the necessary\n-functionality so that a vanilla clang can take advantage. It supports the use\n-of -F, -target, -mmacosx-version-min, and --sysroot, which are all necessary\n-when building for macOS.\n-\n-Apple's version of binutils (called cctools) contains lots of functionality\n-missing in the FSF's binutils. In addition to extra linker options for\n-frameworks and sysroots, several other tools are needed as well such as\n-install_name_tool, lipo, and nmedit. These do not build under linux, so they\n-have been patched to do so. The work here was used as a starting point:\n-[mingwandroid/toolchain4](https://github.com/mingwandroid/toolchain4).\n-\n-In order to build a working toolchain, the following source packages are needed\n-from Apple: cctools, dyld, and ld64.\n-\n-These tools inject timestamps by default, which produce non-deterministic\n-binaries. The ZERO_AR_DATE environment variable is used to disable that.\n-\n-This version of cctools has been patched to use the current version of clang's\n-headers and its libLTO.so rather than those from llvmgcc, as it was\n-originally done in toolchain4.\n-\n-To complicate things further, all builds must target an Apple SDK. These SDKs\n-are free to download, but not redistributable.\n-To obtain it, register for a developer account, then download the [Xcode 7.3.1 dmg](https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/Xcode_7.3.1/Xcode_7.3.1.dmg).\n-\n-This file is several gigabytes in size, but only a single directory inside is\n-needed:\n-```\n-Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk\n-```\n-\n-Unfortunately, the usual linux tools (7zip, hpmount, loopback mount) are incapable of opening this file.\n-To create a tarball suitable for Gitian input, there are two options:\n-\n-Using macOS, you can mount the dmg, and then create it with:\n-```\n-  $ hdiutil attach Xcode_7.3.1.dmg\n-  $ tar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.11.sdk.tar.gz MacOSX10.11.sdk\n-```\n-\n-Alternatively, you can use 7zip and SleuthKit to extract the files one by one.\n-The script contrib/macdeploy/extract-osx-sdk.sh automates this. First ensure\n-the dmg file is in the current directory, and then run the script. You may wish\n-to delete the intermediate 5.hfs file and MacOSX10.11.sdk (the directory) when\n-you've confirmed the extraction succeeded.\n-\n-```bash\n-apt-get install p7zip-full sleuthkit\n-contrib/macdeploy/extract-osx-sdk.sh\n-rm -rf 5.hfs MacOSX10.11.sdk\n-```\n-\n-The Gitian descriptors build 2 sets of files: Linux tools, then Apple binaries\n-which are created using these tools. The build process has been designed to\n-avoid including the SDK's files in Gitian's outputs. All interim tarballs are\n-fully deterministic and may be freely redistributed.\n-\n-genisoimage is used to create the initial DMG. It is not deterministic as-is,\n-so it has been patched. A system genisoimage will work fine, but it will not\n-be deterministic because the file-order will change between invocations.\n-The patch can be seen here:  [theuni/osx-cross-depends](https://raw.githubusercontent.com/theuni/osx-cross-depends/master/patches/cdrtools/genisoimage.diff).\n-No effort was made to fix this cleanly, so it likely leaks memory badly. But\n-it's only used for a single invocation, so that's no real concern.\n-\n-genisoimage cannot compress DMGs, so afterwards, the 'dmg' tool from the\n-libdmg-hfsplus project is used to compress it. There are several bugs in this\n-tool and its maintainer has seemingly abandoned the project. It has been forked\n-and is available (with fixes) here: [theuni/libdmg-hfsplus](https://github.com/theuni/libdmg-hfsplus).\n-\n-The 'dmg' tool has the ability to create DMGs from scratch as well, but this\n-functionality is broken. Only the compression feature is currently used.\n-Ideally, the creation could be fixed and genisoimage would no longer be necessary.\n-\n-Background images and other features can be added to DMG files by inserting a\n-.DS_Store before creation. This is generated by the script\n-contrib/macdeploy/custom_dsstore.py.\n-\n-As of OS X 10.9 Mavericks, using an Apple-blessed key to sign binaries is a\n-requirement in order to satisfy the new Gatekeeper requirements. Because this\n-private key cannot be shared, we'll have to be a bit creative in order for the\n-build process to remain somewhat deterministic. Here's how it works:\n-\n-- Builders use Gitian to create an unsigned release. This outputs an unsigned\n-  dmg which users may choose to bless and run. It also outputs an unsigned app\n-  structure in the form of a tarball, which also contains all of the tools\n-  that have been previously (deterministically) built in order to create a\n-  final dmg.\n-- The Apple keyholder uses this unsigned app to create a detached signature,\n-  using the script that is also included there. Detached signatures are available from this [repository](https://github.com/bitcoin-core/bitcoin-detached-sigs).\n-- Builders feed the unsigned app + detached signature back into Gitian. It\n-  uses the pre-built tools to recombine the pieces into a deterministic dmg."
      },
      {
        "sha": "119896dc676767b03299bf2de2b474f2906d1bb1",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 100,
        "deletions": 0,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f24ed6d39f963e7f1c0b4dbd9b784132ef975f2a/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f24ed6d39f963e7f1c0b4dbd9b784132ef975f2a/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=f24ed6d39f963e7f1c0b4dbd9b784132ef975f2a",
        "patch": "@@ -105,3 +105,103 @@ Notes\n * Tested on OS X 10.10 Yosemite through macOS 10.13 High Sierra on 64-bit Intel processors only.\n \n * Building with downloaded Qt binaries is not officially supported. See the notes in [#7714](https://github.com/bitcoin/bitcoin/issues/7714)\n+\n+Deterministic macOS DMG Notes\n+-----------------------------\n+\n+Working macOS DMGs are created in Linux by combining a recent clang,\n+the Apple binutils (ld, ar, etc) and DMG authoring tools.\n+\n+Apple uses clang extensively for development and has upstreamed the necessary\n+functionality so that a vanilla clang can take advantage. It supports the use\n+of -F, -target, -mmacosx-version-min, and --sysroot, which are all necessary\n+when building for macOS.\n+\n+Apple's version of binutils (called cctools) contains lots of functionality\n+missing in the FSF's binutils. In addition to extra linker options for\n+frameworks and sysroots, several other tools are needed as well such as\n+install_name_tool, lipo, and nmedit. These do not build under linux, so they\n+have been patched to do so. The work here was used as a starting point:\n+[mingwandroid/toolchain4](https://github.com/mingwandroid/toolchain4).\n+\n+In order to build a working toolchain, the following source packages are needed\n+from Apple: cctools, dyld, and ld64.\n+\n+These tools inject timestamps by default, which produce non-deterministic\n+binaries. The ZERO_AR_DATE environment variable is used to disable that.\n+\n+This version of cctools has been patched to use the current version of clang's\n+headers and its libLTO.so rather than those from llvmgcc, as it was\n+originally done in toolchain4.\n+\n+To complicate things further, all builds must target an Apple SDK. These SDKs\n+are free to download, but not redistributable.\n+To obtain it, register for a developer account, then download the [Xcode 7.3.1 dmg](https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/Xcode_7.3.1/Xcode_7.3.1.dmg).\n+\n+This file is several gigabytes in size, but only a single directory inside is\n+needed:\n+```\n+Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk\n+```\n+\n+Unfortunately, the usual linux tools (7zip, hpmount, loopback mount) are incapable of opening this file.\n+To create a tarball suitable for Gitian input, there are two options:\n+\n+Using macOS, you can mount the dmg, and then create it with:\n+```\n+  $ hdiutil attach Xcode_7.3.1.dmg\n+  $ tar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.11.sdk.tar.gz MacOSX10.11.sdk\n+```\n+\n+Alternatively, you can use 7zip and SleuthKit to extract the files one by one.\n+The script contrib/macdeploy/extract-osx-sdk.sh automates this. First ensure\n+the dmg file is in the current directory, and then run the script. You may wish\n+to delete the intermediate 5.hfs file and MacOSX10.11.sdk (the directory) when\n+you've confirmed the extraction succeeded.\n+\n+```bash\n+apt-get install p7zip-full sleuthkit\n+contrib/macdeploy/extract-osx-sdk.sh\n+rm -rf 5.hfs MacOSX10.11.sdk\n+```\n+\n+The Gitian descriptors build 2 sets of files: Linux tools, then Apple binaries\n+which are created using these tools. The build process has been designed to\n+avoid including the SDK's files in Gitian's outputs. All interim tarballs are\n+fully deterministic and may be freely redistributed.\n+\n+genisoimage is used to create the initial DMG. It is not deterministic as-is,\n+so it has been patched. A system genisoimage will work fine, but it will not\n+be deterministic because the file-order will change between invocations.\n+The patch can be seen here:  [theuni/osx-cross-depends](https://raw.githubusercontent.com/theuni/osx-cross-depends/master/patches/cdrtools/genisoimage.diff).\n+No effort was made to fix this cleanly, so it likely leaks memory badly. But\n+it's only used for a single invocation, so that's no real concern.\n+\n+genisoimage cannot compress DMGs, so afterwards, the 'dmg' tool from the\n+libdmg-hfsplus project is used to compress it. There are several bugs in this\n+tool and its maintainer has seemingly abandoned the project. It has been forked\n+and is available (with fixes) here: [theuni/libdmg-hfsplus](https://github.com/theuni/libdmg-hfsplus).\n+\n+The 'dmg' tool has the ability to create DMGs from scratch as well, but this\n+functionality is broken. Only the compression feature is currently used.\n+Ideally, the creation could be fixed and genisoimage would no longer be necessary.\n+\n+Background images and other features can be added to DMG files by inserting a\n+.DS_Store before creation. This is generated by the script\n+contrib/macdeploy/custom_dsstore.py.\n+\n+As of OS X 10.9 Mavericks, using an Apple-blessed key to sign binaries is a\n+requirement in order to satisfy the new Gatekeeper requirements. Because this\n+private key cannot be shared, we'll have to be a bit creative in order for the\n+build process to remain somewhat deterministic. Here's how it works:\n+\n+- Builders use Gitian to create an unsigned release. This outputs an unsigned\n+  dmg which users may choose to bless and run. It also outputs an unsigned app\n+  structure in the form of a tarball, which also contains all of the tools\n+  that have been previously (deterministically) built in order to create a\n+  final dmg.\n+- The Apple keyholder uses this unsigned app to create a detached signature,\n+  using the script that is also included there. Detached signatures are available from this [repository](https://github.com/bitcoin-core/bitcoin-detached-sigs).\n+- Builders feed the unsigned app + detached signature back into Gitian. It\n+  uses the pre-built tools to recombine the pieces into a deterministic dmg.\n+"
      },
      {
        "sha": "d20a3dc6b33eec1295dd876f60b9504a516766c9",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f24ed6d39f963e7f1c0b4dbd9b784132ef975f2a/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f24ed6d39f963e7f1c0b4dbd9b784132ef975f2a/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=f24ed6d39f963e7f1c0b4dbd9b784132ef975f2a",
        "patch": "@@ -92,7 +92,7 @@ Ensure gitian-builder is up-to-date:\n     echo 'f9a8cdb38b9c309326764ebc937cba1523a3a751a7ab05df3ecc99d18ae466c9 inputs/osslsigncode-1.7.1.tar.gz' | sha256sum -c\n     popd\n \n-Create the macOS SDK tarball, see the [macOS readme](README_osx.md) for details, and copy it into the inputs directory.\n+Create the macOS SDK tarball, see the [macOS build instructions](build-osx.md#deterministic-macos-dmg-notes) for details, and copy it into the inputs directory.\n \n ### Optional: Seed the Gitian sources cache and offline git repositories\n "
      }
    ]
  }
]