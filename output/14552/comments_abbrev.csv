ryanofsky,2018-10-23T19:36:09Z,"Would prefer to check this at database level, rather than in higher level wallet code. I think it's better if high level code just passes along wallet paths and isn't concerned with how data is stored in them.\n\nI posted a tweaked version of this PR at 40a6475e59950838be532b0a2c58f4359eae5625 which moves the check. @ken2812221, could you incorporate 40a6475e59950838be532b0a2c58f4359eae5625 into",https://github.com/bitcoin/bitcoin/pull/14552#issuecomment-432389031,432389031,
ken2812221,2018-10-23T20:34:11Z,"@ryanofsky The element in mapDb is not always exist.\n\nFor example:\n1. Load wallet `dir/w1`\n2. Load wallet `dir/w2`\n3. Unload wallet `dir/w1`\n\nNow mapDb contains neither `dir/w1` nor `dir/w2` because it would flush all wallet files that share same BerkeleyEnvironment\n",https://github.com/bitcoin/bitcoin/pull/14552#issuecomment-432409103,432409103,
DrahtBot,2018-10-23T22:01:03Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#11911](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/11911.html) (Free BerkeleyEnvironment instances when not",https://github.com/bitcoin/bitcoin/pull/14552#issuecomment-432437568,432437568,
ryanofsky,2018-10-24T21:02:11Z,"> @ryanofsky The element in mapDb is not always exist.\n\nGood catch. I think a small refactoring could fix this: 9c945d011abde24f8649d877e694d392e1a5727e. And then the fix would change slightly to aef19be5851ceb3b324fd80756060a00aad8e61c.\n\nI pushed a branch with these two commits to: https://github.com/ryanofsky/bitcoin/commits/pr/bloaded\n\nI think this is a better than checking for wall",https://github.com/bitcoin/bitcoin/pull/14552#issuecomment-432826947,432826947,
ken2812221,2018-11-05T13:28:25Z,Rebased,https://github.com/bitcoin/bitcoin/pull/14552#issuecomment-435873156,435873156,
ken2812221,2018-11-05T15:51:10Z,@ryanofsky Thanks for your review. I would take your suggestion.,https://github.com/bitcoin/bitcoin/pull/14552#issuecomment-435925125,435925125,
promag,2018-11-06T10:20:33Z,utACK 15c93f0.,https://github.com/bitcoin/bitcoin/pull/14552#issuecomment-436202696,436202696,
ryanofsky,2018-11-08T16:33:17Z,"utACK 591203149f1700f594f781862e88cbbfe83d8d37. Just minor tweaks since last review: replacing map::at exception with assert, adding IsDatabaseLoaded.\n\n@promag and @MarcoFalke, I've noticed that in your recent reviews you've been advocating replacing exceptions with asserts or return codes. Maybe one of you can write up some guidelines about when to use exceptions in the developer guide. Perso",https://github.com/bitcoin/bitcoin/pull/14552#issuecomment-437061444,437061444,
meshcollider,2018-11-09T13:37:36Z,"utACK https://github.com/bitcoin/bitcoin/pull/14552/commits/591203149f1700f594f781862e88cbbfe83d8d37, looks good",https://github.com/bitcoin/bitcoin/pull/14552#issuecomment-437361617,437361617,
ryanofsky,2018-11-15T17:35:41Z,"Can this be merged? It fixes an ugly bug and has some refactoring changes I want to build on. If it can't be merged, maybe it could be added to https://github.com/bitcoin/bitcoin/projects/8",https://github.com/bitcoin/bitcoin/pull/14552#issuecomment-439125552,439125552,
MarcoFalke,2018-11-15T18:21:13Z,Is this for backport?,https://github.com/bitcoin/bitcoin/pull/14552#issuecomment-439140212,439140212,
ryanofsky,2018-11-15T18:28:48Z,"> Is this for backport?\n\nI don't have a great sense for which changes get backported and which changes don't. I would guess it could be backported, but I don't think it's important to backport. Original bug #14538 reporter @chernyshev might have an opinion.\n\nNote: related fix https://github.com/bitcoin/bitcoin/pull/14320#issuecomment-425159822 does not appear to have been backported.",https://github.com/bitcoin/bitcoin/pull/14552#issuecomment-439142609,439142609,
promag,2018-11-05T15:47:40Z,"Some comments here:\n - there's a slight change when replacing `map::operator[]` with `map::at`, maybe worth a comemnt or an assertion?\n - also, isn't this equivalent to the above `database` argument?\n - if this is really necessary then you could avoid shadowing `database`.",https://github.com/bitcoin/bitcoin/pull/14552#discussion_r230800120,230800120,src/wallet/db.cpp
promag,2018-11-05T15:49:20Z,"nit, could add `final` to class since this is not virtual.",https://github.com/bitcoin/bitcoin/pull/14552#discussion_r230800921,230800921,src/wallet/db.h
promag,2018-11-05T15:53:44Z,Could be `static`?,https://github.com/bitcoin/bitcoin/pull/14552#discussion_r230802798,230802798,src/wallet/db.cpp
ryanofsky,2018-11-05T16:06:02Z,"re: https://github.com/bitcoin/bitcoin/pull/14552#discussion_r230800120\n\nOh, I didn't even realize there was a `database` argument being shadowed above. Should just delete this line and use the existing `database`, which points to the same thing.",https://github.com/bitcoin/bitcoin/pull/14552#discussion_r230808159,230808159,src/wallet/db.cpp
promag,2018-11-05T16:11:01Z,"Same as above, there's a slight change when replacing `map::operator[]` with `map::at`, maybe worth a comment or an assertion?",https://github.com/bitcoin/bitcoin/pull/14552#discussion_r230810096,230810096,src/wallet/db.cpp
ken2812221,2018-11-05T16:46:40Z,`final` can only be added to virtual method.,https://github.com/bitcoin/bitcoin/pull/14552#discussion_r230825166,230825166,src/wallet/db.h
promag,2018-11-05T16:48:37Z,@ken2812221 I mean `class BerkeleyDatabase final`.,https://github.com/bitcoin/bitcoin/pull/14552#discussion_r230825935,230825935,src/wallet/db.h
ryanofsky,2018-11-05T17:23:06Z,"Change would be unrelated to this PR, and IMO, it's better only to use final when you have virtual methods and actual optimizations this would allow or bugs it would prevent. There's a core guideline that touches on this: http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rh-final",https://github.com/bitcoin/bitcoin/pull/14552#discussion_r230838723,230838723,src/wallet/db.h
promag,2018-11-05T17:30:38Z,Nice thanks.,https://github.com/bitcoin/bitcoin/pull/14552#discussion_r230841325,230841325,src/wallet/db.h
laanwj,2018-11-06T12:01:40Z,"I think this is leaking the implementation detail of `m_databases`, wouldn't checking whether a database exists ideally be a responsibility of the database environment. e.g. add a `bool IsDatabaseLoaded(name)` on `DBenv`?",https://github.com/bitcoin/bitcoin/pull/14552#discussion_r231096324,231096324,src/wallet/db.cpp
promag,2018-11-06T12:15:05Z,Note that `BerkeleyEnvironment::mapDb` is currently used outside. I consider this a bugfix so any improvement/refactor could come next.,https://github.com/bitcoin/bitcoin/pull/14552#discussion_r231099786,231099786,src/wallet/db.cpp
ryanofsky,2018-11-08T16:34:03Z,This is now resolved (by adding `IsDatabaseLoaded`),https://github.com/bitcoin/bitcoin/pull/14552#discussion_r231968260,231968260,src/wallet/db.cpp
promag,2018-11-19T22:51:39Z,Shouldn't this be guarded by `cs_db`?,https://github.com/bitcoin/bitcoin/pull/14552#discussion_r234812302,234812302,src/wallet/db.h
