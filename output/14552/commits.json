[
  {
    "sha": "c456fbd8dfcc748e5ec9feaa57ec0f2900f99cde",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDU2ZmJkOGRmY2M3NDhlNWVjOWZlYWE1N2VjMGYyOTAwZjk5Y2Rl",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2018-10-24T20:08:54Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-11-06T00:28:02Z"
      },
      "message": "Refactor: Move m_db pointers into BerkeleyDatabase\n\nThis is a refactoring change that doesn't affect behavior. The motivation\nbehind the change is give BerkeleyEnvironment objects access to\nBerkeleyDatabase objects so it will be possible to simplify the duplicate\nwallet check and more reliably avoid opening the same databases twice.",
      "tree": {
        "sha": "4f360323dc4b35b70df471d3c72903750c9379ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f360323dc4b35b70df471d3c72903750c9379ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c456fbd8dfcc748e5ec9feaa57ec0f2900f99cde",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c456fbd8dfcc748e5ec9feaa57ec0f2900f99cde",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c456fbd8dfcc748e5ec9feaa57ec0f2900f99cde",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c456fbd8dfcc748e5ec9feaa57ec0f2900f99cde/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "76ae7a1ac9b18437e89b54fa23bc22cff507ad42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76ae7a1ac9b18437e89b54fa23bc22cff507ad42",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76ae7a1ac9b18437e89b54fa23bc22cff507ad42"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 29,
      "deletions": 14
    },
    "files": [
      {
        "sha": "b2404e2a85f23c034b54e8ad9ce059c80d6aed2c",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 13,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c456fbd8dfcc748e5ec9feaa57ec0f2900f99cde/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c456fbd8dfcc748e5ec9feaa57ec0f2900f99cde/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=c456fbd8dfcc748e5ec9feaa57ec0f2900f99cde",
        "patch": "@@ -90,13 +90,13 @@ void BerkeleyEnvironment::Close()\n \n     fDbEnvInit = false;\n \n-    for (auto& db : mapDb) {\n+    for (auto& db : m_databases) {\n         auto count = mapFileUseCount.find(db.first);\n         assert(count == mapFileUseCount.end() || count->second == 0);\n-        if (db.second) {\n-            db.second->close(0);\n-            delete db.second;\n-            db.second = nullptr;\n+        BerkeleyDatabase& database = db.second.get();\n+        if (database.m_db) {\n+            database.m_db->close(0);\n+            database.m_db.reset();\n         }\n     }\n \n@@ -463,7 +463,7 @@ BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase& database, const char* pszMode, bo\n         if (!env->Open(false /* retry */))\n             throw std::runtime_error(\"BerkeleyBatch: Failed to open database environment.\");\n \n-        pdb = env->mapDb[strFilename];\n+        pdb = database.m_db.get();\n         if (pdb == nullptr) {\n             int ret;\n             std::unique_ptr<Db> pdb_temp = MakeUnique<Db>(env->dbenv.get(), 0);\n@@ -508,7 +508,7 @@ BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase& database, const char* pszMode, bo\n             }\n \n             pdb = pdb_temp.release();\n-            env->mapDb[strFilename] = pdb;\n+            database.m_db.reset(pdb);\n \n             if (fCreate && !Exists(std::string(\"version\"))) {\n                 bool fTmp = fReadOnly;\n@@ -563,12 +563,13 @@ void BerkeleyEnvironment::CloseDb(const std::string& strFile)\n {\n     {\n         LOCK(cs_db);\n-        if (mapDb[strFile] != nullptr) {\n+        auto it = m_databases.find(strFile);\n+        assert(it != m_databases.end());\n+        BerkeleyDatabase& database = it->second.get();\n+        if (database.m_db) {\n             // Close the database handle\n-            Db* pdb = mapDb[strFile];\n-            pdb->close(0);\n-            delete pdb;\n-            mapDb[strFile] = nullptr;\n+            database.m_db->close(0);\n+            database.m_db.reset();\n         }\n     }\n }\n@@ -586,7 +587,7 @@ void BerkeleyEnvironment::ReloadDbEnv()\n     });\n \n     std::vector<std::string> filenames;\n-    for (auto it : mapDb) {\n+    for (auto it : m_databases) {\n         filenames.push_back(it.first);\n     }\n     // Close the individual Db's"
      },
      {
        "sha": "e9f89ac6cbea76e271a268d504e6d8dfb413a5ac",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c456fbd8dfcc748e5ec9feaa57ec0f2900f99cde/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c456fbd8dfcc748e5ec9feaa57ec0f2900f99cde/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=c456fbd8dfcc748e5ec9feaa57ec0f2900f99cde",
        "patch": "@@ -31,6 +31,8 @@ struct WalletDatabaseFileId {\n     bool operator==(const WalletDatabaseFileId& rhs) const;\n };\n \n+class BerkeleyDatabase;\n+\n class BerkeleyEnvironment\n {\n private:\n@@ -43,7 +45,7 @@ class BerkeleyEnvironment\n public:\n     std::unique_ptr<DbEnv> dbenv;\n     std::map<std::string, int> mapFileUseCount;\n-    std::map<std::string, Db*> mapDb;\n+    std::map<std::string, std::reference_wrapper<BerkeleyDatabase>> m_databases;\n     std::unordered_map<std::string, WalletDatabaseFileId> m_fileids;\n     std::condition_variable_any m_db_in_use;\n \n@@ -115,13 +117,22 @@ class BerkeleyDatabase\n         nUpdateCounter(0), nLastSeen(0), nLastFlushed(0), nLastWalletUpdate(0)\n     {\n         env = GetWalletEnv(wallet_path, strFile);\n+        auto inserted = env->m_databases.emplace(strFile, std::ref(*this));\n+        assert(inserted.second);\n         if (mock) {\n             env->Close();\n             env->Reset();\n             env->MakeMock();\n         }\n     }\n \n+    ~BerkeleyDatabase() {\n+        if (env) {\n+            size_t erased = env->m_databases.erase(strFile);\n+            assert(erased == 1);\n+        }\n+    }\n+\n     /** Return object for accessing database at specified path. */\n     static std::unique_ptr<BerkeleyDatabase> Create(const fs::path& path)\n     {\n@@ -161,6 +172,9 @@ class BerkeleyDatabase\n     unsigned int nLastFlushed;\n     int64_t nLastWalletUpdate;\n \n+    /** Database pointer. This is initialized lazily and reset during flushes, so it can be null. */\n+    std::unique_ptr<Db> m_db;\n+\n private:\n     /** BerkeleyDB specific */\n     BerkeleyEnvironment *env;"
      }
    ]
  },
  {
    "sha": "15c93f075a881deb3ad7b1dd8a4516a9b06e5e11",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNWM5M2YwNzVhODgxZGViM2FkN2IxZGQ4YTQ1MTZhOWIwNmU1ZTEx",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-10-23T05:26:27Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-11-06T00:28:02Z"
      },
      "message": "wallet: Add trailing wallet.dat when detecting duplicate wallet if it's a directory.",
      "tree": {
        "sha": "9bbeeba05f637480c344d82b009488869e005e3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9bbeeba05f637480c344d82b009488869e005e3f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15c93f075a881deb3ad7b1dd8a4516a9b06e5e11",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15c93f075a881deb3ad7b1dd8a4516a9b06e5e11",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/15c93f075a881deb3ad7b1dd8a4516a9b06e5e11",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15c93f075a881deb3ad7b1dd8a4516a9b06e5e11/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c456fbd8dfcc748e5ec9feaa57ec0f2900f99cde",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c456fbd8dfcc748e5ec9feaa57ec0f2900f99cde",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c456fbd8dfcc748e5ec9feaa57ec0f2900f99cde"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 28,
      "deletions": 7
    },
    "files": [
      {
        "sha": "bdd7b41b9d79732699e67d868d27a0b352c91b91",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 2,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/15c93f075a881deb3ad7b1dd8a4516a9b06e5e11/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/15c93f075a881deb3ad7b1dd8a4516a9b06e5e11/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=15c93f075a881deb3ad7b1dd8a4516a9b06e5e11",
        "patch": "@@ -56,9 +56,8 @@ bool WalletDatabaseFileId::operator==(const WalletDatabaseFileId& rhs) const\n     return memcmp(value, &rhs.value, sizeof(value)) == 0;\n }\n \n-BerkeleyEnvironment* GetWalletEnv(const fs::path& wallet_path, std::string& database_filename)\n+static void SplitWalletPath(const fs::path& wallet_path, fs::path& env_directory, std::string& database_filename)\n {\n-    fs::path env_directory;\n     if (fs::is_regular_file(wallet_path)) {\n         // Special case for backwards compatibility: if wallet path points to an\n         // existing file, treat it as the path to a BDB data file in a parent\n@@ -71,6 +70,24 @@ BerkeleyEnvironment* GetWalletEnv(const fs::path& wallet_path, std::string& data\n         env_directory = wallet_path;\n         database_filename = \"wallet.dat\";\n     }\n+}\n+\n+bool IsWalletLoaded(const fs::path& wallet_path)\n+{\n+    fs::path env_directory;\n+    std::string database_filename;\n+    SplitWalletPath(wallet_path, env_directory, database_filename);\n+    LOCK(cs_db);\n+    auto env = g_dbenvs.find(env_directory.string());\n+    if (env == g_dbenvs.end()) return false;\n+    auto db = env->second.m_databases.find(database_filename);\n+    return db != env->second.m_databases.end();\n+}\n+\n+BerkeleyEnvironment* GetWalletEnv(const fs::path& wallet_path, std::string& database_filename)\n+{\n+    fs::path env_directory;\n+    SplitWalletPath(wallet_path, env_directory, database_filename);\n     LOCK(cs_db);\n     // Note: An unused temporary BerkeleyEnvironment object may be created inside the\n     // emplace function if the key already exists. This is a little inefficient,"
      },
      {
        "sha": "9832094ccbe78f44107f8742580dd1ce1a5e90cd",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/15c93f075a881deb3ad7b1dd8a4516a9b06e5e11/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/15c93f075a881deb3ad7b1dd8a4516a9b06e5e11/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=15c93f075a881deb3ad7b1dd8a4516a9b06e5e11",
        "patch": "@@ -97,6 +97,9 @@ class BerkeleyEnvironment\n     }\n };\n \n+/** Return whether a wallet database is currently loaded. */\n+bool IsWalletLoaded(const fs::path& wallet_path);\n+\n /** Get BerkeleyEnvironment and database filename given a wallet path. */\n BerkeleyEnvironment* GetWalletEnv(const fs::path& wallet_path, std::string& database_filename);\n "
      },
      {
        "sha": "0061ac2294ed76f1dc2afad5017383466f1de578",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/15c93f075a881deb3ad7b1dd8a4516a9b06e5e11/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/15c93f075a881deb3ad7b1dd8a4516a9b06e5e11/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=15c93f075a881deb3ad7b1dd8a4516a9b06e5e11",
        "patch": "@@ -3848,11 +3848,9 @@ bool CWallet::Verify(const WalletLocation& location, bool salvage_wallet, std::s\n     }\n \n     // Make sure that the wallet path doesn't clash with an existing wallet path\n-    for (auto wallet : GetWallets()) {\n-        if (wallet->GetLocation().GetPath() == wallet_path) {\n-            error_string = strprintf(\"Error loading wallet %s. Duplicate -wallet filename specified.\", location.GetName());\n-            return false;\n-        }\n+    if (IsWalletLoaded(wallet_path)) {\n+        error_string = strprintf(\"Error loading wallet %s. Duplicate -wallet filename specified.\", location.GetName());\n+        return false;\n     }\n \n     try {"
      },
      {
        "sha": "8ab569a3c306e7dec77725aaedf5d0e38fe46cc3",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/15c93f075a881deb3ad7b1dd8a4516a9b06e5e11/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/15c93f075a881deb3ad7b1dd8a4516a9b06e5e11/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=15c93f075a881deb3ad7b1dd8a4516a9b06e5e11",
        "patch": "@@ -223,6 +223,9 @@ def wallet_file(name):\n         # Fail to load duplicate wallets\n         assert_raises_rpc_error(-4, 'Wallet file verification failed: Error loading wallet w1. Duplicate -wallet filename specified.', self.nodes[0].loadwallet, wallet_names[0])\n \n+        # Fail to load duplicate wallets by different ways (directory and filepath)\n+        assert_raises_rpc_error(-4, \"Wallet file verification failed: Error loading wallet wallet.dat. Duplicate -wallet filename specified.\", self.nodes[0].loadwallet, 'wallet.dat')\n+\n         # Fail to load if one wallet is a copy of another\n         assert_raises_rpc_error(-1, \"BerkeleyBatch: Can't open database w8_copy (duplicates fileid\", self.nodes[0].loadwallet, 'w8_copy')\n "
      }
    ]
  },
  {
    "sha": "591203149f1700f594f781862e88cbbfe83d8d37",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OTEyMDMxNDlmMTcwMGY1OTRmNzgxODYyZTg4Y2JiZmU4M2Q4ZDM3",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-11-08T03:41:56Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-11-08T03:54:37Z"
      },
      "message": "wallet: Create IsDatabaseLoaded function",
      "tree": {
        "sha": "58f2a5790dfe0261664395c76d050daef6d60f5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/58f2a5790dfe0261664395c76d050daef6d60f5e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/591203149f1700f594f781862e88cbbfe83d8d37",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/591203149f1700f594f781862e88cbbfe83d8d37",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/591203149f1700f594f781862e88cbbfe83d8d37",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/591203149f1700f594f781862e88cbbfe83d8d37/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "15c93f075a881deb3ad7b1dd8a4516a9b06e5e11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15c93f075a881deb3ad7b1dd8a4516a9b06e5e11",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/15c93f075a881deb3ad7b1dd8a4516a9b06e5e11"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d75e30d3361e33df969eb22bcf2a209c2bfbc406",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/591203149f1700f594f781862e88cbbfe83d8d37/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/591203149f1700f594f781862e88cbbfe83d8d37/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=591203149f1700f594f781862e88cbbfe83d8d37",
        "patch": "@@ -80,8 +80,7 @@ bool IsWalletLoaded(const fs::path& wallet_path)\n     LOCK(cs_db);\n     auto env = g_dbenvs.find(env_directory.string());\n     if (env == g_dbenvs.end()) return false;\n-    auto db = env->second.m_databases.find(database_filename);\n-    return db != env->second.m_databases.end();\n+    return env->second.IsDatabaseLoaded(database_filename);\n }\n \n BerkeleyEnvironment* GetWalletEnv(const fs::path& wallet_path, std::string& database_filename)"
      },
      {
        "sha": "e453d441d76005d4aebf71a7633b3167655cb875",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/591203149f1700f594f781862e88cbbfe83d8d37/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/591203149f1700f594f781862e88cbbfe83d8d37/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=591203149f1700f594f781862e88cbbfe83d8d37",
        "patch": "@@ -56,6 +56,7 @@ class BerkeleyEnvironment\n     void MakeMock();\n     bool IsMock() const { return fMockDb; }\n     bool IsInitialized() const { return fDbEnvInit; }\n+    bool IsDatabaseLoaded(const std::string& db_filename) const { return m_databases.find(db_filename) != m_databases.end(); }\n     fs::path Directory() const { return strPath; }\n \n     /**"
      }
    ]
  }
]