kallewoof,2017-08-10T09:27:36Z,"@jnewbery Sorry for taking so long. Assuming there is a race condition where your side ends up scanning the chain before the abort makes it through, this should definitely fix it, I think. The tests take ~4 mins on my machine, but they're already in extended tests.\nIf this still shows intermittent failures on your end, I will need to go back to the drawing board, as it has to be something other ",https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-321500351,321500351,
jnewbery,2017-08-14T13:55:59Z,"This may be specific to my local environment, but if I try to run this test multiple times in parallel, I get failures:\n\n```\nâ†’ ./test_runner.py $(for i in {1..40}; do echo -n 'import-abort-rescan '; done)\nTemporary test directory at /tmp/user/1000/bitcoin_test_runner_20170814_134812\nWARNING! The following scripts are not being run: ['test_bitcoincli.py', 'bip65-cltv.py', 'wallet-labels.p",https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-322196718,322196718,
MarcoFalke,2017-08-14T14:14:01Z,"Just fyi\n\n```sh\n./test_runner.py $(for i in {1..40}; do echo -n 'import-abort-rescan '; done)\n```\n\nis passing for me on an ssd.",https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-322201496,322201496,
jnewbery,2017-08-14T15:01:53Z,Thanks @MarcoFalke - probably caused by my slow disk in that case.,https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-322214745,322214745,
MarcoFalke,2017-08-14T15:06:17Z,"Yeah. Though, I think tests should run and pass on all platforms that are capable of running Bitcoin Core.",https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-322215953,322215953,
kallewoof,2017-08-15T02:57:26Z,"@jnewbery your bash line runs fine on my end.\n\n`socket.timeout: timed out`? Hum.. any ideas on how to fix that one?",https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-322364458,322364458,
jnewbery,2017-08-15T13:18:17Z,"`socket.timeout: timed out` probably means that running this test 4 times in parallel is too much for my VM, and one of the rpc calls timed out.",https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-322463350,322463350,
MarcoFalke,2017-08-15T15:05:03Z,Please squash your commits if this is no longer WIP,https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-322495124,322495124,
kallewoof,2017-08-16T05:17:43Z,@MarcoFalke Squashed & removed '[WIP]' from title.,https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-322668684,322668684,
maxgiraldo,2017-12-10T00:14:34Z,"I was able to get most of the tests to pass running in parallel on the following:\n\n- [x] **Ubuntu 16.04.2 LTS x86_64**\n1 Core\n2.50GHz CPU\n1GB RAM\nHDD\n\n- [x] **Debian GNU/Linux 8.9 x86_64**\n1 Core\n2.80 GHz CPU\n2GB RAM\nHDD\n\n- [ ] **MacOS High Sierra x86_64**\n2 Cores\n3.3 GHz CPU\n16GB RAM\nSSD\n39/40 tests passed successfully\n\nError:\n```\nstdout:\n2017-12-09",https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-350515238,350515238,
kallewoof,2017-12-11T03:38:02Z,"@maxgiraldo Thanks for testing! I tried on same mac set up (except more cores) doing\n```Bash\n./test_runner.py $(for i in {1..40}; do echo -n 'import-abort-rescan '; done)\n```\nand it is working on my end. What command are you using to run the tests?",https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-350614915,350614915,
maxgiraldo,2017-12-11T15:21:25Z,"@kallewoof No problem! I'm using `./test_runner.py $(for i in {1..40}; do echo -n 'import-abort-rescan '; done)` as well. I ran the tests again on Mac about three more times and got the same error, but only on the last run. ",https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-350755216,350755216,
kallewoof,2017-12-12T04:09:40Z,@maxgiraldo After running it for a long time I managed to reproduce. Looking into it now.,https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-350939715,350939715,
kallewoof,2017-12-13T03:44:17Z,"Hum. I can't reproduce this without running for hours. It feels like something is being exhausted, triggering the issue, but even after running for several hours I don't see any spikes in resource usage and drive has 100 GB free. @jnewbery any thoughts on why ""OSError: [Errno 41] Protocol wrong type for socket"" would happen occasionally for \n```\n    return_val = self.auth_service_proxy_instanc",https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-351273712,351273712,
maxgiraldo,2017-12-13T15:06:17Z,"@kallewoof Seems to be a MacOS/OS X-specific kernel issue, which throws the error code `EPROTOTYPE` when you attempt to do a TCP `send` syscall while a socket is not yet connected or is in the process of being torn down.*\n\n[Source Code](https://github.com/opensource-apple/xnu/blob/0a798f6738bc1db01281fc08ae024145e84df927/bsd/netinet/tcp_usrreq.c#L961)\n*[Source](http://erickt.github.io/blog/2",https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-351417956,351417956,
jnewbery,2017-12-13T21:35:22Z,"Hmmm, I've definitely read that blog post before, but I can't remember what exactly the context was!\n\n@maxgiraldo - perhaps you could add additional exception handling here: https://github.com/bitcoin/bitcoin/blob/d4991c0cbb8a5464add1b64268eccdbfd3026d6e/test/functional/test_framework/authproxy.py#L108\n\nSomething like:\n\n```\n        except OSError as e:\n            if e.errno == 42:",https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-351532370,351532370,
kallewoof,2017-12-14T00:40:03Z,"I can reproduce as well, but it sometimes takes hours. Will try your patch in a couple hours on my end. I'll push a commit so @maxgiraldo can test it too if he hasn't tried it manually already.",https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-351571655,351571655,
kallewoof,2017-12-18T05:22:49Z,"Different error now. Something very weird is going on with networking here.\n```\n2017-12-18 03:53:15.458000 TestFramework (INFO): Initializing test directory /var/folders/b8/znqr8hj918772gfmd875gzgdd3ypz1/T/bitcoin_test_runner_20171218_125257/import-abort-rescan_635\n2017-12-18 03:53:21.588000 TestFramework (INFO): Creating blocks with transactions ...\n2017-12-18 03:53:21.592000 TestFramewor",https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-352329054,352329054,
kallewoof,2017-12-18T05:25:04Z,Pushed commit with fix in it. This still breaks on my end after running for awhile.,https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-352329321,352329321,
kallewoof,2017-12-21T01:20:20Z,"Connection reset by peer after a shortish while. Very curious.\n\n```\n2017-12-21 01:10:24.464000 TestFramework (INFO): Initializing test directory /var/folders/b8/znqr8hj918772gfmd875gzgdd3ypz1/T/bitcoin_test_runner_20171221_100356/import-abort-rescan_961\n2017-12-21 01:10:40.349000 TestFramework (INFO): Creating blocks with transactions ...\n2017-12-21 01:10:40.352000 TestFramework (INFO): ",https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-353230401,353230401,
laanwj,2018-03-07T18:59:25Z,"Closing for now, as this PR seems to be dormant, let me know when you want to pick it up again and I'll reopen.",https://github.com/bitcoin/bitcoin/pull/10367#issuecomment-371246210,371246210,
jnewbery,2017-08-14T17:14:27Z,nit: prefer imports to be in PEP-8 ordering (standard libraries first),https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133007116,133007116,test/functional/import-abort-rescan.py
jnewbery,2017-08-14T17:14:49Z,No need to override method if you're just calling into `super()`,https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133007202,133007202,test/functional/import-abort-rescan.py
jnewbery,2017-08-14T17:16:04Z,nit: if block should appear on the next line. Same for the `if xxxxx: break` lines below,https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133007555,133007555,test/functional/import-abort-rescan.py
jnewbery,2017-08-14T17:18:19Z,"nit: prefer `assert deadres, ""importthread did not die soon enough""` (so the error message is delivered to the user)",https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133008105,133008105,test/functional/import-abort-rescan.py
kallewoof,2017-08-15T02:33:11Z,"I put `decimal`, `threading`, and `time` imports at top. ",https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133106360,133106360,test/functional/import-abort-rescan.py
kallewoof,2017-08-15T02:34:03Z,Nice.. I didn't know you could do that.,https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133106438,133106438,test/functional/import-abort-rescan.py
MarcoFalke,2017-08-15T07:58:57Z,It seems you are not specifying the constructor (`__init__`). Thus 2 additional nodes are spun up and remain unused.,https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133135164,133135164,test/functional/import-abort-rescan.py
kallewoof,2017-08-15T08:21:53Z,Good point. Fixed.,https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133138904,133138904,test/functional/import-abort-rescan.py
jnewbery,2017-08-15T13:21:12Z,"nit: could change this to:\n\n```\nassert abortres, ""abortrescan call failed""\n```",https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133187270,133187270,test/functional/import-abort-rescan.py
kallewoof,2017-08-16T05:17:15Z,"Fixed, thanks!",https://github.com/bitcoin/bitcoin/pull/10367#discussion_r133360492,133360492,test/functional/import-abort-rescan.py
promag,2017-09-13T13:52:02Z,"Replace with\n```py\n    def set_test_params(self):\n        self.num_nodes = 2\n```",https://github.com/bitcoin/bitcoin/pull/10367#discussion_r138625410,138625410,test/functional/import-abort-rescan.py
promag,2017-09-13T13:53:14Z,"Change and remove comment:\n```py\nfrom time import sleep\n```\nThe same above.",https://github.com/bitcoin/bitcoin/pull/10367#discussion_r138625776,138625776,test/functional/import-abort-rescan.py
promag,2017-09-13T13:53:25Z,"Nit, missing period.",https://github.com/bitcoin/bitcoin/pull/10367#discussion_r138625829,138625829,test/functional/import-abort-rescan.py
promag,2017-09-13T13:54:15Z,"Nit, use unordered, ie, `- The abortrescan ... `.",https://github.com/bitcoin/bitcoin/pull/10367#discussion_r138626059,138626059,test/functional/import-abort-rescan.py
promag,2017-09-13T14:11:43Z,"@jnewbery wdyt about moving this to `util.py`, like `def generate_load(node, blocks, transactions):` or whatever?",https://github.com/bitcoin/bitcoin/pull/10367#discussion_r138631285,138631285,test/functional/import-abort-rescan.py
kallewoof,2017-09-19T02:51:50Z,"I'm not sure what the reason for this is. It is easier to refer to a point by number, e.g. ""this test is no longer checking the 3rd point mentioned in the comment"".",https://github.com/bitcoin/bitcoin/pull/10367#discussion_r139586768,139586768,test/functional/import-abort-rescan.py
jnewbery,2017-09-19T18:18:59Z,I don't think it makes sense to move code up into the `test_framework` directory unless it's being used by more than one test script. I don't see the need here (unless you think you can refactor other test scripts to use this and reduce LOC),https://github.com/bitcoin/bitcoin/pull/10367#discussion_r139774977,139774977,test/functional/import-abort-rescan.py
jnewbery,2017-09-19T18:36:10Z,invalid syntax. Should be `from time import sleep`,https://github.com/bitcoin/bitcoin/pull/10367#discussion_r139779292,139779292,test/functional/import-abort-rescan.py
maxgiraldo,2017-12-12T16:44:48Z,Would it make sense to take advantage of `mine_large_block` or is that overkill in this context? Might make this test more concise.,https://github.com/bitcoin/bitcoin/pull/10367#discussion_r156425151,156425151,test/functional/import-abort-rescan.py
maxgiraldo,2017-12-18T15:21:11Z,"The errno is actually 41; to avoid hardcoding the value, I would use `from errno import EPROTOTYPE` and then:\n```\nif e.errno == EPROTOTYPE:\n   ...\n```",https://github.com/bitcoin/bitcoin/pull/10367#discussion_r157512809,157512809,test/functional/test_framework/authproxy.py
kallewoof,2017-12-20T02:33:33Z,"Oops, good catch.",https://github.com/bitcoin/bitcoin/pull/10367#discussion_r157925706,157925706,test/functional/test_framework/authproxy.py
