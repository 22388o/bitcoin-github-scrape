[
  {
    "sha": "53c7c1a84397affa38826410573fd6d6659f1d27",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1M2M3YzFhODQzOTdhZmZhMzg4MjY0MTA1NzNmZDZkNjY1OWYxZDI3",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-04-18T07:53:34Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-12-18T05:54:58Z"
      },
      "message": "[test] Test abortrescan command.",
      "tree": {
        "sha": "5c25117483ef5e1c4898771ec7fc7a268695cea7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c25117483ef5e1c4898771ec7fc7a268695cea7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53c7c1a84397affa38826410573fd6d6659f1d27",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlo3WDIACgkQV692LbM1\nMyIfrxAAj2vsVW6FM0fZuwAlwbu9ZjTPp/xY3l+Dccb07QCr0BYpS7yPLng/s9Mm\n2uzCcaUN3msvyZTQmKCNoJRsLhD0jR5teuDgjzpUP8VPrBAKrHZVHhTYqtrFfQrp\nwLNYoJDEYD+RPpqhrXD8FKzTNJrDUr/bzmSzBvdo6zfSx1Qz6Rom26BwG1i4djP5\nrwSu/EPgmt2urAdzt9dTfRg8bVwXHLDea+fg0HF18FCjP76mvfSKLUQYt3fiSk5C\nAm4Yv+6wjzSFYMferCmEfEqV5WAnC63DP84ayVq8O+MTrXScZpQTpNVkm+HL8kj7\ndZNaPmcs6FiSWfwrxcaHCEdTAdFioCtV2wA5Q4aJEYvcJFtKNVdzIRVZ4gMvdUU7\nDWTMwRuBv31IZeTGqwwK0uTDm863pABOIdj0g+duZXA6+Z1/Dd3G2RLqQklDdsgD\nQ0wuHd3vwFqvksTEQFDD6/zWWyme/vdxkOpalMksJDpmkI2RMOCY1ekCAkICE+Bw\noZIMfexWDXQn1ENzlEUAn+LK5G/7cj97W+o/TopRbKuoC98gqO9u06/of0bUmTaC\nvHkGSdMUPg1Z4789w9ZUvf0ejKCz1qQyfybidgBdjJwjD/Jp3EwVy2U4iSVHhQp+\n+j2Dc4Av7C8OH0cRDZceuTyqfWqAqU+cuRMfLMDf37RiXW+vNzc=\n=ZEga\n-----END PGP SIGNATURE-----",
        "payload": "tree 5c25117483ef5e1c4898771ec7fc7a268695cea7\nparent 62fdf9b07087b80d2142799bdd2324f61483359d\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1492502014 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1513576498 +0900\n\n[test] Test abortrescan command.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53c7c1a84397affa38826410573fd6d6659f1d27",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/53c7c1a84397affa38826410573fd6d6659f1d27",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53c7c1a84397affa38826410573fd6d6659f1d27/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "62fdf9b07087b80d2142799bdd2324f61483359d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62fdf9b07087b80d2142799bdd2324f61483359d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/62fdf9b07087b80d2142799bdd2324f61483359d"
      }
    ],
    "stats": {
      "total": 75,
      "additions": 75,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f2ac7289cb1b04314a69b9c843d4912047b655b8",
        "filename": "test/functional/import-abort-rescan.py",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53c7c1a84397affa38826410573fd6d6659f1d27/test/functional/import-abort-rescan.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53c7c1a84397affa38826410573fd6d6659f1d27/test/functional/import-abort-rescan.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/import-abort-rescan.py?ref=53c7c1a84397affa38826410573fd6d6659f1d27",
        "patch": "@@ -0,0 +1,74 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test wallet import RPCs.\n+\n+Test rescan behavior of importprivkey when aborted. The test ensures that:\n+1. The abortrescan command indeed stops the rescan process.\n+2. Subsequent rescan catches the aborted address UTXO.\n+\"\"\"\n+\n+from decimal import Decimal\n+import threading # for bg importprivkey\n+from time import sleep\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (assert_equal, get_rpc_proxy)\n+\n+class ImportAbortRescanTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+\n+    def run_test(self):\n+        # Generate for BTC\n+        self.nodes[0].generate(300)\n+        self.log.info(\"Creating blocks with transactions ...\")\n+        # Make blocks with spam to cause rescan delay\n+        for i in range(200):\n+            if i % 50 == 0:\n+                self.log.info(\"... %2.f%%\", 100.0 / 200.0 * i)\n+            addr = self.nodes[0].getnewaddress()\n+            for j in range(10):\n+                self.nodes[0].sendtoaddress(addr, 0.1)\n+            self.nodes[0].generate(1)\n+        self.log.info(\"Sending to shared address ...\")\n+        addr = self.nodes[0].getnewaddress()\n+        privkey = self.nodes[0].dumpprivkey(addr)\n+        self.nodes[0].sendtoaddress(addr, 0.123)\n+        self.nodes[0].generate(10) # mature tx\n+        self.sync_all()\n+        balances = [n.getbalance() for n in self.nodes]\n+\n+        # Import this address in the background ...\n+        self.log.info(\"Importing address in background thread ...\")\n+        node1ref = get_rpc_proxy(self.nodes[1].url, 1, timeout=600)\n+        importthread = threading.Thread(target=node1ref.importprivkey, args=[privkey])\n+        importthread.start()\n+        # ... then abort rescan; try a bunch until abortres becomes true,\n+        # because we will start checking before above thread starts processing\n+        self.log.info(\"Attempting to abort scan ...\")\n+        for i in range(2000):\n+            sleep(0.001)\n+            abortres = self.nodes[1].abortrescan()\n+            if abortres:\n+                break\n+        assert abortres, \"failed to abort rescan within allotted time\"\n+        self.log.info(\"Waiting for import thread to die ...\")\n+        # import should die soon\n+        for i in range(10):\n+            sleep(0.1)\n+            deadres = not importthread.isAlive()\n+            if deadres:\n+                break\n+\n+        assert deadres, \"importthread did not die soon enough\"\n+        # Node 1 should not have gained any balance since the start\n+        assert_equal(self.nodes[1].getbalance(), balances[1])\n+\n+        # Import a different address and let it run\n+        self.nodes[1].importprivkey(self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress()))\n+        # Expect original privkey to now also be discovered and added to balance\n+        assert_equal(self.nodes[1].getbalance(), Decimal(\"0.123\") + Decimal(balances[1]))\n+\n+if __name__ == \"__main__\":\n+    ImportAbortRescanTest().main()"
      },
      {
        "sha": "11d073ef98cb8ce55ebed56fc553832f427995ba",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53c7c1a84397affa38826410573fd6d6659f1d27/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53c7c1a84397affa38826410573fd6d6659f1d27/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=53c7c1a84397affa38826410573fd6d6659f1d27",
        "patch": "@@ -141,6 +141,7 @@\n     'maxuploadtarget.py',\n     'mempool_packages.py',\n     'dbcrash.py',\n+    'import-abort-rescan.py',\n     # vv Tests less than 2m vv\n     'bip68-sequence.py',\n     'getblocktemplate_longpoll.py',"
      }
    ]
  },
  {
    "sha": "da91c46f621327879effbd5cb2d7bca04a0f20db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTkxYzQ2ZjYyMTMyNzg3OWVmZmJkNWNiMmQ3YmNhMDRhMGYyMGRi",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-12-18T05:24:12Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-12-18T05:54:59Z"
      },
      "message": "f'authproxy.py patch by jnewbery",
      "tree": {
        "sha": "a21864759d703d077adb28daa748782b81e3945f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a21864759d703d077adb28daa748782b81e3945f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da91c46f621327879effbd5cb2d7bca04a0f20db",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlo3WDMACgkQV692LbM1\nMyJH4hAAmwLOcMI50gXSHyIMIIWs7QPku+CrzLPlsWFSS/B4hlfZJ9YdjP7sEXkO\n28hj0J/ggHV7zj0/LWCmZ29GR7qv7gT9VRKlhzmrGVDwUkD7goElrzJPK8dgLp2v\nYVyJdW/72nFnz8Vzaa42aG7H8D8PA6L2EvHJYw0n1dlvP0ufFztYuhRUxQS7CpCc\n6LWNetXrNgYDO4bmKr0clkEceYs+SuSYlH0vBQumxcDbgKxph/jC/T0mmacq523d\n60C5L68GCCir8DTtPXhD6Tftxvpa4Fg7UnhA1TAjrs29e13BhvDFllNpQo8UbPQ7\nl3IClMtB75/kTY8m00AZZJkNrRKESNgcmnG5ztZ7PbgeWIP1k9702tXc2aIw8V8m\n/GUBx49qym9JHGjsmC/r/3rn9TlDeZ4o/v2m7GON7aBoy2F95vzus8cjZ3bIS5oH\nzAI51ap4ciMPTr1kKzAmpclVtDLLjNVLFI0HIWTk4j24daNUT6g1TtC30I43dL7i\nHH8TcHVCdc/dsQ3s+RAYDNW/XpyqpoYshk5S4+b4360s3pv/sKlFBrVb06XQD+RH\nd1RwXtZ6dSgCB0U2FkCRd/WJ7ScOkgbIBiW9NTgYHP9CW0uHx2P+a/1427xBTbhc\nWymoW+mWYE1cJxmUaxAA9wfAodp28XaQINvRAjxRvFJuxCFR4yI=\n=aS7H\n-----END PGP SIGNATURE-----",
        "payload": "tree a21864759d703d077adb28daa748782b81e3945f\nparent 53c7c1a84397affa38826410573fd6d6659f1d27\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1513574652 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1513576499 +0900\n\nf'authproxy.py patch by jnewbery\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da91c46f621327879effbd5cb2d7bca04a0f20db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da91c46f621327879effbd5cb2d7bca04a0f20db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da91c46f621327879effbd5cb2d7bca04a0f20db/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "53c7c1a84397affa38826410573fd6d6659f1d27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53c7c1a84397affa38826410573fd6d6659f1d27",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53c7c1a84397affa38826410573fd6d6659f1d27"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ee9d04e3efafcdca6f4b5885b3951fe6dedbda7c",
        "filename": "test/functional/test_framework/authproxy.py",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da91c46f621327879effbd5cb2d7bca04a0f20db/test/functional/test_framework/authproxy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da91c46f621327879effbd5cb2d7bca04a0f20db/test/functional/test_framework/authproxy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/authproxy.py?ref=da91c46f621327879effbd5cb2d7bca04a0f20db",
        "patch": "@@ -112,6 +112,16 @@ def _request(self, method, path, postdata):\n                 return self._get_response()\n             else:\n                 raise\n+        except OSError as e:\n+            if e.errno == 42:\n+                # EPROTOTYPE - OS X issue: a TCP send syscall while a socket is\n+                # not yet connected or is in the process of being torn down.\n+                print('errno 42 fix')\n+                self.__conn.close()\n+                self.__conn.request(method, path, postdata, headers)\n+                return self._get_response()\n+            else:\n+                raise\n         except (BrokenPipeError, ConnectionResetError):\n             # Python 3.5+ raises BrokenPipeError instead of BadStatusLine when the connection was reset\n             # ConnectionResetError happens on FreeBSD with Python 3.4"
      }
    ]
  },
  {
    "sha": "3ed3dd5844becaa1ed62e954b1b0a6c1b1df603d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZWQzZGQ1ODQ0YmVjYWExZWQ2MmU5NTRiMWIwYTZjMWIxZGY2MDNk",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-12-21T01:20:29Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-12-21T01:20:29Z"
      },
      "message": "f'use EPROTOTYPE",
      "tree": {
        "sha": "020d1c436e2533fce67568967a8ee95d32f128f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/020d1c436e2533fce67568967a8ee95d32f128f9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ed3dd5844becaa1ed62e954b1b0a6c1b1df603d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlo7DF0ACgkQV692LbM1\nMyI7OxAAhMX1DbYsGr+tPebpZEvxDxC0mL/vz1OPv9KoC79DIdLVZOtyAqNouBoy\nzD12mjrv27rJ3glImegI1FNdnuIIH9WGC0O8ZtnHcGzwZ2+fB3CE7hYmfCJMUckm\nLvacskOTRPMx6fchVZcniEsnCuGi6WEAKHuZAboHp5Y/zmOVo+ryCz6muWnelwQn\nsk7H9pkp3pKBR6hc8LfGZJUpIQjZcJ4zskMNpJwdGwoeTDc4U1tefNf8Aj6j2AaE\nbkkowqfuh2on7f4tjTSblZJcYEmr8dNL4P+XxN5ShqBmIlYLtXi4GdLKpW3VCRpx\nkxEuS5AnCIlYjx32+5nzLirTQ0bjbligWgJilyQ95iWrgQP1qCGv0RtJ99sO32zs\nIHPfq9wWpDQzSkBnl32MQoVspQgWhF2VF6ACMAwXuX5Ywwl994BCFOXGkaVqYT1u\n9/eLseFo7QN4ONZxQtqIGSlXqOyQ6oW9wbgUMwlyelGKx5MVqmHvkiXwVHvFbDiP\nrc9KJ2wmk+6yCOk1uqBMRfSEZvlcUSmpdcUZVbcvBVv2mpP6k4c7/ChZEFdza92b\ndkkLU+aE8obWzcCJw6cmWcMRejqEFOrTGlW4k9HfI7P1XYV+S+TbJRwC+DodsJwu\nub48wcK7EEAZITJZ9yc1IExaqGJ8/svEUnOKAHUhGvJuQS+tlNM=\n=BRRm\n-----END PGP SIGNATURE-----",
        "payload": "tree 020d1c436e2533fce67568967a8ee95d32f128f9\nparent da91c46f621327879effbd5cb2d7bca04a0f20db\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1513819229 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1513819229 +0900\n\nf'use EPROTOTYPE\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ed3dd5844becaa1ed62e954b1b0a6c1b1df603d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3ed3dd5844becaa1ed62e954b1b0a6c1b1df603d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ed3dd5844becaa1ed62e954b1b0a6c1b1df603d/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da91c46f621327879effbd5cb2d7bca04a0f20db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da91c46f621327879effbd5cb2d7bca04a0f20db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da91c46f621327879effbd5cb2d7bca04a0f20db"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "1d706eeb16600bab436c829707ff963fa2967203",
        "filename": "test/functional/test_framework/authproxy.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ed3dd5844becaa1ed62e954b1b0a6c1b1df603d/test/functional/test_framework/authproxy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ed3dd5844becaa1ed62e954b1b0a6c1b1df603d/test/functional/test_framework/authproxy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/authproxy.py?ref=3ed3dd5844becaa1ed62e954b1b0a6c1b1df603d",
        "patch": "@@ -41,6 +41,7 @@\n import socket\n import time\n import urllib.parse\n+from errno import EPROTOTYPE\n \n HTTP_TIMEOUT = 30\n USER_AGENT = \"AuthServiceProxy/0.1\"\n@@ -113,10 +114,10 @@ def _request(self, method, path, postdata):\n             else:\n                 raise\n         except OSError as e:\n-            if e.errno == 42:\n+            if e.errno == EPROTOTYPE:\n                 # EPROTOTYPE - OS X issue: a TCP send syscall while a socket is\n                 # not yet connected or is in the process of being torn down.\n-                print('errno 42 fix')\n+                print('errno EPROTOTYPE fix')\n                 self.__conn.close()\n                 self.__conn.request(method, path, postdata, headers)\n                 return self._get_response()"
      }
    ]
  }
]