mikehearn,2013-06-28T14:24:36Z,"I'm sure you'll hate this idea even more, but why not expose searchrawtransactions via P2P and advertise it in a service bit? ""fast import of a private key"" is a pretty common feature request for SPV wallets. I don't think it's particularly useful myself, but apparently other people do and they go and use blockchain.info currently.\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20191275,20191275,
sipa,2013-06-28T14:37:51Z,We've had this discussion. #2168 \n,https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20192016,20192016,
petertodd,2013-06-28T19:56:07Z,"There needs to be some way to find out how many entries are matched by a given address to allow blockexplorer apps's to skip to the most recent transactions and display them first if requested. Failing that, at least have Python-style index ranges to allow you to start from the last entry. Yes, address reuse sucks etc. etc. but it's a feature blockchain.info has and people will want it.\n\nI like ",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20210653,20210653,
sipa,2013-06-28T19:59:34Z,"@petertodd Thanks for catching those two comments.\n\nThere is a count and a skip argument, so you can paginate results (the database is queried each time, but the relevant transactions are only read from disk when actually requested).\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20210877,20210877,
petertodd,2013-06-28T20:01:33Z,I know you can paginate; I'm saying that you need to be able to paginate in reverse direction. (my understanding is the results are in order of confirmations right?)\n,https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20210973,20210973,
sipa,2013-06-28T20:07:56Z,"@petertodd They are in increasing position on disk, which for now corresponds to number of confirmations (except for transactions in sidechains - yes, those are returned too). I could just reverse the order, I guess.\n\nOne problem for the future is that when we'll have headers-first sync and parallel block downloading, block order on disk won't be necessarily consistent anymore with chain order. ",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20211322,20211322,
petertodd,2013-06-28T20:10:18Z,"re: sidechains, interesting! That should be documented...\n\nGah, that does add a decent amount of complexity, although users are going to see it as important that they can see their latest satoshidice crap. :( I don't have a great solution here, although I would lean towards storing height if that's what it takes.\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20211468,20211468,
sipa,2013-06-28T20:13:14Z,"I don't mind the complexity of adding that (though it probably adds several 100 MiB right now already), but I'm really against using an address index as a way to _track_ new payments (which is what this basically boils down to, right?) - you should just have a wallet that watches the chain for that...\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20211593,20211593,
petertodd,2013-06-28T20:15:54Z,"Well, maybe this index is actually slightly premature, and what we need more immediately is a way to search just the UTXO set?\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20211714,20211714,
petertodd,2013-06-28T20:17:03Z,"Or, think in terms of searchrawtransactions should have UTXO-only and full-chain modes?\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20211770,20211770,
sipa,2013-06-28T20:17:58Z,"@petertodd What I want it for is an easy local blockexplorer. And the nice thing about the block tree (and all its indexes) is that they're append only, which is easy implementation-wise.\n\nI agree an address index to the UTXO is useful too, and probably less controversial. It's not implemented however :)\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20211821,20211821,
sipa,2013-06-28T20:22:07Z,"@petertodd Also, searching the UTXO set by address would have a very different interface anyway, as it's a set of transaction outputs, not a set of transactions. It wouldn't make sense in the same RPC command, IMHO.\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20212066,20212066,
petertodd,2013-06-28T20:41:15Z,"@sipa Good point.\n\nWell, seems to me that for a blockexplorer simply being able to iterate forward and reverse should be enough for the UI, and at worse you can add the height index later when the order guarantee breaks. In that case:\n\n```\nsearchrawtransactions <address> [skip=0] [count=100] [verbose=1]\n\nReturn count transactions with <address> present in their scriptSig,\nskipping skip at ",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20213052,20213052,
luke-jr,2013-06-28T21:28:30Z,How about using a 64-bit hash of the full script instead?\n,https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20215463,20215463,
sipa,2013-06-28T21:31:04Z,"Use the source, Luke!\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20215589,20215589,
sipa,2013-06-29T09:22:12Z,"@luke-jr More seriously, every index entry adds around 10 bytes, and given the current amount of address reuse, those constitute the majority of the database. I've considered adding the entire script too, but that would mean a 50% increase (or more) because of that reason. Plus, if you know the full script, just pick the largest data push in it, and search for that.\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20226989,20226989,
sipa,2013-06-29T11:26:23Z,"@petertodd There is an alternative implementation possible, where we store (height, txoffset) for each index entry instead of (filenum, blockoffset, txoffset) - That's smaller too, and allows consistent ordering. The downside is that it can't support side-chain matches, as heights are not unique.\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20228344,20228344,
mikehearn,2013-06-29T16:07:54Z,"Yes, I know we had the discussion before. Once again, I'll remind us all that we don't have any real power in this. If people can't get the features they need in a decentralised way they'll create a centralised way instead, hence, blockchain.info API. The idea that people will say ""oh there's no P2P command to read a blockchain index, guess I won't write that app after all"" doesn't seem right to m",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20232409,20232409,
luke-jr,2013-06-29T16:38:03Z,@sipa I meant the 64-bit hash _instead_ of the current 64-bit key. Any address can be converted to a script and hashed just fine.\n,https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20232937,20232937,
johndillon,2013-06-29T16:39:21Z,@mikehearn If you can't offer a feature in a decentralized way with reasonably low resource consumption you should be happy that centralized services pop up and offer it instead.\n\nIf you want to be useful design an API that allows you to pay via micro-transactions those resources you are using by querying a node that has gone to the expense of using @sipa's code to maintain a blockchain index. I,https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20232958,20232958,
sipa,2013-06-29T16:43:52Z,@luke-jr That doesn't allow you to query pay-to-pubkeys given the corresponding address.\n,https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20233027,20233027,
sipa,2013-06-29T16:47:48Z,"@mikehearn I'll agree to have an address index exposed to the P2P network if it can be done in an authenticated way, like Alan Reiner's proposal for exposing an address-indexed committed merkle tree, and even then only for the UTXO set, and not the entire history.\n\nI'm completely opposed to providing any service on the P2P network that requires the entire history being available, except bootstra",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20233092,20233092,
johndillon,2013-06-29T16:48:52Z,"@sipa My preference would be to support the full (filenum, blockoffset, txoffset) set myself. Whatever the additional space used is it doesn't seem like a big deal once you've decided to go to the effort of creating the index in the first place. Hard-drive space is cheap.\n\nIncidentally, it does speak to how it would be useful to be able to iterate over every block stored, _including_ orphans, an",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20233111,20233111,
luke-jr,2013-06-29T16:50:26Z,@sipa Neither does the specialized form you're suggesting...?\n,https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20233141,20233141,
johndillon,2013-06-29T16:52:19Z,@luke-jr It does because every PUSHDATA > 20 bytes is indexed by first computing Hash160(data).\n\nEven individual multisigs in a bare OP_CHECKMULTISIG can be searched for as @petertodd pointed out.\n,https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20233169,20233169,
petertodd,2013-06-29T17:01:22Z,"@sipa I'll second @johndillon's thoughts on the full (filenum, blockoffset, txoffset) index.\n\nClever idea re: an orphan database... It'd be useful to have an index of all children for a given block too, but that can be a different pull-req; by that point we'll have a -all-blockchain-indexes flag...\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20233312,20233312,
luke-jr,2013-06-29T17:06:52Z,"Aha, missed that part.\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20233406,20233406,
sipa,2013-06-29T17:12:58Z,"@petertodd To have a consistent ordering, we'd need (filenum, blockoffset, txoffset, height) even.\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20233493,20233493,
gastonmorixe,2013-07-05T03:52:01Z,"This is awesome :+1:  please, merge it \n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20500374,20500374,
sipa,2013-07-13T23:05:14Z,"Rebased, and added a stable ordering (height-based) and negative offsets, to simplify backward pagination.\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20928364,20928364,
gastonmorixe,2013-07-15T10:19:37Z,"I agree, verbose is not working. \n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-20961418,20961418,
BitcoinPullTester,2013-07-20T06:06:37Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/5df5288225dce4bd4c6c72254736307c02a6cd78 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-21288888,21288888,
sipa,2013-07-20T13:06:17Z,Rebased and fixed the bugs reported by @petertodd.\n,https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-21293216,21293216,
BitcoinPullTester,2013-07-21T00:01:10Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/4790f3c823a33fae44b82ef7962372e38b1b0131 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-21302646,21302646,
sipa,2013-07-26T19:43:00Z,@petertodd Feel free to test the pageability now.\n,https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-21643695,21643695,
petertodd,2013-07-26T20:59:32Z,@sipa Will do after my litecoin audit's done.\n,https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-21647791,21647791,
petertodd,2013-07-31T05:27:27Z,"searchrawtransactions 1111111111111111111114oLvT2 doesn't work - looks like the issue is the first few lines in FindTransactionsByDestination() because the keyid is 0, which is correct in that case.\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-21841017,21841017,
petertodd,2013-07-31T05:39:23Z,"I'm having good luck with the code otherwise - matches results on blockchain.info, and non-standard oddities like searching for OP_RETURN data work fine. Also results returned appear to all be in correct order.\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-21841317,21841317,
petertodd,2013-07-31T06:17:11Z,"Getting some weird results with mwy5FX7MVgDutKYbXBxQG5q7EL6pmhHT58=Hash160('') on testnet, and the equivalent on mainnet. I'm seeing testnet txids a1f6a4ffcfd7bb4775790932aff1f82ac6a9b3b3e76c8faf8b11328e948afcca and 75f7d5e99912875e88d667afb48021b0b74916539c518618a8db4966661509df returned in the results - the former has a standard scriptPubKey, and a nonstandard scriptSig of ""1"", or hex ""51"". (IE ",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-21842344,21842344,
gastonmorixe,2013-07-31T06:41:22Z,"I just wanted to thank all of you for this implementation. Specially sipa who hates it and he did wrote it :) \n\nHere you can see my work in progress from my Rails App, I do all the parsing and get the balances. Thank you all.\n\nhttp://cl.ly/QNUL\n\nTon\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-21843182,21843182,
gavinandresen,2013-08-13T06:37:58Z,"ACK from me. I think we should pull; edge-case bugs with weird, non-standard transactions I don't care about.\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-22545830,22545830,
gmaxwell,2013-08-13T07:00:27Z,Only reason I see to delay the pull is that any fixes to address misindexing pointed out above may require a complete reindex.\n,https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-22546569,22546569,
petertodd,2013-08-13T09:05:38Z,I disagree given the reason why these tx's aren't working isn't understood yet - could be a symptom of a subtle bug.\n,https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-22551854,22551854,
jgarzik,2013-08-25T02:59:03Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-23220926,23220926,
ghost,2013-10-21T11:28:44Z,"Would we be able to see this merged? There's no outstanding issues in it (I've run it for literally months now), and there'd be considerable benefit in having this in the master. \n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-26709471,26709471,
sipa,2013-10-21T11:31:01Z,"Seems there is a not-understood problem at least (as reported by @petertodd), and I don't plan to work on this any time soon.\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-26709584,26709584,
sipa,2013-10-21T11:37:47Z,"In any case, I want to have watch-only wallet support before this, as it is a much more scalable solution for many problems that you would use an address-based index for. I'm closing this for now.\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-26709893,26709893,
ghost,2013-10-21T12:24:08Z,"This did however allow for some quite handy local block explorers. Between Abe and BlockExplorer's respective database messes, you're looking 100+ GB of external databases and literally weeks of CPU time. Those not being an option, I'm back forced to query Blockchain.info and Blockexplorer for my data; which is slow and somewhat demonstrates the links between the various addresses to a third party",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-26712372,26712372,
sipa,2013-10-21T12:28:12Z,"Yes, I understand - that was mostly the reason for writing it. If the choice is between people using centralized indexing services and being able to run their own, I certainly would encourage the latter. But on the other hand, if the choice is between people building infrastructure that relies on such indexes being available for wallet services (preventing pruning later on), I certainly would enco",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-26712590,26712590,
laanwj,2013-10-21T12:36:40Z,"@63 if you care a lot about this, why not pick it up yourself and try to resolve the remaining issue and submit a pull?\n",https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-26713080,26713080,
jmcorgan,2014-02-11T19:41:45Z,I've refreshed this branch to work with current master and have issue a new pull request #3652.\n,https://github.com/bitcoin/bitcoin/pull/2802#issuecomment-34796875,34796875,
petertodd,2013-07-15T09:33:27Z,"You're missing a >> here; setting fVerbose to false displays nothing.\n\nAlso, change fVerbose to be true/false? Seems to be what we're doing elsewhere.\n",https://github.com/bitcoin/bitcoin/pull/2802#discussion_r5186232,5186232,src/rpcrawtransaction.cpp
petertodd,2013-07-15T09:35:28Z,Should be params.size() > 4\n,https://github.com/bitcoin/bitcoin/pull/2802#discussion_r5186260,5186260,src/rpcrawtransaction.cpp
sipa,2013-07-15T10:24:28Z,"Indeed, a << is missing (it's serializing, not deserializing).\n\nFor fVerbose, I'm keeping consistency with getrawtransaction, which also uses 0/1. The default here is decoding though, as a human user will likely be more interested in a decoded version.\n",https://github.com/bitcoin/bitcoin/pull/2802#discussion_r5186909,5186909,src/rpcrawtransaction.cpp
sipa,2013-07-15T10:24:36Z,"Thanks, indeed.\n",https://github.com/bitcoin/bitcoin/pull/2802#discussion_r5186911,5186911,src/rpcrawtransaction.cpp
