[
  {
    "sha": "fcb42530da7657ccf312204ac58db8927902780b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmY2I0MjUzMGRhNzY1N2NjZjMxMjIwNGFjNThkYjg5Mjc5MDI3ODBi",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-07-11T08:40:19Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-07-11T09:46:08Z"
      },
      "message": "refactor: Optimize bech32::Encode\n\n* switch from std::string to using char[]\n* iterate over values and checksum separately rather than comining\n  them first\n\nThis results in a ~40% speed-up in calls to Encode()\n\nBefore:\n  #Benchmark, evals, iterations, total, min, max, median\n  Bech32Encode, 5, 800000, 5.98941, 1.46948e-06, 1.56082e-06, 1.49065e-06\n\nAfter:\n  #Benchmark, evals, iterations, total, min, max, median\n  Bech32Encode, 5, 800000, 3.60337, 8.82574e-07, 9.23948e-07, 8.93568e-07\n\nWith kallewoof",
      "tree": {
        "sha": "48267c104cda0d5428b034402abf65da47d12595",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48267c104cda0d5428b034402abf65da47d12595"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fcb42530da7657ccf312204ac58db8927902780b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbRdHgAAoJEG7l83hfeLNFoF0H/0jAWiL4wA1Zafb1QW8PoBzl\nIhsctOSgyxwqrfX8WorBYrK1lQQ/S5GJqzQKY63dLz+uTrv78zz3hl6utbC6aMDL\ne2UBcRurdfYr685oaYdtu7O6AqFJvXKeCnT+yBIZFGuYNk5UvupgqgMNIMKFMg2c\nCbjP7NP6rZWd+rtcX6oc51iScVoA0LDXHPbhKrqNgirUzE6R2QoQTUdwErwD7xST\njM+hcvaNEzVlE1ooh8XPzqWM0ulJvlDyktHVAjSqm5pjah7pjCC7YFor3GFvpSY2\nuzetOCgVmcQaDADH5T06LidtPFTNqKr7w7/mwQOj5UpEaA6gXHrUCOk0UU7Ibk8=\n=x8/0\n-----END PGP SIGNATURE-----",
        "payload": "tree 48267c104cda0d5428b034402abf65da47d12595\nparent acc68bc631998cb08708c8bec5ef4a93ba94a0e0\nauthor Ben Woosley <ben.woosley@gmail.com> 1531298419 -0400\ncommitter Ben Woosley <ben.woosley@gmail.com> 1531302368 -0400\n\nrefactor: Optimize bech32::Encode\n\n* switch from std::string to using char[]\n* iterate over values and checksum separately rather than comining\n  them first\n\nThis results in a ~40% speed-up in calls to Encode()\n\nBefore:\n  #Benchmark, evals, iterations, total, min, max, median\n  Bech32Encode, 5, 800000, 5.98941, 1.46948e-06, 1.56082e-06, 1.49065e-06\n\nAfter:\n  #Benchmark, evals, iterations, total, min, max, median\n  Bech32Encode, 5, 800000, 3.60337, 8.82574e-07, 9.23948e-07, 8.93568e-07\n\nWith kallewoof\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fcb42530da7657ccf312204ac58db8927902780b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fcb42530da7657ccf312204ac58db8927902780b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fcb42530da7657ccf312204ac58db8927902780b/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "acc68bc631998cb08708c8bec5ef4a93ba94a0e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/acc68bc631998cb08708c8bec5ef4a93ba94a0e0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/acc68bc631998cb08708c8bec5ef4a93ba94a0e0"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 21,
      "deletions": 7
    },
    "files": [
      {
        "sha": "ea82796319d03de9b91117345d0b11f0185a8d20",
        "filename": "src/bech32.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 6,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fcb42530da7657ccf312204ac58db8927902780b/src/bech32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fcb42530da7657ccf312204ac58db8927902780b/src/bech32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bech32.cpp?ref=fcb42530da7657ccf312204ac58db8927902780b",
        "patch": "@@ -4,6 +4,9 @@\n \n #include <bech32.h>\n \n+#include <cstring>\n+#include <stdexcept>\n+\n namespace\n {\n \n@@ -146,13 +149,20 @@ namespace bech32\n /** Encode a Bech32 string. */\n std::string Encode(const std::string& hrp, const data& values) {\n     data checksum = CreateChecksum(hrp, values);\n-    data combined = Cat(values, checksum);\n-    std::string ret = hrp + '1';\n-    ret.reserve(ret.size() + combined.size());\n-    for (auto c : combined) {\n-        ret += CHARSET[c];\n+    if (hrp.size() + 1 + values.size() + checksum.size() > 90) {\n+        throw std::length_error(\"Combined bech32 size would be greater than allowed by bip-173\");\n     }\n-    return ret;\n+    char ret[91];\n+    memcpy(ret, hrp.data(), hrp.size());\n+    char* curr = ret + hrp.size();\n+    *curr = '1';\n+    for (auto c : values) {\n+        *(++curr) = CHARSET[c];\n+    }\n+    for (auto c : checksum) {\n+        *(++curr) = CHARSET[c];\n+    }\n+    return std::string(ret, ++curr);\n }\n \n /** Decode a Bech32 string. */"
      },
      {
        "sha": "df1c46fa292d8361e33696ed1b60877744a03d2a",
        "filename": "src/bech32.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fcb42530da7657ccf312204ac58db8927902780b/src/bech32.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fcb42530da7657ccf312204ac58db8927902780b/src/bech32.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bech32.h?ref=fcb42530da7657ccf312204ac58db8927902780b",
        "patch": "@@ -19,7 +19,11 @@\n namespace bech32\n {\n \n-/** Encode a Bech32 string. Returns the empty string in case of failure. */\n+/**\n+ * Encode a Bech32 string.\n+ * @return a Bech32 string representing the inputs\n+ * @throws std::length_error if the result would exceed the allowed length of 90 chars\n+ */\n std::string Encode(const std::string& hrp, const std::vector<uint8_t>& values);\n \n /** Decode a Bech32 string. Returns (hrp, data). Empty hrp means failure. */"
      }
    ]
  }
]