ashleyholman,2013-08-19T13:33:58Z,"This is my first time doing a patch for bitcoin, so please scrutinise and tell me if I've done something wrong :)\n\nThanks\n",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-22871772,22871772,
luke-jr,2013-08-19T14:43:29Z,"NACK, this makes Bitcoin centralized.\n\nEdit: Nevermind, misread.\n",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-22876870,22876870,
sipa,2013-08-19T14:48:34Z,"Isn't there a rule already that prevents storing blocks before the last checkpoint?\n\nLuke: if the rule was ""Do not send blocks in a forked chain more than 2016 blocks behind the main chain"", would that also be 'centralized'?\n",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-22877260,22877260,
luke-jr,2013-08-19T14:55:59Z,"Nevermind, I misread this. Thought it was non-sending/storing pre-checkpoint blocks _even in_ the main chain.\n",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-22877843,22877843,
ashleyholman,2013-08-19T15:00:13Z,"There is no prevention to stop the storing of blocks prior to last checkpoint.  The closest thing is a check to see if the block's proof-of-work could possibly be valid given the time elapsed since last checkpoint, which allows for a worst case 4x dropoff in difficulty for every 2 weeks since the checkpoint.\n\n@luke-jr does this introduce any centralisation that's not already there?  See these li",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-22878172,22878172,
ashleyholman,2013-08-19T15:16:45Z,"I have done a test and confirmed that you can send a min difficulty block of height 1001 to a node who is on block 167000 and it will store it.  For a fully synced node, it looks like you would need to generate a block of difficulty ~68000, and they would accept it at height 1001 also, but I haven't generated a block that hard in order to test it.  In a couple of weeks, it should only require 1700",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-22879387,22879387,
ashleyholman,2013-08-19T15:19:01Z,"PS. another way to test this is to set your clock forward a few years, and then your client will happily store a min difficult block prior to checkpoints (if the block's timestamp is also in the future).\n",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-22879582,22879582,
sipa,2013-08-19T15:21:29Z,"Regarding storing blocks, that problem will disappear once we switch to headers-first syncing (where only blocks along the known best header chain are fetched anyway).\n\nI have no objection to not serving pre-checkpoint sidechain blocks, though. I prefer decreasing the reliance on checkpoints, but that would mean we need to come up with a criterion that will eventually limit how deep reorgs the n",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-22879755,22879755,
jgarzik,2013-08-19T15:28:30Z,+1 @sipa \n,https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-22880300,22880300,
ashleyholman,2013-08-19T15:54:03Z,"Something else that may be of relevance here:  currently a node does not need to first request a block in order to store it.  You can just connect to it and send a 'block' message and it will process it and store it as if it asked for it.  Likewise, in response to a getdata request, you can send a different block and it will process it and store it as per normal, providing it passes the checks.\n",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-22882230,22882230,
sipa,2013-08-19T18:22:26Z,"@ashleyholman It is relevant, and right now, that's perhaps unwanted (though in case of a freshly-mined block, it is even distributed that way). But again headers-first sync will solve that, as any block received that is not part of the known best chain, is just dropped.\n",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-22892973,22892973,
jgarzik,2013-08-25T02:36:12Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-23220699,23220699,
ashleyholman,2013-08-26T02:19:02Z,@sipa: patch now amended to use CBlockIndex::IsInMainChain()\n,https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-23240834,23240834,
ashleyholman,2013-09-15T16:35:41Z,@sipa anything else you need from me on this one?\n,https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-24474736,24474736,
sipa,2013-09-23T23:30:56Z,"I'd like to postpone this until after headers-first is merged, as:\n- The problem with storing blocks will be solved in a very natural way then already (by only fetching blocks we already know we want)\n- My current headers-first patch (#2964) removes GetLastCheckpoint, and I'd like to keep it that way; we should reduce relying on checkpoints to the extent possible. However, there's no need to use",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-24964031,24964031,
wtogami,2014-01-14T21:25:14Z,"@sipa  @laanwj \nIf headers first isn't going into 0.9, wouldn't this PR be a good idea?\n",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-32309002,32309002,
sipa,2014-01-14T21:33:38Z,"Sounds like a good idea; despite what github says, this needs rebasing. I've left some comments.\n",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-32309734,32309734,
wtogami,2014-01-17T13:31:13Z,@ashleyholman Are you still around?\n,https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-32605596,32605596,
jgarzik,2014-01-17T13:45:28Z,"+1, this remains interesting\n",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-32606552,32606552,
ashleyholman,2014-01-17T18:48:37Z,"I am still around, but I no longer have my dev / test environment that I used to make this patch.\n\nWhat needs to be done here - just to incorporate the feedback from sipa and provide a rebased patch?\n\nI might be able to do that.\n",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-32635027,32635027,
sipa,2014-01-17T18:53:22Z,"Yes, I'm fine with the changes here. It's just that the code is outdated by now...\n",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-32635642,32635642,
ashleyholman,2014-01-17T18:58:20Z,@sipa when is it needed by?  If you give me a few days I'll get my VM set up again and properly test the new patch.\n,https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-32636039,32636039,
sipa,2014-01-17T18:58:56Z,That's fine. Thanks!\n,https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-32636084,32636084,
ashleyholman,2014-01-20T00:25:19Z,Here is a new commit.  It is updated to contain the changes requested by @sipa including initialising the send variable as false.  This required adding 2 new else cases but I think it's still better like that.\n,https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-32727390,32727390,
ashleyholman,2014-01-20T00:32:17Z,"plus I tested it with the following tests:\nTest 1: Synced blockchain to height 1325.  Sent a difficulty-1 fingerprint block at height 1001.\nResult:  Both the patched and unpatched clients accepted and stored the block, and would send it upon request (since there is no last checkpoint)\nTest 2: Synced blockchain to height 28157 (past first checkpoint at 11111).  Sent a difficulty-1 block at heigh",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-32727537,32727537,
BitcoinPullTester,2014-01-20T00:55:24Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d8b4b49667f3eaf5ac16c218aaba2136ece907d8 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-32728123,32728123,
ashleyholman,2014-02-01T02:30:07Z,Hi.  What's happening with this?  Still not merged?\n,https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-33860882,33860882,
jgarzik,2014-02-01T02:32:24Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-33860938,33860938,
sipa,2014-02-01T10:43:16Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/2910#issuecomment-33868497,33868497,
sipa,2013-08-25T15:06:01Z,"Any reason to remove this comment?\nEDIT: nevermind, it just moved.\n",https://github.com/bitcoin/bitcoin/pull/2910#discussion_r5968568,5968568,src/main.cpp
sipa,2013-08-25T15:07:44Z,Use CBlockIndex::IsInMainChain() instead.\n,https://github.com/bitcoin/bitcoin/pull/2910#discussion_r5968571,5968571,src/main.cpp
sipa,2014-01-14T21:30:50Z,"Initialize as false, and drop the else case?\n",https://github.com/bitcoin/bitcoin/pull/2910#discussion_r8876947,8876947,src/main.cpp
sipa,2014-01-14T21:31:12Z,int nHeight = mi->second->nHeight;\n,https://github.com/bitcoin/bitcoin/pull/2910#discussion_r8876962,8876962,src/main.cpp
sipa,2014-01-14T21:31:54Z,"Use LogPrintf() now, printf() has been demagicified.\n",https://github.com/bitcoin/bitcoin/pull/2910#discussion_r8876986,8876986,src/main.cpp
sipa,2014-01-14T21:32:58Z,if (!chainActive.Contains(mi->second))\n,https://github.com/bitcoin/bitcoin/pull/2910#discussion_r8877035,8877035,src/main.cpp
