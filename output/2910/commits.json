[
  {
    "sha": "d8b4b49667f3eaf5ac16c218aaba2136ece907d8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOGI0YjQ5NjY3ZjNlYWY1YWMxNmMyMThhYWJhMjEzNmVjZTkwN2Q4",
    "commit": {
      "author": {
        "name": "Ashley Holman",
        "email": "dscvlt@gmail.com",
        "date": "2014-01-19T23:59:57Z"
      },
      "committer": {
        "name": "Ashley Holman",
        "email": "dscvlt@gmail.com",
        "date": "2014-01-20T00:15:38Z"
      },
      "message": "Don't store or send side-chain blocks lower than last checkpoint.",
      "tree": {
        "sha": "ae5c096e234543784629325f846ce7ef155e05eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae5c096e234543784629325f846ce7ef155e05eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d8b4b49667f3eaf5ac16c218aaba2136ece907d8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8b4b49667f3eaf5ac16c218aaba2136ece907d8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d8b4b49667f3eaf5ac16c218aaba2136ece907d8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8b4b49667f3eaf5ac16c218aaba2136ece907d8/comments",
    "author": {
      "login": "ashleyholman",
      "id": 549484,
      "node_id": "MDQ6VXNlcjU0OTQ4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashleyholman",
      "html_url": "https://github.com/ashleyholman",
      "followers_url": "https://api.github.com/users/ashleyholman/followers",
      "following_url": "https://api.github.com/users/ashleyholman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ashleyholman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
      "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
      "repos_url": "https://api.github.com/users/ashleyholman/repos",
      "events_url": "https://api.github.com/users/ashleyholman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ashleyholman",
      "id": 549484,
      "node_id": "MDQ6VXNlcjU0OTQ4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/549484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashleyholman",
      "html_url": "https://github.com/ashleyholman",
      "followers_url": "https://api.github.com/users/ashleyholman/followers",
      "following_url": "https://api.github.com/users/ashleyholman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ashleyholman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ashleyholman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ashleyholman/subscriptions",
      "organizations_url": "https://api.github.com/users/ashleyholman/orgs",
      "repos_url": "https://api.github.com/users/ashleyholman/repos",
      "events_url": "https://api.github.com/users/ashleyholman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ashleyholman/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dd7c1cf534b760e9da55c225d6bb05f2bdb8e2e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd7c1cf534b760e9da55c225d6bb05f2bdb8e2e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dd7c1cf534b760e9da55c225d6bb05f2bdb8e2e7"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 24,
      "deletions": 1
    },
    "files": [
      {
        "sha": "857ff5039221f8c82ed18be56a18261890a73dc8",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 1,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8b4b49667f3eaf5ac16c218aaba2136ece907d8/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8b4b49667f3eaf5ac16c218aaba2136ece907d8/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=d8b4b49667f3eaf5ac16c218aaba2136ece907d8",
        "patch": "@@ -2154,6 +2154,11 @@ bool AcceptBlock(CBlock& block, CValidationState& state, CDiskBlockPos* dbp)\n             return state.DoS(100, error(\"AcceptBlock() : rejected by checkpoint lock-in at %d\", nHeight),\n                              REJECT_CHECKPOINT, \"checkpoint mismatch\");\n \n+        // Don't accept any forks from the main chain prior to last checkpoint\n+        CBlockIndex* pcheckpoint = Checkpoints::GetLastCheckpoint(mapBlockIndex);\n+        if (pcheckpoint && nHeight < pcheckpoint->nHeight)\n+            return state.DoS(100, error(\"AcceptBlock() : forked chain older than last checkpoint (height %d)\", nHeight));\n+\n         // Reject block.nVersion=1 blocks when 95% (75% on testnet) of the network has upgraded:\n         if (block.nVersion < 2)\n         {\n@@ -3025,10 +3030,28 @@ void static ProcessGetData(CNode* pfrom)\n \n             if (inv.type == MSG_BLOCK || inv.type == MSG_FILTERED_BLOCK)\n             {\n-                // Send block from disk\n+                bool send = false;\n                 map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(inv.hash);\n                 if (mi != mapBlockIndex.end())\n                 {\n+                    // If the requested block is at a height below our last\n+                    // checkpoint, only serve it if it's in the checkpointed chain\n+                    int nHeight = mi->second->nHeight;\n+                    CBlockIndex* pcheckpoint = Checkpoints::GetLastCheckpoint(mapBlockIndex);\n+                    if (pcheckpoint && nHeight < pcheckpoint->nHeight) {\n+                       if (!chainActive.Contains(mi->second))\n+                       {\n+                         LogPrintf(\"ProcessGetData(): ignoring request for old block that isn't in the main chain\\n\");\n+                       } else {\n+                         send = true;\n+                       }\n+                    } else {\n+                      send = true;\n+                    }\n+                }\n+                if (send)\n+                {\n+                    // Send block from disk\n                     CBlock block;\n                     ReadBlockFromDisk(block, (*mi).second);\n                     if (inv.type == MSG_BLOCK)"
      }
    ]
  }
]