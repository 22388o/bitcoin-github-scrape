[
  {
    "sha": "79149466d9734fd5ca1232ea427063485e7fbb15",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OTE0OTQ2NmQ5NzM0ZmQ1Y2ExMjMyZWE0MjcwNjM0ODVlN2ZiYjE1",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-30T14:50:25Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-30T15:24:21Z"
      },
      "message": "build: Warn on tautological comparisons (Clang -Wtautological-constant-in-range-compare)",
      "tree": {
        "sha": "7e7636b0758c61ebd41efc4e58e20150c0b350da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e7636b0758c61ebd41efc4e58e20150c0b350da"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79149466d9734fd5ca1232ea427063485e7fbb15",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79149466d9734fd5ca1232ea427063485e7fbb15",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/79149466d9734fd5ca1232ea427063485e7fbb15",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79149466d9734fd5ca1232ea427063485e7fbb15/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "edd9d0781b96e71f88bd87b30dd10ad008b964a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edd9d0781b96e71f88bd87b30dd10ad008b964a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/edd9d0781b96e71f88bd87b30dd10ad008b964a5"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7100a3ffd9c844ee5e3a98752157bc76051f605f",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79149466d9734fd5ca1232ea427063485e7fbb15/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79149466d9734fd5ca1232ea427063485e7fbb15/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=79149466d9734fd5ca1232ea427063485e7fbb15",
        "patch": "@@ -338,6 +338,7 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wvla],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wswitch],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wswitch\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wformat-security],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wtautological-constant-in-range-compare],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wtautological-constant-in-range-compare\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wthread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wrange-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wredundant-decls],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wredundant-decls\"],,[[$CXXFLAG_WERROR]])"
      }
    ]
  },
  {
    "sha": "2b53af12080bdaa499ae745fd1ffbc9d822d92f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYjUzYWYxMjA4MGJkYWE0OTlhZTc0NWZkMWZmYmM5ZDgyMmQ5MmY1",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-30T13:24:08Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-30T16:19:33Z"
      },
      "message": "Use compile-time checking (static_assert) instead of run-time tautological comparisons",
      "tree": {
        "sha": "c5fb7161462233031e3d78751e2cdfef56a572bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c5fb7161462233031e3d78751e2cdfef56a572bf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b53af12080bdaa499ae745fd1ffbc9d822d92f5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b53af12080bdaa499ae745fd1ffbc9d822d92f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2b53af12080bdaa499ae745fd1ffbc9d822d92f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b53af12080bdaa499ae745fd1ffbc9d822d92f5/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "79149466d9734fd5ca1232ea427063485e7fbb15",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79149466d9734fd5ca1232ea427063485e7fbb15",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/79149466d9734fd5ca1232ea427063485e7fbb15"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 12,
      "deletions": 10
    },
    "files": [
      {
        "sha": "65dc9c6403a471ba47c6eba42a13151727f5db00",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b53af12080bdaa499ae745fd1ffbc9d822d92f5/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b53af12080bdaa499ae745fd1ffbc9d822d92f5/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=2b53af12080bdaa499ae745fd1ffbc9d822d92f5",
        "patch": "@@ -97,7 +97,8 @@ std::string ScriptToAsmStr(const CScript& script, const bool fAttemptSighashDeco\n             str += \"[error]\";\n             return str;\n         }\n-        if (0 <= opcode && opcode <= OP_PUSHDATA4) {\n+        static_assert(std::numeric_limits<decltype(opcode)>::min() >= 0, \"Assumption: 0 <= opcode\");\n+        if (opcode <= OP_PUSHDATA4) {\n             if (vch.size() <= static_cast<std::vector<unsigned char>::size_type>(4)) {\n                 str += strprintf(\"%d\", CScriptNum(vch, false).getint());\n             } else {"
      },
      {
        "sha": "1c67a030bdfbe31125354cbae8762fbc758a4e98",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b53af12080bdaa499ae745fd1ffbc9d822d92f5/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b53af12080bdaa499ae745fd1ffbc9d822d92f5/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=2b53af12080bdaa499ae745fd1ffbc9d822d92f5",
        "patch": "@@ -227,7 +227,8 @@ bool static CheckPubKeyEncoding(const valtype &vchPubKey, unsigned int flags, co\n \n bool static CheckMinimalPush(const valtype& data, opcodetype opcode) {\n     // Excludes OP_1NEGATE, OP_1-16 since they are by definition minimal\n-    assert(0 <= opcode && opcode <= OP_PUSHDATA4);\n+    static_assert(std::numeric_limits<decltype(opcode)>::min() >= 0, \"Assumption: 0 <= opcode\");\n+    assert(opcode <= OP_PUSHDATA4);\n     if (data.size() == 0) {\n         // Should have used OP_0.\n         return opcode == OP_0;\n@@ -340,7 +341,8 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n             if (opcode == OP_CODESEPARATOR && sigversion == SigVersion::BASE && (flags & SCRIPT_VERIFY_CONST_SCRIPTCODE))\n                 return set_error(serror, SCRIPT_ERR_OP_CODESEPARATOR);\n \n-            if (fExec && 0 <= opcode && opcode <= OP_PUSHDATA4) {\n+            static_assert(std::numeric_limits<decltype(opcode)>::min() >= 0, \"Assumption: 0 <= opcode\");\n+            if (fExec && opcode <= OP_PUSHDATA4) {\n                 if (fRequireMinimal && !CheckMinimalPush(vchPushValue, opcode)) {\n                     return set_error(serror, SCRIPT_ERR_MINIMALDATA);\n                 }"
      },
      {
        "sha": "6bbac43c338538043ccb2c9c29a689f1fee9f778",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b53af12080bdaa499ae745fd1ffbc9d822d92f5/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b53af12080bdaa499ae745fd1ffbc9d822d92f5/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=2b53af12080bdaa499ae745fd1ffbc9d822d92f5",
        "patch": "@@ -446,8 +446,7 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(opcodetype opcode)\n     {\n-        if (opcode < 0 || opcode > 0xff)\n-            throw std::runtime_error(\"CScript::operator<<(): invalid opcode\");\n+        static_assert(std::numeric_limits<decltype(opcode)>::min() >= 0 && std::numeric_limits<decltype(opcode)>::max() <= 0xff, \"Assumption: !(opcode < 0 || opcode > 0xff)\");\n         insert(end(), (unsigned char)opcode);\n         return *this;\n     }"
      },
      {
        "sha": "bb4d3e7e08ccb9b6da0c20b231044fbeda20cd1e",
        "filename": "src/util/strencodings.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b53af12080bdaa499ae745fd1ffbc9d822d92f5/src/util/strencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b53af12080bdaa499ae745fd1ffbc9d822d92f5/src/util/strencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.cpp?ref=2b53af12080bdaa499ae745fd1ffbc9d822d92f5",
        "patch": "@@ -300,9 +300,9 @@ bool ParseInt64(const std::string& str, int64_t *out)\n     if(out) *out = (int64_t)n;\n     // Note that strtoll returns a *long long int*, so even if strtol doesn't report an over/underflow\n     // we still have to check that the returned value is within the range of an *int64_t*.\n-    return endp && *endp == 0 && !errno &&\n-        n >= std::numeric_limits<int64_t>::min() &&\n-        n <= std::numeric_limits<int64_t>::max();\n+    static_assert(std::numeric_limits<decltype(n)>::min() >= std::numeric_limits<int64_t>::min(), \"Assumption: n >= std::numeric_limits<int64_t>::min()\");\n+    static_assert(std::numeric_limits<decltype(n)>::max() <= std::numeric_limits<int64_t>::max(), \"Assumption: n <= std::numeric_limits<int64_t>::max()\");\n+    return endp && *endp == 0 && !errno;\n }\n \n bool ParseUInt32(const std::string& str, uint32_t *out)\n@@ -334,8 +334,8 @@ bool ParseUInt64(const std::string& str, uint64_t *out)\n     if(out) *out = (uint64_t)n;\n     // Note that strtoull returns a *unsigned long long int*, so even if it doesn't report an over/underflow\n     // we still have to check that the returned value is within the range of an *uint64_t*.\n-    return endp && *endp == 0 && !errno &&\n-        n <= std::numeric_limits<uint64_t>::max();\n+    static_assert(std::numeric_limits<decltype(n)>::max() <= std::numeric_limits<uint64_t>::max(), \"Assumption: n <= std::numeric_limits<uint64_t>::max()\");\n+    return endp && *endp == 0 && !errno;\n }\n \n "
      }
    ]
  }
]