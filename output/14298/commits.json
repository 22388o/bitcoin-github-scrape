[
  {
    "sha": "30973e9844d9ed8f2932ad7088cae39c49f3ebb5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDk3M2U5ODQ0ZDllZDhmMjkzMmFkNzA4OGNhZTM5YzQ5ZjNlYmI1",
    "commit": {
      "author": {
        "name": "Antoine Le Calvez",
        "email": "antoine@alc.io",
        "date": "2018-09-23T13:12:42Z"
      },
      "committer": {
        "name": "Antoine Le Calvez",
        "email": "antoine@alc.io",
        "date": "2018-09-23T13:12:42Z"
      },
      "message": "[REST] improve performance for JSON calls\n\nJSON calls do not use the raw data generated for\nthe .bin and .hex calls. By moving the raw data\ncreation into the .bin and .hex switch branches,\nJSON calls become faster.",
      "tree": {
        "sha": "6d38844e3e29f16f27d2f3b4d01fe0c494e18ed2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d38844e3e29f16f27d2f3b4d01fe0c494e18ed2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30973e9844d9ed8f2932ad7088cae39c49f3ebb5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30973e9844d9ed8f2932ad7088cae39c49f3ebb5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/30973e9844d9ed8f2932ad7088cae39c49f3ebb5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30973e9844d9ed8f2932ad7088cae39c49f3ebb5/comments",
    "author": {
      "login": "alecalve",
      "id": 3832610,
      "node_id": "MDQ6VXNlcjM4MzI2MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3832610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alecalve",
      "html_url": "https://github.com/alecalve",
      "followers_url": "https://api.github.com/users/alecalve/followers",
      "following_url": "https://api.github.com/users/alecalve/following{/other_user}",
      "gists_url": "https://api.github.com/users/alecalve/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alecalve/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alecalve/subscriptions",
      "organizations_url": "https://api.github.com/users/alecalve/orgs",
      "repos_url": "https://api.github.com/users/alecalve/repos",
      "events_url": "https://api.github.com/users/alecalve/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alecalve/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "alecalve",
      "id": 3832610,
      "node_id": "MDQ6VXNlcjM4MzI2MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3832610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alecalve",
      "html_url": "https://github.com/alecalve",
      "followers_url": "https://api.github.com/users/alecalve/followers",
      "following_url": "https://api.github.com/users/alecalve/following{/other_user}",
      "gists_url": "https://api.github.com/users/alecalve/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alecalve/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alecalve/subscriptions",
      "organizations_url": "https://api.github.com/users/alecalve/orgs",
      "repos_url": "https://api.github.com/users/alecalve/repos",
      "events_url": "https://api.github.com/users/alecalve/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alecalve/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "920c090f63f4990bf0f3b3d1a6d3d8a8bcd14ba0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/920c090f63f4990bf0f3b3d1a6d3d8a8bcd14ba0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/920c090f63f4990bf0f3b3d1a6d3d8a8bcd14ba0"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 20,
      "deletions": 11
    },
    "files": [
      {
        "sha": "77928449921e7a0713b0f5f2133da0a1fb4fa70e",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 11,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30973e9844d9ed8f2932ad7088cae39c49f3ebb5/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30973e9844d9ed8f2932ad7088cae39c49f3ebb5/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=30973e9844d9ed8f2932ad7088cae39c49f3ebb5",
        "patch": "@@ -157,20 +157,25 @@ static bool rest_headers(HTTPRequest* req,\n         }\n     }\n \n-    CDataStream ssHeader(SER_NETWORK, PROTOCOL_VERSION);\n-    for (const CBlockIndex *pindex : headers) {\n-        ssHeader << pindex->GetBlockHeader();\n-    }\n-\n     switch (rf) {\n     case RetFormat::BINARY: {\n+        CDataStream ssHeader(SER_NETWORK, PROTOCOL_VERSION);\n+        for (const CBlockIndex *pindex : headers) {\n+            ssHeader << pindex->GetBlockHeader();\n+        }\n+\n         std::string binaryHeader = ssHeader.str();\n         req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n         req->WriteReply(HTTP_OK, binaryHeader);\n         return true;\n     }\n \n     case RetFormat::HEX: {\n+        CDataStream ssHeader(SER_NETWORK, PROTOCOL_VERSION);\n+        for (const CBlockIndex *pindex : headers) {\n+            ssHeader << pindex->GetBlockHeader();\n+        }\n+\n         std::string strHex = HexStr(ssHeader.begin(), ssHeader.end()) + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"text/plain\");\n         req->WriteReply(HTTP_OK, strHex);\n@@ -224,18 +229,19 @@ static bool rest_block(HTTPRequest* req,\n             return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n     }\n \n-    CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n-    ssBlock << block;\n-\n     switch (rf) {\n     case RetFormat::BINARY: {\n+        CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+        ssBlock << block;\n         std::string binaryBlock = ssBlock.str();\n         req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n         req->WriteReply(HTTP_OK, binaryBlock);\n         return true;\n     }\n \n     case RetFormat::HEX: {\n+        CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+        ssBlock << block;\n         std::string strHex = HexStr(ssBlock.begin(), ssBlock.end()) + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"text/plain\");\n         req->WriteReply(HTTP_OK, strHex);\n@@ -360,18 +366,21 @@ static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\n     if (!GetTransaction(hash, tx, Params().GetConsensus(), hashBlock, true))\n         return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n \n-    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n-    ssTx << tx;\n-\n     switch (rf) {\n     case RetFormat::BINARY: {\n+        CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+        ssTx << tx;\n+\n         std::string binaryTx = ssTx.str();\n         req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n         req->WriteReply(HTTP_OK, binaryTx);\n         return true;\n     }\n \n     case RetFormat::HEX: {\n+        CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+        ssTx << tx;\n+\n         std::string strHex = HexStr(ssTx.begin(), ssTx.end()) + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"text/plain\");\n         req->WriteReply(HTTP_OK, strHex);"
      }
    ]
  }
]