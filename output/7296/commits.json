[
  {
    "sha": "995b9f385b935e4e9b9fa46e82f642204cc85cba",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTViOWYzODViOTM1ZTRlOWI5ZmE0NmU4MmY2NDIyMDRjYzg1Y2Jh",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-01-05T18:10:19Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-01-05T18:10:19Z"
      },
      "message": "Always respect GetRequiredFee for wallet txs",
      "tree": {
        "sha": "16286b028619500855c74c624402503a0d7efe9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16286b028619500855c74c624402503a0d7efe9e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/995b9f385b935e4e9b9fa46e82f642204cc85cba",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/995b9f385b935e4e9b9fa46e82f642204cc85cba",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/995b9f385b935e4e9b9fa46e82f642204cc85cba",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/995b9f385b935e4e9b9fa46e82f642204cc85cba/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "605c17844ea32b6d237db6d83871164dc7d59dab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/605c17844ea32b6d237db6d83871164dc7d59dab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/605c17844ea32b6d237db6d83871164dc7d59dab"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 3,
      "deletions": 8
    },
    "files": [
      {
        "sha": "244bc37e766e8bcb24f2a31c4f12764489e550c6",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 8,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/995b9f385b935e4e9b9fa46e82f642204cc85cba/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/995b9f385b935e4e9b9fa46e82f642204cc85cba/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=995b9f385b935e4e9b9fa46e82f642204cc85cba",
        "patch": "@@ -2223,14 +2223,9 @@ CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarge\n     if (nFeeNeeded == 0) {\n         int estimateFoundTarget = nConfirmTarget;\n         nFeeNeeded = pool.estimateSmartFee(nConfirmTarget, &estimateFoundTarget).GetFee(nTxBytes);\n-        // ... unless we don't have enough mempool data for our desired target\n-        // so we make sure we're paying at least minTxFee\n-        if (nFeeNeeded == 0 || (unsigned int)estimateFoundTarget > nConfirmTarget)\n-            nFeeNeeded = std::max(nFeeNeeded, GetRequiredFee(nTxBytes));\n-    }\n-    // prevent user from paying a non-sense fee (like 1 satoshi): 0 < fee < minRelayFee\n-    if (nFeeNeeded < ::minRelayTxFee.GetFee(nTxBytes))\n-        nFeeNeeded = ::minRelayTxFee.GetFee(nTxBytes);\n+    }\n+    // prevent user from paying a fee below minRelayTxFee or minTxFee\n+    nFeeNeeded = std::max(nFeeNeeded, GetRequiredFee(nTxBytes));\n     // But always obey the maximum\n     if (nFeeNeeded > maxTxFee)\n         nFeeNeeded = maxTxFee;"
      }
    ]
  },
  {
    "sha": "e420a1b15e3be8c9d862173d9d554563405b34a7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNDIwYTFiMTVlM2JlOGM5ZDg2MjE3M2Q5ZDU1NDU2MzQwNWIzNGE3",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-01-05T18:11:34Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-01-05T18:13:23Z"
      },
      "message": "Add sane fallback for fee estimation\n\nAdd new commandline option \"-fallbackfee\" to use when fee estimation does not have sufficient data.",
      "tree": {
        "sha": "13af0732d92b76ab8279d9632b797f3ce3ec7aa9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/13af0732d92b76ab8279d9632b797f3ce3ec7aa9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e420a1b15e3be8c9d862173d9d554563405b34a7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e420a1b15e3be8c9d862173d9d554563405b34a7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e420a1b15e3be8c9d862173d9d554563405b34a7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e420a1b15e3be8c9d862173d9d554563405b34a7/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "995b9f385b935e4e9b9fa46e82f642204cc85cba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/995b9f385b935e4e9b9fa46e82f642204cc85cba",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/995b9f385b935e4e9b9fa46e82f642204cc85cba"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 27,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ba85a7972e521c4f665319a0ba17ba168137464e",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e420a1b15e3be8c9d862173d9d554563405b34a7/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e420a1b15e3be8c9d862173d9d554563405b34a7/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e420a1b15e3be8c9d862173d9d554563405b34a7",
        "patch": "@@ -393,6 +393,8 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageGroup(_(\"Wallet options:\"));\n     strUsage += HelpMessageOpt(\"-disablewallet\", _(\"Do not load the wallet and disable wallet RPC calls\"));\n     strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), DEFAULT_KEYPOOL_SIZE));\n+    strUsage += HelpMessageOpt(\"-fallbackfee=<amt>\", strprintf(_(\"A fee rate (in %s/kB) that will be used when fee estimation has insufficient data (default: %s)\"),\n+        CURRENCY_UNIT, FormatMoney(DEFAULT_FALLBACK_FEE)));\n     strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)\"),\n             CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MINFEE)));\n     strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in %s/kB) to add to transactions you send (default: %s)\"),\n@@ -947,6 +949,15 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         else\n             return InitError(strprintf(_(\"Invalid amount for -mintxfee=<amount>: '%s'\"), mapArgs[\"-mintxfee\"]));\n     }\n+    if (mapArgs.count(\"-fallbackfee\"))\n+    {\n+        CAmount nFeePerK = 0;\n+        if (!ParseMoney(mapArgs[\"-fallbackfee\"], nFeePerK))\n+            return InitError(strprintf(_(\"Invalid amount for -fallbackfee=<amount>: '%s'\"), mapArgs[\"-fallbackfee\"]));\n+        if (nFeePerK > nHighTransactionFeeWarning)\n+            InitWarning(_(\"-fallbackfee is set very high! This is the transaction fee you may pay when fee estimates are not available.\"));\n+        CWallet::fallbackFee = CFeeRate(nFeePerK);\n+    }\n     if (mapArgs.count(\"-paytxfee\"))\n     {\n         CAmount nFeePerK = 0;"
      },
      {
        "sha": "c834c3b56461828bd76a23ab2e339d5dab58985d",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e420a1b15e3be8c9d862173d9d554563405b34a7/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e420a1b15e3be8c9d862173d9d554563405b34a7/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=e420a1b15e3be8c9d862173d9d554563405b34a7",
        "patch": "@@ -640,13 +640,15 @@ void SendCoinsDialog::updateSmartFeeLabel()\n     CFeeRate feeRate = mempool.estimateSmartFee(nBlocksToConfirm, &estimateFoundAtBlocks);\n     if (feeRate <= CFeeRate(0)) // not enough data => minfee\n     {\n-        ui->labelSmartFee->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), CWallet::GetRequiredFee(1000)) + \"/kB\");\n+        ui->labelSmartFee->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(),\n+                                                                std::max(CWallet::fallbackFee.GetFeePerK(), CWallet::GetRequiredFee(1000))) + \"/kB\");\n         ui->labelSmartFee2->show(); // (Smart fee not initialized yet. This usually takes a few blocks...)\n         ui->labelFeeEstimation->setText(\"\");\n     }\n     else\n     {\n-        ui->labelSmartFee->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), feeRate.GetFeePerK()) + \"/kB\");\n+        ui->labelSmartFee->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(),\n+                                                                std::max(feeRate.GetFeePerK(), CWallet::GetRequiredFee(1000))) + \"/kB\");\n         ui->labelSmartFee2->hide();\n         ui->labelFeeEstimation->setText(tr(\"Estimated to begin confirmation within %n block(s).\", \"\", estimateFoundAtBlocks));\n     }"
      },
      {
        "sha": "581c688fc7775e8e39871a29c334c7b8bec6105d",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e420a1b15e3be8c9d862173d9d554563405b34a7/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e420a1b15e3be8c9d862173d9d554563405b34a7/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=e420a1b15e3be8c9d862173d9d554563405b34a7",
        "patch": "@@ -47,6 +47,12 @@ bool fSendFreeTransactions = DEFAULT_SEND_FREE_TRANSACTIONS;\n  * Override with -mintxfee\n  */\n CFeeRate CWallet::minTxFee = CFeeRate(DEFAULT_TRANSACTION_MINFEE);\n+/**\n+ * If fee estimation does not have enough data to provide estimates, use this fee instead.\n+ * Has no effect if not using fee estimation\n+ * Override with -fallbackfee\n+ */\n+CFeeRate CWallet::fallbackFee = CFeeRate(DEFAULT_FALLBACK_FEE);\n \n /** @defgroup mapWallet\n  *\n@@ -2223,6 +2229,9 @@ CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, unsigned int nConfirmTarge\n     if (nFeeNeeded == 0) {\n         int estimateFoundTarget = nConfirmTarget;\n         nFeeNeeded = pool.estimateSmartFee(nConfirmTarget, &estimateFoundTarget).GetFee(nTxBytes);\n+        // ... unless we don't have enough mempool data for estimatefee, then use fallbackFee\n+        if (nFeeNeeded == 0)\n+            nFeeNeeded = fallbackFee.GetFee(nTxBytes);\n     }\n     // prevent user from paying a fee below minRelayTxFee or minTxFee\n     nFeeNeeded = std::max(nFeeNeeded, GetRequiredFee(nTxBytes));"
      },
      {
        "sha": "ce57f4dae140c82f5b1d693fa103d66e8af344a7",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e420a1b15e3be8c9d862173d9d554563405b34a7/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e420a1b15e3be8c9d862173d9d554563405b34a7/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=e420a1b15e3be8c9d862173d9d554563405b34a7",
        "patch": "@@ -41,6 +41,8 @@ static const unsigned int DEFAULT_KEYPOOL_SIZE = 100;\n static const CAmount DEFAULT_TRANSACTION_FEE = 0;\n //! -paytxfee will warn if called with a higher fee than this amount (in satoshis) per KB\n static const CAmount nHighTransactionFeeWarning = 0.01 * COIN;\n+//! -fallbackfee default\n+static const CAmount DEFAULT_FALLBACK_FEE = 20000;\n //! -mintxfee default\n static const CAmount DEFAULT_TRANSACTION_MINFEE = 1000;\n //! -maxtxfee default\n@@ -666,6 +668,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool AddAccountingEntry(const CAccountingEntry&, CWalletDB & pwalletdb);\n \n     static CFeeRate minTxFee;\n+    static CFeeRate fallbackFee;\n     /**\n      * Estimate the minimum fee considering user set parameters\n      * and the required fee"
      }
    ]
  },
  {
    "sha": "bebe58b748532157958f9055e4517e280684006c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZWJlNThiNzQ4NTMyMTU3OTU4ZjkwNTVlNDUxN2UyODA2ODQwMDZj",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-01-05T22:47:04Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-01-05T22:47:04Z"
      },
      "message": "SQUASHME: Fix rpc tests that assumed fallback to minRelayTxFee",
      "tree": {
        "sha": "57fb93d9fd7a0fbd698c8d2e466a1c467d357035",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57fb93d9fd7a0fbd698c8d2e466a1c467d357035"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bebe58b748532157958f9055e4517e280684006c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bebe58b748532157958f9055e4517e280684006c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bebe58b748532157958f9055e4517e280684006c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bebe58b748532157958f9055e4517e280684006c/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e420a1b15e3be8c9d862173d9d554563405b34a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e420a1b15e3be8c9d862173d9d554563405b34a7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e420a1b15e3be8c9d862173d9d554563405b34a7"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "dda9166151b278698196accbaf3a5335d696b651",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bebe58b748532157958f9055e4517e280684006c/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bebe58b748532157958f9055e4517e280684006c/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=bebe58b748532157958f9055e4517e280684006c",
        "patch": "@@ -30,6 +30,11 @@ def run_test(self):\n         print \"Mining blocks...\"\n \n         min_relay_tx_fee = self.nodes[0].getnetworkinfo()['relayfee']\n+        # This test is not meant to test fee estimation and we'd like\n+        # to be sure all txs are sent at a consistent desired feerate\n+        for node in self.nodes:\n+            node.settxfee(min_relay_tx_fee)\n+\n         # if the fee's positive delta is higher than this value tests will fail,\n         # neg. delta always fail the tests.\n         # The size of the signature of every input may be at most 2 bytes larger\n@@ -447,6 +452,10 @@ def run_test(self):\n         wait_bitcoinds()\n \n         self.nodes = start_nodes(4, self.options.tmpdir)\n+        # This test is not meant to test fee estimation and we'd like\n+        # to be sure all txs are sent at a consistent desired feerate\n+        for node in self.nodes:\n+            node.settxfee(min_relay_tx_fee)\n \n         connect_nodes_bi(self.nodes,0,1)\n         connect_nodes_bi(self.nodes,1,2)"
      },
      {
        "sha": "a8cf6360ee1db622e99a4ba7b40fc65046557c3c",
        "filename": "qa/rpc-tests/mempool_limit.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bebe58b748532157958f9055e4517e280684006c/qa/rpc-tests/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bebe58b748532157958f9055e4517e280684006c/qa/rpc-tests/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_limit.py?ref=bebe58b748532157958f9055e4517e280684006c",
        "patch": "@@ -33,7 +33,9 @@ def run_test(self):\n         inputs = [{ \"txid\" : us0[\"txid\"], \"vout\" : us0[\"vout\"]}]\n         outputs = {self.nodes[0].getnewaddress() : 0.0001}\n         tx = self.nodes[0].createrawtransaction(inputs, outputs)\n+        self.nodes[0].settxfee(self.relayfee) # specifically fund this tx with low fee\n         txF = self.nodes[0].fundrawtransaction(tx)\n+        self.nodes[0].settxfee(0) # return to automatic fee selection\n         txFS = self.nodes[0].signrawtransaction(txF['hex'])\n         txid = self.nodes[0].sendrawtransaction(txFS['hex'])\n         self.nodes[0].lockunspent(True, [us0])"
      }
    ]
  }
]