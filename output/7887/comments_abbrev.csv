kazcw,2016-04-15T21:10:34Z,This makes CBlockReject dead code.\n,https://github.com/bitcoin/bitcoin/pull/7887#issuecomment-210647506,210647506,
jonasschnelli,2016-04-16T07:21:09Z,`p2p-fullblocktest.py` fails and would require update:\n`Block not in reject map: 13572f60d7b17134219196b3dba1c8f175782feac4e4e02d5bd957d7b946e0e6`\nhttps://travis-ci.org/bitcoin/bitcoin/jobs/123437467#L4534\n,https://github.com/bitcoin/bitcoin/pull/7887#issuecomment-210756429,210756429,
sipa,2016-04-16T08:53:19Z,This means no reject messages or misbehaviour/banning will trigger anymore for any block validation rules (after their header was accepted). Is that intentional?\n,https://github.com/bitcoin/bitcoin/pull/7887#issuecomment-210775716,210775716,
gavinandresen,2016-04-16T16:01:19Z,"@kazcw : Indeed, it does make CBlockReject dead code, I'll remove it, too.\n\n@jonasschnelli : I'll fix p2p-fullblocktest, don't know how I managed not to run it.\n\n@sipa : Rejection and DoS still happens in the else if (strCommand == NetMsgType::BLOCK ...) condition in ProcessMessages, if ProcessNewBlock returns an invalid validation state.\n\nI may be mis-reading the code (in which case there n",https://github.com/bitcoin/bitcoin/pull/7887#issuecomment-210846694,210846694,
sipa,2016-04-16T16:15:52Z,"@gavinandresen ProcessNewBlock's state only returns errors resulting from failure to add it to the block index (header invalid, checktransaction fails, system error when writing to disk, ...). Activation of the best block is treated as something happening in the background, and its errors are reported via InvalidBlockFound (specifically so errors don't get reported twice).\n",https://github.com/bitcoin/bitcoin/pull/7887#issuecomment-210848601,210848601,
gavinandresen,2016-04-18T15:15:06Z,Closing this for now-- but I put refactoring the way validation errors are reported from ProcessNewBlock on my mental TODO list (the goal I'm working towards is parallel validation of new blocks).\n,https://github.com/bitcoin/bitcoin/pull/7887#issuecomment-211425004,211425004,
