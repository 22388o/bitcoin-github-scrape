[
  {
    "sha": "9e9869d0fe9c5cb38273a557e28b1922356d0e11",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTk4NjlkMGZlOWM1Y2IzODI3M2E1NTdlMjhiMTkyMjM1NmQwZTEx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-11-10T20:29:23Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-11-14T14:59:22Z"
      },
      "message": "Resilvering",
      "tree": {
        "sha": "243d112805483871364e320f2bffc300f95f8829",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/243d112805483871364e320f2bffc300f95f8829"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e9869d0fe9c5cb38273a557e28b1922356d0e11",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e9869d0fe9c5cb38273a557e28b1922356d0e11",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e9869d0fe9c5cb38273a557e28b1922356d0e11",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e9869d0fe9c5cb38273a557e28b1922356d0e11/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6a729d2d82d9bc092ace2836f7492106003cbf0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6a729d2d82d9bc092ace2836f7492106003cbf0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e6a729d2d82d9bc092ace2836f7492106003cbf0"
      }
    ],
    "stats": {
      "total": 105,
      "additions": 104,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f083c77736fb6aa5bfdfe8d5d8939ec3f881c2f5",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 90,
        "deletions": 0,
        "changes": 90,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e9869d0fe9c5cb38273a557e28b1922356d0e11/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e9869d0fe9c5cb38273a557e28b1922356d0e11/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=9e9869d0fe9c5cb38273a557e28b1922356d0e11",
        "patch": "@@ -165,6 +165,90 @@ void static CloseDb(const string& strFile)\n     }\n }\n \n+bool Resilver(const string& strFile)\n+{\n+    while (!fShutdown)\n+    {\n+        CRITICAL_BLOCK(cs_db)\n+        {\n+            if (!mapFileUseCount.count(strFile) || mapFileUseCount[strFile] == 0)\n+            {\n+                // Flush log data to the dat file\n+                CloseDb(strFile);\n+                dbenv.txn_checkpoint(0, 0, 0);\n+                dbenv.lsn_reset(strFile.c_str(), 0);\n+                mapFileUseCount.erase(strFile);\n+\n+                bool fSuccess = true;\n+                printf(\"Resilvering %s...\\n\", strFile.c_str());\n+                string strFileRes = strFile + \".resilver\";\n+                CDB db(strFile.c_str(), \"r\");\n+                Db* pdbCopy = new Db(&dbenv, 0);\n+\n+                int ret = pdbCopy->open(NULL,                 // Txn pointer\n+                                        strFileRes.c_str(),   // Filename\n+                                        \"main\",    // Logical db name\n+                                        DB_BTREE,  // Database type\n+                                        DB_CREATE,    // Flags\n+                                        0);\n+                if (ret > 0)\n+                {\n+                    printf(\"Cannot create database file %s\\n\", strFileRes.c_str());\n+                    fSuccess = false;\n+                }\n+\n+                Dbc* pcursor = db.GetCursor();\n+                if (pcursor)\n+                    while (fSuccess)\n+                    {\n+                        CDataStream ssKey;\n+                        CDataStream ssValue;\n+                        int ret = db.ReadAtCursor(pcursor, ssKey, ssValue, DB_NEXT);\n+                        if (ret == DB_NOTFOUND)\n+                            break;\n+                        else if (ret != 0)\n+                        {\n+                            pcursor->close();\n+                            fSuccess = false;\n+                            break;\n+                        }\n+                        Dbt datKey(&ssKey[0], ssKey.size());\n+                        Dbt datValue(&ssValue[0], ssValue.size());\n+                        int ret2 = pdbCopy->put(NULL, &datKey, &datValue, DB_NOOVERWRITE);\n+                        if (ret2 > 0)\n+                            fSuccess = false;\n+                    }\n+                if (fSuccess)\n+                {\n+                    Db* pdb = mapDb[strFile];\n+                    if (pdb->close(0))\n+                        fSuccess = false;\n+                    if (pdbCopy->close(0))\n+                        fSuccess = false;\n+                    delete pdb;\n+                    delete pdbCopy;\n+                    mapDb[strFile] = NULL;\n+                }\n+                if (fSuccess)\n+                {\n+                    Db dbA(&dbenv, 0);\n+                    if (dbA.remove(strFile.c_str(), NULL, 0))\n+                        fSuccess = false;\n+                    Db dbB(&dbenv, 0);\n+                    if (dbB.rename(strFileRes.c_str(), NULL, strFile.c_str(), 0))\n+                        fSuccess = false;\n+                }\n+                if (!fSuccess)\n+                    printf(\"Resilvering of %s FAILED!\\n\", strFileRes.c_str());\n+                return fSuccess;\n+            }\n+        }\n+        Sleep(100);\n+    }\n+    return false;\n+}\n+\n+\n void DBFlush(bool fShutdown)\n {\n     // Flush log data to the actual data file\n@@ -656,6 +740,8 @@ int CWalletDB::LoadWallet(CWallet* pwallet)\n     pwallet->vchDefaultKey.clear();\n     int nFileVersion = 0;\n     vector<uint256> vWalletUpgrade;\n+    bool fIsResilvered = false;\n+    bool fIsEncrypted = false;\n \n     // Modify defaults\n #ifndef WIN32\n@@ -781,6 +867,7 @@ int CWalletDB::LoadWallet(CWallet* pwallet)\n                 ssValue >> vchPrivKey;\n                 if (!pwallet->LoadCryptedKey(vchPubKey, vchPrivKey))\n                     return DB_CORRUPT;\n+                fIsEncrypted = true;\n             }\n             else if (strType == \"defaultkey\")\n             {\n@@ -814,6 +901,7 @@ int CWalletDB::LoadWallet(CWallet* pwallet)\n                 if (strKey == \"fMinimizeOnClose\")   ssValue >> fMinimizeOnClose;\n                 if (strKey == \"fUseProxy\")          ssValue >> fUseProxy;\n                 if (strKey == \"addrProxy\")          ssValue >> addrProxy;\n+                if (strKey == \"fIsResilvered\")      ssValue >> fIsResilvered;\n                 if (fHaveUPnP && strKey == \"fUseUPnP\")           ssValue >> fUseUPnP;\n             }\n             else if (strType == \"minversion\")\n@@ -851,6 +939,8 @@ int CWalletDB::LoadWallet(CWallet* pwallet)\n         WriteVersion(VERSION);\n     }\n \n+    if (fIsEncrypted && !fIsResilvered)\n+        return DB_NEED_RESILVER;\n \n     return DB_LOAD_OK;\n }"
      },
      {
        "sha": "75748ace01b5b33b209be4ecb565d3e4e9786418",
        "filename": "src/db.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e9869d0fe9c5cb38273a557e28b1922356d0e11/src/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e9869d0fe9c5cb38273a557e28b1922356d0e11/src/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.h?ref=9e9869d0fe9c5cb38273a557e28b1922356d0e11",
        "patch": "@@ -32,7 +32,7 @@ extern DbEnv dbenv;\n extern void DBFlush(bool fShutdown);\n void ThreadFlushWalletDB(void* parg);\n bool BackupWallet(const CWallet& wallet, const std::string& strDest);\n-\n+extern bool Resilver(const std::string& strFile);\n \n \n \n@@ -257,6 +257,8 @@ class CDB\n     {\n         return Write(std::string(\"version\"), nVersion);\n     }\n+\n+    friend bool Resilver(const std::string&);\n };\n \n \n@@ -349,6 +351,7 @@ enum DBErrors\n     DB_CORRUPT,\n     DB_TOO_NEW,\n     DB_LOAD_FAIL,\n+    DB_NEED_RESILVER\n };\n \n class CWalletDB : public CDB"
      },
      {
        "sha": "3ed880f600e69ee906f3b96a60762d1bdde2a3a5",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e9869d0fe9c5cb38273a557e28b1922356d0e11/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e9869d0fe9c5cb38273a557e28b1922356d0e11/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=9e9869d0fe9c5cb38273a557e28b1922356d0e11",
        "patch": "@@ -189,6 +189,9 @@ bool CWallet::EncryptWallet(const string& strWalletPassphrase)\n         Lock();\n     }\n \n+    if (Resilver(strWalletFile))\n+        CWalletDB(strWalletFile, \"r+\").WriteSetting(\"fIsResilvered\", true);\n+\n     return true;\n }\n \n@@ -1142,6 +1145,13 @@ int CWallet::LoadWallet(bool& fFirstRunRet)\n         return false;\n     fFirstRunRet = false;\n     int nLoadWalletRet = CWalletDB(strWalletFile,\"cr+\").LoadWallet(this);\n+    if (nLoadWalletRet == DB_NEED_RESILVER)\n+    {\n+        if (Resilver(strWalletFile))\n+            CWalletDB(strWalletFile, \"r+\").WriteSetting(\"fIsResilvered\", true);\n+        nLoadWalletRet = DB_LOAD_OK;\n+    }\n+\n     if (nLoadWalletRet != DB_LOAD_OK)\n         return nLoadWalletRet;\n     fFirstRunRet = vchDefaultKey.empty();"
      }
    ]
  },
  {
    "sha": "d764d9161e548c7fbf835b70eb9d5c75caa28ff5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNzY0ZDkxNjFlNTQ4YzdmYmY4MzViNzBlYjlkNWM3NWNhYTI4ZmY1",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-11-11T02:12:46Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-11-15T14:30:16Z"
      },
      "message": "Obsolete keypool and make sure database removes log files on shutdown.",
      "tree": {
        "sha": "d94d3cf42bee7df401ac44a9c6c0181981a416b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d94d3cf42bee7df401ac44a9c6c0181981a416b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d764d9161e548c7fbf835b70eb9d5c75caa28ff5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d764d9161e548c7fbf835b70eb9d5c75caa28ff5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d764d9161e548c7fbf835b70eb9d5c75caa28ff5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d764d9161e548c7fbf835b70eb9d5c75caa28ff5/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e9869d0fe9c5cb38273a557e28b1922356d0e11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e9869d0fe9c5cb38273a557e28b1922356d0e11",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e9869d0fe9c5cb38273a557e28b1922356d0e11"
      }
    ],
    "stats": {
      "total": 125,
      "additions": 89,
      "deletions": 36
    },
    "files": [
      {
        "sha": "31ef725d793838aa26d019d6f1906c67d8702d8c",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d764d9161e548c7fbf835b70eb9d5c75caa28ff5/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d764d9161e548c7fbf835b70eb9d5c75caa28ff5/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=d764d9161e548c7fbf835b70eb9d5c75caa28ff5",
        "patch": "@@ -1557,6 +1557,11 @@ Value encryptwallet(const Array& params, bool fHelp)\n     if (pwalletMain->IsCrypted())\n         throw JSONRPCError(-15, \"Error: running with an encrypted wallet, but encryptwallet was called.\");\n \n+#ifdef QT_GUI\n+    // shutting down via RPC while the GUI is running does not work (yet):\n+    throw runtime_error(\"Not Yet Implemented: use GUI to encrypt wallet, not RPC command\");\n+#endif\n+\n     string strWalletPass;\n     strWalletPass.reserve(100);\n     mlock(&strWalletPass[0], strWalletPass.capacity());\n@@ -1576,7 +1581,11 @@ Value encryptwallet(const Array& params, bool fHelp)\n     fill(strWalletPass.begin(), strWalletPass.end(), '\\0');\n     munlock(&strWalletPass[0], strWalletPass.capacity());\n \n-    return Value::null;\n+    // BDB seems to have a bad habit of writing old data into\n+    // slack space in .dat files; that is bad if the old data is\n+    // unencrypted private keys.  So:\n+    CreateThread(Shutdown, NULL);\n+    return \"wallet encrypted; bitcoin server stopping, restart to run with encrypted wallet\";\n }\n \n "
      },
      {
        "sha": "f163ac949a5bc317e8ad84f2fb7ddd427ba856f1",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 19,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d764d9161e548c7fbf835b70eb9d5c75caa28ff5/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d764d9161e548c7fbf835b70eb9d5c75caa28ff5/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=d764d9161e548c7fbf835b70eb9d5c75caa28ff5",
        "patch": "@@ -28,6 +28,34 @@ DbEnv dbenv(0);\n static map<string, int> mapFileUseCount;\n static map<string, Db*> mapDb;\n \n+static void EnvShutdown(bool fRemoveLogFiles)\n+{\n+    if (!fDbEnvInit)\n+        return;\n+\n+    fDbEnvInit = false;\n+    dbenv.close(0);\n+    DbEnv(0).remove(GetDataDir().c_str(), 0);\n+\n+    if (fRemoveLogFiles)\n+    {\n+        filesystem::path datadir(GetDataDir());\n+        filesystem::directory_iterator it(datadir / \"database\");\n+        while (it != filesystem::directory_iterator())\n+        {\n+            const filesystem::path& p = it->path();\n+#if BOOST_FILESYSTEM_VERSION == 2\n+            std::string f = p.filename();\n+#else\n+            std::string f = p.filename().generic_string();\n+#endif\n+            if (f.find(\"log.\") == 0)\n+                filesystem::remove(p);\n+            ++it;\n+        }\n+    }\n+}\n+\n class CDBInit\n {\n public:\n@@ -36,11 +64,7 @@ class CDBInit\n     }\n     ~CDBInit()\n     {\n-        if (fDbEnvInit)\n-        {\n-            dbenv.close(0);\n-            fDbEnvInit = false;\n-        }\n+        EnvShutdown(false);\n     }\n }\n instance_of_cdbinit;\n@@ -165,7 +189,7 @@ void static CloseDb(const string& strFile)\n     }\n }\n \n-bool Resilver(const string& strFile)\n+bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n {\n     while (!fShutdown)\n     {\n@@ -180,8 +204,8 @@ bool Resilver(const string& strFile)\n                 mapFileUseCount.erase(strFile);\n \n                 bool fSuccess = true;\n-                printf(\"Resilvering %s...\\n\", strFile.c_str());\n-                string strFileRes = strFile + \".resilver\";\n+                printf(\"Rewriting %s...\\n\", strFile.c_str());\n+                string strFileRes = strFile + \".rewrite\";\n                 CDB db(strFile.c_str(), \"r\");\n                 Db* pdbCopy = new Db(&dbenv, 0);\n \n@@ -212,6 +236,15 @@ bool Resilver(const string& strFile)\n                             fSuccess = false;\n                             break;\n                         }\n+                        if (pszSkip &&\n+                            strncmp(&ssKey[0], pszSkip, std::min(ssKey.size(), strlen(pszSkip))) == 0)\n+                            continue;\n+                        if (strncmp(&ssKey[0], \"\\x07version\", 8) == 0)\n+                        {\n+                            // Update version:\n+                            ssValue.clear();\n+                            ssValue << VERSION;\n+                        }\n                         Dbt datKey(&ssKey[0], ssKey.size());\n                         Dbt datValue(&ssValue[0], ssValue.size());\n                         int ret2 = pdbCopy->put(NULL, &datKey, &datValue, DB_NOOVERWRITE);\n@@ -239,7 +272,7 @@ bool Resilver(const string& strFile)\n                         fSuccess = false;\n                 }\n                 if (!fSuccess)\n-                    printf(\"Resilvering of %s FAILED!\\n\", strFileRes.c_str());\n+                    printf(\"Rewriting of %s FAILED!\\n\", strFileRes.c_str());\n                 return fSuccess;\n             }\n         }\n@@ -249,7 +282,7 @@ bool Resilver(const string& strFile)\n }\n \n \n-void DBFlush(bool fShutdown)\n+void DBFlush(bool fShutdown, bool fRemoveLogFiles)\n {\n     // Flush log data to the actual data file\n     //  on all files that are not in use\n@@ -280,9 +313,10 @@ void DBFlush(bool fShutdown)\n         {\n             char** listp;\n             if (mapFileUseCount.empty())\n+            {\n                 dbenv.log_archive(&listp, DB_ARCH_REMOVE);\n-            dbenv.close(0);\n-            fDbEnvInit = false;\n+                EnvShutdown(fRemoveLogFiles);\n+            }\n         }\n     }\n }\n@@ -740,7 +774,6 @@ int CWalletDB::LoadWallet(CWallet* pwallet)\n     pwallet->vchDefaultKey.clear();\n     int nFileVersion = 0;\n     vector<uint256> vWalletUpgrade;\n-    bool fIsResilvered = false;\n     bool fIsEncrypted = false;\n \n     // Modify defaults\n@@ -901,7 +934,6 @@ int CWalletDB::LoadWallet(CWallet* pwallet)\n                 if (strKey == \"fMinimizeOnClose\")   ssValue >> fMinimizeOnClose;\n                 if (strKey == \"fUseProxy\")          ssValue >> fUseProxy;\n                 if (strKey == \"addrProxy\")          ssValue >> addrProxy;\n-                if (strKey == \"fIsResilvered\")      ssValue >> fIsResilvered;\n                 if (fHaveUPnP && strKey == \"fUseUPnP\")           ssValue >> fUseUPnP;\n             }\n             else if (strType == \"minversion\")\n@@ -929,8 +961,11 @@ int CWalletDB::LoadWallet(CWallet* pwallet)\n         printf(\"fUseUPnP = %d\\n\", fUseUPnP);\n \n \n-    // Upgrade\n-    if (nFileVersion < VERSION)\n+    // Rewrite encrypted wallets of versions 0.4.0 and 0.5.0rc:\n+    if (fIsEncrypted && (nFileVersion == 40000 || nFileVersion == 50000))\n+        return DB_NEED_REWRITE;\n+\n+    if (nFileVersion < VERSION) // Update\n     {\n         // Get rid of old debug.log file in current directory\n         if (nFileVersion <= 105 && !pszSetDataDir[0])\n@@ -939,9 +974,6 @@ int CWalletDB::LoadWallet(CWallet* pwallet)\n         WriteVersion(VERSION);\n     }\n \n-    if (fIsEncrypted && !fIsResilvered)\n-        return DB_NEED_RESILVER;\n-\n     return DB_LOAD_OK;\n }\n "
      },
      {
        "sha": "98af4be9a0e0950c4697c9787e734628155b19b4",
        "filename": "src/db.h",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d764d9161e548c7fbf835b70eb9d5c75caa28ff5/src/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d764d9161e548c7fbf835b70eb9d5c75caa28ff5/src/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.h?ref=d764d9161e548c7fbf835b70eb9d5c75caa28ff5",
        "patch": "@@ -29,10 +29,9 @@ extern unsigned int nWalletDBUpdated;\n extern DbEnv dbenv;\n \n \n-extern void DBFlush(bool fShutdown);\n+extern void DBFlush(bool fShutdown, bool fRemoveLogFiles);\n void ThreadFlushWalletDB(void* parg);\n bool BackupWallet(const CWallet& wallet, const std::string& strDest);\n-extern bool Resilver(const std::string& strFile);\n \n \n \n@@ -258,7 +257,7 @@ class CDB\n         return Write(std::string(\"version\"), nVersion);\n     }\n \n-    friend bool Resilver(const std::string&);\n+    bool static Rewrite(const std::string& strFile, const char* pszSkip = NULL);\n };\n \n \n@@ -351,7 +350,7 @@ enum DBErrors\n     DB_CORRUPT,\n     DB_TOO_NEW,\n     DB_LOAD_FAIL,\n-    DB_NEED_RESILVER\n+    DB_NEED_REWRITE\n };\n \n class CWalletDB : public CDB"
      },
      {
        "sha": "c91c098e03a22413b321ed5d82b915f76688e385",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d764d9161e548c7fbf835b70eb9d5c75caa28ff5/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d764d9161e548c7fbf835b70eb9d5c75caa28ff5/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d764d9161e548c7fbf835b70eb9d5c75caa28ff5",
        "patch": "@@ -44,8 +44,8 @@ void Shutdown(void* parg)\n {\n     static CCriticalSection cs_Shutdown;\n     static bool fTaken;\n-    bool fFirstThread;\n-    CRITICAL_BLOCK(cs_Shutdown)\n+    bool fFirstThread = false;\n+    TRY_CRITICAL_BLOCK(cs_Shutdown)\n     {\n         fFirstThread = !fTaken;\n         fTaken = true;\n@@ -55,9 +55,9 @@ void Shutdown(void* parg)\n     {\n         fShutdown = true;\n         nTransactionsUpdated++;\n-        DBFlush(false);\n+        DBFlush(false, false);\n         StopNode();\n-        DBFlush(true);\n+        DBFlush(true, true);\n         boost::filesystem::remove(GetPidFile());\n         UnregisterWallet(pwalletMain);\n         delete pwalletMain;\n@@ -362,6 +362,12 @@ bool AppInit2(int argc, char* argv[])\n             strErrors += _(\"Error loading wallet.dat: Wallet corrupted      \\n\");\n         else if (nLoadWalletRet == DB_TOO_NEW)\n             strErrors += _(\"Error loading wallet.dat: Wallet requires newer version of Bitcoin      \\n\");\n+        else if (nLoadWalletRet == DB_NEED_REWRITE)\n+        {\n+            strErrors += _(\"Wallet needed to be rewritten: restart Bitcoin to complete    \\n\");\n+            wxMessageBox(strErrors, \"Bitcoin\", wxOK | wxICON_ERROR);\n+            return false;\n+        }\n         else\n             strErrors += _(\"Error loading wallet.dat      \\n\");\n     }"
      },
      {
        "sha": "53867e939ad768474792798a1ebc6e025b264a3c",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d764d9161e548c7fbf835b70eb9d5c75caa28ff5/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d764d9161e548c7fbf835b70eb9d5c75caa28ff5/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=d764d9161e548c7fbf835b70eb9d5c75caa28ff5",
        "patch": "@@ -60,7 +60,7 @@ class CDataStream;\n class CAutoFile;\n static const unsigned int MAX_SIZE = 0x02000000;\n \n-static const int VERSION = 50000;\n+static const int VERSION = 50001;\n static const char* pszSubVer = \"\";\n static const bool VERSION_IS_BETA = true;\n "
      },
      {
        "sha": "e3ca7d297d908c0d37205fcef3fbed0392ab41b5",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 7,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d764d9161e548c7fbf835b70eb9d5c75caa28ff5/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d764d9161e548c7fbf835b70eb9d5c75caa28ff5/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=d764d9161e548c7fbf835b70eb9d5c75caa28ff5",
        "patch": "@@ -187,10 +187,12 @@ bool CWallet::EncryptWallet(const string& strWalletPassphrase)\n         }\n \n         Lock();\n-    }\n \n-    if (Resilver(strWalletFile))\n-        CWalletDB(strWalletFile, \"r+\").WriteSetting(\"fIsResilvered\", true);\n+        // Need to completely rewrite the wallet file; if we don't, bdb might keep\n+        // bits of the unencrypted private key in slack space in the database file.\n+        setKeyPool.clear();\n+        CDB::Rewrite(strWalletFile, \"\\x04pool\");\n+    }\n \n     return true;\n }\n@@ -1145,11 +1147,16 @@ int CWallet::LoadWallet(bool& fFirstRunRet)\n         return false;\n     fFirstRunRet = false;\n     int nLoadWalletRet = CWalletDB(strWalletFile,\"cr+\").LoadWallet(this);\n-    if (nLoadWalletRet == DB_NEED_RESILVER)\n+    if (nLoadWalletRet == DB_NEED_REWRITE)\n     {\n-        if (Resilver(strWalletFile))\n-            CWalletDB(strWalletFile, \"r+\").WriteSetting(\"fIsResilvered\", true);\n-        nLoadWalletRet = DB_LOAD_OK;\n+        if (CDB::Rewrite(strWalletFile, \"\\x04pool\"))\n+        {\n+            setKeyPool.clear();\n+            // Note: can't top-up keypool here, because wallet is locked.\n+            // User will be prompted to unlock wallet the next operation\n+            // the requires a new key.\n+        }\n+        nLoadWalletRet = DB_NEED_REWRITE;\n     }\n \n     if (nLoadWalletRet != DB_LOAD_OK)"
      }
    ]
  },
  {
    "sha": "4585f7e2c1ee7e090dc0cb59cf1ff82139393818",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NTg1ZjdlMmMxZWU3ZTA5MGRjMGNiNTljZjFmZjgyMTM5MzkzODE4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2011-11-11T21:20:57Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2011-11-15T14:30:16Z"
      },
      "message": "add message about restarting bitcoin after encrypting wallet succesfully",
      "tree": {
        "sha": "81162a3112a97cc78cf4cca19339509b0b8d12ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/81162a3112a97cc78cf4cca19339509b0b8d12ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4585f7e2c1ee7e090dc0cb59cf1ff82139393818",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4585f7e2c1ee7e090dc0cb59cf1ff82139393818",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4585f7e2c1ee7e090dc0cb59cf1ff82139393818",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4585f7e2c1ee7e090dc0cb59cf1ff82139393818/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d764d9161e548c7fbf835b70eb9d5c75caa28ff5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d764d9161e548c7fbf835b70eb9d5c75caa28ff5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d764d9161e548c7fbf835b70eb9d5c75caa28ff5"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a574ef925b07975e30e8855c4035e9e76d5a6207",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4585f7e2c1ee7e090dc0cb59cf1ff82139393818/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4585f7e2c1ee7e090dc0cb59cf1ff82139393818/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=4585f7e2c1ee7e090dc0cb59cf1ff82139393818",
        "patch": "@@ -101,7 +101,8 @@ void AskPassphraseDialog::accept()\n                 if(model->setWalletEncrypted(true, newpass1))\n                 {\n                     QMessageBox::warning(this, tr(\"Wallet encrypted\"),\n-                                         tr(\"Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.\"));\n+                                         tr(\"Bitcoin will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.\"));\n+                    QApplication::quit();\n                 }\n                 else\n                 {"
      }
    ]
  }
]