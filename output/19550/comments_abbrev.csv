DrahtBot,2020-07-19 03:50:38,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19528 (rpc: Assert that RPCArg names are equal to CRPCCommand ones (misc) by MarcoFalke)\n* #16365 (Log RPC parameters (a",https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-660581791,660581791,
theStack,2020-07-19 15:42:30,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-660665534,660665534,
fjahr,2020-07-19 19:19:36,"Thanks for the reviews, I should have addressed all the comments:\n- Now returning an object with the index names as keys (names are not enforced to be unique by the code at the moment I think but the names are used to distinguish the indices in the logs so they should be unique).\n- Cherry-picked the commit that makes `wait_until` part of the TestFramework and used it\n- Used new RPC construct",https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-660694360,660694360,
laanwj,2020-07-22 20:38:22,"Tested ACK f301c86b77f027f350e646e19afe1d95a46bc24c\n(tested with and without `-txindex` on regtest)",https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-662683981,662683981,
jonasschnelli,2020-07-25 13:53:13,"I think this is a helpful addition for connecting applications.\nCode Review utACK f301c86b77f027f350e646e19afe1d95a46bc24c.",https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-663858023,663858023,
jonatack,2020-07-25 16:19:49,The first commit is already merged in master. The change was embedded into commit 12410b1feb80189061eb4a2b43421e53cbb758a8. Reviewing the main commit now.,https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-663873221,663873221,
fjahr,2020-07-25 17:52:21,Added const usage and research notes. Dropped first commit and rebased on master.,https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-663882778,663882778,
fjahr,2020-07-25 19:23:17,Also fixed initializations are proposed by @jonatack . I am leaving the indentation as is since it is consistent with #19528 and the suggested change from clang-format seem pretty different from our general formatting for RPCs so far.,https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-663891565,663891565,
jonatack,2020-07-25 19:52:47,"Code review re-ACK 28b4cbfa5a5 per `git diff 3785cfd 28b4cbf`\n\nThanks, and sorry about that; I'm not sure the default initialization is useful in this case and in non-critical code, though I guess it can't hurt. When I saw [this catch today](https://github.com/bitcoin/bitcoin/pull/19534#discussion_r460407616) that I had missed in my own review, I resolved to reinforce my thinking about this.",https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-663894459,663894459,
fjahr,2020-07-26 09:56:16,Addressed review comments by @MarcoFalke ,https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-663967685,663967685,
promag,2020-07-26 10:12:36,"Code review ACK.\n\nFeel free to squash commits.\n\nI'd suggest to rename this RPC, but its probably too late. I was thinking `getindexstatus [index]`, with optional `index` parameter - if null/omitted returns all indices.",https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-663969154,663969154,
MarcoFalke,2020-07-26 10:26:33,ACK 8094e211d9af2bbe16d4de865aca5268bbc0f0f1,https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-663970509,663970509,
jonatack,2020-07-26 10:54:01,"> I was thinking `getindexstatus [index]`, with optional `index` parameter - if null/omitted returns all indices.\n\nOr `getindexinfo`.\n\nPer `bitcoin-cli help | grep ""info\|list""`, ""list"" RPCs seem to deal with user-side financial data, and ""info"" RPCs are more for technical-side settings and might make more sense here.\n\nRPCs are hard to change once released, so it seems a good idea to g",https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-663972926,663972926,
fjahr,2020-07-28 00:32:45,"Thanks for the suggestions! Honestly, I was a bit on the fence on the naming of this RPC anyway and since there were two reviewers in favor of this renaming and none against, I have implemented it now as `getindexinfo`. It also takes an index name now as suggested. Sorry reviewers, most of the code has changed now.\n\nPlease note this trade-off in the code currently: Even when an index name (eve",https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-664707930,664707930,
promag,2020-07-28 01:03:16,You may want to update PR title.,https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-664715866,664715866,
jonatack,2020-07-28 19:31:45,"> Not sure if the format should be different if an index is specified. And if the specified index is unknown (either invalid or just because it's not available) then the resulting object would be `{}`. No strong opinion though.\n\nThis was my first thought as well: if an index is specified, ISTM the output should give feedback on the index that it understood (by displaying it, the same as when no ",https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-665234109,665234109,
fjahr,2020-07-31 13:06:25,Pushed the changes as requested. I understand now the name parameter was more thought of like a filter so I documented it as such. I also renamed it to `index_name` which is consistent with `wallet_name` which seemed the most comparable.,https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-667110023,667110023,
fjahr,2020-08-01 13:34:22,Addressed review comments by @jonatack ,https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-667533033,667533033,
laanwj,2020-08-20 13:57:03,Re-ACK 124e1ee1343f8bfb3748393ced9debdbdee60d3b,https://github.com/bitcoin/bitcoin/pull/19550#issuecomment-677680629,677680629,
jonatack,2020-07-19 04:48:30,nit: sort,https://github.com/bitcoin/bitcoin/pull/19550#discussion_r456859175,456859175,src/rpc/misc.cpp
jonatack,2020-07-19 04:51:01,"Not sure it makes sense to do so here, but ISTM returning a JSON object is generally the preferred RPC result.",https://github.com/bitcoin/bitcoin/pull/19550#discussion_r456859351,456859351,src/rpc/misc.cpp
MarcoFalke,2020-07-19 06:03:50,"The name should be unique, so it could be the key of the json object?",https://github.com/bitcoin/bitcoin/pull/19550#discussion_r456865204,456865204,src/rpc/misc.cpp
MarcoFalke,2020-07-19 06:04:41,unrelated style nit: If you want you can cherry-pick the change to the test framework from https://github.com/bitcoin/bitcoin/pull/19134/files#diff-64721c5ee64d44f7114d6d0d2226db4d and then call self.wait_until below instead of the import.,https://github.com/bitcoin/bitcoin/pull/19550#discussion_r456865269,456865269,test/functional/rpc_misc.py
MarcoFalke,2020-07-19 06:07:35,"unrelated style-nit: Maybe use the ""new"" constructor that takes an RpcMethodFnType . See https://doxygen.bitcoincore.org/class_c_r_p_c_command.html#afa39f5bda9319f3b91c6b38bbc7c7434 and #19528 ",https://github.com/bitcoin/bitcoin/pull/19550#discussion_r456865552,456865552,src/rpc/misc.cpp
MarcoFalke,2020-07-19 06:11:41,"nit: Could avoid passing results around\n\n```suggestion\n        results.push_back(SummaryToJson(g_txindex->GetSummary()));\n```",https://github.com/bitcoin/bitcoin/pull/19550#discussion_r456865872,456865872,src/rpc/misc.cpp
promag,2020-07-19 21:38:09,Could be const?,https://github.com/bitcoin/bitcoin/pull/19550#discussion_r456958589,456958589,src/index/base.h
jonatack,2020-07-25 17:51:39,"Would non-static member initialization here provide potential extra safety?\n```diff\n-    bool synced;\n-    int best_block_height;\n+    bool synced{false};\n+    int best_block_height{1};\n```\n",https://github.com/bitcoin/bitcoin/pull/19550#discussion_r460428203,460428203,src/index/base.h
jonatack,2020-07-25 18:00:44,"Indentation, could clang-format `listindices()` if you retouch -- see details for an idea.\n\n<details><summary><code>clang-format -i src/rpc/misc.cpp</code></summary><p>\n\n```diff\n static RPCHelpMan listindices()\n {\n-    return RPCHelpMan{""listindices"",\n-                ""\nReturns the available indices and their status.\n"",\n-                {},\n-                RPCResult{\n-    ",https://github.com/bitcoin/bitcoin/pull/19550#discussion_r460428922,460428922,src/rpc/misc.cpp
jonatack,2020-07-25 18:09:57,Would `IndexSummary summary{};` provide further safety?,https://github.com/bitcoin/bitcoin/pull/19550#discussion_r460429613,460429613,src/index/base.cpp
fjahr,2020-07-25 18:29:22,I have chosen this indentation to keep it consistent with https://github.com/bitcoin/bitcoin/pull/19528/files,https://github.com/bitcoin/bitcoin/pull/19550#discussion_r460431191,460431191,src/rpc/misc.cpp
fjahr,2020-07-25 19:18:24,done,https://github.com/bitcoin/bitcoin/pull/19550#discussion_r460435467,460435467,src/index/base.h
fjahr,2020-07-25 19:18:35,done,https://github.com/bitcoin/bitcoin/pull/19550#discussion_r460435485,460435485,src/index/base.cpp
fjahr,2020-07-25 19:23:47,done,https://github.com/bitcoin/bitcoin/pull/19550#discussion_r460435991,460435991,src/index/base.h
MarcoFalke,2020-07-26 05:58:06,"```suggestion\n    IndexSummary GetSummary() const;\n```\n\nThe const needs to be in the end, otherwise it has no effect",https://github.com/bitcoin/bitcoin/pull/19550#discussion_r460483131,460483131,src/index/base.h
MarcoFalke,2020-07-26 05:58:45,"```suggestion\n    ForEachBlockFilterIndex([&results](const BlockFilterIndex& index) {\n```\n\nYou might be able to test whether the const works by applying this patch",https://github.com/bitcoin/bitcoin/pull/19550#discussion_r460483167,460483167,src/rpc/misc.cpp
fjahr,2020-07-26 09:55:32,"yep, done",https://github.com/bitcoin/bitcoin/pull/19550#discussion_r460506064,460506064,src/rpc/misc.cpp
fjahr,2020-07-26 09:55:45,"duh, done",https://github.com/bitcoin/bitcoin/pull/19550#discussion_r460506091,460506091,src/index/base.h
jonatack,2020-07-29 08:54:39,"I think it would be clearer to omit ""by default"", and maybe s/lists/returns/",https://github.com/bitcoin/bitcoin/pull/19550#discussion_r462144608,462144608,doc/release-notes.md
jonatack,2020-07-29 08:55:33,"```suggestion\n  `index` param to specify returning only the status of that index. (#19550)\n```",https://github.com/bitcoin/bitcoin/pull/19550#discussion_r462145183,462145183,doc/release-notes.md
fjahr,2020-07-31 13:06:40,done,https://github.com/bitcoin/bitcoin/pull/19550#discussion_r463599246,463599246,doc/release-notes.md
jonatack,2020-07-31 13:36:21,"Would (something like) this be better?\n```suggestion\n                    {""index_name"", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, ""Filter results for an index with a specific name.""},\n```\n\nIt would change the help from\n```\nArguments:\n1. index_name    (string, optional, default=) Filter results for an index with a specific name.\n```\nto\n```\nArguments:\n1. index",https://github.com/bitcoin/bitcoin/pull/19550#discussion_r463614813,463614813,src/rpc/misc.cpp
jonatack,2020-07-31 13:36:27,"nit: not sure if `empty()` is more idiomatic\n```diff\n-    if (index_name != """" && index_name != summary.name) {\n-        return ret_summary;\n-    }\n+    if (!index_name.empty() && index_name != summary.name) return ret_summary;\n```",https://github.com/bitcoin/bitcoin/pull/19550#discussion_r463614858,463614858,src/rpc/misc.cpp
jonatack,2020-07-31 13:42:13,"(I should have given feedback about the ""default="" earlier, but somehow kept forgetting to add it to the review)",https://github.com/bitcoin/bitcoin/pull/19550#discussion_r463618108,463618108,src/rpc/misc.cpp
