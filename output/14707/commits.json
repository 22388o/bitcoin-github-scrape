[
  {
    "sha": "513759861c999e7af3da514d5003335019d98973",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MTM3NTk4NjFjOTk5ZTdhZjNkYTUxNGQ1MDAzMzM1MDE5ZDk4OTcz",
    "commit": {
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2021-09-14T15:35:49Z"
      },
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2021-09-14T15:35:49Z"
      },
      "message": "Include coinbase transactions in receivedby wallet rpcs",
      "tree": {
        "sha": "6a7af1d0d13ea42278a8cc86fffb9fda9171bf6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a7af1d0d13ea42278a8cc86fffb9fda9171bf6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/513759861c999e7af3da514d5003335019d98973",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmFAwVUACgkQYAB6/Ik4\nsBi1mxAAq2/cE68HB9A0jloC/7nSOGFn6piqRGAcUecY40rvGmIZGbpbIVTGa6YR\n+j+cxNWII1F02YNiMMVcWenf4depVlv+Vl5d0U0ExVx85938d/G/xZe1Jok/W0Kc\nj7Y0GLFfH6vbVJzvRFTpsDj+m/PZ3sJqIF4i7uwLMj9zNTGiM5MAaAYS8qhz/F+1\nNtomep433GeuZPrnB1XVY3rT9ExZ2SjfPxY6NREHUJDNUKZcfTPc9mnsG6GXzfrK\nU9bBu56XkS0bOe/KC0SrNwBHjDBe1I6txjFdYm728Gdg/zac+dwIsgVjv0ayzZHR\nRUbfgbnoWMnXbx55WSaCOGQLH7eAV6z4D87kqgz2KR1lMhCZtW91Wudc+xs9ZxtU\nDC9ijBZsx2iZidyqZmeDgxg+deIcQ4nZZwJr7CEbVKtaioCs2M0y/QHFF3/Y3P9Z\nB1bDjTrWQbGDFqsg/TfsAQyakazC+H8lnfRGZrFIU9LVYABlYTbR/IuXtV3wAeku\n2bPq60ZMa4K/1+jgReORbjFSmUQHbDJXJIizMKQGO0Ys65lc2HrWNrKFoaa+95oR\n7P0P5mTcRn+GwMTymBcFQXwVrqOi/n48f6UrhpGW1TavHUraXutSE7rHNHKPzZx5\nOq4L/yvVGVdmcuueNvLODLIAZA2gmmd9ETQ27dG+5xP0ngRHSHE=\n=2rpl\n-----END PGP SIGNATURE-----",
        "payload": "tree 6a7af1d0d13ea42278a8cc86fffb9fda9171bf6e\nparent 2161a058552ac938f2079b311a2d12f5d1772d01\nauthor Andrew Toth <andrewstoth@gmail.com> 1631633749 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1631633749 -0400\n\nInclude coinbase transactions in receivedby wallet rpcs\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/513759861c999e7af3da514d5003335019d98973",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/513759861c999e7af3da514d5003335019d98973",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/513759861c999e7af3da514d5003335019d98973/comments",
    "author": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2161a058552ac938f2079b311a2d12f5d1772d01",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2161a058552ac938f2079b311a2d12f5d1772d01",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2161a058552ac938f2079b311a2d12f5d1772d01"
      }
    ],
    "stats": {
      "total": 69,
      "additions": 56,
      "deletions": 13
    },
    "files": [
      {
        "sha": "68102a9709d3b18d9c1d2aee3c5b76b96ef9d91e",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/513759861c999e7af3da514d5003335019d98973/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/513759861c999e7af3da514d5003335019d98973/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=513759861c999e7af3da514d5003335019d98973",
        "patch": "@@ -46,13 +46,17 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"settxfee\", 0, \"amount\" },\n     { \"sethdseed\", 0, \"newkeypool\" },\n     { \"getreceivedbyaddress\", 1, \"minconf\" },\n+    { \"getreceivedbyaddress\", 2, \"include_immature_coinbase\" },\n     { \"getreceivedbylabel\", 1, \"minconf\" },\n+    { \"getreceivedbylabel\", 2, \"include_immature_coinbase\" },\n     { \"listreceivedbyaddress\", 0, \"minconf\" },\n     { \"listreceivedbyaddress\", 1, \"include_empty\" },\n     { \"listreceivedbyaddress\", 2, \"include_watchonly\" },\n+    { \"listreceivedbyaddress\", 4, \"include_immature_coinbase\" },\n     { \"listreceivedbylabel\", 0, \"minconf\" },\n     { \"listreceivedbylabel\", 1, \"include_empty\" },\n     { \"listreceivedbylabel\", 2, \"include_watchonly\" },\n+    { \"listreceivedbylabel\", 3, \"include_immature_coinbase\" },\n     { \"getbalance\", 1, \"minconf\" },\n     { \"getbalance\", 2, \"include_watchonly\" },\n     { \"getbalance\", 3, \"avoid_reuse\" },"
      },
      {
        "sha": "e6f4b8b0907c852fbddca65fc60b0e32891a533d",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 52,
        "deletions": 13,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/513759861c999e7af3da514d5003335019d98973/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/513759861c999e7af3da514d5003335019d98973/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=513759861c999e7af3da514d5003335019d98973",
        "patch": "@@ -685,11 +685,26 @@ static CAmount GetReceived(const CWallet& wallet, const UniValue& params, bool b\n     if (!params[1].isNull())\n         min_depth = params[1].get_int();\n \n+    const bool include_immature_coinbase{!params[2].isNull() && params[2].get_bool()};\n+\n+    // Excluding coinbase outputs is deprecated\n+    // It can be enabled by setting deprecatedrpc=exclude_coinbase\n+    const bool include_coinbase{!wallet.chain().rpcEnableDeprecated(\"exclude_coinbase\")};\n+\n+    if (include_immature_coinbase && !include_coinbase) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"include_immature_coinbase is incompatible with deprecated exclude_coinbase\");\n+    }\n+\n     // Tally\n     CAmount amount = 0;\n     for (const std::pair<const uint256, CWalletTx>& wtx_pair : wallet.mapWallet) {\n         const CWalletTx& wtx = wtx_pair.second;\n-        if (wtx.IsCoinBase() || !wallet.chain().checkFinalTx(*wtx.tx) || wallet.GetTxDepthInMainChain(wtx) < min_depth) {\n+        int depth{wallet.GetTxDepthInMainChain(wtx)};\n+        if (depth < min_depth\n+            // Coinbase with less than 1 confirmation is no longer in the main chain\n+            || (wtx.IsCoinBase() && (depth < 1 || !include_coinbase))\n+            || (wallet.IsTxImmatureCoinBase(wtx) && !include_immature_coinbase)\n+            || !wallet.chain().checkFinalTx(*wtx.tx)) {\n             continue;\n         }\n \n@@ -712,6 +727,7 @@ static RPCHelpMan getreceivedbyaddress()\n                 {\n                     {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The bitcoin address for transactions.\"},\n                     {\"minconf\", RPCArg::Type::NUM, RPCArg::Default{1}, \"Only include transactions confirmed at least this many times.\"},\n+                    {\"include_immature_coinbase\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Include immature coinbase transactions.\"},\n                 },\n                 RPCResult{\n                     RPCResult::Type::STR_AMOUNT, \"amount\", \"The total amount in \" + CURRENCY_UNIT + \" received at this address.\"\n@@ -723,6 +739,8 @@ static RPCHelpMan getreceivedbyaddress()\n             + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0\") +\n             \"\\nThe amount with at least 6 confirmations\\n\"\n             + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 6\") +\n+            \"\\nThe amount with at least 6 confirmations including immature coinbase outputs\\n\"\n+            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 6 true\") +\n             \"\\nAs a JSON-RPC call\\n\"\n             + HelpExampleRpc(\"getreceivedbyaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\", 6\")\n                 },\n@@ -750,6 +768,7 @@ static RPCHelpMan getreceivedbylabel()\n                 {\n                     {\"label\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The selected label, may be the default label using \\\"\\\".\"},\n                     {\"minconf\", RPCArg::Type::NUM, RPCArg::Default{1}, \"Only include transactions confirmed at least this many times.\"},\n+                    {\"include_immature_coinbase\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Include immature coinbase transactions.\"},\n                 },\n                 RPCResult{\n                     RPCResult::Type::STR_AMOUNT, \"amount\", \"The total amount in \" + CURRENCY_UNIT + \" received for this label.\"\n@@ -761,8 +780,10 @@ static RPCHelpMan getreceivedbylabel()\n             + HelpExampleCli(\"getreceivedbylabel\", \"\\\"tabby\\\" 0\") +\n             \"\\nThe amount with at least 6 confirmations\\n\"\n             + HelpExampleCli(\"getreceivedbylabel\", \"\\\"tabby\\\" 6\") +\n+            \"\\nThe amount with at least 6 confirmations including immature coinbase outputs\\n\"\n+            + HelpExampleCli(\"getreceivedbylabel\", \"\\\"tabby\\\" 6 true\") +\n             \"\\nAs a JSON-RPC call\\n\"\n-            + HelpExampleRpc(\"getreceivedbylabel\", \"\\\"tabby\\\", 6\")\n+            + HelpExampleRpc(\"getreceivedbylabel\", \"\\\"tabby\\\", 6, true\")\n                 },\n         [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n {\n@@ -1051,7 +1072,7 @@ struct tallyitem\n     }\n };\n \n-static UniValue ListReceived(const CWallet& wallet, const UniValue& params, bool by_label) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet)\n+static UniValue ListReceived(const CWallet& wallet, const UniValue& params, const bool by_label, const bool include_immature_coinbase) EXCLUSIVE_LOCKS_REQUIRED(wallet.cs_wallet)\n {\n     // Minimum confirmations\n     int nMinDepth = 1;\n@@ -1071,27 +1092,38 @@ static UniValue ListReceived(const CWallet& wallet, const UniValue& params, bool\n \n     bool has_filtered_address = false;\n     CTxDestination filtered_address = CNoDestination();\n-    if (!by_label && params.size() > 3) {\n+    if (!by_label && !params[3].isNull() && !params[3].get_str().empty()) {\n         if (!IsValidDestinationString(params[3].get_str())) {\n             throw JSONRPCError(RPC_WALLET_ERROR, \"address_filter parameter was invalid\");\n         }\n         filtered_address = DecodeDestination(params[3].get_str());\n         has_filtered_address = true;\n     }\n \n+    // Excluding coinbase outputs is deprecated\n+    // It can be enabled by setting deprecatedrpc=exclude_coinbase\n+    const bool include_coinbase{!wallet.chain().rpcEnableDeprecated(\"exclude_coinbase\")};\n+\n+    if (include_immature_coinbase && !include_coinbase) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"include_immature_coinbase is incompatible with deprecated exclude_coinbase\");\n+    }\n+\n     // Tally\n     std::map<CTxDestination, tallyitem> mapTally;\n     for (const std::pair<const uint256, CWalletTx>& pairWtx : wallet.mapWallet) {\n         const CWalletTx& wtx = pairWtx.second;\n \n-        if (wtx.IsCoinBase() || !wallet.chain().checkFinalTx(*wtx.tx)) {\n-            continue;\n-        }\n-\n         int nDepth = wallet.GetTxDepthInMainChain(wtx);\n         if (nDepth < nMinDepth)\n             continue;\n \n+        // Coinbase with less than 1 confirmation is no longer in the main chain\n+        if ((wtx.IsCoinBase() && (nDepth < 1 || !include_coinbase))\n+            || (wallet.IsTxImmatureCoinBase(wtx) && !include_immature_coinbase)\n+            || !wallet.chain().checkFinalTx(*wtx.tx)) {\n+            continue;\n+        }\n+\n         for (const CTxOut& txout : wtx.tx->vout)\n         {\n             CTxDestination address;\n@@ -1206,7 +1238,8 @@ static RPCHelpMan listreceivedbyaddress()\n                     {\"minconf\", RPCArg::Type::NUM, RPCArg::Default{1}, \"The minimum number of confirmations before payments are included.\"},\n                     {\"include_empty\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Whether to include addresses that haven't received any payments.\"},\n                     {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n-                    {\"address_filter\", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, \"If present, only return information on this address.\"},\n+                    {\"address_filter\", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, \"If present and non-empty, only return information on this address.\"},\n+                    {\"include_immature_coinbase\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Include immature coinbase transactions.\"},\n                 },\n                 RPCResult{\n                     RPCResult::Type::ARR, \"\", \"\",\n@@ -1228,8 +1261,9 @@ static RPCHelpMan listreceivedbyaddress()\n                 RPCExamples{\n                     HelpExampleCli(\"listreceivedbyaddress\", \"\")\n             + HelpExampleCli(\"listreceivedbyaddress\", \"6 true\")\n+            + HelpExampleCli(\"listreceivedbyaddress\", \"6 true true \\\"\\\" true\")\n             + HelpExampleRpc(\"listreceivedbyaddress\", \"6, true, true\")\n-            + HelpExampleRpc(\"listreceivedbyaddress\", \"6, true, true, \\\"\" + EXAMPLE_ADDRESS[0] + \"\\\"\")\n+            + HelpExampleRpc(\"listreceivedbyaddress\", \"6, true, true, \\\"\" + EXAMPLE_ADDRESS[0] + \"\\\", true\")\n                 },\n         [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n {\n@@ -1240,9 +1274,11 @@ static RPCHelpMan listreceivedbyaddress()\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n \n+    const bool include_immature_coinbase{!request.params[4].isNull() && request.params[4].get_bool()};\n+\n     LOCK(pwallet->cs_wallet);\n \n-    return ListReceived(*pwallet, request.params, false);\n+    return ListReceived(*pwallet, request.params, false, include_immature_coinbase);\n },\n     };\n }\n@@ -1255,6 +1291,7 @@ static RPCHelpMan listreceivedbylabel()\n                     {\"minconf\", RPCArg::Type::NUM, RPCArg::Default{1}, \"The minimum number of confirmations before payments are included.\"},\n                     {\"include_empty\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Whether to include labels that haven't received any payments.\"},\n                     {\"include_watchonly\", RPCArg::Type::BOOL, RPCArg::DefaultHint{\"true for watch-only wallets, otherwise false\"}, \"Whether to include watch-only addresses (see 'importaddress')\"},\n+                    {\"include_immature_coinbase\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Include immature coinbase transactions.\"},\n                 },\n                 RPCResult{\n                     RPCResult::Type::ARR, \"\", \"\",\n@@ -1271,7 +1308,7 @@ static RPCHelpMan listreceivedbylabel()\n                 RPCExamples{\n                     HelpExampleCli(\"listreceivedbylabel\", \"\")\n             + HelpExampleCli(\"listreceivedbylabel\", \"6 true\")\n-            + HelpExampleRpc(\"listreceivedbylabel\", \"6, true, true\")\n+            + HelpExampleRpc(\"listreceivedbylabel\", \"6, true, true, true\")\n                 },\n         [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n {\n@@ -1282,9 +1319,11 @@ static RPCHelpMan listreceivedbylabel()\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n \n+    const bool include_immature_coinbase{!request.params[3].isNull() && request.params[3].get_bool()};\n+\n     LOCK(pwallet->cs_wallet);\n \n-    return ListReceived(*pwallet, request.params, true);\n+    return ListReceived(*pwallet, request.params, true, include_immature_coinbase);\n },\n     };\n }"
      }
    ]
  },
  {
    "sha": "f26ec2f92fd37bde2b30eb1ed475da2e0d0e8270",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMjZlYzJmOTJmZDM3YmRlMmIzMGViMWVkNDc1ZGEyZTBkMGU4Mjcw",
    "commit": {
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2021-09-14T15:36:04Z"
      },
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2021-09-14T15:36:04Z"
      },
      "message": "Test coinbase in receivedby wallet rpcs",
      "tree": {
        "sha": "d52a07eb6da95cc6c0c5214b9f262da8046f3161",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d52a07eb6da95cc6c0c5214b9f262da8046f3161"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f26ec2f92fd37bde2b30eb1ed475da2e0d0e8270",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmFAwWQACgkQYAB6/Ik4\nsBivBBAAqw2JZz9G3IcmuV10bWRhUrIWuLxoiilF7a4h1VhuFteD3ZEpHKvizz8O\nIMdBAl+w1AAxOSFy+rV2cRvReUhlLxxgPIw9IdccEY1jWaixeEuIKe+hLXV42EN9\nApDid0JwZ/7/VlHlHckuP6YTVjzkfSdxxVz4SKggyh4voQjHUmHwzEb4W1fMAIkS\nLaDO/HIRbW97yPcD7YskISoDsPOUSJPG95Id617+GgYlyszHNDehXhNQEX5rn6tH\n9+xKU99SiZ8WHBCFlgWu7Te1gP/bYOGere0mkaOdDOXL3wIenceA1Y2F6+xY8eCZ\neHvw94bIKDcZl20YZRyz2wERfkvnXTqVfiZzp1AFtVOCW9fHFyX2F83am/91QQHA\n3h+h/MtaV+Xdj1AKbp38yDrAexyZO28E5HmF/46Wd+CfT1sB1MjVnTorT+sJcMQj\nkFbqgg6Nf3MaHdwGPkC40sbCUsJHnLlHQbyzV4QccFX4DWEmOP850W30ufIgNa+o\nD0S/OEE09SPpaL9IjsYvb4d542XyZd4VdR91vRagDOAAVOGbh+DRKTMTl4EpS2kT\nI4MEg8RwQyFigPctCXFYFfbDz64+5i9+eCA0H5kX+oKjHUxsn2gDmcxMOK3/KySC\nUidY65WVo6sXpHcHNS5ZUumd5AiFWnQQIjnXhiovQ3p9WGFvfHM=\n=3MGn\n-----END PGP SIGNATURE-----",
        "payload": "tree d52a07eb6da95cc6c0c5214b9f262da8046f3161\nparent 513759861c999e7af3da514d5003335019d98973\nauthor Andrew Toth <andrewstoth@gmail.com> 1631633764 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1631633764 -0400\n\nTest coinbase in receivedby wallet rpcs\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f26ec2f92fd37bde2b30eb1ed475da2e0d0e8270",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f26ec2f92fd37bde2b30eb1ed475da2e0d0e8270",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f26ec2f92fd37bde2b30eb1ed475da2e0d0e8270/comments",
    "author": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "513759861c999e7af3da514d5003335019d98973",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/513759861c999e7af3da514d5003335019d98973",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/513759861c999e7af3da514d5003335019d98973"
      }
    ],
    "stats": {
      "total": 123,
      "additions": 122,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ea4637bf47ba81a1e3f17e1ffb35e13acbfbccea",
        "filename": "test/functional/wallet_listreceivedby.py",
        "status": "modified",
        "additions": 122,
        "deletions": 1,
        "changes": 123,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f26ec2f92fd37bde2b30eb1ed475da2e0d0e8270/test/functional/wallet_listreceivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f26ec2f92fd37bde2b30eb1ed475da2e0d0e8270/test/functional/wallet_listreceivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listreceivedby.py?ref=f26ec2f92fd37bde2b30eb1ed475da2e0d0e8270",
        "patch": "@@ -2,7 +2,7 @@\n # Copyright (c) 2014-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test the listreceivedbyaddress RPC.\"\"\"\n+\"\"\"Test the listreceivedbyaddress, listreceivedbylabel, getreceivedybaddress, and getreceivedbylabel RPCs.\"\"\"\n from decimal import Decimal\n \n from test_framework.test_framework import BitcoinTestFramework\n@@ -17,6 +17,8 @@\n class ReceivedByTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n+        # Test deprecated exclude coinbase on second node\n+        self.extra_args = [[], [\"-deprecatedrpc=exclude_coinbase\"]]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n@@ -167,5 +169,124 @@ def run_test(self):\n         balance = self.nodes[1].getreceivedbylabel(\"mynewlabel\")\n         assert_equal(balance, Decimal(\"0.0\"))\n \n+        self.log.info(\"Tests for including coinbase outputs\")\n+\n+        # Generate block reward to address with label\n+        label = \"label\"\n+        address = self.nodes[0].getnewaddress(label)\n+\n+        reward = Decimal(\"25\")\n+        self.nodes[0].generatetoaddress(1, address)\n+        hash = self.nodes[0].getbestblockhash()\n+\n+        self.log.info(\"getreceivedbyaddress returns nothing with defaults\")\n+        balance = self.nodes[0].getreceivedbyaddress(address)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbyaddress returns block reward when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbyaddress(address=address, include_immature_coinbase=True)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"getreceivedbylabel returns nothing with defaults\")\n+        balance = self.nodes[0].getreceivedbylabel(\"label\")\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel returns block reward when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbylabel(label=\"label\", include_immature_coinbase=True)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"listreceivedbyaddress does not include address with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbyaddress includes address when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(minconf=1, include_immature_coinbase=True),\n+                            {\"address\": address},\n+                            {\"address\": address, \"amount\": reward})\n+\n+        self.log.info(\"listreceivedbylabel does not include label with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel includes label when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(minconf=1, include_immature_coinbase=True),\n+                            {\"label\": label},\n+                            {\"label\": label, \"amount\": reward})\n+\n+        self.log.info(\"Generate 100 more blocks\")\n+        self.nodes[0].generate(100)\n+\n+        self.log.info(\"getreceivedbyaddress returns reward with defaults\")\n+        balance = self.nodes[0].getreceivedbyaddress(address)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"getreceivedbylabel returns reward with defaults\")\n+        balance = self.nodes[0].getreceivedbylabel(\"label\")\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"listreceivedbyaddress includes address with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {\"address\": address, \"amount\": reward})\n+\n+        self.log.info(\"listreceivedbylabel includes label with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {\"label\": label, \"amount\": reward})\n+\n+        self.log.info(\"Invalidate block that paid to address\")\n+        self.nodes[0].invalidateblock(hash)\n+\n+        self.log.info(\"getreceivedbyaddress does not include invalidated block when minconf is 0 when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbyaddress(address=address, minconf=0, include_immature_coinbase=True)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel does not include invalidated block when minconf is 0 when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbylabel(label=\"label\", minconf=0, include_immature_coinbase=True)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"listreceivedbyaddress does not include invalidated block when minconf is 0 when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(minconf=0, include_immature_coinbase=True),\n+                            {\"address\": address},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel does not include invalidated block when minconf is 0 when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(minconf=0, include_immature_coinbase=True),\n+                            {\"label\": label},\n+                            {}, True)\n+\n+\n+        self.log.info(\"Generate 101 blocks to node with deprecated exclude_coinbase\")\n+        address2 = self.nodes[1].getnewaddress(label)\n+        self.nodes[1].generatetoaddress(101, address2)\n+\n+        self.log.info(\"getreceivedbyaddress returns nothing when excluding coinbase\")\n+        balance = self.nodes[1].getreceivedbyaddress(address2)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel returns nothing when excluding coinbase\")\n+        balance = self.nodes[1].getreceivedbylabel(\"label\")\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"listreceivedbyaddress does not include address when excluding coinbase\")\n+        assert_array_result(self.nodes[1].listreceivedbyaddress(),\n+                            {\"address\": address2},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel does not include label when excluding coinbase\")\n+        assert_array_result(self.nodes[1].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {}, True)\n+\n+        self.log.info(\"getreceivedbyaddress throws when setting include_immature_coinbase with deprecated exclude_coinbase\")\n+        assert_raises_rpc_error(-8, 'include_immature_coinbase is incompatible with deprecated exclude_coinbase', self.nodes[1].getreceivedbyaddress, address2, 1, True)\n+\n+\n+        self.log.info(\"listreceivedbyaddress throws when setting include_immature_coinbase with deprecated exclude_coinbase\")\n+        assert_raises_rpc_error(-8, 'include_immature_coinbase is incompatible with deprecated exclude_coinbase', self.nodes[1].listreceivedbyaddress, 1, False, False, \"\", True)\n+\n+\n if __name__ == '__main__':\n     ReceivedByTest().main()"
      }
    ]
  },
  {
    "sha": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZjA4NGVjMGVmNjc1MzRlNDNmMzAzMWM4ZDE3ZTJhZDZiOWNlMjg1",
    "commit": {
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2021-09-14T15:36:26Z"
      },
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2021-09-14T15:36:26Z"
      },
      "message": "Coinbase receivedby rpcs release notes",
      "tree": {
        "sha": "5764469ab6e4e7373f3659970bd68be76f9d71b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5764469ab6e4e7373f3659970bd68be76f9d71b1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmFAwXsACgkQYAB6/Ik4\nsBicTA//fUDBGy0GRk+z87lF5s3EQzU5/SBsp7L9oDWuqA8CnLiP/sWBeFxF7YoE\nFrD1i8LEwO7fSllBI3NeEOLq/8fd/jpsVqcW5TU2/w6drRh2ACXzRj/taJlUDR2T\n1LL0aAutj1ggHinPo0J11EoGEupTFZ99C5iXj8DtntV6WH9FHYyF5MJiWsMcvNBV\nqNPz6izz4fEJTk2tzZX2nS8EMC9yosgXjGpOPvQwfoTthRgpmCmFGPl2ZCV0V9WG\nnrQa2SQfc85VKDPkmFSJ/a/BunrnEYUnQyEaYnP4UX9tnhtLC9hvHx0qH8gE/l1Z\nyzD2PAkfOzf2rbKq2E1hrUwwhdh2I8L98VPfIRFHrPCqA+CB+Bag2oAA/Ss85Qc0\nUKBcHuCqrd3JU7LCnVmlP9fJh9TE0fhc7V7N9pRtcRXjY8sbYRbD6LbwPQt+G2KH\nOfN+OU3dcSNS/eqVLxEXR4A04pmQEju0Eya9hWuBHKhtJvEpXSiek9LYLUSxDqyS\nUKiPqnm+8Pm69PxkD1SbnPmCc72ZlqJlTcl4jzaY9VBsPlEfze9mbuGBHXrbnuII\n6sBuqUzcv31cm5rSab35svnt4v9+bOrxV2gy5mZdPSSaK0EKdL0I2y/s/gX66BYU\n/JYWIzwUCQG11113v2LvoXUX2az3hBZuniUuIX5zD8yYIt1sCL4=\n=Fei2\n-----END PGP SIGNATURE-----",
        "payload": "tree 5764469ab6e4e7373f3659970bd68be76f9d71b1\nparent f26ec2f92fd37bde2b30eb1ed475da2e0d0e8270\nauthor Andrew Toth <andrewstoth@gmail.com> 1631633786 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1631633786 -0400\n\nCoinbase receivedby rpcs release notes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f084ec0ef67534e43f3031c8d17e2ad6b9ce285/comments",
    "author": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f26ec2f92fd37bde2b30eb1ed475da2e0d0e8270",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f26ec2f92fd37bde2b30eb1ed475da2e0d0e8270",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f26ec2f92fd37bde2b30eb1ed475da2e0d0e8270"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 19,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b53204f78874358032bc40288ca49591e338f47a",
        "filename": "doc/release-notes-14707.md",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1f084ec0ef67534e43f3031c8d17e2ad6b9ce285/doc/release-notes-14707.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1f084ec0ef67534e43f3031c8d17e2ad6b9ce285/doc/release-notes-14707.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-14707.md?ref=1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
        "patch": "@@ -0,0 +1,19 @@\n+Wallet `receivedby` RPCs now include coinbase transactions\n+-------------\n+\n+Previously, the following wallet RPCs excluded coinbase transactions:\n+\n+`getreceivedbyaddress`\n+\n+`getreceivedbylabel`\n+\n+`listreceivedbyaddress`\n+\n+`listreceivedbylabel`\n+\n+This release changes this behaviour and returns results accounting for received coins from coinbase outputs.\n+\n+A new option, `include_immature_coinbase` (default=`false`), determines whether to account for immature coinbase transactions.\n+Immature coinbase transactions are coinbase transactions that have 100 or fewer confirmations, and are not spendable.\n+\n+The previous behaviour can be restored using the configuration `-deprecatedrpc=exclude_coinbase`, but may be removed in a future release."
      }
    ]
  }
]