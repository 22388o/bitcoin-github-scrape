[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437736834",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-437736834",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 437736834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzczNjgzNA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T02:55:38Z",
    "updated_at": "2018-11-12T02:56:03Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, but you can't break compatibility by reordering another argument to `listreceivedbyaddress`. It's also unnecessary I think; you can specify \"null\" to get the default.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437736834/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437747917",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-437747917",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 437747917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzc0NzkxNw==",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T04:11:50Z",
    "updated_at": "2018-11-12T04:11:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sipa Not sure how to pass \"null\" as `address_filter` parameter without breaking https://github.com/bitcoin/bitcoin/pull/14417.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437747917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438016042",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-438016042",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 438016042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODAxNjA0Mg==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T20:21:45Z",
    "updated_at": "2018-11-12T20:24:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Do we know a usecase where anyone would want this behaviour? It seems transparently broken to me.\r\n\r\nIf not, I think I would prefer we fix it and have a LOUD release note about the change, and if we're feeling especially conservative have a hidden config option to restore the old behaviour which we can drop after a couple releases if no one reports needing it.\r\n\r\nHaving an option presents a perpetual usage complexity increase, and defaulting the option to the old behaviour risks users being messed up  by continuing to miss these payments.\r\n\r\nOne thing to consider, however, is that coinbase payments have different deconfirmation risks then general transactions... and cannot be spent for 100 blocks. E.g. you don't want service that accept a 1 conf deposit and withdraw being exploited as a orphan risk eliminator. Nor do we want to undermine parties cashflow handling by causing them to think they can spend more now than they can. There is justification for treating coinbase payments differently (e.g. only showing them once they're spendable), just not for hiding them completely.   Having a \"include coinbase payments yes/no\" doesn't solve these concerns. Having a \"delay them by 100 blocks, yes/no\" probably would.\r\n\r\nSo maybe I would suggest having an argument to hide them until maturity, defaulting on, a hidden option to get the old behaviour, defaulting off, to be removed once it's confirmed no one needs it, and a loud release note explaining the change.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438016042/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438019511",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-438019511",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 438019511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODAxOTUxMQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T20:34:05Z",
    "updated_at": "2018-11-12T20:34:05Z",
    "author_association": "MEMBER",
    "body": "@gmaxwell it is however useful to know if a payment was made regardless if it takes 100 blocks to be spendable?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438019511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438065378",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-438065378",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 438065378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODA2NTM3OA==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T23:18:51Z",
    "updated_at": "2018-11-12T23:18:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "It can be, but listreceivedbyaddress doesn't normally show unconfirmed payments and the output IIRC doesn't even tell you if its an immature coinbase payment (and if it did, many people who didn't even realize coinbase payments were possible would not know to check for it)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438065378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438071397",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-438071397",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 438071397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODA3MTM5Nw==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T23:39:29Z",
    "updated_at": "2018-11-12T23:39:29Z",
    "author_association": "MEMBER",
    "body": "@gmaxwell what if we consider `minconf` the depth added to the minimum spendable depth? Then minconf=1 for coinbase transactions would be 101?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438071397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438078179",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-438078179",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 438078179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODA3ODE3OQ==",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-13T00:07:31Z",
    "updated_at": "2018-11-13T00:07:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gmaxwell I agree. I think it is an error that should be corrected. I'm not sure why anyone would want coinbase txs excluded. I haven't seen a good explanation for why they are filtered out, or a usecase.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438078179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438304021",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-438304021",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 438304021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODMwNDAyMQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-13T15:20:44Z",
    "updated_at": "2021-09-30T11:23:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438304021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438917596",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-438917596",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 438917596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODkxNzU5Ng==",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T04:56:42Z",
    "updated_at": "2018-11-17T21:56:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Commits and PR description have been updated.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/438917596/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439490575",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-439490575",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 439490575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTQ5MDU3NQ==",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T18:52:10Z",
    "updated_at": "2018-11-16T20:24:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I refactored the `getreceivedby` calls to use a common function `GetReceived`. This mirrors the `listreceivedby` calls and doesn't repeat as much code.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/439490575/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/440117123",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-440117123",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 440117123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDExNzEyMw==",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-20T02:43:02Z",
    "updated_at": "2018-11-20T02:43:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gmaxwell Updated this PR with your suggestions.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/440117123/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490147532",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-490147532",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 490147532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDE0NzUzMg==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-07T16:14:11Z",
    "updated_at": "2019-05-07T16:14:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "This PR doesn't compile when rebased on `master`. Are you still working on this @andrewtoth? :-)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490147532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490288411",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-490288411",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 490288411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDI4ODQxMQ==",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-07T23:17:24Z",
    "updated_at": "2019-05-07T23:17:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@practicalswift Hmm I rebased and it compiled fine. I'll push the rebase anyways.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490288411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621864062",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-621864062",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 621864062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTg2NDA2Mg==",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T13:48:20Z",
    "updated_at": "2020-04-30T13:48:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've update this after #17579 so it should be much easier to review. One thing I'm not sure of is how to make the final argument hidden with `RPCHelpMan`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621864062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621876230",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-621876230",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 621876230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTg3NjIzMA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T14:08:39Z",
    "updated_at": "2020-04-30T14:08:39Z",
    "author_association": "MEMBER",
    "body": "Can you explain why you want to hide an argument, especially since you suggest users set the argument to `false` if they run into problems. In other words you are asking users to blindly pass an undocumented value into an RPC.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621876230/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621879825",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-621879825",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 621879825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTg3OTgyNQ==",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T14:14:24Z",
    "updated_at": "2020-04-30T14:14:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Seems I misread one of the comments:\r\n>if we're feeling especially conservative have a hidden config option to restore the old behaviour which we can drop after a couple releases if no one reports needing it.\r\n\r\nSo, it should be a hidden config option instead of a hidden argument. I can update to include the config option, but do you think it's necessary?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621879825/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621882268",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-621882268",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 621882268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTg4MjI2OA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T14:18:19Z",
    "updated_at": "2020-04-30T14:18:19Z",
    "author_association": "MEMBER",
    "body": "Oh, I didn't recall that comment. I see two options:\r\n\r\n* Show the argument in the RPC help, but explain that it is not supposed to be toggled unless needed and that it is going away in a few releases.\r\n* Or, add a debug config option that says the same.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621882268/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623003716",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-623003716",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 623003716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzAwMzcxNg==",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-02T19:40:10Z",
    "updated_at": "2020-05-02T19:40:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MarcoFalke thanks I've updated with a hidden config option.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623003716/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747576199",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-747576199",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 747576199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzU3NjE5OQ==",
    "user": {
      "login": "adamjonas",
      "id": 755825,
      "node_id": "MDQ6VXNlcjc1NTgyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/755825?u=fc2e6f106f98731d49e9787f9cbfe86a17447c23&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamjonas",
      "html_url": "https://github.com/adamjonas",
      "followers_url": "https://api.github.com/users/adamjonas/followers",
      "following_url": "https://api.github.com/users/adamjonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamjonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
      "organizations_url": "https://api.github.com/users/adamjonas/orgs",
      "repos_url": "https://api.github.com/users/adamjonas/repos",
      "events_url": "https://api.github.com/users/adamjonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamjonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-17T17:13:45Z",
    "updated_at": "2020-12-17T17:13:45Z",
    "author_association": "MEMBER",
    "body": "@andrewtoth ping for a rebase.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747576199/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/822719528",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-822719528",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 822719528,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMjcxOTUyOA==",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-19T19:15:57Z",
    "updated_at": "2021-04-19T19:15:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jnewbery @glozow @LarryRuane thank you all for your review! I've updated with all of your suggestions.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/822719528/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862698262",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-862698262",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 862698262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MjY5ODI2Mg==",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-16T20:26:37Z",
    "updated_at": "2021-06-16T20:26:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jnewbery not sure what commit your ACK is referencing. Looks like github does not recognize it either.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862698262/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863114248",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-863114248",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 863114248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzExNDI0OA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-17T10:12:30Z",
    "updated_at": "2021-06-17T10:12:30Z",
    "author_association": "MEMBER",
    "body": "> @jnewbery not sure what commit your ACK is referencing. Looks like github does not recognize it either.\r\n\r\nOops, sorry @andrewtoth - I rebased your branch on master before building/reviewing (building a branch that's based on a very old master commit results in a very slow build since lots of header files have changed). I then accidentally left my ACK for my new head commit hash instead of the one in this PR.\r\n\r\nACK 164e26d42e",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863114248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/960827324",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#issuecomment-960827324",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14707",
    "id": 960827324,
    "node_id": "IC_kwDOABII5845RQ-8",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-04T12:39:25Z",
    "updated_at": "2021-11-04T12:39:25Z",
    "author_association": "MEMBER",
    "body": "reACK 1f084ec0ef\r\n\r\n@andrewtoth: github doesn't generate a notification for reviewers if you just force-push a rebase. If you want people to re-review after a rebase you should leave a comment. That'll notify everyone who has previously reviewed the PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/960827324/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232539375",
    "pull_request_review_id": 173757114,
    "id": 232539375,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjUzOTM3NQ==",
    "diff_hunk": "@@ -1028,13 +1045,18 @@ static UniValue ListReceived(interfaces::Chain::Lock& locked_chain, CWallet * co\n         if(params[2].get_bool())\n             filter = filter | ISMINE_WATCH_ONLY;\n \n+    bool include_coinbase = false;\n+    if (!params[3].isNull()) {\n+        include_coinbase = params[3].get_bool();\n+    }\n+\n     bool has_filtered_address = false;\n     CTxDestination filtered_address = CNoDestination();\n-    if (!by_label && params.size() > 3) {\n-        if (!IsValidDestinationString(params[3].get_str())) {\n+    if (!by_label && params.size() > 4) {\n+        if (!IsValidDestinationString(params[4].get_str())) {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 110,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "f3d8ca1f983fb44484a4b392c8ea2d6fbe928df9",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can't you just check if `address_filter` is an empty string?",
    "created_at": "2018-11-12T05:41:22Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r232539375",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232539375"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r232539375"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232539375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1056,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232628441",
    "pull_request_review_id": 173864445,
    "id": 232628441,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjYyODQ0MQ==",
    "diff_hunk": "@@ -1164,15 +1186,16 @@ static UniValue listreceivedbyaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 4)\n+    if (request.fHelp || request.params.size() > 5)\n         throw std::runtime_error(\n-            \"listreceivedbyaddress ( minconf include_empty include_watchonly address_filter )\\n\"\n+            \"listreceivedbyaddress ( minconf include_empty include_watchonly address_filter include_coinbase )\\n\"\n             \"\\nList balances by receiving address.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. minconf           (numeric, optional, default=1) The minimum number of confirmations before payments are included.\\n\"\n             \"2. include_empty     (bool, optional, default=false) Whether to include addresses that haven't received any payments.\\n\"\n             \"3. include_watchonly (bool, optional, default=false) Whether to include watch-only addresses (see 'importaddress').\\n\"\n-            \"4. address_filter    (string, optional) If present, only return information on this address.\\n\"\n+            \"4. include_coinbase  (bool, optional, default=false) Whether to include coinbase transactions.\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 142,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "f3d8ca1f983fb44484a4b392c8ea2d6fbe928df9",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Breaking change here, don't change argument order, description above is correct.",
    "created_at": "2018-11-12T11:49:04Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r232628441",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232628441"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r232628441"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232628441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1197,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232630167",
    "pull_request_review_id": 173864445,
    "id": 232630167,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjYzMDE2Nw==",
    "diff_hunk": "@@ -41,13 +41,17 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"settxfee\", 0, \"amount\" },\n     { \"sethdseed\", 0, \"newkeypool\" },\n     { \"getreceivedbyaddress\", 1, \"minconf\" },\n+    { \"getreceivedbyaddress\", 2, \"include_coinbase\" },\n     { \"getreceivedbylabel\", 1, \"minconf\" },\n+    { \"getreceivedbylabel\", 2, \"include_coinbase\" },\n     { \"listreceivedbyaddress\", 0, \"minconf\" },\n     { \"listreceivedbyaddress\", 1, \"include_empty\" },\n     { \"listreceivedbyaddress\", 2, \"include_watchonly\" },\n+    { \"listreceivedbyaddress\", 3, \"include_coinbase\" },",
    "path": "src/rpc/client.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "f3d8ca1f983fb44484a4b392c8ea2d6fbe928df9",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should be 4.",
    "created_at": "2018-11-12T11:55:59Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r232630167",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232630167"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r232630167"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232630167/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 50,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232630273",
    "pull_request_review_id": 173864445,
    "id": 232630273,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjYzMDI3Mw==",
    "diff_hunk": "@@ -1215,14 +1239,15 @@ static UniValue listreceivedbylabel(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() > 3)\n+    if (request.fHelp || request.params.size() > 4)\n         throw std::runtime_error(\n             \"listreceivedbylabel ( minconf include_empty include_watchonly)\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 164,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "f3d8ca1f983fb44484a4b392c8ea2d6fbe928df9",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Missing new argument.",
    "created_at": "2018-11-12T11:56:25Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r232630273",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232630273"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r232630273"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232630273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1244,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232630458",
    "pull_request_review_id": 173864445,
    "id": 232630458,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjYzMDQ1OA==",
    "diff_hunk": "@@ -624,13 +632,14 @@ static UniValue getreceivedbylabel(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n         throw std::runtime_error(\n             \"getreceivedbylabel \\\"label\\\" ( minconf )\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "f3d8ca1f983fb44484a4b392c8ea2d6fbe928df9",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Missing new argument.",
    "created_at": "2018-11-12T11:56:47Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r232630458",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232630458"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r232630458"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232630458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 637,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256196828",
    "pull_request_review_id": 202969315,
    "id": 256196828,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjE5NjgyOA==",
    "diff_hunk": "@@ -577,13 +643,14 @@ static UniValue getreceivedbyaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n         throw std::runtime_error(\n             RPCHelpMan{\"getreceivedbyaddress\",\n                 \"\\nReturns the total amount received by the given address in transactions with at least minconf confirmations.\\n\",\n                 {\n                     {\"address\", RPCArg::Type::STR, /* opt */ false, /* default_val */ \"\", \"The bitcoin address for transactions.\"},\n                     {\"minconf\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"1\", \"Only include transactions confirmed at least this many times.\"},\n+                    {\"include_immature\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"false\", \"Include immature coinbase transactions.\"},",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 85,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "7b5db837546f8fcf3d73e1141cd74a927a4a2d45",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n                    {\"include_immature\", RPCArg::Type::BOOL, /* default */ \"false\", \"Include immature coinbase transactions.\"},\r\n```",
    "created_at": "2019-02-12T23:52:36Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r256196828",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256196828"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r256196828"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256196828/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 653,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256685600",
    "pull_request_review_id": 203562651,
    "id": 256685600,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjY4NTYwMA==",
    "diff_hunk": "@@ -577,13 +643,14 @@ static UniValue getreceivedbyaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n         throw std::runtime_error(\n             RPCHelpMan{\"getreceivedbyaddress\",\n                 \"\\nReturns the total amount received by the given address in transactions with at least minconf confirmations.\\n\",\n                 {\n                     {\"address\", RPCArg::Type::STR, /* opt */ false, /* default_val */ \"\", \"The bitcoin address for transactions.\"},\n                     {\"minconf\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"1\", \"Only include transactions confirmed at least this many times.\"},\n+                    {\"include_immature\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"false\", \"Include immature coinbase transactions.\"},",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 85,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "7b5db837546f8fcf3d73e1141cd74a927a4a2d45",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2019-02-14T04:12:02Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r256685600",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256685600"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r256685600"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256685600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 653,
    "side": "RIGHT",
    "in_reply_to_id": 256196828
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550329066",
    "pull_request_review_id": 560202678,
    "id": 550329066,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMyOTA2Ng==",
    "diff_hunk": "@@ -671,11 +671,22 @@ static CAmount GetReceived(const CWallet& wallet, const UniValue& params, bool b\n     if (!params[1].isNull())\n         min_depth = params[1].get_int();\n \n+    bool include_immature{params[2].isNull() ? false : params[2].get_bool()};",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "f84ff8f98494eff2bcfac970c7eef1d1de5f4c51",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, if you have a chance to retouch\r\n```suggestion\r\n    bool include_immature{!params[2].isNull() && params[2].get_bool()};\r\n```",
    "created_at": "2020-12-30T21:15:04Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r550329066",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550329066"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r550329066"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550329066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 674,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550365041",
    "pull_request_review_id": 560202678,
    "id": 550365041,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM2NTA0MQ==",
    "diff_hunk": "@@ -1059,27 +1077,38 @@ static UniValue ListReceived(const CWallet* const pwallet, const UniValue& param\n \n     bool has_filtered_address = false;\n     CTxDestination filtered_address = CNoDestination();\n-    if (!by_label && params.size() > 3) {\n+    if (!by_label && !params[3].isNull() && !params[3].get_str().empty()) {\n         if (!IsValidDestinationString(params[3].get_str())) {\n             throw JSONRPCError(RPC_WALLET_ERROR, \"address_filter parameter was invalid\");\n         }\n         filtered_address = DecodeDestination(params[3].get_str());\n         has_filtered_address = true;\n     }\n \n+    // getreceivedbyaddress has address filter at 3rd index, so next params index is 4\n+    // getreceivedbylabel has no filter parameter, so next params index is 3\n+    int next_index{by_label ? 3 : 4};\n+    bool include_immature{params[next_index].isNull() ? false : params[next_index].get_bool()};",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 80,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "f84ff8f98494eff2bcfac970c7eef1d1de5f4c51",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    bool include_immature{!params[next_index].isNull() && params[next_index].get_bool()};\r\n```",
    "created_at": "2020-12-31T00:35:09Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r550365041",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550365041"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r550365041"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550365041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1091,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550415068",
    "pull_request_review_id": 560202678,
    "id": 550415068,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQxNTA2OA==",
    "diff_hunk": "@@ -1059,27 +1077,38 @@ static UniValue ListReceived(const CWallet* const pwallet, const UniValue& param\n \n     bool has_filtered_address = false;\n     CTxDestination filtered_address = CNoDestination();\n-    if (!by_label && params.size() > 3) {\n+    if (!by_label && !params[3].isNull() && !params[3].get_str().empty()) {\n         if (!IsValidDestinationString(params[3].get_str())) {\n             throw JSONRPCError(RPC_WALLET_ERROR, \"address_filter parameter was invalid\");\n         }\n         filtered_address = DecodeDestination(params[3].get_str());\n         has_filtered_address = true;\n     }\n \n+    // getreceivedbyaddress has address filter at 3rd index, so next params index is 4\n+    // getreceivedbylabel has no filter parameter, so next params index is 3\n+    int next_index{by_label ? 3 : 4};\n+    bool include_immature{params[next_index].isNull() ? false : params[next_index].get_bool()};\n+\n+    // Filtering out coinbase outputs is deprecated\n+    // It can be enabled by setting deprecatedrpc=filter_coinbase\n+    bool filter_coinbase{pwallet->chain().rpcEnableDeprecated(\"filter_coinbase\")};\n+\n     // Tally\n     std::map<CTxDestination, tallyitem> mapTally;\n     for (const std::pair<const uint256, CWalletTx>& pairWtx : pwallet->mapWallet) {\n         const CWalletTx& wtx = pairWtx.second;\n \n-        if (wtx.IsCoinBase() || !pwallet->chain().checkFinalTx(*wtx.tx)) {\n-            continue;\n-        }\n-\n         int nDepth = wtx.GetDepthInMainChain();\n         if (nDepth < nMinDepth)\n             continue;\n \n+        // Coinbase with less than 1 confirmation is an orphan\n+        if ((wtx.IsCoinBase() && (nDepth < 1 || filter_coinbase))\n+            || (!include_immature && wtx.IsImmatureCoinBase())\n+            || !pwallet->chain().checkFinalTx(*wtx.tx))\n+            continue;",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 112,
    "original_position": 103,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "f84ff8f98494eff2bcfac970c7eef1d1de5f4c51",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Consider enclosing the `continue;` within braces? I'm aware they weren't there previously, but when the condition becomes multi-line, perhaps they help with readability.",
    "created_at": "2020-12-31T07:14:21Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r550415068",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550415068"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r550415068"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550415068/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1124,
    "original_line": 1124,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566326563",
    "pull_request_review_id": 578636778,
    "id": 566326563,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjMyNjU2Mw==",
    "diff_hunk": "@@ -4578,8 +4610,8 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"listaddressgroupings\",             &listaddressgroupings,          {} },\n     { \"wallet\",             \"listlabels\",                       &listlabels,                    {\"purpose\"} },\n     { \"wallet\",             \"listlockunspent\",                  &listlockunspent,               {} },\n-    { \"wallet\",             \"listreceivedbyaddress\",            &listreceivedbyaddress,         {\"minconf\",\"include_empty\",\"include_watchonly\",\"address_filter\"} },\n-    { \"wallet\",             \"listreceivedbylabel\",              &listreceivedbylabel,           {\"minconf\",\"include_empty\",\"include_watchonly\"} },\n+    { \"wallet\",             \"listreceivedbyaddress\",            &listreceivedbyaddress,         {\"minconf\",\"include_empty\",\"include_watchonly\",\"address_filter\",\"include_immature\"} },\n+    { \"wallet\",             \"listreceivedbylabel\",              &listreceivedbylabel,           {\"minconf\",\"include_empty\",\"include_watchonly\",\"include_immature\"} },",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 162,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "f84ff8f98494eff2bcfac970c7eef1d1de5f4c51",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "can remove the diff in `commands`, and then rebase",
    "created_at": "2021-01-28T18:45:10Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r566326563",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566326563"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r566326563"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/566326563/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4614,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575522234",
    "pull_request_review_id": 589840068,
    "id": 575522234,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTUyMjIzNA==",
    "diff_hunk": "@@ -1059,27 +1077,38 @@ static UniValue ListReceived(const CWallet* const pwallet, const UniValue& param\n \n     bool has_filtered_address = false;\n     CTxDestination filtered_address = CNoDestination();\n-    if (!by_label && params.size() > 3) {\n+    if (!by_label && !params[3].isNull() && !params[3].get_str().empty()) {\n         if (!IsValidDestinationString(params[3].get_str())) {\n             throw JSONRPCError(RPC_WALLET_ERROR, \"address_filter parameter was invalid\");\n         }\n         filtered_address = DecodeDestination(params[3].get_str());\n         has_filtered_address = true;\n     }\n \n+    // getreceivedbyaddress has address filter at 3rd index, so next params index is 4\n+    // getreceivedbylabel has no filter parameter, so next params index is 3\n+    int next_index{by_label ? 3 : 4};\n+    bool include_immature{params[next_index].isNull() ? false : params[next_index].get_bool()};\n+\n+    // Filtering out coinbase outputs is deprecated\n+    // It can be enabled by setting deprecatedrpc=filter_coinbase\n+    bool filter_coinbase{pwallet->chain().rpcEnableDeprecated(\"filter_coinbase\")};\n+\n     // Tally\n     std::map<CTxDestination, tallyitem> mapTally;\n     for (const std::pair<const uint256, CWalletTx>& pairWtx : pwallet->mapWallet) {\n         const CWalletTx& wtx = pairWtx.second;\n \n-        if (wtx.IsCoinBase() || !pwallet->chain().checkFinalTx(*wtx.tx)) {\n-            continue;\n-        }\n-\n         int nDepth = wtx.GetDepthInMainChain();\n         if (nDepth < nMinDepth)\n             continue;\n \n+        // Coinbase with less than 1 confirmation is an orphan\n+        if ((wtx.IsCoinBase() && (nDepth < 1 || filter_coinbase))\n+            || (!include_immature && wtx.IsImmatureCoinBase())\n+            || !pwallet->chain().checkFinalTx(*wtx.tx))\n+            continue;",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 112,
    "original_position": 103,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "f84ff8f98494eff2bcfac970c7eef1d1de5f4c51",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks for the review! I've updated with your suggestions along with the latest rebase.",
    "created_at": "2021-02-12T21:12:51Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r575522234",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575522234"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r575522234"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575522234/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1124,
    "original_line": 1124,
    "side": "RIGHT",
    "in_reply_to_id": 550415068
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575522327",
    "pull_request_review_id": 589840189,
    "id": 575522327,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTUyMjMyNw==",
    "diff_hunk": "@@ -4578,8 +4610,8 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"listaddressgroupings\",             &listaddressgroupings,          {} },\n     { \"wallet\",             \"listlabels\",                       &listlabels,                    {\"purpose\"} },\n     { \"wallet\",             \"listlockunspent\",                  &listlockunspent,               {} },\n-    { \"wallet\",             \"listreceivedbyaddress\",            &listreceivedbyaddress,         {\"minconf\",\"include_empty\",\"include_watchonly\",\"address_filter\"} },\n-    { \"wallet\",             \"listreceivedbylabel\",              &listreceivedbylabel,           {\"minconf\",\"include_empty\",\"include_watchonly\"} },\n+    { \"wallet\",             \"listreceivedbyaddress\",            &listreceivedbyaddress,         {\"minconf\",\"include_empty\",\"include_watchonly\",\"address_filter\",\"include_immature\"} },\n+    { \"wallet\",             \"listreceivedbylabel\",              &listreceivedbylabel,           {\"minconf\",\"include_empty\",\"include_watchonly\",\"include_immature\"} },",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 162,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "f84ff8f98494eff2bcfac970c7eef1d1de5f4c51",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done, thanks!",
    "created_at": "2021-02-12T21:13:05Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r575522327",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575522327"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r575522327"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/575522327/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4614,
    "side": "RIGHT",
    "in_reply_to_id": 566326563
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608200352",
    "pull_request_review_id": 629433964,
    "id": 608200352,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODIwMDM1Mg==",
    "diff_hunk": "@@ -1053,27 +1071,39 @@ static UniValue ListReceived(const CWallet& wallet, const UniValue& params, bool\n \n     bool has_filtered_address = false;\n     CTxDestination filtered_address = CNoDestination();\n-    if (!by_label && params.size() > 3) {\n+    if (!by_label && !params[3].isNull() && !params[3].get_str().empty()) {\n         if (!IsValidDestinationString(params[3].get_str())) {\n             throw JSONRPCError(RPC_WALLET_ERROR, \"address_filter parameter was invalid\");\n         }\n         filtered_address = DecodeDestination(params[3].get_str());\n         has_filtered_address = true;\n     }\n \n+    // getreceivedbyaddress has address filter at 3rd index, so next params index is 4\n+    // getreceivedbylabel has no filter parameter, so next params index is 3\n+    int next_index{by_label ? 3 : 4};\n+    bool include_immature{!params[next_index].isNull() && params[next_index].get_bool()};\n+\n+    // Filtering out coinbase outputs is deprecated\n+    // It can be enabled by setting deprecatedrpc=filter_coinbase\n+    bool filter_coinbase{pwallet->chain().rpcEnableDeprecated(\"filter_coinbase\")};",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 84,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "c7c662bf72e554dc4c88238637c75efdc7fee871",
    "user": {
      "login": "adamjonas",
      "id": 755825,
      "node_id": "MDQ6VXNlcjc1NTgyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamjonas",
      "html_url": "https://github.com/adamjonas",
      "followers_url": "https://api.github.com/users/adamjonas/followers",
      "following_url": "https://api.github.com/users/adamjonas/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamjonas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamjonas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
      "organizations_url": "https://api.github.com/users/adamjonas/orgs",
      "repos_url": "https://api.github.com/users/adamjonas/repos",
      "events_url": "https://api.github.com/users/adamjonas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamjonas/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "getting a compile error after the latest rebase: \r\n```\r\nwallet/rpcwallet.cpp:1089:26: error: use of undeclared identifier 'pwallet'\r\n    bool filter_coinbase{pwallet->chain().rpcEnableDeprecated(\"filter_coinbase\")};\r\n```\r\n\r\n```suggestion\r\n    bool filter_coinbase{wallet.chain().rpcEnableDeprecated(\"filter_coinbase\")};\r\n```",
    "created_at": "2021-04-06T21:43:08Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r608200352",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608200352"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r608200352"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608200352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1089,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608260966",
    "pull_request_review_id": 629504635,
    "id": 608260966,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODI2MDk2Ng==",
    "diff_hunk": "@@ -1053,27 +1071,39 @@ static UniValue ListReceived(const CWallet& wallet, const UniValue& params, bool\n \n     bool has_filtered_address = false;\n     CTxDestination filtered_address = CNoDestination();\n-    if (!by_label && params.size() > 3) {\n+    if (!by_label && !params[3].isNull() && !params[3].get_str().empty()) {\n         if (!IsValidDestinationString(params[3].get_str())) {\n             throw JSONRPCError(RPC_WALLET_ERROR, \"address_filter parameter was invalid\");\n         }\n         filtered_address = DecodeDestination(params[3].get_str());\n         has_filtered_address = true;\n     }\n \n+    // getreceivedbyaddress has address filter at 3rd index, so next params index is 4\n+    // getreceivedbylabel has no filter parameter, so next params index is 3\n+    int next_index{by_label ? 3 : 4};\n+    bool include_immature{!params[next_index].isNull() && params[next_index].get_bool()};\n+\n+    // Filtering out coinbase outputs is deprecated\n+    // It can be enabled by setting deprecatedrpc=filter_coinbase\n+    bool filter_coinbase{pwallet->chain().rpcEnableDeprecated(\"filter_coinbase\")};",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 84,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "c7c662bf72e554dc4c88238637c75efdc7fee871",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oof forgot to include that with the rebase. Thanks for checking!",
    "created_at": "2021-04-07T00:26:05Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r608260966",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608260966"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r608260966"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/608260966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1089,
    "side": "RIGHT",
    "in_reply_to_id": 608200352
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611000226",
    "pull_request_review_id": 632891855,
    "id": 611000226,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTAwMDIyNg==",
    "diff_hunk": "@@ -1053,27 +1071,39 @@ static UniValue ListReceived(const CWallet& wallet, const UniValue& params, bool\n \n     bool has_filtered_address = false;\n     CTxDestination filtered_address = CNoDestination();\n-    if (!by_label && params.size() > 3) {\n+    if (!by_label && !params[3].isNull() && !params[3].get_str().empty()) {\n         if (!IsValidDestinationString(params[3].get_str())) {\n             throw JSONRPCError(RPC_WALLET_ERROR, \"address_filter parameter was invalid\");\n         }\n         filtered_address = DecodeDestination(params[3].get_str());\n         has_filtered_address = true;\n     }\n \n+    // getreceivedbyaddress has address filter at 3rd index, so next params index is 4\n+    // getreceivedbylabel has no filter parameter, so next params index is 3",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 78,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In these two comments, should \"getreceivedby\" be \"listreceivedby\"?",
    "created_at": "2021-04-10T05:35:59Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r611000226",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611000226"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r611000226"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611000226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1083,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611001373",
    "pull_request_review_id": 632891855,
    "id": 611001373,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMTAwMTM3Mw==",
    "diff_hunk": "@@ -1189,6 +1219,7 @@ static RPCHelpMan listreceivedbyaddress()\n                     {\"include_empty\", RPCArg::Type::BOOL, /* default */ \"false\", \"Whether to include addresses that haven't received any payments.\"},\n                     {\"include_watchonly\", RPCArg::Type::BOOL, /* default */ \"true for watch-only wallets, otherwise false\", \"Whether to include watch-only addresses (see 'importaddress')\"},\n                     {\"address_filter\", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, \"If present, only return information on this address.\"},",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 112,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n                    {\"address_filter\", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, \"If present and nonempty, only return information on this address.\"},\r\n```\r\nThis matches the code and explains how to specify `include_immature` without having to specify an address filter.",
    "created_at": "2021-04-10T05:49:01Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r611001373",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611001373"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r611001373"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/611001373/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1223,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613127345",
    "pull_request_review_id": 635459387,
    "id": 613127345,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzEyNzM0NQ==",
    "diff_hunk": "@@ -671,11 +671,22 @@ static CAmount GetReceived(const CWallet& wallet, const UniValue& params, bool b\n     if (!params[1].isNull())\n         min_depth = params[1].get_int();\n \n+    bool include_immature{!params[2].isNull() && params[2].get_bool()};",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "All these new variables (both here and in `ListReceived()`) can be `const`.",
    "created_at": "2021-04-14T10:26:27Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613127345",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613127345"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613127345"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613127345/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 674,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613130541",
    "pull_request_review_id": 635459387,
    "id": 613130541,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzEzMDU0MQ==",
    "diff_hunk": "@@ -671,11 +671,22 @@ static CAmount GetReceived(const CWallet& wallet, const UniValue& params, bool b\n     if (!params[1].isNull())\n         min_depth = params[1].get_int();\n \n+    bool include_immature{!params[2].isNull() && params[2].get_bool()};\n+\n+    // Filtering out coinbase outputs is deprecated\n+    // It can be enabled by setting deprecatedrpc=filter_coinbase\n+    bool filter_coinbase{wallet.chain().rpcEnableDeprecated(\"filter_coinbase\")};\n+\n     // Tally\n     CAmount amount = 0;\n     for (const std::pair<const uint256, CWalletTx>& wtx_pair : wallet.mapWallet) {\n         const CWalletTx& wtx = wtx_pair.second;\n-        if (wtx.IsCoinBase() || !wallet.chain().checkFinalTx(*wtx.tx) || wtx.GetDepthInMainChain() < min_depth) {\n+        int depth{wtx.GetDepthInMainChain()};\n+        if (depth < min_depth\n+            // Coinbase with less than 1 confirmation is an orphan\n+            || (wtx.IsCoinBase() && (depth < 1 || filter_coinbase))\n+            || (!include_immature && wtx.IsImmatureCoinBase())",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Consistency helps readability. I think you can make this more consistent and readable as:\r\n\r\n```suggestion\r\n            || (wtx.IsCoinBase() && (depth < 1 || !include_coinbase))\r\n            || (wtx.IsImmatureCoinBase() && !include_immature_coinbase)\r\n```\r\n\r\n(where `include_coinbase = !(wallet.chain().rpcEnableDeprecated(\"filter_coinbase\"))`)",
    "created_at": "2021-04-14T10:31:30Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613130541",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613130541"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613130541"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613130541/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 687,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 688,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613130917",
    "pull_request_review_id": 635459387,
    "id": 613130917,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzEzMDkxNw==",
    "diff_hunk": "@@ -709,8 +721,11 @@ static RPCHelpMan getreceivedbyaddress()\n             + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0\") +\n             \"\\nThe amount with at least 6 confirmations\\n\"\n             + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 6\") +\n+            \"\\nThe amount with at least 6 confirmations including immature coinbase outputs\\n\"\n+            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 6 true\") +\n             \"\\nAs a JSON-RPC call\\n\"",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 42,
    "original_position": 38,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's odd that \"As a JSON-RPC call\" no longer refers to the example immediately above. I think only one JSON-RPC example is needed.",
    "created_at": "2021-04-14T10:32:14Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613130917",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613130917"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613130917"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613130917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 744,
    "original_line": 744,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613133600",
    "pull_request_review_id": 635459387,
    "id": 613133600,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzEzMzYwMA==",
    "diff_hunk": "@@ -1053,27 +1071,39 @@ static UniValue ListReceived(const CWallet& wallet, const UniValue& params, bool\n \n     bool has_filtered_address = false;\n     CTxDestination filtered_address = CNoDestination();\n-    if (!by_label && params.size() > 3) {\n+    if (!by_label && !params[3].isNull() && !params[3].get_str().empty()) {\n         if (!IsValidDestinationString(params[3].get_str())) {\n             throw JSONRPCError(RPC_WALLET_ERROR, \"address_filter parameter was invalid\");\n         }\n         filtered_address = DecodeDestination(params[3].get_str());\n         has_filtered_address = true;\n     }\n \n+    // getreceivedbyaddress has address filter at 3rd index, so next params index is 4\n+    // getreceivedbylabel has no filter parameter, so next params index is 3\n+    int next_index{by_label ? 3 : 4};\n+    bool include_immature{!params[next_index].isNull() && params[next_index].get_bool()};",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 80,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "C++ is a strongly typed language - we should use types in the function signatures to catch logic errors at compilation rather than pass through opaque structures.\r\n\r\nCan you update the function signature of `ListReceived()` to explicitly take the argument types?",
    "created_at": "2021-04-14T10:36:33Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613133600",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613133600"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613133600"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613133600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1084,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1085,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613134485",
    "pull_request_review_id": 635459387,
    "id": 613134485,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzEzNDQ4NQ==",
    "diff_hunk": "@@ -1053,27 +1071,39 @@ static UniValue ListReceived(const CWallet& wallet, const UniValue& params, bool\n \n     bool has_filtered_address = false;\n     CTxDestination filtered_address = CNoDestination();\n-    if (!by_label && params.size() > 3) {\n+    if (!by_label && !params[3].isNull() && !params[3].get_str().empty()) {\n         if (!IsValidDestinationString(params[3].get_str())) {\n             throw JSONRPCError(RPC_WALLET_ERROR, \"address_filter parameter was invalid\");\n         }\n         filtered_address = DecodeDestination(params[3].get_str());\n         has_filtered_address = true;\n     }\n \n+    // getreceivedbyaddress has address filter at 3rd index, so next params index is 4\n+    // getreceivedbylabel has no filter parameter, so next params index is 3\n+    int next_index{by_label ? 3 : 4};\n+    bool include_immature{!params[next_index].isNull() && params[next_index].get_bool()};\n+\n+    // Filtering out coinbase outputs is deprecated\n+    // It can be enabled by setting deprecatedrpc=filter_coinbase\n+    bool filter_coinbase{wallet.chain().rpcEnableDeprecated(\"filter_coinbase\")};",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 84,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Again, I think you should be consistent and either have `include_coinbase` and `include_immature_coinbase` or `exclude_coinbase` and `exclude_immature_coinbase` as variables.",
    "created_at": "2021-04-14T10:37:56Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613134485",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613134485"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613134485"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613134485/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1089,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613135391",
    "pull_request_review_id": 635459387,
    "id": 613135391,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzEzNTM5MQ==",
    "diff_hunk": "@@ -671,11 +671,22 @@ static CAmount GetReceived(const CWallet& wallet, const UniValue& params, bool b\n     if (!params[1].isNull())\n         min_depth = params[1].get_int();\n \n+    bool include_immature{!params[2].isNull() && params[2].get_bool()};\n+\n+    // Filtering out coinbase outputs is deprecated\n+    // It can be enabled by setting deprecatedrpc=filter_coinbase\n+    bool filter_coinbase{wallet.chain().rpcEnableDeprecated(\"filter_coinbase\")};\n+\n     // Tally\n     CAmount amount = 0;\n     for (const std::pair<const uint256, CWalletTx>& wtx_pair : wallet.mapWallet) {\n         const CWalletTx& wtx = wtx_pair.second;\n-        if (wtx.IsCoinBase() || !wallet.chain().checkFinalTx(*wtx.tx) || wtx.GetDepthInMainChain() < min_depth) {\n+        int depth{wtx.GetDepthInMainChain()};\n+        if (depth < min_depth\n+            // Coinbase with less than 1 confirmation is an orphan",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\"orphan\" is a very overloaded word, and I don't think it's correct here. I think you're trying to say that the coinbase transaction has been conflicted out of the main chain?",
    "created_at": "2021-04-14T10:39:30Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613135391",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613135391"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613135391"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613135391/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 686,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613137332",
    "pull_request_review_id": 635459387,
    "id": 613137332,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzEzNzMzMg==",
    "diff_hunk": "@@ -671,11 +671,22 @@ static CAmount GetReceived(const CWallet& wallet, const UniValue& params, bool b\n     if (!params[1].isNull())\n         min_depth = params[1].get_int();\n \n+    bool include_immature{!params[2].isNull() && params[2].get_bool()};\n+\n+    // Filtering out coinbase outputs is deprecated\n+    // It can be enabled by setting deprecatedrpc=filter_coinbase",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 7,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "perhaps s/filter_coinbase/exclude_coinbase/ is more explicit.",
    "created_at": "2021-04-14T10:42:39Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613137332",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613137332"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613137332"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613137332/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 677,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613138985",
    "pull_request_review_id": 635459387,
    "id": 613138985,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzEzODk4NQ==",
    "diff_hunk": "@@ -167,5 +169,117 @@ def run_test(self):\n         balance = self.nodes[1].getreceivedbylabel(\"mynewlabel\")\n         assert_equal(balance, Decimal(\"0.0\"))\n \n+        self.run_include_coinbase_test()",
    "path": "test/functional/wallet_listreceivedby.py",
    "position": null,
    "original_position": 20,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't see much benefit in splitting this out into a separate function, unless you also restructure the `run_test()` function to be:\r\n\r\n```python\r\n    def run_test(self):\r\n        self.run_listbyreceived_test()\r\n        self.run_include_coinbase_test()\r\n```",
    "created_at": "2021-04-14T10:45:27Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613138985",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613138985"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613138985"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613138985/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 172,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613139846",
    "pull_request_review_id": 635459387,
    "id": 613139846,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzEzOTg0Ng==",
    "diff_hunk": "@@ -167,5 +169,117 @@ def run_test(self):\n         balance = self.nodes[1].getreceivedbylabel(\"mynewlabel\")\n         assert_equal(balance, Decimal(\"0.0\"))\n \n+        self.run_include_coinbase_test()\n+\n+    def run_include_coinbase_test(self):\n+        # Generate block reward to address with label\n+        label = \"label\"\n+        address = self.nodes[0].getnewaddress(label)\n+\n+        reward = Decimal(\"25\")\n+        self.nodes[0].generatetoaddress(1, address)\n+        hash = self.nodes[0].getbestblockhash()\n+\n+        self.log.info(\"getreceivedbyaddress returns nothing with defaults\")\n+        balance = self.nodes[0].getreceivedbyaddress(address)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbyaddress returns block reward when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbyaddress(address=address, include_immature=True)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"getreceivedbylabel returns nothing with defaults\")\n+        balance = self.nodes[0].getreceivedbylabel(\"label\")\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel returns block reward when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbylabel(label=\"label\", include_immature=True)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"listreceivedbyaddress does not include address with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbyaddress includes address when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(minconf=1, include_immature=True),\n+                            {\"address\": address},\n+                            {\"address\": address, \"amount\": reward})\n+\n+        self.log.info(\"listreceivedbylabel does not include label with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel includes label when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(minconf=1, include_immature=True),\n+                            {\"label\": label},\n+                            {\"label\": label, \"amount\": reward})\n+\n+        self.log.info(\"Generate 100 more blocks\")\n+        self.nodes[0].generate(100)\n+\n+        self.log.info(\"getreceivedbyaddress returns reward with defaults\")\n+        balance = self.nodes[0].getreceivedbyaddress(address)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"getreceivedbylabel returns reward with defaults\")\n+        balance = self.nodes[0].getreceivedbylabel(\"label\")\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"listreceivedbyaddress includes address with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {\"address\": address, \"amount\": reward})\n+\n+        self.log.info(\"listreceivedbylabel includes label with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {\"label\": label, \"amount\": reward})\n+\n+        self.log.info(\"Orphan block that paid to address\")",
    "path": "test/functional/wallet_listreceivedby.py",
    "position": null,
    "original_position": 88,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\"Orphan\" is wrong here. Perhaps \"Invalidate\".\r\n\r\n(also update references to 'orphan' below)",
    "created_at": "2021-04-14T10:46:53Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613139846",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613139846"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613139846"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613139846/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 240,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613140723",
    "pull_request_review_id": 635459387,
    "id": 613140723,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzE0MDcyMw==",
    "diff_hunk": "@@ -167,5 +169,117 @@ def run_test(self):\n         balance = self.nodes[1].getreceivedbylabel(\"mynewlabel\")\n         assert_equal(balance, Decimal(\"0.0\"))\n \n+        self.run_include_coinbase_test()\n+\n+    def run_include_coinbase_test(self):\n+        # Generate block reward to address with label\n+        label = \"label\"\n+        address = self.nodes[0].getnewaddress(label)\n+\n+        reward = Decimal(\"25\")\n+        self.nodes[0].generatetoaddress(1, address)\n+        hash = self.nodes[0].getbestblockhash()\n+\n+        self.log.info(\"getreceivedbyaddress returns nothing with defaults\")\n+        balance = self.nodes[0].getreceivedbyaddress(address)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbyaddress returns block reward when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbyaddress(address=address, include_immature=True)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"getreceivedbylabel returns nothing with defaults\")\n+        balance = self.nodes[0].getreceivedbylabel(\"label\")\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel returns block reward when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbylabel(label=\"label\", include_immature=True)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"listreceivedbyaddress does not include address with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbyaddress includes address when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(minconf=1, include_immature=True),\n+                            {\"address\": address},\n+                            {\"address\": address, \"amount\": reward})\n+\n+        self.log.info(\"listreceivedbylabel does not include label with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel includes label when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(minconf=1, include_immature=True),\n+                            {\"label\": label},\n+                            {\"label\": label, \"amount\": reward})\n+\n+        self.log.info(\"Generate 100 more blocks\")\n+        self.nodes[0].generate(100)\n+\n+        self.log.info(\"getreceivedbyaddress returns reward with defaults\")\n+        balance = self.nodes[0].getreceivedbyaddress(address)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"getreceivedbylabel returns reward with defaults\")\n+        balance = self.nodes[0].getreceivedbylabel(\"label\")\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"listreceivedbyaddress includes address with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {\"address\": address, \"amount\": reward})\n+\n+        self.log.info(\"listreceivedbylabel includes label with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {\"label\": label, \"amount\": reward})\n+\n+        self.log.info(\"Orphan block that paid to address\")\n+        self.nodes[0].invalidateblock(hash)\n+\n+        self.log.info(\"getreceivedbyaddress does not include orphan when minconf is 0 when including immature\")\n+        balance = self.nodes[0].getreceivedbyaddress(address=address, minconf=0, include_immature=True)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel does not include orphan when minconf is 0 when including immature\")\n+        balance = self.nodes[0].getreceivedbylabel(label=\"label\", minconf=0, include_immature=True)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"listreceivedbyaddress does not include orphan when minconf is 0 when including immature\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(minconf=0, include_immature=True),\n+                            {\"address\": address},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel does not include orphan when minconf is 0 when including immature\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(minconf=0, include_immature=True),\n+                            {\"label\": label},\n+                            {}, True)\n+\n+\n+        self.log.info(\"Generate 101 blocks to node with deprecated filter_coinbase\")\n+        address = self.nodes[1].getnewaddress(label)",
    "path": "test/functional/wallet_listreceivedby.py",
    "position": null,
    "original_position": 111,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "maybe use a new variable name `address2` here?",
    "created_at": "2021-04-14T10:48:24Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613140723",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613140723"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613140723"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613140723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 263,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613141273",
    "pull_request_review_id": 635459387,
    "id": 613141273,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzE0MTI3Mw==",
    "diff_hunk": "@@ -0,0 +1,17 @@\n+Wallet `receivedby` RPCs now include coinbase transactions\n+-------------\n+\n+Previously, the following wallet RPCs incorrectly filtered out coinbase transactions:",
    "path": "doc/release-notes-14707.md",
    "position": null,
    "original_position": 4,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\nPreviously, the following wallet RPCs excluded coinbase transactions:\r\n```",
    "created_at": "2021-04-14T10:49:12Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613141273",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613141273"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613141273"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613141273/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613141380",
    "pull_request_review_id": 635459387,
    "id": 613141380,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzE0MTM4MA==",
    "diff_hunk": "@@ -0,0 +1,17 @@\n+Wallet `receivedby` RPCs now include coinbase transactions\n+-------------\n+\n+Previously, the following wallet RPCs incorrectly filtered out coinbase transactions:\n+\n+`getreceivedbyaddress`\n+\n+`getreceivedbylabel`\n+\n+`listreceivedbyaddress`\n+\n+`listreceivedbylabel`\n+\n+This release corrects this behaviour and returns results accounting for received coins from coinbase outputs.",
    "path": "doc/release-notes-14707.md",
    "position": null,
    "original_position": 14,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\nThis release changes this behaviour and returns results accounting for received coins from coinbase outputs.\r\n```",
    "created_at": "2021-04-14T10:49:24Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613141380",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613141380"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613141380"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613141380/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 14,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613142059",
    "pull_request_review_id": 635459387,
    "id": 613142059,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzE0MjA1OQ==",
    "diff_hunk": "@@ -0,0 +1,17 @@\n+Wallet `receivedby` RPCs now include coinbase transactions\n+-------------\n+\n+Previously, the following wallet RPCs incorrectly filtered out coinbase transactions:\n+\n+`getreceivedbyaddress`\n+\n+`getreceivedbylabel`\n+\n+`listreceivedbyaddress`\n+\n+`listreceivedbylabel`\n+\n+This release corrects this behaviour and returns results accounting for received coins from coinbase outputs.\n+\n+A new option, `include_immature` (default=`false`), determines whether to account for immature coinbase transactions.\n+Immature coinbase transactions are coinbase transactions that have 100 or fewer confirmations, and are not spendable.",
    "path": "doc/release-notes-14707.md",
    "position": 17,
    "original_position": 17,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this should also document the `deprecatedrpc=filter_coinbase` (or `deprecatedrpc=exclude_coinbase` if you rename it) config option, including that the intention is to remove it after some time.",
    "created_at": "2021-04-14T10:50:37Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613142059",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613142059"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613142059"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613142059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 17,
    "original_line": 17,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613142629",
    "pull_request_review_id": 635459387,
    "id": 613142629,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzE0MjYyOQ==",
    "diff_hunk": "@@ -698,6 +709,7 @@ static RPCHelpMan getreceivedbyaddress()\n                 {\n                     {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The bitcoin address for transactions.\"},\n                     {\"minconf\", RPCArg::Type::NUM, /* default */ \"1\", \"Only include transactions confirmed at least this many times.\"},\n+                    {\"include_immature\", RPCArg::Type::BOOL, /* default */ \"false\", \"Include immature coinbase transactions.\"},",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should this and the other updated RPCs throw if a user supplies `include_immature=true` and `deprecatedrpc=filter_coinbase` is set. That would be inconsistent.",
    "created_at": "2021-04-14T10:51:31Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613142629",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613142629"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613142629"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613142629/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 712,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613143023",
    "pull_request_review_id": 635459387,
    "id": 613143023,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzE0MzAyMw==",
    "diff_hunk": "@@ -167,5 +169,117 @@ def run_test(self):\n         balance = self.nodes[1].getreceivedbylabel(\"mynewlabel\")\n         assert_equal(balance, Decimal(\"0.0\"))\n \n+        self.run_include_coinbase_test()\n+\n+    def run_include_coinbase_test(self):\n+        # Generate block reward to address with label\n+        label = \"label\"\n+        address = self.nodes[0].getnewaddress(label)\n+\n+        reward = Decimal(\"25\")\n+        self.nodes[0].generatetoaddress(1, address)\n+        hash = self.nodes[0].getbestblockhash()\n+\n+        self.log.info(\"getreceivedbyaddress returns nothing with defaults\")\n+        balance = self.nodes[0].getreceivedbyaddress(address)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbyaddress returns block reward when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbyaddress(address=address, include_immature=True)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"getreceivedbylabel returns nothing with defaults\")\n+        balance = self.nodes[0].getreceivedbylabel(\"label\")\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel returns block reward when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbylabel(label=\"label\", include_immature=True)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"listreceivedbyaddress does not include address with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbyaddress includes address when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(minconf=1, include_immature=True),\n+                            {\"address\": address},\n+                            {\"address\": address, \"amount\": reward})\n+\n+        self.log.info(\"listreceivedbylabel does not include label with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel includes label when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(minconf=1, include_immature=True),\n+                            {\"label\": label},\n+                            {\"label\": label, \"amount\": reward})\n+\n+        self.log.info(\"Generate 100 more blocks\")\n+        self.nodes[0].generate(100)\n+\n+        self.log.info(\"getreceivedbyaddress returns reward with defaults\")\n+        balance = self.nodes[0].getreceivedbyaddress(address)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"getreceivedbylabel returns reward with defaults\")\n+        balance = self.nodes[0].getreceivedbylabel(\"label\")\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"listreceivedbyaddress includes address with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {\"address\": address, \"amount\": reward})\n+\n+        self.log.info(\"listreceivedbylabel includes label with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {\"label\": label, \"amount\": reward})\n+\n+        self.log.info(\"Orphan block that paid to address\")\n+        self.nodes[0].invalidateblock(hash)\n+\n+        self.log.info(\"getreceivedbyaddress does not include orphan when minconf is 0 when including immature\")\n+        balance = self.nodes[0].getreceivedbyaddress(address=address, minconf=0, include_immature=True)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel does not include orphan when minconf is 0 when including immature\")\n+        balance = self.nodes[0].getreceivedbylabel(label=\"label\", minconf=0, include_immature=True)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"listreceivedbyaddress does not include orphan when minconf is 0 when including immature\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(minconf=0, include_immature=True),\n+                            {\"address\": address},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel does not include orphan when minconf is 0 when including immature\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(minconf=0, include_immature=True),\n+                            {\"label\": label},\n+                            {}, True)\n+\n+\n+        self.log.info(\"Generate 101 blocks to node with deprecated filter_coinbase\")\n+        address = self.nodes[1].getnewaddress(label)\n+        self.nodes[1].generatetoaddress(101, address)\n+\n+        self.log.info(\"getreceivedbyaddress returns nothing when filtering coinbase\")\n+        balance = self.nodes[1].getreceivedbyaddress(address)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel returns nothing when filtering coinbase\")\n+        balance = self.nodes[1].getreceivedbylabel(\"label\")\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"listreceivedbyaddress does not include address when filtering coinbase\")\n+        assert_array_result(self.nodes[1].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel does not include label when filtering coinbase\")\n+        assert_array_result(self.nodes[1].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {}, True)\n+",
    "path": "test/functional/wallet_listreceivedby.py",
    "position": 132,
    "original_position": 131,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See the above comment about `include_immature` and `\"-deprecatedrpc=filter_coinbase\"`. Perhaps add a test for that combination?",
    "created_at": "2021-04-14T10:52:15Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613143023",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613143023"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613143023"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613143023/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 282,
    "original_line": 282,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613143275",
    "pull_request_review_id": 635459387,
    "id": 613143275,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzE0MzI3NQ==",
    "diff_hunk": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers",
    "path": "test/functional/wallet_listreceivedby.py",
    "position": null,
    "original_position": 3,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No need to update this. They get updated automatically every year.",
    "created_at": "2021-04-14T10:52:39Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613143275",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613143275"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613143275"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613143275/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613261451",
    "pull_request_review_id": 635638779,
    "id": 613261451,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzI2MTQ1MQ==",
    "diff_hunk": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the listreceivedbyaddress RPC.\"\"\"",
    "path": "test/functional/wallet_listreceivedby.py",
    "position": null,
    "original_position": 6,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "May want to update this comment to reflect the test expansion",
    "created_at": "2021-04-14T13:46:16Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613261451",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613261451"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613261451"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613261451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 5,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613293127",
    "pull_request_review_id": 635638779,
    "id": 613293127,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzI5MzEyNw==",
    "diff_hunk": "@@ -671,11 +671,22 @@ static CAmount GetReceived(const CWallet& wallet, const UniValue& params, bool b\n     if (!params[1].isNull())\n         min_depth = params[1].get_int();\n \n+    bool include_immature{!params[2].isNull() && params[2].get_bool()};\n+\n+    // Filtering out coinbase outputs is deprecated\n+    // It can be enabled by setting deprecatedrpc=filter_coinbase\n+    bool filter_coinbase{wallet.chain().rpcEnableDeprecated(\"filter_coinbase\")};\n+\n     // Tally\n     CAmount amount = 0;\n     for (const std::pair<const uint256, CWalletTx>& wtx_pair : wallet.mapWallet) {\n         const CWalletTx& wtx = wtx_pair.second;\n-        if (wtx.IsCoinBase() || !wallet.chain().checkFinalTx(*wtx.tx) || wtx.GetDepthInMainChain() < min_depth) {\n+        int depth{wtx.GetDepthInMainChain()};\n+        if (depth < min_depth\n+            // Coinbase with less than 1 confirmation is an orphan\n+            || (wtx.IsCoinBase() && (depth < 1 || filter_coinbase))\n+            || (!include_immature && wtx.IsImmatureCoinBase())\n+            || !wallet.chain().checkFinalTx(*wtx.tx)) {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 24,
    "original_position": 20,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I expect this refers to outputs that we can't spend yet because a timelock hasn't been met. If a user wants to include immature coinbases, might they want to include nonfinal ones too? I understand that `include_immature` is supposed to be only for immature coinbases but I think a user might find it more helpful to be able to configure spendability in general rather than just for coinbases",
    "created_at": "2021-04-14T14:22:29Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613293127",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613293127"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613293127"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613293127/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 707,
    "original_line": 707,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613298269",
    "pull_request_review_id": 635638779,
    "id": 613298269,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzI5ODI2OQ==",
    "diff_hunk": "@@ -167,5 +169,117 @@ def run_test(self):\n         balance = self.nodes[1].getreceivedbylabel(\"mynewlabel\")\n         assert_equal(balance, Decimal(\"0.0\"))\n \n+        self.run_include_coinbase_test()\n+\n+    def run_include_coinbase_test(self):\n+        # Generate block reward to address with label\n+        label = \"label\"\n+        address = self.nodes[0].getnewaddress(label)\n+\n+        reward = Decimal(\"25\")\n+        self.nodes[0].generatetoaddress(1, address)\n+        hash = self.nodes[0].getbestblockhash()\n+\n+        self.log.info(\"getreceivedbyaddress returns nothing with defaults\")\n+        balance = self.nodes[0].getreceivedbyaddress(address)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbyaddress returns block reward when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbyaddress(address=address, include_immature=True)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"getreceivedbylabel returns nothing with defaults\")\n+        balance = self.nodes[0].getreceivedbylabel(\"label\")\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel returns block reward when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbylabel(label=\"label\", include_immature=True)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"listreceivedbyaddress does not include address with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbyaddress includes address when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(minconf=1, include_immature=True),\n+                            {\"address\": address},\n+                            {\"address\": address, \"amount\": reward})\n+\n+        self.log.info(\"listreceivedbylabel does not include label with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel includes label when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(minconf=1, include_immature=True),\n+                            {\"label\": label},\n+                            {\"label\": label, \"amount\": reward})\n+\n+        self.log.info(\"Generate 100 more blocks\")\n+        self.nodes[0].generate(100)\n+\n+        self.log.info(\"getreceivedbyaddress returns reward with defaults\")\n+        balance = self.nodes[0].getreceivedbyaddress(address)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"getreceivedbylabel returns reward with defaults\")\n+        balance = self.nodes[0].getreceivedbylabel(\"label\")\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"listreceivedbyaddress includes address with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {\"address\": address, \"amount\": reward})\n+\n+        self.log.info(\"listreceivedbylabel includes label with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {\"label\": label, \"amount\": reward})\n+\n+        self.log.info(\"Orphan block that paid to address\")\n+        self.nodes[0].invalidateblock(hash)\n+\n+        self.log.info(\"getreceivedbyaddress does not include orphan when minconf is 0 when including immature\")\n+        balance = self.nodes[0].getreceivedbyaddress(address=address, minconf=0, include_immature=True)",
    "path": "test/functional/wallet_listreceivedby.py",
    "position": null,
    "original_position": 92,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Question: What happens if a user puts `-spendzeroconfchange=0` (it's True by default, right?) and then calls `getreceivedbyaddress(minconf=0)`?",
    "created_at": "2021-04-14T14:28:08Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613298269",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613298269"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613298269"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613298269/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 244,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613361681",
    "pull_request_review_id": 635774664,
    "id": 613361681,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzM2MTY4MQ==",
    "diff_hunk": "@@ -0,0 +1,17 @@\n+Wallet `receivedby` RPCs now include coinbase transactions\n+-------------\n+\n+Previously, the following wallet RPCs incorrectly filtered out coinbase transactions:",
    "path": "doc/release-notes-14707.md",
    "position": null,
    "original_position": 4,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree that \"filter\" isn't the best term, because it's _slightly_ ambiguous. Maybe it's just me, but while it _probably_ means \"exclude\", it could possibly mean \"include\".",
    "created_at": "2021-04-14T15:40:14Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613361681",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613361681"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613361681"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613361681/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4,
    "side": "RIGHT",
    "in_reply_to_id": 613141273
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613366384",
    "pull_request_review_id": 635774664,
    "id": 613366384,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMzM2NjM4NA==",
    "diff_hunk": "@@ -671,11 +671,22 @@ static CAmount GetReceived(const CWallet& wallet, const UniValue& params, bool b\n     if (!params[1].isNull())\n         min_depth = params[1].get_int();\n \n+    bool include_immature{!params[2].isNull() && params[2].get_bool()};\n+\n+    // Filtering out coinbase outputs is deprecated\n+    // It can be enabled by setting deprecatedrpc=filter_coinbase\n+    bool filter_coinbase{wallet.chain().rpcEnableDeprecated(\"filter_coinbase\")};\n+\n     // Tally\n     CAmount amount = 0;\n     for (const std::pair<const uint256, CWalletTx>& wtx_pair : wallet.mapWallet) {\n         const CWalletTx& wtx = wtx_pair.second;\n-        if (wtx.IsCoinBase() || !wallet.chain().checkFinalTx(*wtx.tx) || wtx.GetDepthInMainChain() < min_depth) {\n+        int depth{wtx.GetDepthInMainChain()};\n+        if (depth < min_depth\n+            // Coinbase with less than 1 confirmation is an orphan\n+            || (wtx.IsCoinBase() && (depth < 1 || filter_coinbase))\n+            || (!include_immature && wtx.IsImmatureCoinBase())",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "LarryRuane",
      "id": 8321330,
      "node_id": "MDQ6VXNlcjgzMjEzMzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LarryRuane",
      "html_url": "https://github.com/LarryRuane",
      "followers_url": "https://api.github.com/users/LarryRuane/followers",
      "following_url": "https://api.github.com/users/LarryRuane/following{/other_user}",
      "gists_url": "https://api.github.com/users/LarryRuane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
      "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
      "repos_url": "https://api.github.com/users/LarryRuane/repos",
      "events_url": "https://api.github.com/users/LarryRuane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Another idea, this logic is close to that added to `ListReceived()` further down in this file; have you considered refactoring this logic into a separate small function? This may make the logic unit-testable, but may not be worth it.",
    "created_at": "2021-04-14T15:45:51Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613366384",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613366384"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r613366384"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/613366384/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 687,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 688,
    "side": "RIGHT",
    "in_reply_to_id": 613130541
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616105633",
    "pull_request_review_id": 639215666,
    "id": 616105633,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjEwNTYzMw==",
    "diff_hunk": "@@ -1053,27 +1071,39 @@ static UniValue ListReceived(const CWallet& wallet, const UniValue& params, bool\n \n     bool has_filtered_address = false;\n     CTxDestination filtered_address = CNoDestination();\n-    if (!by_label && params.size() > 3) {\n+    if (!by_label && !params[3].isNull() && !params[3].get_str().empty()) {\n         if (!IsValidDestinationString(params[3].get_str())) {\n             throw JSONRPCError(RPC_WALLET_ERROR, \"address_filter parameter was invalid\");\n         }\n         filtered_address = DecodeDestination(params[3].get_str());\n         has_filtered_address = true;\n     }\n \n+    // getreceivedbyaddress has address filter at 3rd index, so next params index is 4\n+    // getreceivedbylabel has no filter parameter, so next params index is 3",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 78,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "These lines were removed in the latest push.",
    "created_at": "2021-04-19T19:04:41Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r616105633",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616105633"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r616105633"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616105633/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1083,
    "side": "RIGHT",
    "in_reply_to_id": 611000226
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616108283",
    "pull_request_review_id": 639217763,
    "id": 616108283,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjEwODI4Mw==",
    "diff_hunk": "@@ -671,11 +671,22 @@ static CAmount GetReceived(const CWallet& wallet, const UniValue& params, bool b\n     if (!params[1].isNull())\n         min_depth = params[1].get_int();\n \n+    bool include_immature{!params[2].isNull() && params[2].get_bool()};\n+\n+    // Filtering out coinbase outputs is deprecated\n+    // It can be enabled by setting deprecatedrpc=filter_coinbase\n+    bool filter_coinbase{wallet.chain().rpcEnableDeprecated(\"filter_coinbase\")};\n+\n     // Tally\n     CAmount amount = 0;\n     for (const std::pair<const uint256, CWalletTx>& wtx_pair : wallet.mapWallet) {\n         const CWalletTx& wtx = wtx_pair.second;\n-        if (wtx.IsCoinBase() || !wallet.chain().checkFinalTx(*wtx.tx) || wtx.GetDepthInMainChain() < min_depth) {\n+        int depth{wtx.GetDepthInMainChain()};\n+        if (depth < min_depth\n+            // Coinbase with less than 1 confirmation is an orphan\n+            || (wtx.IsCoinBase() && (depth < 1 || filter_coinbase))\n+            || (!include_immature && wtx.IsImmatureCoinBase())\n+            || !wallet.chain().checkFinalTx(*wtx.tx)) {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 24,
    "original_position": 20,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I thought this was an interesting idea. However, while implementing and trying to write a test, I was unable to broadcast a non-final tx (rejected with `non-final`). Do you know any way that a wallet would be able to have a non-final tx? If not, then it's possible this check is unnecessary and can be removed.",
    "created_at": "2021-04-19T19:07:30Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r616108283",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616108283"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r616108283"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616108283/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 707,
    "original_line": 707,
    "side": "RIGHT",
    "in_reply_to_id": 613293127
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616112613",
    "pull_request_review_id": 639223439,
    "id": 616112613,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjExMjYxMw==",
    "diff_hunk": "@@ -167,5 +169,117 @@ def run_test(self):\n         balance = self.nodes[1].getreceivedbylabel(\"mynewlabel\")\n         assert_equal(balance, Decimal(\"0.0\"))\n \n+        self.run_include_coinbase_test()\n+\n+    def run_include_coinbase_test(self):\n+        # Generate block reward to address with label\n+        label = \"label\"\n+        address = self.nodes[0].getnewaddress(label)\n+\n+        reward = Decimal(\"25\")\n+        self.nodes[0].generatetoaddress(1, address)\n+        hash = self.nodes[0].getbestblockhash()\n+\n+        self.log.info(\"getreceivedbyaddress returns nothing with defaults\")\n+        balance = self.nodes[0].getreceivedbyaddress(address)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbyaddress returns block reward when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbyaddress(address=address, include_immature=True)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"getreceivedbylabel returns nothing with defaults\")\n+        balance = self.nodes[0].getreceivedbylabel(\"label\")\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel returns block reward when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbylabel(label=\"label\", include_immature=True)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"listreceivedbyaddress does not include address with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbyaddress includes address when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(minconf=1, include_immature=True),\n+                            {\"address\": address},\n+                            {\"address\": address, \"amount\": reward})\n+\n+        self.log.info(\"listreceivedbylabel does not include label with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel includes label when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(minconf=1, include_immature=True),\n+                            {\"label\": label},\n+                            {\"label\": label, \"amount\": reward})\n+\n+        self.log.info(\"Generate 100 more blocks\")\n+        self.nodes[0].generate(100)\n+\n+        self.log.info(\"getreceivedbyaddress returns reward with defaults\")\n+        balance = self.nodes[0].getreceivedbyaddress(address)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"getreceivedbylabel returns reward with defaults\")\n+        balance = self.nodes[0].getreceivedbylabel(\"label\")\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"listreceivedbyaddress includes address with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {\"address\": address, \"amount\": reward})\n+\n+        self.log.info(\"listreceivedbylabel includes label with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {\"label\": label, \"amount\": reward})\n+\n+        self.log.info(\"Orphan block that paid to address\")\n+        self.nodes[0].invalidateblock(hash)\n+\n+        self.log.info(\"getreceivedbyaddress does not include orphan when minconf is 0 when including immature\")\n+        balance = self.nodes[0].getreceivedbyaddress(address=address, minconf=0, include_immature=True)",
    "path": "test/functional/wallet_listreceivedby.py",
    "position": null,
    "original_position": 92,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Hmm I'm not sure there is any effect in this case. The `getreceivedby*` RPCs only return a balance, and setting `minconf=0` would return the unconfirmed balance using the tally code in `GetReceived`. I don't believe it would be affected by `spendzeroconfchange`, which from what I can see is only used in `CWallet::SelectCoins`.",
    "created_at": "2021-04-19T19:14:44Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r616112613",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616112613"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r616112613"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616112613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 244,
    "side": "RIGHT",
    "in_reply_to_id": 613298269
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616115708",
    "pull_request_review_id": 639227214,
    "id": 616115708,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjExNTcwOA==",
    "diff_hunk": "@@ -671,11 +671,22 @@ static CAmount GetReceived(const CWallet& wallet, const UniValue& params, bool b\n     if (!params[1].isNull())\n         min_depth = params[1].get_int();\n \n+    bool include_immature{!params[2].isNull() && params[2].get_bool()};\n+\n+    // Filtering out coinbase outputs is deprecated\n+    // It can be enabled by setting deprecatedrpc=filter_coinbase\n+    bool filter_coinbase{wallet.chain().rpcEnableDeprecated(\"filter_coinbase\")};\n+\n     // Tally\n     CAmount amount = 0;\n     for (const std::pair<const uint256, CWalletTx>& wtx_pair : wallet.mapWallet) {\n         const CWalletTx& wtx = wtx_pair.second;\n-        if (wtx.IsCoinBase() || !wallet.chain().checkFinalTx(*wtx.tx) || wtx.GetDepthInMainChain() < min_depth) {\n+        int depth{wtx.GetDepthInMainChain()};\n+        if (depth < min_depth\n+            // Coinbase with less than 1 confirmation is an orphan\n+            || (wtx.IsCoinBase() && (depth < 1 || filter_coinbase))\n+            || (!include_immature && wtx.IsImmatureCoinBase())",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jnewbery Great suggestion, I agree this makes it much more readable.\r\n\r\n@LarryRuane Since there are only two instances of this duplication, should we defer to the [rule of three](https://en.wikipedia.org/wiki/Rule_of_three_(computer_programming))?",
    "created_at": "2021-04-19T19:19:48Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r616115708",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616115708"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r616115708"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616115708/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 687,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 688,
    "side": "RIGHT",
    "in_reply_to_id": 613130541
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616127173",
    "pull_request_review_id": 639241771,
    "id": 616127173,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjEyNzE3Mw==",
    "diff_hunk": "@@ -46,13 +46,17 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"settxfee\", 0, \"amount\" },\n     { \"sethdseed\", 0, \"newkeypool\" },\n     { \"getreceivedbyaddress\", 1, \"minconf\" },\n+    { \"getreceivedbyaddress\", 2, \"include_not_yet_spendable\" },\n     { \"getreceivedbylabel\", 1, \"minconf\" },\n+    { \"getreceivedbylabel\", 2, \"include_not_yet_spendable\" },\n     { \"listreceivedbyaddress\", 0, \"minconf\" },\n     { \"listreceivedbyaddress\", 1, \"include_empty\" },\n     { \"listreceivedbyaddress\", 2, \"include_watchonly\" },\n+    { \"listreceivedbyaddress\", 4, \"include_not_yet_spendable\" },\n     { \"listreceivedbylabel\", 0, \"minconf\" },\n     { \"listreceivedbylabel\", 1, \"include_empty\" },\n     { \"listreceivedbylabel\", 2, \"include_watchonly\" },\n+    { \"listreceivedbylabel\", 3, \"include_not_yet_spendable\" },",
    "path": "src/rpc/client.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "80ad7d7e059447fb8db6c586ecda699bf839b139",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "AssertionError: RPC client conversion table and RPC server named arguments mismatch!\r\n                                   {('getreceivedbyaddress', 2, 'include_not_yet_spendable'), ('listreceivedbylabel', 3, 'include_immature_coinbase'), ('listreceivedbylabel', 3, 'include_not_yet_spendable'), ('listreceivedbyaddress', 4, 'include_not_yet_spendable'), ('listreceivedbyaddress', 4, 'include_immature_coinbase'), ('getreceivedbylabel', 2, 'include_immature_coinbase'), ('getreceivedbyaddress', 2, 'include_immature_coinbase'), ('getreceivedbylabel', 2, 'include_not_yet_spendable')}",
    "created_at": "2021-04-19T19:39:02Z",
    "updated_at": "2021-04-19T19:44:34Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r616127173",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616127173"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r616127173"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616127173/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 59,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616130521",
    "pull_request_review_id": 639246102,
    "id": 616130521,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjEzMDUyMQ==",
    "diff_hunk": "@@ -46,13 +46,17 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"settxfee\", 0, \"amount\" },\n     { \"sethdseed\", 0, \"newkeypool\" },\n     { \"getreceivedbyaddress\", 1, \"minconf\" },\n+    { \"getreceivedbyaddress\", 2, \"include_not_yet_spendable\" },\n     { \"getreceivedbylabel\", 1, \"minconf\" },\n+    { \"getreceivedbylabel\", 2, \"include_not_yet_spendable\" },\n     { \"listreceivedbyaddress\", 0, \"minconf\" },\n     { \"listreceivedbyaddress\", 1, \"include_empty\" },\n     { \"listreceivedbyaddress\", 2, \"include_watchonly\" },\n+    { \"listreceivedbyaddress\", 4, \"include_not_yet_spendable\" },\n     { \"listreceivedbylabel\", 0, \"minconf\" },\n     { \"listreceivedbylabel\", 1, \"include_empty\" },\n     { \"listreceivedbylabel\", 2, \"include_watchonly\" },\n+    { \"listreceivedbylabel\", 3, \"include_not_yet_spendable\" },",
    "path": "src/rpc/client.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "80ad7d7e059447fb8db6c586ecda699bf839b139",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed. Thanks!",
    "created_at": "2021-04-19T19:44:59Z",
    "updated_at": "2021-04-19T19:44:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r616130521",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616130521"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r616130521"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616130521/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 59,
    "side": "RIGHT",
    "in_reply_to_id": 616127173
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616136227",
    "pull_request_review_id": 639253602,
    "id": 616136227,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjEzNjIyNw==",
    "diff_hunk": "@@ -671,11 +671,22 @@ static CAmount GetReceived(const CWallet& wallet, const UniValue& params, bool b\n     if (!params[1].isNull())\n         min_depth = params[1].get_int();\n \n+    bool include_immature{!params[2].isNull() && params[2].get_bool()};\n+\n+    // Filtering out coinbase outputs is deprecated\n+    // It can be enabled by setting deprecatedrpc=filter_coinbase\n+    bool filter_coinbase{wallet.chain().rpcEnableDeprecated(\"filter_coinbase\")};\n+\n     // Tally\n     CAmount amount = 0;\n     for (const std::pair<const uint256, CWalletTx>& wtx_pair : wallet.mapWallet) {\n         const CWalletTx& wtx = wtx_pair.second;\n-        if (wtx.IsCoinBase() || !wallet.chain().checkFinalTx(*wtx.tx) || wtx.GetDepthInMainChain() < min_depth) {\n+        int depth{wtx.GetDepthInMainChain()};\n+        if (depth < min_depth\n+            // Coinbase with less than 1 confirmation is an orphan\n+            || (wtx.IsCoinBase() && (depth < 1 || filter_coinbase))\n+            || (!include_immature && wtx.IsImmatureCoinBase())\n+            || !wallet.chain().checkFinalTx(*wtx.tx)) {",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 24,
    "original_position": 20,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "77da82934cf82357f4e8a39f43690b491e557325",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh hm, I guess the finality wouldn't really be reflected in the received transaction's header, but in the redeem script for it. I'm not too sure how the wallet keeps track of timelocked outputs \ud83e\udd14 I don't think this check should be removed though",
    "created_at": "2021-04-19T19:54:51Z",
    "updated_at": "2021-04-19T19:54:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r616136227",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616136227"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r616136227"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616136227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 707,
    "original_line": 707,
    "side": "RIGHT",
    "in_reply_to_id": 613293127
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650777424",
    "pull_request_review_id": 682684213,
    "id": 650777424,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MDc3NzQyNA==",
    "diff_hunk": "@@ -0,0 +1,19 @@\n+Wallet `receivedby` RPCs now include coinbase transactions\n+-------------\n+\n+Previously, the following wallet RPCs excluded coinbase transactions:\n+\n+`getreceivedbyaddress`\n+\n+`getreceivedbylabel`\n+\n+`listreceivedbyaddress`\n+\n+`listreceivedbylabel`\n+\n+This release changes this behaviour and returns results accounting for received coins from coinbase outputs.\n+\n+A new option, `include_immature_coinbase` (default=`false`), determines whether to account for immature coinbase transactions or non-final transactions.",
    "path": "doc/release-notes-14707.md",
    "position": null,
    "original_position": 16,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "2b310631a76308c76d80fea4b5fb6321362685df",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "As far as I can see, `include_immature_coinbase` has no impact on whether non-final transactions are included.\r\n\r\n```suggestion\r\nA new option, `include_immature_coinbase` (default=`false`), determines whether to account for immature coinbase transactions.\r\n```",
    "created_at": "2021-06-14T09:13:07Z",
    "updated_at": "2021-06-14T09:13:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r650777424",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650777424"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r650777424"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650777424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 16,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650777699",
    "pull_request_review_id": 682684213,
    "id": 650777699,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1MDc3NzY5OQ==",
    "diff_hunk": "@@ -167,5 +169,124 @@ def run_test(self):\n         balance = self.nodes[1].getreceivedbylabel(\"mynewlabel\")\n         assert_equal(balance, Decimal(\"0.0\"))\n \n+        self.log.info(\"Tests for including coinbase outputs\")\n+\n+        # Generate block reward to address with label\n+        label = \"label\"\n+        address = self.nodes[0].getnewaddress(label)\n+\n+        reward = Decimal(\"25\")\n+        self.nodes[0].generatetoaddress(1, address)\n+        hash = self.nodes[0].getbestblockhash()\n+\n+        self.log.info(\"getreceivedbyaddress returns nothing with defaults\")\n+        balance = self.nodes[0].getreceivedbyaddress(address)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbyaddress returns block reward when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbyaddress(address=address, include_immature_coinbase=True)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"getreceivedbylabel returns nothing with defaults\")\n+        balance = self.nodes[0].getreceivedbylabel(\"label\")\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel returns block reward when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbylabel(label=\"label\", include_immature_coinbase=True)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"listreceivedbyaddress does not include address with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbyaddress includes address when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(minconf=1, include_immature_coinbase=True),\n+                            {\"address\": address},\n+                            {\"address\": address, \"amount\": reward})\n+\n+        self.log.info(\"listreceivedbylabel does not include label with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel includes label when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(minconf=1, include_immature_coinbase=True),\n+                            {\"label\": label},\n+                            {\"label\": label, \"amount\": reward})\n+\n+        self.log.info(\"Generate 100 more blocks\")\n+        self.nodes[0].generate(100)\n+\n+        self.log.info(\"getreceivedbyaddress returns reward with defaults\")\n+        balance = self.nodes[0].getreceivedbyaddress(address)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"getreceivedbylabel returns reward with defaults\")\n+        balance = self.nodes[0].getreceivedbylabel(\"label\")\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"listreceivedbyaddress includes address with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {\"address\": address, \"amount\": reward})\n+\n+        self.log.info(\"listreceivedbylabel includes label with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {\"label\": label, \"amount\": reward})\n+\n+        self.log.info(\"Invalidate block that paid to address\")\n+        self.nodes[0].invalidateblock(hash)\n+\n+        self.log.info(\"getreceivedbyaddress does not include invalidated block when minconf is 0 when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbyaddress(address=address, minconf=0, include_immature_coinbase=True)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel does not include invalidated block when minconf is 0 when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbylabel(label=\"label\", minconf=0, include_immature_coinbase=True)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"listreceivedbyaddress does not include invalidated block when minconf is 0 when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(minconf=0, include_immature_coinbase=True),\n+                            {\"address\": address},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel does not include invalidated block when minconf is 0 when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(minconf=0, include_immature_coinbase=True),\n+                            {\"label\": label},\n+                            {}, True)\n+\n+\n+        self.log.info(\"Generate 101 blocks to node with deprecated exclude_coinbase\")\n+        address2 = self.nodes[1].getnewaddress(label)\n+        self.nodes[1].generatetoaddress(101, address2)\n+\n+        self.log.info(\"getreceivedbyaddress returns nothing when excluding coinbase\")\n+        balance = self.nodes[1].getreceivedbyaddress(address2)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel returns nothing when excluding coinbase\")\n+        balance = self.nodes[1].getreceivedbylabel(\"label\")\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"listreceivedbyaddress does not include address when excluding coinbase\")\n+        assert_array_result(self.nodes[1].listreceivedbyaddress(),\n+                            {\"address\": address2},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel does not include label when excluding coinbase\")\n+        assert_array_result(self.nodes[1].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {}, True)\n+\n+        self.log.info(\"getreceivedbyaddress throws when setting include_immature_coinbase with deprecated exclude_coinbase\")\n+        assert_raises_rpc_error(-8, 'include_immature_coinbase is incompatible with deprecated exclude_coinbase', self.nodes[1].getreceivedbyaddress, address2, 1, True)\n+\n+",
    "path": "test/functional/wallet_listreceivedby.py",
    "position": 136,
    "original_position": 136,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "2b310631a76308c76d80fea4b5fb6321362685df",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: remove extra linebreak if you retouch this branch.",
    "created_at": "2021-06-14T09:13:27Z",
    "updated_at": "2021-06-14T09:13:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r650777699",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650777699"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r650777699"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/650777699/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 286,
    "original_line": 286,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742795630",
    "pull_request_review_id": 797685452,
    "id": 742795630,
    "node_id": "PRRC_kwDOABII584sRilu",
    "diff_hunk": "@@ -167,5 +169,124 @@ def run_test(self):\n         balance = self.nodes[1].getreceivedbylabel(\"mynewlabel\")\n         assert_equal(balance, Decimal(\"0.0\"))\n \n+        self.log.info(\"Tests for including coinbase outputs\")\n+\n+        # Generate block reward to address with label\n+        label = \"label\"\n+        address = self.nodes[0].getnewaddress(label)\n+\n+        reward = Decimal(\"25\")\n+        self.nodes[0].generatetoaddress(1, address)\n+        hash = self.nodes[0].getbestblockhash()\n+\n+        self.log.info(\"getreceivedbyaddress returns nothing with defaults\")\n+        balance = self.nodes[0].getreceivedbyaddress(address)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbyaddress returns block reward when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbyaddress(address=address, include_immature_coinbase=True)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"getreceivedbylabel returns nothing with defaults\")\n+        balance = self.nodes[0].getreceivedbylabel(\"label\")\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel returns block reward when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbylabel(label=\"label\", include_immature_coinbase=True)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"listreceivedbyaddress does not include address with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbyaddress includes address when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(minconf=1, include_immature_coinbase=True),\n+                            {\"address\": address},\n+                            {\"address\": address, \"amount\": reward})\n+\n+        self.log.info(\"listreceivedbylabel does not include label with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel includes label when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(minconf=1, include_immature_coinbase=True),\n+                            {\"label\": label},\n+                            {\"label\": label, \"amount\": reward})\n+\n+        self.log.info(\"Generate 100 more blocks\")\n+        self.nodes[0].generate(100)\n+\n+        self.log.info(\"getreceivedbyaddress returns reward with defaults\")\n+        balance = self.nodes[0].getreceivedbyaddress(address)\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"getreceivedbylabel returns reward with defaults\")\n+        balance = self.nodes[0].getreceivedbylabel(\"label\")\n+        assert_equal(balance, reward)\n+\n+        self.log.info(\"listreceivedbyaddress includes address with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(),\n+                            {\"address\": address},\n+                            {\"address\": address, \"amount\": reward})\n+\n+        self.log.info(\"listreceivedbylabel includes label with defaults\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {\"label\": label, \"amount\": reward})\n+\n+        self.log.info(\"Invalidate block that paid to address\")\n+        self.nodes[0].invalidateblock(hash)\n+\n+        self.log.info(\"getreceivedbyaddress does not include invalidated block when minconf is 0 when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbyaddress(address=address, minconf=0, include_immature_coinbase=True)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel does not include invalidated block when minconf is 0 when including immature coinbase\")\n+        balance = self.nodes[0].getreceivedbylabel(label=\"label\", minconf=0, include_immature_coinbase=True)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"listreceivedbyaddress does not include invalidated block when minconf is 0 when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbyaddress(minconf=0, include_immature_coinbase=True),\n+                            {\"address\": address},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel does not include invalidated block when minconf is 0 when including immature coinbase\")\n+        assert_array_result(self.nodes[0].listreceivedbylabel(minconf=0, include_immature_coinbase=True),\n+                            {\"label\": label},\n+                            {}, True)\n+\n+\n+        self.log.info(\"Generate 101 blocks to node with deprecated exclude_coinbase\")\n+        address2 = self.nodes[1].getnewaddress(label)\n+        self.nodes[1].generatetoaddress(101, address2)\n+\n+        self.log.info(\"getreceivedbyaddress returns nothing when excluding coinbase\")\n+        balance = self.nodes[1].getreceivedbyaddress(address2)\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"getreceivedbylabel returns nothing when excluding coinbase\")\n+        balance = self.nodes[1].getreceivedbylabel(\"label\")\n+        assert_equal(balance, 0)\n+\n+        self.log.info(\"listreceivedbyaddress does not include address when excluding coinbase\")\n+        assert_array_result(self.nodes[1].listreceivedbyaddress(),\n+                            {\"address\": address2},\n+                            {}, True)\n+\n+        self.log.info(\"listreceivedbylabel does not include label when excluding coinbase\")\n+        assert_array_result(self.nodes[1].listreceivedbylabel(),\n+                            {\"label\": label},\n+                            {}, True)\n+\n+        self.log.info(\"getreceivedbyaddress throws when setting include_immature_coinbase with deprecated exclude_coinbase\")\n+        assert_raises_rpc_error(-8, 'include_immature_coinbase is incompatible with deprecated exclude_coinbase', self.nodes[1].getreceivedbyaddress, address2, 1, True)\n+\n+",
    "path": "test/functional/wallet_listreceivedby.py",
    "position": 136,
    "original_position": 136,
    "commit_id": "1f084ec0ef67534e43f3031c8d17e2ad6b9ce285",
    "original_commit_id": "2b310631a76308c76d80fea4b5fb6321362685df",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Feel free to remove this extra newline if you need to touch this branch again.",
    "created_at": "2021-11-04T12:39:32Z",
    "updated_at": "2021-11-04T12:39:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r742795630",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742795630"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14707#discussion_r742795630"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14707"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742795630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 286,
    "original_line": 286,
    "side": "RIGHT",
    "in_reply_to_id": 650777699
  }
]