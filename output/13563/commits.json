[
  {
    "sha": "c2e4fc84ecff72c36f6adc1292ba8242fc3cbaee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMmU0ZmM4NGVjZmY3MmMzNmY2YWRjMTI5MmJhODI0MmZjM2NiYWVl",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-28T10:48:27Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-06-28T13:28:42Z"
      },
      "message": "bench: Simplify CoinSelection",
      "tree": {
        "sha": "6238b11011b614e04e8889025b39d5a5577f22fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6238b11011b614e04e8889025b39d5a5577f22fd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c2e4fc84ecff72c36f6adc1292ba8242fc3cbaee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c2e4fc84ecff72c36f6adc1292ba8242fc3cbaee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c2e4fc84ecff72c36f6adc1292ba8242fc3cbaee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c2e4fc84ecff72c36f6adc1292ba8242fc3cbaee/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d96bdd78307bc5469cb8a4d5ca0e6cbc21fe4073",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d96bdd78307bc5469cb8a4d5ca0e6cbc21fe4073",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d96bdd78307bc5469cb8a4d5ca0e6cbc21fe4073"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 10,
      "deletions": 16
    },
    "files": [
      {
        "sha": "f3180809b5ee755e5486f1f7a5a6d8c7a7adc0c3",
        "filename": "src/bench/coin_selection.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 16,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2e4fc84ecff72c36f6adc1292ba8242fc3cbaee/src/bench/coin_selection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2e4fc84ecff72c36f6adc1292ba8242fc3cbaee/src/bench/coin_selection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/coin_selection.cpp?ref=c2e4fc84ecff72c36f6adc1292ba8242fc3cbaee",
        "patch": "@@ -34,31 +34,25 @@ static void addCoin(const CAmount& nValue, const CWallet& wallet, std::vector<CO\n static void CoinSelection(benchmark::State& state)\n {\n     const CWallet wallet(\"dummy\", WalletDatabase::CreateDummy());\n-    std::vector<COutput> vCoins;\n     LOCK(wallet.cs_wallet);\n \n-    while (state.KeepRunning()) {\n-        // Add coins.\n-        for (int i = 0; i < 1000; i++)\n-            addCoin(1000 * COIN, wallet, vCoins);\n-        addCoin(3 * COIN, wallet, vCoins);\n+    // Add coins.\n+    std::vector<COutput> vCoins;\n+    for (int i = 0; i < 1000; ++i) {\n+        addCoin(1000 * COIN, wallet, vCoins);\n+    }\n+    addCoin(3 * COIN, wallet, vCoins);\n \n+    const CoinEligibilityFilter filter_standard(1, 6, 0);\n+    const CoinSelectionParams coin_selection_params(true, 34, 148, CFeeRate(0), 0);\n+    while (state.KeepRunning()) {\n         std::set<CInputCoin> setCoinsRet;\n         CAmount nValueRet;\n         bool bnb_used;\n-        CoinEligibilityFilter filter_standard(1, 6, 0);\n-        CoinSelectionParams coin_selection_params(false, 34, 148, CFeeRate(0), 0);\n-        bool success = wallet.SelectCoinsMinConf(1003 * COIN, filter_standard, vCoins, setCoinsRet, nValueRet, coin_selection_params, bnb_used)\n-                       || wallet.SelectCoinsMinConf(1003 * COIN, filter_standard, vCoins, setCoinsRet, nValueRet, coin_selection_params, bnb_used);\n+        bool success = wallet.SelectCoinsMinConf(1003 * COIN, filter_standard, vCoins, setCoinsRet, nValueRet, coin_selection_params, bnb_used);\n         assert(success);\n         assert(nValueRet == 1003 * COIN);\n         assert(setCoinsRet.size() == 2);\n-\n-        // Empty wallet.\n-        for (COutput& output : vCoins) {\n-            delete output.tx;\n-        }\n-        vCoins.clear();\n     }\n }\n "
      }
    ]
  }
]