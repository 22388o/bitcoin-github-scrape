jnewbery,2019-07-02 18:22:05,"utACK fa3d0199a8a03cc7e14b0242d672af0328f201f8\n\nI've read the code and it looks good to me.",https://github.com/bitcoin/bitcoin/pull/16328#issuecomment-507791592,507791592,
laanwj,2019-07-02 18:22:48,How does this fit in with buried softfork changes like  #16060?,https://github.com/bitcoin/bitcoin/pull/16328#issuecomment-507791825,507791825,
jnewbery,2019-07-02 18:35:07,"> How does this fit in with buried softfork changes like\n\nThis is the first commit from #16060, with some changes to the tests and release notes.",https://github.com/bitcoin/bitcoin/pull/16328#issuecomment-507796042,507796042,
DrahtBot,2019-07-02 19:29:41,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16365](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16365.html) (Log RPC parameters (arguments) if -debug=rp",https://github.com/bitcoin/bitcoin/pull/16328#issuecomment-507813785,507813785,
laanwj,2019-07-03 08:42:41,">  This is the first commit from #16060, with some changes to the tests and release notes.\n\nThanks. Yes, probably makes sense to split this off from the burying itself.",https://github.com/bitcoin/bitcoin/pull/16328#issuecomment-507999874,507999874,
MarcoFalke,2019-07-19 17:51:16,"Addressed review from @practicalswift and @ajtowns (excellent stuff, thanks!)\n\nIn particular:\n* Moved it to a new rpc to not clutter exiting rpcs\n* Made the resulting dict atomic (by acquiring `cs_main`, to avoid races with incoming blocks)\n* Made both types consistent (by reintroducing the ""off-by-one"")\n* Renamed ""bip9"" to ""vb"", since BIP 8 is also a version bits deployment mechanism",https://github.com/bitcoin/bitcoin/pull/16328#issuecomment-513318610,513318610,
ajtowns,2019-07-21 23:51:01,"Not sure why I didn't think of it earlier, but there's a much easier way of fixing the off-by-one issue with ""active"" that doesn't need changes to versionbits, given we do the ""height"" calculation anyway:\n\n```diff\n@@ -1189,6 +1189,7 @@ static void BuriedForkDescPushBack(UniValue& softforks, const std::string& name,\n     rv.pushKV(""type"", ""buried"");\n     rv.pushKV(""height"", height);\n   ",https://github.com/bitcoin/bitcoin/pull/16328#issuecomment-513598332,513598332,
ajtowns,2019-07-03 23:42:56,"why drop the ""only for started"" note?",https://github.com/bitcoin/bitcoin/pull/16328#discussion_r300187969,300187969,src/rpc/blockchain.cpp
ajtowns,2019-07-04 05:40:08,"I believe `tip->nHeight >= BIPxxHeight` tells you if the rules were enforced in the current block, while `ThresholdState::ACTIVE == thresholdState` tells you if the rules should be enforced in the next block, so I think the value of this field is currently inconsistent. I think jnewbery's original patch consistently reported whether the rules should be enforced in the next block, by checking `tip-",https://github.com/bitcoin/bitcoin/pull/16328#discussion_r300235076,300235076,src/rpc/blockchain.cpp
ajtowns,2019-07-04 05:41:25,"nit: should be height then active, to match order of bip9 object",https://github.com/bitcoin/bitcoin/pull/16328#discussion_r300235282,300235282,src/rpc/blockchain.cpp
jnewbery,2019-07-04 12:54:29,"I don't think reverting this to a for loop makes things any clearer. There are just three bip9 softforks currently, so listing them out explicitly seems clearer to me.",https://github.com/bitcoin/bitcoin/pull/16328#discussion_r300386011,300386011,src/rpc/blockchain.cpp
jnewbery,2019-07-04 12:56:40,"Again, I don't understand why you've reverted this from the tidier code in 16060",https://github.com/bitcoin/bitcoin/pull/16328#discussion_r300386777,300386777,src/rpc/blockchain.cpp
ajtowns,2019-07-05 00:22:13,"After sleeping on it, I think I've changed my mind -- it's probably less confusing to have ""active=true"" tell you whether the rules were enforced on the current block, and you can use the ""height=N"" output to tell you whether it needs to be enforced on the next block.\n\nIn that case, I think you'd want `nHeight >= BIPxxHeight` and to use `tip->pprev` instead of `tip` for the versionbits state. ",https://github.com/bitcoin/bitcoin/pull/16328#discussion_r300512672,300512672,src/rpc/blockchain.cpp
ajtowns,2019-07-05 03:26:32,"I've pushed an update to https://github.com/ajtowns/bitcoin/commits/201907-getforkinfo that implements the latter in a way I think makes sense, including changes to versionist statistics. Can check the output makes sense with something like (assuming the ""csv"" softfork activates at block 1152 and you have jshon available):\n\n    $ for a in 863 864 865 1006 1007 1008 1009 1010 1150 1151 1152; do",https://github.com/bitcoin/bitcoin/pull/16328#discussion_r300530913,300530913,src/rpc/blockchain.cpp
MarcoFalke,2019-07-08 20:57:18,Refactoring changes should (if possible) be in a separate commit from behaviour changes. This can be done in a separate pull request,https://github.com/bitcoin/bitcoin/pull/16328#discussion_r301296321,301296321,src/rpc/blockchain.cpp
MarcoFalke,2019-07-08 20:57:27,Refactoring changes should (if possible) be in a separate commit from behaviour changes. This can be done in a separate pull request,https://github.com/bitcoin/bitcoin/pull/16328#discussion_r301296390,301296390,src/rpc/blockchain.cpp
practicalswift,2019-07-10 09:49:03,"Should be ""further"" :-)",https://github.com/bitcoin/bitcoin/pull/16328#discussion_r301978697,301978697,doc/release-notes-16328.md
MarcoFalke,2019-07-19 17:55:47,Restored,https://github.com/bitcoin/bitcoin/pull/16328#discussion_r305463495,305463495,src/rpc/blockchain.cpp
