[
  {
    "sha": "7b3851e9473e74043342d414c056c2ef87c2f261",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YjM4NTFlOTQ3M2U3NDA0MzM0MmQ0MTRjMDU2YzJlZjg3YzJmMjYx",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-07-26T19:28:56Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-07-26T19:46:28Z"
      },
      "message": "refactor: Drop unused CBufferedFile::Seek()",
      "tree": {
        "sha": "ca24eb1f7f909a6665776e83ff22e8e91ddd3276",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca24eb1f7f909a6665776e83ff22e8e91ddd3276"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7b3851e9473e74043342d414c056c2ef87c2f261",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl8d3ZQACgkQQQEIES5+\nqB8Vfw//XVNKjAP2VwzqEGBdQADgceEWQ8WQJtA1R500Z0OslLjPydRYZKelQmZO\nEU+OutMPLlbRUjOOq+8FyHFwzLvxtb8E08yH2jTnmw2HrXfMc6V8IBfAGKwXD2CT\nKJdGzUECNheWnkTmfH0rIwmkp1eeRjCvN6wIAkguTOnCvbkt6MatLLbIzAtBj9in\nAL76S3ouQv0odLPjcAq+igUVMlnDxjv0UtsOzwQdatdFS6gDr6VKLuJnV5Cn2CMr\nGyBSaNytfUGJoksg78A8/l9eUYnBHjawyMgH6R0DsWeMHKPZobDWIxcWMNfaD3V0\n+g7+xiqmmbXBVyeThe7omywDY/zTlVLYWCR9ipuwDHGeZavLEFw6BgEiCxSz5AX+\n/Q+VKXMtUEtwZdO22Mt8ELR6IP/rmQ5X1gMV15ajm+6DloR9iYBZfc+88ZiPJnE3\neTAFlnyOp26UmQu3uurXj5Xjfmjp7bHs54L2bThKeFqdRXgb2G1S2MsHboNGo59R\nvaAPd18dJ1Um4104wUoykqaxDJt6JIU3w80RDK7y/ldWM6mcCvCjB9ZaSL7aVUHF\nuF9jo797On2/d+79mB9TNp785PV4fGbBkflR4MYyhRzuqWRQyCALbJLpaYVeg/Xw\n+4e+J0wy5VB9Uks/uzsjSzBdB4kqQ0Ympkh2FWh0JxHuXhKTFJU=\n=t6L/\n-----END PGP SIGNATURE-----",
        "payload": "tree ca24eb1f7f909a6665776e83ff22e8e91ddd3276\nparent 31d2b4098a9e4ee9a694ba1ad42829637cbcf3c6\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1595791736 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1595792788 +0300\n\nrefactor: Drop unused CBufferedFile::Seek()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b3851e9473e74043342d414c056c2ef87c2f261",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7b3851e9473e74043342d414c056c2ef87c2f261",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b3851e9473e74043342d414c056c2ef87c2f261/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "31d2b4098a9e4ee9a694ba1ad42829637cbcf3c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31d2b4098a9e4ee9a694ba1ad42829637cbcf3c6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/31d2b4098a9e4ee9a694ba1ad42829637cbcf3c6"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 4,
      "deletions": 20
    },
    "files": [
      {
        "sha": "6ce8065da8d453cebe3dd3e6dbfdc5dd7d1042a7",
        "filename": "src/streams.h",
        "status": "modified",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b3851e9473e74043342d414c056c2ef87c2f261/src/streams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b3851e9473e74043342d414c056c2ef87c2f261/src/streams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/streams.h?ref=7b3851e9473e74043342d414c056c2ef87c2f261",
        "patch": "@@ -814,18 +814,6 @@ class CBufferedFile\n         return true;\n     }\n \n-    bool Seek(uint64_t nPos) {\n-        long nLongPos = nPos;\n-        if (nPos != (uint64_t)nLongPos)\n-            return false;\n-        if (fseek(src, nLongPos, SEEK_SET))\n-            return false;\n-        nLongPos = ftell(src);\n-        nSrcPos = nLongPos;\n-        nReadPos = nLongPos;\n-        return true;\n-    }\n-\n     //! prevent reading beyond a certain position\n     //! no argument removes the limit\n     bool SetLimit(uint64_t nPos = std::numeric_limits<uint64_t>::max()) {"
      },
      {
        "sha": "e575640be5b7fd9289e6c678f8855640c4beb936",
        "filename": "src/test/fuzz/buffered_file.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b3851e9473e74043342d414c056c2ef87c2f261/src/test/fuzz/buffered_file.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b3851e9473e74043342d414c056c2ef87c2f261/src/test/fuzz/buffered_file.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/buffered_file.cpp?ref=7b3851e9473e74043342d414c056c2ef87c2f261",
        "patch": "@@ -31,7 +31,7 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     if (opt_buffered_file && fuzzed_file != nullptr) {\n         bool setpos_fail = false;\n         while (fuzzed_data_provider.ConsumeBool()) {\n-            switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 5)) {\n+            switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 4)) {\n             case 0: {\n                 std::array<uint8_t, 4096> arr{};\n                 try {\n@@ -41,20 +41,16 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n                 break;\n             }\n             case 1: {\n-                opt_buffered_file->Seek(fuzzed_data_provider.ConsumeIntegralInRange<uint64_t>(0, 4096));\n-                break;\n-            }\n-            case 2: {\n                 opt_buffered_file->SetLimit(fuzzed_data_provider.ConsumeIntegralInRange<uint64_t>(0, 4096));\n                 break;\n             }\n-            case 3: {\n+            case 2: {\n                 if (!opt_buffered_file->SetPos(fuzzed_data_provider.ConsumeIntegralInRange<uint64_t>(0, 4096))) {\n                     setpos_fail = true;\n                 }\n                 break;\n             }\n-            case 4: {\n+            case 3: {\n                 if (setpos_fail) {\n                     // Calling FindByte(...) after a failed SetPos(...) call may result in an infinite loop.\n                     break;\n@@ -65,7 +61,7 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n                 }\n                 break;\n             }\n-            case 5: {\n+            case 4: {\n                 ReadFromStream(fuzzed_data_provider, *opt_buffered_file);\n                 break;\n             }"
      }
    ]
  }
]