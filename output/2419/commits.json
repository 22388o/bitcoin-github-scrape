[
  {
    "sha": "cedaa714462871213472019545b8e862dacdac91",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZWRhYTcxNDQ2Mjg3MTIxMzQ3MjAxOTU0NWI4ZTg2MmRhY2RhYzkx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-03-28T23:43:31Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "sipa@ulyssis.org",
        "date": "2013-04-04T12:45:45Z"
      },
      "message": "Drop release times for CNode\n\nIt seems there were two mechanisms for assessing whether a CNode\nwas still in use: a refcount and a release timestamp. The latter\nseems to have been there for a long time, as a safety mechanism.\n\nHowever, this timer also keeps CNode objects alive for far longer\nthan necessary after disconnects, potentially opening up a DoS\nwindow.\n\nThis commit removes the timestamp-based mechanism, and replaces\nit with an assert(nRefCount >= 0), to verify that the refcounting\nis indeed correctly working.",
      "tree": {
        "sha": "624e3d8ff65f5f2978abe5fa0c7274b8c6c41f47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/624e3d8ff65f5f2978abe5fa0c7274b8c6c41f47"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cedaa714462871213472019545b8e862dacdac91",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cedaa714462871213472019545b8e862dacdac91",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cedaa714462871213472019545b8e862dacdac91",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cedaa714462871213472019545b8e862dacdac91/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aaf47eac3abef5741b6c108fdc8a19cb46b773a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaf47eac3abef5741b6c108fdc8a19cb46b773a2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aaf47eac3abef5741b6c108fdc8a19cb46b773a2"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 9,
      "deletions": 23
    },
    "files": [
      {
        "sha": "804eba3ccb3b34fa0266502a23077c267e79043d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 11,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cedaa714462871213472019545b8e862dacdac91/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cedaa714462871213472019545b8e862dacdac91/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=cedaa714462871213472019545b8e862dacdac91",
        "patch": "@@ -453,7 +453,7 @@ CNode* FindNode(const CService& addr)\n     return NULL;\n }\n \n-CNode* ConnectNode(CAddress addrConnect, const char *pszDest, int64 nTimeout)\n+CNode* ConnectNode(CAddress addrConnect, const char *pszDest)\n {\n     if (pszDest == NULL) {\n         if (IsLocal(addrConnect))\n@@ -463,10 +463,7 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest, int64 nTimeout)\n         CNode* pnode = FindNode((CService)addrConnect);\n         if (pnode)\n         {\n-            if (nTimeout != 0)\n-                pnode->AddRef(nTimeout);\n-            else\n-                pnode->AddRef();\n+            pnode->AddRef();\n             return pnode;\n         }\n     }\n@@ -498,10 +495,7 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest, int64 nTimeout)\n \n         // Add node\n         CNode* pnode = new CNode(hSocket, addrConnect, pszDest ? pszDest : \"\", false);\n-        if (nTimeout != 0)\n-            pnode->AddRef(nTimeout);\n-        else\n-            pnode->AddRef();\n+        pnode->AddRef();\n \n         {\n             LOCK(cs_vNodes);\n@@ -615,7 +609,6 @@ void CNode::copyStats(CNodeStats &stats)\n     X(nVersion);\n     X(strSubVer);\n     X(fInbound);\n-    X(nReleaseTime);\n     X(nStartingHeight);\n     X(nMisbehavior);\n }\n@@ -773,7 +766,6 @@ void ThreadSocketHandler()\n                     pnode->Cleanup();\n \n                     // hold in disconnected pool until all refs are released\n-                    pnode->nReleaseTime = max(pnode->nReleaseTime, GetTime() + 15 * 60);\n                     if (pnode->fNetworkNode || pnode->fInbound)\n                         pnode->Release();\n                     vNodesDisconnected.push_back(pnode);"
      },
      {
        "sha": "80773e3f191c1dbd034c953efd260b5cc7743d58",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 6,
        "deletions": 11,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cedaa714462871213472019545b8e862dacdac91/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cedaa714462871213472019545b8e862dacdac91/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=cedaa714462871213472019545b8e862dacdac91",
        "patch": "@@ -37,7 +37,7 @@ bool GetMyExternalIP(CNetAddr& ipRet);\n void AddressCurrentlyConnected(const CService& addr);\n CNode* FindNode(const CNetAddr& ip);\n CNode* FindNode(const CService& ip);\n-CNode* ConnectNode(CAddress addrConnect, const char *strDest = NULL, int64 nTimeout=0);\n+CNode* ConnectNode(CAddress addrConnect, const char *strDest = NULL);\n void MapPort(bool fUseUPnP);\n unsigned short GetListenPort();\n bool BindListenPort(const CService &bindAddr, std::string& strError=REF(std::string()));\n@@ -99,7 +99,6 @@ class CNodeStats\n     int nVersion;\n     std::string strSubVer;\n     bool fInbound;\n-    int64 nReleaseTime;\n     int nStartingHeight;\n     int nMisbehavior;\n };\n@@ -187,8 +186,8 @@ class CNode\n     CSemaphoreGrant grantOutbound;\n     CCriticalSection cs_filter;\n     CBloomFilter* pfilter;\n-protected:\n     int nRefCount;\n+protected:\n \n     // Denial-of-service detection/prevention\n     // Key is IP address, value is banned-until-time\n@@ -197,7 +196,6 @@ class CNode\n     int nMisbehavior;\n \n public:\n-    int64 nReleaseTime;\n     uint256 hashContinue;\n     CBlockIndex* pindexLastGetBlocksBegin;\n     uint256 hashLastGetBlocksEnd;\n@@ -235,7 +233,6 @@ class CNode\n         fSuccessfullyConnected = false;\n         fDisconnect = false;\n         nRefCount = 0;\n-        nReleaseTime = 0;\n         nSendSize = 0;\n         nSendOffset = 0;\n         hashContinue = 0;\n@@ -272,7 +269,8 @@ class CNode\n \n     int GetRefCount()\n     {\n-        return std::max(nRefCount, 0) + (GetTime() < nReleaseTime ? 1 : 0);\n+        assert(nRefCount >= 0);\n+        return nRefCount;\n     }\n \n     // requires LOCK(cs_vRecvMsg)\n@@ -295,12 +293,9 @@ class CNode\n             msg.SetVersion(nVersionIn);\n     }\n \n-    CNode* AddRef(int64 nTimeout=0)\n+    CNode* AddRef()\n     {\n-        if (nTimeout != 0)\n-            nReleaseTime = std::max(nReleaseTime, GetTime() + nTimeout);\n-        else\n-            nRefCount++;\n+        nRefCount++;\n         return this;\n     }\n "
      },
      {
        "sha": "e37b3009ddf98bc623f8318bc655d2cca0bf6c5a",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cedaa714462871213472019545b8e862dacdac91/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cedaa714462871213472019545b8e862dacdac91/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=cedaa714462871213472019545b8e862dacdac91",
        "patch": "@@ -55,7 +55,6 @@ Value getpeerinfo(const Array& params, bool fHelp)\n         obj.push_back(Pair(\"version\", stats.nVersion));\n         obj.push_back(Pair(\"subver\", stats.strSubVer));\n         obj.push_back(Pair(\"inbound\", stats.fInbound));\n-        obj.push_back(Pair(\"releasetime\", (boost::int64_t)stats.nReleaseTime));\n         obj.push_back(Pair(\"startingheight\", stats.nStartingHeight));\n         obj.push_back(Pair(\"banscore\", stats.nMisbehavior));\n "
      }
    ]
  }
]