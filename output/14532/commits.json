[
  {
    "sha": "3615003952ffbc814bdb53d9d0e45790f152bd2f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjE1MDAzOTUyZmZiYzgxNGJkYjUzZDlkMGU0NTc5MGYxNTJiZDJm",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-10-20T14:37:18Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-11-22T01:44:59Z"
      },
      "message": "net: Always default rpcbind to localhost, never \"all interfaces\"\n\nWe don't support binding to untrusted networks, so avoid a default where that is typical",
      "tree": {
        "sha": "fd0c7a26ca69d66b01ec77eac7238f8078d29838",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd0c7a26ca69d66b01ec77eac7238f8078d29838"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3615003952ffbc814bdb53d9d0e45790f152bd2f",
      "comment_count": 1,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3615003952ffbc814bdb53d9d0e45790f152bd2f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3615003952ffbc814bdb53d9d0e45790f152bd2f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3615003952ffbc814bdb53d9d0e45790f152bd2f/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d7b0258ff037ae90f60a86fc68cb55069c96e8d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7b0258ff037ae90f60a86fc68cb55069c96e8d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d7b0258ff037ae90f60a86fc68cb55069c96e8d0"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "cf365f4638c41247bd24d00d993686bc2786a7b5",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3615003952ffbc814bdb53d9d0e45790f152bd2f/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3615003952ffbc814bdb53d9d0e45790f152bd2f/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=3615003952ffbc814bdb53d9d0e45790f152bd2f",
        "patch": "@@ -300,9 +300,12 @@ static bool HTTPBindAddresses(struct evhttp* http)\n     std::vector<std::pair<std::string, uint16_t> > endpoints;\n \n     // Determine what addresses to bind to\n-    if (!gArgs.IsArgSet(\"-rpcallowip\")) { // Default to loopback if not allowing external IPs\n+    if (!(gArgs.IsArgSet(\"-rpcallowip\") && gArgs.IsArgSet(\"-rpcbind\"))) { // Default to loopback if not allowing external IPs\n         endpoints.push_back(std::make_pair(\"::1\", http_port));\n         endpoints.push_back(std::make_pair(\"127.0.0.1\", http_port));\n+        if (gArgs.IsArgSet(\"-rpcallowip\")) {\n+            LogPrintf(\"WARNING: option -rpcallowip was specified without -rpcbind; this doesn't usually make sense\\n\");\n+        }\n         if (gArgs.IsArgSet(\"-rpcbind\")) {\n             LogPrintf(\"WARNING: option -rpcbind was ignored because -rpcallowip was not specified, refusing to allow everyone to connect\\n\");\n         }\n@@ -313,9 +316,6 @@ static bool HTTPBindAddresses(struct evhttp* http)\n             SplitHostPort(strRPCBind, port, host);\n             endpoints.push_back(std::make_pair(host, port));\n         }\n-    } else { // No specific bind address specified, bind to any\n-        endpoints.push_back(std::make_pair(\"::\", http_port));\n-        endpoints.push_back(std::make_pair(\"0.0.0.0\", http_port));\n     }\n \n     // Bind addresses"
      },
      {
        "sha": "0ff7f7fcc12e26404d72aab6bd84d36de38d750f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3615003952ffbc814bdb53d9d0e45790f152bd2f/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3615003952ffbc814bdb53d9d0e45790f152bd2f/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=3615003952ffbc814bdb53d9d0e45790f152bd2f",
        "patch": "@@ -500,7 +500,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-rest\", strprintf(\"Accept public REST requests (default: %u)\", DEFAULT_REST_ENABLE), false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcallowip=<ip>\", \"Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcauth=<userpw>\", \"Username and hashed password for JSON-RPC connections. The field <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A canonical python script is included in share/rpcauth. The client then connects normally using the rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This option can be specified multiple times\", false, OptionsCategory::RPC);\n-    gArgs.AddArg(\"-rpcbind=<addr>[:port]\", \"Bind to given address to listen for JSON-RPC connections. This option is ignored unless -rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6. This option can be specified multiple times (default: 127.0.0.1 and ::1 i.e., localhost, or if -rpcallowip has been specified, 0.0.0.0 and :: i.e., all addresses)\", false, OptionsCategory::RPC);\n+    gArgs.AddArg(\"-rpcbind=<addr>[:port]\", \"Bind to given address to listen for JSON-RPC connections. This option is ignored unless -rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6. This option can be specified multiple times (default: 127.0.0.1 and ::1 i.e., localhost)\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpccookiefile=<loc>\", \"Location of the auth cookie. Relative paths will be prefixed by a net-specific datadir location. (default: data dir)\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcpassword=<pw>\", \"Password for JSON-RPC connections\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcport=<port>\", strprintf(\"Listen for JSON-RPC connections on <port> (default: %u, testnet: %u, regtest: %u)\", defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort(), regtestBaseParams->RPCPort()), false, OptionsCategory::RPC);"
      }
    ]
  },
  {
    "sha": "d6a1287481428d982dc03be3a6d9aeef8398f468",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNmExMjg3NDgxNDI4ZDk4MmRjMDNiZTNhNmQ5YWVlZjgzOThmNDY4",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-10-20T14:48:29Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-11-22T01:44:59Z"
      },
      "message": "CNetAddr: Add IsBindAny method to check for INADDR_ANY",
      "tree": {
        "sha": "c9523b290b7c1714a4cc6d0e829cf9033ccf2c19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9523b290b7c1714a4cc6d0e829cf9033ccf2c19"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6a1287481428d982dc03be3a6d9aeef8398f468",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6a1287481428d982dc03be3a6d9aeef8398f468",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d6a1287481428d982dc03be3a6d9aeef8398f468",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6a1287481428d982dc03be3a6d9aeef8398f468/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3615003952ffbc814bdb53d9d0e45790f152bd2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3615003952ffbc814bdb53d9d0e45790f152bd2f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3615003952ffbc814bdb53d9d0e45790f152bd2f"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "72be77dfd9c3c8f60cde0d9f21a26b84f42cf860",
        "filename": "src/netaddress.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6a1287481428d982dc03be3a6d9aeef8398f468/src/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6a1287481428d982dc03be3a6d9aeef8398f468/src/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.cpp?ref=d6a1287481428d982dc03be3a6d9aeef8398f468",
        "patch": "@@ -83,6 +83,16 @@ unsigned int CNetAddr::GetByte(int n) const\n     return ip[15-n];\n }\n \n+bool CNetAddr::IsBindAny() const\n+{\n+    const int cmplen = IsIPv4() ? 4 : 16;\n+    for (int i = 0; i < cmplen; ++i) {\n+        if (GetByte(i)) return false;\n+    }\n+\n+    return true;\n+}\n+\n bool CNetAddr::IsIPv4() const\n {\n     return (memcmp(ip, pchIPv4, sizeof(pchIPv4)) == 0);"
      },
      {
        "sha": "86c13b346583a9bb8351afdf0aacd59bf689a17d",
        "filename": "src/netaddress.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6a1287481428d982dc03be3a6d9aeef8398f468/src/netaddress.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6a1287481428d982dc03be3a6d9aeef8398f468/src/netaddress.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.h?ref=d6a1287481428d982dc03be3a6d9aeef8398f468",
        "patch": "@@ -55,6 +55,7 @@ class CNetAddr\n         bool SetInternal(const std::string& name);\n \n         bool SetSpecial(const std::string &strName); // for Tor addresses\n+        bool IsBindAny() const; // INADDR_ANY equivalent\n         bool IsIPv4() const;    // IPv4 mapped address (::FFFF:0:0/96, 0.0.0.0/0)\n         bool IsIPv6() const;    // IPv6 address (not mapped IPv4, not Tor)\n         bool IsRFC1918() const; // IPv4 private networks (10.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12)"
      }
    ]
  },
  {
    "sha": "27c44ef9c61f64d941ab82ec232a68141a2fde90",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyN2M0NGVmOWM2MWY2NGQ5NDFhYjgyZWMyMzJhNjgxNDFhMmZkZTkw",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-10-20T14:56:58Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-11-22T01:44:59Z"
      },
      "message": "rpcbind: Warn about exposing RPC to untrusted networks",
      "tree": {
        "sha": "366dfe469ae92b2e32312d66afb048a108951473",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/366dfe469ae92b2e32312d66afb048a108951473"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27c44ef9c61f64d941ab82ec232a68141a2fde90",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27c44ef9c61f64d941ab82ec232a68141a2fde90",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27c44ef9c61f64d941ab82ec232a68141a2fde90",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27c44ef9c61f64d941ab82ec232a68141a2fde90/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d6a1287481428d982dc03be3a6d9aeef8398f468",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6a1287481428d982dc03be3a6d9aeef8398f468",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d6a1287481428d982dc03be3a6d9aeef8398f468"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "00434169cd2a5a6932dca970cd0434bec64f7199",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27c44ef9c61f64d941ab82ec232a68141a2fde90/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27c44ef9c61f64d941ab82ec232a68141a2fde90/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=27c44ef9c61f64d941ab82ec232a68141a2fde90",
        "patch": "@@ -323,6 +323,10 @@ static bool HTTPBindAddresses(struct evhttp* http)\n         LogPrint(BCLog::HTTP, \"Binding RPC on address %s port %i\\n\", i->first, i->second);\n         evhttp_bound_socket *bind_handle = evhttp_bind_socket_with_handle(http, i->first.empty() ? nullptr : i->first.c_str(), i->second);\n         if (bind_handle) {\n+            CNetAddr addr;\n+            if (i->first.empty() || (LookupHost(i->first.c_str(), addr, false) && addr.IsBindAny())) {\n+                LogPrintf(\"WARNING: the RPC server is not safe to expose to untrusted networks such as the public internet\\n\");\n+            }\n             boundSockets.push_back(bind_handle);\n         } else {\n             LogPrintf(\"Binding RPC on address %s port %i failed.\\n\", i->first, i->second);"
      },
      {
        "sha": "31212a355b52e6818024c2c58f982b57464d05fa",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27c44ef9c61f64d941ab82ec232a68141a2fde90/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27c44ef9c61f64d941ab82ec232a68141a2fde90/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=27c44ef9c61f64d941ab82ec232a68141a2fde90",
        "patch": "@@ -500,7 +500,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-rest\", strprintf(\"Accept public REST requests (default: %u)\", DEFAULT_REST_ENABLE), false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcallowip=<ip>\", \"Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcauth=<userpw>\", \"Username and hashed password for JSON-RPC connections. The field <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A canonical python script is included in share/rpcauth. The client then connects normally using the rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This option can be specified multiple times\", false, OptionsCategory::RPC);\n-    gArgs.AddArg(\"-rpcbind=<addr>[:port]\", \"Bind to given address to listen for JSON-RPC connections. This option is ignored unless -rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6. This option can be specified multiple times (default: 127.0.0.1 and ::1 i.e., localhost)\", false, OptionsCategory::RPC);\n+    gArgs.AddArg(\"-rpcbind=<addr>[:port]\", \"Bind to given address to listen for JSON-RPC connections. Do not expose the RPC server to untrusted networks such as the public internet! This option is ignored unless -rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6. This option can be specified multiple times (default: 127.0.0.1 and ::1 i.e., localhost)\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpccookiefile=<loc>\", \"Location of the auth cookie. Relative paths will be prefixed by a net-specific datadir location. (default: data dir)\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcpassword=<pw>\", \"Password for JSON-RPC connections\", false, OptionsCategory::RPC);\n     gArgs.AddArg(\"-rpcport=<port>\", strprintf(\"Listen for JSON-RPC connections on <port> (default: %u, testnet: %u, regtest: %u)\", defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort(), regtestBaseParams->RPCPort()), false, OptionsCategory::RPC);"
      }
    ]
  }
]