[
  {
    "sha": "5ec0cde371149e5be6ca5e9803183021b10928f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZWMwY2RlMzcxMTQ5ZTViZTZjYTVlOTgwMzE4MzAyMWIxMDkyOGY4",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-01-04T18:43:17Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-05-17T12:06:37Z"
      },
      "message": "Refactor logic for converting mempool entries to JSON",
      "tree": {
        "sha": "a12607bd9bb590504995e78c7a0a3e05d74e52a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a12607bd9bb590504995e78c7a0a3e05d74e52a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ec0cde371149e5be6ca5e9803183021b10928f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ec0cde371149e5be6ca5e9803183021b10928f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ec0cde371149e5be6ca5e9803183021b10928f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ec0cde371149e5be6ca5e9803183021b10928f8/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5c3f8ddcaa1164079105c452429fccf8127b01b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c3f8ddcaa1164079105c452429fccf8127b01b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5c3f8ddcaa1164079105c452429fccf8127b01b6"
      }
    ],
    "stats": {
      "total": 90,
      "additions": 51,
      "deletions": 39
    },
    "files": [
      {
        "sha": "fe628097a920ac7c97747db821961f0a198f53c7",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 39,
        "changes": 90,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ec0cde371149e5be6ca5e9803183021b10928f8/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ec0cde371149e5be6ca5e9803183021b10928f8/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=5ec0cde371149e5be6ca5e9803183021b10928f8",
        "patch": "@@ -183,6 +183,54 @@ UniValue getdifficulty(const UniValue& params, bool fHelp)\n     return GetDifficulty();\n }\n \n+std::string EntryDescriptionString()\n+{\n+    return \"    \\\"size\\\" : n,             (numeric) transaction size in bytes\\n\"\n+           \"    \\\"fee\\\" : n,              (numeric) transaction fee in \" + CURRENCY_UNIT + \"\\n\"\n+           \"    \\\"modifiedfee\\\" : n,      (numeric) transaction fee with fee deltas used for mining priority\\n\"\n+           \"    \\\"time\\\" : n,             (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT\\n\"\n+           \"    \\\"height\\\" : n,           (numeric) block height when transaction entered pool\\n\"\n+           \"    \\\"startingpriority\\\" : n, (numeric) priority when transaction entered pool\\n\"\n+           \"    \\\"currentpriority\\\" : n,  (numeric) transaction priority now\\n\"\n+           \"    \\\"descendantcount\\\" : n,  (numeric) number of in-mempool descendant transactions (including this one)\\n\"\n+           \"    \\\"descendantsize\\\" : n,   (numeric) size of in-mempool descendants (including this one)\\n\"\n+           \"    \\\"descendantfees\\\" : n,   (numeric) modified fees (see above) of in-mempool descendants (including this one)\\n\"\n+           \"    \\\"depends\\\" : [           (array) unconfirmed transactions used as inputs for this transaction\\n\"\n+           \"        \\\"transactionid\\\",    (string) parent transaction id\\n\"\n+           \"       ... ]\\n\";\n+}\n+\n+void entryToJSON(UniValue &info, const CTxMemPoolEntry &e)\n+{\n+    AssertLockHeld(mempool.cs);\n+\n+    info.push_back(Pair(\"size\", (int)e.GetTxSize()));\n+    info.push_back(Pair(\"fee\", ValueFromAmount(e.GetFee())));\n+    info.push_back(Pair(\"modifiedfee\", ValueFromAmount(e.GetModifiedFee())));\n+    info.push_back(Pair(\"time\", e.GetTime()));\n+    info.push_back(Pair(\"height\", (int)e.GetHeight()));\n+    info.push_back(Pair(\"startingpriority\", e.GetPriority(e.GetHeight())));\n+    info.push_back(Pair(\"currentpriority\", e.GetPriority(chainActive.Height())));\n+    info.push_back(Pair(\"descendantcount\", e.GetCountWithDescendants()));\n+    info.push_back(Pair(\"descendantsize\", e.GetSizeWithDescendants()));\n+    info.push_back(Pair(\"descendantfees\", e.GetModFeesWithDescendants()));\n+    const CTransaction& tx = e.GetTx();\n+    set<string> setDepends;\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n+    {\n+        if (mempool.exists(txin.prevout.hash))\n+            setDepends.insert(txin.prevout.hash.ToString());\n+    }\n+\n+    UniValue depends(UniValue::VARR);\n+    BOOST_FOREACH(const string& dep, setDepends)\n+    {\n+        depends.push_back(dep);\n+    }\n+\n+    info.push_back(Pair(\"depends\", depends));\n+}\n+\n UniValue mempoolToJSON(bool fVerbose = false)\n {\n     if (fVerbose)\n@@ -193,31 +241,7 @@ UniValue mempoolToJSON(bool fVerbose = false)\n         {\n             const uint256& hash = e.GetTx().GetHash();\n             UniValue info(UniValue::VOBJ);\n-            info.push_back(Pair(\"size\", (int)e.GetTxSize()));\n-            info.push_back(Pair(\"fee\", ValueFromAmount(e.GetFee())));\n-            info.push_back(Pair(\"modifiedfee\", ValueFromAmount(e.GetModifiedFee())));\n-            info.push_back(Pair(\"time\", e.GetTime()));\n-            info.push_back(Pair(\"height\", (int)e.GetHeight()));\n-            info.push_back(Pair(\"startingpriority\", e.GetPriority(e.GetHeight())));\n-            info.push_back(Pair(\"currentpriority\", e.GetPriority(chainActive.Height())));\n-            info.push_back(Pair(\"descendantcount\", e.GetCountWithDescendants()));\n-            info.push_back(Pair(\"descendantsize\", e.GetSizeWithDescendants()));\n-            info.push_back(Pair(\"descendantfees\", e.GetModFeesWithDescendants()));\n-            const CTransaction& tx = e.GetTx();\n-            set<string> setDepends;\n-            BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-            {\n-                if (mempool.exists(txin.prevout.hash))\n-                    setDepends.insert(txin.prevout.hash.ToString());\n-            }\n-\n-            UniValue depends(UniValue::VARR);\n-            BOOST_FOREACH(const string& dep, setDepends)\n-            {\n-                depends.push_back(dep);\n-            }\n-\n-            info.push_back(Pair(\"depends\", depends));\n+            entryToJSON(info, e);\n             o.push_back(Pair(hash.ToString(), info));\n         }\n         return o;\n@@ -251,20 +275,8 @@ UniValue getrawmempool(const UniValue& params, bool fHelp)\n             \"\\nResult: (for verbose = true):\\n\"\n             \"{                           (json object)\\n\"\n             \"  \\\"transactionid\\\" : {       (json object)\\n\"\n-            \"    \\\"size\\\" : n,             (numeric) transaction size in bytes\\n\"\n-            \"    \\\"fee\\\" : n,              (numeric) transaction fee in \" + CURRENCY_UNIT + \"\\n\"\n-            \"    \\\"modifiedfee\\\" : n,      (numeric) transaction fee with fee deltas used for mining priority\\n\"\n-            \"    \\\"time\\\" : n,             (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT\\n\"\n-            \"    \\\"height\\\" : n,           (numeric) block height when transaction entered pool\\n\"\n-            \"    \\\"startingpriority\\\" : n, (numeric) priority when transaction entered pool\\n\"\n-            \"    \\\"currentpriority\\\" : n,  (numeric) transaction priority now\\n\"\n-            \"    \\\"descendantcount\\\" : n,  (numeric) number of in-mempool descendant transactions (including this one)\\n\"\n-            \"    \\\"descendantsize\\\" : n,   (numeric) size of in-mempool descendants (including this one)\\n\"\n-            \"    \\\"descendantfees\\\" : n,   (numeric) modified fees (see above) of in-mempool descendants (including this one)\\n\"\n-            \"    \\\"depends\\\" : [           (array) unconfirmed transactions used as inputs for this transaction\\n\"\n-            \"        \\\"transactionid\\\",    (string) parent transaction id\\n\"\n-            \"       ... ]\\n\"\n-            \"  }, ...\\n\"\n+            + EntryDescriptionString()\n+            + \"  }, ...\\n\"\n             \"}\\n\"\n             \"\\nExamples\\n\"\n             + HelpExampleCli(\"getrawmempool\", \"true\")"
      }
    ]
  },
  {
    "sha": "8f7b5dc4afb28e38ce0223339b8ce77aa0a47845",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZjdiNWRjNGFmYjI4ZTM4Y2UwMjIzMzM5YjhjZTc3YWEwYTQ3ODQ1",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-01-04T18:58:59Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-05-17T17:12:11Z"
      },
      "message": "Add getmempoolancestors RPC call",
      "tree": {
        "sha": "a3fc8ea721d6c90a64be2e54ead5f011deb79b14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a3fc8ea721d6c90a64be2e54ead5f011deb79b14"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f7b5dc4afb28e38ce0223339b8ce77aa0a47845",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f7b5dc4afb28e38ce0223339b8ce77aa0a47845",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8f7b5dc4afb28e38ce0223339b8ce77aa0a47845",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f7b5dc4afb28e38ce0223339b8ce77aa0a47845/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ec0cde371149e5be6ca5e9803183021b10928f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ec0cde371149e5be6ca5e9803183021b10928f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ec0cde371149e5be6ca5e9803183021b10928f8"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 66,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6c005068d86d26aaa3c19b9922c58fc32a245f29",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f7b5dc4afb28e38ce0223339b8ce77aa0a47845/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f7b5dc4afb28e38ce0223339b8ce77aa0a47845/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=8f7b5dc4afb28e38ce0223339b8ce77aa0a47845",
        "patch": "@@ -292,6 +292,70 @@ UniValue getrawmempool(const UniValue& params, bool fHelp)\n     return mempoolToJSON(fVerbose);\n }\n \n+UniValue getmempoolancestors(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 2) {\n+        throw runtime_error(\n+            \"getmempoolancestors txid (verbose)\\n\"\n+            \"\\nIf txid is in the mempool, returns all in-mempool ancestors.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"txid\\\"                   (string, required) The transaction id (must be in mempool)\\n\"\n+            \"2. verbose                  (boolean, optional, default=false) true for a json object, false for array of transaction ids\\n\"\n+            \"\\nResult (for verbose=false):\\n\"\n+            \"[                       (json array of string)\\n\"\n+            \"  \\\"transactionid\\\"           (string) The transaction id of an in-mempool ancestor transaction\\n\"\n+            \"  ,...\\n\"\n+            \"]\\n\"\n+            \"\\nResult (for verbose=true):\\n\"\n+            \"{                           (json object)\\n\"\n+            \"  \\\"transactionid\\\" : {       (json object)\\n\"\n+            + EntryDescriptionString()\n+            + \"  }, ...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples\\n\"\n+            + HelpExampleCli(\"getmempoolancestors\", \"\\\"mytxid\\\"\")\n+            + HelpExampleRpc(\"getmempoolancestors\", \"\\\"mytxid\\\"\")\n+            );\n+    }\n+\n+    bool fVerbose = false;\n+    if (params.size() > 1)\n+        fVerbose = params[1].get_bool();\n+\n+    uint256 hash = ParseHashV(params[0], \"parameter 1\");\n+\n+    LOCK(mempool.cs);\n+\n+    CTxMemPool::txiter it = mempool.mapTx.find(hash);\n+    if (it == mempool.mapTx.end()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Transaction not in mempool\");\n+    }\n+\n+    CTxMemPool::setEntries setAncestors;\n+    uint64_t noLimit = std::numeric_limits<uint64_t>::max();\n+    std::string dummy;\n+    mempool.CalculateMemPoolAncestors(*it, setAncestors, noLimit, noLimit, noLimit, noLimit, dummy, false);\n+\n+    if (!fVerbose) {\n+        UniValue o(UniValue::VARR);\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors) {\n+            o.push_back(ancestorIt->GetTx().GetHash().ToString());\n+        }\n+\n+        return o;\n+    } else {\n+        UniValue o(UniValue::VOBJ);\n+        BOOST_FOREACH(CTxMemPool::txiter ancestorIt, setAncestors) {\n+            const CTxMemPoolEntry &e = *ancestorIt;\n+            const uint256& hash = e.GetTx().GetHash();\n+            UniValue info(UniValue::VOBJ);\n+            entryToJSON(info, e);\n+            o.push_back(Pair(hash.ToString(), info));\n+        }\n+        return o;\n+    }\n+}\n+\n UniValue getblockhash(const UniValue& params, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n@@ -1016,6 +1080,7 @@ static const CRPCCommand commands[] =\n     { \"blockchain\",         \"getblockheader\",         &getblockheader,         true  },\n     { \"blockchain\",         \"getchaintips\",           &getchaintips,           true  },\n     { \"blockchain\",         \"getdifficulty\",          &getdifficulty,          true  },\n+    { \"blockchain\",         \"getmempoolancestors\",    &getmempoolancestors,    true  },\n     { \"blockchain\",         \"getmempoolinfo\",         &getmempoolinfo,         true  },\n     { \"blockchain\",         \"getrawmempool\",          &getrawmempool,          true  },\n     { \"blockchain\",         \"gettxout\",               &gettxout,               true  },"
      },
      {
        "sha": "3dfc27fff78af0e15218f5d997af0fd89c787d73",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f7b5dc4afb28e38ce0223339b8ce77aa0a47845/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f7b5dc4afb28e38ce0223339b8ce77aa0a47845/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=8f7b5dc4afb28e38ce0223339b8ce77aa0a47845",
        "patch": "@@ -102,6 +102,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"prioritisetransaction\", 2 },\n     { \"setban\", 2 },\n     { \"setban\", 3 },\n+    { \"getmempoolancestors\", 1 },\n };\n \n class CRPCConvertTable"
      }
    ]
  },
  {
    "sha": "0dfd86956dcd2ac8a2223437e9bbd4f29bd35fce",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZGZkODY5NTZkY2QyYWM4YTIyMjM0MzdlOWJiZDRmMjliZDM1ZmNl",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-01-04T19:48:22Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-06-09T13:56:27Z"
      },
      "message": "Add getmempooldescendants RPC call",
      "tree": {
        "sha": "423ec0c784de43ec93d599103a256363aea5a48a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/423ec0c784de43ec93d599103a256363aea5a48a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0dfd86956dcd2ac8a2223437e9bbd4f29bd35fce",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0dfd86956dcd2ac8a2223437e9bbd4f29bd35fce",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0dfd86956dcd2ac8a2223437e9bbd4f29bd35fce",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0dfd86956dcd2ac8a2223437e9bbd4f29bd35fce/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8f7b5dc4afb28e38ce0223339b8ce77aa0a47845",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f7b5dc4afb28e38ce0223339b8ce77aa0a47845",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f7b5dc4afb28e38ce0223339b8ce77aa0a47845"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 67,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e53ed1c1b1d4d21ab7723fc0c83a107c846b7d39",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 66,
        "deletions": 1,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0dfd86956dcd2ac8a2223437e9bbd4f29bd35fce/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0dfd86956dcd2ac8a2223437e9bbd4f29bd35fce/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=0dfd86956dcd2ac8a2223437e9bbd4f29bd35fce",
        "patch": "@@ -302,7 +302,7 @@ UniValue getmempoolancestors(const UniValue& params, bool fHelp)\n             \"1. \\\"txid\\\"                   (string, required) The transaction id (must be in mempool)\\n\"\n             \"2. verbose                  (boolean, optional, default=false) true for a json object, false for array of transaction ids\\n\"\n             \"\\nResult (for verbose=false):\\n\"\n-            \"[                       (json array of string)\\n\"\n+            \"[                       (json array of strings)\\n\"\n             \"  \\\"transactionid\\\"           (string) The transaction id of an in-mempool ancestor transaction\\n\"\n             \"  ,...\\n\"\n             \"]\\n\"\n@@ -356,6 +356,70 @@ UniValue getmempoolancestors(const UniValue& params, bool fHelp)\n     }\n }\n \n+UniValue getmempooldescendants(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 2) {\n+        throw runtime_error(\n+            \"getmempooldescendants txid (verbose)\\n\"\n+            \"\\nIf txid is in the mempool, returns all in-mempool descendants.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"txid\\\"                   (string, required) The transaction id (must be in mempool)\\n\"\n+            \"2. verbose                  (boolean, optional, default=false) true for a json object, false for array of transaction ids\\n\"\n+            \"\\nResult (for verbose=false):\\n\"\n+            \"[                       (json array of strings)\\n\"\n+            \"  \\\"transactionid\\\"           (string) The transaction id of an in-mempool descendant transaction\\n\"\n+            \"  ,...\\n\"\n+            \"]\\n\"\n+            \"\\nResult (for verbose=true):\\n\"\n+            \"{                           (json object)\\n\"\n+            \"  \\\"transactionid\\\" : {       (json object)\\n\"\n+            + EntryDescriptionString()\n+            + \"  }, ...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples\\n\"\n+            + HelpExampleCli(\"getmempooldescendants\", \"\\\"mytxid\\\"\")\n+            + HelpExampleRpc(\"getmempooldescendants\", \"\\\"mytxid\\\"\")\n+            );\n+    }\n+\n+    bool fVerbose = false;\n+    if (params.size() > 1)\n+        fVerbose = params[1].get_bool();\n+\n+    uint256 hash = ParseHashV(params[0], \"parameter 1\");\n+\n+    LOCK(mempool.cs);\n+\n+    CTxMemPool::txiter it = mempool.mapTx.find(hash);\n+    if (it == mempool.mapTx.end()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Transaction not in mempool\");\n+    }\n+\n+    CTxMemPool::setEntries setDescendants;\n+    mempool.CalculateDescendants(it, setDescendants);\n+    // CTxMemPool::CalculateDescendants will include the given tx\n+    setDescendants.erase(it);\n+\n+    if (!fVerbose) {\n+        UniValue o(UniValue::VARR);\n+        BOOST_FOREACH(CTxMemPool::txiter descendantIt, setDescendants) {\n+            o.push_back(descendantIt->GetTx().GetHash().ToString());\n+        }\n+\n+        return o;\n+    } else {\n+        UniValue o(UniValue::VOBJ);\n+        BOOST_FOREACH(CTxMemPool::txiter descendantIt, setDescendants) {\n+            const CTxMemPoolEntry &e = *descendantIt;\n+            const uint256& hash = e.GetTx().GetHash();\n+            UniValue info(UniValue::VOBJ);\n+            entryToJSON(info, e);\n+            o.push_back(Pair(hash.ToString(), info));\n+        }\n+        return o;\n+    }\n+}\n+\n UniValue getblockhash(const UniValue& params, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n@@ -1081,6 +1145,7 @@ static const CRPCCommand commands[] =\n     { \"blockchain\",         \"getchaintips\",           &getchaintips,           true  },\n     { \"blockchain\",         \"getdifficulty\",          &getdifficulty,          true  },\n     { \"blockchain\",         \"getmempoolancestors\",    &getmempoolancestors,    true  },\n+    { \"blockchain\",         \"getmempooldescendants\",  &getmempooldescendants,  true  },\n     { \"blockchain\",         \"getmempoolinfo\",         &getmempoolinfo,         true  },\n     { \"blockchain\",         \"getrawmempool\",          &getrawmempool,          true  },\n     { \"blockchain\",         \"gettxout\",               &gettxout,               true  },"
      },
      {
        "sha": "d0675fdb49506c41271998d73dc4698809feeb6c",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0dfd86956dcd2ac8a2223437e9bbd4f29bd35fce/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0dfd86956dcd2ac8a2223437e9bbd4f29bd35fce/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=0dfd86956dcd2ac8a2223437e9bbd4f29bd35fce",
        "patch": "@@ -103,6 +103,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"setban\", 2 },\n     { \"setban\", 3 },\n     { \"getmempoolancestors\", 1 },\n+    { \"getmempooldescendants\", 1 },\n };\n \n class CRPCConvertTable"
      }
    ]
  },
  {
    "sha": "b09b8135ae1c4df103c68543c931e479fbb907ab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMDliODEzNWFlMWM0ZGYxMDNjNjg1NDNjOTMxZTQ3OWZiYjkwN2Fi",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-01-04T19:57:58Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-06-09T13:56:27Z"
      },
      "message": "Add getmempoolentry RPC call",
      "tree": {
        "sha": "058a8f39d4912a026eff7118fc586cfd6c2a0dc5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/058a8f39d4912a026eff7118fc586cfd6c2a0dc5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b09b8135ae1c4df103c68543c931e479fbb907ab",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b09b8135ae1c4df103c68543c931e479fbb907ab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b09b8135ae1c4df103c68543c931e479fbb907ab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b09b8135ae1c4df103c68543c931e479fbb907ab/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0dfd86956dcd2ac8a2223437e9bbd4f29bd35fce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0dfd86956dcd2ac8a2223437e9bbd4f29bd35fce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0dfd86956dcd2ac8a2223437e9bbd4f29bd35fce"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 34,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6a07bb8c4eb10508ddce8ff594b95edeac62c349",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b09b8135ae1c4df103c68543c931e479fbb907ab/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b09b8135ae1c4df103c68543c931e479fbb907ab/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=b09b8135ae1c4df103c68543c931e479fbb907ab",
        "patch": "@@ -420,6 +420,39 @@ UniValue getmempooldescendants(const UniValue& params, bool fHelp)\n     }\n }\n \n+UniValue getmempoolentry(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 1) {\n+        throw runtime_error(\n+            \"getmempoolentry txid\\n\"\n+            \"\\nReturns mempool data for given transaction\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"txid\\\"                   (string, required) The transaction id (must be in mempool)\\n\"\n+            \"\\nResult:\\n\"\n+            \"{                           (json object)\\n\"\n+            + EntryDescriptionString()\n+            + \"}\\n\"\n+            \"\\nExamples\\n\"\n+            + HelpExampleCli(\"getmempoolentry\", \"\\\"mytxid\\\"\")\n+            + HelpExampleRpc(\"getmempoolentry\", \"\\\"mytxid\\\"\")\n+        );\n+    }\n+\n+    uint256 hash = ParseHashV(params[0], \"parameter 1\");\n+\n+    LOCK(mempool.cs);\n+\n+    CTxMemPool::txiter it = mempool.mapTx.find(hash);\n+    if (it == mempool.mapTx.end()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Transaction not in mempool\");\n+    }\n+\n+    const CTxMemPoolEntry &e = *it;\n+    UniValue info(UniValue::VOBJ);\n+    entryToJSON(info, e);\n+    return info;\n+}\n+\n UniValue getblockhash(const UniValue& params, bool fHelp)\n {\n     if (fHelp || params.size() != 1)\n@@ -1146,6 +1179,7 @@ static const CRPCCommand commands[] =\n     { \"blockchain\",         \"getdifficulty\",          &getdifficulty,          true  },\n     { \"blockchain\",         \"getmempoolancestors\",    &getmempoolancestors,    true  },\n     { \"blockchain\",         \"getmempooldescendants\",  &getmempooldescendants,  true  },\n+    { \"blockchain\",         \"getmempoolentry\",        &getmempoolentry,        true  },\n     { \"blockchain\",         \"getmempoolinfo\",         &getmempoolinfo,         true  },\n     { \"blockchain\",         \"getrawmempool\",          &getrawmempool,          true  },\n     { \"blockchain\",         \"gettxout\",               &gettxout,               true  },"
      }
    ]
  },
  {
    "sha": "a9b8390222a19496922c05d0c3f31bd6f75e1ac6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOWI4MzkwMjIyYTE5NDk2OTIyYzA1ZDBjM2YzMWJkNmY3NWUxYWM2",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-01-04T20:15:15Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-06-09T13:56:27Z"
      },
      "message": "Add test coverage for new RPC calls",
      "tree": {
        "sha": "36cc273af31ce0891f318675aa2d4b7f2341f3b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/36cc273af31ce0891f318675aa2d4b7f2341f3b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9b8390222a19496922c05d0c3f31bd6f75e1ac6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9b8390222a19496922c05d0c3f31bd6f75e1ac6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a9b8390222a19496922c05d0c3f31bd6f75e1ac6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9b8390222a19496922c05d0c3f31bd6f75e1ac6/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b09b8135ae1c4df103c68543c931e479fbb907ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b09b8135ae1c4df103c68543c931e479fbb907ab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b09b8135ae1c4df103c68543c931e479fbb907ab"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 28,
      "deletions": 0
    },
    "files": [
      {
        "sha": "35a7e2326de52523321d27ce4cb2a4ad6d81648d",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9b8390222a19496922c05d0c3f31bd6f75e1ac6/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9b8390222a19496922c05d0c3f31bd6f75e1ac6/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=a9b8390222a19496922c05d0c3f31bd6f75e1ac6",
        "patch": "@@ -61,7 +61,14 @@ def run_test(self):\n         descendant_fees = 0\n         descendant_size = 0\n \n+        descendants = []\n+        ancestors = list(chain)\n         for x in reversed(chain):\n+            # Check that getmempoolentry is consistent with getrawmempool\n+            entry = self.nodes[0].getmempoolentry(x)\n+            assert_equal(entry, mempool[x])\n+\n+            # Check that the descendant calculations are correct\n             assert_equal(mempool[x]['descendantcount'], descendant_count)\n             descendant_fees += mempool[x]['fee']\n             assert_equal(mempool[x]['modifiedfee'], mempool[x]['fee'])\n@@ -70,6 +77,27 @@ def run_test(self):\n             assert_equal(mempool[x]['descendantsize'], descendant_size)\n             descendant_count += 1\n \n+            # Check that getmempooldescendants is correct\n+            assert_equal(sorted(descendants), sorted(self.nodes[0].getmempooldescendants(x)))\n+            descendants.append(x)\n+\n+            # Check that getmempoolancestors is correct\n+            ancestors.remove(x)\n+            assert_equal(sorted(ancestors), sorted(self.nodes[0].getmempoolancestors(x)))\n+\n+        # Check that getmempoolancestors/getmempooldescendants correctly handle verbose=true\n+        v_ancestors = self.nodes[0].getmempoolancestors(chain[-1], True)\n+        assert_equal(len(v_ancestors), len(chain)-1)\n+        for x in v_ancestors.keys():\n+            assert_equal(mempool[x], v_ancestors[x])\n+        assert(chain[-1] not in v_ancestors.keys())\n+\n+        v_descendants = self.nodes[0].getmempooldescendants(chain[0], True)\n+        assert_equal(len(v_descendants), len(chain)-1)\n+        for x in v_descendants.keys():\n+            assert_equal(mempool[x], v_descendants[x])\n+        assert(chain[0] not in v_descendants.keys())\n+\n         # Check that descendant modified fees includes fee deltas from\n         # prioritisetransaction\n         self.nodes[0].prioritisetransaction(chain[-1], 0, 1000)"
      }
    ]
  },
  {
    "sha": "7f6eda80438be452a0b6e079737fb6fe00bb26b7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZjZlZGE4MDQzOGJlNDUyYTBiNmUwNzk3MzdmYjZmZTAwYmIyNmI3",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-05-17T12:42:35Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-06-09T13:56:27Z"
      },
      "message": "Add ancestor statistics to mempool entry RPC output",
      "tree": {
        "sha": "35256e688f7ce8ca08534f86cfbaf02838b6ca2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/35256e688f7ce8ca08534f86cfbaf02838b6ca2c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f6eda80438be452a0b6e079737fb6fe00bb26b7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f6eda80438be452a0b6e079737fb6fe00bb26b7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7f6eda80438be452a0b6e079737fb6fe00bb26b7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f6eda80438be452a0b6e079737fb6fe00bb26b7/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9b8390222a19496922c05d0c3f31bd6f75e1ac6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9b8390222a19496922c05d0c3f31bd6f75e1ac6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9b8390222a19496922c05d0c3f31bd6f75e1ac6"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1bb365d36cdad58f73ffc338c90a29eab9a9ac22",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f6eda80438be452a0b6e079737fb6fe00bb26b7/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f6eda80438be452a0b6e079737fb6fe00bb26b7/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=7f6eda80438be452a0b6e079737fb6fe00bb26b7",
        "patch": "@@ -195,6 +195,9 @@ std::string EntryDescriptionString()\n            \"    \\\"descendantcount\\\" : n,  (numeric) number of in-mempool descendant transactions (including this one)\\n\"\n            \"    \\\"descendantsize\\\" : n,   (numeric) size of in-mempool descendants (including this one)\\n\"\n            \"    \\\"descendantfees\\\" : n,   (numeric) modified fees (see above) of in-mempool descendants (including this one)\\n\"\n+           \"    \\\"ancestorcount\\\" : n,    (numeric) number of in-mempool ancestor transactions (including this one)\\n\"\n+           \"    \\\"ancestorsize\\\" : n,     (numeric) size of in-mempool ancestors (including this one)\\n\"\n+           \"    \\\"ancestorfees\\\" : n,     (numeric) modified fees (see above) of in-mempool ancestors (including this one)\\n\"\n            \"    \\\"depends\\\" : [           (array) unconfirmed transactions used as inputs for this transaction\\n\"\n            \"        \\\"transactionid\\\",    (string) parent transaction id\\n\"\n            \"       ... ]\\n\";\n@@ -214,6 +217,9 @@ void entryToJSON(UniValue &info, const CTxMemPoolEntry &e)\n     info.push_back(Pair(\"descendantcount\", e.GetCountWithDescendants()));\n     info.push_back(Pair(\"descendantsize\", e.GetSizeWithDescendants()));\n     info.push_back(Pair(\"descendantfees\", e.GetModFeesWithDescendants()));\n+    info.push_back(Pair(\"ancestorcount\", e.GetCountWithAncestors()));\n+    info.push_back(Pair(\"ancestorsize\", e.GetSizeWithAncestors()));\n+    info.push_back(Pair(\"ancestorfees\", e.GetModFeesWithAncestors()));\n     const CTransaction& tx = e.GetTx();\n     set<string> setDepends;\n     BOOST_FOREACH(const CTxIn& txin, tx.vin)"
      }
    ]
  },
  {
    "sha": "176e19b571f722437043d2aa80a69ae21852c70d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzZlMTliNTcxZjcyMjQzNzA0M2QyYWE4MGE2OWFlMjE4NTJjNzBk",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-05-17T13:01:12Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2016-06-09T13:56:27Z"
      },
      "message": "Mention new RPC's in release notes",
      "tree": {
        "sha": "5636e941c55727cd28207265c4aa0753623c07fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5636e941c55727cd28207265c4aa0753623c07fd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/176e19b571f722437043d2aa80a69ae21852c70d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/176e19b571f722437043d2aa80a69ae21852c70d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/176e19b571f722437043d2aa80a69ae21852c70d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/176e19b571f722437043d2aa80a69ae21852c70d/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f6eda80438be452a0b6e079737fb6fe00bb26b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f6eda80438be452a0b6e079737fb6fe00bb26b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f6eda80438be452a0b6e079737fb6fe00bb26b7"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "be619e41c6ae0a911ffcd23847cf460b5ef275cc",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/176e19b571f722437043d2aa80a69ae21852c70d/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/176e19b571f722437043d2aa80a69ae21852c70d/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=176e19b571f722437043d2aa80a69ae21852c70d",
        "patch": "@@ -80,6 +80,13 @@ The following outputs are affected by this change:\n - REST `/rest/block/` (JSON format when including extended tx details)\n - `bitcoin-tx -json`\n \n+New mempool information RPC calls\n+---------------------------------\n+\n+RPC calls have been added to output detailed statistics for individual mempool\n+entries, as well as to calculate the in-mempool ancestors or descendants of a\n+transaction: see `getmempoolentry`, `getmempoolancestors`, `getmempooldescendants`.\n+\n ### ZMQ\n \n Each ZMQ notification now contains an up-counting sequence number that allows"
      }
    ]
  }
]