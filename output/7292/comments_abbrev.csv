btcdrak,2016-01-05T03:19:49Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-168881433,168881433,
jonasschnelli,2016-01-05T08:08:06Z,Concept ACK.\nSome concrete use-cases would be nice.\nNice to see the new RPC commands `cs_main` lock free.\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-168930592,168930592,
sdaftuar,2016-01-05T14:28:02Z,Updated to remove dead code I inadvertently left in `rpcblockchain.cpp`.\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-169015862,169015862,
sdaftuar,2016-01-06T18:43:59Z,"Here's an example of a tool that would benefit from the getdescendants function:\nhttps://github.com/sdaftuar/replace-by-fee-tools/blob/d0121b03d02c1a7e5e16425b55da1302ddf081aa/combine-transactions.py\n\nThis is a script that takes two txid's (that are signaling opt-in RBF) and combines them down to one -- consolidating duplicate output addresses (if any) and removing pay-to-self outputs, assumed ",https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-169416234,169416234,
sipa,2016-01-06T19:14:55Z,Ultra nit before reading the code: it's not obvious from the RPC names that\nit's about the mempool.\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-169425046,169425046,
sdaftuar,2016-01-07T13:20:29Z,@sipa True.  Perhaps `getmempoolancestors/getmempooldescendants`?  I'm open to suggestions.\n\n@laanwj if this code is ok I think it would make sense to include this in 0.12\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-169661350,169661350,
sdaftuar,2016-01-12T14:03:00Z,Updated with new RPC names (`getmempoolancestors` and `getmempooldescendants`).\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-170920648,170920648,
luke-jr,2016-01-15T17:38:55Z,Any reason not to just add the ancestors/descendants info to getrawmempool (and also the getmempoolentry)?\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-172027998,172027998,
sdaftuar,2016-01-15T17:48:08Z,"The goal was to avoid having to dump the entire mempool if you were only interested in a very small subset of it.  But I suppose there's no reason we couldn't also show the txid's of ancestors and descendants when you call `getrawmempool` (with verbose=true).  If that seems useful, I'm happy to add that.\n\n(edited)\nOh, right, you are suggesting that, and then yes I agree it would also make sense",https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-172031960,172031960,
sdaftuar,2016-01-18T15:45:40Z,"@luke-jr  On further thought, the downside to that is that doing the calculation could cause `getrawmempool` to get up to ~25x slower (default policy allows length 25 ancestor and descendant chains, and the calculation of ancestors and descendants requires walking those chains), which on a full mempool could be a meaningful -- and perhaps unacceptable? -- slowdown.\n\nThe other possibility would b",https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-172566178,172566178,
laanwj,2016-01-22T15:55:04Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-173960074,173960074,
laanwj,2016-02-03T11:34:52Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-179178339,179178339,
sdaftuar,2016-02-11T20:47:04Z,"Rebased.  There weren't any actual conflicts though, so not sure why github thought it wouldn't merge cleanly?\n",https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-183054628,183054628,
laanwj,2016-02-12T16:05:53Z,"Thanks!\nI've noticed that before. Github is somewhat less good (or ""more careful"") at merging than git.\n",https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-183387739,183387739,
sipa,2016-05-17T06:41:46Z,Rebase needed.\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-219632523,219632523,
sdaftuar,2016-05-17T13:07:45Z,"Rebased.  Also added a commit that extends the mempool entry output to include the ancestor state (added by #7594), as well as a brief update to the release notes.\n",https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-219711731,219711731,
jonasschnelli,2016-05-17T15:13:14Z,"I don't know why Travis WIN32 fails on the unit tests (sadly, It seems that the unit-test log is missing in the travis dump).\n\n`mempool_packages.py` needs to be added to the `rpc-tests.py` script.\n\nTested ACK 69c9553586befdbc9ca6a474ae294bebe998163b modulo nits.\n",https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-219749747,219749747,
sdaftuar,2016-05-17T17:15:28Z,Fixed @jonasschnelli's nits.  No idea how these changes could affect the unit tests on any platform; the travis failure seems disturbing...\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-219788193,219788193,
paveljanik,2016-05-17T18:10:46Z,ACK https://github.com/bitcoin/bitcoin/pull/7292/commits/170bfea0260f58aaed24c230a3258cfad5b31398\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-219804782,219804782,
sdaftuar,2016-05-18T14:32:06Z,Pushed a fix to address @paveljanik's nit\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-220044814,220044814,
sdaftuar,2016-05-18T15:43:05Z,Unit tests are now failing on linux.  I'll see if I can reproduce locally.\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-220068315,220068315,
sdaftuar,2016-05-18T15:44:42Z,"Oh, I suppose it could be this: https://github.com/bitcoin/bitcoin/issues/8069#issue-155434890\n",https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-220068850,220068850,
sdaftuar,2016-05-20T07:23:13Z,"Looks like the travis issue was fixed by #8070, so I think this is ready now.\n",https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-220535972,220535972,
paveljanik,2016-05-20T07:26:00Z,reACK https://github.com/bitcoin/bitcoin/pull/7292/commits/5379307a23177c33b5a869513d1d1d09790b0269\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-220536482,220536482,
MarcoFalke,2016-05-20T08:56:21Z,utACK 5379307\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-220552344,220552344,
arowser,2016-05-25T08:45:03Z,Can one of the admins verify this patch?\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-221510768,221510768,
sipa,2016-06-03T14:06:09Z,utACK 5379307a23177c33b5a869513d1d1d09790b0269\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-223587877,223587877,
sdaftuar,2016-06-09T13:21:42Z,Is there anything holding this up?\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-224892314,224892314,
sipa,2016-06-09T13:29:05Z,Can you squash the typo?\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-224894300,224894300,
sdaftuar,2016-06-09T13:58:21Z,@sipa done\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-224902703,224902703,
sipa,2016-06-09T14:03:27Z,utACK 176e19b571f722437043d2aa80a69ae21852c70d (same tree as before)\n,https://github.com/bitcoin/bitcoin/pull/7292#issuecomment-224904180,224904180,
jonasschnelli,2016-05-17T14:56:44Z,nit: missing four whitespace before `(` \n,https://github.com/bitcoin/bitcoin/pull/7292#discussion_r63537719,63537719,src/rpc/blockchain.cpp
paveljanik,2016-05-17T18:01:08Z,json array of string_s_\n,https://github.com/bitcoin/bitcoin/pull/7292#discussion_r63572973,63572973,src/rpc/blockchain.cpp
