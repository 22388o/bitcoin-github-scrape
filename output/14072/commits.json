[
  {
    "sha": "ffb0adde09b17a19388bb2a906424a32ae5e1433",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZmIwYWRkZTA5YjE3YTE5Mzg4YmIyYTkwNjQyNGEzMmFlNWUxNDMz",
    "commit": {
      "author": {
        "name": "Jesse Cohen",
        "email": "jc@jc.lol",
        "date": "2018-08-26T15:26:26Z"
      },
      "committer": {
        "name": "Jesse Cohen",
        "email": "jc@jc.lol",
        "date": "2018-08-26T15:26:26Z"
      },
      "message": "Make fChecked an atomic<bool>\n\nCheckBlock can be invoked from multiple threads in parallel. To avoid\na data race, fChecked should be atomic. In practice, this would have\nhad limited effect currently since these paths are effectively\nsingle-threaded in practice, except to maybe occasionally cause a\nslight bit of redundant work to be performed in CheckBlock.",
      "tree": {
        "sha": "94a84bc9511385bb6a53e28ddf8fd4b97415b19e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/94a84bc9511385bb6a53e28ddf8fd4b97415b19e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ffb0adde09b17a19388bb2a906424a32ae5e1433",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffb0adde09b17a19388bb2a906424a32ae5e1433",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ffb0adde09b17a19388bb2a906424a32ae5e1433",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffb0adde09b17a19388bb2a906424a32ae5e1433/comments",
    "author": {
      "login": "skeees",
      "id": 195769,
      "node_id": "MDQ6VXNlcjE5NTc2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skeees",
      "html_url": "https://github.com/skeees",
      "followers_url": "https://api.github.com/users/skeees/followers",
      "following_url": "https://api.github.com/users/skeees/following{/other_user}",
      "gists_url": "https://api.github.com/users/skeees/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skeees/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
      "organizations_url": "https://api.github.com/users/skeees/orgs",
      "repos_url": "https://api.github.com/users/skeees/repos",
      "events_url": "https://api.github.com/users/skeees/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skeees/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "skeees",
      "id": 195769,
      "node_id": "MDQ6VXNlcjE5NTc2OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skeees",
      "html_url": "https://github.com/skeees",
      "followers_url": "https://api.github.com/users/skeees/followers",
      "following_url": "https://api.github.com/users/skeees/following{/other_user}",
      "gists_url": "https://api.github.com/users/skeees/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skeees/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
      "organizations_url": "https://api.github.com/users/skeees/orgs",
      "repos_url": "https://api.github.com/users/skeees/repos",
      "events_url": "https://api.github.com/users/skeees/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skeees/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "683838b7e4ea561ee386d8ba7760bcb09b2d8465",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/683838b7e4ea561ee386d8ba7760bcb09b2d8465",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/683838b7e4ea561ee386d8ba7760bcb09b2d8465"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 19,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b78f4463011b9bdaf1c676fa3603052d50af4502",
        "filename": "src/primitives/block.h",
        "status": "modified",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffb0adde09b17a19388bb2a906424a32ae5e1433/src/primitives/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffb0adde09b17a19388bb2a906424a32ae5e1433/src/primitives/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.h?ref=ffb0adde09b17a19388bb2a906424a32ae5e1433",
        "patch": "@@ -6,6 +6,7 @@\n #ifndef BITCOIN_PRIMITIVES_BLOCK_H\n #define BITCOIN_PRIMITIVES_BLOCK_H\n \n+#include <atomic>\n #include <primitives/transaction.h>\n #include <serialize.h>\n #include <uint256.h>\n@@ -76,7 +77,7 @@ class CBlock : public CBlockHeader\n     std::vector<CTransactionRef> vtx;\n \n     // memory only\n-    mutable bool fChecked;\n+    mutable std::atomic<bool> fChecked;\n \n     CBlock()\n     {\n@@ -89,6 +90,23 @@ class CBlock : public CBlockHeader\n         *(static_cast<CBlockHeader*>(this)) = header;\n     }\n \n+    CBlock(const CBlock &block)\n+        :CBlock(static_cast<CBlockHeader>(block))\n+    {\n+        vtx = block.vtx;\n+        fChecked = false;\n+    }\n+\n+    CBlock& operator=(const CBlock& block)\n+    {\n+        fChecked = false;\n+\n+        *(static_cast<CBlockHeader*>(this)) = block;\n+        vtx = block.vtx;\n+\n+        return *this;\n+    }\n+\n     ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>"
      }
    ]
  }
]