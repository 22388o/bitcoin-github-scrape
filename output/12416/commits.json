[
  {
    "sha": "f40df29d96a29197f9949b63da80f9ba3152fc79",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNDBkZjI5ZDk2YTI5MTk3Zjk5NDliNjNkYTgwZjliYTMxNTJmYzc5",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-02-12T14:48:37Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-02-12T14:48:37Z"
      },
      "message": "Fix Windows build errors introduced in #10498\n\nFixes #12386",
      "tree": {
        "sha": "3a99c135017cc5af82919bf63449af011b3ffc1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a99c135017cc5af82919bf63449af011b3ffc1a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f40df29d96a29197f9949b63da80f9ba3152fc79",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f40df29d96a29197f9949b63da80f9ba3152fc79",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f40df29d96a29197f9949b63da80f9ba3152fc79",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f40df29d96a29197f9949b63da80f9ba3152fc79/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5dc00f68c49c46a380a98d06233f90528b8e2557",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5dc00f68c49c46a380a98d06233f90528b8e2557",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5dc00f68c49c46a380a98d06233f90528b8e2557"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "06e1f1a37c62aaf33e421c043ebb82de7eb4ed87",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f40df29d96a29197f9949b63da80f9ba3152fc79/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f40df29d96a29197f9949b63da80f9ba3152fc79/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=f40df29d96a29197f9949b63da80f9ba3152fc79",
        "patch": "@@ -706,7 +706,7 @@ int main(int argc, char *argv[])\n         if (BitcoinCore::baseInitialize()) {\n             app.requestInitialize();\n #if defined(Q_OS_WIN) && QT_VERSION >= 0x050000\n-            WinShutdownMonitor::registerShutdownBlockReason(QObject::tr(\"%1 didn't yet exit safely...\").arg(QObject::tr(PACKAGE_NAME)), static_cast<HWND>(app.getMainWinId()));\n+            WinShutdownMonitor::registerShutdownBlockReason(QObject::tr(\"%1 didn't yet exit safely...\").arg(QObject::tr(PACKAGE_NAME)), (HWND)app.getMainWinId());\n #endif\n             app.exec();\n             app.requestShutdown();"
      },
      {
        "sha": "1e7a76efc081274d70b489303b112149f6472337",
        "filename": "src/qt/winshutdownmonitor.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f40df29d96a29197f9949b63da80f9ba3152fc79/src/qt/winshutdownmonitor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f40df29d96a29197f9949b63da80f9ba3152fc79/src/qt/winshutdownmonitor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/winshutdownmonitor.cpp?ref=f40df29d96a29197f9949b63da80f9ba3152fc79",
        "patch": "@@ -56,7 +56,7 @@ bool WinShutdownMonitor::nativeEventFilter(const QByteArray &eventType, void *pM\n void WinShutdownMonitor::registerShutdownBlockReason(const QString& strReason, const HWND& mainWinId)\n {\n     typedef BOOL (WINAPI *PSHUTDOWNBRCREATE)(HWND, LPCWSTR);\n-    PSHUTDOWNBRCREATE shutdownBRCreate = static_cast<PSHUTDOWNBRCREATE>(GetProcAddress(GetModuleHandleA(\"User32.dll\"), \"ShutdownBlockReasonCreate\"));\n+    PSHUTDOWNBRCREATE shutdownBRCreate = (PSHUTDOWNBRCREATE)GetProcAddress(GetModuleHandleA(\"User32.dll\"), \"ShutdownBlockReasonCreate\");\n     if (shutdownBRCreate == nullptr) {\n         qWarning() << \"registerShutdownBlockReason: GetProcAddress for ShutdownBlockReasonCreate failed\";\n         return;"
      }
    ]
  }
]