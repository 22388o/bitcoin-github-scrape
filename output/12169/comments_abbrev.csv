laanwj,2018-02-12T10:00:00Z,"> Currently a lot of loops drop the const from the iterator which forces\nthe compiler to create a copy, this should be avoided by using the auto\nkeyword.\n\nI don't understand this rationale for using `auto`. Why doesn't adding `const` to the iterator have the same effect of avoiding copies?",https://github.com/bitcoin/bitcoin/pull/12169#issuecomment-364876052,364876052,
ryanofsky,2018-02-12T12:00:16Z,"> I don't understand this rationale for using auto. Why doesn't adding const to the iterator have the same effect of avoiding copies?\n\nIf you take a const reference to a type that requires an implicit conversion it will make a copy. Example where loop items are copied:\n\n```c++\nvector<pair<int, int>> v;\n...\nfor (const pair<short, short>& p : v);\n```\n\nUsing `auto` would avoid the",https://github.com/bitcoin/bitcoin/pull/12169#issuecomment-364902841,364902841,
dcousens,2018-02-12T12:03:24Z,"``` cpp\n#include <iostream>\n\nstruct Foo {\n	Foo () { std::cout << ""  Foo()"" << std::endl; }\n	Foo (const Foo& z) { std::cout << ""  Foo(Foo)"" << std::endl; }\n	Foo (const Foo&& z) { std::cout << ""  Foo(Foo&&)"" << std::endl; }\n};\nusing FooInt = std::pair<const Foo, int>;\n\nint main () {\n	std::cout << ""Init"" << std::endl;\n	const auto bar = {\n		FooInt{ Foo(), 0 },\n		{ Foo(), 1 ",https://github.com/bitcoin/bitcoin/pull/12169#issuecomment-364903510,364903510,
MarcoFalke,2018-02-12T22:42:08Z,Needs rebase if still relevant,https://github.com/bitcoin/bitcoin/pull/12169#issuecomment-365088344,365088344,
ghost,2018-02-13T20:02:15Z,rebased,https://github.com/bitcoin/bitcoin/pull/12169#issuecomment-365386549,365386549,
jnewbery,2018-04-04T18:11:49Z,needs rebase,https://github.com/bitcoin/bitcoin/pull/12169#issuecomment-378694373,378694373,
Empact,2018-04-18T12:15:09Z,"Would be great to avoid these copies, but IMO there is potential documentation / clarity benefit to being explicit about the pair types. How about changing this to just add const to the key types?",https://github.com/bitcoin/bitcoin/pull/12169#issuecomment-382365951,382365951,
laanwj,2018-04-26T12:33:04Z,"Going to close this as it seems to be inactive, let me know if you want to pick it up again then I'll reopen.",https://github.com/bitcoin/bitcoin/pull/12169#issuecomment-384624145,384624145,
Empact,2018-05-14T21:34:22Z,I'll take it.,https://github.com/bitcoin/bitcoin/pull/12169#issuecomment-388970463,388970463,
