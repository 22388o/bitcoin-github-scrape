[
  {
    "sha": "192722e8c1075ec834fc0b04e5cba8e9dc5d2265",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOTI3MjJlOGMxMDc1ZWM4MzRmYzBiMDRlNWNiYThlOWRjNWQyMjY1",
    "commit": {
      "author": {
        "name": "Ross Nicoll",
        "email": "jrn@jrn.me.uk",
        "date": "2014-04-13T12:56:27Z"
      },
      "committer": {
        "name": "Ross Nicoll",
        "email": "jrn@jrn.me.uk",
        "date": "2014-04-13T12:56:27Z"
      },
      "message": "Added new constant to represent the desirable minimum remainder to leave in spent\ntransactions, where change is required.\nAdded comments to coin selection code to clarify process.",
      "tree": {
        "sha": "8c528aae48d48818d3c2b5c0da8a4078bfe1a3e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c528aae48d48818d3c2b5c0da8a4078bfe1a3e5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/192722e8c1075ec834fc0b04e5cba8e9dc5d2265",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.11 (GNU/Linux)\n\niQEcBAABAgAGBQJTSo20AAoJEJFC5fflM847sCkIAIKHrXvvt6F3dfJVFIU1wdhw\njp5A2aUyZ7QSbnh7upxnNMWOCNDeT640yeIfQCsL8AmF6hr/oTzBH0dEwUKFDYos\nvNX40bXJR/6j9hWDufpkmeRPz1QOrNoQQi/0OG17NVUiFmLXq6U+l4UQkQ8bJkkn\nhr++yDQJ6Iwft82+UJM80BbsqAhLS4oL0TMEaGvizXrWlOrD1YvlLCvwFAE3FX5e\nYHOwMpfP8UetCQVY8An3zT/d4XnrUbTktQpnh6vLEGPlFMRwxmLcXwsP9C0HRBEv\nQszhwuZW3s+RljES0yhvQ85o9EzgAeaNJCIdx7iV0mdswC4JxumoYjoouRUr3uI=\n=iH2I\n-----END PGP SIGNATURE-----",
        "payload": "tree 8c528aae48d48818d3c2b5c0da8a4078bfe1a3e5\nparent 76db4e235da7720dfeb087e62a261d94859213e5\nauthor Ross Nicoll <jrn@jrn.me.uk> 1397393787 +0100\ncommitter Ross Nicoll <jrn@jrn.me.uk> 1397393787 +0100\n\nAdded new constant to represent the desirable minimum remainder to leave in spent\ntransactions, where change is required.\nAdded comments to coin selection code to clarify process.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/192722e8c1075ec834fc0b04e5cba8e9dc5d2265",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/192722e8c1075ec834fc0b04e5cba8e9dc5d2265",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/192722e8c1075ec834fc0b04e5cba8e9dc5d2265/comments",
    "author": {
      "login": "rnicoll",
      "id": 3513077,
      "node_id": "MDQ6VXNlcjM1MTMwNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3513077?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rnicoll",
      "html_url": "https://github.com/rnicoll",
      "followers_url": "https://api.github.com/users/rnicoll/followers",
      "following_url": "https://api.github.com/users/rnicoll/following{/other_user}",
      "gists_url": "https://api.github.com/users/rnicoll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rnicoll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rnicoll/subscriptions",
      "organizations_url": "https://api.github.com/users/rnicoll/orgs",
      "repos_url": "https://api.github.com/users/rnicoll/repos",
      "events_url": "https://api.github.com/users/rnicoll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rnicoll/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rnicoll",
      "id": 3513077,
      "node_id": "MDQ6VXNlcjM1MTMwNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3513077?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rnicoll",
      "html_url": "https://github.com/rnicoll",
      "followers_url": "https://api.github.com/users/rnicoll/followers",
      "following_url": "https://api.github.com/users/rnicoll/following{/other_user}",
      "gists_url": "https://api.github.com/users/rnicoll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rnicoll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rnicoll/subscriptions",
      "organizations_url": "https://api.github.com/users/rnicoll/orgs",
      "repos_url": "https://api.github.com/users/rnicoll/repos",
      "events_url": "https://api.github.com/users/rnicoll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rnicoll/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "76db4e235da7720dfeb087e62a261d94859213e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76db4e235da7720dfeb087e62a261d94859213e5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76db4e235da7720dfeb087e62a261d94859213e5"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 12,
      "deletions": 4
    },
    "files": [
      {
        "sha": "3eb3954ba991ca43e99995a65fa1bf25f7ada33b",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/192722e8c1075ec834fc0b04e5cba8e9dc5d2265/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/192722e8c1075ec834fc0b04e5cba8e9dc5d2265/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=192722e8c1075ec834fc0b04e5cba8e9dc5d2265",
        "patch": "@@ -54,6 +54,8 @@ static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n static const unsigned int BLOCKFILE_CHUNK_SIZE = 0x1000000; // 16 MiB\n /** The pre-allocation chunk size for rev?????.dat files (since 0.8) */\n static const unsigned int UNDOFILE_CHUNK_SIZE = 0x100000; // 1 MiB\n+/** The amount to attempt to leave as a minimum remainder on partially spent transactions. */\n+static const unsigned int DUST_SOFT_LIMIT = CENT;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n static const int COINBASE_MATURITY = 100;\n /** Threshold for nLockTime: below this value it is interpreted as block number, otherwise as UNIX timestamp. */"
      },
      {
        "sha": "e0a8cb0157884c66b529553632d93da2611dae98",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/192722e8c1075ec834fc0b04e5cba8e9dc5d2265/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/192722e8c1075ec834fc0b04e5cba8e9dc5d2265/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=192722e8c1075ec834fc0b04e5cba8e9dc5d2265",
        "patch": "@@ -1119,8 +1119,14 @@ bool CWallet::SelectCoinsMinConf(int64_t nTargetValue, int nConfMine, int nConfT\n             nValueRet += coin.first;\n             return true;\n         }\n-        else if (n < nTargetValue + CENT)\n+        else if (n < nTargetValue + DUST_SOFT_LIMIT)\n         {\n+            // This coin is not sufficient to cover the target plus change above the dust\n+            // limit. The dust limit is important here, as we don't want to leave change\n+            // which cannot be spent (is below the network transaction fee).\n+            \n+            // Push the coin into an array for potential matching later, but keep trying to find\n+            // an exact match\n             vValue.push_back(coin);\n             nTotalLower += n;\n         }\n@@ -1155,13 +1161,13 @@ bool CWallet::SelectCoinsMinConf(int64_t nTargetValue, int nConfMine, int nConfT\n     int64_t nBest;\n \n     ApproximateBestSubset(vValue, nTotalLower, nTargetValue, vfBest, nBest, 1000);\n-    if (nBest != nTargetValue && nTotalLower >= nTargetValue + CENT)\n-        ApproximateBestSubset(vValue, nTotalLower, nTargetValue + CENT, vfBest, nBest, 1000);\n+    if (nBest != nTargetValue && nTotalLower >= nTargetValue + DUST_SOFT_LIMIT)\n+        ApproximateBestSubset(vValue, nTotalLower, nTargetValue + DUST_SOFT_LIMIT, vfBest, nBest, 1000);\n \n     // If we have a bigger coin and (either the stochastic approximation didn't find a good solution,\n     //                                   or the next bigger coin is closer), return the bigger coin\n     if (coinLowestLarger.second.first &&\n-        ((nBest != nTargetValue && nBest < nTargetValue + CENT) || coinLowestLarger.first <= nBest))\n+        ((nBest != nTargetValue && nBest < nTargetValue + DUST_SOFT_LIMIT) || coinLowestLarger.first <= nBest))\n     {\n         setCoinsRet.insert(coinLowestLarger.second);\n         nValueRet += coinLowestLarger.first;"
      }
    ]
  }
]