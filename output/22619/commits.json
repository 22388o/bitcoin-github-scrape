[
  {
    "sha": "5a1bef60a03b57de708a1a751bd90b8245fd8b83",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTFiZWY2MGEwM2I1N2RlNzA4YTFhNzUxYmQ5MGI4MjQ1ZmQ4Yjgz",
    "commit": {
      "author": {
        "name": "Zero-1729",
        "email": "zero1729@protonmail.com",
        "date": "2021-08-04T18:59:06Z"
      },
      "committer": {
        "name": "Zero-1729",
        "email": "zero1729@protonmail.com",
        "date": "2021-08-04T18:59:13Z"
      },
      "message": "test: refactor: remove binascii from test_framework",
      "tree": {
        "sha": "628d3356679e629d56e67ab20827b518c0b7fde5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/628d3356679e629d56e67ab20827b518c0b7fde5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a1bef60a03b57de708a1a751bd90b8245fd8b83",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEL+lVzQbS5epLsv0fqICMxdiN8sAFAmEK44IACgkQqICMxdiN\n8sAZ1RAAscNtrz8j72aiKbN3DJ53uc8pBj8dKzvax66YxkPnd0oJbkAvLvoPmhMh\ngnO8X5MF4v0oBSy0mLXGW9VQwamsbFalWpba/KekJjmtP0tdabBojt2kwcvHfYzO\nkabDgesha/yyhjjlmi9ZxFWf6O5npwQGM3pjZ6gHcp3iwNPm9+oE6wUbNMyz7FD4\nWecg7GKmK8eLuJ3BnPCpBFtHj7+4qBKnzSOUiPitk7sjJy8GIcE1u2WYop68mwAc\n47KiuECA7UdOSrsTeO+WDv92QL0nb/rIjZMKqEeXvQTylqSW0esoacNk/rRVwcg1\nM6W+Px/KHcgPhEUfqDJOIIiLcytsPCrtgjZAOa95ia2GSs491OBzpJ82nocFXPNJ\n/WZpDoROJdmNBrnIXfYnIUcEu3BqI3lRmjwOSyDFWBmg6dLBngbbccrCCcS/VEwM\nRIq+csWcDJbA4E80s1Zn6QQ9m1bQJGnxnyveD33BuQ5c94GsqDQdPSp98a5I2FCI\n8q1UfozEL0mqjmF6/Rl7dm3xO0RweTdq8G46gAjVJekqhNewGWI+I9SI97boRbQt\nFDq8Wabo6udsxg3mdVafKqjrNNmD0vCKIrI+Z/wyias9Dv+sA6ipWWxYHd8kekLG\npaH2/MhNq/YKoYDB7Nj+YpaNN9sbNLxIpyHjOHNhz9Qtk9QOXv0=\n=PdtQ\n-----END PGP SIGNATURE-----",
        "payload": "tree 628d3356679e629d56e67ab20827b518c0b7fde5\nparent 71797beec54d36a055d5e172ecbf2141fa984428\nauthor Zero-1729 <zero1729@protonmail.com> 1628103546 +0100\ncommitter Zero-1729 <zero1729@protonmail.com> 1628103553 +0100\n\ntest: refactor: remove binascii from test_framework\n\n\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a1bef60a03b57de708a1a751bd90b8245fd8b83",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a1bef60a03b57de708a1a751bd90b8245fd8b83",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a1bef60a03b57de708a1a751bd90b8245fd8b83/comments",
    "author": {
      "login": "Zero-1729",
      "id": 23586626,
      "node_id": "MDQ6VXNlcjIzNTg2NjI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/23586626?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zero-1729",
      "html_url": "https://github.com/Zero-1729",
      "followers_url": "https://api.github.com/users/Zero-1729/followers",
      "following_url": "https://api.github.com/users/Zero-1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zero-1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zero-1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zero-1729/subscriptions",
      "organizations_url": "https://api.github.com/users/Zero-1729/orgs",
      "repos_url": "https://api.github.com/users/Zero-1729/repos",
      "events_url": "https://api.github.com/users/Zero-1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zero-1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Zero-1729",
      "id": 23586626,
      "node_id": "MDQ6VXNlcjIzNTg2NjI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/23586626?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zero-1729",
      "html_url": "https://github.com/Zero-1729",
      "followers_url": "https://api.github.com/users/Zero-1729/followers",
      "following_url": "https://api.github.com/users/Zero-1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zero-1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zero-1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zero-1729/subscriptions",
      "organizations_url": "https://api.github.com/users/Zero-1729/orgs",
      "repos_url": "https://api.github.com/users/Zero-1729/repos",
      "events_url": "https://api.github.com/users/Zero-1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zero-1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "71797beec54d36a055d5e172ecbf2141fa984428",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/71797beec54d36a055d5e172ecbf2141fa984428",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/71797beec54d36a055d5e172ecbf2141fa984428"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 10,
      "deletions": 14
    },
    "files": [
      {
        "sha": "d644a420fc95526834028c602cc167603177f586",
        "filename": "test/functional/interface_rest.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a1bef60a03b57de708a1a751bd90b8245fd8b83/test/functional/interface_rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a1bef60a03b57de708a1a751bd90b8245fd8b83/test/functional/interface_rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_rest.py?ref=5a1bef60a03b57de708a1a751bd90b8245fd8b83",
        "patch": "@@ -4,7 +4,6 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the REST API.\"\"\"\n \n-import binascii\n from decimal import Decimal\n from enum import Enum\n from io import BytesIO\n@@ -235,13 +234,13 @@ def run_test(self):\n         response_hex = self.test_rest_request(\"/block/{}\".format(bb_hash), req_type=ReqType.HEX, ret_type=RetType.OBJ)\n         assert_greater_than(int(response_hex.getheader('content-length')), BLOCK_HEADER_SIZE*2)\n         response_hex_bytes = response_hex.read().strip(b'\\n')\n-        assert_equal(binascii.hexlify(response_bytes), response_hex_bytes)\n+        assert_equal(response_bytes.hex().encode(), response_hex_bytes)\n \n         # Compare with hex block header\n         response_header_hex = self.test_rest_request(\"/headers/1/{}\".format(bb_hash), req_type=ReqType.HEX, ret_type=RetType.OBJ)\n         assert_greater_than(int(response_header_hex.getheader('content-length')), BLOCK_HEADER_SIZE*2)\n         response_header_hex_bytes = response_header_hex.read(BLOCK_HEADER_SIZE*2)\n-        assert_equal(binascii.hexlify(response_bytes[:BLOCK_HEADER_SIZE]), response_header_hex_bytes)\n+        assert_equal(response_bytes[:BLOCK_HEADER_SIZE].hex().encode(), response_header_hex_bytes)\n \n         # Check json format\n         block_json_obj = self.test_rest_request(\"/block/{}\".format(bb_hash))"
      },
      {
        "sha": "bb2e51c2f72b4d13ad7a848e49f5ef9ab49a11fa",
        "filename": "test/functional/rpc_createmultisig.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a1bef60a03b57de708a1a751bd90b8245fd8b83/test/functional/rpc_createmultisig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a1bef60a03b57de708a1a751bd90b8245fd8b83/test/functional/rpc_createmultisig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_createmultisig.py?ref=5a1bef60a03b57de708a1a751bd90b8245fd8b83",
        "patch": "@@ -3,7 +3,6 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test multisig RPCs\"\"\"\n-import binascii\n import decimal\n import itertools\n import json\n@@ -66,9 +65,9 @@ def run_test(self):\n \n         # decompress pk2\n         pk_obj = ECPubKey()\n-        pk_obj.set(binascii.unhexlify(pk2))\n+        pk_obj.set(bytes.fromhex(pk2))\n         pk_obj.compressed = False\n-        pk2 = binascii.hexlify(pk_obj.get_bytes()).decode()\n+        pk2 = pk_obj.get_bytes().hex()\n \n         node0.createwallet(wallet_name='wmulti0', disable_private_keys=True)\n         wmulti0 = node0.get_wallet_rpc('wmulti0')"
      },
      {
        "sha": "d623bcdf6e91e2b36f184be5baed81276d7d3c4a",
        "filename": "test/functional/test_framework/bdb.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a1bef60a03b57de708a1a751bd90b8245fd8b83/test/functional/test_framework/bdb.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a1bef60a03b57de708a1a751bd90b8245fd8b83/test/functional/test_framework/bdb.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/bdb.py?ref=5a1bef60a03b57de708a1a751bd90b8245fd8b83",
        "patch": "@@ -24,7 +24,6 @@\n `db_dump -da wallet.dat` is useful to see the data in a wallet.dat BDB file\n \"\"\"\n \n-import binascii\n import struct\n \n # Important constants\n@@ -96,7 +95,7 @@ def dump_meta_page(page):\n     metadata['key_count'] = key_count\n     metadata['record_count'] = record_count\n     metadata['flags'] = flags\n-    metadata['uid'] = binascii.hexlify(uid)\n+    metadata['uid'] = uid.hex().encode()\n \n     assert magic == BTREE_MAGIC, 'bdb magic does not match bdb btree magic'\n     assert pg_type == BTREE_META, 'Metadata page is not a btree metadata page'\n@@ -110,8 +109,9 @@ def dump_meta_page(page):\n     metadata['re_pad'] = re_pad\n     metadata['root'] = root\n     metadata['crypto_magic'] = crypto_magic\n-    metadata['iv'] = binascii.hexlify(iv)\n-    metadata['chksum'] = binascii.hexlify(chksum)\n+    metadata['iv'] = iv.hex().encode()\n+    metadata['chksum'] = chksum.hex().encode()\n+\n     return metadata\n \n # Given the dict from dump_leaf_page, get the key-value pairs and put them into a dict"
      },
      {
        "sha": "1a2d9e18645efbc4245792a5d8a5e7466f265046",
        "filename": "test/functional/test_framework/blocktools.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a1bef60a03b57de708a1a751bd90b8245fd8b83/test/functional/test_framework/blocktools.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a1bef60a03b57de708a1a751bd90b8245fd8b83/test/functional/test_framework/blocktools.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/blocktools.py?ref=5a1bef60a03b57de708a1a751bd90b8245fd8b83",
        "patch": "@@ -4,7 +4,6 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Utilities for manipulating blocks and transactions.\"\"\"\n \n-from binascii import a2b_hex\n import struct\n import time\n import unittest\n@@ -73,7 +72,7 @@ def create_block(hashprev=None, coinbase=None, ntime=None, *, version=None, tmpl\n     block.nTime = ntime or tmpl.get('curtime') or int(time.time() + 600)\n     block.hashPrevBlock = hashprev or int(tmpl['previousblockhash'], 0x10)\n     if tmpl and not tmpl.get('bits') is None:\n-        block.nBits = struct.unpack('>I', a2b_hex(tmpl['bits']))[0]\n+        block.nBits = struct.unpack('>I', bytes.fromhex(tmpl['bits']))[0]\n     else:\n         block.nBits = 0x207fffff  # difficulty retargeting is disabled in REGTEST chainparams\n     if coinbase is None:"
      },
      {
        "sha": "b5f78e0cf3f8a716c58a6e332f4d7b1c5bb5fcdc",
        "filename": "test/functional/test_framework/netutil.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a1bef60a03b57de708a1a751bd90b8245fd8b83/test/functional/test_framework/netutil.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a1bef60a03b57de708a1a751bd90b8245fd8b83/test/functional/test_framework/netutil.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/netutil.py?ref=5a1bef60a03b57de708a1a751bd90b8245fd8b83",
        "patch": "@@ -12,7 +12,6 @@\n import struct\n import array\n import os\n-from binascii import unhexlify\n \n # STATE_ESTABLISHED = '01'\n # STATE_SYN_SENT  = '02'\n@@ -44,7 +43,7 @@ def _remove_empty(array):\n def _convert_ip_port(array):\n     host,port = array.split(':')\n     # convert host from mangled-per-four-bytes form as used by kernel\n-    host = unhexlify(host)\n+    host = bytes.fromhex(host)\n     host_out = ''\n     for x in range(0, len(host) // 4):\n         (val,) = struct.unpack('=I', host[x*4:(x+1)*4])"
      }
    ]
  }
]