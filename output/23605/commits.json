[
  {
    "sha": "503359e510f4491101580bb6d3a92bb698426bbb",
    "node_id": "C_kwDOABII59oAKDUwMzM1OWU1MTBmNDQ5MTEwMTU4MGJiNmQzYTkyYmI2OTg0MjZiYmI",
    "commit": {
      "author": {
        "name": "Shashwat",
        "email": "svangani239@gmail.com",
        "date": "2021-11-25T12:53:03Z"
      },
      "committer": {
        "name": "Shashwat",
        "email": "svangani239@gmail.com",
        "date": "2021-11-26T13:40:00Z"
      },
      "message": "util: Added IsValidHostPort function\n\n- This PR adds a utility function IsValidHostPort function, which allows\nchecking if a given string is a valid <host>:<port> pair\n\n- Used this IsValidHostPort in init.cpp to raise an error in case\ninvalid -torcontrol=<host>:<port> is passed during initialisation",
      "tree": {
        "sha": "6eb25168400aa923ecaacd8233fa6bed898de595",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6eb25168400aa923ecaacd8233fa6bed898de595"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/503359e510f4491101580bb6d3a92bb698426bbb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/503359e510f4491101580bb6d3a92bb698426bbb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/503359e510f4491101580bb6d3a92bb698426bbb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/503359e510f4491101580bb6d3a92bb698426bbb/comments",
    "author": {
      "login": "shaavan",
      "id": 85434418,
      "node_id": "MDQ6VXNlcjg1NDM0NDE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/85434418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaavan",
      "html_url": "https://github.com/shaavan",
      "followers_url": "https://api.github.com/users/shaavan/followers",
      "following_url": "https://api.github.com/users/shaavan/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaavan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaavan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaavan/subscriptions",
      "organizations_url": "https://api.github.com/users/shaavan/orgs",
      "repos_url": "https://api.github.com/users/shaavan/repos",
      "events_url": "https://api.github.com/users/shaavan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaavan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "shaavan",
      "id": 85434418,
      "node_id": "MDQ6VXNlcjg1NDM0NDE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/85434418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaavan",
      "html_url": "https://github.com/shaavan",
      "followers_url": "https://api.github.com/users/shaavan/followers",
      "following_url": "https://api.github.com/users/shaavan/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaavan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaavan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaavan/subscriptions",
      "organizations_url": "https://api.github.com/users/shaavan/orgs",
      "repos_url": "https://api.github.com/users/shaavan/repos",
      "events_url": "https://api.github.com/users/shaavan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaavan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "76392b042e98fcdb3b7ce3c2023003910326d14e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76392b042e98fcdb3b7ce3c2023003910326d14e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76392b042e98fcdb3b7ce3c2023003910326d14e"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 28,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d1734f5caac5d74be8c33b838fd10f8ea0f77a2c",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/503359e510f4491101580bb6d3a92bb698426bbb/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/503359e510f4491101580bb6d3a92bb698426bbb/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=503359e510f4491101580bb6d3a92bb698426bbb",
        "patch": "@@ -873,6 +873,11 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         return InitError(Untranslated(\"Cannot set -listen=0 together with -listenonion=1\"));\n     }\n \n+    //if torcontrol given, it needs to be in form of <host>:<port>\n+    if (!IsValidHostPort(args.GetArg(\"-torcontrol\", DEFAULT_TOR_CONTROL))) {\n+        return InitError(Untranslated(\"-torcontrol has to be in the form <host>:<port>\"));\n+    }\n+\n     // Make sure enough file descriptors are available\n     int nBind = std::max(nUserBind, size_t(1));\n     nUserMaxConnections = args.GetIntArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);"
      },
      {
        "sha": "e9729718bfb0f3ae2fa0f56b2cf00865e7cc237c",
        "filename": "src/util/strencodings.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/503359e510f4491101580bb6d3a92bb698426bbb/src/util/strencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/503359e510f4491101580bb6d3a92bb698426bbb/src/util/strencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.cpp?ref=503359e510f4491101580bb6d3a92bb698426bbb",
        "patch": "@@ -13,6 +13,7 @@\n #include <cstring>\n #include <limits>\n #include <optional>\n+#include <regex>\n \n static const std::string CHARS_ALPHA_NUM = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n \n@@ -128,6 +129,26 @@ void SplitHostPort(std::string in, uint16_t& portOut, std::string& hostOut)\n     }\n }\n \n+bool IsValidHostPort(const std::string& in)\n+{\n+    std::string host;\n+    uint16_t port;\n+    SplitHostPort(in, port, host);\n+\n+    const std::regex ip_pattern(\"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\");\n+    if (host.empty()) {\n+        return false;\n+    }\n+    if (!std::regex_match(host, ip_pattern)) {\n+        return false;\n+    }\n+    if (!(port <= 65353)) {\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n std::string EncodeBase64(Span<const unsigned char> input)\n {\n     static const char *pbase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";"
      },
      {
        "sha": "5442e4d1c6e970fba29945f56c76bfbc4cb13600",
        "filename": "src/util/strencodings.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/503359e510f4491101580bb6d3a92bb698426bbb/src/util/strencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/503359e510f4491101580bb6d3a92bb698426bbb/src/util/strencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.h?ref=503359e510f4491101580bb6d3a92bb698426bbb",
        "patch": "@@ -88,6 +88,8 @@ std::string EncodeBase32(const std::string& str, bool pad = true);\n \n void SplitHostPort(std::string in, uint16_t& portOut, std::string& hostOut);\n \n+bool IsValidHostPort(const std::string& in);\n+\n // LocaleIndependentAtoi is provided for backwards compatibility reasons.\n //\n // New code should use ToIntegral or the ParseInt* functions"
      }
    ]
  }
]