[
  {
    "sha": "e96155f1445869d4b677e74d9ea0fa12792eeaf5",
    "node_id": "C_kwDOABII59oAKGU5NjE1NWYxNDQ1ODY5ZDRiNjc3ZTc0ZDllYTBmYTEyNzkyZWVhZjU",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2021-09-29T20:21:59Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2021-09-29T20:22:02Z"
      },
      "message": "rpc: Introduce RPCContext and RPCParam",
      "tree": {
        "sha": "fbabad555fb70143e9154b4580d3a1397e76a069",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fbabad555fb70143e9154b4580d3a1397e76a069"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e96155f1445869d4b677e74d9ea0fa12792eeaf5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e96155f1445869d4b677e74d9ea0fa12792eeaf5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e96155f1445869d4b677e74d9ea0fa12792eeaf5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e96155f1445869d4b677e74d9ea0fa12792eeaf5/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "419afa93419e6840f78cb94b4a39d826eb10e139",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/419afa93419e6840f78cb94b4a39d826eb10e139",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/419afa93419e6840f78cb94b4a39d826eb10e139"
      }
    ],
    "stats": {
      "total": 102,
      "additions": 99,
      "deletions": 3
    },
    "files": [
      {
        "sha": "3dfb0a5d628e72f8aa4ff19e90e008c34f453fc9",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 49,
        "deletions": 2,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e96155f1445869d4b677e74d9ea0fa12792eeaf5/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e96155f1445869d4b677e74d9ea0fa12792eeaf5/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=e96155f1445869d4b677e74d9ea0fa12792eeaf5",
        "patch": "@@ -490,7 +490,13 @@ struct Sections {\n };\n \n RPCHelpMan::RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples)\n-    : RPCHelpMan{std::move(name), std::move(description), std::move(args), std::move(results), std::move(examples), nullptr} {}\n+    : RPCHelpMan{std::move(name), std::move(description), std::move(args), std::move(results), std::move(examples), RPCMethodImpl{}} {}\n+\n+RPCHelpMan::RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCLegacyMethodImpl fun)\n+    : RPCHelpMan(std::move(name), std::move(description), std::move(args), std::move(results), std::move(examples), [fun](const RPCContext& ctx) -> UniValue {\n+        return fun(ctx.method, ctx.request);\n+    })\n+{}\n \n RPCHelpMan::RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun)\n     : m_name{std::move(name)},\n@@ -572,11 +578,52 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n     if (request.mode == JSONRPCRequest::GET_HELP || !IsValidNumArgs(request.params.size())) {\n         throw std::runtime_error(ToString());\n     }\n-    const UniValue ret = m_fun(*this, request);\n+    RPCContext ctx{*this, request};\n+    const UniValue ret = m_fun(ctx);\n     CHECK_NONFATAL(std::any_of(m_results.m_results.begin(), m_results.m_results.end(), [ret](const RPCResult& res) { return res.MatchesType(ret); }));\n     return ret;\n }\n \n+template <> UniValue RPCParam<UniValue>::convert(const UniValue& value) const\n+{\n+    return value;\n+}\n+\n+template <> bool RPCParam<bool>::convert(const UniValue& value) const\n+{\n+    return value.get_bool();\n+}\n+\n+template <> int RPCParam<int>::convert(const UniValue& value) const\n+{\n+    return value.get_int();\n+}\n+\n+template <> uint64_t RPCParam<uint64_t>::convert(const UniValue& value) const\n+{\n+    return value.get_int64();\n+}\n+\n+template <> int64_t RPCParam<int64_t>::convert(const UniValue& value) const\n+{\n+    return value.get_int64();\n+}\n+\n+template <> double RPCParam<double>::convert(const UniValue& value) const\n+{\n+    return value.get_real();\n+}\n+\n+template <> std::string RPCParam<std::string>::convert(const UniValue& value) const\n+{\n+    return value.get_str();\n+}\n+\n+template <> uint256 RPCParam<uint256>::convert(const UniValue& value) const\n+{\n+    return ParseHashV(value, arg.GetName());\n+}\n+\n bool RPCHelpMan::IsValidNumArgs(size_t num_args) const\n {\n     size_t num_required_args = 0;"
      },
      {
        "sha": "739dd5f537222a24346d59c2f5fc67914634645d",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 50,
        "deletions": 1,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e96155f1445869d4b677e74d9ea0fa12792eeaf5/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e96155f1445869d4b677e74d9ea0fa12792eeaf5/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=e96155f1445869d4b677e74d9ea0fa12792eeaf5",
        "patch": "@@ -342,12 +342,42 @@ struct RPCExamples {\n     std::string ToDescriptionString() const;\n };\n \n+template <typename T>\n+struct RPCParam\n+{\n+    const RPCArg& arg;\n+    const UniValue& value;\n+    T get() const {\n+        if (!value.isNull()) return convert(value);\n+        // if (m_defaults) return *m_defaults;\n+        CHECK_NONFATAL(arg.m_fallback.index() == 2);\n+        return convert(std::get<RPCArg::Default>(arg.m_fallback));\n+    };\n+    operator T() const { return get(); }\n+    bool isNull() const { return value.isNull(); }\n+    bool isNum() const { return value.isNum(); }\n+    bool isStr() const { return value.isStr(); }\n+    template <typename F>\n+    void forEach(F fn) const {\n+        if (value.isNull()) return;\n+        for (const UniValue& elem : value.get_array().getValues()) {\n+            fn(elem);\n+        }\n+    }\n+private:\n+    T convert(const UniValue& value) const;\n+};\n+\n+struct RPCContext;\n class RPCHelpMan\n {\n public:\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples);\n-    using RPCMethodImpl = std::function<UniValue(const RPCHelpMan&, const JSONRPCRequest&)>;\n+    using RPCMethodImpl = std::function<UniValue(const RPCContext&)>;\n+    using RPCLegacyMethodImpl = std::function<UniValue(const RPCHelpMan&, const JSONRPCRequest&)>;\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n+    RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCLegacyMethodImpl fun);\n+\n \n     UniValue HandleRequest(const JSONRPCRequest& request) const;\n     std::string ToString() const;\n@@ -365,6 +395,25 @@ class RPCHelpMan\n     const std::vector<RPCArg> m_args;\n     const RPCResults m_results;\n     const RPCExamples m_examples;\n+    friend struct RPCContext;\n+};\n+\n+struct RPCContext\n+{\n+    const RPCHelpMan& method;\n+    const JSONRPCRequest& request;\n+\n+    template <typename T=UniValue>\n+    RPCParam<T> param(size_t index) const\n+    {\n+        return {method.m_args[index], request.params[index]};\n+    }\n+\n+    template <typename F>\n+    auto param(size_t index, F fn) const -> decltype(fn(UniValue{}))\n+    {\n+        return fn(request.params[index]);\n+    }\n };\n \n #endif // BITCOIN_RPC_UTIL_H"
      }
    ]
  },
  {
    "sha": "7a7b05079d1753102ef0676fc3052a9606b4fe71",
    "node_id": "C_kwDOABII59oAKDdhN2IwNTA3OWQxNzUzMTAyZWYwNjc2ZmMzMDUyYTk2MDZiNGZlNzE",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2021-09-29T20:22:22Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2021-09-29T20:22:22Z"
      },
      "message": "rpc: Refactor getnetworkhashps to use RPCContext",
      "tree": {
        "sha": "30c2e5452aa4b103175caa12f7c4d1ac49d3f128",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/30c2e5452aa4b103175caa12f7c4d1ac49d3f128"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a7b05079d1753102ef0676fc3052a9606b4fe71",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a7b05079d1753102ef0676fc3052a9606b4fe71",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7a7b05079d1753102ef0676fc3052a9606b4fe71",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a7b05079d1753102ef0676fc3052a9606b4fe71/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e96155f1445869d4b677e74d9ea0fa12792eeaf5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e96155f1445869d4b677e74d9ea0fa12792eeaf5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e96155f1445869d4b677e74d9ea0fa12792eeaf5"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "e0a859be36f5d6954d3fce20583143564840223d",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a7b05079d1753102ef0676fc3052a9606b4fe71/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a7b05079d1753102ef0676fc3052a9606b4fe71/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=7a7b05079d1753102ef0676fc3052a9606b4fe71",
        "patch": "@@ -100,11 +100,11 @@ static RPCHelpMan getnetworkhashps()\n                     HelpExampleCli(\"getnetworkhashps\", \"\")\n             + HelpExampleRpc(\"getnetworkhashps\", \"\")\n                 },\n-        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        [](const RPCContext& ctx) -> UniValue\n {\n-    ChainstateManager& chainman = EnsureAnyChainman(request.context);\n+    ChainstateManager& chainman = EnsureAnyChainman(ctx.request.context);\n     LOCK(cs_main);\n-    return GetNetworkHashPS(!request.params[0].isNull() ? request.params[0].get_int() : 120, !request.params[1].isNull() ? request.params[1].get_int() : -1, chainman.ActiveChain());\n+    return GetNetworkHashPS(ctx.param<int>(0), ctx.param<int>(1), chainman.ActiveChain());\n },\n     };\n }"
      }
    ]
  }
]