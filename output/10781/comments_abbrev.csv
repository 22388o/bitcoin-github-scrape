jtimon,2017-07-13T20:28:23Z,fast review ACK,https://github.com/bitcoin/bitcoin/pull/10781#issuecomment-315192700,315192700,
practicalswift,2017-07-16T11:46:04Z,"@jnewbery Good point! I've now changed from `_ = f()` to `f()` for calls that appear to have side effects. For calls that appear to have no side effects I've simply removed the calls.\n\n@jnewbery @jtimon Could you take a look at the updated version and see if it looks correct? :-)",https://github.com/bitcoin/bitcoin/pull/10781#issuecomment-315603711,315603711,
practicalswift,2017-07-20T14:27:38Z,Added two commits :-),https://github.com/bitcoin/bitcoin/pull/10781#issuecomment-316720754,316720754,
jnewbery,2017-07-20T20:36:54Z,"Mostly ACK, but a few comments.",https://github.com/bitcoin/bitcoin/pull/10781#issuecomment-316822598,316822598,
practicalswift,2017-07-20T21:25:24Z,@jnewbery Thanks for reviewing! Good feedback - I've addressed all points raised. Would you mind re-reviewing? :-),https://github.com/bitcoin/bitcoin/pull/10781#issuecomment-316834680,316834680,
jnewbery,2017-07-20T21:49:33Z,Looks good. Just https://github.com/bitcoin/bitcoin/pull/10781#discussion_r128618950 unaddressed (using a for loop instead of list comprehension for functions with side-effects),https://github.com/bitcoin/bitcoin/pull/10781#issuecomment-316839871,316839871,
practicalswift,2017-07-20T21:56:46Z,@jnewbery Thanks! List comprehension now fixed as well. Looks good? :-),https://github.com/bitcoin/bitcoin/pull/10781#issuecomment-316841542,316841542,
jnewbery,2017-07-20T21:58:14Z,looks good. utACK db442ada2b7e162c3748ddcc130c414fd86e2bab,https://github.com/bitcoin/bitcoin/pull/10781#issuecomment-316841894,316841894,
practicalswift,2017-08-28T13:19:53Z,"Rebased and and added another commit (""Remove import of unused constants"").\n\n@jnewbery, would you mind re-reviewing? :-)",https://github.com/bitcoin/bitcoin/pull/10781#issuecomment-325351116,325351116,
jnewbery,2017-08-28T14:04:25Z,"Looks good to me, but can you remove the final commit? Marco's #11067 will already remove those unused constants.\n\n@MarcoFalke - if you have time, can you check whether this is suitable for merge? It's likely to require continual rebase if left open.\n\nI've verified that @practicalswift hasn't added any backdoors in the last rebase :)",https://github.com/bitcoin/bitcoin/pull/10781#issuecomment-325362564,325362564,
practicalswift,2017-08-28T14:54:36Z,@jnewbery Removed last commit :-)  Thanks fo reviewing :-),https://github.com/bitcoin/bitcoin/pull/10781#issuecomment-325376793,325376793,
jtimon,2017-08-28T15:11:17Z,repeatead fast review ack,https://github.com/bitcoin/bitcoin/pull/10781#issuecomment-325381663,325381663,
meshcollider,2017-08-28T19:58:06Z,Fast review utACK,https://github.com/bitcoin/bitcoin/pull/10781#issuecomment-325462291,325462291,
jnewbery,2017-07-10T13:15:34Z,I can't see how using `tx` is an issue. Does this cause a linter warning?,https://github.com/bitcoin/bitcoin/pull/10781#discussion_r126417445,126417445,test/functional/p2p-compactblocks.py
jtimon,2017-07-13T20:27:30Z,what about something more clear like throwaway_txid or something of the sort?,https://github.com/bitcoin/bitcoin/pull/10781#discussion_r127322415,127322415,test/functional/bumpfee.py
practicalswift,2017-07-16T11:22:22Z,"Yes it does :-)\n\n```shell\n$ flake8 test/functional/p2p-compactblocks.py | grep redefine\ntest/functional/p2p-compactblocks.py:296:31: F812 list comprehension redefines 'tx' from line 276\n```\n\nShould I remove the commit 263686d03fbfa2191c160d4c50951852fa1a4900 from this PR?",https://github.com/bitcoin/bitcoin/pull/10781#discussion_r127604615,127604615,test/functional/p2p-compactblocks.py
jnewbery,2017-07-20T20:12:12Z,"actually, let's just swap this list comprehension for a for loop. We're using it for its side-effects, so a for loop is clearer.",https://github.com/bitcoin/bitcoin/pull/10781#discussion_r128618950,128618950,test/functional/p2p-compactblocks.py
jnewbery,2017-07-20T20:20:00Z,"no need for this to be a tuple. Just:\n\n```\nver, cmd, _, atyp = recvall(self.conn, 4)\n```\n\nThere are other examples in commit *Use the variable name _ for unused return values*. I won't comment on each of them.",https://github.com/bitcoin/bitcoin/pull/10781#discussion_r128620732,128620732,test/functional/test_framework/socks5.py
jnewbery,2017-07-20T20:22:47Z,"prefer:\n\n```\nhashZ = self.nodes[1].generate(2)[-1]\n```\n\nsince it conveys the meaning better: ""give me the hash of the last block generated"".\n\nsame for the two examples below",https://github.com/bitcoin/bitcoin/pull/10781#discussion_r128621335,128621335,test/functional/preciousblock.py
jnewbery,2017-07-20T20:29:30Z,Perhaps change these to comments rather than erase them (for context).,https://github.com/bitcoin/bitcoin/pull/10781#discussion_r128622858,128622858,test/functional/test_framework/netutil.py
jnewbery,2017-07-20T20:29:57Z,No harm in leaving these as comments.,https://github.com/bitcoin/bitcoin/pull/10781#discussion_r128622960,128622960,test/functional/test_framework/mininode.py
jnewbery,2017-07-20T20:33:21Z,I can imagine these methods potentially being useful at some point. I don't think there's any need to remove them.,https://github.com/bitcoin/bitcoin/pull/10781#discussion_r128623675,128623675,test/functional/test_framework/key.py
jnewbery,2017-07-20T20:34:00Z,Please leave this for now.,https://github.com/bitcoin/bitcoin/pull/10781#discussion_r128623807,128623807,test/functional/test_framework/authproxy.py
practicalswift,2017-07-20T21:15:50Z,"Good point! Updated but GitHub doesn't show the `# NODE_GETUTXO = (1 << 1)` below (in the comment view), so it appears as if it is not fixed :-)",https://github.com/bitcoin/bitcoin/pull/10781#discussion_r128632931,128632931,test/functional/test_framework/mininode.py
practicalswift,2017-07-20T21:16:51Z,Good point! Fixed!,https://github.com/bitcoin/bitcoin/pull/10781#discussion_r128633118,128633118,test/functional/test_framework/netutil.py
