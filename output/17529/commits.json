[
  {
    "sha": "fab065f35f440a07833593dcb83518bd8e52df91",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWIwNjVmMzVmNDQwYTA3ODMzNTkzZGNiODM1MThiZDhlNTJkZjkx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-19T23:05:17Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T03:48:59Z"
      },
      "message": "refactor: Add primitives/tx_types\n\nThis moves the transaction related forward declarations into a single\nheader and uses it where appropriate.\n\nAlso, remove the heavy transaction.h header where possible. This might\nspeed up compilation because serialization.h is included less often, but\nmost importantly it clarifies include dependencies a bit better.",
      "tree": {
        "sha": "95da504b3aac20e90a0dac85d1bdb79150a07866",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/95da504b3aac20e90a0dac85d1bdb79150a07866"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fab065f35f440a07833593dcb83518bd8e52df91",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUixCwwAtCisY+v7y5FmWdNiY+/BrH5C4mdug11BNAJF26iJZOFpNJtlJFkTPlZ/\nUjZqcf2CoGuPPzT9aUaqrdZdhDoDKiJp+IIas86Fo90hIJVspRuYwHndst0uB2Tu\nZYI4OCo1aPnY+psYa4VEA5sXJmsSvZLXU0yfVgXeW7wnRCdKApo1aCdn38zjzuf7\nBQnQM4vR9rvNZBmPtxitviVdEiNnTBG6dL3lnvJt+EjIst0yVgSK8IEu4P42/H7R\nINCxB1JaL5K7R2fH++H1c09z7xtzLOV/j3Z9loPtrgPOqo8cL2msgGl7iOIqsMTF\n7n0G21YZgTrtB0whEILDz631XestQ7cv4JUb5JoSTlIJo5Mm9UAs6hJvMRvE/Rfd\nQ64u5l2Dbu0ZLR1TxS353st2PVS347qJhpnC9oIHu2zU4fEDtBzU3fN4rwBrS5SA\nO0vDUCb7uHtYpiV2LFBfRDu1ej+TlfLbI1lNPGIRlYCEyYpAmBbl8ZvsTaXt8kz7\nwzVYCECh\n=1WJB\n-----END PGP SIGNATURE-----",
        "payload": "tree 95da504b3aac20e90a0dac85d1bdb79150a07866\nparent b4a1da9ef8e4b673c290d5b882527e627ae1b43a\nauthor MarcoFalke <falke.marco@gmail.com> 1574204717 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574221739 -0500\n\nrefactor: Add primitives/tx_types\n\nThis moves the transaction related forward declarations into a single\nheader and uses it where appropriate.\n\nAlso, remove the heavy transaction.h header where possible. This might\nspeed up compilation because serialization.h is included less often, but\nmost importantly it clarifies include dependencies a bit better.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab065f35f440a07833593dcb83518bd8e52df91",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fab065f35f440a07833593dcb83518bd8e52df91",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab065f35f440a07833593dcb83518bd8e52df91/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b4a1da9ef8e4b673c290d5b882527e627ae1b43a"
      }
    ],
    "stats": {
      "total": 69,
      "additions": 45,
      "deletions": 24
    },
    "files": [
      {
        "sha": "3c4e9949c6dc91dcbad5a88b7a61eb678e5560b8",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -434,6 +434,7 @@ libbitcoin_consensus_a_SOURCES = \\\n   prevector.h \\\n   primitives/block.cpp \\\n   primitives/block.h \\\n+  primitives/tx_types.h \\\n   primitives/transaction.cpp \\\n   primitives/transaction.h \\\n   pubkey.cpp \\"
      },
      {
        "sha": "f755787727f8a82e75810db9203895c0c3c1419f",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -7,9 +7,10 @@\n \n #include <chainparamsseeds.h>\n #include <consensus/merkle.h>\n+#include <primitives/transaction.h>\n #include <tinyformat.h>\n-#include <util/system.h>\n #include <util/strencodings.h>\n+#include <util/system.h>\n #include <versionbitsinfo.h>\n \n #include <assert.h>"
      },
      {
        "sha": "ead5819ad671e8adbf9f286d81f633c58ce187ab",
        "filename": "src/consensus/merkle.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/consensus/merkle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/consensus/merkle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/merkle.cpp?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -4,6 +4,7 @@\n \n #include <consensus/merkle.h>\n #include <hash.h>\n+#include <primitives/transaction.h>\n \n /*     WARNING! If you're reading this because you're learning about crypto\n        and/or designing a new system that will use merkle trees, keep in mind"
      },
      {
        "sha": "dd32f0bd81b1a165e5202a1270bee6a192a61b07",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -7,15 +7,13 @@\n \n #include <amount.h>\n #include <attributes.h>\n+#include <primitives/tx_types.h>\n \n #include <string>\n #include <vector>\n \n-class CBlock;\n class CBlockHeader;\n class CScript;\n-class CTransaction;\n-struct CMutableTransaction;\n class uint256;\n class UniValue;\n "
      },
      {
        "sha": "1dda433deeccbfd0f9d7f625e7483579882eb1af",
        "filename": "src/interfaces/chain.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/interfaces/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/interfaces/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.h?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -5,17 +5,19 @@\n #ifndef BITCOIN_INTERFACES_CHAIN_H\n #define BITCOIN_INTERFACES_CHAIN_H\n \n+#include <amount.h>\n #include <optional.h>               // For Optional and nullopt\n-#include <primitives/transaction.h> // For CTransactionRef\n+#include <primitives/tx_types.h>    // For CTransactionRef\n \n+#include <map>\n #include <memory>\n #include <stddef.h>\n #include <stdint.h>\n #include <string>\n #include <vector>\n \n-class CBlock;\n class CFeeRate;\n+class COutPoint;\n class CRPCCommand;\n class CScheduler;\n class Coin;"
      },
      {
        "sha": "9998b8ac049692553b3fc598871a65018203aefd",
        "filename": "src/merkleblock.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/merkleblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/merkleblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.cpp?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -5,8 +5,9 @@\n \n #include <merkleblock.h>\n \n-#include <hash.h>\n #include <consensus/consensus.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n \n \n CMerkleBlock::CMerkleBlock(const CBlock& block, CBloomFilter* filter, const std::set<uint256>* txids)"
      },
      {
        "sha": "ad28fcffec12dc6521ae63aa59ee6ff1010b7d2b",
        "filename": "src/primitives/block.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/primitives/block.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/primitives/block.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.cpp?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -6,6 +6,8 @@\n #include <primitives/block.h>\n \n #include <hash.h>\n+#include <primitives/transaction.h>\n+\n #include <tinyformat.h>\n \n uint256 CBlockHeader::GetHash() const"
      },
      {
        "sha": "fc45bb220b523736bf5662060d226e5ee26fce18",
        "filename": "src/primitives/block.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/primitives/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/primitives/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.h?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -6,7 +6,7 @@\n #ifndef BITCOIN_PRIMITIVES_BLOCK_H\n #define BITCOIN_PRIMITIVES_BLOCK_H\n \n-#include <primitives/transaction.h>\n+#include <primitives/tx_types.h>\n #include <serialize.h>\n #include <uint256.h>\n "
      },
      {
        "sha": "432ef964806bf6702b500a0b2b0c5f5142323d3a",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -6,8 +6,8 @@\n #ifndef BITCOIN_PRIMITIVES_TRANSACTION_H\n #define BITCOIN_PRIMITIVES_TRANSACTION_H\n \n-#include <stdint.h>\n #include <amount.h>\n+#include <primitives/tx_types.h>\n #include <script/script.h>\n #include <serialize.h>\n #include <uint256.h>\n@@ -176,8 +176,6 @@ class CTxOut\n     std::string ToString() const;\n };\n \n-struct CMutableTransaction;\n-\n /**\n  * Basic transaction serialization format:\n  * - int32_t nVersion\n@@ -405,7 +403,6 @@ struct CMutableTransaction\n     }\n };\n \n-typedef std::shared_ptr<const CTransaction> CTransactionRef;\n static inline CTransactionRef MakeTransactionRef() { return std::make_shared<const CTransaction>(); }\n template <typename Tx> static inline CTransactionRef MakeTransactionRef(Tx&& txIn) { return std::make_shared<const CTransaction>(std::forward<Tx>(txIn)); }\n "
      },
      {
        "sha": "9b025be3b500c8cb99fee65008061f341947f174",
        "filename": "src/primitives/tx_types.h",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/primitives/tx_types.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/primitives/tx_types.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/tx_types.h?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -0,0 +1,21 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_PRIMITIVES_TX_TYPES_H\n+#define BITCOIN_PRIMITIVES_TX_TYPES_H\n+\n+#include <memory>\n+\n+// Forward declarations and typedefs to be used as replacement for the full\n+// transaction.h or block.h header\n+\n+class CTransaction;\n+\n+struct CMutableTransaction;\n+\n+using CTransactionRef = std::shared_ptr<const CTransaction>;\n+\n+class CBlock;\n+\n+#endif // BITCOIN_PRIMITIVES_TX_TYPES_H"
      },
      {
        "sha": "a81e4e1feb8cb0cb653bdafe09c09fb4b0d192e4",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -6,14 +6,14 @@\n #define BITCOIN_RPC_BLOCKCHAIN_H\n \n #include <amount.h>\n+#include <primitives/tx_types.h>\n #include <sync.h>\n \n #include <stdint.h>\n #include <vector>\n \n extern RecursiveMutex cs_main;\n \n-class CBlock;\n class CBlockIndex;\n class CTxMemPool;\n class UniValue;"
      },
      {
        "sha": "033b068688b8ec337ee1ac290f1f6b5dbad94c45",
        "filename": "src/rpc/rawtransaction_util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/rpc/rawtransaction_util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/rpc/rawtransaction_util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.h?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -5,11 +5,12 @@\n #ifndef BITCOIN_RPC_RAWTRANSACTION_UTIL_H\n #define BITCOIN_RPC_RAWTRANSACTION_UTIL_H\n \n+#include <primitives/tx_types.h>\n+\n #include <map>\n \n class FillableSigningProvider;\n class UniValue;\n-struct CMutableTransaction;\n class Coin;\n class COutPoint;\n class SigningProvider;"
      },
      {
        "sha": "acb80e4f2fd312da4b884aa022e6a715a099d7d4",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -14,8 +14,6 @@\n \n class CPubKey;\n class CScript;\n-class CTransaction;\n-class uint256;\n \n /** Signature hash types/flags */\n enum"
      },
      {
        "sha": "cff661d2ac5d62eec05b799f3d6f82a24559c4e5",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -7,6 +7,7 @@\n #define BITCOIN_SCRIPT_SIGN_H\n \n #include <hash.h>\n+#include <primitives/tx_types.h>\n #include <pubkey.h>\n #include <script/interpreter.h>\n #include <script/keyorigin.h>\n@@ -16,11 +17,8 @@ class CKey;\n class CKeyID;\n class CScript;\n class CScriptID;\n-class CTransaction;\n class SigningProvider;\n \n-struct CMutableTransaction;\n-\n /** Interface for signature creators. */\n class BaseSignatureCreator {\n public:"
      },
      {
        "sha": "72a6c4ce8e5f8e2a8cc416d48b91d01a9e79d823",
        "filename": "src/test/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/test/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/test/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util.h?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -5,10 +5,11 @@\n #ifndef BITCOIN_TEST_UTIL_H\n #define BITCOIN_TEST_UTIL_H\n \n+#include <primitives/tx_types.h>\n+\n #include <memory>\n #include <string>\n \n-class CBlock;\n class CScript;\n class CTxIn;\n class CWallet;"
      },
      {
        "sha": "bb97b14dafe83c9a696e68ccd55bc564389c9c0f",
        "filename": "src/test/util/setup_common.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/test/util/setup_common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/test/util/setup_common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.h?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -9,6 +9,7 @@\n #include <fs.h>\n #include <key.h>\n #include <node/context.h>\n+#include <primitives/tx_types.h>\n #include <pubkey.h>\n #include <random.h>\n #include <scheduler.h>\n@@ -94,8 +95,6 @@ struct RegTestingSetup : public TestingSetup {\n         : TestingSetup{CBaseChainParams::REGTEST} {}\n };\n \n-class CBlock;\n-struct CMutableTransaction;\n class CScript;\n \n //"
      },
      {
        "sha": "add4f40ddb0495acec46ad87dfed551bf712400e",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab065f35f440a07833593dcb83518bd8e52df91/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab065f35f440a07833593dcb83518bd8e52df91/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=fab065f35f440a07833593dcb83518bd8e52df91",
        "patch": "@@ -6,15 +6,15 @@\n #ifndef BITCOIN_VALIDATIONINTERFACE_H\n #define BITCOIN_VALIDATIONINTERFACE_H\n \n-#include <primitives/transaction.h> // CTransaction(Ref)\n+#include <primitives/tx_types.h> // CTransaction(Ref)\n #include <sync.h>\n \n #include <functional>\n #include <memory>\n+#include <vector>\n \n extern CCriticalSection cs_main;\n class BlockValidationState;\n-class CBlock;\n class CBlockIndex;\n struct CBlockLocator;\n class CConnman;"
      }
    ]
  },
  {
    "sha": "fa170d6e1ffa3065f1d786958901c260ea882c70",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTE3MGQ2ZTFmZmEzMDY1ZjFkNzg2OTU4OTAxYzI2MGVhODgyYzcw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T03:30:08Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T03:49:45Z"
      },
      "message": "refactor: Add PureTransaction and PureBlock (no tx hash)\n\nThose new types are currently unused. The underlying class has no\ntransaction hash compiled in. So it is safe to use wherever it compiles.\n\nThe existing CMutableTransaction retains the behavior to calculate the\ntx hash on demand. Use of CMutableTransaction makes compile-time\ncomplexity analysis impossible.\n\nThe existing CTransaction retains the behavior to cache the hash on\ninitialization.",
      "tree": {
        "sha": "001f051d68dd1fdc148901997f7d23aafaaafdb3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/001f051d68dd1fdc148901997f7d23aafaaafdb3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa170d6e1ffa3065f1d786958901c260ea882c70",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj1LAv8D+J1Lb1VahMH4oXHDBGmX8jY4H+2GV265Uh5AEFJpV/kkNVOhc+lXFeM\n8fVzqcsEcUCcv3IWrlrjVO2ZpGytfKkmZbqV+EZ/rdKLdPioc2qSnFTd113RJUem\nUsHPq6d+m+6CqYsU9MMpfqJ+xjzMcv6RRRiArofywTYd6dAbqxJ4pc6Ltq6gI6Ih\n2tARcoHf03bphH94PtCZGmu/8eh/Xewhfk9PtjsTlAK9vVUfcO05+Bud7Rsd7l5r\n2pX29uiFNX1jbQifBfnA9lfH5dlQMH57U7Swap8BPdEAXlIwrnNZPeoC9XMoxKGv\nfujJ0xrsym6XQoNRtc21FHjN/a8FH0f9Sf9INTj69JsTkD+BwkJqcleaTkua7HcU\nGDjZ0+XwFGrQOxLlMls9mKW9i0qFOnCygUTCVo5b3FDcfnwJVZr/TJJicFCiJGp9\nzwPCgcKqXgKwZWef9p5RITa0gRz8ol6ScTmU0hC/04dAeXONJ7i45j8Y1bZNMChe\nPeI0YE/D\n=UomI\n-----END PGP SIGNATURE-----",
        "payload": "tree 001f051d68dd1fdc148901997f7d23aafaaafdb3\nparent fab065f35f440a07833593dcb83518bd8e52df91\nauthor MarcoFalke <falke.marco@gmail.com> 1574220608 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574221785 -0500\n\nrefactor: Add PureTransaction and PureBlock (no tx hash)\n\nThose new types are currently unused. The underlying class has no\ntransaction hash compiled in. So it is safe to use wherever it compiles.\n\nThe existing CMutableTransaction retains the behavior to calculate the\ntx hash on demand. Use of CMutableTransaction makes compile-time\ncomplexity analysis impossible.\n\nThe existing CTransaction retains the behavior to cache the hash on\ninitialization.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa170d6e1ffa3065f1d786958901c260ea882c70",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa170d6e1ffa3065f1d786958901c260ea882c70",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa170d6e1ffa3065f1d786958901c260ea882c70/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fab065f35f440a07833593dcb83518bd8e52df91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab065f35f440a07833593dcb83518bd8e52df91",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fab065f35f440a07833593dcb83518bd8e52df91"
      }
    ],
    "stats": {
      "total": 77,
      "additions": 58,
      "deletions": 19
    },
    "files": [
      {
        "sha": "9fe2c9e0d378d4fb0db539ac3cd37a6856ca93c6",
        "filename": "src/primitives/block.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa170d6e1ffa3065f1d786958901c260ea882c70/src/primitives/block.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa170d6e1ffa3065f1d786958901c260ea882c70/src/primitives/block.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.cpp?ref=fa170d6e1ffa3065f1d786958901c260ea882c70",
        "patch": "@@ -15,6 +15,7 @@ uint256 CBlockHeader::GetHash() const\n     return SerializeHash(*this);\n }\n \n+template <>\n std::string CBlock::ToString() const\n {\n     std::stringstream s;"
      },
      {
        "sha": "38a0f9cb4b1349df9c027e39353011be4b045c91",
        "filename": "src/primitives/block.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa170d6e1ffa3065f1d786958901c260ea882c70/src/primitives/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa170d6e1ffa3065f1d786958901c260ea882c70/src/primitives/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.h?ref=fa170d6e1ffa3065f1d786958901c260ea882c70",
        "patch": "@@ -69,21 +69,22 @@ class CBlockHeader\n };\n \n \n-class CBlock : public CBlockHeader\n+template <typename TxRef>\n+class Block : public CBlockHeader\n {\n public:\n     // network and disk\n-    std::vector<CTransactionRef> vtx;\n+    std::vector<TxRef> vtx;\n \n     // memory only\n     mutable bool fChecked;\n \n-    CBlock()\n+    Block()\n     {\n         SetNull();\n     }\n \n-    CBlock(const CBlockHeader &header)\n+    Block(const CBlockHeader& header)\n     {\n         SetNull();\n         *(static_cast<CBlockHeader*>(this)) = header;"
      },
      {
        "sha": "4f0aaa2602d0fb69b15644255b14efbd158d2a5f",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 3,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa170d6e1ffa3065f1d786958901c260ea882c70/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa170d6e1ffa3065f1d786958901c260ea882c70/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=fa170d6e1ffa3065f1d786958901c260ea882c70",
        "patch": "@@ -54,10 +54,20 @@ std::string CTxOut::ToString() const\n     return strprintf(\"CTxOut(nValue=%d.%08d, scriptPubKey=%s)\", nValue / COIN, nValue % COIN, HexStr(scriptPubKey).substr(0, 30));\n }\n \n-CMutableTransaction::CMutableTransaction() : nVersion(CTransaction::CURRENT_VERSION), nLockTime(0) {}\n-CMutableTransaction::CMutableTransaction(const CTransaction& tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime) {}\n+template <bool WithHash> Transaction<WithHash>::Transaction() : nVersion(CTransaction::CURRENT_VERSION), nLockTime(0) { }\n+template <bool WithHash> Transaction<WithHash>::Transaction(const CTransaction& tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime) { }\n \n-uint256 CMutableTransaction::GetHash() const\n+template Transaction<false>::Transaction();\n+template Transaction<true>::Transaction();\n+template Transaction<false>::Transaction(const CTransaction& tx);\n+template Transaction<true>::Transaction(const CTransaction& tx);\n+\n+template <>\n+Transaction<false>::HashType Transaction<false>::GetHash() const\n+{\n+}\n+template <>\n+Transaction<true>::HashType Transaction<true>::GetHash() const\n {\n     return SerializeHash(*this, SER_GETHASH, SERIALIZE_TRANSACTION_NO_WITNESS);\n }"
      },
      {
        "sha": "6bd0344a2ffa72163a0407f7e22786fb089a21a0",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 14,
        "deletions": 6,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa170d6e1ffa3065f1d786958901c260ea882c70/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa170d6e1ffa3065f1d786958901c260ea882c70/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=fa170d6e1ffa3065f1d786958901c260ea882c70",
        "patch": "@@ -361,15 +361,17 @@ class CTransaction\n };\n \n /** A mutable version of CTransaction. */\n-struct CMutableTransaction\n+template <bool WithHash>\n+class Transaction\n {\n+public:\n     std::vector<CTxIn> vin;\n     std::vector<CTxOut> vout;\n     int32_t nVersion;\n     uint32_t nLockTime;\n \n-    CMutableTransaction();\n-    explicit CMutableTransaction(const CTransaction& tx);\n+    explicit Transaction();\n+    explicit Transaction(const CTransaction& tx);\n \n     template <typename Stream>\n     inline void Serialize(Stream& s) const {\n@@ -383,14 +385,19 @@ struct CMutableTransaction\n     }\n \n     template <typename Stream>\n-    CMutableTransaction(deserialize_type, Stream& s) {\n+    Transaction(deserialize_type, Stream& s)\n+    {\n         Unserialize(s);\n     }\n \n-    /** Compute the hash of this CMutableTransaction. This is computed on the\n+    /** Compute the hash of this transaction. This is computed on the\n      * fly, as opposed to GetHash() in CTransaction, which uses a cached result.\n+     *\n+     * The template parameter WithHash denotes whether a member function to\n+     * calculate the hash is compiled.\n      */\n-    uint256 GetHash() const;\n+    using HashType = typename std::conditional<WithHash, uint256, void>::type;\n+    HashType GetHash() const;\n \n     bool HasWitness() const\n     {\n@@ -403,6 +410,7 @@ struct CMutableTransaction\n     }\n };\n \n+template <typename Tx> static inline PureTransactionRef MakePureTransactionRef(Tx&& txIn) { return std::make_shared<const PureTransaction>(std::forward<Tx>(txIn)); }\n static inline CTransactionRef MakeTransactionRef() { return std::make_shared<const CTransaction>(); }\n template <typename Tx> static inline CTransactionRef MakeTransactionRef(Tx&& txIn) { return std::make_shared<const CTransaction>(std::forward<Tx>(txIn)); }\n "
      },
      {
        "sha": "6f364d9e424c31cb2ece9ba7327df72bef607685",
        "filename": "src/primitives/tx_types.h",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa170d6e1ffa3065f1d786958901c260ea882c70/src/primitives/tx_types.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa170d6e1ffa3065f1d786958901c260ea882c70/src/primitives/tx_types.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/tx_types.h?ref=fa170d6e1ffa3065f1d786958901c260ea882c70",
        "patch": "@@ -12,10 +12,21 @@\n \n class CTransaction;\n \n-struct CMutableTransaction;\n+template <bool WithHash>\n+class Transaction;\n \n+using PureTransaction = Transaction</* WithHash */ false>;\n+using CMutableTransaction = Transaction</* WithHash */ true>;\n+\n+// Shared poiners to a transaction or the Block type are not defined for CMutableTransaction. They are only defined for\n+// PureTransaction or CTransaction, so that the transaction hash is either not available or cached.\n+using PureTransactionRef = std::shared_ptr<const PureTransaction>;\n using CTransactionRef = std::shared_ptr<const CTransaction>;\n \n-class CBlock;\n+template <typename TxRef>\n+class Block;\n+\n+using PureBlock = Block<PureTransactionRef>;\n+using CBlock = Block<CTransactionRef>;\n \n #endif // BITCOIN_PRIMITIVES_TX_TYPES_H"
      },
      {
        "sha": "06fd772ce0990bddd199919a40bd722ee6a5f959",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa170d6e1ffa3065f1d786958901c260ea882c70/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa170d6e1ffa3065f1d786958901c260ea882c70/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fa170d6e1ffa3065f1d786958901c260ea882c70",
        "patch": "@@ -1134,7 +1134,8 @@ static bool WriteBlockToDisk(const CBlock& block, FlatFilePos& pos, const CMessa\n     return true;\n }\n \n-bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::Params& consensusParams)\n+template <typename Block>\n+bool ReadBlockFromDisk(Block& block, const FlatFilePos& pos, const Consensus::Params& consensusParams)\n {\n     block.SetNull();\n \n@@ -1157,8 +1158,11 @@ bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::P\n \n     return true;\n }\n+template bool ReadBlockFromDisk<PureBlock>(PureBlock& block, const FlatFilePos& pos, const Consensus::Params& consensusParams);\n+template bool ReadBlockFromDisk<CBlock>(CBlock& block, const FlatFilePos& pos, const Consensus::Params& consensusParams);\n \n-bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus::Params& consensusParams)\n+template <typename Block>\n+bool ReadBlockFromDisk(Block& block, const CBlockIndex* pindex, const Consensus::Params& consensusParams)\n {\n     FlatFilePos blockPos;\n     {\n@@ -1173,6 +1177,8 @@ bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus\n                 pindex->ToString(), pindex->GetBlockPos().ToString());\n     return true;\n }\n+template bool ReadBlockFromDisk<PureBlock>(PureBlock& block, const CBlockIndex* pindex, const Consensus::Params& consensusParams);\n+template bool ReadBlockFromDisk<CBlock>(CBlock& block, const CBlockIndex* pindex, const Consensus::Params& consensusParams);\n \n bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const FlatFilePos& pos, const CMessageHeader::MessageStartChars& message_start)\n {"
      },
      {
        "sha": "bf5af466eb68a6b788e177aed6845656ed05f2fa",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa170d6e1ffa3065f1d786958901c260ea882c70/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa170d6e1ffa3065f1d786958901c260ea882c70/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=fa170d6e1ffa3065f1d786958901c260ea882c70",
        "patch": "@@ -362,8 +362,10 @@ void InitScriptExecutionCache();\n \n \n /** Functions for disk access for blocks */\n-bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::Params& consensusParams);\n-bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus::Params& consensusParams);\n+template <typename Block>\n+bool ReadBlockFromDisk(Block& block, const FlatFilePos& pos, const Consensus::Params& consensusParams);\n+template <typename Block>\n+bool ReadBlockFromDisk(Block& block, const CBlockIndex* pindex, const Consensus::Params& consensusParams);\n bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const FlatFilePos& pos, const CMessageHeader::MessageStartChars& message_start);\n bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CBlockIndex* pindex, const CMessageHeader::MessageStartChars& message_start);\n "
      }
    ]
  },
  {
    "sha": "fa918460f67b2785fdcbb2e80ed08d395d630929",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTkxODQ2MGY2N2IyNzg1ZmRjYmIyZTgwZWQwOGQzOTVkNjMwOTI5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T03:25:51Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T03:49:49Z"
      },
      "message": "bench: Add PureBlock deserialization benchmark",
      "tree": {
        "sha": "b350c8d955dc9490d5d926617fa95a0337f5f301",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b350c8d955dc9490d5d926617fa95a0337f5f301"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa918460f67b2785fdcbb2e80ed08d395d630929",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi5Xwv/SYFFFoyMQW6MPuePnHidKyc0Htj/JcjK3JCrqYgEIWXxxL9Ve12dBhEQ\nDFaah+ymn+RRpn4iCKm9Rt3YozZh3+fOx/+loyAjWEhKZz0mKCAb7fTFGodAavAZ\njNdanGfvU3Mobe/+eqanRixf3Tj+lHY4ZCJ5z6iVF+1CVDoFfqK6s5ZijaN40Ta0\nib4Z2yA+CbUPiV2K+MJ1dXufZGF9us4gR76AoUZ3mPLqtdDZfls1RniDyXMemthD\nnUiWUEfQPP9HaWQLUcU+D1MOif6gx33Q6UrqpqewTYrqWpOwj7yiYrc3jv3eQP3s\n88Mn7XHcF2ViJ1SaUIla2OP3ukXDtdN27390nHLwVsUsdZTuS81mKQ8w6EbAP4Aw\na0TcpY3HGCXRdHOX8gubRfnb7ixhilG/pUaCFOEmM8ENDkWRB4hRR/f9QY35o5Pg\nXLFnRIwW5OsUYrQ3lffN8/2oxq5kqDDp36CXKydXUsGF6WkH8CDGh4mRp6Sen1Qa\nidM1A7v5\n=FNLg\n-----END PGP SIGNATURE-----",
        "payload": "tree b350c8d955dc9490d5d926617fa95a0337f5f301\nparent fa170d6e1ffa3065f1d786958901c260ea882c70\nauthor MarcoFalke <falke.marco@gmail.com> 1574220351 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574221789 -0500\n\nbench: Add PureBlock deserialization benchmark\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa918460f67b2785fdcbb2e80ed08d395d630929",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa918460f67b2785fdcbb2e80ed08d395d630929",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa918460f67b2785fdcbb2e80ed08d395d630929/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa170d6e1ffa3065f1d786958901c260ea882c70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa170d6e1ffa3065f1d786958901c260ea882c70",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa170d6e1ffa3065f1d786958901c260ea882c70"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 15,
      "deletions": 0
    },
    "files": [
      {
        "sha": "420755bac71386e6b0f74e7287ff422d3e09c7c5",
        "filename": "src/bench/checkblock.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa918460f67b2785fdcbb2e80ed08d395d630929/src/bench/checkblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa918460f67b2785fdcbb2e80ed08d395d630929/src/bench/checkblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkblock.cpp?ref=fa918460f67b2785fdcbb2e80ed08d395d630929",
        "patch": "@@ -14,6 +14,20 @@\n // a block off the wire, but before we can relay the block on to peers using\n // compact block relay.\n \n+static void DeserializePureBlockTest(benchmark::State& state)\n+{\n+    CDataStream stream(benchmark::data::block413567, SER_NETWORK, PROTOCOL_VERSION);\n+    char a = '\\0';\n+    stream.write(&a, 1); // Prevent compaction\n+\n+    while (state.KeepRunning()) {\n+        PureBlock block;\n+        stream >> block;\n+        bool rewound = stream.Rewind(benchmark::data::block413567.size());\n+        assert(rewound);\n+    }\n+}\n+\n static void DeserializeBlockTest(benchmark::State& state)\n {\n     CDataStream stream(benchmark::data::block413567, SER_NETWORK, PROTOCOL_VERSION);\n@@ -48,5 +62,6 @@ static void DeserializeAndCheckBlockTest(benchmark::State& state)\n     }\n }\n \n+BENCHMARK(DeserializePureBlockTest, 970);\n BENCHMARK(DeserializeBlockTest, 130);\n BENCHMARK(DeserializeAndCheckBlockTest, 160);"
      }
    ]
  },
  {
    "sha": "fa8cd6b2b9892e17d413b30cf6b9101bccd55937",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYThjZDZiMmI5ODkyZTE3ZDQxM2IzMGNmNmI5MTAxYmNjZDU1OTM3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T03:34:38Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T03:50:36Z"
      },
      "message": "zmq: Send blocks faster by serializing PureBlock",
      "tree": {
        "sha": "f87c7cb32ce481161cbb2359259b5294c36876cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f87c7cb32ce481161cbb2359259b5294c36876cc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa8cd6b2b9892e17d413b30cf6b9101bccd55937",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhU3Qv/Q/1tF+Qy3BtoBFjG4IzjPdSiYN4WuIjhlZz54nfGg5+SHPv9eVKW2pSl\n6gN/8gZREU0HPSkbAEO2k4fM7WB3yA8x1g6dUOaabN0MQ9RMHvmy8m9fN9kZjv5U\nEYXcZh+MABEOTHRX0GvIUV99xUWvO6eDFDsQgZX3Q+5RM0gdqYitH9um1pzBkC3r\nJqzsAfoJ6mQcQsng+MV+2Jom7OVahgkFCoNnuH51eE3yBDm/Ou7BgRpjASKfrZ3S\nOEgIs0lOz7B4DaBNirb+fbGqE1VFPcyppYFuGb4QUvACLPXiS62ohoQJl6F/li33\nDHc/A3urEXN2T95G5f5hBOwYImY9Zh9IJlwYP7WcImumDlNRdNI9MER9+wGYEccQ\n8t++JgctoC0VJQmr51aYkQomKz2IZfhZyjJT6TF1aT8R1LY5fSSCbgvZP8lzcDUt\nlZy2oRkYmcijjrTd/0/4wtWH4EnOAjZtJ0y12/I57CMxYfjmB1lTamuRZ+RsW4XA\nZVgXckU7\n=4pg0\n-----END PGP SIGNATURE-----",
        "payload": "tree f87c7cb32ce481161cbb2359259b5294c36876cc\nparent fa918460f67b2785fdcbb2e80ed08d395d630929\nauthor MarcoFalke <falke.marco@gmail.com> 1574220878 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574221836 -0500\n\nzmq: Send blocks faster by serializing PureBlock\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8cd6b2b9892e17d413b30cf6b9101bccd55937",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8cd6b2b9892e17d413b30cf6b9101bccd55937",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8cd6b2b9892e17d413b30cf6b9101bccd55937/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa918460f67b2785fdcbb2e80ed08d395d630929",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa918460f67b2785fdcbb2e80ed08d395d630929",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa918460f67b2785fdcbb2e80ed08d395d630929"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "db52c9ce04f5b71bc90e786b6f46d8a38d57c28c",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8cd6b2b9892e17d413b30cf6b9101bccd55937/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8cd6b2b9892e17d413b30cf6b9101bccd55937/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=fa8cd6b2b9892e17d413b30cf6b9101bccd55937",
        "patch": "@@ -185,9 +185,8 @@ bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n     CDataStream ss(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n     {\n         LOCK(cs_main);\n-        CBlock block;\n-        if(!ReadBlockFromDisk(block, pindex, consensusParams))\n-        {\n+        PureBlock block;\n+        if (!ReadBlockFromDisk(block, pindex, consensusParams)) {\n             zmqError(\"Can't read block from disk\");\n             return false;\n         }"
      }
    ]
  },
  {
    "sha": "faaa14241283430c6e2bff942323dd5e6df81dd6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWFhMTQyNDEyODM0MzBjNmUyYmZmOTQyMzIzZGQ1ZTZkZjgxZGQ2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T03:43:42Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T03:51:19Z"
      },
      "message": "rpc: Faster getblock by using PureBlock",
      "tree": {
        "sha": "f7dea2b6916d3ca523464c79b5c5f06f08fb8193",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f7dea2b6916d3ca523464c79b5c5f06f08fb8193"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faaa14241283430c6e2bff942323dd5e6df81dd6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhMswv/QW4d2qz73zFmawFuRwkwI9MCG4ex5CvUzuQwVTrBbEmYdLNn0qNaarwD\ns5fDDanPmwpKYjQ2yl/J3dVQOs7wjDOpF2Q0/eP3JM/nUlmKmz/XU4eW0QR/dpUV\nHdQPssIM4TExhLf0uHI5wCd7yXxBxEKsGeN8R9yxpEyc5na0dG8tlWmPTYuCR8I+\nvh/dZ173rIZwqAYjdJ8TmxKUDN0KS/mQC8Wj5UeurCzOI3mWRaSrUL3FP3bs4eEV\np26UTtB9Go8kCXgNVn0QdbSitJTsWoOKnUT3zro0q75jUD3JAQH7kcCLqOyGaF5i\nSdAnN1jlevlFZA3J32VNeDQkO3/1PL2BduwB55z7E9AU+RuIZNbu2BGqFGpJkijz\nM6G8HnWco9zaO83XO2F5snrRgw075Q5KZHZFESG74DJRGDG0pNmx11Qd7cKhnrmo\nIabuKoMKPcZsiXZsevLN3//d9shOOHIWoM7tsXgvuDSoRq+6CLlLYh2lmJmp3+67\nG/Hkb0+x\n=77sb\n-----END PGP SIGNATURE-----",
        "payload": "tree f7dea2b6916d3ca523464c79b5c5f06f08fb8193\nparent fa8cd6b2b9892e17d413b30cf6b9101bccd55937\nauthor MarcoFalke <falke.marco@gmail.com> 1574221422 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574221879 -0500\n\nrpc: Faster getblock by using PureBlock\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faaa14241283430c6e2bff942323dd5e6df81dd6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faaa14241283430c6e2bff942323dd5e6df81dd6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faaa14241283430c6e2bff942323dd5e6df81dd6/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa8cd6b2b9892e17d413b30cf6b9101bccd55937",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8cd6b2b9892e17d413b30cf6b9101bccd55937",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8cd6b2b9892e17d413b30cf6b9101bccd55937"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 14,
      "deletions": 9
    },
    "files": [
      {
        "sha": "961e22e3c2d0da32d8493def4d7c48c722b0d0f6",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 9,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faaa14241283430c6e2bff942323dd5e6df81dd6/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faaa14241283430c6e2bff942323dd5e6df81dd6/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=faaa14241283430c6e2bff942323dd5e6df81dd6",
        "patch": "@@ -782,9 +782,10 @@ static UniValue getblockheader(const JSONRPCRequest& request)\n     return blockheaderToJSON(tip, pblockindex);\n }\n \n-static CBlock GetBlockChecked(const CBlockIndex* pblockindex)\n+template <typename Block>\n+static Block GetBlockChecked(const CBlockIndex* pblockindex)\n {\n-    CBlock block;\n+    Block block;\n     if (IsBlockPruned(pblockindex)) {\n         throw JSONRPCError(RPC_MISC_ERROR, \"Block not available (pruned data)\");\n     }\n@@ -880,8 +881,9 @@ static UniValue getblock(const JSONRPCRequest& request)\n         else\n             verbosity = request.params[1].get_bool() ? 1 : 0;\n     }\n+    const bool use_pure_block{verbosity <= 0};\n \n-    CBlock block;\n+    boost::variant<PureBlock, CBlock> block;\n     const CBlockIndex* pblockindex;\n     const CBlockIndex* tip;\n     {\n@@ -893,18 +895,21 @@ static UniValue getblock(const JSONRPCRequest& request)\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n         }\n \n-        block = GetBlockChecked(pblockindex);\n+        if (use_pure_block) {\n+            block = GetBlockChecked<PureBlock>(pblockindex);\n+        } else {\n+            block = GetBlockChecked<CBlock>(pblockindex);\n+        }\n     }\n \n-    if (verbosity <= 0)\n-    {\n+    if (use_pure_block) {\n         CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n-        ssBlock << block;\n+        ssBlock << boost::get<PureBlock>(block);\n         std::string strHex = HexStr(ssBlock.begin(), ssBlock.end());\n         return strHex;\n     }\n \n-    return blockToJSON(block, tip, pblockindex, verbosity >= 2);\n+    return blockToJSON(boost::get<CBlock>(block), tip, pblockindex, verbosity >= 2);\n }\n \n static UniValue pruneblockchain(const JSONRPCRequest& request)\n@@ -1781,7 +1786,7 @@ static UniValue getblockstats(const JSONRPCRequest& request)\n         }\n     }\n \n-    const CBlock block = GetBlockChecked(pindex);\n+    const CBlock block = GetBlockChecked<CBlock>(pindex);\n     const CBlockUndo blockUndo = GetUndoChecked(pindex);\n \n     const bool do_all = stats.size() == 0; // Calculate everything if nothing selected (default)"
      }
    ]
  }
]