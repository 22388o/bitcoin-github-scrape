[
  {
    "sha": "10d3603ffac70845528ca9de36d0ec8c0e523237",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMGQzNjAzZmZhYzcwODQ1NTI4Y2E5ZGUzNmQwZWM4YzBlNTIzMjM3",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-10-12T20:05:48Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-10-12T21:16:27Z"
      },
      "message": "Bitcoin-Qt: add new GCC compiler hardening options\n\n- this patch enables several new GCC compiler hardening options that\n  allows us to increase the security of our binaries (see:\n  https://wiki.debian.org/Hardening)\n\n-D_FORTIFY_SOURCE=2:\nEnables compile-time protection against static sized buffer overflows.\n\n-Wl,-z,relro -Wl,-z,now:\nEnables full RELRO (RELocation Read-Only), which is a generic mitigation\ntechnique to harden the data sections of an ELF binary/process. See:\nhttp://isisblogs.poly.edu/2011/06/01/relro-relocation-read-only/ for\nfurther details.",
      "tree": {
        "sha": "99e3788a44661f34e8df1e76746f3eb2df8e0304",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/99e3788a44661f34e8df1e76746f3eb2df8e0304"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10d3603ffac70845528ca9de36d0ec8c0e523237",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10d3603ffac70845528ca9de36d0ec8c0e523237",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/10d3603ffac70845528ca9de36d0ec8c0e523237",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10d3603ffac70845528ca9de36d0ec8c0e523237/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "4bb25e48d722f4ce4ac0af098c049f95587ef266",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bb25e48d722f4ce4ac0af098c049f95587ef266",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4bb25e48d722f4ce4ac0af098c049f95587ef266"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e71bb5fa8d954b3365aed28c5bd4ee645bd549a5",
        "filename": "bitcoin-qt.pro",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10d3603ffac70845528ca9de36d0ec8c0e523237/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10d3603ffac70845528ca9de36d0ec8c0e523237/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=10d3603ffac70845528ca9de36d0ec8c0e523237",
        "patch": "@@ -38,6 +38,8 @@ QMAKE_LFLAGS *= -fstack-protector-all --param ssp-buffer-size=1\n # We need to exclude this for Windows cross compile with MinGW 4.2.x, as it will result in a non-working executable!\n # This can be enabled for Windows, when we switch to MinGW >= 4.4.x.\n }\n+# for extra security (see: https://wiki.debian.org/Hardening)\n+QMAKE_CXXFLAGS *= -D_FORTIFY_SOURCE=2 -Wl,-z,relro -Wl,-z,now\n # for extra security on Windows: enable ASLR and DEP via GCC linker flags\n win32:QMAKE_LFLAGS *= -Wl,--dynamicbase -Wl,--nxcompat\n "
      }
    ]
  },
  {
    "sha": "493940038f44412ece135e1a625499ea89a93e56",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OTM5NDAwMzhmNDQ0MTJlY2UxMzVlMWE2MjU0OTllYTg5YTkzZTU2",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-10-13T08:25:17Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-10-13T08:25:17Z"
      },
      "message": "Bitcoin-Qt: remove unneeded \"--param ssp-buffer-size=1\" flag\n\n- that flag is not needed when using \"-fstack-protector-all\", so remove it\n  (see:\n  http://stackoverflow.com/questions/1629685/when-and-how-to-use-gccs-stack-protection-feature)",
      "tree": {
        "sha": "d3c65717b2883414a398043dc6d1677830d7244a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d3c65717b2883414a398043dc6d1677830d7244a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/493940038f44412ece135e1a625499ea89a93e56",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/493940038f44412ece135e1a625499ea89a93e56",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/493940038f44412ece135e1a625499ea89a93e56",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/493940038f44412ece135e1a625499ea89a93e56/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "10d3603ffac70845528ca9de36d0ec8c0e523237",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10d3603ffac70845528ca9de36d0ec8c0e523237",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10d3603ffac70845528ca9de36d0ec8c0e523237"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8a5db22546e0162d48ce7dd13a1f94beb7defa9d",
        "filename": "bitcoin-qt.pro",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/493940038f44412ece135e1a625499ea89a93e56/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/493940038f44412ece135e1a625499ea89a93e56/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=493940038f44412ece135e1a625499ea89a93e56",
        "patch": "@@ -33,8 +33,8 @@ contains(RELEASE, 1) {\n \n !win32 {\n # for extra security against potential buffer overflows: enable GCCs Stack Smashing Protection\n-QMAKE_CXXFLAGS *= -fstack-protector-all --param ssp-buffer-size=1\n-QMAKE_LFLAGS *= -fstack-protector-all --param ssp-buffer-size=1\n+QMAKE_CXXFLAGS *= -fstack-protector-all\n+QMAKE_LFLAGS *= -fstack-protector-all\n # We need to exclude this for Windows cross compile with MinGW 4.2.x, as it will result in a non-working executable!\n # This can be enabled for Windows, when we switch to MinGW >= 4.4.x.\n }"
      }
    ]
  }
]