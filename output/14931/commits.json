[
  {
    "sha": "fa30a0e7f7bb3f93c15bc4d8922eec11b9c7d45f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTMwYTBlN2Y3YmIzZjkzYzE1YmM0ZDg5MjJlZWMxMWI5YzdkNDVm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-12-12T01:51:13Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-12-12T01:47:36Z"
      },
      "message": "test: mempool_persist: Verify prioritization is dumped correctly",
      "tree": {
        "sha": "7f27d50d865069855e22545bb2f67f6012740a51",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f27d50d865069855e22545bb2f67f6012740a51"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa30a0e7f7bb3f93c15bc4d8922eec11b9c7d45f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJcEGi4AAoJEM4rdWl+aaVIUE8L/3k5ZoGO0JyruBU3LUztd7mG\n9wx+DAsSFm1zytihqOtgPgt3Xr8Cpb6IRWIsxmQi0SVzg/PnQS09jf8MjolCextS\nm6KK2U/czmrWmEIOIIQpaJKkvzwxoobaRMiqaH01T21u7ocjo+pvtWMKxt2JeLIv\npzqLWeJZ+coXm3pgS0YvLmjpK7qMqyuF4fSCqo/9AS9RYM6D7S1yDr4779G/Ltc1\n09y9xe0e5kWdA5cTdv6ESiNA2eYeFIBKGmKz8ekkrx7dgjaLDK1/1eBh48MaC3kf\nVWlLtA+VvTnEVuSFW7QQDO+ldKRb1lac2+WyEoD7Mol18j+DV2q1g5JOTQJK6ZTB\n1fo9hKoCRkQT58R6T194iugDJd9NTbYTw9ldDhRRv6U3Q2KjmBmLvUcFaFbCGsef\nQC/InLiJtYyngAACr+AxogSN/y6b3sMf/MV6izEc1RNEYx+cPXKlhRAIMwSewCEc\nt29Gkx0GUkk9qRcFi6AVJztfOtTtU+0qvnxc28LLcg==\n=wHAx\n-----END PGP SIGNATURE-----",
        "payload": "tree 7f27d50d865069855e22545bb2f67f6012740a51\nparent 7701b62561c4d39d0e111c9894c5455087c3c778\nauthor MarcoFalke <falke.marco@gmail.com> 1544579473 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1544579256 -0500\n\ntest: mempool_persist: Verify prioritization is dumped correctly\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa30a0e7f7bb3f93c15bc4d8922eec11b9c7d45f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa30a0e7f7bb3f93c15bc4d8922eec11b9c7d45f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa30a0e7f7bb3f93c15bc4d8922eec11b9c7d45f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7701b62561c4d39d0e111c9894c5455087c3c778",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7701b62561c4d39d0e111c9894c5455087c3c778",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7701b62561c4d39d0e111c9894c5455087c3c778"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 13,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d74d4eaaf1a77de3f0ffb7723017b53d821caf47",
        "filename": "test/functional/mempool_persist.py",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa30a0e7f7bb3f93c15bc4d8922eec11b9c7d45f/test/functional/mempool_persist.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa30a0e7f7bb3f93c15bc4d8922eec11b9c7d45f/test/functional/mempool_persist.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_persist.py?ref=fa30a0e7f7bb3f93c15bc4d8922eec11b9c7d45f",
        "patch": "@@ -42,6 +42,7 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error, wait_until\n \n+\n class MempoolPersistTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 3\n@@ -60,14 +61,21 @@ def run_test(self):\n \n         self.log.debug(\"Send 5 transactions from node2 (to its own address)\")\n         for i in range(5):\n-            self.nodes[2].sendtoaddress(self.nodes[2].getnewaddress(), Decimal(\"10\"))\n+            last_txid = self.nodes[2].sendtoaddress(self.nodes[2].getnewaddress(), Decimal(\"10\"))\n         node2_balance = self.nodes[2].getbalance()\n         self.sync_all()\n \n         self.log.debug(\"Verify that node0 and node1 have 5 transactions in their mempools\")\n         assert_equal(len(self.nodes[0].getrawmempool()), 5)\n         assert_equal(len(self.nodes[1].getrawmempool()), 5)\n \n+        self.log.debug(\"Prioritize a transaction on node0\")\n+        fees = self.nodes[0].getmempoolentry(txid=last_txid)['fees']\n+        assert_equal(fees['base'], fees['modified'])\n+        self.nodes[0].prioritisetransaction(txid=last_txid, fee_delta=1000)\n+        fees = self.nodes[0].getmempoolentry(txid=last_txid)['fees']\n+        assert_equal(fees['base'] + Decimal('0.00001000'), fees['modified'])\n+\n         self.log.debug(\"Stop-start the nodes. Verify that node0 has the transactions in its mempool and node1 does not. Verify that node2 calculates its balance correctly after loading wallet transactions.\")\n         self.stop_nodes()\n         # Give this node a head-start, so we can be \"extra-sure\" that it didn't load anything later\n@@ -81,6 +89,10 @@ def run_test(self):\n         # The others have loaded their mempool. If node_1 loaded anything, we'd probably notice by now:\n         assert_equal(len(self.nodes[1].getrawmempool()), 0)\n \n+        self.log.debug('Verify prioritization is loaded correctly')\n+        fees = self.nodes[0].getmempoolentry(txid=last_txid)['fees']\n+        assert_equal(fees['base'] + Decimal('0.00001000'), fees['modified'])\n+\n         # Verify accounting of mempool transactions after restart is correct\n         self.nodes[2].syncwithvalidationinterfacequeue()  # Flush mempool to wallet\n         assert_equal(node2_balance, self.nodes[2].getbalance())"
      }
    ]
  }
]