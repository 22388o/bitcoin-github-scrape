[
  {
    "sha": "cc3e5c48df4703ea7fdf39540d163ebc58b1e689",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYzNlNWM0OGRmNDcwM2VhN2ZkZjM5NTQwZDE2M2ViYzU4YjFlNjg5",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2015-07-27T21:29:57Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2015-07-27T21:29:57Z"
      },
      "message": "Optimize creation and verification of transactions with lots of inputs\n\nInstead of signing all of a transaction's inputs with SIGHASH_ALL, sign\njust the first input with SIGHASH_ALL (to eliminate one form of malleability)\nand sign all the rest with SIGHASH_ANYONECANPAY. That dramatically reduces\nthe amount of data that has to be hashed to compute signature hashes.\n\nBenchmark results from my machine:\n\n500-input, 1-output, ~100,000-byte transaction:\n\nTime to validate 500 SIGHASH_ALL inputs: 0.342 seconds\nTime to validate 500 SIGHASH_ANYONE inputs: 0.277 seconds\n\n5,000-input, 1-output, ~1-megabyte transaction:\n\nTime to validate 5,000 SIGHASH_ALL inputs: 8.753 seconds\nTime to validate 5,000 SIGHASH_ANYONE inputs: 2.783 seconds",
      "tree": {
        "sha": "75f31a6c2f6d7dc704300e3f678f99deb42fcb72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/75f31a6c2f6d7dc704300e3f678f99deb42fcb72"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc3e5c48df4703ea7fdf39540d163ebc58b1e689",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niEYEABECAAYFAlW2pl4ACgkQdYgkL74406i+HQCgoKUHGcwcGLcZdJX/3fLTz0tg\nmEkAn05gzOyUYy92EmXzaDict66byvTN\n=9Y0u\n-----END PGP SIGNATURE-----",
        "payload": "tree 75f31a6c2f6d7dc704300e3f678f99deb42fcb72\nparent 08e9c57ba2aa808c608daa0b4503f1940a356f8c\nauthor Gavin Andresen <gavinandresen@gmail.com> 1438032597 -0400\ncommitter Gavin Andresen <gavinandresen@gmail.com> 1438032597 -0400\n\nOptimize creation and verification of transactions with lots of inputs\n\nInstead of signing all of a transaction's inputs with SIGHASH_ALL, sign\njust the first input with SIGHASH_ALL (to eliminate one form of malleability)\nand sign all the rest with SIGHASH_ANYONECANPAY. That dramatically reduces\nthe amount of data that has to be hashed to compute signature hashes.\n\nBenchmark results from my machine:\n\n500-input, 1-output, ~100,000-byte transaction:\n\nTime to validate 500 SIGHASH_ALL inputs: 0.342 seconds\nTime to validate 500 SIGHASH_ANYONE inputs: 0.277 seconds\n\n5,000-input, 1-output, ~1-megabyte transaction:\n\nTime to validate 5,000 SIGHASH_ALL inputs: 8.753 seconds\nTime to validate 5,000 SIGHASH_ANYONE inputs: 2.783 seconds\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc3e5c48df4703ea7fdf39540d163ebc58b1e689",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cc3e5c48df4703ea7fdf39540d163ebc58b1e689",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc3e5c48df4703ea7fdf39540d163ebc58b1e689/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08e9c57ba2aa808c608daa0b4503f1940a356f8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08e9c57ba2aa808c608daa0b4503f1940a356f8c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08e9c57ba2aa808c608daa0b4503f1940a356f8c"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 12,
      "deletions": 1
    },
    "files": [
      {
        "sha": "15ced95596cfd006e1116060448436ce390b7e87",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cc3e5c48df4703ea7fdf39540d163ebc58b1e689/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cc3e5c48df4703ea7fdf39540d163ebc58b1e689/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=cc3e5c48df4703ea7fdf39540d163ebc58b1e689",
        "patch": "@@ -1996,8 +1996,19 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n                     bool signSuccess;\n                     const CScript& scriptPubKey = coin.first->vout[coin.second].scriptPubKey;\n                     CScript& scriptSigRes = txNew.vin[nIn].scriptSig;\n+                    // Sign the first input with SIGHASH_ALL, all the rest with\n+                    // SIGHASH_ALL|SIGHASH_ANYONECANPAY. This optimizes validation for\n+                    // transactions with a lot of inputs. The first SIGHASH_ALL prevents\n+                    // somebody from adding additional inputs and changing the transaction id;\n+                    // SIGHASH_ALL by itself fixes the set of previous outputs.\n+                    // Using SIGHASH_ANYONECANPAY for the rest of the inputs minimizes the\n+                    // amount of data that has to be hashed to compute signatures, making both\n+                    // transaction creation and verification faster (benchmark results;\n+                    // a 500 input transaction takes 277ms to validate with this optimization,\n+                    // but 342ms if all inputs are SIGHASH_ALL).\n+                    int sighash_type = (nIn == 0 ? SIGHASH_ALL : SIGHASH_ALL|SIGHASH_ANYONECANPAY);\n                     if (sign)\n-                        signSuccess = ProduceSignature(TransactionSignatureCreator(this, &txNewConst, nIn, SIGHASH_ALL), scriptPubKey, scriptSigRes);\n+                        signSuccess = ProduceSignature(TransactionSignatureCreator(this, &txNewConst, nIn, sighash_type), scriptPubKey, scriptSigRes);\n                     else\n                         signSuccess = ProduceSignature(DummySignatureCreator(this), scriptPubKey, scriptSigRes);\n "
      }
    ]
  }
]