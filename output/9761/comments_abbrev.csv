gmaxwell,2017-02-15T00:37:17Z,"So one consequence of this is that if you use the manual pruning you will potentially prune past the time your imports will attempt to search, and then fail.",https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-279882289,279882289,
laanwj,2017-02-15T06:48:33Z,"Concept ACK.\n\n> So one consequence of this is that if you use the manual pruning you will potentially prune past the time your imports will attempt to search, and then fail.\n\nYes. Though I'm not sure that warrants any changes. After all it's the same for importwallet already.\n\nAt the least this grace period needs to be clearly documented in the RPC help so that it can be taken into acc",https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-279930956,279930956,
ryanofsky,2017-02-15T14:24:44Z,">> So one consequence of this is that if you use the manual pruning you will potentially prune past the time your imports will attempt to search, and then fail.\n\n> Yes. Though I'm not sure that warrants any changes. After all it's the same for importwallet already.\n\nI would want to address this by only adding the grace period when `fPruneMode` is false. The way I see it, if you're using th",https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-280023800,280023800,
ryanofsky,2017-02-15T22:32:35Z,"Created #9773 to deal with the issue of pruned nodes. morcos argued against removing the grace period when fPruneMode was false because not having a grace period could potentially lead to missing transaction data, and gmaxwell argued against disabling importmulti rescans on pruned nodes because partial rescanning is an important feature for pruned nodes, so #9773 deals with the issue by returning ",https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-280161992,280161992,
laanwj,2017-02-16T08:12:19Z,"Making the grace period depend on whether the node is pruning or not sounds like a terrible idea to me. It ties together two different options in a completely unexpected way, that's just asking for people to make mistakes.",https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-280262010,280262010,
gmaxwell,2017-02-16T12:23:31Z,"The whole reason manual pruning takes a timestamp is so harmonize it with this, so you can not prune what you need to import. I think this could be addressed by also adding an identical grace to the manual pruning time.",https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-280316826,280316826,
morcos,2017-02-16T15:41:39Z,"utACK 		e662af3\n\nPlease tag 0.14\nonly reviewed code changes did not review test changes\n\n",https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-280366215,280366215,
jtimon,2017-02-16T21:05:54Z,"Concept ACK, although as commented in #9778, if these grace periods need to be consistent, I think we should have a constant (also used for normal rescan?).\n",https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-280460298,280460298,
laanwj,2017-02-17T11:52:44Z,"> Concept ACK, although as commented in #9778, if these grace periods need to be consistent, I think we should have a constant (also used for normal rescan?).\n\nYes, would make sense to define a constant. No, that does not need to hold up merging this.\n",https://github.com/bitcoin/bitcoin/pull/9761#issuecomment-280630280,280630280,
morcos,2017-02-15T13:01:55Z,"I think this works fine, but does it seem slightly safer to not allow it to go negative?",https://github.com/bitcoin/bitcoin/pull/9761#discussion_r101271246,101271246,src/wallet/rpcdump.cpp
ryanofsky,2017-02-16T14:41:50Z,Added max call.,https://github.com/bitcoin/bitcoin/pull/9761#discussion_r101532994,101532994,src/wallet/rpcdump.cpp
theuni,2017-02-16T16:55:01Z,"nit: I think this should be ```std::max<int64_t>(nLowestTimestamp - 7200, minimumTimestamp)```\n\nI only mention because I'm unsure if 0 has a special meaning somewhere.",https://github.com/bitcoin/bitcoin/pull/9761#discussion_r101570442,101570442,src/wallet/rpcdump.cpp
ryanofsky,2017-02-16T17:57:33Z,"0 has special meaning for the CWallet::nTimeFirstKey variable, but I recently removed all outside references to that variable and made it private so that no other code that wasn't dealing with it directly would have to worry about special meanings of 0.\n\nminimumTimestamp would work fine if it were set to 0 instead of 1, and I have some local changes to remove this variable, so I didn't want to",https://github.com/bitcoin/bitcoin/pull/9761#discussion_r101584982,101584982,src/wallet/rpcdump.cpp
theuni,2017-02-16T18:25:14Z,Sounds good.,https://github.com/bitcoin/bitcoin/pull/9761#discussion_r101591239,101591239,src/wallet/rpcdump.cpp
