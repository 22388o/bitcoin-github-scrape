luke-jr,2019-10-27 13:21:45,"There should probably be a BIP first.\n\nWhy is it using OP_RETURN at all? I would expect assets to just use coloured coins...",https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-546694151,546694151,
luke-jr,2019-10-27 13:22:36,"(Also, the BIP and policy change should be explicitly for the asset stuff, not a general OP_RETURN policy)",https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-546694229,546694229,
CraigSellars,2019-10-27 15:48:15,"> Why is it using OP_RETURN at all? I would expect assets to just use coloured coins...\n\nTwo reasons: first, colored coins can only perform explicit transactions, such as sends of assets from one address to another.  They cannot support *implicit* actions, like sending an asset from a recipient in response to a single transaction from a sender (this would include crowdsale/ICO-like functionali",https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-546706956,546706956,
Relaxo143,2019-10-28 18:27:01,"Each OP_RETURN output is being paid for (fees), so there is no reason to limit the amount of such outputs. Great PR in my opinion!",https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-547083568,547083568,
luke-jr,2019-10-29 00:16:20,"> Two reasons: first, colored coins can only perform explicit transactions, such as sends of assets from one address to another. They cannot support implicit actions, like sending an asset from a recipient in response to a single transaction from a sender (this would include crowdsale/ICO-like functionality as well as decentralized exchange capability).\n\n@CraigSellars Bitcoin transactions don'",https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-547201145,547201145,
dexX7,2019-10-29 07:01:52,">Bitcoin transactions don't have an identified sender.\n\nBut certain overlay protocols do and this is what this is about.\n\nAlso related: #12033",https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-547284592,547284592,
Relaxo143,2019-10-29 16:04:06,"> > Two reasons: first, colored coins can only perform explicit transactions, such as sends of assets from one address to another. They cannot support implicit actions, like sending an asset from a recipient in response to a single transaction from a sender (this would include crowdsale/ICO-like functionality as well as decentralized exchange capability).\n> \n> @CraigSellars Bitcoin transaction",https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-547498508,547498508,
luke-jr,2019-10-29 20:19:09,@Relaxo143  I'm not saying this is spam. I'm saying the argument you made is nonsensical.,https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-547610860,547610860,
DrahtBot,2019-10-29 20:28:53,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17480](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17480.html) (test: add unit test for non-standard txs wi",https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-547614800,547614800,
theStack,2019-10-29 20:35:30,"> > Each OP_RETURN output is being paid for (fees), so there is no reason to limit the amount of such outputs.Each OP_RETURN output is being paid for (fees), so there is no reason to limit the amount of such outputs.\n> \n> @Relaxo143 This is nonsense. Fees do not pay for outputs or transactions, they merely bribe miners (who do not carry the burden) to include them in blocks. These policy spam ",https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-547617456,547617456,
Bushstar,2019-10-30 07:06:50,"The process of using multiple TXs to send multiple OP_RETURN outputs is inefficient when those outputs could be sent in one TX, this PR exists to reduce inefficiencies.\n\nRebased to fix conflicts.\n\n@theStack Thanks for spotting those issues, I've updated to not call IsDust if the output is OP_RETURN and have removed the additional tests.",https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-547765757,547765757,
luke-jr,2019-11-04 16:45:56,"Generic OP_RETURN is accepted to commit to a hash of external data. That external data can be of any size without increasing the size of the hash or requiring multiple hashes. It can even be a merkle tree, if multiple independent commitments are desired.\n\nConsidering no jurification is given for multiple OP_RETURNs, and the desired goal is more properly accomplished by implementing a policy th",https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-549442510,549442510,
jgarzik,2019-11-04 17:08:11,"> Generic OP_RETURN is accepted to commit to a hash of external data. That external data can be of any size without increasing the size of the hash or requiring multiple hashes. It can even be a merkle tree, if multiple independent commitments are desired.\n\nTrue.\n\n> Considering no jurification is given for multiple OP_RETURNs, and the desired goal is more properly accomplished by implement",https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-549452710,549452710,
luke-jr,2019-11-04 17:33:36,"In such cases, couldn't they concatenate their hashes and put a hash of all of them together in a single OP_RETURN?",https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-549463470,549463470,
jgarzik,2019-11-04 18:29:50,"> In such cases, couldn't they concatenate their hashes and put a hash of all of them together in a single OP_RETURN?\n\nPart of the point of `SIGHASH_SINGLE` and friends is that aggregation of that sort may require burdensome cooperation across competing or independent parties, leading to the need to aggregate at the tx input/output level instead.   It seems like the same train of thought and r",https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-549486184,549486184,
Sjors,2019-11-14 11:15:59,As Luke-Jr already said: this needs a BIP. The [bitcoin-dev mailinglist](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev) is a more appropriate place for discussion. The BIP can point to this PR as its example implementation.,https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-553842600,553842600,
DrahtBot,2019-11-15 20:26:07,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-554515175,554515175,
fanquake,2020-04-12 11:04:30,"As mentioned, this needs a BIP / mailing list discussion. Going to close this, you can still point back to the changes if needed.",https://github.com/bitcoin/bitcoin/pull/17272#issuecomment-612597759,612597759,
theStack,2019-10-29 14:17:06,Note that your policy change leads to the execution of the dust check (`IsDust()`) for OP_RETURN outputs. ,https://github.com/bitcoin/bitcoin/pull/17272#discussion_r340101625,340101625,src/policy/policy.cpp
theStack,2019-10-29 15:42:59,"I'd suggest not removing the test case, but rather simply adapting the expected result (to `'allowed': True` instead of False and removing the `'reject-reason'`).",https://github.com/bitcoin/bitcoin/pull/17272#discussion_r340158634,340158634,test/functional/mempool_accept.py
