[
  {
    "sha": "e37b16a75c1ff86d515ef3050d2c76432ea71225",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMzdiMTZhNzVjMWZmODZkNTE1ZWYzMDUwZDJjNzY0MzJlYTcxMjI1",
    "commit": {
      "author": {
        "name": "Daniel Cousens",
        "email": "dcousens@users.noreply.github.com",
        "date": "2016-07-12T03:27:09Z"
      },
      "committer": {
        "name": "Daniel Cousens",
        "email": "github@dcousens.com",
        "date": "2016-07-14T03:40:50Z"
      },
      "message": "transaction: clarify witness branches",
      "tree": {
        "sha": "2baa46a5430492708ebc675072023e231429b3c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2baa46a5430492708ebc675072023e231429b3c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e37b16a75c1ff86d515ef3050d2c76432ea71225",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e37b16a75c1ff86d515ef3050d2c76432ea71225",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e37b16a75c1ff86d515ef3050d2c76432ea71225",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e37b16a75c1ff86d515ef3050d2c76432ea71225/comments",
    "author": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4831a16223dbb42da3091e616c47eeb01f53f73b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4831a16223dbb42da3091e616c47eeb01f53f73b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4831a16223dbb42da3091e616c47eeb01f53f73b"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 5,
      "deletions": 3
    },
    "files": [
      {
        "sha": "18402ac4536e672386ccc1ca8cc07730f20bd4b5",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e37b16a75c1ff86d515ef3050d2c76432ea71225/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e37b16a75c1ff86d515ef3050d2c76432ea71225/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=e37b16a75c1ff86d515ef3050d2c76432ea71225",
        "patch": "@@ -290,6 +290,8 @@ struct CMutableTransaction;\n  */\n template<typename Stream, typename Operation, typename TxType>\n inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action, int nType, int nVersion) {\n+    const bool fAllowWitness = !(nVersion & SERIALIZE_TRANSACTION_NO_WITNESS);\n+\n     READWRITE(*const_cast<int32_t*>(&tx.nVersion));\n     unsigned char flags = 0;\n     if (ser_action.ForRead()) {\n@@ -298,7 +300,7 @@ inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action, in\n         const_cast<CTxWitness*>(&tx.wit)->SetNull();\n         /* Try to read the vin. In case the dummy is there, this will be read as an empty vector. */\n         READWRITE(*const_cast<std::vector<CTxIn>*>(&tx.vin));\n-        if (tx.vin.size() == 0 && !(nVersion & SERIALIZE_TRANSACTION_NO_WITNESS)) {\n+        if (tx.vin.size() == 0 && fAllowWitness) {\n             /* We read a dummy or an empty vin. */\n             READWRITE(flags);\n             if (flags != 0) {\n@@ -309,7 +311,7 @@ inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action, in\n             /* We read a non-empty vin. Assume a normal vout follows. */\n             READWRITE(*const_cast<std::vector<CTxOut>*>(&tx.vout));\n         }\n-        if ((flags & 1) && !(nVersion & SERIALIZE_TRANSACTION_NO_WITNESS)) {\n+        if ((flags & 1) && fAllowWitness) {\n             /* The witness flag is present, and we support witnesses. */\n             flags ^= 1;\n             const_cast<CTxWitness*>(&tx.wit)->vtxinwit.resize(tx.vin.size());\n@@ -322,7 +324,7 @@ inline void SerializeTransaction(TxType& tx, Stream& s, Operation ser_action, in\n     } else {\n         // Consistency check\n         assert(tx.wit.vtxinwit.size() <= tx.vin.size());\n-        if (!(nVersion & SERIALIZE_TRANSACTION_NO_WITNESS)) {\n+        if (fAllowWitness) {\n             /* Check whether witnesses need to be serialized. */\n             if (!tx.wit.IsNull()) {\n                 flags |= 1;"
      }
    ]
  }
]