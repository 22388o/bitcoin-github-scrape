[
  {
    "sha": "e56100c5b4daf2285dde9807bf654599aa19bd6b",
    "node_id": "C_kwDOABII59oAKGU1NjEwMGM1YjRkYWYyMjg1ZGRlOTgwN2JmNjU0NTk5YWExOWJkNmI",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-09-24T00:55:00Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-09-24T07:39:25Z"
      },
      "message": "build: remove arm includes from getauxval() check\n\nThen the check will work on platforms other than ARM.",
      "tree": {
        "sha": "c249acd0875d7f28d6ab6b598b06b19071bacf54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c249acd0875d7f28d6ab6b598b06b19071bacf54"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e56100c5b4daf2285dde9807bf654599aa19bd6b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmFNgLYACgkQLuufXMCV\nJsGW5RAAruiMhKuWP0VEO4gaFg3+LWLnCkx+hA8xJ3DDyWQ4Qr2S6DamBTOr2xIj\nrwJgCMA3CChpdj1W7QH9NbVElEbix2gzYSTn7+PXvT3cUbE+fI5PcFKTMNL4z4S1\ntFUKh03csz0CXNDMxxY4Py8Tg0xzIN5kTd0jjWbF5FBqgnw4/LUAoXmpAMqNdPdX\n7TtNlXbcjZkUuWB6i8ojPi7f5Ahy7/TuVS0vxYa6MiBiOA5Irqb1QkPWCUrFxSw7\nosLuVjAuWxQ0Reyhf0gaQrcsPrXpc93YKkH+IxQSMM9nvaRy+svyQe9+UOuwGN2J\nA2HAmWNOCAmuHgDDX3f2CzQ1OV7KLzEq0boif7+tLQ3jpv483gowWXAWmSpvG9MB\nGkk5WYSvHp3kLj7OCnvOyxpLjVV/6tTCWwXuik6/qmF8lQsmhgY5FXOhDXDOdYwv\nnJZIy9XcWxMtX22J78ogCb73eL8ztYJijBbGYWL2GmlR/ZYdYmv3ATtXuFKCmrCJ\nsAzEbipa8GiVk0n3wIbN4W3JMxyi3j0IpjVpuYzUMjwkPSdos6BHopyIC7SmsSSJ\nM7PtGhOyArxPKX+LaEpT+TVXtnmvaduyqfwim+aj55pZrjUODcOX4wms2YEiU/hK\n2lpmOlzqt6ADBMoiUHzqUegGoVC6TRp39NPotdiPfuvGVo1nxao=\n=7tRB\n-----END PGP SIGNATURE-----",
        "payload": "tree c249acd0875d7f28d6ab6b598b06b19071bacf54\nparent b7e360081506cc646dd86f131df2d01f3c544f0e\nauthor fanquake <fanquake@gmail.com> 1632444900 +0800\ncommitter fanquake <fanquake@gmail.com> 1632469165 +0800\n\nbuild: remove arm includes from getauxval() check\n\nThen the check will work on platforms other than ARM.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e56100c5b4daf2285dde9807bf654599aa19bd6b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e56100c5b4daf2285dde9807bf654599aa19bd6b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e56100c5b4daf2285dde9807bf654599aa19bd6b/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b7e360081506cc646dd86f131df2d01f3c544f0e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7e360081506cc646dd86f131df2d01f3c544f0e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b7e360081506cc646dd86f131df2d01f3c544f0e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "362ba096b8f7c938952448cb9f579e917d23bd5a",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e56100c5b4daf2285dde9807bf654599aa19bd6b/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e56100c5b4daf2285dde9807bf654599aa19bd6b/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=e56100c5b4daf2285dde9807bf654599aa19bd6b",
        "patch": "@@ -1210,8 +1210,6 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <xmmintrin.h>]], [[\n \n AC_MSG_CHECKING(for strong getauxval support in the system headers)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    #include <arm_acle.h>\n-    #include <arm_neon.h>\n     #include <sys/auxv.h>\n   ]], [[\n     getauxval(AT_HWCAP);"
      }
    ]
  },
  {
    "sha": "4446ef0a549d567a88d82b606aa8c47f115673f9",
    "node_id": "C_kwDOABII59oAKDQ0NDZlZjBhNTQ5ZDU2N2E4OGQ4MmI2MDZhYThjNDdmMTE1NjczZjk",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-09-24T00:08:56Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-09-24T07:40:04Z"
      },
      "message": "build: remove support for weak linking getauxval()\n\nIt was [pointed out in #23030](https://github.com/bitcoin/bitcoin/pull/23030#issuecomment-922893367) that we might be able to get rid of our weak linking of [`getauxval()`](https://man7.org/linux/man-pages/man3/getauxval.3.html) (`HAVE_WEAK_GETAUXVAL`) entirely, with only Android being a potential holdout:\n> I wonder if it's time to get rid of HAVE_WEAK_GETAUXVAL. I think it's confusing. Either we build against a C library that has this functionality, or not. We don't do this weak linking thing for any other symbols and recently got rid of the other glibc backwards compatibility stuff.\n> Unless there is still a current platform that really needs it (Android?), I'd prefer to remove it from the build system, it has caused enough issues.\n\nAfter looking at Android further, it would seem that given we are moving to using `std::filesystem`, which [requires NDK version 22 and later](https://github.com/android/ndk/wiki/Changelog-r22), and `getauxval` has been available in the since [API version 18](https://developer.android.com/ndk/guides/cpu-features#features_using_libcs_getauxval3), that shouldn't really be an issue. Support for API levels < 19 will be dropped with the NDK 24 release, and according to [one website](https://apilevels.com/), supporting API level 18+ will cover ~99% of devices. Note that in the CI we currently build with NDK version 22 and API level 28.\n\nThe other change in this PR is removing the include of headers for ARM intrinsics, from the check for strong `getauxval()` support in configure, as they shouldn't be needed. Including these headers also meant that the check would basically only succeed when building for ARM. This would be an issue if we remove weak linking, as we wouldn't detect `getauxval()` as supported on other platforms. Note that we also use `getauxval()` in our RNG when it's available.\n\nI've checked that with these changes we detect support for strong `getauxval()` on Alpine (muslibc). On Linux, previously we'd be detecting support for weak getauxval(), now we detect strong support. Note that we already require glibc 2.17, and `getauxval()` was introduced in `2.16`.\n\nThis is an alternative / supersedes #23030.",
      "tree": {
        "sha": "db27f3fc0b99f1f2e29cb11172526df29520247e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db27f3fc0b99f1f2e29cb11172526df29520247e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4446ef0a549d567a88d82b606aa8c47f115673f9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmFNgNwACgkQLuufXMCV\nJsH1HA//dZbeF+X4Np7kB7LS9JN9mNO/BR8cq4WSARP1MefUuhBgGVkEnEs7/eFX\n6rdUMBN4G3hITpTDvc/cK1OikcUW/57hsxIlSDnkmfAx5+N3359p5g810n71AQcG\nVO/Ve8IxDVKo7hUoM6E+7YiAosnfPBpJ4b+rNt2PARrTx+u29pgC6UYCf+V4nNgw\n/mg0eHrpJW1aE9O76ocronntG05isZTwqwEhIqycYxcEpVG+tKMFhga/+QV5HPAj\nsoZCwRoCFwEOeZT7ldqaAAd7Tgah1EW5YBWgqkiVRmN8pgKBehw7A+9J6yX7yHIS\n49uY2yM4B0zaBWrdZ3aSwLlOAxV8xyP80kQS8VTqe1VVgUgazTTkgW1icUVAsgUw\nf9bhr/w9V/ZfL3ElJLGdwXrZ1Vogh1vBIEd+s1kBQdgGvwboP7YPJt1oXw7PSi7C\nwBWsSfbSXkrFXxf+DoRebmcGGgloZ7MWogmSA65wxFmPYPIyj9nr7S/pnLxFMleA\n/T+A8hzV6GPt3xJX+1ytQ59xj2vxCi30G7bnDnKMnWLvzbN3WLzBS4UpBLfiUrwv\ntraGcVHlLMygGY33p54y5NuOIeTkuZwNE5WKlvil92aJqMoJYeo05+vz6dvh4qQT\nuChCfLujVYp+gb4SPUK061YcxwfdXn1IGkXdFn6/oZyzqjIWRDo=\n=ADNG\n-----END PGP SIGNATURE-----",
        "payload": "tree db27f3fc0b99f1f2e29cb11172526df29520247e\nparent e56100c5b4daf2285dde9807bf654599aa19bd6b\nauthor fanquake <fanquake@gmail.com> 1632442136 +0800\ncommitter fanquake <fanquake@gmail.com> 1632469204 +0800\n\nbuild: remove support for weak linking getauxval()\n\nIt was [pointed out in #23030](https://github.com/bitcoin/bitcoin/pull/23030#issuecomment-922893367) that we might be able to get rid of our weak linking of [`getauxval()`](https://man7.org/linux/man-pages/man3/getauxval.3.html) (`HAVE_WEAK_GETAUXVAL`) entirely, with only Android being a potential holdout:\n> I wonder if it's time to get rid of HAVE_WEAK_GETAUXVAL. I think it's confusing. Either we build against a C library that has this functionality, or not. We don't do this weak linking thing for any other symbols and recently got rid of the other glibc backwards compatibility stuff.\n> Unless there is still a current platform that really needs it (Android?), I'd prefer to remove it from the build system, it has caused enough issues.\n\nAfter looking at Android further, it would seem that given we are moving to using `std::filesystem`, which [requires NDK version 22 and later](https://github.com/android/ndk/wiki/Changelog-r22), and `getauxval` has been available in the since [API version 18](https://developer.android.com/ndk/guides/cpu-features#features_using_libcs_getauxval3), that shouldn't really be an issue. Support for API levels < 19 will be dropped with the NDK 24 release, and according to [one website](https://apilevels.com/), supporting API level 18+ will cover ~99% of devices. Note that in the CI we currently build with NDK version 22 and API level 28.\n\nThe other change in this PR is removing the include of headers for ARM intrinsics, from the check for strong `getauxval()` support in configure, as they shouldn't be needed. Including these headers also meant that the check would basically only succeed when building for ARM. This would be an issue if we remove weak linking, as we wouldn't detect `getauxval()` as supported on other platforms. Note that we also use `getauxval()` in our RNG when it's available.\n\nI've checked that with these changes we detect support for strong `getauxval()` on Alpine (muslibc). On Linux, previously we'd be detecting support for weak getauxval(), now we detect strong support. Note that we already require glibc 2.17, and `getauxval()` was introduced in `2.16`.\n\nThis is an alternative / supersedes #23030.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4446ef0a549d567a88d82b606aa8c47f115673f9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4446ef0a549d567a88d82b606aa8c47f115673f9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4446ef0a549d567a88d82b606aa8c47f115673f9/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e56100c5b4daf2285dde9807bf654599aa19bd6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e56100c5b4daf2285dde9807bf654599aa19bd6b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e56100c5b4daf2285dde9807bf654599aa19bd6b"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 3,
      "deletions": 18
    },
    "files": [
      {
        "sha": "26092a7b8dfcd96e2bd6cd46c7b446756ba96028",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4446ef0a549d567a88d82b606aa8c47f115673f9/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4446ef0a549d567a88d82b606aa8c47f115673f9/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=4446ef0a549d567a88d82b606aa8c47f115673f9",
        "patch": "@@ -1218,19 +1218,6 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n  [ AC_MSG_RESULT(no); HAVE_STRONG_GETAUXVAL=0 ]\n )\n \n-AC_MSG_CHECKING(for weak getauxval support in the compiler)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    #ifdef __linux__\n-    unsigned long getauxval(unsigned long type) __attribute__((weak));\n-    #define AT_HWCAP 16\n-    #endif\n-  ]], [[\n-    getauxval(AT_HWCAP);\n-  ]])],\n- [ AC_MSG_RESULT(yes); HAVE_WEAK_GETAUXVAL=1; AC_DEFINE(HAVE_WEAK_GETAUXVAL, 1, [Define this symbol to build code that uses getauxval (weak linking)]) ],\n- [ AC_MSG_RESULT(no); HAVE_WEAK_GETAUXVAL=0 ]\n-)\n-\n have_any_system=no\n AC_MSG_CHECKING([for std::system])\n AC_LINK_IFELSE(\n@@ -1876,7 +1863,6 @@ AC_SUBST(HAVE_O_CLOEXEC)\n AC_SUBST(HAVE_BUILTIN_PREFETCH)\n AC_SUBST(HAVE_MM_PREFETCH)\n AC_SUBST(HAVE_STRONG_GETAUXVAL)\n-AC_SUBST(HAVE_WEAK_GETAUXVAL)\n AC_SUBST(ANDROID_ARCH)\n AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])"
      },
      {
        "sha": "3cbe71792cae8e81f2102b730e0ceb536844869a",
        "filename": "src/Makefile.crc32c.include",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4446ef0a549d567a88d82b606aa8c47f115673f9/src/Makefile.crc32c.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4446ef0a549d567a88d82b606aa8c47f115673f9/src/Makefile.crc32c.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.crc32c.include?ref=4446ef0a549d567a88d82b606aa8c47f115673f9",
        "patch": "@@ -14,7 +14,6 @@ CRC32C_CPPFLAGS_INT += -I$(srcdir)/crc32c/include\n CRC32C_CPPFLAGS_INT += -DHAVE_BUILTIN_PREFETCH=@HAVE_BUILTIN_PREFETCH@\n CRC32C_CPPFLAGS_INT += -DHAVE_MM_PREFETCH=@HAVE_MM_PREFETCH@\n CRC32C_CPPFLAGS_INT += -DHAVE_STRONG_GETAUXVAL=@HAVE_STRONG_GETAUXVAL@\n-CRC32C_CPPFLAGS_INT += -DHAVE_WEAK_GETAUXVAL=@HAVE_WEAK_GETAUXVAL@\n CRC32C_CPPFLAGS_INT += -DCRC32C_TESTS_BUILT_WITH_GLOG=0\n \n if ENABLE_SSE42"
      },
      {
        "sha": "bf23ea4a12af36c4d65c89faca67f4319ae2c150",
        "filename": "src/randomenv.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4446ef0a549d567a88d82b606aa8c47f115673f9/src/randomenv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4446ef0a549d567a88d82b606aa8c47f115673f9/src/randomenv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.cpp?ref=4446ef0a549d567a88d82b606aa8c47f115673f9",
        "patch": "@@ -53,7 +53,7 @@\n #include <sys/vmmeter.h>\n #endif\n #endif\n-#if defined(HAVE_STRONG_GETAUXVAL) || defined(HAVE_WEAK_GETAUXVAL)\n+#if defined(HAVE_STRONG_GETAUXVAL)\n #include <sys/auxv.h>\n #endif\n \n@@ -326,7 +326,7 @@ void RandAddStaticEnv(CSHA512& hasher)\n     // Bitcoin client version\n     hasher << CLIENT_VERSION;\n \n-#if defined(HAVE_STRONG_GETAUXVAL) || defined(HAVE_WEAK_GETAUXVAL)\n+#if defined(HAVE_STRONG_GETAUXVAL)\n     // Information available through getauxval()\n #  ifdef AT_HWCAP\n     hasher << getauxval(AT_HWCAP);\n@@ -346,7 +346,7 @@ void RandAddStaticEnv(CSHA512& hasher)\n     const char* exec_str = (const char*)getauxval(AT_EXECFN);\n     if (exec_str) hasher.Write((const unsigned char*)exec_str, strlen(exec_str) + 1);\n #  endif\n-#endif // HAVE_STRONG_GETAUXVAL || HAVE_WEAK_GETAUXVAL\n+#endif // HAVE_STRONG_GETAUXVAL\n \n #ifdef HAVE_GETCPUID\n     AddAllCPUID(hasher);"
      }
    ]
  }
]