[
  {
    "sha": "fad55e79ca18a5894a8da6db6309c323eecbb178",
    "node_id": "C_kwDOABII59oAKGZhZDU1ZTc5Y2ExOGE1ODk0YThkYTZkYjYzMDljMzIzZWVjYmIxNzg",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-05T11:34:24Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-08T13:54:50Z"
      },
      "message": "doc: Fixup ToIntegral docs",
      "tree": {
        "sha": "a3669c648ef77358d02f85a9f671ad92e595b98b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a3669c648ef77358d02f85a9f671ad92e595b98b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad55e79ca18a5894a8da6db6309c323eecbb178",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUh4awv+NaounZ2A307YhUrz744gETIrPnSlUqtflLva7MJDXmcq/10I3dU+hjnN\nyDp3UgO1ofsytFjLCVp2EhN5gOKgexaWb3jOidJWIcLdMx6443OJiwo/WBQoI7rc\n+haBQTMhEmXRM9AFQfjvkJI9FXpPIgYnFYmMIHF9BStRUm/rkN9AIKT4bFvqOmIV\nkEpxHCWWJCnjyljc8Ad27ZEs7WHqwQXRjVaN+CX+eOYlymGqsx3JrJg3IUBYDx9r\nhmU5s76OoLC0ILkvavBAjyXeuLTOQzDjJrCdVQmowiGpCWizfDe/FLqC6kOm1y2D\nAIbqmUrEohqf0xt07VjM/AkIM4yCfemDsF1CX7Md+Qr3/heWBKJYiiNfm0AllnOL\nYuMAbkRc7YBn/3WV50BMSHIO/jH6BlrWyqh2+Qs86VA+Rn5Suyt8br+OfvhTcnBS\nLLL/BsyTuz+ReRLSNXaoAp0l+4z0f4RSUuIwZfNDwIi6LQ+eG4DJd3qU9HN892f6\nOnn9xeIN\n=bRls\n-----END PGP SIGNATURE-----",
        "payload": "tree a3669c648ef77358d02f85a9f671ad92e595b98b\nparent 927586990eb9bc8403a3831247847bdd3bf60423\nauthor MarcoFalke <falke.marco@gmail.com> 1633433664 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1633701290 +0200\n\ndoc: Fixup ToIntegral docs\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad55e79ca18a5894a8da6db6309c323eecbb178",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad55e79ca18a5894a8da6db6309c323eecbb178",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad55e79ca18a5894a8da6db6309c323eecbb178/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "927586990eb9bc8403a3831247847bdd3bf60423",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/927586990eb9bc8403a3831247847bdd3bf60423",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/927586990eb9bc8403a3831247847bdd3bf60423"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "eedb5ec2f860e7e5c1ad734f296ffbce0d07f68e",
        "filename": "src/util/strencodings.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad55e79ca18a5894a8da6db6309c323eecbb178/src/util/strencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad55e79ca18a5894a8da6db6309c323eecbb178/src/util/strencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.h?ref=fad55e79ca18a5894a8da6db6309c323eecbb178",
        "patch": "@@ -72,7 +72,7 @@ void SplitHostPort(std::string in, uint16_t& portOut, std::string& hostOut);\n \n // LocaleIndependentAtoi is provided for backwards compatibility reasons.\n //\n-// New code should use the ParseInt64/ParseUInt64/ParseInt32/ParseUInt32 functions\n+// New code should use ToIntegral or the ParseInt* functions\n // which provide parse error feedback.\n //\n // The goal of LocaleIndependentAtoi is to replicate the exact defined behaviour\n@@ -125,7 +125,7 @@ constexpr inline bool IsSpace(char c) noexcept {\n /**\n  * Convert string to integral type T. Leading whitespace, a leading +, or any\n  * trailing character fail the parsing. The required format expressed as regex\n- * is `-?[0-9]+`.\n+ * is `-?[0-9]+`. The minus sign is only permitted for signed integer types.\n  *\n  * @returns std::nullopt if the entire string could not be parsed, or if the\n  *   parsed value is not in the range representable by the type T."
      },
      {
        "sha": "4a3eefa74c3cfb0e05f0b5ebd9511da349ed7d5e",
        "filename": "test/lint/lint-locale-dependence.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad55e79ca18a5894a8da6db6309c323eecbb178/test/lint/lint-locale-dependence.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad55e79ca18a5894a8da6db6309c323eecbb178/test/lint/lint-locale-dependence.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-locale-dependence.sh?ref=fad55e79ca18a5894a8da6db6309c323eecbb178",
        "patch": "@@ -38,7 +38,7 @@ export LC_ALL=C\n # https://stackoverflow.com/a/34878283 for more details.\n \n # TODO: Reduce KNOWN_VIOLATIONS by replacing uses of locale dependent stoul/strtol with locale\n-#       independent ToIntegral<T>(...).\n+#       independent ToIntegral<T>(...) or the ParseInt*() functions.\n # TODO: Reduce KNOWN_VIOLATIONS by replacing uses of locale dependent snprintf with strprintf.\n KNOWN_VIOLATIONS=(\n     \"src/bitcoin-tx.cpp.*stoul\""
      }
    ]
  },
  {
    "sha": "fa03dec7e98bdda8aa596ef7943cf0a8d0bcb127",
    "node_id": "C_kwDOABII59oAKGZhMDNkZWM3ZTk4YmRkYThhYTU5NmVmNzk0M2NmMGE4ZDBiY2IxMjc",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-08T13:39:46Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-08T13:55:27Z"
      },
      "message": "refactor: Use C++11 range based for loop in ParseScript",
      "tree": {
        "sha": "2b146cd5b928e183832812fac4cc636e76a80ea6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b146cd5b928e183832812fac4cc636e76a80ea6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa03dec7e98bdda8aa596ef7943cf0a8d0bcb127",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUh0Ggv7B0foNcaDBmE2+fsNkV4G89hJmD3sOPqyuWvZ79glBD5jr83hseabnTRr\nyxZYo962yHUNE1yKdXWgJzOZ5qAGi7MZwA0fmCDWXf290ah4LWySzrhOu3OJYi+q\n/OBEh6Av9yUoaUS+hpmiyH3ANTJ2NL3md7709x/Lmbs0Sl+l88Qx/dEFPuu9++Re\nark90P2h+saYfrVoceQiLR5H6gCkzJ9Onk6W7uhOKKInMe85velLk2GyBchgo1z+\nSWj3cBoyobp/0RJhuYLSRqJvGpu8q7CAAW3AnLBbLFkKETsd7z7leLlDGu5MdVGZ\nfppBic1AU1/KdC1JGTXVKwqqzxBv1mTMK6Wzeo624pfpQZR1WwN0A9/s7nyokhdC\nhQKjVJzcEg1umvZdd9XTXZ9GO8tPrOAyRMWE1z6yu4UGGwZz+YyvCq77NzBQI7nc\nbU8y0C7i2Qe81IBINcYvYqlTaEJO+VSwpnG04vg74VnJejHwPBe+p0t/Aa6um8q/\nSEf/I7YK\n=ZU7H\n-----END PGP SIGNATURE-----",
        "payload": "tree 2b146cd5b928e183832812fac4cc636e76a80ea6\nparent fad55e79ca18a5894a8da6db6309c323eecbb178\nauthor MarcoFalke <falke.marco@gmail.com> 1633700386 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1633701327 +0200\n\nrefactor: Use C++11 range based for loop in ParseScript\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa03dec7e98bdda8aa596ef7943cf0a8d0bcb127",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa03dec7e98bdda8aa596ef7943cf0a8d0bcb127",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa03dec7e98bdda8aa596ef7943cf0a8d0bcb127/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fad55e79ca18a5894a8da6db6309c323eecbb178",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad55e79ca18a5894a8da6db6309c323eecbb178",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fad55e79ca18a5894a8da6db6309c323eecbb178"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "5effd491515a0fd23938d24732d10a34d1c405d1",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa03dec7e98bdda8aa596ef7943cf0a8d0bcb127/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa03dec7e98bdda8aa596ef7943cf0a8d0bcb127/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=fa03dec7e98bdda8aa596ef7943cf0a8d0bcb127",
        "patch": "@@ -59,17 +59,17 @@ CScript ParseScript(const std::string& s)\n     std::vector<std::string> words;\n     boost::algorithm::split(words, s, boost::algorithm::is_any_of(\" \\t\\n\"), boost::algorithm::token_compress_on);\n \n-    for (std::vector<std::string>::const_iterator w = words.begin(); w != words.end(); ++w)\n+    for (const std::string& w : words)\n     {\n-        if (w->empty())\n+        if (w.empty())\n         {\n             // Empty string, ignore. (boost::split given '' will return one word)\n         }\n-        else if (std::all_of(w->begin(), w->end(), ::IsDigit) ||\n-            (w->front() == '-' && w->size() > 1 && std::all_of(w->begin()+1, w->end(), ::IsDigit)))\n+        else if (std::all_of(w.begin(), w.end(), ::IsDigit) ||\n+            (w.front() == '-' && w.size() > 1 && std::all_of(w.begin()+1, w.end(), ::IsDigit)))\n         {\n             // Number\n-            int64_t n = LocaleIndependentAtoi<int64_t>(*w);\n+            int64_t n = LocaleIndependentAtoi<int64_t>(w);\n \n             //limit the range of numbers ParseScript accepts in decimal\n             //since numbers outside -0xFFFFFFFF...0xFFFFFFFF are illegal in scripts\n@@ -80,23 +80,23 @@ CScript ParseScript(const std::string& s)\n \n             result << n;\n         }\n-        else if (w->substr(0,2) == \"0x\" && w->size() > 2 && IsHex(std::string(w->begin()+2, w->end())))\n+        else if (w.substr(0,2) == \"0x\" && w.size() > 2 && IsHex(std::string(w.begin()+2, w.end())))\n         {\n             // Raw hex data, inserted NOT pushed onto stack:\n-            std::vector<unsigned char> raw = ParseHex(std::string(w->begin()+2, w->end()));\n+            std::vector<unsigned char> raw = ParseHex(std::string(w.begin()+2, w.end()));\n             result.insert(result.end(), raw.begin(), raw.end());\n         }\n-        else if (w->size() >= 2 && w->front() == '\\'' && w->back() == '\\'')\n+        else if (w.size() >= 2 && w.front() == '\\'' && w.back() == '\\'')\n         {\n             // Single-quoted string, pushed as data. NOTE: this is poor-man's\n             // parsing, spaces/tabs/newlines in single-quoted strings won't work.\n-            std::vector<unsigned char> value(w->begin()+1, w->end()-1);\n+            std::vector<unsigned char> value(w.begin()+1, w.end()-1);\n             result << value;\n         }\n         else\n         {\n             // opcode, e.g. OP_ADD or ADD:\n-            result << ParseOpCode(*w);\n+            result << ParseOpCode(w);\n         }\n     }\n "
      }
    ]
  },
  {
    "sha": "fa053c0019bc8b2174c485f4885f894f2b5de472",
    "node_id": "C_kwDOABII59oAKGZhMDUzYzAwMTliYzhiMjE3NGM0ODVmNDg4NWY4OTRmMmI1ZGU0NzI",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-08T13:39:19Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-08T13:55:48Z"
      },
      "message": "style: Fix whitespace in Parse* functions",
      "tree": {
        "sha": "7c959a590ed2360a203a3b72e45581e49cd1535c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c959a590ed2360a203a3b72e45581e49cd1535c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa053c0019bc8b2174c485f4885f894f2b5de472",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjMcwwAsmGLz457mIrzk7AG0kMhsvvLo5WfcZ0/FAp64pqMiVtEwI5x9cC+RDuC\ng7l3Z4bZMZZv85JKKmZVBUOymN88pWV+hG2mO+GQKgzBdMyvxLUgo31I2InTJono\n4MOsRlui9ivi9gKHibimXBSr+9ihOo5HAPE+Fp1+2ljZaWEdEtwJhUQigXH4pIsg\nyP8OEbdzfUKL/rIevAEGxn7mXfq+ve4CxXPNXiWyENz4f6ZPqQMdwNIHiNAETpbx\nA5jz4fk3XrDAaoYehtyMQc6d7wpFpMZ0uRb3GQXzRy52Am5x+j2cfbfLCR2f8He5\nUL/YteNctgSGbt6oRDMShzyX6BjIY4qQKth+ubvFttZHGrTZuIePdiwhknhQ39iV\nA2DDwzOiI4GobtgppQxI7sOINiwfmHKOnBQweG0yzDo9fJnENgPGmFg/iPoTAqNM\nGAqJ1SIDUALevWG3zI4H7m3nNFzK15jYSkSyjFaEHE7RKWpDQy9SbWNGFOdXxjD0\nQVIUXi0P\n=8/Ue\n-----END PGP SIGNATURE-----",
        "payload": "tree 7c959a590ed2360a203a3b72e45581e49cd1535c\nparent fa03dec7e98bdda8aa596ef7943cf0a8d0bcb127\nauthor MarcoFalke <falke.marco@gmail.com> 1633700359 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1633701348 +0200\n\nstyle: Fix whitespace in Parse* functions\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa053c0019bc8b2174c485f4885f894f2b5de472",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa053c0019bc8b2174c485f4885f894f2b5de472",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa053c0019bc8b2174c485f4885f894f2b5de472/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa03dec7e98bdda8aa596ef7943cf0a8d0bcb127",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa03dec7e98bdda8aa596ef7943cf0a8d0bcb127",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa03dec7e98bdda8aa596ef7943cf0a8d0bcb127"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 18,
      "deletions": 27
    },
    "files": [
      {
        "sha": "3bbecbf52bdc8d3416c03cc6b767c2a962316a3c",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 27,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa053c0019bc8b2174c485f4885f894f2b5de472/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa053c0019bc8b2174c485f4885f894f2b5de472/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=fa053c0019bc8b2174c485f4885f894f2b5de472",
        "patch": "@@ -26,20 +26,20 @@ opcodetype ParseOpCode(const std::string& s)\n {\n     static std::map<std::string, opcodetype> mapOpNames;\n \n-    if (mapOpNames.empty())\n-    {\n-        for (unsigned int op = 0; op <= MAX_OPCODE; op++)\n-        {\n+    if (mapOpNames.empty()) {\n+        for (unsigned int op = 0; op <= MAX_OPCODE; op++) {\n             // Allow OP_RESERVED to get into mapOpNames\n-            if (op < OP_NOP && op != OP_RESERVED)\n+            if (op < OP_NOP && op != OP_RESERVED) {\n                 continue;\n+            }\n \n             std::string strName = GetOpName(static_cast<opcodetype>(op));\n-            if (strName == \"OP_UNKNOWN\")\n+            if (strName == \"OP_UNKNOWN\") {\n                 continue;\n+            }\n             mapOpNames[strName] = static_cast<opcodetype>(op);\n             // Convenience: OP_ADD and just ADD are both recognized:\n-            if (strName.compare(0, 3, \"OP_\") == 0) {  // strName starts with \"OP_\"\n+            if (strName.compare(0, 3, \"OP_\") == 0) { // strName starts with \"OP_\"\n                 mapOpNames[strName.substr(3)] = static_cast<opcodetype>(op);\n             }\n         }\n@@ -59,42 +59,33 @@ CScript ParseScript(const std::string& s)\n     std::vector<std::string> words;\n     boost::algorithm::split(words, s, boost::algorithm::is_any_of(\" \\t\\n\"), boost::algorithm::token_compress_on);\n \n-    for (const std::string& w : words)\n-    {\n-        if (w.empty())\n-        {\n+    for (const std::string& w : words) {\n+        if (w.empty()) {\n             // Empty string, ignore. (boost::split given '' will return one word)\n-        }\n-        else if (std::all_of(w.begin(), w.end(), ::IsDigit) ||\n-            (w.front() == '-' && w.size() > 1 && std::all_of(w.begin()+1, w.end(), ::IsDigit)))\n+        } else if (std::all_of(w.begin(), w.end(), ::IsDigit) ||\n+                   (w.front() == '-' && w.size() > 1 && std::all_of(w.begin() + 1, w.end(), ::IsDigit)))\n         {\n             // Number\n             int64_t n = LocaleIndependentAtoi<int64_t>(w);\n \n-            //limit the range of numbers ParseScript accepts in decimal\n-            //since numbers outside -0xFFFFFFFF...0xFFFFFFFF are illegal in scripts\n+            // limit the range of numbers ParseScript accepts in decimal\n+            // since numbers outside -0xFFFFFFFF...0xFFFFFFFF are illegal in scripts\n             if (n > int64_t{0xffffffff} || n < -1 * int64_t{0xffffffff}) {\n                 throw std::runtime_error(\"script parse error: decimal numeric value only allowed in the \"\n                                          \"range -0xFFFFFFFF...0xFFFFFFFF\");\n             }\n \n             result << n;\n-        }\n-        else if (w.substr(0,2) == \"0x\" && w.size() > 2 && IsHex(std::string(w.begin()+2, w.end())))\n-        {\n+        } else if (w.substr(0, 2) == \"0x\" && w.size() > 2 && IsHex(std::string(w.begin() + 2, w.end()))) {\n             // Raw hex data, inserted NOT pushed onto stack:\n-            std::vector<unsigned char> raw = ParseHex(std::string(w.begin()+2, w.end()));\n+            std::vector<unsigned char> raw = ParseHex(std::string(w.begin() + 2, w.end()));\n             result.insert(result.end(), raw.begin(), raw.end());\n-        }\n-        else if (w.size() >= 2 && w.front() == '\\'' && w.back() == '\\'')\n-        {\n+        } else if (w.size() >= 2 && w.front() == '\\'' && w.back() == '\\'') {\n             // Single-quoted string, pushed as data. NOTE: this is poor-man's\n             // parsing, spaces/tabs/newlines in single-quoted strings won't work.\n-            std::vector<unsigned char> value(w.begin()+1, w.end()-1);\n+            std::vector<unsigned char> value(w.begin() + 1, w.end() - 1);\n             result << value;\n-        }\n-        else\n-        {\n+        } else {\n             // opcode, e.g. OP_ADD or ADD:\n             result << ParseOpCode(w);\n         }"
      }
    ]
  },
  {
    "sha": "fa43e7c2d9dc5e2df70acd2019bdd24023c1d333",
    "node_id": "C_kwDOABII59oAKGZhNDNlN2MyZDlkYzVlMmRmNzBhY2QyMDE5YmRkMjQwMjNjMWQzMzM",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-08T13:51:55Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-10-11T07:17:28Z"
      },
      "message": "bitcoin-tx: Avoid treating overflow as OP_0",
      "tree": {
        "sha": "e6ca1f9c45b419fa04392566b88c38fddac384e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6ca1f9c45b419fa04392566b88c38fddac384e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa43e7c2d9dc5e2df70acd2019bdd24023c1d333",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiNpQwAvDAStZeeFwOGpeSjfBGKHfNUuhzeOae4kZZI5isrxd3GkNUyYqG/Ee3d\nqUGnMr3Rtk/Kx6c/7+Jg6OuTLbmQ9gC//h5fE37Sneiw5kNLyynGPWXKcQ/0aLVs\ncwOFrrlcWVx6HthgIKQtB3FgSCFmus+wIl5eOeoBMTfpZ7OzM4nD/G9LoO4o6pLZ\nI3eyjP3gh6HT1sk/L92RujHrhPU9CUFAhQX0CW8NwfxqdHwCosYNHU8tjLH6suGj\nht+DCajhHgmteGSukebTJXFPqsXptIw+8lulRBf0s9NR2aHcWAsphZPXkPk8ZHay\nzhjNaJTHCYaTF4dN/215j+8/pjEG3hS8JrqdUCP/Z0gVf4FfHsb07RiuuxG74TaF\nXV8zK2eRy56AFZjIRPN1pro2pXxQNR+e1GU6bFjaP7XwjrgXWqUMnej0xW/Hk0dc\np2J9ED7DWnsfCKSGZeOfTaydvBCDk1o5V9nPYdik1dntAWBG+hhXFhx3cKfIaMnY\ntZHwN+kr\n=4OKd\n-----END PGP SIGNATURE-----",
        "payload": "tree e6ca1f9c45b419fa04392566b88c38fddac384e0\nparent fa053c0019bc8b2174c485f4885f894f2b5de472\nauthor MarcoFalke <falke.marco@gmail.com> 1633701115 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1633936648 +0200\n\nbitcoin-tx: Avoid treating overflow as OP_0\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa43e7c2d9dc5e2df70acd2019bdd24023c1d333",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa43e7c2d9dc5e2df70acd2019bdd24023c1d333",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa43e7c2d9dc5e2df70acd2019bdd24023c1d333/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa053c0019bc8b2174c485f4885f894f2b5de472",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa053c0019bc8b2174c485f4885f894f2b5de472",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa053c0019bc8b2174c485f4885f894f2b5de472"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 10,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2149b428d265e818ac1e5edf34328d662786b4b6",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa43e7c2d9dc5e2df70acd2019bdd24023c1d333/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa43e7c2d9dc5e2df70acd2019bdd24023c1d333/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=fa43e7c2d9dc5e2df70acd2019bdd24023c1d333",
        "patch": "@@ -66,16 +66,16 @@ CScript ParseScript(const std::string& s)\n                    (w.front() == '-' && w.size() > 1 && std::all_of(w.begin() + 1, w.end(), ::IsDigit)))\n         {\n             // Number\n-            int64_t n = LocaleIndependentAtoi<int64_t>(w);\n+            const auto num{ToIntegral<int64_t>(w)};\n \n             // limit the range of numbers ParseScript accepts in decimal\n             // since numbers outside -0xFFFFFFFF...0xFFFFFFFF are illegal in scripts\n-            if (n > int64_t{0xffffffff} || n < -1 * int64_t{0xffffffff}) {\n+            if (!num.has_value() || num > int64_t{0xffffffff} || num < -1 * int64_t{0xffffffff}) {\n                 throw std::runtime_error(\"script parse error: decimal numeric value only allowed in the \"\n                                          \"range -0xFFFFFFFF...0xFFFFFFFF\");\n             }\n \n-            result << n;\n+            result << num.value();\n         } else if (w.substr(0, 2) == \"0x\" && w.size() > 2 && IsHex(std::string(w.begin() + 2, w.end()))) {\n             // Raw hex data, inserted NOT pushed onto stack:\n             std::vector<unsigned char> raw = ParseHex(std::string(w.begin() + 2, w.end()));"
      },
      {
        "sha": "004c1a9a84fa4845b824782a0aa18140e25acf9a",
        "filename": "src/test/script_parse_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa43e7c2d9dc5e2df70acd2019bdd24023c1d333/src/test/script_parse_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa43e7c2d9dc5e2df70acd2019bdd24023c1d333/src/test/script_parse_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_parse_tests.cpp?ref=fa43e7c2d9dc5e2df70acd2019bdd24023c1d333",
        "patch": "@@ -38,7 +38,6 @@ BOOST_AUTO_TEST_CASE(parse_script)\n         {\"'17'\", \"023137\"},\n         {\"ELSE\", \"67\"},\n         {\"NOP10\", \"b9\"},\n-        {\"11111111111111111111\", \"00\"},\n     };\n     std::string all_in;\n     std::string all_out;\n@@ -49,6 +48,7 @@ BOOST_AUTO_TEST_CASE(parse_script)\n     }\n     BOOST_CHECK_EQUAL(HexStr(ParseScript(all_in)), all_out);\n \n+    BOOST_CHECK_EXCEPTION(ParseScript(\"11111111111111111111\"), std::runtime_error, HasReason(\"script parse error: decimal numeric value only allowed in the range -0xFFFFFFFF...0xFFFFFFFF\"));\n     BOOST_CHECK_EXCEPTION(ParseScript(\"11111111111\"), std::runtime_error, HasReason(\"script parse error: decimal numeric value only allowed in the range -0xFFFFFFFF...0xFFFFFFFF\"));\n     BOOST_CHECK_EXCEPTION(ParseScript(\"OP_CHECKSIGADD\"), std::runtime_error, HasReason(\"script parse error: unknown opcode\"));\n }"
      },
      {
        "sha": "20684f0f76c4fbe5c42b9a138f94dd4d72335e34",
        "filename": "test/util/data/bitcoin-util-test.json",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa43e7c2d9dc5e2df70acd2019bdd24023c1d333/test/util/data/bitcoin-util-test.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa43e7c2d9dc5e2df70acd2019bdd24023c1d333/test/util/data/bitcoin-util-test.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/bitcoin-util-test.json?ref=fa43e7c2d9dc5e2df70acd2019bdd24023c1d333",
        "patch": "@@ -294,6 +294,12 @@\n     \"output_cmp\": \"txcreatescript4.json\",\n     \"description\": \"Create a new transaction with a single output script (OP_DROP) in a P2SH, wrapped in a P2SH (output as json)\"\n   },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\": [\"-create\", \"outscript=0:999999999999999999999999999999\"],\n+    \"return_code\": 1,\n+    \"error_txt\": \"error: script parse error: decimal numeric value only allowed in the range -0xFFFFFFFF...0xFFFFFFFF\",\n+    \"description\": \"Try to parse an output script with a decimal number above the allowed range\"\n+  },\n   { \"exec\": \"./bitcoin-tx\",\n     \"args\": [\"-create\", \"outscript=0:9999999999\"],\n     \"return_code\": 1,"
      }
    ]
  }
]