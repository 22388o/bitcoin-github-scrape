jonatack,2020-05-12 22:36:52,"The code changes look good. I need to verify the concept more when it's not late, e.g. that the final block hash will be the highest and the variation/savings in bandwidth.",https://github.com/bitcoin/bitcoin/pull/18962#issuecomment-627635800,627635800,
mzumsande,2020-05-12 23:37:53,"Can the ""waste of bandwidth scenario"" you describe ever occur? \nMy understanding was that it is currently taken care of by the send side by only including the tip in the INV in `SendMessages()`, so that there wouldn't be multiple block hashes within an INV.",https://github.com/bitcoin/bitcoin/pull/18962#issuecomment-627656794,627656794,
jnewbery,2020-05-14 02:59:25,"> My understanding was that it is currently taken care of by the send side by only including the tip in the INV in SendMessages()\n\nYou're right that current Bitcoin Core software should only send a single block in the INV message. The point about wasting bandwidth is more for other software that may send us many blocks in a single INV, which would cause us to reply with multiple getheaders.",https://github.com/bitcoin/bitcoin/pull/18962#issuecomment-628356756,628356756,
sipa,2020-05-14 03:03:26,utACK 746736639e6d05acdb85c866d4c605c947d4c500,https://github.com/bitcoin/bitcoin/pull/18962#issuecomment-628357927,628357927,
mzumsande,2020-05-14 14:19:47,"utACK 746736639e6d05acdb85c866d4c605c947d4c500 as per ajtowns' reasoning.\n\nedit by laanwj: deleted a @",https://github.com/bitcoin/bitcoin/pull/18962#issuecomment-628667780,628667780,
amitiuttarwar,2020-06-06 21:46:40,post merge ACK 7467366,https://github.com/bitcoin/bitcoin/pull/18962#issuecomment-640122265,640122265,
