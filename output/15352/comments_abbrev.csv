promag,2019-02-06T13:30:31Z,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/15352#issuecomment-461023318,461023318,
practicalswift,2019-03-27T15:01:25Z,"Updated in light of @laanwj and @MarcoFalke's feedback. Thanks!\n\nPlease re-review :-)",https://github.com/bitcoin/bitcoin/pull/15352#issuecomment-477196270,477196270,
practicalswift,2019-03-29T09:10:52Z,"Please review updated version.\n\nI found the root cause to the nine hundred (!) lines of debug outputted when running `test_bitcoin` compiled from current `master`.\n\nTurns out we are running `noui_connect()` once per test (more specifically: we call `noui_connect()` in the ctor of `BasicTestingSetup`) which means that we end up with quite a few logging functions connected to the signals :-)",https://github.com/bitcoin/bitcoin/pull/15352#issuecomment-477924300,477924300,
MarcoFalke,2019-03-29T15:43:20Z,utACK 0aef39d0678ec2f26633028d44eea0ba0087e7c0,https://github.com/bitcoin/bitcoin/pull/15352#issuecomment-478046272,478046272,
DrahtBot,2019-04-16T17:14:50Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/15352#issuecomment-483764322,483764322,
MarcoFalke,2019-04-16T18:19:48Z,Merged via `git`'s auto-merge,https://github.com/bitcoin/bitcoin/pull/15352#issuecomment-483787679,483787679,
laanwj,2019-02-12T13:15:09Z,wouldn't it be better to not connect this signal at all?,https://github.com/bitcoin/bitcoin/pull/15352#discussion_r255946059,255946059,src/noui.cpp
practicalswift,2019-02-15T09:25:28Z,I'm likely missing something but if skipping the `uiInterface.ThreadSafeMessageBox_connect` call then `boost::signals2::no_slots_error` will get thrown? What am I doing wrong? :-),https://github.com/bitcoin/bitcoin/pull/15352#discussion_r257158724,257158724,src/noui.cpp
MarcoFalke,2019-03-27T12:39:12Z,Couldn't you connect a `[](){return true;}`?,https://github.com/bitcoin/bitcoin/pull/15352#discussion_r269539490,269539490,src/noui.cpp
MarcoFalke,2019-03-27T15:50:00Z,This should probably only be somewhere in `src/test`,https://github.com/bitcoin/bitcoin/pull/15352#discussion_r269634963,269634963,src/noui.h
practicalswift,2019-03-27T16:39:14Z,Good point! Fixed. Please re-review!,https://github.com/bitcoin/bitcoin/pull/15352#discussion_r269659669,269659669,src/noui.h
MarcoFalke,2019-03-27T17:30:37Z,No need for extern and I meant to move the whole function body. There shouldn't be need to modify the binary for fixing up tests.,https://github.com/bitcoin/bitcoin/pull/15352#discussion_r269684023,269684023,src/test/test_bitcoin.cpp
practicalswift,2019-03-27T19:57:36Z,Good point. Now touching only `src/test/` and `src/wallet/test/`. Please re-re-review :-),https://github.com/bitcoin/bitcoin/pull/15352#discussion_r269743482,269743482,src/test/test_bitcoin.cpp
MarcoFalke,2019-03-27T21:21:06Z,"Could you please explain the control flow where this check fails, but the `BOOST_CHECK(0);` above passes?",https://github.com/bitcoin/bitcoin/pull/15352#discussion_r269775578,269775578,src/test/blockencodings_tests.cpp
MarcoFalke,2019-03-27T21:23:53Z,Same here,https://github.com/bitcoin/bitcoin/pull/15352#discussion_r269776531,269776531,src/test/util_tests.cpp
practicalswift,2019-03-27T22:46:55Z,"There shouldn't exist such a case: they are meant to be equivalent.\n\nIIRC the re-formulation was needed to avoid having the test runner warn that the test case succeeded without executing any succeeding checks (or something along those lines).\n\nThe re-formulated version made sure that a succeeding check (`BOOST_CHECK(exception_thrown); `) was executed as part of the test case.\n\nHowever",https://github.com/bitcoin/bitcoin/pull/15352#discussion_r269800480,269800480,src/test/blockencodings_tests.cpp
MarcoFalke,2019-03-28T12:41:26Z,"Thinking more about this, could this only be disabled for specific test cases? Otherwise writing tests will get a lot harder when errors and warnings are no longer printed.",https://github.com/bitcoin/bitcoin/pull/15352#discussion_r269980898,269980898,src/test/test_bitcoin.cpp
practicalswift,2019-03-29T08:39:42Z,"After some additional testing I was able to reproduce the warnings that these formulations were meant to silence:\n\n```\n$ src/test/test_bitcoin --log_level=test_suite 2>&1 | grep ""did not check any assertions""\nTest case blockencodings_tests/TransactionsRequestDeserializationOverflowTest did not check any assertions\nTest case util_tests/util_criticalsection did not check any assertions\n`",https://github.com/bitcoin/bitcoin/pull/15352#discussion_r270318134,270318134,src/test/blockencodings_tests.cpp
practicalswift,2019-03-29T09:07:03Z,Good point. Pushed updated version. No longer trying to suppress any output. The spamming problem was solved by running `noui_connect()` only once :-),https://github.com/bitcoin/bitcoin/pull/15352#discussion_r270326418,270326418,src/test/test_bitcoin.cpp
laanwj,2019-03-29T09:24:04Z,"> Otherwise writing tests will get a lot harder when errors and warnings are no longer printed.\n\nYes, thanks, good pointâ€”in my experience errors being mysteriously swallowed is awful for being able to diagnose problems when they happen.",https://github.com/bitcoin/bitcoin/pull/15352#discussion_r270331663,270331663,src/test/test_bitcoin.cpp
MarcoFalke,2019-03-29T14:05:14Z,"Why would you need to keep a variable for this?\n\nWouldn't `BOOST_CHECK(true); // Explain why this is needed` be sufficient?",https://github.com/bitcoin/bitcoin/pull/15352#discussion_r270421661,270421661,src/test/blockencodings_tests.cpp
practicalswift,2019-03-29T14:29:26Z,"Yes, absolutely. Reformulated to an equivalent version not introducing any new variables. Please re-review :-)",https://github.com/bitcoin/bitcoin/pull/15352#discussion_r270433218,270433218,src/test/blockencodings_tests.cpp
