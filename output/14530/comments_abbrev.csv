fanquake,2018-10-20T13:18:44Z,How does this compare/clash with #14502?,https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-431581381,431581381,
MarcoFalke,2018-10-20T13:36:37Z,@fanquake See https://github.com/bitcoin/bitcoin/pull/14502#issuecomment-431582466,https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-431582728,431582728,
DrahtBot,2018-10-20T14:19:35Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14491](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14491.html) (Allow descriptor imports with importmulti b",https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-431585882,431585882,
karelbilek,2018-10-23T12:51:52Z,"Is the plan to write down all objects in the first argument line like this?\n\nFor example, fundrawtransaction has a large object; is the plan to use that instead of ""options"" at the first line?\n\nhttps://bitcoincore.org/en/doc/0.17.0/rpc/rawtransactions/fundrawtransaction/\n\nIf not, I would suggest to use an option to RPCArg, for example ""m_writeFirstAsObject""; it could still then be prin",https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-432233672,432233672,
karelbilek,2018-10-23T13:04:19Z,"Also the PR changes the RPC from\n\n`""scriptPubKey"":""hex""` or `""txid"":""id""` or `""amount"": value`\n\nto\n\n`""scriptPubKey"":""str""` or `""txid"":""str""` or `""amount"": n`\n\nIs that intentional? I think it decreases readability... `""scriptPubKey"":""hex""` tells me not just ""this needs to be a string"" but also ""this needs to be a hex string"".\n\n(On some places in RPC, bitcoin core uses notation `",https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-432237888,432237888,
karelbilek,2018-10-23T13:18:42Z,"There will also be support for ""option object"" - that is, something can be two different things - for example as in `walletcreatefundedpsbt` object in `outputs` - can be either `{""address"":amount}` or `{""data"":""hex""}`\n\n...that all leads me to think this shouldn't use ""univalue"" types but its own types",https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-432242858,432242858,
MarcoFalke,2018-10-24T00:00:01Z,"Thanks, addressed your feedback by adding an `enum class` with all the (sub)types I could find.",https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-432463668,432463668,
karelbilek,2018-10-24T09:10:25Z,"I am thinking, how to address this pattern (from sendmany)\n\n```\n2. ""amounts""             (string, required) A json object with addresses and amounts\n    {\n      ""address"":amount   (numeric or string) The bitcoin address is the key, the numeric amount (can be string) in BTC is the value\n      ,...\n    }\n```\n\nIt looks like `""address""` is the string key in json object, but actuall",https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-432577759,432577759,
MarcoFalke,2018-10-24T10:35:45Z,Added a type (OBJ_USER_KEYS) where the user can set multiple keys (e.g. addresses).,https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-432604748,432604748,
karelbilek,2018-10-24T12:27:52Z,"I have played with your code and added functions for printing the whole argument table and got it working.\n\nSee this branch (I have just added new commits, no rebase)\n\nhttps://github.com/karel-3d/bitcoin/commits/Mf1810-rpcHelpMan\n\nI have moved the same functions as you did to this format. It works! But - I am not sure about the readability of the code and about the resulting RPC help. ",https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-432634733,432634733,
MarcoFalke,2018-10-24T12:42:12Z,Thanks for hacking on this! Transforming all of the rpc help texts can be done at a later point to avoid merge conflicts with this pull request for now. As soon as this one is merged I (or anyone else) can create these refactoring pull requests at low rate to not burden reviewers.,https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-432639151,432639151,
karelbilek,2018-10-24T13:40:16Z,"I'm not sure if it's a better idea to first merge this PR as-is and keep it only for generating the first arg line, or make it usable for the whole argument section even in this PR before merging (as in my repo) to better prove ""usefulness"".",https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-432660240,432660240,
MarcoFalke,2018-11-06T16:24:12Z,Rebased,https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-436314700,436314700,
MarcoFalke,2018-11-09T18:03:42Z,"Note that the generated doc can be easily compared against the previous one by running this weird hack:\n\n<details><summary>Patch</summary>\n\n```diff\ndiff --git a/src/rpc/rawtransaction.cpp b/src/rpc/rawtransaction.cpp\nindex f619857da1..188b2795c2 100644\n--- a/src/rpc/rawtransaction.cpp\n+++ b/src/rpc/rawtransaction.cpp\n@@ -1782,7 +1782,6 @@ static const CRPCCommand commands[] =\n ",https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-437443896,437443896,
laanwj,2018-11-12T12:54:30Z,"Generated help looks fine to me; this also keeps the documentation with the RPC calls they document instead of moving it somewhere else, which is good.\nutACK",https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-437869415,437869415,
MarcoFalke,2018-11-12T22:32:57Z,"> Curious how many PRs were you thinking of, and how would they be divided up.\n\nThis is mostly refactoring, so I wouldn't want to create a pull request that takes more than, say, 30 minutes to review.\n\nLogically, I'd like to split them into auto-generating the summary line (1), description (2) and extended documentation about input and output variables (3).\n\nThis is the first part of (",https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-438051688,438051688,
karelbilek,2018-11-13T16:36:15Z,I implemented (2) in the branch I linked above; but it still needs some work and cleanup,https://github.com/bitcoin/bitcoin/pull/14530#issuecomment-438339998,438339998,
promag,2018-11-12T13:45:16Z,Can remove `RPCArg` throughout?,https://github.com/bitcoin/bitcoin/pull/14530#discussion_r232661368,232661368,src/rpc/rawtransaction.cpp
MarcoFalke,2018-11-12T15:59:00Z,@promag Done and thx! That makes it look less verbose and probably easier to read the documentation straight from the cpp file.,https://github.com/bitcoin/bitcoin/pull/14530#discussion_r232713652,232713652,src/rpc/rawtransaction.cpp
