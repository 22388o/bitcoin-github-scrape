[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/195234142",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#issuecomment-195234142",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7656",
    "id": 195234142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIzNDE0Mg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T07:35:26Z",
    "updated_at": "2016-03-11T07:36:03Z",
    "author_association": "MEMBER",
    "body": "> For example, calling listunspents with my wallet results in 313ms in EncodeBase58 whereas before was 578ms.\n\nInteresting result. I was not aware anything was bottlenecked by base58 encoding.\nAs you've demonstrated a concrete performance improvement: concept ACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/195234142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/195238468",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#issuecomment-195238468",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7656",
    "id": 195238468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIzODQ2OA==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T07:47:23Z",
    "updated_at": "2016-03-11T07:47:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Indeed, thanks for the concrete result. Concept ack.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/195238468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/195262107",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#issuecomment-195262107",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7656",
    "id": 195262107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTI2MjEwNw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T08:49:52Z",
    "updated_at": "2016-03-11T08:49:52Z",
    "author_association": "MEMBER",
    "body": "Ping @luke-jr, I think it makes sense for you to review this because of libbase58\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/195262107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/195777335",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#issuecomment-195777335",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7656",
    "id": 195777335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTc3NzMzNQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-12T17:23:47Z",
    "updated_at": "2016-03-12T17:23:47Z",
    "author_association": "MEMBER",
    "body": "Untested ACK.\n\nThis should result in an asymptotic 2x speedup. I didn't expect that it would matter anywhere, but as it seems it does, great.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/195777335/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197457602",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#issuecomment-197457602",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7656",
    "id": 197457602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzQ1NzYwMg==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-16T17:54:00Z",
    "updated_at": "2016-03-16T17:54:00Z",
    "author_association": "MEMBER",
    "body": "Very nice, utACK besides nit.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197457602/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197635223",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#issuecomment-197635223",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7656",
    "id": 197635223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzYzNTIyMw==",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?u=034ef1433a0704d9c91b57b993009b0383d6b7c0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T01:20:38Z",
    "updated_at": "2016-03-17T01:20:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK 3252208\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/197635223/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/198304587",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#issuecomment-198304587",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7656",
    "id": 198304587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODMwNDU4Nw==",
    "user": {
      "login": "fanatid",
      "id": 2633065,
      "node_id": "MDQ6VXNlcjI2MzMwNjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2633065?u=15832599295cfd7f8975e74433238f7bd64afc5d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanatid",
      "html_url": "https://github.com/fanatid",
      "followers_url": "https://api.github.com/users/fanatid/followers",
      "following_url": "https://api.github.com/users/fanatid/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanatid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanatid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanatid/subscriptions",
      "organizations_url": "https://api.github.com/users/fanatid/orgs",
      "repos_url": "https://api.github.com/users/fanatid/repos",
      "events_url": "https://api.github.com/users/fanatid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanatid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T10:54:16Z",
    "updated_at": "2016-03-18T10:56:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/cryptocoinjs/base-x/blob/d33156e62ea435073e4b73640f433756124f89d8/src/basex.cc#L51\nanother base58 encoding implementation (it was attempt speed up base58 for node.js)\n@promag if you apply `.reserve` to `digits` I think it can be even faster than it is now.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/198304587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/198812054",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#issuecomment-198812054",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7656",
    "id": 198812054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODgxMjA1NA==",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-20T00:06:12Z",
    "updated_at": "2016-03-20T00:06:12Z",
    "author_association": "MEMBER",
    "body": "Concept ACK and (in-depth) utACK 3252208cb10be645bae415c90fb2ed8217838490\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/198812054/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55495527",
    "pull_request_review_id": null,
    "id": 55495527,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDk1NTI3",
    "diff_hunk": "@@ -68,26 +68,31 @@ std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n+    int length = 0;\n     while (pbegin != pend && *pbegin == 0) {\n         pbegin++;\n         zeroes++;\n     }\n     // Allocate enough space in big-endian base58 representation.\n-    std::vector<unsigned char> b58((pend - pbegin) * 138 / 100 + 1); // log(256) / log(58), rounded up.\n+    int size = (pend - pbegin) * 138 / 100 + 1;\n+    std::vector<unsigned char> b58(size); // log(256) / log(58), rounded up.",
    "path": "src/base58.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "original_commit_id": "56472eaef04fe4868b5949331b4928df5f602b0e",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: Shouldn't this comment go up one line?\n",
    "created_at": "2016-03-09T10:01:51Z",
    "updated_at": "2016-03-09T10:10:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r55495527",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55495527"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r55495527"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55495527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 78,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55496562",
    "pull_request_review_id": null,
    "id": 55496562,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDk2NTYy",
    "diff_hunk": "@@ -68,26 +68,31 @@ std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n+    int length = 0;\n     while (pbegin != pend && *pbegin == 0) {\n         pbegin++;\n         zeroes++;\n     }\n     // Allocate enough space in big-endian base58 representation.\n-    std::vector<unsigned char> b58((pend - pbegin) * 138 / 100 + 1); // log(256) / log(58), rounded up.\n+    int size = (pend - pbegin) * 138 / 100 + 1;\n+    std::vector<unsigned char> b58(size); // log(256) / log(58), rounded up.",
    "path": "src/base58.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "original_commit_id": "56472eaef04fe4868b5949331b4928df5f602b0e",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": ":+1:\n",
    "created_at": "2016-03-09T10:09:56Z",
    "updated_at": "2016-03-09T10:10:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r55496562",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55496562"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r55496562"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/55496562/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 78,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56383345",
    "pull_request_review_id": null,
    "id": 56383345,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzgzMzQ1",
    "diff_hunk": "@@ -68,26 +68,31 @@ std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n+    int length = 0;\n     while (pbegin != pend && *pbegin == 0) {\n         pbegin++;\n         zeroes++;\n     }\n     // Allocate enough space in big-endian base58 representation.\n-    std::vector<unsigned char> b58((pend - pbegin) * 138 / 100 + 1); // log(256) / log(58), rounded up.\n+    int size = (pend - pbegin) * 138 / 100 + 1; // log(256) / log(58), rounded up.\n+    std::vector<unsigned char> b58(size);\n     // Process the bytes.\n     while (pbegin != pend) {\n         int carry = *pbegin;\n+        int i = 0;\n         // Apply \"b58 = b58 * 256 + ch\".\n-        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); it != b58.rend(); it++) {\n+        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); (carry != 0 || i < length) && (it != b58.rend()); it++, i++) {\n             carry += 256 * (*it);\n             *it = carry % 58;\n             carry /= 58;\n         }\n+\n         assert(carry == 0);\n+        length = i;",
    "path": "src/base58.cpp",
    "position": 26,
    "original_position": 26,
    "commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "original_commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do you really need both `i` and `length`?\nIt seems you could simply `++length;` here. I see your `i < length` condition, but I don't see how can it possibly be ever true.\n",
    "created_at": "2016-03-16T17:53:27Z",
    "updated_at": "2016-03-16T17:55:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56383345",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56383345"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56383345"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56383345/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 91,
    "original_line": 91,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56476584",
    "pull_request_review_id": null,
    "id": 56476584,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDc2NTg0",
    "diff_hunk": "@@ -68,26 +68,31 @@ std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n+    int length = 0;\n     while (pbegin != pend && *pbegin == 0) {\n         pbegin++;\n         zeroes++;\n     }\n     // Allocate enough space in big-endian base58 representation.\n-    std::vector<unsigned char> b58((pend - pbegin) * 138 / 100 + 1); // log(256) / log(58), rounded up.\n+    int size = (pend - pbegin) * 138 / 100 + 1; // log(256) / log(58), rounded up.\n+    std::vector<unsigned char> b58(size);\n     // Process the bytes.\n     while (pbegin != pend) {\n         int carry = *pbegin;\n+        int i = 0;\n         // Apply \"b58 = b58 * 256 + ch\".\n-        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); it != b58.rend(); it++) {\n+        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); (carry != 0 || i < length) && (it != b58.rend()); it++, i++) {\n             carry += 256 * (*it);\n             *it = carry % 58;\n             carry /= 58;\n         }\n+\n         assert(carry == 0);\n+        length = i;",
    "path": "src/base58.cpp",
    "position": 26,
    "original_position": 26,
    "commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "original_commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "user": {
      "login": "fanatid",
      "id": 2633065,
      "node_id": "MDQ6VXNlcjI2MzMwNjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2633065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanatid",
      "html_url": "https://github.com/fanatid",
      "followers_url": "https://api.github.com/users/fanatid/followers",
      "following_url": "https://api.github.com/users/fanatid/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanatid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanatid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanatid/subscriptions",
      "organizations_url": "https://api.github.com/users/fanatid/orgs",
      "repos_url": "https://api.github.com/users/fanatid/repos",
      "events_url": "https://api.github.com/users/fanatid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanatid/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It isn't simply `++length`, it can be `length += 0|1|2`, but there is possible to remove `i`:\n`length = it - b58.begin()`\n",
    "created_at": "2016-03-17T09:36:08Z",
    "updated_at": "2016-03-17T09:36:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56476584",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56476584"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56476584"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56476584/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 91,
    "original_line": 91,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56476755",
    "pull_request_review_id": null,
    "id": 56476755,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDc2NzU1",
    "diff_hunk": "@@ -68,26 +68,31 @@ std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n+    int length = 0;\n     while (pbegin != pend && *pbegin == 0) {\n         pbegin++;\n         zeroes++;\n     }\n     // Allocate enough space in big-endian base58 representation.\n-    std::vector<unsigned char> b58((pend - pbegin) * 138 / 100 + 1); // log(256) / log(58), rounded up.\n+    int size = (pend - pbegin) * 138 / 100 + 1; // log(256) / log(58), rounded up.\n+    std::vector<unsigned char> b58(size);\n     // Process the bytes.\n     while (pbegin != pend) {\n         int carry = *pbegin;\n+        int i = 0;\n         // Apply \"b58 = b58 * 256 + ch\".\n-        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); it != b58.rend(); it++) {\n+        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); (carry != 0 || i < length) && (it != b58.rend()); it++, i++) {",
    "path": "src/base58.cpp",
    "position": 19,
    "original_position": 19,
    "commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "original_commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "user": {
      "login": "fanatid",
      "id": 2633065,
      "node_id": "MDQ6VXNlcjI2MzMwNjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2633065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanatid",
      "html_url": "https://github.com/fanatid",
      "followers_url": "https://api.github.com/users/fanatid/followers",
      "following_url": "https://api.github.com/users/fanatid/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanatid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanatid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanatid/subscriptions",
      "organizations_url": "https://api.github.com/users/fanatid/orgs",
      "repos_url": "https://api.github.com/users/fanatid/repos",
      "events_url": "https://api.github.com/users/fanatid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanatid/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Wouldn't `++it` faster than `it++`?\n",
    "created_at": "2016-03-17T09:37:00Z",
    "updated_at": "2016-03-17T09:37:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56476755",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56476755"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56476755"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56476755/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 84,
    "original_line": 84,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56478626",
    "pull_request_review_id": null,
    "id": 56478626,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDc4NjI2",
    "diff_hunk": "@@ -68,26 +68,31 @@ std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n+    int length = 0;\n     while (pbegin != pend && *pbegin == 0) {\n         pbegin++;\n         zeroes++;\n     }\n     // Allocate enough space in big-endian base58 representation.\n-    std::vector<unsigned char> b58((pend - pbegin) * 138 / 100 + 1); // log(256) / log(58), rounded up.\n+    int size = (pend - pbegin) * 138 / 100 + 1; // log(256) / log(58), rounded up.\n+    std::vector<unsigned char> b58(size);\n     // Process the bytes.\n     while (pbegin != pend) {\n         int carry = *pbegin;\n+        int i = 0;\n         // Apply \"b58 = b58 * 256 + ch\".\n-        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); it != b58.rend(); it++) {\n+        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); (carry != 0 || i < length) && (it != b58.rend()); it++, i++) {",
    "path": "src/base58.cpp",
    "position": 19,
    "original_position": 19,
    "commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "original_commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Presumably, yes: http://stackoverflow.com/a/35085/2084795\n",
    "created_at": "2016-03-17T09:52:08Z",
    "updated_at": "2016-03-17T09:52:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56478626",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56478626"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56478626"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56478626/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 84,
    "original_line": 84,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56489636",
    "pull_request_review_id": null,
    "id": 56489636,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDg5NjM2",
    "diff_hunk": "@@ -68,26 +68,31 @@ std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n+    int length = 0;\n     while (pbegin != pend && *pbegin == 0) {\n         pbegin++;\n         zeroes++;\n     }\n     // Allocate enough space in big-endian base58 representation.\n-    std::vector<unsigned char> b58((pend - pbegin) * 138 / 100 + 1); // log(256) / log(58), rounded up.\n+    int size = (pend - pbegin) * 138 / 100 + 1; // log(256) / log(58), rounded up.\n+    std::vector<unsigned char> b58(size);\n     // Process the bytes.\n     while (pbegin != pend) {\n         int carry = *pbegin;\n+        int i = 0;\n         // Apply \"b58 = b58 * 256 + ch\".\n-        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); it != b58.rend(); it++) {\n+        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); (carry != 0 || i < length) && (it != b58.rend()); it++, i++) {",
    "path": "src/base58.cpp",
    "position": 19,
    "original_position": 19,
    "commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "original_commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "for iterators that may well be the case (prefix increment saves a copy)\n",
    "created_at": "2016-03-17T11:27:13Z",
    "updated_at": "2016-03-17T11:27:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56489636",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56489636"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56489636"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56489636/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 84,
    "original_line": 84,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56560564",
    "pull_request_review_id": null,
    "id": 56560564,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTYwNTY0",
    "diff_hunk": "@@ -68,26 +68,31 @@ std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n+    int length = 0;\n     while (pbegin != pend && *pbegin == 0) {\n         pbegin++;\n         zeroes++;\n     }\n     // Allocate enough space in big-endian base58 representation.\n-    std::vector<unsigned char> b58((pend - pbegin) * 138 / 100 + 1); // log(256) / log(58), rounded up.\n+    int size = (pend - pbegin) * 138 / 100 + 1; // log(256) / log(58), rounded up.\n+    std::vector<unsigned char> b58(size);\n     // Process the bytes.\n     while (pbegin != pend) {\n         int carry = *pbegin;\n+        int i = 0;\n         // Apply \"b58 = b58 * 256 + ch\".\n-        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); it != b58.rend(); it++) {\n+        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); (carry != 0 || i < length) && (it != b58.rend()); it++, i++) {\n             carry += 256 * (*it);\n             *it = carry % 58;\n             carry /= 58;\n         }\n+\n         assert(carry == 0);\n+        length = i;",
    "path": "src/base58.cpp",
    "position": 26,
    "original_position": 26,
    "commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "original_commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "mhmm, I need to read this more deeply for an utACK, I think. I retire my utACK but maintain the concept ACK.\n",
    "created_at": "2016-03-17T19:05:34Z",
    "updated_at": "2016-03-17T19:07:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56560564",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56560564"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56560564"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56560564/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 91,
    "original_line": 91,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56562954",
    "pull_request_review_id": null,
    "id": 56562954,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTYyOTU0",
    "diff_hunk": "@@ -68,26 +68,31 @@ std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n+    int length = 0;\n     while (pbegin != pend && *pbegin == 0) {\n         pbegin++;\n         zeroes++;\n     }\n     // Allocate enough space in big-endian base58 representation.\n-    std::vector<unsigned char> b58((pend - pbegin) * 138 / 100 + 1); // log(256) / log(58), rounded up.\n+    int size = (pend - pbegin) * 138 / 100 + 1; // log(256) / log(58), rounded up.\n+    std::vector<unsigned char> b58(size);\n     // Process the bytes.\n     while (pbegin != pend) {\n         int carry = *pbegin;\n+        int i = 0;\n         // Apply \"b58 = b58 * 256 + ch\".\n-        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); it != b58.rend(); it++) {\n+        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); (carry != 0 || i < length) && (it != b58.rend()); it++, i++) {",
    "path": "src/base58.cpp",
    "position": 19,
    "original_position": 19,
    "commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "original_commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This should depend on the compiler and target machine anyway, but it is my understanding that in x86 there are separated instructions with different performance (how big is the difference I have no idea). I also suspect that many compilers are smart enough to do this for you.\nSo if it may not do anything but if it may do something good, why not?\nOf course this is not to say we should do it everywhere. But in new code, why not? It may be useful for some platforms. The cons from stackoverflow seem very week, but I'm very curious if anybody else has some other more solid concerns or benchmarks showing this is not really something to think much about (or just data showing that, yes, compilers are currently smart for this too). This is a recurring discussion that I would like to stop thinking about one way or the other.\n",
    "created_at": "2016-03-17T19:22:17Z",
    "updated_at": "2016-03-17T19:22:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56562954",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56562954"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56562954"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56562954/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 84,
    "original_line": 84,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56634284",
    "pull_request_review_id": null,
    "id": 56634284,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjM0Mjg0",
    "diff_hunk": "@@ -68,26 +68,31 @@ std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n+    int length = 0;\n     while (pbegin != pend && *pbegin == 0) {\n         pbegin++;\n         zeroes++;\n     }\n     // Allocate enough space in big-endian base58 representation.\n-    std::vector<unsigned char> b58((pend - pbegin) * 138 / 100 + 1); // log(256) / log(58), rounded up.\n+    int size = (pend - pbegin) * 138 / 100 + 1; // log(256) / log(58), rounded up.\n+    std::vector<unsigned char> b58(size);\n     // Process the bytes.\n     while (pbegin != pend) {\n         int carry = *pbegin;\n+        int i = 0;\n         // Apply \"b58 = b58 * 256 + ch\".\n-        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); it != b58.rend(); it++) {\n+        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); (carry != 0 || i < length) && (it != b58.rend()); it++, i++) {",
    "path": "src/base58.cpp",
    "position": 19,
    "original_position": 19,
    "commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "original_commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> This should depend on the compiler and target machine anyway, but it is my understanding that in x86 there are separated instructions with different performance\n\nFor integers the compiler is certainly smart enough that there is no difference between prefix and postfix ++, if bare (the result is not actually used). \n\nBut this doesn't have much to do with the instructions, just with language design. Iterators are objects. The definition of prefix and postfix `++` respectively is, when overloading them:\n\n```\nPoint& operator++();       // Prefix increment operator.\nPoint operator++(int);     // Postfix increment operator.\n```\n\nSo: postfix operation returns a copy (the old value), whereas prefix increments in place and returns a reference (to self). This means prefix can, in principle, be implemented more efficiently.\n",
    "created_at": "2016-03-18T09:59:53Z",
    "updated_at": "2016-03-18T10:00:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56634284",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56634284"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56634284"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56634284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 84,
    "original_line": 84,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56757169",
    "pull_request_review_id": null,
    "id": 56757169,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzU3MTY5",
    "diff_hunk": "@@ -68,26 +68,31 @@ std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n+    int length = 0;\n     while (pbegin != pend && *pbegin == 0) {\n         pbegin++;\n         zeroes++;\n     }\n     // Allocate enough space in big-endian base58 representation.\n-    std::vector<unsigned char> b58((pend - pbegin) * 138 / 100 + 1); // log(256) / log(58), rounded up.\n+    int size = (pend - pbegin) * 138 / 100 + 1; // log(256) / log(58), rounded up.\n+    std::vector<unsigned char> b58(size);\n     // Process the bytes.\n     while (pbegin != pend) {\n         int carry = *pbegin;\n+        int i = 0;\n         // Apply \"b58 = b58 * 256 + ch\".\n-        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); it != b58.rend(); it++) {\n+        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); (carry != 0 || i < length) && (it != b58.rend()); it++, i++) {\n             carry += 256 * (*it);\n             *it = carry % 58;\n             carry /= 58;\n         }\n+\n         assert(carry == 0);",
    "path": "src/base58.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "original_commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This could be transformed into an assert(it != b58.rend()); within the loop.\n",
    "created_at": "2016-03-20T00:04:46Z",
    "updated_at": "2016-03-20T00:04:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56757169",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56757169"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56757169"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56757169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 90,
    "original_line": 90,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56757175",
    "pull_request_review_id": null,
    "id": 56757175,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzU3MTc1",
    "diff_hunk": "@@ -68,26 +68,31 @@ std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n {\n     // Skip & count leading zeroes.\n     int zeroes = 0;\n+    int length = 0;\n     while (pbegin != pend && *pbegin == 0) {\n         pbegin++;\n         zeroes++;\n     }\n     // Allocate enough space in big-endian base58 representation.\n-    std::vector<unsigned char> b58((pend - pbegin) * 138 / 100 + 1); // log(256) / log(58), rounded up.\n+    int size = (pend - pbegin) * 138 / 100 + 1; // log(256) / log(58), rounded up.\n+    std::vector<unsigned char> b58(size);\n     // Process the bytes.\n     while (pbegin != pend) {\n         int carry = *pbegin;\n+        int i = 0;\n         // Apply \"b58 = b58 * 256 + ch\".\n-        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); it != b58.rend(); it++) {\n+        for (std::vector<unsigned char>::reverse_iterator it = b58.rbegin(); (carry != 0 || i < length) && (it != b58.rend()); it++, i++) {",
    "path": "src/base58.cpp",
    "position": 19,
    "original_position": 19,
    "commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "original_commit_id": "3252208cb10be645bae415c90fb2ed8217838490",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe change it++ to ++it while we're optimising... (it++ creates an unnecessary copy of the iterator)\n",
    "created_at": "2016-03-20T00:05:14Z",
    "updated_at": "2016-03-20T00:05:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56757175",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56757175"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7656#discussion_r56757175"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7656"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/56757175/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 84,
    "original_line": 84,
    "side": "RIGHT"
  }
]