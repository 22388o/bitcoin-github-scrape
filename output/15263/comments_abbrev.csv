sipa,2019-01-25T18:40:13Z,I believe the existing tests are sufficient here.,https://github.com/bitcoin/bitcoin/pull/15263#issuecomment-457676590,457676590,
meshcollider,2019-01-26T19:35:25Z,"utACK https://github.com/bitcoin/bitcoin/pull/15263/commits/11e0fd8d66677a92b6d12a39d0a26f1b39d9a46e\n\nNice, thanks :)",https://github.com/bitcoin/bitcoin/pull/15263#issuecomment-457858803,457858803,
Sjors,2019-01-30T13:05:02Z,"Nit: the top comment of `DescriptorImpl` currently says: `(size 1 for PK, PKH, WPKH; any size of Multisig)`. Add `Combo`?\n\nConcept ACK, I think. Just checking if I understand the rationale correctly, in the proposed descriptor importmulti : \n<img width=""919"" alt=""schermafbeelding 2019-01-30 om 13 34 38"" src=""https://user-images.githubusercontent.com/10217/51981600-db53b780-2493-11e9-8a43-11a",https://github.com/bitcoin/bitcoin/pull/15263#issuecomment-458936244,458936244,
sipa,2019-01-31T03:08:53Z,"> This currently doesn't import the public keys, only the scripts. That can be solved by adding outkeys to pubkey_map, but this would also add all public keys in a multisig descriptor.\n\nThat's what the code originally was, before I complained that that would make outputs to multisig participant keys marked as IsMIne.\n\n> That's where my brain gives up\n\nI agree this is hard to reason abo",https://github.com/bitcoin/bitcoin/pull/15263#issuecomment-459198138,459198138,
Sjors,2019-01-31T09:50:32Z,"> the pubkey will be expanded, and then imported, causing P2PKH outputs for the same key to also become watched. \n\nIs this import also what causes `getnewaddress """" legacy` to work even if you imported a P2WPKH descriptor? _Actually that won't happen until #14075._ I find that pretty annoying, because it can break compatibility with the source you imported from. It's even potentially dangerous",https://github.com/bitcoin/bitcoin/pull/15263#issuecomment-459282699,459282699,
sipa,2019-01-31T17:41:49Z,"@Sjors Similar but different effect.\n\nFor private keys we rely on the ""ImplicitlyLearnRelatedScripts"" function to know how to spend P2PKH/P2SH/P2WSH (in memory) for every private key in the wallet.\n\nFor public keys, the reason is that we only have one record (watch only keys) in the keystore for both watching and solving public key related scripts.",https://github.com/bitcoin/bitcoin/pull/15263#issuecomment-459436893,459436893,
