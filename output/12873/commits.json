[
  {
    "sha": "85e2b57749590df7a3c93619d9fde0e856bfc555",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NWUyYjU3NzQ5NTkwZGY3YTNjOTM2MTlkOWZkZTBlODU2YmZjNTU1",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-04-05T17:57:01Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-06-04T20:24:22Z"
      },
      "message": "Make functional tests compatible with bitcoin-qt usage\n\nIn particular, skip any assert_start_raises_init_error checks due to the way\nQT handles startup errors (presents the user with an error dialog which must be\nclosed). In the future we may implement a better way of handling this.",
      "tree": {
        "sha": "31709cd270b53cd7805cc85d828afd7feae5a189",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31709cd270b53cd7805cc85d828afd7feae5a189"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/85e2b57749590df7a3c93619d9fde0e856bfc555",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85e2b57749590df7a3c93619d9fde0e856bfc555",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/85e2b57749590df7a3c93619d9fde0e856bfc555",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85e2b57749590df7a3c93619d9fde0e856bfc555/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0de7cc848e07d942e09bb3bb60189985e53d2bb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0de7cc848e07d942e09bb3bb60189985e53d2bb5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0de7cc848e07d942e09bb3bb60189985e53d2bb5"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 18,
      "deletions": 2
    },
    "files": [
      {
        "sha": "3dd2ea420eb13d8b8172b3bd9d6837378e51154a",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 18,
        "deletions": 2,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/85e2b57749590df7a3c93619d9fde0e856bfc555/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/85e2b57749590df7a3c93619d9fde0e856bfc555/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=85e2b57749590df7a3c93619d9fde0e856bfc555",
        "patch": "@@ -125,6 +125,10 @@ def __getattr__(self, name):\n             assert self.rpc_connected and self.rpc is not None, self._node_msg(\"Error: no RPC connection\")\n             return getattr(self.rpc, name)\n \n+    @property\n+    def using_qt(self):\n+        return self.binary.endswith('-qt')\n+\n     def start(self, extra_args=None, stdout=None, stderr=None, *args, **kwargs):\n         \"\"\"Start the node.\"\"\"\n         if extra_args is None:\n@@ -146,8 +150,9 @@ def start(self, extra_args=None, stdout=None, stderr=None, *args, **kwargs):\n         # add environment variable LIBC_FATAL_STDERR_=1 so that libc errors are written to stderr and not the terminal\n         subp_env = dict(os.environ, LIBC_FATAL_STDERR_=\"1\")\n \n-        self.process = subprocess.Popen(self.args + extra_args, env=subp_env, stdout=stdout, stderr=stderr, *args, **kwargs)\n-\n+        start_cmd = self.args + extra_args\n+        self.log.debug(\"Attempting to start bitcoind with command '%s'\", ' '.join(start_cmd))\n+        self.process = subprocess.Popen(start_cmd, stdout=stdout, stderr=stderr, env=subp_env, *args, **kwargs)\n         self.running = True\n         self.log.debug(\"bitcoind started, waiting for RPC to come up\")\n \n@@ -237,8 +242,19 @@ def assert_start_raises_init_error(self, extra_args=None, expected_msg=None, mat\n \n         Will throw if bitcoind starts without an error.\n         Will throw if an expected_msg is provided and it does not match bitcoind's stdout.\"\"\"\n+\n+        if self.using_qt:\n+            # QT displays a warning box and the process hangs, preventing us\n+            # from continuing the test.\n+            self.log.info(\n+                \"Skipping assert_start_raises_init_error\"\n+                \"(extra_args=%s, expected_msg=%s, match=%s, args=%s, kwargs=%s) \"\n+                \"call due to QT use\", extra_args, expected_msg, match, args, kwargs)\n+            return\n+\n         with tempfile.NamedTemporaryFile(dir=self.stderr_dir, delete=False) as log_stderr, \\\n              tempfile.NamedTemporaryFile(dir=self.stdout_dir, delete=False) as log_stdout:\n+\n             try:\n                 self.start(extra_args, stdout=log_stdout, stderr=log_stderr, *args, **kwargs)\n                 self.wait_for_rpc_connection()"
      }
    ]
  },
  {
    "sha": "20323ee533071a06e4d8b816870468a1fdcbad8c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMDMyM2VlNTMzMDcxYTA2ZTRkOGI4MTY4NzA0NjhhMWZkY2JhZDhj",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-04-03T20:36:36Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-06-04T22:09:22Z"
      },
      "message": "[ci] Run functional tests using bitcoin-qt in one Travis job\n\nAs noted in https://github.com/bitcoin/bitcoin/pull/12843, we're currently\nmissing bugs unique to bitcoin-qt during the Travis build because the\nfunctional test framework only uses bitcoind (and not bitcoin-qt).\n\nRun a single Travis job under xvfb for framebuffer virtualization and using\nbitcoin-qt as the binary. Remove outdated NEED_XVFB Travis configuration.",
      "tree": {
        "sha": "8a70a9c08ca90cdc6b7b20e56d81d7b479f95be0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a70a9c08ca90cdc6b7b20e56d81d7b479f95be0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/20323ee533071a06e4d8b816870468a1fdcbad8c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20323ee533071a06e4d8b816870468a1fdcbad8c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/20323ee533071a06e4d8b816870468a1fdcbad8c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20323ee533071a06e4d8b816870468a1fdcbad8c/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "85e2b57749590df7a3c93619d9fde0e856bfc555",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/85e2b57749590df7a3c93619d9fde0e856bfc555",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/85e2b57749590df7a3c93619d9fde0e856bfc555"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 13,
      "deletions": 3
    },
    "files": [
      {
        "sha": "af32aefdf7aaa4f266044db630a54dba13846274",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 13,
        "deletions": 3,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20323ee533071a06e4d8b816870468a1fdcbad8c/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20323ee533071a06e4d8b816870468a1fdcbad8c/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=20323ee533071a06e4d8b816870468a1fdcbad8c",
        "patch": "@@ -24,6 +24,7 @@ env:\n     - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n     - WINEDEBUG=fixme-all\n     - DOCKER_PACKAGES=\"build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache\"\n+    - FUNCTIONAL_TEST_CMD=\"test/functional/test_runner.py --combinedlogslen=4000 --coverage --quiet --failfast\"\n   matrix:\n # ARM\n     - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n@@ -36,7 +37,7 @@ env:\n # x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)\n     - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n # Qt4 & system libs\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qt4-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev xvfb libqt4-dev\" NO_DEPENDS=1 NEED_XVFB=1 RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=qt4 CPPFLAGS=-DDEBUG_LOCKORDER\" DISPLAY=:99.0\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qt4-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev xvfb libqt4-dev\" NO_DEPENDS=1 RUN_TESTS=true RUN_TESTS_WITH_QT=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=qt4 CPPFLAGS=-DDEBUG_LOCKORDER\" DISPLAY=:99.0\n # x86_64 Linux, No wallet\n     - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n # Cross-Mac\n@@ -59,7 +60,12 @@ before_script:\n     - if [[ $HOST = *-mingw32 ]]; then DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\); fi\n     - if [ -z \"$NO_DEPENDS\" ]; then DOCKER_EXEC CONFIG_SHELL= make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS; fi\n     # Start xvfb if needed, as documented at https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-xvfb-to-Run-Tests-That-Require-a-GUI\n-    - if [ \"$NEED_XVFB\" = 1 ]; then DOCKER_EXEC /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac; fi\n+    - |\n+      if [ \"$RUN_TESTS_WITH_QT\" = \"true\" ]; then\n+        # Start xvfb per an issue describing difficulty with Travis and Ubuntu Trusty:\n+        # https://github.com/travis-ci/travis-ci/issues/8262#issuecomment-323601110\n+        DOCKER_EXEC /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x24;\n+      fi\n script:\n     - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n     - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n@@ -74,7 +80,11 @@ script:\n     - DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false )\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then DOCKER_EXEC LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1; fi\n     - if [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then extended=\"--extended --exclude feature_pruning,feature_dbcrash\"; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then DOCKER_EXEC test/functional/test_runner.py --combinedlogslen=4000 --coverage --quiet --failfast ${extended}; fi\n+    - if [ \"$RUN_TESTS_WITH_QT\" = \"true\" ]; then\n+          DOCKER_EXEC BITCOIND=$(DOCKER_EXEC find . -name 'bitcoin-qt' -executable) $FUNCTIONAL_TEST_CMD ${extended};\n+        elif [ \"$RUN_TESTS\" = \"true\" ]; then\n+          DOCKER_EXEC $FUNCTIONAL_TEST_CMD ${extended};\n+        fi\n after_script:\n     - echo $TRAVIS_COMMIT_RANGE\n     - echo $TRAVIS_COMMIT_LOG"
      }
    ]
  }
]