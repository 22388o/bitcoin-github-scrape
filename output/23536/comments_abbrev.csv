0xB10C,2021-11-17 15:22:42,Concept ACK on burying taproot deployment in the next major release :grimacing: ,https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-971685204,971685204,
JeremyRubin,2021-11-17 16:04:19,concept ACK -- note that the IsNull v.s. optional doesn't really matter; i do mildly prefer consistency though with the BIP16Exception.,https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-971723797,971723797,
DrahtBot,2021-11-18 02:51:09,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-972467628,972467628,
Sjors,2021-11-18 12:50:12,Concept ACK. Not sure what the right amount of PoW is to burry this under. How much was SegWit burried under?,https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-972836744,972836744,
MarcoFalke,2021-11-18 13:48:58,"@Sjors Segwit was activated in ~summer 2017 and https://github.com/bitcoin/bitcoin/pull/11739 was created in ~fall 2017, however it wasn't merged until April 2018, and first included in the 17.0 release (Oct 2018). If it was merged earlier it could have been included in 16.0 (Feb 2018). If the changes here are included in the next major release, they will have ~5 months of POW until 23.0 (April 20",https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-972881871,972881871,
jamesob,2021-11-18 19:55:04,"Concept ACK, for consistency with previous soft fork deployments and the benefits well articulated in the PR description.",https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-973209664,973209664,
dunxen,2021-11-21 17:30:30,"Concept ACK\n\nRunning verification since genesis now.",https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-974860471,974860471,
MarcoFalke,2021-11-25 10:36:27,"Rebased with the following changes:\n\n* Two refactoring cleanup commits per myself\n* Use plain `uint256` (not optional) per @JeremyRubin \n* Rework test per @Sjors ",https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-979077116,979077116,
JeremyRubin,2021-11-25 17:34:03,"if tests pass this should be OK, but the removal of the nullptr check and change to assert does seem a bit creepy to me.",https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-979378315,979378315,
gruve-p,2021-11-25 17:35:27,Concept ACK,https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-979379020,979379020,
MarcoFalke,2021-11-25 17:40:47,"> if tests pass this should be OK, but the removal of the nullptr check and change to assert does seem a bit creepy to me.\n\nCan you elaborate why this is creepy? All call sites assume the hash to be existing. See the commit message and for example:\n\nhttps://github.com/bitcoin/bitcoin/blob/fa65b65821add01e28118899d4f2eef98aa4c37a/src/validation.cpp#L1643",https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-979381311,979381311,
fjahr,2021-11-27 17:05:15,"Concept ACK and light Code Review ACK\n\nI will do some testing in the next days.",https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-980713841,980713841,
MarcoFalke,2021-11-30 15:56:54,"Force pushed last commit, only change is whitespace related",https://github.com/bitcoin/bitcoin/pull/23536#issuecomment-982772150,982772150,
jamesob,2021-11-18 19:53:39,Can just be `!consensusparams.TaprootException` (https://en.cppreference.com/w/cpp/utility/optional/operator_bool).,https://github.com/bitcoin/bitcoin/pull/23536#discussion_r752578924,752578924,src/validation.cpp
Sjors,2021-11-22 12:13:12,"Needs to drop ""regardless of validity"" (except for scriptpath_invalid_unkleaf)",https://github.com/bitcoin/bitcoin/pull/23536#discussion_r754213377,754213377,test/functional/feature_taproot.py
MarcoFalke,2021-11-22 14:28:53,"Good point. I'll fix the comment on the next force push with any other nits, if there are any. The force push is currently scheduled to happen after #23512 is merged.",https://github.com/bitcoin/bitcoin/pull/23536#discussion_r754329694,754329694,test/functional/feature_taproot.py
MarcoFalke,2021-11-22 14:28:59,Is there a reason to prefer one over the other?,https://github.com/bitcoin/bitcoin/pull/23536#discussion_r754329775,754329775,src/validation.cpp
MarcoFalke,2021-11-25 10:34:19,Gone,https://github.com/bitcoin/bitcoin/pull/23536#discussion_r756766033,756766033,src/validation.cpp
MarcoFalke,2021-11-25 10:34:32,Reworked test,https://github.com/bitcoin/bitcoin/pull/23536#discussion_r756766215,756766215,test/functional/feature_taproot.py
JeremyRubin,2021-11-25 17:29:33,nit,https://github.com/bitcoin/bitcoin/pull/23536#discussion_r757058717,757058717,src/consensus/params.h
MarcoFalke,2021-11-25 17:33:22,"Yes, there should be a newline between project-internal includes and project-external ones.",https://github.com/bitcoin/bitcoin/pull/23536#discussion_r757060366,757060366,src/consensus/params.h
MarcoFalke,2021-11-30 15:55:55,"Force pushed to remove the nit-fix, since it is being fixed in another pull already.",https://github.com/bitcoin/bitcoin/pull/23536#discussion_r759421087,759421087,src/consensus/params.h
