practicalswift,2020-06-01 09:08:14,"Concept ACK: thanks for fixing this and thereby allowing us to catch more severe issues using `-Wunreachable-code-loop-increment` going forward!\n\nGreat first time contribution and great rationale section in the PR description.\n\nWarm welcome as a contributor @jonathanschoeller! :)",https://github.com/bitcoin/bitcoin/pull/19131#issuecomment-636720643,636720643,
MarcoFalke,2020-06-01 10:35:32,"Oh, it looks like you might have to adjust the tests for the longer error messages.",https://github.com/bitcoin/bitcoin/pull/19131#issuecomment-636773192,636773192,
hebasto,2020-06-01 10:44:52,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/19131#issuecomment-636778044,636778044,
jonathanschoeller,2020-06-02 00:35:28,"Thanks @practicalswift , @MarcoFalke , and @hebasto for welcoming me and taking the time to help me with this PR.",https://github.com/bitcoin/bitcoin/pull/19131#issuecomment-637199094,637199094,
DrahtBot,2020-06-02 01:28:19,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18857 (build: avoid repetitions when enabling warnings in configure.ac by vasild)\n\nIf you consider this pull request im",https://github.com/bitcoin/bitcoin/pull/19131#issuecomment-637213695,637213695,
laanwj,2020-06-04 14:27:28,Code review ACK eea81146571480b2acd12c8cd7f36b04d056c47f,https://github.com/bitcoin/bitcoin/pull/19131#issuecomment-638884293,638884293,
MarcoFalke,2020-06-01 10:33:42,"I don't think this line needs to change. Below you can simply check for `errors.empty()`, which should do the exactly same.",https://github.com/bitcoin/bitcoin/pull/19131#discussion_r433159678,433159678,src/init.cpp
MarcoFalke,2020-06-01 10:33:58,Same,https://github.com/bitcoin/bitcoin/pull/19131#discussion_r433159787,433159787,src/init.cpp
jonathanschoeller,2020-06-01 10:40:26,"`class ""bilingual_str"" has no member ""empty""`. \n\nWould it be reasonable to use `errors.translated.empty()` for this purpose?",https://github.com/bitcoin/bitcoin/pull/19131#discussion_r433162335,433162335,src/init.cpp
hebasto,2020-06-01 10:43:37,"> `class ""bilingual_str"" has no member ""empty""`.\n> \n> Would it be reasonable to use `errors.translated.empty()` for this purpose?\n\nFeel free to get it from https://github.com/bitcoin/bitcoin/pull/18927/commits/1df513531f04ef31d55d2fa2acc146d526745788 :)",https://github.com/bitcoin/bitcoin/pull/19131#discussion_r433163673,433163673,src/init.cpp
MarcoFalke,2020-06-01 10:46:13,"Oh, is that not yet merged. Sorry didn't realize",https://github.com/bitcoin/bitcoin/pull/19131#discussion_r433164718,433164718,src/init.cpp
MarcoFalke,2020-06-01 11:24:48,"please don't change the translation string `_(""Section [%s] is not recognized."")` and keep the special character `\n` untranslated (like above)",https://github.com/bitcoin/bitcoin/pull/19131#discussion_r433180014,433180014,src/init.cpp
hebasto,2020-06-01 11:26:39,"```suggestion\n        warnings += strprintf(Untranslated(""%s:%i "") + _(""Section [%s] is not recognized."") + Untranslated(""\n""), section.m_file, section.m_line, section.m_name);\n```",https://github.com/bitcoin/bitcoin/pull/19131#discussion_r433180776,433180776,src/init.cpp
hebasto,2020-06-01 11:28:51,Slow [typing](https://github.com/bitcoin/bitcoin/pull/19131#pullrequestreview-421772387) from my side :),https://github.com/bitcoin/bitcoin/pull/19131#discussion_r433181681,433181681,src/init.cpp
