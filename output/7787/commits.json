[
  {
    "sha": "fabbf80f2f956e056e423f24318e9157367ff569",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWJiZjgwZjJmOTU2ZTA1NmU0MjNmMjQzMThlOTE1NzM2N2ZmNTY5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-03-21T17:29:17Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-04-02T13:26:21Z"
      },
      "message": "[ui] Move InitError, InitWarning, AmountErrMsg",
      "tree": {
        "sha": "29cd6a37252053386a071d2a4ffcb8f9a77c0ff4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/29cd6a37252053386a071d2a4ffcb8f9a77c0ff4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fabbf80f2f956e056e423f24318e9157367ff569",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabbf80f2f956e056e423f24318e9157367ff569",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fabbf80f2f956e056e423f24318e9157367ff569",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabbf80f2f956e056e423f24318e9157367ff569/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30c2dd8d0598afac9319d3a813a89a682b9c0d34",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30c2dd8d0598afac9319d3a813a89a682b9c0d34",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30c2dd8d0598afac9319d3a813a89a682b9c0d34"
      }
    ],
    "stats": {
      "total": 114,
      "additions": 56,
      "deletions": 58
    },
    "files": [
      {
        "sha": "10aa550a02befb0f7f5fc5b03a9b1d4e3189874f",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabbf80f2f956e056e423f24318e9157367ff569/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabbf80f2f956e056e423f24318e9157367ff569/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=fabbf80f2f956e056e423f24318e9157367ff569",
        "patch": "@@ -323,6 +323,7 @@ libbitcoin_util_a_SOURCES = \\\n   rpc/protocol.cpp \\\n   support/cleanse.cpp \\\n   sync.cpp \\\n+  ui_interface.cpp \\\n   util.cpp \\\n   utilmoneystr.cpp \\\n   utilstrencodings.cpp \\"
      },
      {
        "sha": "038b28cc3a57494729936f5e06c30bd31826ed0d",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabbf80f2f956e056e423f24318e9157367ff569/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabbf80f2f956e056e423f24318e9157367ff569/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fabbf80f2f956e056e423f24318e9157367ff569",
        "patch": "@@ -94,7 +94,6 @@ enum BindFlags {\n };\n \n static const char* FEE_ESTIMATES_FILENAME=\"fee_estimates.dat\";\n-CClientUIInterface uiInterface; // Declared but not defined in ui_interface.h\n \n //////////////////////////////////////////////////////////////////////////////\n //\n@@ -266,18 +265,6 @@ void HandleSIGHUP(int)\n     fReopenDebugLog = true;\n }\n \n-bool static InitError(const std::string &str)\n-{\n-    uiInterface.ThreadSafeMessageBox(str, \"\", CClientUIInterface::MSG_ERROR);\n-    return false;\n-}\n-\n-bool static InitWarning(const std::string &str)\n-{\n-    uiInterface.ThreadSafeMessageBox(str, \"\", CClientUIInterface::MSG_WARNING);\n-    return true;\n-}\n-\n bool static Bind(const CService &addr, unsigned int flags) {\n     if (!(flags & BF_EXPLICIT) && IsLimited(addr))\n         return false;\n@@ -742,11 +729,6 @@ static std::string ResolveErrMsg(const char * const optname, const std::string&\n     return strprintf(_(\"Cannot resolve -%s address: '%s'\"), optname, strBind);\n }\n \n-static std::string AmountErrMsg(const char * const optname, const std::string& strValue)\n-{\n-    return strprintf(_(\"Invalid amount for -%s=<amount>: '%s'\"), optname, strValue);\n-}\n-\n void InitLogging()\n {\n     fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);"
      },
      {
        "sha": "730f04f97faf9b3b577e8cd7c3015a5bfd02cdf1",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabbf80f2f956e056e423f24318e9157367ff569/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabbf80f2f956e056e423f24318e9157367ff569/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=fabbf80f2f956e056e423f24318e9157367ff569",
        "patch": "@@ -30,8 +30,6 @@\n #include <boost/test/unit_test.hpp>\n #include <boost/thread.hpp>\n \n-CClientUIInterface uiInterface; // Declared but not defined in ui_interface.h\n-\n extern bool fPrintToConsole;\n extern void noui_connect();\n "
      },
      {
        "sha": "c778e40a9053a9237eec651458a708a3cb450e8b",
        "filename": "src/ui_interface.cpp",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabbf80f2f956e056e423f24318e9157367ff569/src/ui_interface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabbf80f2f956e056e423f24318e9157367ff569/src/ui_interface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.cpp?ref=fabbf80f2f956e056e423f24318e9157367ff569",
        "patch": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2010-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"ui_interface.h\"\n+#include \"util.h\"\n+\n+CClientUIInterface uiInterface;\n+\n+bool InitError(const std::string& str)\n+{\n+    uiInterface.ThreadSafeMessageBox(str, \"\", CClientUIInterface::MSG_ERROR);\n+    return false;\n+}\n+\n+void InitWarning(const std::string& str)\n+{\n+    uiInterface.ThreadSafeMessageBox(str, \"\", CClientUIInterface::MSG_WARNING);\n+}\n+\n+std::string AmountErrMsg(const char* const optname, const std::string& strValue)\n+{\n+    return strprintf(_(\"Invalid amount for -%s=<amount>: '%s'\"), optname, strValue);\n+}"
      },
      {
        "sha": "a27918c50766d6c50d4bff3adf1e111d570f00b0",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabbf80f2f956e056e423f24318e9157367ff569/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabbf80f2f956e056e423f24318e9157367ff569/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=fabbf80f2f956e056e423f24318e9157367ff569",
        "patch": "@@ -100,6 +100,14 @@ class CClientUIInterface\n     boost::signals2::signal<void (void)> BannedListChanged;\n };\n \n+/** Show warning message **/\n+void InitWarning(const std::string& str);\n+\n+/** Show error message **/\n+bool InitError(const std::string& str);\n+\n+std::string AmountErrMsg(const char* const optname, const std::string& strValue);\n+\n extern CClientUIInterface uiInterface;\n \n #endif // BITCOIN_UI_INTERFACE_H"
      },
      {
        "sha": "21d641f24720ace3977efb99194a637666c16261",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 38,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabbf80f2f956e056e423f24318e9157367ff569/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabbf80f2f956e056e423f24318e9157367ff569/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=fabbf80f2f956e056e423f24318e9157367ff569",
        "patch": "@@ -23,6 +23,7 @@\n #include \"timedata.h\"\n #include \"txmempool.h\"\n #include \"util.h\"\n+#include \"ui_interface.h\"\n #include \"utilmoneystr.h\"\n \n #include <assert.h>\n@@ -365,22 +366,6 @@ void CWallet::Flush(bool shutdown)\n     bitdb.Flush(shutdown);\n }\n \n-bool static UIError(const std::string &str)\n-{\n-    uiInterface.ThreadSafeMessageBox(str, \"\", CClientUIInterface::MSG_ERROR);\n-    return false;\n-}\n-\n-void static UIWarning(const std::string &str)\n-{\n-    uiInterface.ThreadSafeMessageBox(str, \"\", CClientUIInterface::MSG_WARNING);\n-}\n-\n-static std::string AmountErrMsg(const char * const optname, const std::string& strValue)\n-{\n-    return strprintf(_(\"Invalid amount for -%s=<amount>: '%s'\"), optname, strValue);\n-}\n-\n bool CWallet::Verify()\n {\n     std::string walletFile = GetArg(\"-wallet\", DEFAULT_WALLET_DAT);\n@@ -390,7 +375,7 @@ bool CWallet::Verify()\n \n     // Wallet file must be a plain filename without a directory\n     if (walletFile != boost::filesystem::basename(walletFile) + boost::filesystem::extension(walletFile))\n-        return UIError(strprintf(_(\"Wallet %s resides outside data directory %s\"), walletFile, GetDataDir().string()));\n+        return InitError(strprintf(_(\"Wallet %s resides outside data directory %s\"), walletFile, GetDataDir().string()));\n \n     if (!bitdb.Open(GetDataDir()))\n     {\n@@ -407,7 +392,7 @@ bool CWallet::Verify()\n         // try again\n         if (!bitdb.Open(GetDataDir())) {\n             // if it still fails, it probably means we can't even create the database env\n-            return UIError(strprintf(_(\"Error initializing wallet database environment %s!\"), GetDataDir()));\n+            return InitError(strprintf(_(\"Error initializing wallet database environment %s!\"), GetDataDir()));\n         }\n     }\n     \n@@ -423,14 +408,14 @@ bool CWallet::Verify()\n         CDBEnv::VerifyResult r = bitdb.Verify(walletFile, CWalletDB::Recover);\n         if (r == CDBEnv::RECOVER_OK)\n         {\n-            UIWarning(strprintf(_(\"Warning: Wallet file corrupt, data salvaged!\"\n+            InitWarning(strprintf(_(\"Warning: Wallet file corrupt, data salvaged!\"\n                                          \" Original %s saved as %s in %s; if\"\n                                          \" your balance or transactions are incorrect you should\"\n                                          \" restore from a backup.\"),\n                 walletFile, \"wallet.{timestamp}.bak\", GetDataDir()));\n         }\n         if (r == CDBEnv::RECOVER_FAIL)\n-            return UIError(strprintf(_(\"%s corrupt, salvage failed\"), walletFile));\n+            return InitError(strprintf(_(\"%s corrupt, salvage failed\"), walletFile));\n     }\n     \n     return true;\n@@ -3055,7 +3040,7 @@ bool CWallet::InitLoadWallet()\n         CWallet *tempWallet = new CWallet(walletFile);\n         DBErrors nZapWalletRet = tempWallet->ZapWalletTx(vWtx);\n         if (nZapWalletRet != DB_LOAD_OK) {\n-            return UIError(strprintf(_(\"Error loading %s: Wallet corrupted\"), walletFile));\n+            return InitError(strprintf(_(\"Error loading %s: Wallet corrupted\"), walletFile));\n         }\n \n         delete tempWallet;\n@@ -3071,22 +3056,22 @@ bool CWallet::InitLoadWallet()\n     if (nLoadWalletRet != DB_LOAD_OK)\n     {\n         if (nLoadWalletRet == DB_CORRUPT)\n-            return UIError(strprintf(_(\"Error loading %s: Wallet corrupted\"), walletFile));\n+            return InitError(strprintf(_(\"Error loading %s: Wallet corrupted\"), walletFile));\n         else if (nLoadWalletRet == DB_NONCRITICAL_ERROR)\n         {\n-            UIWarning(strprintf(_(\"Error reading %s! All keys read correctly, but transaction data\"\n+            InitWarning(strprintf(_(\"Error reading %s! All keys read correctly, but transaction data\"\n                                          \" or address book entries might be missing or incorrect.\"),\n                 walletFile));\n         }\n         else if (nLoadWalletRet == DB_TOO_NEW)\n-            return UIError(strprintf(_(\"Error loading %s: Wallet requires newer version of %s\"),\n+            return InitError(strprintf(_(\"Error loading %s: Wallet requires newer version of %s\"),\n                                walletFile, _(PACKAGE_NAME)));\n         else if (nLoadWalletRet == DB_NEED_REWRITE)\n         {\n-            return UIError(strprintf(_(\"Wallet needed to be rewritten: restart %s to complete\"), _(PACKAGE_NAME)));\n+            return InitError(strprintf(_(\"Wallet needed to be rewritten: restart %s to complete\"), _(PACKAGE_NAME)));\n         }\n         else\n-            return UIError(strprintf(_(\"Error loading %s\"), walletFile));\n+            return InitError(strprintf(_(\"Error loading %s\"), walletFile));\n     }\n \n     if (GetBoolArg(\"-upgradewallet\", fFirstRun))\n@@ -3102,7 +3087,7 @@ bool CWallet::InitLoadWallet()\n             LogPrintf(\"Allowing wallet upgrade up to %i\\n\", nMaxVersion);\n         if (nMaxVersion < walletInstance->GetVersion())\n         {\n-            return UIError(_(\"Cannot downgrade wallet\"));\n+            return InitError(_(\"Cannot downgrade wallet\"));\n         }\n         walletInstance->SetMaxVersion(nMaxVersion);\n     }\n@@ -3116,7 +3101,7 @@ bool CWallet::InitLoadWallet()\n         if (walletInstance->GetKeyFromPool(newDefaultKey)) {\n             walletInstance->SetDefaultKey(newDefaultKey);\n             if (!walletInstance->SetAddressBook(walletInstance->vchDefaultKey.GetID(), \"\", \"receive\"))\n-                return UIError(_(\"Cannot write default address\") += \"\\n\");\n+                return InitError(_(\"Cannot write default address\") += \"\\n\");\n         }\n \n         walletInstance->SetBestChain(chainActive.GetLocator());\n@@ -3150,7 +3135,7 @@ bool CWallet::InitLoadWallet()\n                 block = block->pprev;\n \n             if (pindexRescan != block)\n-                return UIError(_(\"Prune: last wallet synchronisation goes beyond pruned data. You need to -reindex (download the whole blockchain again in case of pruned node)\"));\n+                return InitError(_(\"Prune: last wallet synchronisation goes beyond pruned data. You need to -reindex (download the whole blockchain again in case of pruned node)\"));\n         }\n \n         uiInterface.InitMessage(_(\"Rescanning...\"));\n@@ -3200,42 +3185,42 @@ bool CWallet::ParameterInteraction()\n         if (ParseMoney(mapArgs[\"-mintxfee\"], n) && n > 0)\n             CWallet::minTxFee = CFeeRate(n);\n         else\n-            return UIError(AmountErrMsg(\"mintxfee\", mapArgs[\"-mintxfee\"]));\n+            return InitError(AmountErrMsg(\"mintxfee\", mapArgs[\"-mintxfee\"]));\n     }\n     if (mapArgs.count(\"-fallbackfee\"))\n     {\n         CAmount nFeePerK = 0;\n         if (!ParseMoney(mapArgs[\"-fallbackfee\"], nFeePerK))\n-            return UIError(strprintf(_(\"Invalid amount for -fallbackfee=<amount>: '%s'\"), mapArgs[\"-fallbackfee\"]));\n+            return InitError(strprintf(_(\"Invalid amount for -fallbackfee=<amount>: '%s'\"), mapArgs[\"-fallbackfee\"]));\n         if (nFeePerK > HIGH_TX_FEE_PER_KB)\n-            UIWarning(_(\"-fallbackfee is set very high! This is the transaction fee you may pay when fee estimates are not available.\"));\n+            InitWarning(_(\"-fallbackfee is set very high! This is the transaction fee you may pay when fee estimates are not available.\"));\n         CWallet::fallbackFee = CFeeRate(nFeePerK);\n     }\n     if (mapArgs.count(\"-paytxfee\"))\n     {\n         CAmount nFeePerK = 0;\n         if (!ParseMoney(mapArgs[\"-paytxfee\"], nFeePerK))\n-            return UIError(AmountErrMsg(\"paytxfee\", mapArgs[\"-paytxfee\"]));\n+            return InitError(AmountErrMsg(\"paytxfee\", mapArgs[\"-paytxfee\"]));\n         if (nFeePerK > HIGH_TX_FEE_PER_KB)\n-            UIWarning(_(\"-paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n+            InitWarning(_(\"-paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n         payTxFee = CFeeRate(nFeePerK, 1000);\n         if (payTxFee < ::minRelayTxFee)\n         {\n-            return UIError(strprintf(_(\"Invalid amount for -paytxfee=<amount>: '%s' (must be at least %s)\"),\n+            return InitError(strprintf(_(\"Invalid amount for -paytxfee=<amount>: '%s' (must be at least %s)\"),\n                                        mapArgs[\"-paytxfee\"], ::minRelayTxFee.ToString()));\n         }\n     }\n     if (mapArgs.count(\"-maxtxfee\"))\n     {\n         CAmount nMaxFee = 0;\n         if (!ParseMoney(mapArgs[\"-maxtxfee\"], nMaxFee))\n-            return UIError(AmountErrMsg(\"maxtxfee\", mapArgs[\"-maxtxfee\"]));\n+            return InitError(AmountErrMsg(\"maxtxfee\", mapArgs[\"-maxtxfee\"]));\n         if (nMaxFee > HIGH_MAX_TX_FEE)\n-            UIWarning(_(\"-maxtxfee is set very high! Fees this large could be paid on a single transaction.\"));\n+            InitWarning(_(\"-maxtxfee is set very high! Fees this large could be paid on a single transaction.\"));\n         maxTxFee = nMaxFee;\n         if (CFeeRate(maxTxFee, 1000) < ::minRelayTxFee)\n         {\n-            return UIError(strprintf(_(\"Invalid amount for -maxtxfee=<amount>: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)\"),\n+            return InitError(strprintf(_(\"Invalid amount for -maxtxfee=<amount>: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)\"),\n                                        mapArgs[\"-maxtxfee\"], ::minRelayTxFee.ToString()));\n         }\n     }"
      }
    ]
  },
  {
    "sha": "fa10ce6a6dd0a6f00f6528e12f1de7a7fcb08928",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTEwY2U2YTZkZDBhNmYwMGY2NTI4ZTEyZjFkZTdhN2ZjYjA4OTI4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-04-19T14:10:19Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-04-19T14:07:46Z"
      },
      "message": "Move ui_interface.cpp to libbitcoin_server_a_SOURCES\n\nIt is only needed by bitcoind and bitcoin-qt",
      "tree": {
        "sha": "c54663a22dc1cfdcc75993a1745f6460636a1fa5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c54663a22dc1cfdcc75993a1745f6460636a1fa5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa10ce6a6dd0a6f00f6528e12f1de7a7fcb08928",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa10ce6a6dd0a6f00f6528e12f1de7a7fcb08928",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa10ce6a6dd0a6f00f6528e12f1de7a7fcb08928",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa10ce6a6dd0a6f00f6528e12f1de7a7fcb08928/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fabbf80f2f956e056e423f24318e9157367ff569",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabbf80f2f956e056e423f24318e9157367ff569",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fabbf80f2f956e056e423f24318e9157367ff569"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "585463fc139885cc0a1555c78792400dc1d392b5",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa10ce6a6dd0a6f00f6528e12f1de7a7fcb08928/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa10ce6a6dd0a6f00f6528e12f1de7a7fcb08928/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=fa10ce6a6dd0a6f00f6528e12f1de7a7fcb08928",
        "patch": "@@ -203,6 +203,7 @@ libbitcoin_server_a_SOURCES = \\\n   torcontrol.cpp \\\n   txdb.cpp \\\n   txmempool.cpp \\\n+  ui_interface.cpp \\\n   validationinterface.cpp \\\n   versionbits.cpp \\\n   $(BITCOIN_CORE_H)\n@@ -323,7 +324,6 @@ libbitcoin_util_a_SOURCES = \\\n   rpc/protocol.cpp \\\n   support/cleanse.cpp \\\n   sync.cpp \\\n-  ui_interface.cpp \\\n   util.cpp \\\n   utilmoneystr.cpp \\\n   utilstrencodings.cpp \\"
      }
    ]
  }
]