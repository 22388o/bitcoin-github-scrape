theuni,2020-06-26 02:02:09,"> The compile time warning will go away (just like the ASSERT_IF_DEBUG) if we upgrade to std::span, but it seems fine to have additional safeguards in place in the meantime.\n\nSince clang has already has it implemented, presumably libc++ will ship with this attribute (or keyword) wired up once the standard is finished.",https://github.com/bitcoin/bitcoin/pull/19382#issuecomment-649906809,649906809,
jonatack,2020-06-26 07:18:02,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/19382#issuecomment-650020632,650020632,
MarcoFalke,2020-06-25 23:49:53,"This seems to fail on gcc 4.8:\n\n```\nlibtool: compile:  /usr/bin/ccache g++ -m32 -std=c++11 -DHAVE_CONFIG_H -I. -I../src/config -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -I./obj -I./secp256k1/include -DBUILD_BITCOIN_INTERNAL -I/home/travis/build/bitcoin/bitcoin/depends/i686-pc-linux-gnu/share/../include/ -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -D_FILE_OFFSET_BITS=64 -fstack-reuse=none -Wstack-pr",https://github.com/bitcoin/bitcoin/pull/19382#discussion_r445898004,445898004,src/span.h
MarcoFalke,2020-06-26 00:06:06,"in commit 397e5eda38144147330163e7a51413ac01d1d6f5\n\nIt looks like std::span has no move constructor (https://en.cppreference.com/w/cpp/container/span/span), so shouldn't we do the same?",https://github.com/bitcoin/bitcoin/pull/19382#discussion_r445902464,445902464,src/span.h
theuni,2020-06-26 01:46:42,"Thanks, will break this up into nested if's.",https://github.com/bitcoin/bitcoin/pull/19382#discussion_r445926227,445926227,src/span.h
theuni,2020-06-26 01:57:38,"Hmm. I'm seeing conflicting info on this.\n\nAccording to the (official?) revision 7 draft, the move constructor was removed in r6. See here: http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0122r7.pdf\n\n If we were to follow that, I believe we would drop our fun rvalue ctor.\n\nI'm not sure what draft version cppreference is referencing, but I believe it must be an old one.\n\nli",https://github.com/bitcoin/bitcoin/pull/19382#discussion_r445928813,445928813,src/span.h
MarcoFalke,2020-06-26 11:38:01,"> libc++ for example has implemented r7: https://reviews.llvm.org/D49338.\n\nlooking at the source code, it shows they are using `= default`, no?\n\nhttps://github.com/llvm/llvm-project/blame/6fafde0387229d6656faee41100b73615343819a/libcxx/include/span#L70",https://github.com/bitcoin/bitcoin/pull/19382#discussion_r446131251,446131251,src/span.h
theuni,2020-06-26 18:03:18,"@MarcoFalke Yes, but they also don't have a universal reference constructor like we do.\n\nThe problem is that return values are passed through a move constructor if they exist, before copy constructors. See [here](https://en.cppreference.com/w/cpp/language/return) under ""Automatic move from local variables and parameters"".\n\nBecause the default move constructor is removed by adding the defau",https://github.com/bitcoin/bitcoin/pull/19382#discussion_r446332852,446332852,src/span.h
