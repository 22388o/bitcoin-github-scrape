[
  {
    "sha": "397e5eda38144147330163e7a51413ac01d1d6f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOTdlNWVkYTM4MTQ0MTQ3MzMwMTYzZTdhNTE0MTNhYzAxZDFkNmY1",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2020-06-25T21:13:37Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2020-06-25T21:50:30Z"
      },
      "message": "span: remove default copy ctor and assignment oper\n\nThese have the effect of disabling the default move constructor and move\noperator. This is generally meaningless for spans due to their simplicity,\nbut consider the (simplified here) internal implementation of .first():\n\n    Span<C> first(std::size_t count) const noexcept {\n        return Span<C>(m_data, count);\n    }\n\nTechnically this creates a new Span object and moves/copies it when it returns,\nbut RVO takes care of optimizing that out.\n\nBecause trivial moves have been implicitly deleted, it falls into the more\ncomplicated conversion rvalue constructor to handle the return.\n\nThe next commit will add an attribute to the conversion constructor to help\ndetect dangling stack references, so we want to make sure that we're not\nsending trivial copies through it.\n\nNOTE: This copy/move is could also be avoided by constructing the return value\nin-place:\n    Span<C> first(std::size_t count) const noexcept {\n        return {m_data, count};\n    }",
      "tree": {
        "sha": "58707bac43ce6649040dde8f12686a55e9e474f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/58707bac43ce6649040dde8f12686a55e9e474f9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/397e5eda38144147330163e7a51413ac01d1d6f5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/397e5eda38144147330163e7a51413ac01d1d6f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/397e5eda38144147330163e7a51413ac01d1d6f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/397e5eda38144147330163e7a51413ac01d1d6f5/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f32f7e907a5eb73e880c567c699569081608ed7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f32f7e907a5eb73e880c567c699569081608ed7a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f32f7e907a5eb73e880c567c699569081608ed7a"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 0,
      "deletions": 6
    },
    "files": [
      {
        "sha": "fcd01661fe90a11546e2e532053ebf0b66bf06f5",
        "filename": "src/span.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/397e5eda38144147330163e7a51413ac01d1d6f5/src/span.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/397e5eda38144147330163e7a51413ac01d1d6f5/src/span.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/span.h?ref=397e5eda38144147330163e7a51413ac01d1d6f5",
        "patch": "@@ -61,12 +61,6 @@ class Span\n     template <typename O, typename std::enable_if<std::is_convertible<O (*)[], C (*)[]>::value, int>::type = 0>\n     constexpr Span(const Span<O>& other) noexcept : m_data(other.m_data), m_size(other.m_size) {}\n \n-    /** Default copy constructor. */\n-    constexpr Span(const Span&) noexcept = default;\n-\n-    /** Default assignment operator. */\n-    Span& operator=(const Span& other) noexcept = default;\n-\n     /** Construct a Span from an array. This matches the corresponding C++20 std::span constructor. */\n     template <int N>\n     constexpr Span(C (&a)[N]) noexcept : m_data(a), m_size(N) {}"
      }
    ]
  },
  {
    "sha": "e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTNiNWFiMzdjYTZmOWM5NDk0ODc3NTNjMDFiNzMwOGJhMGNmYTc3",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2020-06-25T21:25:31Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2020-06-25T22:00:32Z"
      },
      "message": "span: add lifetimebound attribute\n\nSee http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0936r0.pdf for\nreference.\n\nThis helps to guard against dangling references caused by construction from\ntemporaries such as:\n\n    Span<const int> sp(std::vector<int>{1,2,3});",
      "tree": {
        "sha": "3ec2f58e6e43b6098e4afe92bb9574babde70940",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ec2f58e6e43b6098e4afe92bb9574babde70940"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e53b5ab37ca6f9c949487753c01b7308ba0cfa77/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "397e5eda38144147330163e7a51413ac01d1d6f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/397e5eda38144147330163e7a51413ac01d1d6f5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/397e5eda38144147330163e7a51413ac01d1d6f5"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9d988828f29855706552e98af76b7a1e7587934a",
        "filename": "src/span.h",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e53b5ab37ca6f9c949487753c01b7308ba0cfa77/src/span.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e53b5ab37ca6f9c949487753c01b7308ba0cfa77/src/span.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/span.h?ref=e53b5ab37ca6f9c949487753c01b7308ba0cfa77",
        "patch": "@@ -18,6 +18,12 @@\n #define ASSERT_IF_DEBUG(x)\n #endif\n \n+#if defined(__clang__) && __has_attribute(lifetimebound)\n+#define SPAN_ATTR_LIFETIMEBOUND [[clang::lifetimebound]]\n+#else\n+#define SPAN_ATTR_LIFETIMEBOUND\n+#endif\n+\n /** A Span is an object that can refer to a contiguous sequence of objects.\n  *\n  * It implements a subset of C++20's std::span.\n@@ -73,7 +79,7 @@ class Span\n      * Note that this restriction does not exist when converting arrays or other Spans (see above).\n      */\n     template <typename V, typename std::enable_if<(std::is_const<C>::value || std::is_lvalue_reference<V>::value) && std::is_convertible<typename std::remove_pointer<decltype(std::declval<V&>().data())>::type (*)[], C (*)[]>::value && std::is_convertible<decltype(std::declval<V&>().size()), std::size_t>::value, int>::type = 0>\n-    constexpr Span(V&& v) noexcept : m_data(v.data()), m_size(v.size()) {}\n+    constexpr Span(V&& v SPAN_ATTR_LIFETIMEBOUND) noexcept : m_data(v.data()), m_size(v.size()) {}\n \n     constexpr C* data() const noexcept { return m_data; }\n     constexpr C* begin() const noexcept { return m_data; }"
      }
    ]
  }
]