[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648947855",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-648947855",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374",
    "id": 648947855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODk0Nzg1NQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-24T17:08:10Z",
    "updated_at": "2020-06-24T17:08:10Z",
    "author_association": "MEMBER",
    "body": "cc @sipa",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648947855/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649133220",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-649133220",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374",
    "id": 649133220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTEzMzIyMA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-24T23:50:59Z",
    "updated_at": "2020-06-29T04:57:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19364 (net processing: Move orphan reprocessing to a global by jnewbery)\n* #18044 (Use wtxid for transaction relay by sdaftuar)\n* #16878 (Fix non-deterministic coverage of test DoS_mapOrphans by davereikher)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649133220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649362328",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-649362328",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374",
    "id": 649362328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTM2MjMyOA==",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?u=06eb9ae4f9b3f954056098860decccbf1340e40f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-25T08:23:28Z",
    "updated_at": "2020-06-25T08:23:28Z",
    "author_association": "MEMBER",
    "body": "So, am I correct that we have this redundant `g_orphan_list`, and we can use the map instead?\r\nBut then the issue is that taking a random element from a map is expensive (asymptotically)?\r\n\r\nIf that's the case, I don't have strong opinion here. The code seems correct, but the trade-offs I don't know.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649362328/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649536293",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-649536293",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374",
    "id": 649536293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTUzNjI5Mw==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-25T13:19:57Z",
    "updated_at": "2020-06-25T13:22:01Z",
    "author_association": "MEMBER",
    "body": "Updated 1263a647921a32d8675fc4f18d9c7a4bef12c6c9 -> 4286e3907d79199bc44e4cf6f1c45635339614e2 ([pr19374.01](https://github.com/hebasto/bitcoin/commits/pr19374.01) -> [pr19374.02](https://github.com/hebasto/bitcoin/commits/pr19374.02), [diff](https://github.com/hebasto/bitcoin/compare/pr19374.01..pr19374.02)):\r\n\r\n- implemented @sipa's [idea](https://github.com/bitcoin/bitcoin/pull/14626#discussion_r445017918):\r\n> If `mapOrphanTransactions` was say an unordered_map, and was using salted hash for its _internal_ hashing (to convert txids to bucket positions) like is used in some places, then this would perhaps not be an issue.\r\n\r\n---\r\n\r\nBenchmarking results (using #19377):\r\n- master\r\n```\r\n$ ./src/bench/bench_bitcoin -filter=\"OrphanTxPool\"\r\n# Benchmark, evals, iterations, total, min, max, median\r\nOrphanTxPool, 5, 10000, 2.42326, 4.83155e-05, 4.87947e-05, 4.83993e-0\r\n```\r\n- this PR partially -- only `std::map` replaced with `std::unordered_map` (4c2f2b0e6df359208031f059afd3ef395367ec7f)\r\n```\r\n$ ./src/bench/bench_bitcoin -filter=\"OrphanTxPool\"\r\n# Benchmark, evals, iterations, total, min, max, median\r\nOrphanTxPool, 5, 10000, 2.15019, 4.28047e-05, 4.33479e-05, 4.29747e-05\r\n```\r\n\r\n- this PR (additionally dropped `g_orphan_list`)\r\n```\r\n$ ./src/bench/bench_bitcoin -filter=\"OrphanTxPool\"\r\n# Benchmark, evals, iterations, total, min, max, median\r\nOrphanTxPool, 5, 10000, 1.87376, 3.73627e-05, 3.78177e-05, 3.7388e-05\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649536293/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650557986",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-650557986",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374",
    "id": 650557986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDU1Nzk4Ng==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-27T12:57:04Z",
    "updated_at": "2020-06-27T12:57:04Z",
    "author_association": "MEMBER",
    "body": "Updated 4286e3907d79199bc44e4cf6f1c45635339614e2 -> 538a57f2fbf573d7a2ab3e7fb1a05650fd64d29b ([pr19374.02](https://github.com/hebasto/bitcoin/commits/pr19374.02) -> [pr19374.03](https://github.com/hebasto/bitcoin/commits/pr19374.03), [diff](https://github.com/hebasto/bitcoin/compare/pr19374.02..pr19374.03)):\r\n\r\n- addressed @vasild's [comment](https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446142983):\r\n> Actually, there is a bigger problem which the above patch would not solve - all iterators to `mapOrphanTransactions` might be invalidated by an insertion to it\r\n\r\n- addressed @jnewbery's [comment](https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445651273):\r\n> We already have one of these. It's called `SaltedTxidHasher` in txmempool.cpp.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/650557986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651012944",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-651012944",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374",
    "id": 651012944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTAxMjk0NA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-29T08:28:00Z",
    "updated_at": "2020-06-29T08:28:00Z",
    "author_association": "MEMBER",
    "body": "Updated 538a57f2fbf573d7a2ab3e7fb1a05650fd64d29b -> d02fcd0d45f428f73bd1de8a7a411fd34216d2fc ([pr19374.03](https://github.com/hebasto/bitcoin/commits/pr19374.03) -> [pr19374.04](https://github.com/hebasto/bitcoin/commits/pr19374.04), [diff](https://github.com/hebasto/bitcoin/compare/pr19374.03..pr19374.04)):\r\n\r\n- implemented uncontroversial and robust erase from `std::unordered_map`",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651012944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651332142",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-651332142",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374",
    "id": 651332142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTMzMjE0Mg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-29T20:08:03Z",
    "updated_at": "2020-06-29T20:08:03Z",
    "author_association": "MEMBER",
    "body": "I don't think the new random eviction logic leads to uniform independent events. See comment https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447219623.\r\n\r\nAn alternative way to do this, which I think would be closer to uniform, independent events would be to go back to using an ordered map, but key by salted-txid. When the 101st transaction needs to be added to the map, then evict the tx with upper_bound of the salted-txid of the tx-to-be-inserted. We only ever evict an orphan transaction immediately after adding the 101st, and it should be fine to reverse that order (evict-then-insert rather than insert-then-evict).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/651332142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652844721",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-652844721",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374",
    "id": 652844721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjg0NDcyMQ==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T07:46:15Z",
    "updated_at": "2020-07-02T07:46:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jnewbery that is an interesting observation!\r\n\r\nBackground\r\n---\r\n\r\nQuickly I thought that in the vector (before this PR) we insert at the end and remove a random element, whereas with the hash table (unordered_map, this PR) we insert at a random position and remove from the front, so it shouldn't make a difference. However, there is a catch!\r\n\r\nWith the hash table we insert at a random position at the hash table array, which is not the same as \"at a random position within the existent elements\" (thanks for the elaboration over IM!). If the existent elements are grouped near the end of the hash table array, then inserting at a random position at that hash table array will likely make the new element the leftmost one (and so it will be evicted soon). And this is exactly what happens when we keep removing the leftmost elements - grouping near the end and very often removing the element we just added.\r\n\r\nStats\r\n---\r\n\r\nI gathered some statistics to verify the above - I did 100000x (`AddOrphanTx()` + `LimitOrphanTxSize()`) and at each iteration I recorded:\r\n* the age of the transaction that is being evicted (a transaction enters with age 0 and its age is incremented with 1 on each of the 100000 iterations)\r\n* the age of the oldest transaction in the container\r\n\r\nmaster @ 205b87d2f:\r\n![master](https://user-images.githubusercontent.com/266751/86328148-a62d3500-bc44-11ea-8c0a-face4a5c79cf.png)\r\n\r\npr @ d02fcd0d:\r\n![pr](https://user-images.githubusercontent.com/266751/86328212-bfce7c80-bc44-11ea-86a5-fb1914611cd0.png)\r\n\r\npr @ d02fcd0d + improvement suggested by @jnewbery:\r\n![pr_improved](https://user-images.githubusercontent.com/266751/86329400-66674d00-bc46-11ea-9a27-9f28e1700bb6.png)\r\n\r\nThe improvement consists of using this container:\r\n```cpp\r\nclass Cmp\r\n{\r\n    public:\r\n        bool operator()(const uint256& lhs, const uint256& rhs) const {\r\n            return m_hasher(lhs) < m_hasher(rhs);\r\n        }\r\n\r\n    private:\r\n        const SaltedTxidHasher m_hasher;\r\n};\r\nusing OrphanTxPool = std::map<uint256, COrphanTx, Cmp>;\r\n```\r\nswapping the order of the calls to `AddOrphanTx()` and `LimitOrphanTxSize()`, passing the newcomer hash to `LimitOrphanTxSize()` and evicting `mapOrphanTransactions.upper_bound(newcomer_hash)` (or `mapOrphanTransactions.begin()` if `upper_bound()` returns `end()`).\r\n\r\nAnalysis\r\n---\r\n\r\n* In the case of \"pr @ d02fcd0d\" in 99494 of 100000 cases we evict the transaction that has just been added.\r\n* In \"master @ 205b87d2f\" and in \"pr @ d02fcd0d + improvement\" we most often evict the transaction that has just been added - about 1000 times of the 100000 iterations. Why? Both graphs look strikingly similar. Why?\r\n\r\nVerdict\r\n---\r\nLet's go with @jnewbery's improvement suggestion!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652844721/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652876093",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-652876093",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374",
    "id": 652876093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjg3NjA5Mw==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T08:46:46Z",
    "updated_at": "2020-07-02T08:46:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "> we most often evict the transaction that has just been added ... Why?\r\n\r\nHere is some explanation - the chance of a transaction surviving\r\n* one eviction is `99/100 = 0.99`\r\n* two evictions is `99/100 * 99/100 = (99/100)^2 = 0.98`\r\n* 50 evictions is `(99/100)^50 = 0.6`\r\n* 400 evictions is `(99/100)^400 = 0.018`",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/652876093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653049374",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-653049374",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374",
    "id": 653049374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzA0OTM3NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T14:45:43Z",
    "updated_at": "2020-07-02T14:45:43Z",
    "author_association": "MEMBER",
    "body": "Thanks for the very detailed investigation @vasild !\r\n\r\n> > we most often evict the transaction that has just been added ... Why?\r\n\r\n> Here is some explanation - the chance of a transaction surviving\r\n\r\nRight. In current master, eviction is a negative binomial distribution with r=1 and p=1/101. Each eviction is an independent Bernoulli trial, and as you point out, the chance of survival decreases geometrically over time. If you go to https://homepage.divms.uiowa.edu/~mbognar/applets/nb1.html and plug in r=1 and p=0.01, you'll see the expected graph.\r\n\r\nEvictions in the current branch of this PR are _not_ independent events. As you insert random elements into the set and remove from the left, the set skews more and more to the right, so in future insert-and-remove-one events, the just-inserted element is more and more likely to be the leftmost.\r\n\r\nEviction in my suggested change are also not perfectly independent events, but I expect they're 'good enough'. Adding an element to the set and removing the next along should keep the set randomly distributed across the entire range, so every element has ~equal chance of being removed in the next insert-and-remove-one event.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653049374/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653291423",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-653291423",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374",
    "id": 653291423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzI5MTQyMw==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-03T01:55:06Z",
    "updated_at": "2020-07-03T01:55:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "What's the motivation for this change? It seems like an awful lot of work to save what seems to be a single pointer per orphan transaction...",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653291423/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653352228",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-653352228",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374",
    "id": 653352228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzM1MjIyOA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-03T05:11:30Z",
    "updated_at": "2020-07-03T05:11:30Z",
    "author_association": "MEMBER",
    "body": "> What's the motivation for this change? It seems like an awful lot of work to save what seems to be a single pointer per orphan transaction...\r\n\r\nTo achieve uniformity of transaction selection for its eviction from the orphan pool #14626 added the `g_orphan_list` global with supported code. The motivation for this PR is to achieve the same uniformity without the added in #14626 stuff.\r\nThe initial [approach](https://github.com/hebasto/bitcoin/commits/pr19374.01) was quite simple and straightforward but [not effective](https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445081491).\r\n\r\nThe recent changes are really unjustified. So closing.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653352228/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653444554",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-653444554",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19374",
    "id": 653444554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzQ0NDU1NA==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-03T09:16:59Z",
    "updated_at": "2020-07-03T09:16:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just out of curiosity, here is the eviction distribution without https://github.com/bitcoin/bitcoin/pull/14626\r\n\r\n![master_revert14626](https://user-images.githubusercontent.com/266751/86453613-5f137280-bd1e-11ea-85e4-98142caace3d.png)\r\n\r\n<details>\r\n<summary>revert #14626 on top of master @ 7d9008f43 and add sampling</summary>\r\n\r\n```diff\r\ncommit 944e7a8a0 (HEAD -> master)\r\nParent: 5d1e3b803\r\nAuthor:     Hennadii Stepanov <32963518+hebasto@users.noreply.github.com>\r\nAuthorDate: Fri Jun 26 18:09:27 2020 +0300\r\nCommit:     Vasil Dimov <vd@FreeBSD.org>\r\nCommitDate: Fri Jul 3 11:02:51 2020 +0200\r\ngpg: Signature made Fri Jul  3 11:02:58 2020 CEST\r\ngpg:                using RSA key E64D8D45614DB07545D9CCC154DF06F64B55CBBF\r\ngpg: Good signature from \"Vasil Dimov <vd@myforest.net>\" [ultimate]\r\ngpg:                 aka \"Vasil Dimov <vd@FreeBSD.org>\" [ultimate]\r\ngpg:                 aka \"Vasil Dimov <vasild@gmail.com>\" [ultimate]\r\n\r\n\r\n    collect stats + test\r\n\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex a9f5ce429..29a53be2e 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -141,12 +141,20 @@ struct COrphanTx {\r\n     int64_t nTimeExpire;\r\n     size_t list_pos;\r\n };\r\n RecursiveMutex g_cs_orphans;\r\n std::map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(g_cs_orphans);\r\n \r\n+// keys: transaction age at the time of its eviction from mapOrphanTransactions\r\n+// values: number of transactions evicted that were that old\r\n+std::map<uint32_t, uint32_t> g_eviction_ages;\r\n+\r\n+// keys: the age of the oldest transaction in mapOrphanTransactions when some tx is evicted\r\n+// values: number of times this age was the maximum age after some tx is evicted\r\n+std::map<uint32_t, uint32_t> g_max_ages;\r\n+\r\n void EraseOrphansFor(NodeId peer);\r\n \r\n /** Increase a node's misbehavior score. */\r\n void Misbehaving(NodeId nodeid, int howmuch, const std::string& message=\"\") EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n \r\n // Internal stuff\r\n@@ -932,12 +940,43 @@ bool AddOrphanTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRE\r\n \r\n     LogPrint(BCLog::MEMPOOL, \"stored orphan tx %s (mapsz %u outsz %u)\\n\", hash.ToString(),\r\n              mapOrphanTransactions.size(), mapOrphanTransactionsByPrev.size());\r\n     return true;\r\n }\r\n \r\n+void PrintOrphanStats() EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans)\r\n+{\r\n+    std::cout << \"eviction_ages = np.array([\";\r\n+    for (const auto& e : g_eviction_ages) {\r\n+        const auto& age = e.first;\r\n+        std::cout << age << \",\";\r\n+    }\r\n+    std::cout << \"])\" << std::endl;\r\n+\r\n+    std::cout << \"eviction_counts = [\";\r\n+    for (const auto& e : g_eviction_ages) {\r\n+        const auto& count = e.second;\r\n+        std::cout << count << \",\";\r\n+    }\r\n+    std::cout << \"]\" << std::endl;\r\n+\r\n+    std::cout << \"max_ages = np.array([\";\r\n+    for (const auto& e : g_max_ages) {\r\n+        const auto& age = e.first;\r\n+        std::cout << age << \",\";\r\n+    }\r\n+    std::cout << \"])\" << std::endl;\r\n+\r\n+    std::cout << \"max_counts = [\";\r\n+    for (const auto& e : g_max_ages) {\r\n+        const auto& count = e.second;\r\n+        std::cout << count << \",\";\r\n+    }\r\n+    std::cout << \"]\" << std::endl;\r\n+}\r\n+\r\n int static EraseOrphanTx(uint256 hash) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans)\r\n {\r\n     std::map<uint256, COrphanTx>::iterator it = mapOrphanTransactions.find(hash);\r\n     if (it == mapOrphanTransactions.end())\r\n         return 0;\r\n     for (const CTxIn& txin : it->second.tx->vin)\r\n@@ -979,13 +1018,13 @@ void EraseOrphansFor(NodeId peer)\r\n         }\r\n     }\r\n     if (nErased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx from peer=%d\\n\", nErased, peer);\r\n }\r\n \r\n \r\n-unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans)\r\n+unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans, uint32_t i)\r\n {\r\n     LOCK(g_cs_orphans);\r\n \r\n     unsigned int nEvicted = 0;\r\n     static int64_t nNextSweep;\r\n     int64_t nNow = GetTime();\r\n@@ -1012,12 +1051,24 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans)\r\n     {\r\n         // Evict a random orphan:\r\n         uint256 randomhash = rng.rand256();\r\n         std::map<uint256, COrphanTx>::iterator it = mapOrphanTransactions.lower_bound(randomhash);\r\n         if (it == mapOrphanTransactions.end())\r\n             it = mapOrphanTransactions.begin();\r\n+\r\n+        const uint32_t age_of_evicted = i - it->second.tx->nLockTime;\r\n+        ++g_eviction_ages[age_of_evicted];\r\n+        uint32_t oldest_tx_age = 0;\r\n+        for (const auto& t : mapOrphanTransactions) {\r\n+            const uint32_t current_tx_age = i - t.second.tx->nLockTime;\r\n+            if (current_tx_age > oldest_tx_age) {\r\n+                oldest_tx_age = current_tx_age;\r\n+            }\r\n+        }\r\n+        ++g_max_ages[oldest_tx_age];\r\n+\r\n         EraseOrphanTx(it->first);\r\n         ++nEvicted;\r\n     }\r\n     return nEvicted;\r\n }\r\n \r\n@@ -2869,13 +2920,13 @@ void ProcessMessage(\r\n                     if (!AlreadyHave(_inv, mempool)) RequestTx(State(pfrom.GetId()), _inv.hash, current_time);\r\n                 }\r\n                 AddOrphanTx(ptx, pfrom.GetId());\r\n \r\n                 // DoS prevention: do not allow mapOrphanTransactions to grow unbounded (see CVE-2012-3789)\r\n                 unsigned int nMaxOrphanTx = (unsigned int)std::max((int64_t)0, gArgs.GetArg(\"-maxorphantx\", DEFAULT_MAX_ORPHAN_TRANSACTIONS));\r\n-                unsigned int nEvicted = LimitOrphanTxSize(nMaxOrphanTx);\r\n+                unsigned int nEvicted = LimitOrphanTxSize(nMaxOrphanTx, 0);\r\n                 if (nEvicted > 0) {\r\n                     LogPrint(BCLog::MEMPOOL, \"mapOrphan overflow, removed %u tx\\n\", nEvicted);\r\n                 }\r\n             } else {\r\n                 LogPrint(BCLog::MEMPOOL, \"not keeping orphan with rejected parents %s\\n\",tx.GetHash().ToString());\r\n                 // We will continue to reject this tx since it has rejected\r\ndiff --git a/src/test/denialofservice_tests.cpp b/src/test/denialofservice_tests.cpp\r\nindex 348b17053..75b59871c 100644\r\n--- a/src/test/denialofservice_tests.cpp\r\n+++ b/src/test/denialofservice_tests.cpp\r\n@@ -40,14 +40,15 @@ struct CConnmanTest : public CConnman {\r\n         vNodes.clear();\r\n     }\r\n };\r\n \r\n // Tests these internal-to-net_processing.cpp methods:\r\n extern bool AddOrphanTx(const CTransactionRef& tx, NodeId peer);\r\n+extern void PrintOrphanStats();\r\n extern void EraseOrphansFor(NodeId peer);\r\n-extern unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans);\r\n+extern unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans, uint32_t i);\r\n extern void Misbehaving(NodeId nodeid, int howmuch, const std::string& message=\"\");\r\n \r\n struct COrphanTx {\r\n     CTransactionRef tx;\r\n     NodeId fromPeer;\r\n     int64_t nTimeExpire;\r\n@@ -436,15 +437,40 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\r\n         size_t sizeBefore = mapOrphanTransactions.size();\r\n         EraseOrphansFor(i);\r\n         BOOST_CHECK(mapOrphanTransactions.size() < sizeBefore);\r\n     }\r\n \r\n     // Test LimitOrphanTxSize() function:\r\n-    LimitOrphanTxSize(40);\r\n+    LimitOrphanTxSize(40, 0);\r\n     BOOST_CHECK(mapOrphanTransactions.size() <= 40);\r\n-    LimitOrphanTxSize(10);\r\n+    LimitOrphanTxSize(10, 0);\r\n     BOOST_CHECK(mapOrphanTransactions.size() <= 10);\r\n-    LimitOrphanTxSize(0);\r\n+    LimitOrphanTxSize(0, 0);\r\n     BOOST_CHECK(mapOrphanTransactions.empty());\r\n }\r\n \r\n+BOOST_AUTO_TEST_CASE(lifetime)\r\n+{\r\n+    CKey key;\r\n+    key.MakeNewKey(true);\r\n+    FillableSigningProvider keystore;\r\n+    BOOST_CHECK(keystore.AddKey(key));\r\n+\r\n+    for (uint32_t i = 0; i < 100000; i++) {\r\n+        CMutableTransaction tx;\r\n+        tx.vin.resize(1);\r\n+        tx.vin[0].prevout.n = 0;\r\n+        tx.vin[0].prevout.hash = InsecureRand256();\r\n+        tx.vin[0].scriptSig << OP_1;\r\n+        tx.vout.resize(1);\r\n+        tx.vout[0].nValue = 1*CENT;\r\n+        tx.vout[0].scriptPubKey = GetScriptForDestination(PKHash(key.GetPubKey()));\r\n+        tx.nLockTime = i;\r\n+\r\n+        AddOrphanTx(MakeTransactionRef(tx), i);\r\n+        LimitOrphanTxSize(100, i);\r\n+    }\r\n+\r\n+    PrintOrphanStats();\r\n+}\r\n+\r\n BOOST_AUTO_TEST_SUITE_END()\r\n\r\ncommit 5d1e3b803\r\nParent: 7d9008f43\r\nAuthor:     Vasil Dimov <vd@FreeBSD.org>\r\nAuthorDate: Fri Jul 3 10:51:39 2020 +0200\r\nCommit:     Vasil Dimov <vd@FreeBSD.org>\r\nCommitDate: Fri Jul 3 10:51:39 2020 +0200\r\ngpg: Signature made Fri Jul  3 10:51:58 2020 CEST\r\ngpg:                using RSA key E64D8D45614DB07545D9CCC154DF06F64B55CBBF\r\ngpg: Good signature from \"Vasil Dimov <vd@myforest.net>\" [ultimate]\r\ngpg:                 aka \"Vasil Dimov <vd@FreeBSD.org>\" [ultimate]\r\ngpg:                 aka \"Vasil Dimov <vasild@gmail.com>\" [ultimate]\r\n\r\n\r\n    revert part of https://github.com/bitcoin/bitcoin/pull/14626\r\n\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 80e58a6db..a9f5ce429 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -1008,14 +1008,17 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans)\r\n         if (nErased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx due to expiration\\n\", nErased);\r\n     }\r\n     FastRandomContext rng;\r\n     while (mapOrphanTransactions.size() > nMaxOrphans)\r\n     {\r\n         // Evict a random orphan:\r\n-        size_t randompos = rng.randrange(g_orphan_list.size());\r\n-        EraseOrphanTx(g_orphan_list[randompos]->first);\r\n+        uint256 randomhash = rng.rand256();\r\n+        std::map<uint256, COrphanTx>::iterator it = mapOrphanTransactions.lower_bound(randomhash);\r\n+        if (it == mapOrphanTransactions.end())\r\n+            it = mapOrphanTransactions.begin();\r\n+        EraseOrphanTx(it->first);\r\n         ++nEvicted;\r\n     }\r\n     return nEvicted;\r\n }\r\n \r\n /**\r\n```\r\n</details>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653444554/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445081491",
    "pull_request_review_id": 436892005,
    "id": 445081491,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA4MTQ5MQ==",
    "diff_hunk": "@@ -1008,11 +994,11 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans)\n         if (nErased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx due to expiration\\n\", nErased);\n     }\n     FastRandomContext rng;\n-    while (mapOrphanTransactions.size() > nMaxOrphans)\n-    {\n+    while (mapOrphanTransactions.size() > nMaxOrphans) {\n         // Evict a random orphan:\n-        size_t randompos = rng.randrange(g_orphan_list.size());\n-        EraseOrphanTx(g_orphan_list[randompos]->first);\n+        auto iter = mapOrphanTransactions.begin();\n+        std::advance(iter, rng.randrange(mapOrphanTransactions.size()));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "1263a647921a32d8675fc4f18d9c7a4bef12c6c9",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That's O(n) in the number of orphan transactions. I don't think that's acceptable.",
    "created_at": "2020-06-24T18:14:02Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445081491",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445081491"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445081491"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445081491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1000,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445092684",
    "pull_request_review_id": 436906200,
    "id": 445092684,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA5MjY4NA==",
    "diff_hunk": "@@ -1008,11 +994,11 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans)\n         if (nErased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx due to expiration\\n\", nErased);\n     }\n     FastRandomContext rng;\n-    while (mapOrphanTransactions.size() > nMaxOrphans)\n-    {\n+    while (mapOrphanTransactions.size() > nMaxOrphans) {\n         // Evict a random orphan:\n-        size_t randompos = rng.randrange(g_orphan_list.size());\n-        EraseOrphanTx(g_orphan_list[randompos]->first);\n+        auto iter = mapOrphanTransactions.begin();\n+        std::advance(iter, rng.randrange(mapOrphanTransactions.size()));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "1263a647921a32d8675fc4f18d9c7a4bef12c6c9",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Even with given `DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100` ?",
    "created_at": "2020-06-24T18:34:29Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445092684",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445092684"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445092684"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445092684/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1000,
    "side": "RIGHT",
    "in_reply_to_id": 445081491
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445150293",
    "pull_request_review_id": 436979539,
    "id": 445150293,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE1MDI5Mw==",
    "diff_hunk": "@@ -1008,11 +994,11 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans)\n         if (nErased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx due to expiration\\n\", nErased);\n     }\n     FastRandomContext rng;\n-    while (mapOrphanTransactions.size() > nMaxOrphans)\n-    {\n+    while (mapOrphanTransactions.size() > nMaxOrphans) {\n         // Evict a random orphan:\n-        size_t randompos = rng.randrange(g_orphan_list.size());\n-        EraseOrphanTx(g_orphan_list[randompos]->first);\n+        auto iter = mapOrphanTransactions.begin();\n+        std::advance(iter, rng.randrange(mapOrphanTransactions.size()));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "1263a647921a32d8675fc4f18d9c7a4bef12c6c9",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Benchmarked on the [custom](https://github.com/hebasto/bitcoin/tree/200624-bench) branch:\r\n\r\n- master\r\n```\r\n$ ./src/bench/bench_bitcoin -filter=\"OrphanTxPool\"\r\n# Benchmark, evals, iterations, total, min, max, median\r\nOrphanTxPool, 5, 10000, 2.42326, 4.83155e-05, 4.87947e-05, 4.83993e-0\r\n```\r\n\r\n- this PR\r\n```\r\n$ ./src/bench/bench_bitcoin -filter=\"OrphanTxPool\"\r\n# Benchmark, evals, iterations, total, min, max, median\r\nOrphanTxPool, 5, 10000, 2.95478, 5.87594e-05, 5.95669e-05, 5.9013e-05\r\n```\r\n",
    "created_at": "2020-06-24T20:24:17Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445150293",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445150293"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445150293"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445150293/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1000,
    "side": "RIGHT",
    "in_reply_to_id": 445081491
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445201797",
    "pull_request_review_id": 437043889,
    "id": 445201797,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIwMTc5Nw==",
    "diff_hunk": "@@ -1008,11 +994,11 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans)\n         if (nErased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx due to expiration\\n\", nErased);\n     }\n     FastRandomContext rng;\n-    while (mapOrphanTransactions.size() > nMaxOrphans)\n-    {\n+    while (mapOrphanTransactions.size() > nMaxOrphans) {\n         // Evict a random orphan:\n-        size_t randompos = rng.randrange(g_orphan_list.size());\n-        EraseOrphanTx(g_orphan_list[randompos]->first);\n+        auto iter = mapOrphanTransactions.begin();\n+        std::advance(iter, rng.randrange(mapOrphanTransactions.size()));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "1263a647921a32d8675fc4f18d9c7a4bef12c6c9",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks for providing actual numbers. I agree it's not so much of a concern in light of those - though I'm also not convinced it's worth the code simplification, especially if we'd ever want/need to increase the maximum number of orphans.",
    "created_at": "2020-06-24T22:15:42Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445201797",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445201797"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445201797"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445201797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1000,
    "side": "RIGHT",
    "in_reply_to_id": 445081491
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445552411",
    "pull_request_review_id": 437486023,
    "id": 445552411,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU1MjQxMQ==",
    "diff_hunk": "@@ -1008,11 +994,11 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans)\n         if (nErased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx due to expiration\\n\", nErased);\n     }\n     FastRandomContext rng;\n-    while (mapOrphanTransactions.size() > nMaxOrphans)\n-    {\n+    while (mapOrphanTransactions.size() > nMaxOrphans) {\n         // Evict a random orphan:\n-        size_t randompos = rng.randrange(g_orphan_list.size());\n-        EraseOrphanTx(g_orphan_list[randompos]->first);\n+        auto iter = mapOrphanTransactions.begin();\n+        std::advance(iter, rng.randrange(mapOrphanTransactions.size()));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "1263a647921a32d8675fc4f18d9c7a4bef12c6c9",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "[Updated](https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-649536293).",
    "created_at": "2020-06-25T13:20:54Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445552411",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445552411"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445552411"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445552411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1000,
    "side": "RIGHT",
    "in_reply_to_id": 445081491
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445640819",
    "pull_request_review_id": 437603697,
    "id": 445640819,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY0MDgxOQ==",
    "diff_hunk": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_UINT256HASH_H\n+#define BITCOIN_UTIL_UINT256HASH_H\n+\n+#include <uint256.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+\n+class uint256Hash",
    "path": "src/util/uint256hash.h",
    "position": null,
    "original_position": 13,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "4286e3907d79199bc44e4cf6f1c45635339614e2",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: `Uint256Hash` to abide to the naming convention.",
    "created_at": "2020-06-25T15:21:50Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445640819",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445640819"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445640819"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445640819/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 13,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445646256",
    "pull_request_review_id": 437603697,
    "id": 445646256,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY0NjI1Ng==",
    "diff_hunk": "@@ -230,9 +232,7 @@ namespace {\n             return &(*a) < &(*b);\n         }\n     };\n-    std::map<COutPoint, std::set<std::map<uint256, COrphanTx>::iterator, IteratorComparator>> mapOrphanTransactionsByPrev GUARDED_BY(g_cs_orphans);\n-\n-    std::vector<std::map<uint256, COrphanTx>::iterator> g_orphan_list GUARDED_BY(g_cs_orphans); //! For random eviction\n+    std::map<COutPoint, std::set<OrphanTxPool::iterator, IteratorComparator>> mapOrphanTransactionsByPrev GUARDED_BY(g_cs_orphans);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "4286e3907d79199bc44e4cf6f1c45635339614e2",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`IteratorComparator` compares the addresses of the elements in the container! With `std::unordered_map`, I guess, if rehashing occurs, those could change in an unpredictable way, confusing the `std::set` container. Maybe at some point the `std::set` could end up having element `A` before element `B` (two iterators to the `std::unordered_map`) but they now compare `A > B` (after a rehash).",
    "created_at": "2020-06-25T15:29:18Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445646256",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445646256"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445646256"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445646256/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 233,
    "start_side": "LEFT",
    "line": null,
    "original_line": 235,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445651273",
    "pull_request_review_id": 437617579,
    "id": 445651273,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY1MTI3Mw==",
    "diff_hunk": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_UINT256HASH_H\n+#define BITCOIN_UTIL_UINT256HASH_H\n+\n+#include <uint256.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+\n+class uint256Hash",
    "path": "src/util/uint256hash.h",
    "position": null,
    "original_position": 13,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "4286e3907d79199bc44e4cf6f1c45635339614e2",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We already have one of these. It's called `SaltedTxidHasher` in txmempool.cpp. Feel free to take this commit that moves it to validation: https://github.com/jnewbery/bitcoin/commit/0ccd20536350ce0cbe9e453d50873a5bb6ca4d03 (not sure if there's a better home for it).",
    "created_at": "2020-06-25T15:36:47Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445651273",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445651273"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445651273"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445651273/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 13,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445653632",
    "pull_request_review_id": 437603697,
    "id": 445653632,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY1MzYzMg==",
    "diff_hunk": "@@ -969,10 +957,10 @@ void EraseOrphansFor(NodeId peer)\n {\n     LOCK(g_cs_orphans);\n     int nErased = 0;\n-    std::map<uint256, COrphanTx>::iterator iter = mapOrphanTransactions.begin();\n+    auto iter = mapOrphanTransactions.begin();\n     while (iter != mapOrphanTransactions.end())\n     {\n-        std::map<uint256, COrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n+        const auto maybeErase = iter++;\n         if (maybeErase->second.fromPeer == peer)\n         {\n             nErased += EraseOrphanTx(maybeErase->second.tx->GetHash());",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 86,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "4286e3907d79199bc44e4cf6f1c45635339614e2",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There is a subtle difference between deleting elements from `std::map` and `std::unordered_map` while iterating on the container - with `std::unordered_map` the order of the elements may change. This is fixed in C++14: https://en.cppreference.com/w/cpp/container/unordered_map/erase\r\n> The  order of the elements that are not erased is preserved. (This makes it  possible to erase individual elements while iterating through the  container.) (since C++14)\r\n\r\nFor example, in C++11 the following may happen:\r\n* the `std::unordered_map` contains `A`, `B`, `C`, `D`\r\n* we have an iterator pointing to `B`, we copy it, advance it to `C` and erase `B` via the saved copy\r\n* now the advanced iterator is not invalidated and still points to `C`\r\n* however the order of the elements in the container is now `D`, `C`, `A`, so advancing the iterator until `end()` will work, but overall we would have visited `A` twice and not visited `D`.\r\n\r\nA possible workaround is to pile the iterators in a `std::vector` and only delete them after finishing of the iteration over the `std::unordered_map`.",
    "created_at": "2020-06-25T15:40:28Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445653632",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445653632"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445653632"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445653632/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 975,
    "start_side": "LEFT",
    "line": null,
    "original_line": 956,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445687904",
    "pull_request_review_id": 437664838,
    "id": 445687904,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY4NzkwNA==",
    "diff_hunk": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_UINT256HASH_H\n+#define BITCOIN_UTIL_UINT256HASH_H\n+\n+#include <uint256.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+\n+class uint256Hash",
    "path": "src/util/uint256hash.h",
    "position": null,
    "original_position": 13,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "4286e3907d79199bc44e4cf6f1c45635339614e2",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jnewbery Thanks!",
    "created_at": "2020-06-25T16:31:35Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445687904",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445687904"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445687904"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445687904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 13,
    "side": "RIGHT",
    "in_reply_to_id": 445651273
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445697374",
    "pull_request_review_id": 437676993,
    "id": 445697374,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5NzM3NA==",
    "diff_hunk": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_UINT256HASH_H\n+#define BITCOIN_UTIL_UINT256HASH_H\n+\n+#include <uint256.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+\n+class uint256Hash",
    "path": "src/util/uint256hash.h",
    "position": null,
    "original_position": 13,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "4286e3907d79199bc44e4cf6f1c45635339614e2",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Probably best to move it to a new module to avoid re-introducing the net_processing<->validation circular dependency?",
    "created_at": "2020-06-25T16:47:09Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445697374",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445697374"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445697374"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445697374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 13,
    "side": "RIGHT",
    "in_reply_to_id": 445651273
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445736795",
    "pull_request_review_id": 437728623,
    "id": 445736795,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTczNjc5NQ==",
    "diff_hunk": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_UINT256HASH_H\n+#define BITCOIN_UTIL_UINT256HASH_H\n+\n+#include <uint256.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+\n+class uint256Hash",
    "path": "src/util/uint256hash.h",
    "position": null,
    "original_position": 13,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "4286e3907d79199bc44e4cf6f1c45635339614e2",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Net processing already includes validation.h",
    "created_at": "2020-06-25T17:55:17Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445736795",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445736795"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445736795"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445736795/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 13,
    "side": "RIGHT",
    "in_reply_to_id": 445651273
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446121515",
    "pull_request_review_id": 438212302,
    "id": 446121515,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEyMTUxNQ==",
    "diff_hunk": "@@ -230,9 +232,7 @@ namespace {\n             return &(*a) < &(*b);\n         }\n     };\n-    std::map<COutPoint, std::set<std::map<uint256, COrphanTx>::iterator, IteratorComparator>> mapOrphanTransactionsByPrev GUARDED_BY(g_cs_orphans);\n-\n-    std::vector<std::map<uint256, COrphanTx>::iterator> g_orphan_list GUARDED_BY(g_cs_orphans); //! For random eviction\n+    std::map<COutPoint, std::set<OrphanTxPool::iterator, IteratorComparator>> mapOrphanTransactionsByPrev GUARDED_BY(g_cs_orphans);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "4286e3907d79199bc44e4cf6f1c45635339614e2",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This can be overcome by changing the `std::set` to `std::unordered_set`, removing the bizarre \"order by address\" `IteratorComparator` and hashing by the tx id. I checked that nowhere in the code we rely on the order of the elements in the `std::set` (as expected, because they are ordered by their address, which is \"random\" or unpredictable to the application). Something like this:\r\n\r\n<details>\r\n<summary>patch</summary>\r\n\r\n```diff\r\ndiff --git i/src/net_processing.cpp w/src/net_processing.cpp\r\nindex d72edae6d..a02945d7e 100644\r\n--- i/src/net_processing.cpp\r\n+++ w/src/net_processing.cpp\r\n@@ -221,21 +221,25 @@ namespace {\r\n     /** Relay map */\r\n     typedef std::map<uint256, CTransactionRef> MapRelay;\r\n     MapRelay mapRelay GUARDED_BY(cs_main);\r\n     /** Expiration-time ordered list of (expire time, relay map entry) pairs. */\r\n     std::deque<std::pair<int64_t, MapRelay::iterator>> vRelayExpiration GUARDED_BY(cs_main);\r\n \r\n-    struct IteratorComparator\r\n+    class IteratorHash\r\n     {\r\n-        template<typename I>\r\n-        bool operator()(const I& a, const I& b) const\r\n+    public:\r\n+        size_t operator()(const OrphanTxPool::iterator& it) const\r\n         {\r\n-            return &(*a) < &(*b);\r\n+            return m_hasher(it->first);\r\n         }\r\n+\r\n+    private:\r\n+        const uint256Hash m_hasher;\r\n     };\r\n-    std::map<COutPoint, std::set<OrphanTxPool::iterator, IteratorComparator>> mapOrphanTransactionsByPrev GUARDED_BY(g_cs_orphans);\r\n+\r\n+    std::map<COutPoint, std::unordered_set<OrphanTxPool::iterator, IteratorHash>> mapOrphanTransactionsByPrev GUARDED_BY(g_cs_orphans);\r\n \r\n     static size_t vExtraTxnForCompactIt GUARDED_BY(g_cs_orphans) = 0;\r\n     static std::vector<std::pair<uint256, CTransactionRef>> vExtraTxnForCompact GUARDED_BY(g_cs_orphans);\r\n } // namespace\r\n \r\n namespace {\r\n```\r\n</details>",
    "created_at": "2020-06-26T11:14:55Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446121515",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446121515"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446121515"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446121515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 233,
    "start_side": "LEFT",
    "line": null,
    "original_line": 235,
    "side": "RIGHT",
    "in_reply_to_id": 445646256
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446142983",
    "pull_request_review_id": 438240156,
    "id": 446142983,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0Mjk4Mw==",
    "diff_hunk": "@@ -230,9 +232,7 @@ namespace {\n             return &(*a) < &(*b);\n         }\n     };\n-    std::map<COutPoint, std::set<std::map<uint256, COrphanTx>::iterator, IteratorComparator>> mapOrphanTransactionsByPrev GUARDED_BY(g_cs_orphans);\n-\n-    std::vector<std::map<uint256, COrphanTx>::iterator> g_orphan_list GUARDED_BY(g_cs_orphans); //! For random eviction\n+    std::map<COutPoint, std::set<OrphanTxPool::iterator, IteratorComparator>> mapOrphanTransactionsByPrev GUARDED_BY(g_cs_orphans);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "4286e3907d79199bc44e4cf6f1c45635339614e2",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Actually, there is a bigger problem which the above patch would not solve - all iterators to `mapOrphanTransactions` might be invalidated by an insertion to it:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/4286e3907d79199bc44e4cf6f1c45635339614e2/src/net_processing.cpp#L924\r\n\r\nI.e. the above line might invalidate all iterators to `mapOrphanTransactions` that are stored in `mapOrphanTransactionsByPrev`.",
    "created_at": "2020-06-26T12:05:50Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446142983",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446142983"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446142983"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446142983/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 233,
    "start_side": "LEFT",
    "line": null,
    "original_line": 235,
    "side": "RIGHT",
    "in_reply_to_id": 445646256
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446524394",
    "pull_request_review_id": 438696893,
    "id": 446524394,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyNDM5NA==",
    "diff_hunk": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_UINT256HASH_H\n+#define BITCOIN_UTIL_UINT256HASH_H\n+\n+#include <uint256.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+\n+class uint256Hash",
    "path": "src/util/uint256hash.h",
    "position": null,
    "original_position": 13,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "4286e3907d79199bc44e4cf6f1c45635339614e2",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "[Switched](https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-650557986) to `SaltedTxidHasher` as [suggested](https://github.com/bitcoin/bitcoin/pull/19374#discussion_r445651273) by @jnewbery.",
    "created_at": "2020-06-27T12:59:11Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446524394",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446524394"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446524394"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446524394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 13,
    "side": "RIGHT",
    "in_reply_to_id": 445640819
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446524436",
    "pull_request_review_id": 438696920,
    "id": 446524436,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyNDQzNg==",
    "diff_hunk": "@@ -230,9 +232,7 @@ namespace {\n             return &(*a) < &(*b);\n         }\n     };\n-    std::map<COutPoint, std::set<std::map<uint256, COrphanTx>::iterator, IteratorComparator>> mapOrphanTransactionsByPrev GUARDED_BY(g_cs_orphans);\n-\n-    std::vector<std::map<uint256, COrphanTx>::iterator> g_orphan_list GUARDED_BY(g_cs_orphans); //! For random eviction\n+    std::map<COutPoint, std::set<OrphanTxPool::iterator, IteratorComparator>> mapOrphanTransactionsByPrev GUARDED_BY(g_cs_orphans);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "4286e3907d79199bc44e4cf6f1c45635339614e2",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "[Updated](https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-650557986).",
    "created_at": "2020-06-27T12:59:40Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446524436",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446524436"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446524436"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446524436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 233,
    "start_side": "LEFT",
    "line": null,
    "original_line": 235,
    "side": "RIGHT",
    "in_reply_to_id": 445646256
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446524482",
    "pull_request_review_id": 438696953,
    "id": 446524482,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyNDQ4Mg==",
    "diff_hunk": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_UINT256HASH_H\n+#define BITCOIN_UTIL_UINT256HASH_H\n+\n+#include <uint256.h>\n+\n+#include <cstddef>\n+#include <cstdint>\n+\n+class uint256Hash",
    "path": "src/util/uint256hash.h",
    "position": null,
    "original_position": 13,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "4286e3907d79199bc44e4cf6f1c45635339614e2",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "[Updated](https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-650557986).",
    "created_at": "2020-06-27T13:00:07Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446524482",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446524482"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446524482"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446524482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 13,
    "side": "RIGHT",
    "in_reply_to_id": 445651273
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446525223",
    "pull_request_review_id": 438697457,
    "id": 446525223,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyNTIyMw==",
    "diff_hunk": "@@ -969,10 +957,10 @@ void EraseOrphansFor(NodeId peer)\n {\n     LOCK(g_cs_orphans);\n     int nErased = 0;\n-    std::map<uint256, COrphanTx>::iterator iter = mapOrphanTransactions.begin();\n+    auto iter = mapOrphanTransactions.begin();\n     while (iter != mapOrphanTransactions.end())\n     {\n-        std::map<uint256, COrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n+        const auto maybeErase = iter++;\n         if (maybeErase->second.fromPeer == peer)\n         {\n             nErased += EraseOrphanTx(maybeErase->second.tx->GetHash());",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 86,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "4286e3907d79199bc44e4cf6f1c45635339614e2",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@vasild and me have discussed this concern on IRC. I think as _\"Other iterators ... are not invalidated.\"_ it does not matter whether the internal element order is changed while iterating over `std::unordered_map`.\r\n\r\nMaybe our C++ connoisseurs could add their opinions here?",
    "created_at": "2020-06-27T13:09:06Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446525223",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446525223"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446525223"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446525223/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 975,
    "start_side": "LEFT",
    "line": null,
    "original_line": 956,
    "side": "RIGHT",
    "in_reply_to_id": 445653632
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446815337",
    "pull_request_review_id": 438936895,
    "id": 446815337,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgxNTMzNw==",
    "diff_hunk": "@@ -969,10 +957,10 @@ void EraseOrphansFor(NodeId peer)\n {\n     LOCK(g_cs_orphans);\n     int nErased = 0;\n-    std::map<uint256, COrphanTx>::iterator iter = mapOrphanTransactions.begin();\n+    auto iter = mapOrphanTransactions.begin();\n     while (iter != mapOrphanTransactions.end())\n     {\n-        std::map<uint256, COrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n+        const auto maybeErase = iter++;\n         if (maybeErase->second.fromPeer == peer)\n         {\n             nErased += EraseOrphanTx(maybeErase->second.tx->GetHash());",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 86,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "4286e3907d79199bc44e4cf6f1c45635339614e2",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If you have an valid iterator without order being preserved, I think you could have:\r\n\r\n1. implicit ordering = A, B, C, D, E ; iterator X points at A\r\n2. X++; X points at B\r\n3. X++; X points at C\r\n4. delete B\r\n5. new implicit ordering = E D C A ; iterator X still points at C\r\n6. X++; now points at A, which was already seen\r\n7. X++; now points at end() and we never saw E\r\n\r\nhttps://stackoverflow.com/questions/38468844/erasing-elements-from-unordered-map-in-a-loop/38469800 suggests that all C++11 compilers probably already did the C++14 behaviour (I imagine it's hard to do efficient iterators that remain valid on erasure when you're also reordering elements) so probably hard to find a counterexample, though.\r\n\r\n(edit: fix example, geez)",
    "created_at": "2020-06-29T07:09:01Z",
    "updated_at": "2020-06-29T08:25:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446815337",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446815337"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446815337"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446815337/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 975,
    "start_side": "LEFT",
    "line": null,
    "original_line": 956,
    "side": "RIGHT",
    "in_reply_to_id": 445653632
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446857079",
    "pull_request_review_id": 438989078,
    "id": 446857079,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1NzA3OQ==",
    "diff_hunk": "@@ -969,10 +957,10 @@ void EraseOrphansFor(NodeId peer)\n {\n     LOCK(g_cs_orphans);\n     int nErased = 0;\n-    std::map<uint256, COrphanTx>::iterator iter = mapOrphanTransactions.begin();\n+    auto iter = mapOrphanTransactions.begin();\n     while (iter != mapOrphanTransactions.end())\n     {\n-        std::map<uint256, COrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n+        const auto maybeErase = iter++;\n         if (maybeErase->second.fromPeer == peer)\n         {\n             nErased += EraseOrphanTx(maybeErase->second.tx->GetHash());",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 86,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "4286e3907d79199bc44e4cf6f1c45635339614e2",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "[Updated](https://github.com/bitcoin/bitcoin/pull/19374#issuecomment-651012944).",
    "created_at": "2020-06-29T08:28:24Z",
    "updated_at": "2020-06-29T08:28:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446857079",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446857079"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r446857079"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/446857079/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 975,
    "start_side": "LEFT",
    "line": null,
    "original_line": 956,
    "side": "RIGHT",
    "in_reply_to_id": 445653632
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447199201",
    "pull_request_review_id": 439433498,
    "id": 447199201,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE5OTIwMQ==",
    "diff_hunk": "@@ -921,11 +912,10 @@ bool AddOrphanTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRE\n         return false;\n     }\n \n-    auto ret = mapOrphanTransactions.emplace(hash, COrphanTx{tx, peer, GetTime() + ORPHAN_TX_EXPIRE_TIME, g_orphan_list.size()});\n+    auto ret = mapOrphanTransactions.emplace(hash, COrphanTx{tx, peer, GetTime() + ORPHAN_TX_EXPIRE_TIME});\n     assert(ret.second);\n-    g_orphan_list.push_back(ret.first);\n     for (const CTxIn& txin : tx->vin) {\n-        mapOrphanTransactionsByPrev[txin.prevout].insert(ret.first);\n+        mapOrphanTransactionsByPrev[txin.prevout].insert(hash);",
    "path": "src/net_processing.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It feels a little scary that we're adding references to a uint256 where the lifetime of that object is only as long as the transaction exists in the mapOrphanTransactions. The logic looks fine (and is the same as the existing logic where we're storing iterators which are only valid as long as the tx exists in mapOrphanTransactions), but it feels slightly dangerous.",
    "created_at": "2020-06-29T19:22:43Z",
    "updated_at": "2020-06-29T20:01:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447199201",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447199201"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447199201"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447199201/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 918,
    "original_line": 918,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447211795",
    "pull_request_review_id": 439433498,
    "id": 447211795,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxMTc5NQ==",
    "diff_hunk": "@@ -937,47 +927,39 @@ bool AddOrphanTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRE\n \n int static EraseOrphanTx(uint256 hash) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans)\n {\n-    std::map<uint256, COrphanTx>::iterator it = mapOrphanTransactions.find(hash);\n+    const auto it = mapOrphanTransactions.find(hash);\n     if (it == mapOrphanTransactions.end())\n         return 0;\n     for (const CTxIn& txin : it->second.tx->vin)\n     {\n         auto itPrev = mapOrphanTransactionsByPrev.find(txin.prevout);\n         if (itPrev == mapOrphanTransactionsByPrev.end())\n             continue;\n-        itPrev->second.erase(it);\n+        itPrev->second.erase(hash);\n         if (itPrev->second.empty())\n             mapOrphanTransactionsByPrev.erase(itPrev);\n     }\n \n-    size_t old_pos = it->second.list_pos;\n-    assert(g_orphan_list[old_pos] == it);\n-    if (old_pos + 1 != g_orphan_list.size()) {\n-        // Unless we're deleting the last entry in g_orphan_list, move the last\n-        // entry to the position we're deleting.\n-        auto it_last = g_orphan_list.back();\n-        g_orphan_list[old_pos] = it_last;\n-        it_last->second.list_pos = old_pos;\n-    }\n-    g_orphan_list.pop_back();\n-\n     mapOrphanTransactions.erase(it);\n     return 1;\n }\n \n void EraseOrphansFor(NodeId peer)\n {\n     LOCK(g_cs_orphans);\n-    int nErased = 0;\n-    std::map<uint256, COrphanTx>::iterator iter = mapOrphanTransactions.begin();\n-    while (iter != mapOrphanTransactions.end())\n-    {\n-        std::map<uint256, COrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n-        if (maybeErase->second.fromPeer == peer)\n-        {\n-            nErased += EraseOrphanTx(maybeErase->second.tx->GetHash());\n+\n+    std::vector<OrphanTxPool::iterator> erase_candidates;",
    "path": "src/net_processing.cpp",
    "position": 100,
    "original_position": 100,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "why not make this a vector of `uint256`s?",
    "created_at": "2020-06-29T19:46:24Z",
    "updated_at": "2020-06-29T20:01:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447211795",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447211795"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447211795"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447211795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 951,
    "original_line": 951,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447216637",
    "pull_request_review_id": 439433498,
    "id": 447216637,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxNjYzNw==",
    "diff_hunk": "@@ -139,10 +140,10 @@ struct COrphanTx {\n     CTransactionRef tx;\n     NodeId fromPeer;\n     int64_t nTimeExpire;\n-    size_t list_pos;\n };\n RecursiveMutex g_cs_orphans;\n-std::map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(g_cs_orphans);\n+using OrphanTxPool = std::unordered_map<uint256, COrphanTx, SaltedTxidHasher>;",
    "path": "src/net_processing.cpp",
    "position": 16,
    "original_position": 16,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since `SaltedTxidHasher` is no longer just used by the mempool, it should be moved out of txmempool.cpp. Maybe validation.cpp or primitives/transaction.cpp?",
    "created_at": "2020-06-29T19:55:22Z",
    "updated_at": "2020-06-29T20:01:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447216637",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447216637"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447216637"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447216637/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 145,
    "original_line": 145,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447219623",
    "pull_request_review_id": 439433498,
    "id": 447219623,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxOTYyMw==",
    "diff_hunk": "@@ -1007,12 +989,10 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans)\n         nNextSweep = nMinExpTime + ORPHAN_TX_EXPIRE_INTERVAL;\n         if (nErased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx due to expiration\\n\", nErased);\n     }\n-    FastRandomContext rng;\n     while (mapOrphanTransactions.size() > nMaxOrphans)\n     {\n         // Evict a random orphan:\n-        size_t randompos = rng.randrange(g_orphan_list.size());\n-        EraseOrphanTx(g_orphan_list[randompos]->first);\n+        EraseOrphanTx(mapOrphanTransactions.begin()->first);",
    "path": "src/net_processing.cpp",
    "position": 138,
    "original_position": 138,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this will exhibit different qualities from the current eviction logic. Currently, each eviction is an independent event, where every element has a 1/101 chance of being evicted. The new logic has dependent events. If a tx hashes to a bucket towards the end of the unordered_map, then it's unlikely to be evicted in any of these events, or put another way, if it doesn't get evicted in one round, the probability of it being evicted in a subsequent round is <1/101. I'm not sure if that's a problem.",
    "created_at": "2020-06-29T20:01:01Z",
    "updated_at": "2020-06-29T20:01:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447219623",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447219623"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447219623"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447219623/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 995,
    "original_line": 995,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447587078",
    "pull_request_review_id": 439891720,
    "id": 447587078,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU4NzA3OA==",
    "diff_hunk": "@@ -921,11 +912,10 @@ bool AddOrphanTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRE\n         return false;\n     }\n \n-    auto ret = mapOrphanTransactions.emplace(hash, COrphanTx{tx, peer, GetTime() + ORPHAN_TX_EXPIRE_TIME, g_orphan_list.size()});\n+    auto ret = mapOrphanTransactions.emplace(hash, COrphanTx{tx, peer, GetTime() + ORPHAN_TX_EXPIRE_TIME});\n     assert(ret.second);\n-    g_orphan_list.push_back(ret.first);\n     for (const CTxIn& txin : tx->vin) {\n-        mapOrphanTransactionsByPrev[txin.prevout].insert(ret.first);\n+        mapOrphanTransactionsByPrev[txin.prevout].insert(hash);",
    "path": "src/net_processing.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> the lifetime of that object is only as long as the transaction exists in the mapOrphanTransactions\r\n\r\nI think that is incorrect. The `hash` reference that we insert into `mapOrphanTransactionsByPrev` is created here:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/d02fcd0d45f428f73bd1de8a7a411fd34216d2fc/src/net_processing.cpp#L897\r\n\r\nand the `GetHash()` method returns a reference to its `CTransaction::hash` member:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/d02fcd0d45f428f73bd1de8a7a411fd34216d2fc/src/primitives/transaction.h#L303\r\n\r\nSo, the reference is valid as long as the `CTransaction` object is valid (pointed to by the first argument of `AddOrphanTx()`).\r\n\r\nVerifying whether the `CTransaction` object outlives the reference saved in `mapOrphanTransactionsByPrev` is a bit obscure.\r\n\r\nSaving `uint256` instead of `uint256&` looks more robust, also considering possible future changes. It would require 32 bytes instead of 8 (+24 bytes per transaction).",
    "created_at": "2020-06-30T10:41:00Z",
    "updated_at": "2020-06-30T10:41:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447587078",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447587078"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447587078"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447587078/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 918,
    "original_line": 918,
    "side": "RIGHT",
    "in_reply_to_id": 447199201
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447588886",
    "pull_request_review_id": 439894015,
    "id": 447588886,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU4ODg4Ng==",
    "diff_hunk": "@@ -139,10 +140,10 @@ struct COrphanTx {\n     CTransactionRef tx;\n     NodeId fromPeer;\n     int64_t nTimeExpire;\n-    size_t list_pos;\n };\n RecursiveMutex g_cs_orphans;\n-std::map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(g_cs_orphans);\n+using OrphanTxPool = std::unordered_map<uint256, COrphanTx, SaltedTxidHasher>;",
    "path": "src/net_processing.cpp",
    "position": 16,
    "original_position": 16,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "... and maybe renamed because it is hashing `uint256` which is broader than `Txid`?",
    "created_at": "2020-06-30T10:44:22Z",
    "updated_at": "2020-06-30T10:44:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447588886",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447588886"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447588886"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447588886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 145,
    "original_line": 145,
    "side": "RIGHT",
    "in_reply_to_id": 447216637
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447803998",
    "pull_request_review_id": 440172874,
    "id": 447803998,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgwMzk5OA==",
    "diff_hunk": "@@ -139,10 +140,10 @@ struct COrphanTx {\n     CTransactionRef tx;\n     NodeId fromPeer;\n     int64_t nTimeExpire;\n-    size_t list_pos;\n };\n RecursiveMutex g_cs_orphans;\n-std::map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(g_cs_orphans);\n+using OrphanTxPool = std::unordered_map<uint256, COrphanTx, SaltedTxidHasher>;",
    "path": "src/net_processing.cpp",
    "position": 16,
    "original_position": 16,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Something like 2ba96b0438fe734b788e56ba881303c84a3f249d from (#16910) ?",
    "created_at": "2020-06-30T16:09:44Z",
    "updated_at": "2020-06-30T16:09:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447803998",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447803998"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447803998"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447803998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 145,
    "original_line": 145,
    "side": "RIGHT",
    "in_reply_to_id": 447216637
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447825820",
    "pull_request_review_id": 440197418,
    "id": 447825820,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyNTgyMA==",
    "diff_hunk": "@@ -921,11 +912,10 @@ bool AddOrphanTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRE\n         return false;\n     }\n \n-    auto ret = mapOrphanTransactions.emplace(hash, COrphanTx{tx, peer, GetTime() + ORPHAN_TX_EXPIRE_TIME, g_orphan_list.size()});\n+    auto ret = mapOrphanTransactions.emplace(hash, COrphanTx{tx, peer, GetTime() + ORPHAN_TX_EXPIRE_TIME});\n     assert(ret.second);\n-    g_orphan_list.push_back(ret.first);\n     for (const CTxIn& txin : tx->vin) {\n-        mapOrphanTransactionsByPrev[txin.prevout].insert(ret.first);\n+        mapOrphanTransactionsByPrev[txin.prevout].insert(hash);",
    "path": "src/net_processing.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> the reference is valid as long as the CTransaction object is valid\r\n\r\nRight, and I believe that for an orphan transaction, the only shared_ptr to the CTransaction is held in mapOrphanTransactions. As soon as it gets removed from that map, then the CTransaction will be destructed and the uint256& will be dangling.\r\n\r\n> Saving uint256 instead of uint256& looks more robust, also considering possible future changes. It would require 32 bytes instead of 8 (+24 bytes per transaction).\r\n\r\nThis would require an additional 24 bytes per transaction input, not per transaction.",
    "created_at": "2020-06-30T16:38:54Z",
    "updated_at": "2020-06-30T16:38:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447825820",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447825820"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447825820"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447825820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 918,
    "original_line": 918,
    "side": "RIGHT",
    "in_reply_to_id": 447199201
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447826309",
    "pull_request_review_id": 440198027,
    "id": 447826309,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyNjMwOQ==",
    "diff_hunk": "@@ -139,10 +140,10 @@ struct COrphanTx {\n     CTransactionRef tx;\n     NodeId fromPeer;\n     int64_t nTimeExpire;\n-    size_t list_pos;\n };\n RecursiveMutex g_cs_orphans;\n-std::map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(g_cs_orphans);\n+using OrphanTxPool = std::unordered_map<uint256, COrphanTx, SaltedTxidHasher>;",
    "path": "src/net_processing.cpp",
    "position": 16,
    "original_position": 16,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Indeed. Just like that!",
    "created_at": "2020-06-30T16:39:41Z",
    "updated_at": "2020-06-30T16:39:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447826309",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447826309"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r447826309"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/447826309/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 145,
    "original_line": 145,
    "side": "RIGHT",
    "in_reply_to_id": 447216637
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449129171",
    "pull_request_review_id": 441843019,
    "id": 449129171,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyOTE3MQ==",
    "diff_hunk": "@@ -921,11 +912,10 @@ bool AddOrphanTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRE\n         return false;\n     }\n \n-    auto ret = mapOrphanTransactions.emplace(hash, COrphanTx{tx, peer, GetTime() + ORPHAN_TX_EXPIRE_TIME, g_orphan_list.size()});\n+    auto ret = mapOrphanTransactions.emplace(hash, COrphanTx{tx, peer, GetTime() + ORPHAN_TX_EXPIRE_TIME});\n     assert(ret.second);\n-    g_orphan_list.push_back(ret.first);\n     for (const CTxIn& txin : tx->vin) {\n-        mapOrphanTransactionsByPrev[txin.prevout].insert(ret.first);\n+        mapOrphanTransactionsByPrev[txin.prevout].insert(hash);",
    "path": "src/net_processing.cpp",
    "position": 50,
    "original_position": 50,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> As soon as it gets removed from that map, then the CTransaction will be destructed and the uint256& will be dangling.\r\n\r\nIn `EraseOrphanTx()` a transaction is erased from `mapOrphanTransactions` only after its inputs have been erased from `mapOrphanTransactionsByPrev()`.\r\n\r\nSo, no dangling `uint256&` are expected.",
    "created_at": "2020-07-02T16:18:09Z",
    "updated_at": "2020-07-02T16:18:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r449129171",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449129171"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r449129171"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449129171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 918,
    "original_line": 918,
    "side": "RIGHT",
    "in_reply_to_id": 447199201
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449146878",
    "pull_request_review_id": 441865887,
    "id": 449146878,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE0Njg3OA==",
    "diff_hunk": "@@ -937,47 +927,39 @@ bool AddOrphanTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRE\n \n int static EraseOrphanTx(uint256 hash) EXCLUSIVE_LOCKS_REQUIRED(g_cs_orphans)\n {\n-    std::map<uint256, COrphanTx>::iterator it = mapOrphanTransactions.find(hash);\n+    const auto it = mapOrphanTransactions.find(hash);\n     if (it == mapOrphanTransactions.end())\n         return 0;\n     for (const CTxIn& txin : it->second.tx->vin)\n     {\n         auto itPrev = mapOrphanTransactionsByPrev.find(txin.prevout);\n         if (itPrev == mapOrphanTransactionsByPrev.end())\n             continue;\n-        itPrev->second.erase(it);\n+        itPrev->second.erase(hash);\n         if (itPrev->second.empty())\n             mapOrphanTransactionsByPrev.erase(itPrev);\n     }\n \n-    size_t old_pos = it->second.list_pos;\n-    assert(g_orphan_list[old_pos] == it);\n-    if (old_pos + 1 != g_orphan_list.size()) {\n-        // Unless we're deleting the last entry in g_orphan_list, move the last\n-        // entry to the position we're deleting.\n-        auto it_last = g_orphan_list.back();\n-        g_orphan_list[old_pos] = it_last;\n-        it_last->second.list_pos = old_pos;\n-    }\n-    g_orphan_list.pop_back();\n-\n     mapOrphanTransactions.erase(it);\n     return 1;\n }\n \n void EraseOrphansFor(NodeId peer)\n {\n     LOCK(g_cs_orphans);\n-    int nErased = 0;\n-    std::map<uint256, COrphanTx>::iterator iter = mapOrphanTransactions.begin();\n-    while (iter != mapOrphanTransactions.end())\n-    {\n-        std::map<uint256, COrphanTx>::iterator maybeErase = iter++; // increment to avoid iterator becoming invalid\n-        if (maybeErase->second.fromPeer == peer)\n-        {\n-            nErased += EraseOrphanTx(maybeErase->second.tx->GetHash());\n+\n+    std::vector<OrphanTxPool::iterator> erase_candidates;",
    "path": "src/net_processing.cpp",
    "position": 100,
    "original_position": 100,
    "commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "original_commit_id": "d02fcd0d45f428f73bd1de8a7a411fd34216d2fc",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> why not make this a vector of `uint256`s?\r\n\r\n`std::vector<OrphanTxPool::iterator>`  is more effective (both time and memory), I think.",
    "created_at": "2020-07-02T16:49:08Z",
    "updated_at": "2020-07-02T16:49:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r449146878",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449146878"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19374#discussion_r449146878"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19374"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/449146878/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 951,
    "original_line": 951,
    "side": "RIGHT",
    "in_reply_to_id": 447211795
  }
]