[
  {
    "sha": "fa70d199d0c2182d76b2a1cfa21f9ada4bb12913",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTcwZDE5OWQwYzIxODJkNzZiMmExY2ZhMjFmOWFkYTRiYjEyOTEz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-20T15:00:43Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-28T19:52:26Z"
      },
      "message": "util: Make util/error bilingual_str (refactor)\n\nTranslated strings should not end up in the debug log, stderr, or\nreturned by an RPC.\n\nChanging the util methods in util/error to return a bilingual_str paves\nthe way to achieve this goal in the long term.",
      "tree": {
        "sha": "dcba5d6fa73dde5f736ecaa85bf0daf6d51053a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dcba5d6fa73dde5f736ecaa85bf0daf6d51053a7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa70d199d0c2182d76b2a1cfa21f9ada4bb12913",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUio7QwAq8THoxj+WKYv35dqfK4Dj2kB0ptTwUTmMV4pZCV/AHdncNexiPrd1pUo\n03nToUdi1bW31TF5VGT5XwCaPs9nZrW7bTeIY3gtXPRMqUC9NWZutH2jl9tJ3l51\n0xNfWQHZeuPtmvvZnEoJAzrU/3usG8AuVdGESgaMXXYXdxpaPLEjIlFgiqc00Fxs\n7XpQn6jhGjTgu6o7QOrLkxyFs3LkzAwJUhsAQzigXnJIF8wtqw5LBxcQVMcHQEZM\ns9xs+rX/UHr8zpwmn2mkqfhbJS+BM12Kn7t0jm+ztcNYa6wMsOfocfUVOecKg6kK\ncnC1JxFCN9LC0qSbNrCoz9fd5UxWmjatsVU9j9zO+0YcrZEprzADmjzmZgbouG/6\nxK11GcKN6RDPG/nRfHz8aKmDeES45vXK/knqCbgF6mfkRaaS/NRJ/yKphssG5eBB\nG//lavZohquQ4PIV7PhqLuxPmGqcO0O6Ht6evXhuzQmVmTKeFH26r0rtbEr217fF\nk6Zk0RnO\n=30uM\n-----END PGP SIGNATURE-----",
        "payload": "tree dcba5d6fa73dde5f736ecaa85bf0daf6d51053a7\nparent 119e97ae2d805fc29ef3744fff401ef289a19f8e\nauthor MarcoFalke <falke.marco@gmail.com> 1566313243 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1567021946 -0400\n\nutil: Make util/error bilingual_str (refactor)\n\nTranslated strings should not end up in the debug log, stderr, or\nreturned by an RPC.\n\nChanging the util methods in util/error to return a bilingual_str paves\nthe way to achieve this goal in the long term.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa70d199d0c2182d76b2a1cfa21f9ada4bb12913",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa70d199d0c2182d76b2a1cfa21f9ada4bb12913",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa70d199d0c2182d76b2a1cfa21f9ada4bb12913/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "119e97ae2d805fc29ef3744fff401ef289a19f8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/119e97ae2d805fc29ef3744fff401ef289a19f8e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/119e97ae2d805fc29ef3744fff401ef289a19f8e"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 20,
      "deletions": 18
    },
    "files": [
      {
        "sha": "ca419c05faf4b8c84719a1a5ee5f8fd8525e9513",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa70d199d0c2182d76b2a1cfa21f9ada4bb12913/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa70d199d0c2182d76b2a1cfa21f9ada4bb12913/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fa70d199d0c2182d76b2a1cfa21f9ada4bb12913",
        "patch": "@@ -1060,7 +1060,7 @@ bool AppInitParameterInteraction()\n     {\n         CAmount n = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-incrementalrelayfee\", \"\"), n))\n-            return InitError(AmountErrMsg(\"incrementalrelayfee\", gArgs.GetArg(\"-incrementalrelayfee\", \"\")));\n+            return InitError(AmountErrMsg(\"incrementalrelayfee\", gArgs.GetArg(\"-incrementalrelayfee\", \"\")).translated);\n         incrementalRelayFee = CFeeRate(n);\n     }\n \n@@ -1104,7 +1104,7 @@ bool AppInitParameterInteraction()\n     if (gArgs.IsArgSet(\"-minrelaytxfee\")) {\n         CAmount n = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-minrelaytxfee\", \"\"), n)) {\n-            return InitError(AmountErrMsg(\"minrelaytxfee\", gArgs.GetArg(\"-minrelaytxfee\", \"\")));\n+            return InitError(AmountErrMsg(\"minrelaytxfee\", gArgs.GetArg(\"-minrelaytxfee\", \"\")).translated);\n         }\n         // High fee check is done afterward in WalletParameterInteraction()\n         ::minRelayTxFee = CFeeRate(n);\n@@ -1120,7 +1120,7 @@ bool AppInitParameterInteraction()\n     {\n         CAmount n = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-blockmintxfee\", \"\"), n))\n-            return InitError(AmountErrMsg(\"blockmintxfee\", gArgs.GetArg(\"-blockmintxfee\", \"\")));\n+            return InitError(AmountErrMsg(\"blockmintxfee\", gArgs.GetArg(\"-blockmintxfee\", \"\")).translated);\n     }\n \n     // Feerate used to define dust.  Shouldn't be changed lightly as old\n@@ -1129,7 +1129,7 @@ bool AppInitParameterInteraction()\n     {\n         CAmount n = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-dustrelayfee\", \"\"), n))\n-            return InitError(AmountErrMsg(\"dustrelayfee\", gArgs.GetArg(\"-dustrelayfee\", \"\")));\n+            return InitError(AmountErrMsg(\"dustrelayfee\", gArgs.GetArg(\"-dustrelayfee\", \"\")).translated);\n         dustRelayFee = CFeeRate(n);\n     }\n "
      },
      {
        "sha": "aa44ed3e3a92fc6366f92f9658ed3482291ee0fe",
        "filename": "src/util/error.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa70d199d0c2182d76b2a1cfa21f9ada4bb12913/src/util/error.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa70d199d0c2182d76b2a1cfa21f9ada4bb12913/src/util/error.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/error.cpp?ref=fa70d199d0c2182d76b2a1cfa21f9ada4bb12913",
        "patch": "@@ -41,12 +41,12 @@ std::string ResolveErrMsg(const std::string& optname, const std::string& strBind\n     return strprintf(_(\"Cannot resolve -%s address: '%s'\").translated, optname, strBind);\n }\n \n-std::string AmountHighWarn(const std::string& optname)\n+bilingual_str AmountHighWarn(const std::string& optname)\n {\n-    return strprintf(_(\"%s is set very high!\").translated, optname);\n+    return strprintf(_(\"%s is set very high!\"), optname);\n }\n \n-std::string AmountErrMsg(const std::string& optname, const std::string& strValue)\n+bilingual_str AmountErrMsg(const std::string& optname, const std::string& strValue)\n {\n-    return strprintf(_(\"Invalid amount for -%s=<amount>: '%s'\").translated, optname, strValue);\n+    return strprintf(_(\"Invalid amount for -%s=<amount>: '%s'\"), optname, strValue);\n }"
      },
      {
        "sha": "f540b0020d96291f216405b114595c6ff7ab50d2",
        "filename": "src/util/error.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa70d199d0c2182d76b2a1cfa21f9ada4bb12913/src/util/error.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa70d199d0c2182d76b2a1cfa21f9ada4bb12913/src/util/error.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/error.h?ref=fa70d199d0c2182d76b2a1cfa21f9ada4bb12913",
        "patch": "@@ -17,6 +17,8 @@\n \n #include <string>\n \n+struct bilingual_str;\n+\n enum class TransactionError {\n     OK, //!< No error\n     MISSING_INPUTS,\n@@ -34,8 +36,8 @@ std::string TransactionErrorString(const TransactionError error);\n \n std::string ResolveErrMsg(const std::string& optname, const std::string& strBind);\n \n-std::string AmountHighWarn(const std::string& optname);\n+bilingual_str AmountHighWarn(const std::string& optname);\n \n-std::string AmountErrMsg(const std::string& optname, const std::string& strValue);\n+bilingual_str AmountErrMsg(const std::string& optname, const std::string& strValue);\n \n #endif // BITCOIN_UTIL_ERROR_H"
      },
      {
        "sha": "2ffcde9c08e50306d3d2102b3af0acf97e5c9e4e",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa70d199d0c2182d76b2a1cfa21f9ada4bb12913/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa70d199d0c2182d76b2a1cfa21f9ada4bb12913/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=fa70d199d0c2182d76b2a1cfa21f9ada4bb12913",
        "patch": "@@ -4407,11 +4407,11 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     if (gArgs.IsArgSet(\"-mintxfee\")) {\n         CAmount n = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-mintxfee\", \"\"), n) || 0 == n) {\n-            chain.initError(AmountErrMsg(\"mintxfee\", gArgs.GetArg(\"-mintxfee\", \"\")));\n+            chain.initError(AmountErrMsg(\"mintxfee\", gArgs.GetArg(\"-mintxfee\", \"\")).translated);\n             return nullptr;\n         }\n         if (n > HIGH_TX_FEE_PER_KB) {\n-            chain.initWarning(AmountHighWarn(\"-mintxfee\") + \" \" +\n+            chain.initWarning(AmountHighWarn(\"-mintxfee\").translated + \" \" +\n                               _(\"This is the minimum transaction fee you pay on every transaction.\").translated);\n         }\n         walletInstance->m_min_fee = CFeeRate(n);\n@@ -4425,7 +4425,7 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n             return nullptr;\n         }\n         if (nFeePerK > HIGH_TX_FEE_PER_KB) {\n-            chain.initWarning(AmountHighWarn(\"-fallbackfee\") + \" \" +\n+            chain.initWarning(AmountHighWarn(\"-fallbackfee\").translated + \" \" +\n                               _(\"This is the transaction fee you may pay when fee estimates are not available.\").translated);\n         }\n         walletInstance->m_fallback_fee = CFeeRate(nFeePerK);\n@@ -4438,19 +4438,19 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n             return nullptr;\n         }\n         if (nFeePerK > HIGH_TX_FEE_PER_KB) {\n-            chain.initWarning(AmountHighWarn(\"-discardfee\") + \" \" +\n+            chain.initWarning(AmountHighWarn(\"-discardfee\").translated + \" \" +\n                               _(\"This is the transaction fee you may discard if change is smaller than dust at this level\").translated);\n         }\n         walletInstance->m_discard_rate = CFeeRate(nFeePerK);\n     }\n     if (gArgs.IsArgSet(\"-paytxfee\")) {\n         CAmount nFeePerK = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-paytxfee\", \"\"), nFeePerK)) {\n-            chain.initError(AmountErrMsg(\"paytxfee\", gArgs.GetArg(\"-paytxfee\", \"\")));\n+            chain.initError(AmountErrMsg(\"paytxfee\", gArgs.GetArg(\"-paytxfee\", \"\")).translated);\n             return nullptr;\n         }\n         if (nFeePerK > HIGH_TX_FEE_PER_KB) {\n-            chain.initWarning(AmountHighWarn(\"-paytxfee\") + \" \" +\n+            chain.initWarning(AmountHighWarn(\"-paytxfee\").translated + \" \" +\n                               _(\"This is the transaction fee you will pay if you send a transaction.\").translated);\n         }\n         walletInstance->m_pay_tx_fee = CFeeRate(nFeePerK, 1000);\n@@ -4465,7 +4465,7 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     {\n         CAmount nMaxFee = 0;\n         if (!ParseMoney(gArgs.GetArg(\"-maxtxfee\", \"\"), nMaxFee)) {\n-            chain.initError(AmountErrMsg(\"maxtxfee\", gArgs.GetArg(\"-maxtxfee\", \"\")));\n+            chain.initError(AmountErrMsg(\"maxtxfee\", gArgs.GetArg(\"-maxtxfee\", \"\")).translated);\n             return nullptr;\n         }\n         if (nMaxFee > HIGH_MAX_TX_FEE) {\n@@ -4480,7 +4480,7 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     }\n \n     if (chain.relayMinFee().GetFeePerK() > HIGH_TX_FEE_PER_KB)\n-        chain.initWarning(AmountHighWarn(\"-minrelaytxfee\") + \" \" +\n+        chain.initWarning(AmountHighWarn(\"-minrelaytxfee\").translated + \" \" +\n                     _(\"The wallet will avoid paying less than the minimum relay fee.\").translated);\n \n     walletInstance->m_confirm_target = gArgs.GetArg(\"-txconfirmtarget\", DEFAULT_TX_CONFIRM_TARGET);"
      }
    ]
  },
  {
    "sha": "fa61365a1368f9970fa22fb96f89f4ecc08e69f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTYxMzY1YTEzNjhmOTk3MGZhMjJmYjk2Zjg5ZjRlY2MwOGU2OWYw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-20T17:17:05Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-28T19:52:31Z"
      },
      "message": "wallet: Translate all initErrors in CreateWalletFromFile\n\nEvery warning or error in this method is translated, except for those\ntwo. Translate them as well for consistency.",
      "tree": {
        "sha": "efdc3639ae042e56b8465ad66810d5c3f2a6c30f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/efdc3639ae042e56b8465ad66810d5c3f2a6c30f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa61365a1368f9970fa22fb96f89f4ecc08e69f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhEBgv/SrYCKrzTYX/zZekz518K7FqIn88y0oBN7QO/y9bjotEBhkGQbybFsS+2\n5BwlMCz9QWgtZj6eappMP0FGt0Opx4wU69Obf/1m+8lEoDbPpHDczxu3M8Q5F7AD\nS8k8Ctp3Yi+KhpOD5Gu55JNE79/GnR4WW9TvCKxyyCvJYlkqSwjz7HuMQ72mpj5/\nTMDccY769mBXkCewYfV1DV9eRCWXjLYFpTKeihYUnPW/TDrPFSF8cynAbA36ZqNm\nZL+gxT/FISyW+tGGFV3ohqCzTqhyyH76q2plRMjNagYq9Z+Ybg8med2l32mVPEJg\nWc4A7l4htrrewiQ3QTU4WNJMQzAFWF41OobJEOm/kwTwiWC4I2IvJg6PvxsPnoBg\ndrG8hqs7ik7ev3nZFkVGAev10/Vr5wrg4cdNTfsZksEc+Gg4Evt1LLMfaVxau4sM\nxBlHL3+vZRF5/SRStyFaVs15cSSU5ah4IjZYFMPR3UFfaHsmc98m4IGBU1KDaGO1\npQSR6/D4\n=3Yhv\n-----END PGP SIGNATURE-----",
        "payload": "tree efdc3639ae042e56b8465ad66810d5c3f2a6c30f\nparent fa70d199d0c2182d76b2a1cfa21f9ada4bb12913\nauthor MarcoFalke <falke.marco@gmail.com> 1566321425 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1567021951 -0400\n\nwallet: Translate all initErrors in CreateWalletFromFile\n\nEvery warning or error in this method is translated, except for those\ntwo. Translate them as well for consistency.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa61365a1368f9970fa22fb96f89f4ecc08e69f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa61365a1368f9970fa22fb96f89f4ecc08e69f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa61365a1368f9970fa22fb96f89f4ecc08e69f0/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa70d199d0c2182d76b2a1cfa21f9ada4bb12913",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa70d199d0c2182d76b2a1cfa21f9ada4bb12913",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa70d199d0c2182d76b2a1cfa21f9ada4bb12913"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "2bf08b16d87d27a2e64b41511351f175cb7be40b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa61365a1368f9970fa22fb96f89f4ecc08e69f0/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa61365a1368f9970fa22fb96f89f4ecc08e69f0/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=fa61365a1368f9970fa22fb96f89f4ecc08e69f0",
        "patch": "@@ -4395,12 +4395,12 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     }\n \n     if (!gArgs.GetArg(\"-addresstype\", \"\").empty() && !ParseOutputType(gArgs.GetArg(\"-addresstype\", \"\"), walletInstance->m_default_address_type)) {\n-        chain.initError(strprintf(\"Unknown address type '%s'\", gArgs.GetArg(\"-addresstype\", \"\")));\n+        chain.initError(strprintf(_(\"Unknown address type '%s'\").translated, gArgs.GetArg(\"-addresstype\", \"\")));\n         return nullptr;\n     }\n \n     if (!gArgs.GetArg(\"-changetype\", \"\").empty() && !ParseOutputType(gArgs.GetArg(\"-changetype\", \"\"), walletInstance->m_default_change_type)) {\n-        chain.initError(strprintf(\"Unknown change type '%s'\", gArgs.GetArg(\"-changetype\", \"\")));\n+        chain.initError(strprintf(_(\"Unknown change type '%s'\").translated, gArgs.GetArg(\"-changetype\", \"\")));\n         return nullptr;\n     }\n \n@@ -4479,9 +4479,10 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         walletInstance->m_default_max_tx_fee = nMaxFee;\n     }\n \n-    if (chain.relayMinFee().GetFeePerK() > HIGH_TX_FEE_PER_KB)\n+    if (chain.relayMinFee().GetFeePerK() > HIGH_TX_FEE_PER_KB) {\n         chain.initWarning(AmountHighWarn(\"-minrelaytxfee\").translated + \" \" +\n                     _(\"The wallet will avoid paying less than the minimum relay fee.\").translated);\n+    }\n \n     walletInstance->m_confirm_target = gArgs.GetArg(\"-txconfirmtarget\", DEFAULT_TX_CONFIRM_TARGET);\n     walletInstance->m_spend_zero_conf_change = gArgs.GetBoolArg(\"-spendzeroconfchange\", DEFAULT_SPEND_ZEROCONF_CHANGE);"
      }
    ]
  }
]