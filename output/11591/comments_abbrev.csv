MarcoFalke,2017-11-01T16:12:21Z,"This fails with\n\n```\nbitcoind: sync.cpp:98: void potential_deadlock_detected(const std::pair<void*, void*>&, const LockStack&, const LockStack&): Assertion `false' failed.\n```\n\nYou might be able to compile with `-DDEBUG_LOCKORDER` locally and get a verbose output.",https://github.com/bitcoin/bitcoin/pull/11591#issuecomment-341154449,341154449,
practicalswift,2017-11-01T16:43:23Z,"@MarcoFalke Thanks! I'll investigate!\n",https://github.com/bitcoin/bitcoin/pull/11591#issuecomment-341163965,341163965,
practicalswift,2017-11-03T15:30:55Z,"@promag Oh, you're right that the callers are locking properly - my annotations fooled me here. Thanks for reviewing. I've now changed to `AssertLockHeld(â€¦)`.\n\nWould you mind taking a look at the potential deadlock (reported when building with `-DDEBUG_LOCKORDER`) discussed in https://github.com/bitcoin/bitcoin/pull/11591#discussion_r148608970? The potential deadlock is not triggered when doin",https://github.com/bitcoin/bitcoin/pull/11591#issuecomment-341737583,341737583,
practicalswift,2017-11-02T17:43:35Z,This lock causes problems. Removing temporarily. I'll investigate.,https://github.com/bitcoin/bitcoin/pull/11591#discussion_r148608970,148608970,src/wallet/wallet.cpp
promag,2017-11-03T14:23:53Z,Callers of `GetAvailableCredit` already have `cs_wallet` locked.,https://github.com/bitcoin/bitcoin/pull/11591#discussion_r148795326,148795326,src/wallet/wallet.cpp
promag,2017-11-03T14:24:27Z,"Callers of `GetAvailableWatchOnlyCredit` already have `cs_wallet` locked.\n",https://github.com/bitcoin/bitcoin/pull/11591#discussion_r148795467,148795467,src/wallet/wallet.cpp
