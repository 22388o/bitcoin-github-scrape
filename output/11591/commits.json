[
  {
    "sha": "58df673831a0184ee166570758c9ebf97bf52e06",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OGRmNjczODMxYTAxODRlZTE2NjU3MDc1OGM5ZWJmOTdiZjUyZTA2",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-11-01T12:26:57Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-11-03T15:23:28Z"
      },
      "message": "wallet: Assert holding cs_wallet locks in GetAvailableCredit/GetAvailableWatchOnlyCredit\n\nGetAvailableCredit and GetAvailableWatchOnlyCredit read the variables\nmapTxSpends and mapWallet via the call to IsSpent(...). These are\nguarded by cs_wallet.",
      "tree": {
        "sha": "af5a4e4b9389394fdacb09ab62f620fbca74441f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/af5a4e4b9389394fdacb09ab62f620fbca74441f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58df673831a0184ee166570758c9ebf97bf52e06",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58df673831a0184ee166570758c9ebf97bf52e06",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/58df673831a0184ee166570758c9ebf97bf52e06",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58df673831a0184ee166570758c9ebf97bf52e06/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8335cb478183d800e274f6e96f9d7269ae584220",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8335cb478183d800e274f6e96f9d7269ae584220",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8335cb478183d800e274f6e96f9d7269ae584220"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2b62d2fe4dfffbf206b9aa5a5646119e3c8fb4c6",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58df673831a0184ee166570758c9ebf97bf52e06/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58df673831a0184ee166570758c9ebf97bf52e06/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=58df673831a0184ee166570758c9ebf97bf52e06",
        "patch": "@@ -1789,6 +1789,8 @@ CAmount CWalletTx::GetAvailableCredit(bool fUseCache) const\n     if (pwallet == nullptr)\n         return 0;\n \n+    AssertLockHeld(pwallet->cs_wallet);\n+\n     // Must wait until coinbase is safely deep enough in the chain before valuing it\n     if (IsCoinBase() && GetBlocksToMaturity() > 0)\n         return 0;\n@@ -1833,6 +1835,8 @@ CAmount CWalletTx::GetAvailableWatchOnlyCredit(const bool& fUseCache) const\n     if (pwallet == nullptr)\n         return 0;\n \n+    AssertLockHeld(pwallet->cs_wallet);\n+\n     // Must wait until coinbase is safely deep enough in the chain before valuing it\n     if (IsCoinBase() && GetBlocksToMaturity() > 0)\n         return 0;"
      }
    ]
  }
]