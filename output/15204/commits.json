[
  {
    "sha": "59ac7a5b2af36b6f2f29e56e636e7d816635a99a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OWFjN2E1YjJhZjM2YjZmMmYyOWU1NmU2MzZlN2Q4MTY2MzVhOTlh",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-09-15T14:43:02Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-12-15T23:21:22Z"
      },
      "message": "refactor: Add LoadExistingWallet",
      "tree": {
        "sha": "e9fae0e197440411d023d15897390b11e2d10ace",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9fae0e197440411d023d15897390b11e2d10ace"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59ac7a5b2af36b6f2f29e56e636e7d816635a99a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59ac7a5b2af36b6f2f29e56e636e7d816635a99a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/59ac7a5b2af36b6f2f29e56e636e7d816635a99a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59ac7a5b2af36b6f2f29e56e636e7d816635a99a/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a595011f5a3c048b2e3694dfe355aba60cd994e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a595011f5a3c048b2e3694dfe355aba60cd994e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a595011f5a3c048b2e3694dfe355aba60cd994e8"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 39,
      "deletions": 20
    },
    "files": [
      {
        "sha": "a5efe3f40bf19a2e77721746cfd575e1d02daca5",
        "filename": "src/dummywallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59ac7a5b2af36b6f2f29e56e636e7d816635a99a/src/dummywallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59ac7a5b2af36b6f2f29e56e636e7d816635a99a/src/dummywallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dummywallet.cpp?ref=59ac7a5b2af36b6f2f29e56e636e7d816635a99a",
        "patch": "@@ -75,6 +75,11 @@ std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string&\n     throw std::logic_error(\"Wallet function called in non-wallet build.\");\n }\n \n+std::shared_ptr<CWallet> LoadExistingWallet(interfaces::Chain& chain, const std::string& name, bool& exists, std::string& error, std::vector<std::string>& warnings)\n+{\n+    throw std::logic_error(\"Wallet function called in non-wallet build.\");\n+}\n+\n WalletCreationStatus CreateWallet(interfaces::Chain& chain, const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::vector<std::string>& warnings, std::shared_ptr<CWallet>& result)\n {\n     throw std::logic_error(\"Wallet function called in non-wallet build.\");"
      },
      {
        "sha": "ffcc498b283b4b385c3178b52506a925cc17164a",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59ac7a5b2af36b6f2f29e56e636e7d816635a99a/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59ac7a5b2af36b6f2f29e56e636e7d816635a99a/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=59ac7a5b2af36b6f2f29e56e636e7d816635a99a",
        "patch": "@@ -41,7 +41,7 @@ class CWallet;\n fs::path GetWalletDir();\n std::vector<fs::path> ListWalletDir();\n std::vector<std::shared_ptr<CWallet>> GetWallets();\n-std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string& name, std::string& error, std::vector<std::string>& warnings);\n+std::shared_ptr<CWallet> LoadExistingWallet(interfaces::Chain& chain, const std::string& name, bool& exists, std::string& error, std::vector<std::string>& warnings);\n WalletCreationStatus CreateWallet(interfaces::Chain& chain, const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::vector<std::string>& warnings, std::shared_ptr<CWallet>& result);\n \n namespace interfaces {\n@@ -257,9 +257,9 @@ class NodeImpl : public Node\n         }\n         return wallets;\n     }\n-    std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::vector<std::string>& warnings) override\n+    std::unique_ptr<Wallet> loadWallet(const std::string& name, bool& exists, std::string& error, std::vector<std::string>& warnings) override\n     {\n-        return MakeWallet(LoadWallet(*m_context.chain, name, error, warnings));\n+        return MakeWallet(LoadExistingWallet(*m_context.chain, name, exists, error, warnings));\n     }\n     WalletCreationStatus createWallet(const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::vector<std::string>& warnings, std::unique_ptr<Wallet>& result) override\n     {"
      },
      {
        "sha": "b9573849fa6d466efbb077550659ae3d23df936f",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59ac7a5b2af36b6f2f29e56e636e7d816635a99a/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59ac7a5b2af36b6f2f29e56e636e7d816635a99a/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=59ac7a5b2af36b6f2f29e56e636e7d816635a99a",
        "patch": "@@ -201,7 +201,7 @@ class Node\n     //! Attempts to load a wallet from file or directory.\n     //! The loaded wallet is also notified to handlers previously registered\n     //! with handleLoadWallet.\n-    virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, std::string& error, std::vector<std::string>& warnings) = 0;\n+    virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, bool& exists, std::string& error, std::vector<std::string>& warnings) = 0;\n \n     //! Create a wallet from file\n     virtual WalletCreationStatus createWallet(const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::vector<std::string>& warnings, std::unique_ptr<Wallet>& result) = 0;"
      },
      {
        "sha": "9f5b184d6d62c2c05c802e5c1eb142a4dd2e4670",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59ac7a5b2af36b6f2f29e56e636e7d816635a99a/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59ac7a5b2af36b6f2f29e56e636e7d816635a99a/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=59ac7a5b2af36b6f2f29e56e636e7d816635a99a",
        "patch": "@@ -290,7 +290,8 @@ void OpenWalletActivity::open(const std::string& path)\n     showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n \n     QTimer::singleShot(0, worker(), [this, path] {\n-        std::unique_ptr<interfaces::Wallet> wallet = node().loadWallet(path, m_error_message, m_warning_message);\n+        bool exists;\n+        std::unique_ptr<interfaces::Wallet> wallet = node().loadWallet(path, exists, m_error_message, m_warning_message);\n \n         if (wallet) m_wallet_model = m_wallet_controller->getOrCreateWallet(std::move(wallet));\n "
      },
      {
        "sha": "814a10dbe666298ddfc8955aae460735bafe218c",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 12,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59ac7a5b2af36b6f2f29e56e636e7d816635a99a/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59ac7a5b2af36b6f2f29e56e636e7d816635a99a/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=59ac7a5b2af36b6f2f29e56e636e7d816635a99a",
        "patch": "@@ -2586,20 +2586,11 @@ static UniValue loadwallet(const JSONRPCRequest& request)\n \n     WalletLocation location(request.params[0].get_str());\n \n-    if (!location.Exists()) {\n-        throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Wallet \" + location.GetName() + \" not found.\");\n-    } else if (fs::is_directory(location.GetPath())) {\n-        // The given filename is a directory. Check that there's a wallet.dat file.\n-        fs::path wallet_dat_file = location.GetPath() / \"wallet.dat\";\n-        if (fs::symlink_status(wallet_dat_file).type() == fs::file_not_found) {\n-            throw JSONRPCError(RPC_WALLET_NOT_FOUND, \"Directory \" + location.GetName() + \" does not contain a wallet.dat file.\");\n-        }\n-    }\n-\n+    bool exists;\n     std::string error;\n     std::vector<std::string> warning;\n-    std::shared_ptr<CWallet> const wallet = LoadWallet(*g_rpc_chain, location, error, warning);\n-    if (!wallet) throw JSONRPCError(RPC_WALLET_ERROR, error);\n+    std::shared_ptr<CWallet> const wallet = LoadExistingWallet(*g_rpc_chain, location, exists, error, warning);\n+    if (!wallet) throw JSONRPCError(exists ? RPC_WALLET_ERROR : RPC_WALLET_NOT_FOUND, error);\n \n     UniValue obj(UniValue::VOBJ);\n     obj.pushKV(\"name\", wallet->GetName());"
      },
      {
        "sha": "66a1f4d0feb4a22a02bf52aad3b3f79c04181105",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 2,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59ac7a5b2af36b6f2f29e56e636e7d816635a99a/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59ac7a5b2af36b6f2f29e56e636e7d816635a99a/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=59ac7a5b2af36b6f2f29e56e636e7d816635a99a",
        "patch": "@@ -155,9 +155,31 @@ std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const WalletLocati\n     return wallet;\n }\n \n-std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string& name, std::string& error, std::vector<std::string>& warnings)\n+std::shared_ptr<CWallet> LoadExistingWallet(interfaces::Chain& chain, const WalletLocation& location, bool& exists, std::string& error, std::vector<std::string>& warnings)\n {\n-    return LoadWallet(chain, WalletLocation(name), error, warnings);\n+    if (!location.Exists()) {\n+        exists = false;\n+        error = \"Wallet \" + location.GetName() + \" not found.\";\n+        return nullptr;\n+    }\n+\n+    if (fs::is_directory(location.GetPath())) {\n+        // The given filename is a directory. Check that there's a wallet.dat file.\n+        fs::path wallet_dat_file = location.GetPath() / \"wallet.dat\";\n+        if (fs::symlink_status(wallet_dat_file).type() == fs::file_not_found) {\n+            exists = false;\n+            error = \"Directory \" + location.GetName() + \" does not contain a wallet.dat file.\";\n+            return nullptr;\n+        }\n+    }\n+\n+    exists = true;\n+    return LoadWallet(chain, location, error, warnings);\n+}\n+\n+std::shared_ptr<CWallet> LoadExistingWallet(interfaces::Chain& chain, const std::string& name, bool& exists, std::string& error, std::vector<std::string>& warnings)\n+{\n+    return LoadExistingWallet(chain, WalletLocation(name), exists, error, warnings);\n }\n \n WalletCreationStatus CreateWallet(interfaces::Chain& chain, const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::vector<std::string>& warnings, std::shared_ptr<CWallet>& result)"
      },
      {
        "sha": "5c3d0dc5e2331a857f8c615c8dc580c1352ca681",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59ac7a5b2af36b6f2f29e56e636e7d816635a99a/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59ac7a5b2af36b6f2f29e56e636e7d816635a99a/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=59ac7a5b2af36b6f2f29e56e636e7d816635a99a",
        "patch": "@@ -47,7 +47,7 @@ bool RemoveWallet(const std::shared_ptr<CWallet>& wallet);\n bool HasWallets();\n std::vector<std::shared_ptr<CWallet>> GetWallets();\n std::shared_ptr<CWallet> GetWallet(const std::string& name);\n-std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const WalletLocation& location, std::string& error, std::vector<std::string>& warnings);\n+std::shared_ptr<CWallet> LoadExistingWallet(interfaces::Chain& chain, const WalletLocation& location, bool& exists, std::string& error, std::vector<std::string>& warnings);\n \n enum class WalletCreationStatus {\n     SUCCESS,"
      }
    ]
  },
  {
    "sha": "580c6ab87ec43302e60a766425cdea0ea2c28db2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ODBjNmFiODdlYzQzMzAyZTYwYTc2NjQyNWNkZWEwZWEyYzI4ZGIy",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-09-08T11:39:11Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-12-15T23:21:22Z"
      },
      "message": "gui: Add OpenExternalWalletActivity",
      "tree": {
        "sha": "ed345afc0208e73055791ad8f192417f5bfa7160",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed345afc0208e73055791ad8f192417f5bfa7160"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/580c6ab87ec43302e60a766425cdea0ea2c28db2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/580c6ab87ec43302e60a766425cdea0ea2c28db2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/580c6ab87ec43302e60a766425cdea0ea2c28db2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/580c6ab87ec43302e60a766425cdea0ea2c28db2/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "59ac7a5b2af36b6f2f29e56e636e7d816635a99a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59ac7a5b2af36b6f2f29e56e636e7d816635a99a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/59ac7a5b2af36b6f2f29e56e636e7d816635a99a"
      }
    ],
    "stats": {
      "total": 80,
      "additions": 79,
      "deletions": 1
    },
    "files": [
      {
        "sha": "74e3e0b725980c9ca4e4cd3bf9ed59cf2c313654",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/580c6ab87ec43302e60a766425cdea0ea2c28db2/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/580c6ab87ec43302e60a766425cdea0ea2c28db2/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=580c6ab87ec43302e60a766425cdea0ea2c28db2",
        "patch": "@@ -18,6 +18,8 @@\n #include <algorithm>\n \n #include <QApplication>\n+#include <QDir>\n+#include <QFileDialog>\n #include <QMessageBox>\n #include <QMutexLocker>\n #include <QThread>\n@@ -298,3 +300,58 @@ void OpenWalletActivity::open(const std::string& path)\n         QTimer::singleShot(0, this, &OpenWalletActivity::finish);\n     });\n }\n+\n+OpenExternalWalletActivity::OpenExternalWalletActivity(WalletController* wallet_controller, QWidget* parent_widget)\n+    : WalletControllerActivity(wallet_controller, parent_widget)\n+{\n+}\n+\n+OpenExternalWalletActivity::~OpenExternalWalletActivity()\n+{\n+    delete m_file_dialog;\n+}\n+\n+void OpenExternalWalletActivity::finish()\n+{\n+    m_progress_dialog->hide();\n+\n+    if (!m_exists || !m_error_message.empty()) {\n+        QMessageBox::critical(m_parent_widget, tr(\"Open Wallet\"), QString::fromStdString(m_error_message));\n+    } else if (!m_warning_message.empty()) {\n+        QMessageBox::warning(m_parent_widget, tr(\"Open Wallet\"), QString::fromStdString(Join(m_warning_message, \"\\n\")));\n+    }\n+\n+    if (m_wallet_model) Q_EMIT opened(m_wallet_model);\n+\n+    Q_EMIT finished();\n+}\n+\n+void OpenExternalWalletActivity::open()\n+{\n+    Q_ASSERT(!m_file_dialog);\n+\n+    m_file_dialog = new QFileDialog(m_parent_widget, tr(\"Open Wallet\"), QDir::homePath());\n+    m_file_dialog->setFileMode(QFileDialog::Directory);\n+    m_file_dialog->setOption(QFileDialog::ShowDirsOnly);\n+\n+    connect(m_file_dialog, &QObject::destroyed, [this] {\n+        m_file_dialog = nullptr;\n+    });\n+\n+    connect(m_file_dialog, &QFileDialog::fileSelected, [this](const QString& path) {\n+        if (path.isEmpty()) return;\n+\n+        showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(path.toHtmlEscaped()));\n+\n+        QTimer::singleShot(0, worker(), [this, path] {\n+            std::unique_ptr<interfaces::Wallet> wallet = node().loadWallet(path.toStdString(), m_exists, m_error_message, m_warning_message);\n+\n+            if (wallet) m_wallet_model = m_wallet_controller->getOrCreateWallet(std::move(wallet));\n+\n+            QTimer::singleShot(0, this, &OpenExternalWalletActivity::finish);\n+        });\n+    });\n+    connect(m_file_dialog, &QFileDialog::rejected, this, &OpenExternalWalletActivity::finished);\n+\n+    m_file_dialog->open();\n+}"
      },
      {
        "sha": "bca86547cfcff961113b6c65f4338ee77ae56735",
        "filename": "src/qt/walletcontroller.h",
        "status": "modified",
        "additions": 22,
        "deletions": 1,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/580c6ab87ec43302e60a766425cdea0ea2c28db2/src/qt/walletcontroller.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/580c6ab87ec43302e60a766425cdea0ea2c28db2/src/qt/walletcontroller.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.h?ref=580c6ab87ec43302e60a766425cdea0ea2c28db2",
        "patch": "@@ -14,12 +14,13 @@\n #include <string>\n #include <vector>\n \n+#include <QFileDialog>\n #include <QMessageBox>\n #include <QMutex>\n #include <QProgressDialog>\n+#include <QString>\n #include <QThread>\n #include <QTimer>\n-#include <QString>\n \n class OptionsModel;\n class PlatformStyle;\n@@ -145,4 +146,24 @@ class OpenWalletActivity : public WalletControllerActivity\n     void finish();\n };\n \n+class OpenExternalWalletActivity : public WalletControllerActivity\n+{\n+    Q_OBJECT\n+\n+public:\n+    OpenExternalWalletActivity(WalletController* wallet_controller, QWidget* parent_widget);\n+    virtual ~OpenExternalWalletActivity();\n+\n+    void open();\n+\n+Q_SIGNALS:\n+    void opened(WalletModel* wallet_model);\n+\n+private:\n+    void finish();\n+\n+    QFileDialog* m_file_dialog{nullptr};\n+    bool m_exists{false};\n+};\n+\n #endif // BITCOIN_QT_WALLETCONTROLLER_H"
      }
    ]
  },
  {
    "sha": "60b3947b0340016cbb71e15654dc2ffe70c33372",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MGIzOTQ3YjAzNDAwMTZjYmI3MWUxNTY1NGRjMmZmZTcwYzMzMzcy",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-09-17T15:31:19Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-12-15T23:21:22Z"
      },
      "message": "gui: Add Open External Wallet action",
      "tree": {
        "sha": "529003e0405031a67f20431a3616da9403ac0932",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/529003e0405031a67f20431a3616da9403ac0932"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60b3947b0340016cbb71e15654dc2ffe70c33372",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60b3947b0340016cbb71e15654dc2ffe70c33372",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60b3947b0340016cbb71e15654dc2ffe70c33372",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60b3947b0340016cbb71e15654dc2ffe70c33372/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "580c6ab87ec43302e60a766425cdea0ea2c28db2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/580c6ab87ec43302e60a766425cdea0ea2c28db2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/580c6ab87ec43302e60a766425cdea0ea2c28db2"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9a182f88fa321bf39993064842902ba27fbe3085",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60b3947b0340016cbb71e15654dc2ffe70c33372/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60b3947b0340016cbb71e15654dc2ffe70c33372/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=60b3947b0340016cbb71e15654dc2ffe70c33372",
        "patch": "@@ -337,6 +337,9 @@ void BitcoinGUI::createActions()\n     m_open_wallet_action->setStatusTip(tr(\"Open a wallet\"));\n     m_open_wallet_menu = new QMenu(this);\n \n+    m_open_external_wallet_action = new QAction(tr(\"Other...\"), this);\n+    m_open_external_wallet_action->setStatusTip(tr(\"Open a wallet in an external directory\"));\n+\n     m_close_wallet_action = new QAction(tr(\"Close Wallet...\"), this);\n     m_close_wallet_action->setStatusTip(tr(\"Close wallet\"));\n \n@@ -399,6 +402,8 @@ void BitcoinGUI::createActions()\n                 QAction* action = m_open_wallet_menu->addAction(tr(\"No wallets available\"));\n                 action->setEnabled(false);\n             }\n+            m_open_wallet_menu->addSeparator();\n+            m_open_wallet_menu->addAction(m_open_external_wallet_action);\n         });\n         connect(m_close_wallet_action, &QAction::triggered, [this] {\n             m_wallet_controller->closeWallet(walletFrame->currentWalletModel(), this);\n@@ -409,6 +414,12 @@ void BitcoinGUI::createActions()\n             connect(activity, &CreateWalletActivity::finished, activity, &QObject::deleteLater);\n             activity->create();\n         });\n+        connect(m_open_external_wallet_action, &QAction::triggered, [this] {\n+            auto activity = new OpenExternalWalletActivity(m_wallet_controller, this);\n+            connect(activity, &OpenExternalWalletActivity::opened, this, &BitcoinGUI::setCurrentWallet);\n+            connect(activity, &OpenExternalWalletActivity::finished, activity, &QObject::deleteLater);\n+            activity->open();\n+        });\n     }\n #endif // ENABLE_WALLET\n "
      },
      {
        "sha": "407e972d51ed0057b5fb2c4262d392e93df58aed",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60b3947b0340016cbb71e15654dc2ffe70c33372/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60b3947b0340016cbb71e15654dc2ffe70c33372/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=60b3947b0340016cbb71e15654dc2ffe70c33372",
        "patch": "@@ -149,6 +149,7 @@ class BitcoinGUI : public QMainWindow\n     QAction* showHelpMessageAction = nullptr;\n     QAction* m_create_wallet_action{nullptr};\n     QAction* m_open_wallet_action{nullptr};\n+    QAction* m_open_external_wallet_action{nullptr};\n     QMenu* m_open_wallet_menu{nullptr};\n     QAction* m_close_wallet_action{nullptr};\n     QAction* m_wallet_selector_label_action = nullptr;"
      }
    ]
  }
]