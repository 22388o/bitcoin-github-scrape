[
  {
    "sha": "57be955ba070c8e41c8bd8b41be1ad912a588c52",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1N2JlOTU1YmEwNzBjOGU0MWM4YmQ4YjQxYmUxYWQ5MTJhNTg4YzUy",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-11-27T08:50:20Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-11-27T08:50:20Z"
      },
      "message": "Remove -printblock, -printblocktree, and -printblockindex",
      "tree": {
        "sha": "ec39d12ebcb8d2522888c29873254beeeb04940e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec39d12ebcb8d2522888c29873254beeeb04940e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57be955ba070c8e41c8bd8b41be1ad912a588c52",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57be955ba070c8e41c8bd8b41be1ad912a588c52",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/57be955ba070c8e41c8bd8b41be1ad912a588c52",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57be955ba070c8e41c8bd8b41be1ad912a588c52/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9ff0bc9beb90cf96fb0a9698de22e2bc60fed2f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ff0bc9beb90cf96fb0a9698de22e2bc60fed2f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ff0bc9beb90cf96fb0a9698de22e2bc60fed2f2"
      }
    ],
    "stats": {
      "total": 101,
      "additions": 0,
      "deletions": 101
    },
    "files": [
      {
        "sha": "7b6ebb1b309b34f124167fa2f78733407fb2e4db",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57be955ba070c8e41c8bd8b41be1ad912a588c52/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57be955ba070c8e41c8bd8b41be1ad912a588c52/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=57be955ba070c8e41c8bd8b41be1ad912a588c52",
        "patch": "@@ -330,8 +330,6 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n     if (GetBoolArg(\"-help-debug\", false))\n     {\n-        strUsage += \"  -printblock=<hash>     \" + _(\"Print block on startup, if found in block index\") + \"\\n\";\n-        strUsage += \"  -printblocktree        \" + strprintf(_(\"Print block tree on startup (default: %u)\"), 0) + \"\\n\";\n         strUsage += \"  -printpriority         \" + strprintf(_(\"Log transaction priority and fee per kB when mining blocks (default: %u)\"), 0) + \"\\n\";\n         strUsage += \"  -privdb                \" + strprintf(_(\"Sets the DB_PRIVATE flag in the wallet db environment (default: %u)\"), 1) + \"\\n\";\n         strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be solved instantly.\") + \"\\n\";\n@@ -1048,34 +1046,6 @@ bool AppInit2(boost::thread_group& threadGroup)\n     }\n     LogPrintf(\" block index %15dms\\n\", GetTimeMillis() - nStart);\n \n-    if (GetBoolArg(\"-printblockindex\", false) || GetBoolArg(\"-printblocktree\", false))\n-    {\n-        PrintBlockTree();\n-        return false;\n-    }\n-\n-    if (mapArgs.count(\"-printblock\"))\n-    {\n-        string strMatch = mapArgs[\"-printblock\"];\n-        int nFound = 0;\n-        for (BlockMap::iterator mi = mapBlockIndex.begin(); mi != mapBlockIndex.end(); ++mi)\n-        {\n-            uint256 hash = (*mi).first;\n-            if (boost::algorithm::starts_with(hash.ToString(), strMatch))\n-            {\n-                CBlockIndex* pindex = (*mi).second;\n-                CBlock block;\n-                ReadBlockFromDisk(block, pindex);\n-                block.BuildMerkleTree();\n-                LogPrintf(\"%s\\n\", block.ToString());\n-                nFound++;\n-            }\n-        }\n-        if (nFound == 0)\n-            LogPrintf(\"No blocks matching %s were found\\n\", strMatch);\n-        return false;\n-    }\n-\n     boost::filesystem::path est_path = GetDataDir() / FEE_ESTIMATES_FILENAME;\n     CAutoFile est_filein(fopen(est_path.string().c_str(), \"rb\"), SER_DISK, CLIENT_VERSION);\n     // Allowed to fail as this file IS missing on first startup."
      },
      {
        "sha": "7b821975a75def361ab39d278ef2cc5408a492d5",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 69,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57be955ba070c8e41c8bd8b41be1ad912a588c52/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57be955ba070c8e41c8bd8b41be1ad912a588c52/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=57be955ba070c8e41c8bd8b41be1ad912a588c52",
        "patch": "@@ -3113,75 +3113,6 @@ bool InitBlockIndex() {\n \n \n \n-void PrintBlockTree()\n-{\n-    AssertLockHeld(cs_main);\n-    // pre-compute tree structure\n-    map<CBlockIndex*, vector<CBlockIndex*> > mapNext;\n-    for (BlockMap::iterator mi = mapBlockIndex.begin(); mi != mapBlockIndex.end(); ++mi)\n-    {\n-        CBlockIndex* pindex = (*mi).second;\n-        mapNext[pindex->pprev].push_back(pindex);\n-        // test\n-        //while (rand() % 3 == 0)\n-        //    mapNext[pindex->pprev].push_back(pindex);\n-    }\n-\n-    vector<pair<int, CBlockIndex*> > vStack;\n-    vStack.push_back(make_pair(0, chainActive.Genesis()));\n-\n-    int nPrevCol = 0;\n-    while (!vStack.empty())\n-    {\n-        int nCol = vStack.back().first;\n-        CBlockIndex* pindex = vStack.back().second;\n-        vStack.pop_back();\n-\n-        // print split or gap\n-        if (nCol > nPrevCol)\n-        {\n-            for (int i = 0; i < nCol-1; i++)\n-                LogPrintf(\"| \");\n-            LogPrintf(\"|\\\\\\n\");\n-        }\n-        else if (nCol < nPrevCol)\n-        {\n-            for (int i = 0; i < nCol; i++)\n-                LogPrintf(\"| \");\n-            LogPrintf(\"|\\n\");\n-       }\n-        nPrevCol = nCol;\n-\n-        // print columns\n-        for (int i = 0; i < nCol; i++)\n-            LogPrintf(\"| \");\n-\n-        // print item\n-        CBlock block;\n-        ReadBlockFromDisk(block, pindex);\n-        LogPrintf(\"%d (blk%05u.dat:0x%x)  %s  tx %u\\n\",\n-            pindex->nHeight,\n-            pindex->GetBlockPos().nFile, pindex->GetBlockPos().nPos,\n-            DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", block.GetBlockTime()),\n-            block.vtx.size());\n-\n-        // put the main time-chain first\n-        vector<CBlockIndex*>& vNext = mapNext[pindex];\n-        for (unsigned int i = 0; i < vNext.size(); i++)\n-        {\n-            if (chainActive.Next(vNext[i]))\n-            {\n-                swap(vNext[0], vNext[i]);\n-                break;\n-            }\n-        }\n-\n-        // iterate children\n-        for (unsigned int i = 0; i < vNext.size(); i++)\n-            vStack.push_back(make_pair(nCol+i, vNext[i]));\n-    }\n-}\n-\n bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n {\n     // Map of disk positions for blocks with unknown parent (only used for reindex)"
      },
      {
        "sha": "7a15c2608c57ea48499b10c1731398ca715ca985",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57be955ba070c8e41c8bd8b41be1ad912a588c52/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57be955ba070c8e41c8bd8b41be1ad912a588c52/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=57be955ba070c8e41c8bd8b41be1ad912a588c52",
        "patch": "@@ -177,8 +177,6 @@ bool InitBlockIndex();\n bool LoadBlockIndex();\n /** Unload database information */\n void UnloadBlockIndex();\n-/** Print the loaded block tree */\n-void PrintBlockTree();\n /** Process protocol messages received from a given node */\n bool ProcessMessages(CNode* pfrom);\n /** Send queued protocol messages to be sent to a give node */"
      }
    ]
  }
]