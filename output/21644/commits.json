[
  {
    "sha": "dde69f20a01acca64ac21cb13993c6e4f8709f23",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZGU2OWYyMGEwMWFjY2E2NGFjMjFjYjEzOTkzYzZlNGY4NzA5ZjIz",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-09T18:13:52Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-14T16:06:30Z"
      },
      "message": "p2p, bugfix: use NetPermissions::HasFlag() in CConnman::Bind()\n\nPF_NOBAN is a multi-flag that includes PF_DOWNLOAD, so the conditional\nin CConnman::Bind() using a bitwise AND will return the same result\nfor both the \"noban\" status and the \"download\" status.\n\nExample:\n\n`PF_DOWNLOAD` is `0b1000000`\n`PF_NOBAN`    is `0b1010000`\n\nThis makes a check like `flags & PF_NOBAN` return `true` even if `flags`\nis equal to `PF_DOWNLOAD`.\n\nIf `-whitebind=download@1.1.1.1:8765` is specified, then `1.1.1.1:8765`\nshould be added to the list of local addresses. We only want to avoid\nadding to local addresses (that are advertised) a whitebind that has a\n`noban@` flag.\n\nAs a result of a mis-check in `CConnman::Bind()` we would not have added\n`1.1.1.1:8765` to the local addresses in the example above.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>",
      "tree": {
        "sha": "a52766bc92b383dfda13158017dbdcaa74e48d1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a52766bc92b383dfda13158017dbdcaa74e48d1f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dde69f20a01acca64ac21cb13993c6e4f8709f23",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmB3ExQACgkQT1chs9Dj\nkh2WCxAAisIjgDLx4vvFtLvlcYgD/BfBrR2mOY8n48KqU7zX3BqwvBN9LdgS+Qq1\nPwcLZIKScnzizXtjmFCZ+7i6paQho2zpV4f+F0zxc/8hkjJsa6hvhgvcYjBw1Kuh\n2R4RdhXC/5qKW6L1M0zd+qEZuPkhqQANv2kydhMmVMurBUgKprf39qkkLy+nNZh7\nSdZarh9R4H/Exz/GjOEsRzL6DADAXTVrMfUGwNYtWzMKB/s1Uw2OKEcvO0shYdqc\nUhAqO9hpLIpr9MIpKRC8Nzb2urzM15F+pivzR1c/PsutHWG7fp7h8EJeOhwxf9rc\nIakPjB6k9S8JdrrppVla9DJsakCsp7agghi9aQmhdBu6dT2wbo9pJjG5fcL1uduJ\nCwwCN1nNxYyCRdDEMTQWM3tOOGVSDSA/EPky1weOEDsTzpcIqrtpMeMS5qO9gZSJ\nhetm9Wldjdi/3S9A6/jgHjuHV2T1y06NAPgHPc75xcjQOkdByDG9Vcp0I1GsNsrw\n9Palnhh9l9wd0OAc/GNR8x2lzcMdBfMbyH+x35ViLQ2XKfjKWC9LUigeW/GK7bBc\n5blAKXnM/c8PVqWPYktNPwAusfQQGaoIr3AbfvxQdyQMacqz79JPstehks9Q8Hy6\naBBp+Gsx6Rqlt8x9g2AeKmUNkMhnipv2NF58QzCaz0BCyTXZROk=\n=jc8t\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIKfyqzWIMbJWyg8Y9XdKHaUpK1faNa0ciqImqkUA+i0tCP/wEIjmz12UwcOR\ndMJWAoYgC9II8QRgdwU98Ah0mLsfyvwwWACD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEI306mF6wTxnWmWhZ5HLavkI\n8CBHGQmy0Wc/vMv+5tEk1wEgAhDkGHTwi0nOPnqL9vcqSQjxBGB3ExbwCNvRESPQ\nwI42AIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRhbGxheHkuY29t\n//AQroC2bcECzu8bQDKe6jEfLQjxICnJPjNpFioSJD3jL2IQ1F/8mU6d0JgHN89Q\nBLNNiFLjCPAg4qZ23jq0jCbB/AUwpXWI/s6xLkvv2oOezu9JkHkzAFcI8QRgdxMW\n8Aj/FQrRVvWKiQCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZ/AQzHqF2gHm3qx6JCpQpGr2XQjxICAWdUsuS4mttNpA\nT3AgQX84K0Zaz62k5xYLjg2qRlfJCPEEYHcTFfAIm5vopt+BnKUAg9/jDS75DI4u\nLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree a52766bc92b383dfda13158017dbdcaa74e48d1f\nparent f0fa32450ec35056b3e1025262aeaef4a24c35ee\nauthor Jon Atack <jon@atack.com> 1617992032 +0200\ncommitter Jon Atack <jon@atack.com> 1618416390 +0200\n\np2p, bugfix: use NetPermissions::HasFlag() in CConnman::Bind()\n\nPF_NOBAN is a multi-flag that includes PF_DOWNLOAD, so the conditional\nin CConnman::Bind() using a bitwise AND will return the same result\nfor both the \"noban\" status and the \"download\" status.\n\nExample:\n\n`PF_DOWNLOAD` is `0b1000000`\n`PF_NOBAN`    is `0b1010000`\n\nThis makes a check like `flags & PF_NOBAN` return `true` even if `flags`\nis equal to `PF_DOWNLOAD`.\n\nIf `-whitebind=download@1.1.1.1:8765` is specified, then `1.1.1.1:8765`\nshould be added to the list of local addresses. We only want to avoid\nadding to local addresses (that are advertised) a whitebind that has a\n`noban@` flag.\n\nAs a result of a mis-check in `CConnman::Bind()` we would not have added\n`1.1.1.1:8765` to the local addresses in the example above.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dde69f20a01acca64ac21cb13993c6e4f8709f23",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dde69f20a01acca64ac21cb13993c6e4f8709f23",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dde69f20a01acca64ac21cb13993c6e4f8709f23/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f0fa32450ec35056b3e1025262aeaef4a24c35ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0fa32450ec35056b3e1025262aeaef4a24c35ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f0fa32450ec35056b3e1025262aeaef4a24c35ee"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "245a9c021e3f45bc53fea628c863374acee5836c",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dde69f20a01acca64ac21cb13993c6e4f8709f23/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dde69f20a01acca64ac21cb13993c6e4f8709f23/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=dde69f20a01acca64ac21cb13993c6e4f8709f23",
        "patch": "@@ -2408,8 +2408,9 @@ NodeId CConnman::GetNewNodeId()\n \n \n bool CConnman::Bind(const CService &addr, unsigned int flags, NetPermissionFlags permissions) {\n-    if (!(flags & BF_EXPLICIT) && !IsReachable(addr))\n+    if (!(flags & BF_EXPLICIT) && !IsReachable(addr)) {\n         return false;\n+    }\n     bilingual_str strError;\n     if (!BindListenPort(addr, strError, permissions)) {\n         if ((flags & BF_REPORT_ERROR) && clientInterface) {\n@@ -2418,7 +2419,7 @@ bool CConnman::Bind(const CService &addr, unsigned int flags, NetPermissionFlags\n         return false;\n     }\n \n-    if (addr.IsRoutable() && fDiscover && !(flags & BF_DONT_ADVERTISE) && !(permissions & PF_NOBAN)) {\n+    if (addr.IsRoutable() && fDiscover && !(flags & BF_DONT_ADVERTISE) && !NetPermissions::HasFlag(permissions, NetPermissionFlags::PF_NOBAN)) {\n         AddLocal(addr, LOCAL_BIND);\n     }\n "
      }
    ]
  },
  {
    "sha": "4e0d5788ba5771c81bc0ff2e6523cf9accddae46",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZTBkNTc4OGJhNTc3MWM4MWJjMGZmMmU2NTIzY2Y5YWNjZGRhZTQ2",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-09T18:32:40Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-18T14:32:16Z"
      },
      "message": "test: add net permissions noban/download unit test coverage\n\nto clarify/test the relationship and NetPermissions operations\ninvolving the NetPermissionFlags PF_NOBAN and PF_DOWNLOAD.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>",
      "tree": {
        "sha": "d392b2cfd395abe2b147f9a1aee1f79387463a5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d392b2cfd395abe2b147f9a1aee1f79387463a5e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e0d5788ba5771c81bc0ff2e6523cf9accddae46",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmB8QvgACgkQT1chs9Dj\nkh1S/w/+Pl0iI01dRKpedIN6OsdyhdKCTWJXC6K5SbbugqCeum2qrhcrVxNjZe73\nhz34BSYKsjDreymPxq6dVPfc6+FZ4FFtzjvjqnOVycRF3baaVS2JxBY7VHEjTRiB\nfw8pSIbfT+3++O9lLbmpgn5b97/IOBjdVfhaObRHyzl8hhp7dqo6mvzqcRhj3mOr\nD6JwtP1dDZkgPWp8BweQ24Sf9IRQ00fWkSWp8hI0iwRZsRM+kD3ZuSo0jXv+u+jx\nP0+kSCRXqWoeqvF6kVPML0cRKyI347u4Sr8/LxqUatAP9r+OYsfN6CiCtM7bQwCB\nF/dBf9mqUJFail62cok0bkmTgz+MpBMD3zDyeU3Kzk009r3O+hXH5QetBLN1jAlu\nylXYwphPUTCQdNQvrV5+5sX+sJoH8+2qmyb+YJl3bvuEQ1JUX3A4ISUEwUyXTHh0\nWOYQ0F1w8xYucar4PPMhKwksKQIMO3WCUm4Ym0+t54v9qjphynZnlqytZUJHSlV0\nDQ572PtgRiuVfJ0srCWIYHuYlbRxolJVF6FOTpQgJomqVVGdh+Aue/4BvchVrCl8\nRDhasdEqOvP4w3sVpasCzZWHJg1jBIb8cqPlAeh38cOZLA2yIdgejV5IInH2Uk9J\n3aMkICSuwdn/oVhPE/3v6B43xXEAGupjGVGEGQImwjzpSTbIxS8=\n=7oE8\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIFKbL7OKP6VHjhCpxjPF+ismLpij712aqKy4XmaTkRmqCP/wEBD2xr89kTe3\n+WmX5JoJ9ygI8QRgfDUh8Ag3qbQOumukpACD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEBMxVMRexO8hXj+Yu7xxP+gI\n8QRgfEL68AipTWRPRbWmNQCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVu\nZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEEBAFijogQsNW+C/qKBIpa8I8QRgfEL5\n8Ags8Zchxo2r6QCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BCdG14Sr4522K+9jl6PosIMCPEEYHxC+vAI7yjM\nP5AFW00Ag9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree d392b2cfd395abe2b147f9a1aee1f79387463a5e\nparent dde69f20a01acca64ac21cb13993c6e4f8709f23\nauthor Jon Atack <jon@atack.com> 1617993160 +0200\ncommitter Jon Atack <jon@atack.com> 1618756336 +0200\n\ntest: add net permissions noban/download unit test coverage\n\nto clarify/test the relationship and NetPermissions operations\ninvolving the NetPermissionFlags PF_NOBAN and PF_DOWNLOAD.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e0d5788ba5771c81bc0ff2e6523cf9accddae46",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4e0d5788ba5771c81bc0ff2e6523cf9accddae46",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e0d5788ba5771c81bc0ff2e6523cf9accddae46/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dde69f20a01acca64ac21cb13993c6e4f8709f23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dde69f20a01acca64ac21cb13993c6e4f8709f23",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dde69f20a01acca64ac21cb13993c6e4f8709f23"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 25,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b316a37c6e9c95eaaa83392b9ce03a481fbb8792",
        "filename": "src/test/netbase_tests.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 1,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e0d5788ba5771c81bc0ff2e6523cf9accddae46/src/test/netbase_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e0d5788ba5771c81bc0ff2e6523cf9accddae46/src/test/netbase_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/netbase_tests.cpp?ref=4e0d5788ba5771c81bc0ff2e6523cf9accddae46",
        "patch": "@@ -395,6 +395,28 @@ BOOST_AUTO_TEST_CASE(netpermissions_test)\n     BOOST_CHECK(NetWhitebindPermissions::TryParse(\"@1.2.3.4:32\", whitebindPermissions, error));\n     BOOST_CHECK_EQUAL(whitebindPermissions.m_flags, PF_NONE);\n \n+    NetWhitebindPermissions noban, noban_download, download_noban, download;\n+\n+    // \"noban\" implies \"download\"\n+    BOOST_REQUIRE(NetWhitebindPermissions::TryParse(\"noban@1.2.3.4:32\", noban, error));\n+    BOOST_CHECK_EQUAL(noban.m_flags, NetPermissionFlags::PF_NOBAN);\n+    BOOST_CHECK(NetPermissions::HasFlag(noban.m_flags, NetPermissionFlags::PF_DOWNLOAD));\n+    BOOST_CHECK(NetPermissions::HasFlag(noban.m_flags, NetPermissionFlags::PF_NOBAN));\n+\n+    // \"noban,download\" is equivalent to \"noban\"\n+    BOOST_REQUIRE(NetWhitebindPermissions::TryParse(\"noban,download@1.2.3.4:32\", noban_download, error));\n+    BOOST_CHECK_EQUAL(noban_download.m_flags, noban.m_flags);\n+\n+    // \"download,noban\" is equivalent to \"noban\"\n+    BOOST_REQUIRE(NetWhitebindPermissions::TryParse(\"download,noban@1.2.3.4:32\", download_noban, error));\n+    BOOST_CHECK_EQUAL(download_noban.m_flags, noban.m_flags);\n+\n+    // \"download\" excludes (does not imply) \"noban\"\n+    BOOST_REQUIRE(NetWhitebindPermissions::TryParse(\"download@1.2.3.4:32\", download, error));\n+    BOOST_CHECK_EQUAL(download.m_flags, NetPermissionFlags::PF_DOWNLOAD);\n+    BOOST_CHECK(NetPermissions::HasFlag(download.m_flags, NetPermissionFlags::PF_DOWNLOAD));\n+    BOOST_CHECK(!NetPermissions::HasFlag(download.m_flags, NetPermissionFlags::PF_NOBAN));\n+\n     // Happy path, can parse flags\n     BOOST_CHECK(NetWhitebindPermissions::TryParse(\"bloom,forcerelay@1.2.3.4:32\", whitebindPermissions, error));\n     // forcerelay should also activate the relay permission\n@@ -407,7 +429,7 @@ BOOST_AUTO_TEST_CASE(netpermissions_test)\n \n     // Allow dups\n     BOOST_CHECK(NetWhitebindPermissions::TryParse(\"bloom,relay,noban,noban@1.2.3.4:32\", whitebindPermissions, error));\n-    BOOST_CHECK_EQUAL(whitebindPermissions.m_flags, PF_BLOOMFILTER | PF_RELAY | PF_NOBAN);\n+    BOOST_CHECK_EQUAL(whitebindPermissions.m_flags, PF_BLOOMFILTER | PF_RELAY | PF_NOBAN | PF_DOWNLOAD); // \"noban\" implies \"download\"\n \n     // Allow empty\n     BOOST_CHECK(NetWhitebindPermissions::TryParse(\"bloom,relay,,noban@1.2.3.4:32\", whitebindPermissions, error));\n@@ -428,6 +450,8 @@ BOOST_AUTO_TEST_CASE(netpermissions_test)\n     // Happy path for whitelist parsing\n     BOOST_CHECK(NetWhitelistPermissions::TryParse(\"noban@1.2.3.4\", whitelistPermissions, error));\n     BOOST_CHECK_EQUAL(whitelistPermissions.m_flags, PF_NOBAN);\n+    BOOST_CHECK(NetPermissions::HasFlag(whitelistPermissions.m_flags, NetPermissionFlags::PF_NOBAN));\n+\n     BOOST_CHECK(NetWhitelistPermissions::TryParse(\"bloom,forcerelay,noban,relay@1.2.3.4/32\", whitelistPermissions, error));\n     BOOST_CHECK_EQUAL(whitelistPermissions.m_flags, PF_BLOOMFILTER | PF_FORCERELAY | PF_NOBAN | PF_RELAY);\n     BOOST_CHECK(error.empty());"
      }
    ]
  },
  {
    "sha": "36fb036d25e2a3016b36873456e5a9e6251ffef8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNmZiMDM2ZDI1ZTJhMzAxNmIzNjg3MzQ1NmU1YTllNjI1MWZmZWY4",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-14T15:10:28Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-04-18T14:32:28Z"
      },
      "message": "p2p: allow NetPermissions::ClearFlag() only with PF_ISIMPLICIT\n\nNetPermissions::ClearFlag() is currently only called in the codebase with\nan `f` value of NetPermissionFlags::PF_ISIMPLICIT.\n\nIf that should change in the future, ClearFlag() should not be called\nwith `f` being a subflag of a multiflag, e.g. NetPermissionFlags::PF_RELAY\nor NetPermissionFlags::PF_DOWNLOAD, as that would leave `flags` in an\ninvalid state corresponding to none of the existing NetPermissionFlags.\n\nTherefore, allow only calling ClearFlag with the implicit flag for now.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>",
      "tree": {
        "sha": "bacfb98e3b05210ae2beebe091c14c12274ee7ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bacfb98e3b05210ae2beebe091c14c12274ee7ba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/36fb036d25e2a3016b36873456e5a9e6251ffef8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmB8QvwACgkQT1chs9Dj\nkh19wg/+KouSOhemFtNCeeEanOH8WoOK/nI2HNI60F5GTs3buxowZF8D+hAIKeMa\nMpVfC06OIH7qXnDkqoKUFQMhJngCgYcju4XSofRuEHnrvc/Uoslie+oLB+TccVl7\n8KuvlIDd+zT58oMvF8IRxALmjG94jGJN8O1dS9Sen7t36+7HEFFG43/T0CqezR1F\np3WfEuSq6PlDATD4+b+kFPHPVOKFcQQ+OGzdsGUbduTg35viunGW8pqqwQ5WOkJz\nrE4AYXw4uKFOao1c/CGkL5YMtJGgDK9cJXguOi3YsW4Z/6Z20KGvUNEEwO8PRw6Z\nSyAKaUqMs7EA4xTdfRi7SfvHHsE0/dki8nhe4c8DlOk2gz0aoxiwBe/sL5ql0N+D\n/AaYOvqKP+6E0x0bwhI3RxMFhM3r+jSZanPTt7PgtuZF+xLIVovH4Q54Op4F8SwO\nbxZXv0XT0I2uB12fBNJcvNy++MLFl6RVjTG0Ht4Kf28/vyh1woJMkWip6tEKDCpa\nBe2X20i0fXXENuxSw/+Tl+mybGUknrVcIFzr4Re67MDEHG5clnnuHIJvwl0Sn6SL\nXQv7Eu8B33RC89XiPvtEl60Xcyr1/4x7v8ncYNlUgVlygxIrJBxpST0c3xFpaeBK\nBiIvlnTDVGl8CbVgt++yBkwJAdTJBtUwjXWW+FSME0+9HI0OD6c=\n=p/Xh\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIOAYKNx7+uNXrdsuMJAJcqk1U4NZSasWLA0xo2MZ8WtoCP/wEDMWopHt6BDK\nVtpwcgo2BY0I8QRgfEL88AjD72fwhXxPNQCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQoGT6fzpJSvPhZevz\n0kkrDwjxBGB8Qv3wCIoMxmr9RW2LAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxl\nbmRhci5jYXRhbGxheHkuY29t//AQuAjnBQDgJimksVkRJIKVhAjxBGB8Qv3wCMOH\nNM5rbcocAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BD8ZYx3qc4Mq0ORMS+sienDCPEEYHw1I/AIPLa7V91oRHUA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree bacfb98e3b05210ae2beebe091c14c12274ee7ba\nparent 4e0d5788ba5771c81bc0ff2e6523cf9accddae46\nauthor Jon Atack <jon@atack.com> 1618413028 +0200\ncommitter Jon Atack <jon@atack.com> 1618756348 +0200\n\np2p: allow NetPermissions::ClearFlag() only with PF_ISIMPLICIT\n\nNetPermissions::ClearFlag() is currently only called in the codebase with\nan `f` value of NetPermissionFlags::PF_ISIMPLICIT.\n\nIf that should change in the future, ClearFlag() should not be called\nwith `f` being a subflag of a multiflag, e.g. NetPermissionFlags::PF_RELAY\nor NetPermissionFlags::PF_DOWNLOAD, as that would leave `flags` in an\ninvalid state corresponding to none of the existing NetPermissionFlags.\n\nTherefore, allow only calling ClearFlag with the implicit flag for now.\n\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36fb036d25e2a3016b36873456e5a9e6251ffef8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/36fb036d25e2a3016b36873456e5a9e6251ffef8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36fb036d25e2a3016b36873456e5a9e6251ffef8/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4e0d5788ba5771c81bc0ff2e6523cf9accddae46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e0d5788ba5771c81bc0ff2e6523cf9accddae46",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4e0d5788ba5771c81bc0ff2e6523cf9accddae46"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 8,
      "deletions": 2
    },
    "files": [
      {
        "sha": "142b317bf63c0551372826b825a0ff2da4ce7420",
        "filename": "src/net_permissions.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36fb036d25e2a3016b36873456e5a9e6251ffef8/src/net_permissions.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36fb036d25e2a3016b36873456e5a9e6251ffef8/src/net_permissions.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_permissions.h?ref=36fb036d25e2a3016b36873456e5a9e6251ffef8",
        "patch": "@@ -51,8 +51,14 @@ class NetPermissions\n     {\n         flags = static_cast<NetPermissionFlags>(flags | f);\n     }\n+    //! ClearFlag is only called with `f` == NetPermissionFlags::PF_ISIMPLICIT.\n+    //! If that should change in the future, be aware that ClearFlag should not\n+    //! be called with a subflag of a multiflag, e.g. NetPermissionFlags::PF_RELAY\n+    //! or NetPermissionFlags::PF_DOWNLOAD, as that would leave `flags` in an\n+    //! invalid state corresponding to none of the existing flags.\n     static inline void ClearFlag(NetPermissionFlags& flags, NetPermissionFlags f)\n     {\n+        assert(f == NetPermissionFlags::PF_ISIMPLICIT);\n         flags = static_cast<NetPermissionFlags>(flags & ~f);\n     }\n };"
      },
      {
        "sha": "6fdf4b653cc3898f189ba50d57d803f78497e25e",
        "filename": "src/test/fuzz/net_permissions.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36fb036d25e2a3016b36873456e5a9e6251ffef8/src/test/fuzz/net_permissions.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36fb036d25e2a3016b36873456e5a9e6251ffef8/src/test/fuzz/net_permissions.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/net_permissions.cpp?ref=36fb036d25e2a3016b36873456e5a9e6251ffef8",
        "patch": "@@ -25,7 +25,7 @@ FUZZ_TARGET(net_permissions)\n         (void)NetPermissions::ToStrings(net_whitebind_permissions.m_flags);\n         (void)NetPermissions::AddFlag(net_whitebind_permissions.m_flags, net_permission_flags);\n         assert(NetPermissions::HasFlag(net_whitebind_permissions.m_flags, net_permission_flags));\n-        (void)NetPermissions::ClearFlag(net_whitebind_permissions.m_flags, net_permission_flags);\n+        (void)NetPermissions::ClearFlag(net_whitebind_permissions.m_flags, NetPermissionFlags::PF_ISIMPLICIT);\n         (void)NetPermissions::ToStrings(net_whitebind_permissions.m_flags);\n     }\n \n@@ -35,7 +35,7 @@ FUZZ_TARGET(net_permissions)\n         (void)NetPermissions::ToStrings(net_whitelist_permissions.m_flags);\n         (void)NetPermissions::AddFlag(net_whitelist_permissions.m_flags, net_permission_flags);\n         assert(NetPermissions::HasFlag(net_whitelist_permissions.m_flags, net_permission_flags));\n-        (void)NetPermissions::ClearFlag(net_whitelist_permissions.m_flags, net_permission_flags);\n+        (void)NetPermissions::ClearFlag(net_whitelist_permissions.m_flags, NetPermissionFlags::PF_ISIMPLICIT);\n         (void)NetPermissions::ToStrings(net_whitelist_permissions.m_flags);\n     }\n }"
      }
    ]
  }
]