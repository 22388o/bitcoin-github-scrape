gavinandresen,2011-10-05T14:22:22Z,"If the ""cache getwork"" patch is applied, does this matter?\n",https://github.com/bitcoin/bitcoin/pull/562#issuecomment-2298382,2298382,
luke-jr,2011-10-05T15:12:38Z,"The original ""cache getwork"" patch used this. I split them up for code cleanliness. If this one is merged first, I can rebase the FastGetWork code and bring it back to its original state from JoelKatz.\n",https://github.com/bitcoin/bitcoin/pull/562#issuecomment-2298974,2298974,
laanwj,2011-10-23T12:16:21Z,"I appreciate that you're trying to optimize bitcoin, but please don't add any fixed-sized buffers! I rather have somewhat slower code than potential security holes.\n",https://github.com/bitcoin/bitcoin/pull/562#issuecomment-2495061,2495061,
luke-jr,2011-10-28T23:27:19Z,"Fixed-size buffers are not a security hole, only misuse of them. That being said, I have not checked over this patch for security checks either.\n",https://github.com/bitcoin/bitcoin/pull/562#issuecomment-2562424,2562424,
laanwj,2011-10-29T06:58:07Z,"I think we all know that already Luke. The thing is, people make mistakes,\nand they are usually not all found on the first time around code\ninspection. It's playing with fire, in a way, and should be restricted imo\nto direct interaction with hw, OS-level libraries and such stuff. I'd\nprefer to err on the safe side in financial sw.\n",https://github.com/bitcoin/bitcoin/pull/562#issuecomment-2563775,2563775,
luke-jr,2011-10-29T12:50:09Z,"Sure, but that ignores the fact that this code has had a lot of real-world production testing in probably 90% of pools (and even _required_ by PSJ)\n",https://github.com/bitcoin/bitcoin/pull/562#issuecomment-2564745,2564745,
cgaebel,2011-11-02T22:20:16Z,"I don't understand the concern here. If you look in the context of this patch, there's plenty of fixed buffer usage already.\n\nWhat would make sense is to instead make the buffer size a result of a constexpr calculation, but in this case that really seems like overkill.\n",https://github.com/bitcoin/bitcoin/pull/562#issuecomment-2610649,2610649,
laanwj,2011-11-02T22:38:01Z,"That's exactly my concern. I'd like to reduce fixed buffer use not increase\nit. C++ has introduced all kinds of stuff exactly to not have to muck\naround with them.\n\nAlso, this does not completely replace the old HexStr function, so this\nmeans that the source will now be littered with not one but two hex\nconversion utility functions.\n\nI would prefer if he just optimized the current HexStr f",https://github.com/bitcoin/bitcoin/pull/562#issuecomment-2610850,2610850,
gavinandresen,2011-12-02T15:29:46Z,"I have a few problems with this code, starting with it doesn't follow the bitcoin coding conventions (e.g. nLen instead of len).  And I agree with laanwj RE: optimizing HexStr instead.\n\nBut I'll go back to my original question:  does this have any measurable effect on performance if the bypass-JSON-and-return-a-cached-response-to-getwork patch is applied?  What is the performance of getwork with",https://github.com/bitcoin/bitcoin/pull/562#issuecomment-2991349,2991349,
luke-jr,2012-01-11T21:52:00Z,Pull #565 includes performance testing for this.\n,https://github.com/bitcoin/bitcoin/pull/562#issuecomment-3454336,3454336,
