[
  {
    "sha": "5fdd1251a87a0938f48e88970ae976e360c6e09f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmRkMTI1MWE4N2EwOTM4ZjQ4ZTg4OTcwYWU5NzZlMzYwYzZlMDlm",
    "commit": {
      "author": {
        "name": "William Yager",
        "email": "will.yager@gmail.com",
        "date": "2013-05-08T01:03:17Z"
      },
      "committer": {
        "name": "William Yager",
        "email": "will.yager@gmail.com",
        "date": "2013-05-08T01:03:17Z"
      },
      "message": "Specified base_uint component size\n\nA base_uint used to be made of an array of unsigned ints. This works\nfine on most platforms, but might not work on certain present or future\nplatforms. The code breaks if an unsigned int is 16 or 64 bits, so it's\nimportant to be specific. Also changed \"u\" to \"you\".",
      "tree": {
        "sha": "f2a09e20447e0d8c938fd28e762b59c2d93b2b79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2a09e20447e0d8c938fd28e762b59c2d93b2b79"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fdd1251a87a0938f48e88970ae976e360c6e09f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fdd1251a87a0938f48e88970ae976e360c6e09f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5fdd1251a87a0938f48e88970ae976e360c6e09f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fdd1251a87a0938f48e88970ae976e360c6e09f/comments",
    "author": {
      "login": "wyager",
      "id": 780134,
      "node_id": "MDQ6VXNlcjc4MDEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/780134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wyager",
      "html_url": "https://github.com/wyager",
      "followers_url": "https://api.github.com/users/wyager/followers",
      "following_url": "https://api.github.com/users/wyager/following{/other_user}",
      "gists_url": "https://api.github.com/users/wyager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wyager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wyager/subscriptions",
      "organizations_url": "https://api.github.com/users/wyager/orgs",
      "repos_url": "https://api.github.com/users/wyager/repos",
      "events_url": "https://api.github.com/users/wyager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wyager/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "wyager",
      "id": 780134,
      "node_id": "MDQ6VXNlcjc4MDEzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/780134?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wyager",
      "html_url": "https://github.com/wyager",
      "followers_url": "https://api.github.com/users/wyager/followers",
      "following_url": "https://api.github.com/users/wyager/following{/other_user}",
      "gists_url": "https://api.github.com/users/wyager/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wyager/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wyager/subscriptions",
      "organizations_url": "https://api.github.com/users/wyager/orgs",
      "repos_url": "https://api.github.com/users/wyager/repos",
      "events_url": "https://api.github.com/users/wyager/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wyager/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e5ddaf5ec8ae703818dcdcf28c7dd6e001b6d681",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5ddaf5ec8ae703818dcdcf28c7dd6e001b6d681",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5ddaf5ec8ae703818dcdcf28c7dd6e001b6d681"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2a252c94f31893d32300d7b9eed5af5681553223",
        "filename": "src/uint256.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fdd1251a87a0938f48e88970ae976e360c6e09f/src/uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fdd1251a87a0938f48e88970ae976e360c6e09f/src/uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.h?ref=5fdd1251a87a0938f48e88970ae976e360c6e09f",
        "patch": "@@ -8,6 +8,7 @@\n #include <limits.h>\n #include <stdio.h>\n #include <string.h>\n+#include <inttypes.h>\n #include <string>\n #include <vector>\n \n@@ -20,14 +21,14 @@ inline int Testuint256AdHoc(std::vector<std::string> vArg);\n \n \n /** Base class without constructors for uint256 and uint160.\n- * This makes the compiler let u use it in a union.\n+ * This makes the compiler let you use it in a union.\n  */\n template<unsigned int BITS>\n class base_uint\n {\n protected:\n     enum { WIDTH=BITS/32 };\n-    unsigned int pn[WIDTH];\n+    uint32_t pn[WIDTH];\n public:\n \n     bool operator!() const"
      }
    ]
  }
]