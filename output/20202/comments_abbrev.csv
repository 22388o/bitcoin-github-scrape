hebasto,2020-10-20 16:39:50,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/20202#issuecomment-712992671,712992671,
practicalswift,2020-10-20 19:18:01,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20202#issuecomment-713082922,713082922,
DrahtBot,2020-10-21 01:24:38,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20275 (wallet: List SQLite wallets in non-SQLite builds by ryanofsky)\n* #20206 (wallet, refactor: Include headers instea",https://github.com/bitcoin/bitcoin/pull/20202#issuecomment-713232420,713232420,
achow101,2020-10-23 16:56:22,"> This breaks a whole bunch of functional tests. It would be better if those are skipped.\n> \n> Having this configuration on one of the CI machines makes sense to me as well. As we work towards #20160 all tests should (also) use descriptor wallets. Perhaps merging #18788 first makes that easier.\n\nIt'd be a lot easier if tests used the MiniWallet. I think we can do those as a followup.",https://github.com/bitcoin/bitcoin/pull/20202#issuecomment-715459235,715459235,
luke-jr,2020-10-24 19:38:53,IMO PRs shouldn't be merged with tests broken...,https://github.com/bitcoin/bitcoin/pull/20202#issuecomment-716044869,716044869,
MarcoFalke,2020-10-25 07:33:04,"```\nC:\projects\bitcoin\src\wallet\walletdb.cpp(1087): error C4716: 'CreateMockWalletDatabase': must return a value [C:\projects\bitcoin\build_msvc\test_bitcoin-qt\test_bitcoin-qt.vcxproj]\nLINK : fatal error LNK1257: code generation failed [C:\projects\bitcoin\build_msvc\test_bitcoin-qt\test_bitcoin-qt.vcxproj]\ndb_tests.obj : error LNK2001: unresolved external symbol ""class std::shared_ptr<c",https://github.com/bitcoin/bitcoin/pull/20202#issuecomment-716106263,716106263,
achow101,2020-10-26 21:09:19,"Instead of prompting users to specify `descriptors=True`, how would people feel about just defaulting to `descriptors=True` and making all newly created wallets descriptor-sqlite wallets when BDB is not compiled?\n\nI think that this would be really helpful in our test framework to ensure that tests that shouldn't be restricted to one wallet type do pass with both. So we can stop making tests th",https://github.com/bitcoin/bitcoin/pull/20202#issuecomment-716825030,716825030,
luke-jr,2020-10-26 22:55:55,"IMO that should wait for descriptor wallets to leave experimental status.\n\nDescriptor wallets also shouldn't change behaviour vs legacy...",https://github.com/bitcoin/bitcoin/pull/20202#issuecomment-716868352,716868352,
sipa,2020-10-26 23:13:49,"> IMO that should wait for descriptor wallets to leave experimental status.\n\nAgree. If you accidentally build without BDB support (e.g. by not knowing that it's necessary for non-experimental wallets), you shouldn't be automatically opted into an experimental feature.\n\n> Descriptor wallets also shouldn't change behaviour vs legacy...\n\nNot sure what you mean here. In many ways, descript",https://github.com/bitcoin/bitcoin/pull/20202#issuecomment-716874755,716874755,
luke-jr,2020-10-26 23:55:07,"Ok, true, *most* behaviour shouldn't change though :)",https://github.com/bitcoin/bitcoin/pull/20202#issuecomment-716888962,716888962,
laanwj,2020-11-23 09:29:09,Code review ACK d52f502b1ea1cafa7d58c5517f01dba26ecb7269,https://github.com/bitcoin/bitcoin/pull/20202#issuecomment-732038082,732038082,
Sjors,2020-11-23 10:15:08,This is missing a line in `config.ini.in` (`@USE_BDB_TRUE@USE_BDB=true`) and an `is_bdb_compiled` helper for functional tests. Done in a followup #20458,https://github.com/bitcoin/bitcoin/pull/20202#issuecomment-732062981,732062981,
luke-jr,2020-10-20 16:39:58,Nit: s/functionality/support/,https://github.com/bitcoin/bitcoin/pull/20202#discussion_r508679462,508679462,build-aux/m4/bitcoin_find_bdb48.m4
luke-jr,2020-10-20 16:40:59,"If `--enable-wallet` is explicitly specified, this should AC_MSG_ERROR",https://github.com/bitcoin/bitcoin/pull/20202#discussion_r508680108,508680108,configure.ac
luke-jr,2020-10-20 16:43:24,What does this do without BDB?,https://github.com/bitcoin/bitcoin/pull/20202#discussion_r508681628,508681628,src/wallet/init.cpp
luke-jr,2020-10-20 16:44:51,Prefer to not compile the file at all...,https://github.com/bitcoin/bitcoin/pull/20202#discussion_r508682556,508682556,src/wallet/salvage.cpp
luke-jr,2020-10-20 16:46:30,"For a followup PR...\n\nShould we be testing with both mock dbs when bdb+sqlite are built?",https://github.com/bitcoin/bitcoin/pull/20202#discussion_r508683743,508683743,src/wallet/walletdb.cpp
achow101,2020-10-20 17:46:12,Done,https://github.com/bitcoin/bitcoin/pull/20202#discussion_r508721025,508721025,configure.ac
achow101,2020-10-20 17:46:22,"Nothing, so I've also disabled it.",https://github.com/bitcoin/bitcoin/pull/20202#discussion_r508721115,508721115,src/wallet/init.cpp
achow101,2020-10-20 17:46:27,Done,https://github.com/bitcoin/bitcoin/pull/20202#discussion_r508721173,508721173,src/wallet/salvage.cpp
luke-jr,2020-10-20 17:53:53,What happened to setChecked(false)?,https://github.com/bitcoin/bitcoin/pull/20202#discussion_r508725844,508725844,src/qt/createwalletdialog.cpp
achow101,2020-10-20 18:06:28,Was based on yesterday's version of #20156. Rebased again.,https://github.com/bitcoin/bitcoin/pull/20202#discussion_r508733830,508733830,src/qt/createwalletdialog.cpp
Sjors,2020-10-23 11:51:22,"bb93bf607b9d83218cff562e54f6bd00505c3ec7: nit: move `=` to the right a bit:\n```\n  with wallet   = yes\n    with sqlite = yes\n    with bdb = no\n```",https://github.com/bitcoin/bitcoin/pull/20202#discussion_r510829110,510829110,configure.ac
ryanofsky,2020-11-08 21:06:00,"In commit ""RPC: Require descriptors=True for createwallet when BDB is not compiled"" (d2781aa656cce419700ba57a4551a999756750a4)\n\nI think it would be good to drop the `#ifndef USE_BDB` here and the `#ifndef USE_SQLITE` a few lines above by just writing:\n\n```c++\noptions.require_format = wallet_creation_flags & WALLET_FLAG_DESCRIPTORS ? DatabaseFormat::SQLITE : DatabaseFormat::BERKELEY;\n``",https://github.com/bitcoin/bitcoin/pull/20202#discussion_r519477070,519477070,src/wallet/rpcwallet.cpp
ryanofsky,2020-11-08 21:18:10,"In commit ""Allow disabling BDB in configure with --without-bdb"" (26102beed00e51b3bb1e263287028d3e4b9d85c5)\n\nIs this change intentional? Commit description only says that this is adding a new option, not that this is changing default build behavior and automatically building without legacy wallet support if BDB is not found. Similarly, I'd also expect `use_bdb` value below to be default `yes` i",https://github.com/bitcoin/bitcoin/pull/20202#discussion_r519478328,519478328,configure.ac
ryanofsky,2020-11-08 21:34:11,"In commit ""Do not compile BDB things when USE_BDB is defined"" (8475409860d68e41e136129b59678fe1320cfb44)\n\nIt would be good to order commit ""Fix mock SQLiteDatabases"" (7b275da4608adc66ed6a7bbb1b807ca6dcb598e9) before this commit so mock databases aren't broken between commits by this call.\n\nAlso just a note in case other reviewers were curious like me but an `""""` database filename will crea",https://github.com/bitcoin/bitcoin/pull/20202#discussion_r519479902,519479902,src/wallet/walletdb.cpp
achow101,2020-11-08 21:48:02,"This doesn't change any behavior. I needed to do this to tell when the user explicitly does `--enable-wallet`. In that case, an error needs to be given when combined with `--without-bdb --without-sqlite`. Previously, `enable_wallet` would always be `yes` so it wasn't possible to automatically do `enable_wallet=no` when `--without-bdb --without-sqlite` without potentially confusing the user (it wou",https://github.com/bitcoin/bitcoin/pull/20202#discussion_r519481549,519481549,configure.ac
ryanofsky,2020-11-08 21:51:35,Are you saying before this change with default `./configure` and no options bitcoin would build without legacy wallet support if BDB wasn't found? And after this change it still does that? Or that before this change plain `./configure` errored if it couldn't find BDB and still does that? Either behavior seems fine (though second behavior seems less error prone). But if you have a commit changing d,https://github.com/bitcoin/bitcoin/pull/20202#discussion_r519481996,519481996,configure.ac
achow101,2020-11-08 21:58:53,"This doesn't change default behavior. This only effects a new behavior. The only thing this effects is the case where the user does `./configure --enable-wallet --without-bdb --without-sqlite`. With this change, we throw the error `wallet functionality requestsed but no BDB or SQLite support available`. Without this change, we would compile without wallet support.\n\nAs before, if BDB is not fou",https://github.com/bitcoin/bitcoin/pull/20202#discussion_r519482755,519482755,configure.ac
achow101,2020-11-08 22:10:59,This was done to have reasonable error messages. Can be cleaned up in a followup.,https://github.com/bitcoin/bitcoin/pull/20202#discussion_r519484166,519484166,src/wallet/rpcwallet.cpp
achow101,2020-11-08 22:12:23,"I guess so, but tests with BDB disabled are still broken after this PR so I didn't feel the need to do that. Arguable that change really belongs in #20267.",https://github.com/bitcoin/bitcoin/pull/20202#discussion_r519484343,519484343,src/wallet/walletdb.cpp
ryanofsky,2020-11-09 14:37:13,"Thanks. Apparently this works because `bitcoin_find_bdb48.m4` doesn't understand what ""auto"" means. It treats everything that isn't ""no"" as ""yes""",https://github.com/bitcoin/bitcoin/pull/20202#discussion_r519860321,519860321,configure.ac
luke-jr,2020-11-13 15:11:33,Also needed for `-flushwallet` and maybe `-privdb`?,https://github.com/bitcoin/bitcoin/pull/20202#discussion_r523012197,523012197,src/wallet/init.cpp
luke-jr,2020-11-13 15:11:55,"Since descriptor wallets are still experimental, I think it might be better to leave the checkbox alone (enabled + default off) but make the button give an error until the user explicitly checks it?\n\n",https://github.com/bitcoin/bitcoin/pull/20202#discussion_r523012420,523012420,src/qt/createwalletdialog.cpp
luke-jr,2020-11-13 15:12:16,Should we list bdb first since it's older?,https://github.com/bitcoin/bitcoin/pull/20202#discussion_r523012668,523012668,configure.ac
luke-jr,2020-11-13 15:12:54,"Since we error when BDB is missing, the help should just be ""default is enabled if wallet is enabled""\n\n```suggestion\n  [disable bdb wallet support (default is enabled if wallet is enabled)])],\n```",https://github.com/bitcoin/bitcoin/pull/20202#discussion_r523013074,523013074,configure.ac
achow101,2020-11-13 17:07:27,Not quite sure what you're asking.,https://github.com/bitcoin/bitcoin/pull/20202#discussion_r523090701,523090701,src/wallet/init.cpp
achow101,2020-11-13 17:08:44,"I think that UX would be frustrating to use because there's only one true option in that case, but you're pretending there's 2. Users will still get the experimental warning when the wallet is created.",https://github.com/bitcoin/bitcoin/pull/20202#discussion_r523092510,523092510,src/qt/createwalletdialog.cpp
achow101,2020-11-13 17:09:04,I don't think it matters.,https://github.com/bitcoin/bitcoin/pull/20202#discussion_r523093023,523093023,configure.ac
achow101,2020-11-13 17:10:46,Done.,https://github.com/bitcoin/bitcoin/pull/20202#discussion_r523095595,523095595,configure.ac
luke-jr,2020-11-13 17:31:58,"Me either, I think I somehow saw a different line here...",https://github.com/bitcoin/bitcoin/pull/20202#discussion_r523112327,523112327,src/wallet/init.cpp
