aalness,2014-12-04T08:38:59Z,tACK \n\n**scriptPubKey**:\nIF CODESEPARATOR ENDIF 0x21 0x0378d430274f8c5ec1321338151e9f27f4c676a008bdf8638d07c0b6be9ab35c71 CHECKSIGVERIFY CODESEPARATOR 1\n\n**Valid**\n\n1.\n\nscriptSig: 304502207a6974a77c591fa13dff60cabbb85a0de9e025c09c65a4b2285e47ce8e22f761022100f0efaac9ff8ac36b10721e0aae1fb975c90500b50c56e8a0cc52b0403f0425dd01 0\n\ndata:\nIF ENDIF 0x21 0x0378d430274f8c5ec1321338151e9f27f4c676,https://github.com/bitcoin/bitcoin/pull/5421#issuecomment-65552619,65552619,
laanwj,2014-12-04T12:28:40Z,Tested (on x86_64 and ARM) ACK cac15bedb1398a1eb72837b74ab76266305172e1 ([signature](https://dev.visucore.com/bitcoin/acks/5421))\n,https://github.com/bitcoin/bitcoin/pull/5421#issuecomment-65624921,65624921,
laanwj,2014-12-15T09:00:59Z,@gmaxwell @sipa ACKs?\n,https://github.com/bitcoin/bitcoin/pull/5421#issuecomment-66965344,66965344,
sipa,2014-12-16T11:19:14Z,"untested ACK; this should be safe in any case.\n\nI would prefer it if TestBuilder could be used, so it's easier to add variations later without needing to manually build the signatures. TestBuilder right now has no way to correctly deal with OP_CODESEPARATORs, so I'll see if I can add that after this PR.\n",https://github.com/bitcoin/bitcoin/pull/5421#issuecomment-67145107,67145107,
petertodd,2014-12-16T11:27:56Z,"Semi NACK re: testbuilder - I think there's a lot of value in a skilled human going through this stuff manually. Testbuilder + a skilled human can be useful, but there has to be a core set of tests built manually.\n\nFor example, I have another codebase I'm working on where the unittests test some fairly complex cryptographic hashing code by manually building up trees of hashes from scratch.\n",https://github.com/bitcoin/bitcoin/pull/5421#issuecomment-67146002,67146002,
sipa,2014-12-16T11:43:22Z,"@petertodd I think that whatever tests can be built automatically, should be built automatically. They're just more readable and reusable. Currently this is a type of test which we can't build automatically, so ACK on adding it manually.\n\nNote that the TestBuilder tests are included in the JSON code (and verified that they are), so they are available to other codebases, and modifications which w",https://github.com/bitcoin/bitcoin/pull/5421#issuecomment-67147471,67147471,
petertodd,2014-12-16T11:50:01Z,"@sipa Yeah, I don't fully agree there for consensus critical stuff. ""More readable"" can easily mean you've missed what the test _actually_ does because you're at too high a level of abstraction. For instance for that hashing code mentioned above you really did need that assurance that what you thought was being hashed actually was.\n\nHaving additional automatically built tests on top of that case",https://github.com/bitcoin/bitcoin/pull/5421#issuecomment-67148104,67148104,
sipa,2014-12-16T11:50:56Z,@petertodd No objection to having both automated and manual tests for tricky cases.\n,https://github.com/bitcoin/bitcoin/pull/5421#issuecomment-67148187,67148187,
petertodd,2014-12-16T12:03:42Z,@sipa Just reminding people that 95% of Bitcoin is a tricky case. :)\n,https://github.com/bitcoin/bitcoin/pull/5421#issuecomment-67149490,67149490,
