[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/87120939",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5900#issuecomment-87120939",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5900",
    "id": 87120939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MTIwOTM5",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-27T23:31:37Z",
    "updated_at": "2015-03-27T23:31:37Z",
    "author_association": "MEMBER",
    "body": "Ready for review.\n\nPing @morcos.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/87120939/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/87634414",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5900#issuecomment-87634414",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5900",
    "id": 87634414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjM0NDE0",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-30T10:54:46Z",
    "updated_at": "2015-03-30T10:58:03Z",
    "author_association": "MEMBER",
    "body": "I wanted to do a full sync with this enabled, but the extra checking is slow, even at the lower blocks it takes about a second per block (executing the test twice, sometimes it happens more often);\n\n```\n2015-03-30 10:51:32 Checked block index in 645ms\n2015-03-30 10:51:32 Checked block index in 565ms\n2015-03-30 10:51:32 UpdateTip: new best=00000000bc55e94d87fc6f2565abb2b781cf0b588b2c65f5fcb91e38a69ec93e  height=8189  log2_work=44.99967  tx=8273  date=2009-03-21 01:25:02 progress=0.000058  cache=23\n2015-03-30 10:51:33 Checked block index in 647ms\n2015-03-30 10:51:34 Checked block index in 565ms\n2015-03-30 10:51:34 UpdateTip: new best=000000002136a553f9bf7ba9979781548453aaf836e275febf273cc1c67dd3fe  height=8190  log2_work=44.999846  tx=8274  date=2009-03-21 01:27:49 progress=0.000058  cache=24\n2015-03-30 10:51:34 Checked block index in 665ms\n2015-03-30 10:51:35 Checked block index in 576ms\n2015-03-30 10:51:35 UpdateTip: new best=000000007b8668d5592a7121834c43237d7cfd28104f6276eebedab94901ff66  height=8191  log2_work=45.000022  tx=8275  date=2009-03-21 01:43:09 progress=0.000058  cache=25\n2015-03-30 10:51:36 Checked block index in 653ms\n```\n\nNot a huge issue for a hidden troubleshooting option, though enabling this by default on regtest could slow down the RPC tests.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/87634414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88258657",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5900#issuecomment-88258657",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5900",
    "id": 88258657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjU4NjU3",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T21:40:01Z",
    "updated_at": "2015-03-31T21:40:01Z",
    "author_association": "MEMBER",
    "body": "I've been looking at this in the context of #5863 and so far this code has found one bug we introduced there, in LoadBlockIndexDB (we have an incorrect test for adding things to mapBlocksUnlinked). Still working my way through to determine if this catches any other bugs.\n\nI've also started to identify the tests/assumptions introduced in this code which would need to change to support autoprune, would it be helpful to discuss those here?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88258657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88305462",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5900#issuecomment-88305462",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5900",
    "id": 88305462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MzA1NDYy",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-01T01:34:09Z",
    "updated_at": "2015-04-01T01:34:09Z",
    "author_association": "MEMBER",
    "body": "@laanwj A full sync is probably not very interesting, as it's mostly a single linear synchronization run.\n\nWe could perhaps have -checkblockindex=[float] to only run the test with the specified frequency, or have it only check blocks with height above a certain number or not in the main chain.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88305462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88373387",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5900#issuecomment-88373387",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5900",
    "id": 88373387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MzczMzg3",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-01T07:07:36Z",
    "updated_at": "2015-04-01T07:07:36Z",
    "author_association": "MEMBER",
    "body": "@sipa OK, I don't think that needs to be changed, likely this is based on a misunderstanding. I was assuming it was just another level of checking that can be enabled relatively innocuously during normal use, but it has too much impact for that.\n\nCould use a little bit of documentation (maybe in -help-debug?) about when and how to use this mode. \n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88373387/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88709226",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5900#issuecomment-88709226",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5900",
    "id": 88709226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4NzA5MjI2",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?u=b7dd63827227d69794b5fe28797b1bd107b930dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-02T03:01:25Z",
    "updated_at": "2015-04-02T03:01:25Z",
    "author_association": "MEMBER",
    "body": "Belated ACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/88709226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27576853",
    "pull_request_review_id": null,
    "id": 27576853,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTc2ODUz",
    "diff_hunk": "@@ -3213,6 +3219,136 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n     return nLoaded > 0;\n }\n \n+void static CheckBlockIndex()\n+{\n+    if (!fCheckBlockIndex) {\n+        return;\n+    }\n+\n+    LOCK(cs_main);\n+\n+    // Build forward-pointing map of the entire block tree.\n+    std::multimap<CBlockIndex*,CBlockIndex*> forward;\n+    for (BlockMap::iterator it = mapBlockIndex.begin(); it != mapBlockIndex.end(); it++) {\n+        forward.insert(std::make_pair(it->second->pprev, it->second));\n+    }\n+\n+    assert(forward.size() == mapBlockIndex.size());\n+\n+    std::pair<std::multimap<CBlockIndex*,CBlockIndex*>::iterator,std::multimap<CBlockIndex*,CBlockIndex*>::iterator> rangeGenesis = forward.equal_range(NULL);\n+    CBlockIndex *pindex = rangeGenesis.first->second;\n+    rangeGenesis.first++;\n+    assert(rangeGenesis.first == rangeGenesis.second); // There is only one index entry with parent NULL.\n+\n+    // Iterate over the entire block tree, using depth-first search.\n+    // Along the way, remember whether there are blocks on the path from genesis\n+    // block being explored which are the first to have certain properties.\n+    size_t nNodes = 0;\n+    int nHeight = 0;\n+    CBlockIndex* pindexFirstInvalid = NULL; // Oldest ancestor of pindex which is invalid.\n+    CBlockIndex* pindexFirstMissing = NULL; // Oldest ancestor of pindex which does not have BLOCK_HAVE_DATA.\n+    CBlockIndex* pindexFirstNotTreeValid = NULL; // Oldest ancestor of pindex which does not have BLOCK_VALID_TREE (regardless of being valid or not).\n+    CBlockIndex* pindexFirstNotChainValid = NULL; // Oldest ancestor of pindex which does not have BLOCK_VALID_CHAIN (regardless of being valid or not).\n+    CBlockIndex* pindexFirstNotScriptsValid = NULL; // Oldest ancestor of pindex which does not have BLOCK_VALID_SCRIPTS (regardless of being valid or not).\n+    while (pindex != NULL) {",
    "path": "src/main.cpp",
    "position": 98,
    "original_position": 98,
    "commit_id": "3fcfbc8ac5fcba474151ceedf61c4e433e433474",
    "original_commit_id": "3fcfbc8ac5fcba474151ceedf61c4e433e433474",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It looks like there aren't any explicit consistency checks for BLOCK_VALID_TRANSACTIONS.  As I understand it there are two properties:\n- BLOCK_VALID_TRANSACTIONS implies all parents are at least TREE.  We get this test implicitly since we already check that for everything TREE or greater, all its parents are at least TREE, so I don't think an additional test is needed for this condition.\n- If pindex and all parents are at least BLOCK_VALID_TRANSACTIONS then nChainTx is set.  I don't believe this consistency check is performed anywhere -- seems like this is worth adding?  I think right now the only check on nChainTx is based on whether pindexFirstMissing is set (a few lines down).\n",
    "created_at": "2015-04-01T14:59:16Z",
    "updated_at": "2015-04-01T14:59:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5900#discussion_r27576853",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5900",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27576853"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5900#discussion_r27576853"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5900"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27576853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3253,
    "original_line": 3253,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27593676",
    "pull_request_review_id": null,
    "id": 27593676,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NTkzNjc2",
    "diff_hunk": "@@ -3213,6 +3219,136 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n     return nLoaded > 0;\n }\n \n+void static CheckBlockIndex()\n+{\n+    if (!fCheckBlockIndex) {\n+        return;\n+    }\n+\n+    LOCK(cs_main);\n+\n+    // Build forward-pointing map of the entire block tree.\n+    std::multimap<CBlockIndex*,CBlockIndex*> forward;\n+    for (BlockMap::iterator it = mapBlockIndex.begin(); it != mapBlockIndex.end(); it++) {\n+        forward.insert(std::make_pair(it->second->pprev, it->second));\n+    }\n+\n+    assert(forward.size() == mapBlockIndex.size());\n+\n+    std::pair<std::multimap<CBlockIndex*,CBlockIndex*>::iterator,std::multimap<CBlockIndex*,CBlockIndex*>::iterator> rangeGenesis = forward.equal_range(NULL);\n+    CBlockIndex *pindex = rangeGenesis.first->second;\n+    rangeGenesis.first++;\n+    assert(rangeGenesis.first == rangeGenesis.second); // There is only one index entry with parent NULL.\n+\n+    // Iterate over the entire block tree, using depth-first search.\n+    // Along the way, remember whether there are blocks on the path from genesis\n+    // block being explored which are the first to have certain properties.\n+    size_t nNodes = 0;\n+    int nHeight = 0;\n+    CBlockIndex* pindexFirstInvalid = NULL; // Oldest ancestor of pindex which is invalid.\n+    CBlockIndex* pindexFirstMissing = NULL; // Oldest ancestor of pindex which does not have BLOCK_HAVE_DATA.\n+    CBlockIndex* pindexFirstNotTreeValid = NULL; // Oldest ancestor of pindex which does not have BLOCK_VALID_TREE (regardless of being valid or not).\n+    CBlockIndex* pindexFirstNotChainValid = NULL; // Oldest ancestor of pindex which does not have BLOCK_VALID_CHAIN (regardless of being valid or not).\n+    CBlockIndex* pindexFirstNotScriptsValid = NULL; // Oldest ancestor of pindex which does not have BLOCK_VALID_SCRIPTS (regardless of being valid or not).\n+    while (pindex != NULL) {",
    "path": "src/main.cpp",
    "position": 98,
    "original_position": 98,
    "commit_id": "3fcfbc8ac5fcba474151ceedf61c4e433e433474",
    "original_commit_id": "3fcfbc8ac5fcba474151ceedf61c4e433e433474",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This sounds correct to me. Feel free to PR an extra check for this?\n",
    "created_at": "2015-04-01T17:56:53Z",
    "updated_at": "2015-04-01T17:56:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5900#discussion_r27593676",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5900",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27593676"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5900#discussion_r27593676"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5900"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27593676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3253,
    "original_line": 3253,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27603635",
    "pull_request_review_id": null,
    "id": 27603635,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI3NjAzNjM1",
    "diff_hunk": "@@ -3213,6 +3219,136 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n     return nLoaded > 0;\n }\n \n+void static CheckBlockIndex()\n+{\n+    if (!fCheckBlockIndex) {\n+        return;\n+    }\n+\n+    LOCK(cs_main);\n+\n+    // Build forward-pointing map of the entire block tree.\n+    std::multimap<CBlockIndex*,CBlockIndex*> forward;\n+    for (BlockMap::iterator it = mapBlockIndex.begin(); it != mapBlockIndex.end(); it++) {\n+        forward.insert(std::make_pair(it->second->pprev, it->second));\n+    }\n+\n+    assert(forward.size() == mapBlockIndex.size());\n+\n+    std::pair<std::multimap<CBlockIndex*,CBlockIndex*>::iterator,std::multimap<CBlockIndex*,CBlockIndex*>::iterator> rangeGenesis = forward.equal_range(NULL);\n+    CBlockIndex *pindex = rangeGenesis.first->second;\n+    rangeGenesis.first++;\n+    assert(rangeGenesis.first == rangeGenesis.second); // There is only one index entry with parent NULL.\n+\n+    // Iterate over the entire block tree, using depth-first search.\n+    // Along the way, remember whether there are blocks on the path from genesis\n+    // block being explored which are the first to have certain properties.\n+    size_t nNodes = 0;\n+    int nHeight = 0;\n+    CBlockIndex* pindexFirstInvalid = NULL; // Oldest ancestor of pindex which is invalid.\n+    CBlockIndex* pindexFirstMissing = NULL; // Oldest ancestor of pindex which does not have BLOCK_HAVE_DATA.\n+    CBlockIndex* pindexFirstNotTreeValid = NULL; // Oldest ancestor of pindex which does not have BLOCK_VALID_TREE (regardless of being valid or not).\n+    CBlockIndex* pindexFirstNotChainValid = NULL; // Oldest ancestor of pindex which does not have BLOCK_VALID_CHAIN (regardless of being valid or not).\n+    CBlockIndex* pindexFirstNotScriptsValid = NULL; // Oldest ancestor of pindex which does not have BLOCK_VALID_SCRIPTS (regardless of being valid or not).\n+    while (pindex != NULL) {",
    "path": "src/main.cpp",
    "position": 98,
    "original_position": 98,
    "commit_id": "3fcfbc8ac5fcba474151ceedf61c4e433e433474",
    "original_commit_id": "3fcfbc8ac5fcba474151ceedf61c4e433e433474",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yep -- please see #5959 \n",
    "created_at": "2015-04-01T19:38:47Z",
    "updated_at": "2015-04-01T19:38:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/5900#discussion_r27603635",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5900",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27603635"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/5900#discussion_r27603635"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5900"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/27603635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3253,
    "original_line": 3253,
    "side": "RIGHT"
  }
]