practicalswift,2021-01-26 11:11:43,Concept ACK on sanity checking test before testing,https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-767473864,767473864,
MarcoFalke,2021-01-30 07:22:32,"```\nmake[1]: Leaving directory '/distsrc-base/distsrc-65f9b3f774df-x86_64-apple-darwin18'\n+ make test-security-check V=1\nOTOOL=/bitcoin/depends/x86_64-apple-darwin18/native/bin/x86_64-apple-darwin18-otool /gnu/store/skvjjmxwgy7yjn1jyc5w6z6lmjs6rsjb-profile/bin/python3.7 ./contrib/devtools/test-security-check.py TestSecurityChecks.test_MACHO\nld: unrecognized -a option `llow_stack_execute'\",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-770171291,770171291,
dongcarl,2021-02-09 18:58:12,Python nerds: Anyone know why the `security-check.py` scripts can `import pixie` but `test-security-check.py` cannot import a function from my `utils.py` file?,https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-776165088,776165088,
MarcoFalke,2021-02-09 19:03:38,"Does this help?\n\n```diff\ndiff --git a/Makefile.am b/Makefile.am\nindex f6b824faaa..aed44113b8 100644\n--- a/Makefile.am\n+++ b/Makefile.am\n@@ -58,6 +58,7 @@ DIST_SHARE = \\n \n BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\n            $(top_srcdir)/contrib/devtools/security-check.py \\n+           $(top_srcdir)/contrib/devtools/utils.py \\n            $(top_srcdir)/c",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-776168632,776168632,
dongcarl,2021-02-23 03:09:32,"Pushed 809e14a62e8ed173255d0e56b89c657a2a0c022e ‚Üí cae518c9a9d1a7faae730246dfc543b77e0e2baa\n- Rebased on top of master",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-783845201,783845201,
dongcarl,2021-02-23 17:09:57,"I tried running a build, but it seems to break due to the introduction of: #21255\n\nLogs:\n```\nCC='x86_64-linux-gnu-gcc' CPPFILT=/gnu/store/3rjpkl6g8iwjis5rrpmgrblk21vz7pgx-profile/bin/x86_64-linux-gnu-c++filt /gnu/store/3rjpkl6g8iwjis5rrpmgrblk21vz7pgx-profile/bin/python3.8 ./contrib/devtools/test-symbol-check.py TestSymbolChecks.test_ELF\nx86_64-linux-gnu-ld: /tmp/cczw0TSm.o: in function ",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-784357914,784357914,
fanquake,2021-02-23 23:51:16,Spoke with Carl and the solution here is to move the  Guix cross-compilation toolchain to be glibc 2.31 based.,https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-784614354,784614354,
dongcarl,2021-03-02 22:49:45,"Pushed cae518c9a9d1a7faae730246dfc543b77e0e2baa -> db6e91a5cdbd681f51d1eae4e266164cc602d841\n- Rebased over master\n- Use binutils disable flag patch from debian upstream for binutils 2.34\n- Add commit to use/test `--reloc-section`\n\n```\nb2dc314c882ba3dd119c44ed2673b1efe759f94ffd09a1f303a3bedc111cd39c  output/bitcoin-db6e91a5cdbd-aarch64-linux-gnu-debug.tar.gz\na0ae4738bd48c9cad43e4d45cf",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-789280397,789280397,
DrahtBot,2021-03-03 10:06:47,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21515 by naumenkogs\n\nIf you consider this pull request important, please also help to review the conflicting pull reque",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-789595814,789595814,
fanquake,2021-03-04 03:56:14,"One transient failure while building:\n```bash\nsubstitution of /gnu/store/04qddg51ih327yc8p7q2vn00slg4v1n9-gcc-cross-x86_64-w64-mingw32-9.3.0-lib complete\n binutils-cross-x86_64-w64-mingw32-2.34                                            18.4MiB/s 00:01 | 27.1MiB transferred\n\ndownloading from https://guix.carldong.io/nar/gzip/r7kbdcmb1w4is2bwjxx8jqy9fpb9pa9b-ld-wrapper-x86_64-w64-mingw32-",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-790270349,790270349,
DrahtBot,2021-03-08 22:30:46,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 48725e64fbfb85200dd2226386fbf1cfc8fe6c1f<br>(master) | commit 7a5313af9816cfe0cd45e2cb6cb7df953a70da5a<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`c0874d1b330fbefe...`](https://drahtbot.space/guix/bitcoin/bitcoin/48725e64fbfb85200dd2226386fbf1cfc8fe6c1f/bitcoin-48725e64fbfb-aarch64-linux,https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-793131278,793131278,
dongcarl,2021-03-08 23:47:56,"Pushed db6e91a5cdbd681f51d1eae4e266164cc602d841 -> 1cd35ec2c3ed51c5e044d7bf5c932d7f97b5df91\n- Addressed https://github.com/bitcoin/bitcoin/pull/20980#pullrequestreview-603630859",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-793178247,793178247,
dongcarl,2021-03-08 23:50:58,"Pushed 1cd35ec2c3ed51c5e044d7bf5c932d7f97b5df91 -> 05f870018c618167c4740e7d1381e98bd30ae5f9\n- Rebased over master\n\n-----\n\n> One transient failure while building:\n> ...\n\nThanks for your diligent testing ‚ò∫Ô∏è. [Apparently](https://guix.gnu.org/manual/en/guix.html#Substitution-Failure) we should provide the `--fallback` flag so that builds don't stop when a substitution fails. I will ad",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-793180139,793180139,
hebasto,2021-03-13 15:17:59,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-798497402,798497402,
hebasto,2021-03-13 20:11:13,"Guix builds:\n```\n$ find output -type f -name *$(git rev-parse --short HEAD)*.* -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\nd975454fdfc02b97ed1acb0168e5cacf736f22fc8eacfc9425b7da0ac31bde4d  output/bitcoin-05f870018c61-aarch64-linux-gnu-debug.tar.gz\nc3542af7161f6daf1aafa9ef7ee8c6fc648d6d22716f9e4d85b7663e38fbdc8a  output/bitcoin-05f870018c61-aarch64-linux-gnu.tar.gz\nbddeb0cb201f82",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-798778196,798778196,
jarolrod,2021-04-14 06:31:59,"I know this needs a rebase, but contributing GUIX hashes for 05f870018c618167c4740e7d1381e98bd30ae5f9. Mine match hebasto:\n\n```\nfind output -type f -name *$(git rev-parse --short HEAD)*.* -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n\nd975454fdfc02b97ed1acb0168e5cacf736f22fc8eacfc9425b7da0ac31bde4d  output/bitcoin-05f870018c61-aarch64-linux-gnu-debug.tar.gz\nc3542af7161f6daf1aafa",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-819265988,819265988,
dongcarl,2021-04-28 19:54:50,"Now based on: #21664\n\nMy testing of the new LIEF check outputs:\n```\n(Pdb) call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--enable-reloc-section','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va','-no-pie','-fno-PIE'])\n(1, 'test1.exe: failed PIE DYNAMIC_BASE HIGH_ENTROPY_VA')\n(Pdb) call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--enable-reloc-sect",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-828735706,828735706,
DrahtBot,2021-05-03 17:25:46,<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\nüïµÔ∏è @sipa @achow101 have been requested to review this pull request as specified in the REVIEWERS file.,https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-831409723,831409723,
dongcarl,2021-05-07 19:34:35,"Pushed 69c650b13a...4914a082a4\n- Rebased over master now that https://github.com/bitcoin/bitcoin/pull/21664 is merged.",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-834722614,834722614,
hebasto,2021-05-09 12:41:00,"https://cirrus-ci.com/task/5154764032835584?logs=lint#L855\n```\ncontrib/devtools/symbol-check.py:15:1: F401 'os' imported but unused\ncontrib/devtools/test-security-check.py:10:1: F401 'typing.List' imported but unused\nSuccess: no issues found in 201 source files\n^---- failure generated from test/lint/lint-python.sh\n```",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-835799644,835799644,
dongcarl,2021-05-12 19:48:32,"Pushed 4914a082a4991b2cfee2e934ebabdb890f65d3de -> d9a3d3255d3565181f2e3a7c450aa01ffa8d3163\n- Squashed a few commits which no longer make sense to be separate\n- Rebased over master\n- Addressed: https://github.com/bitcoin/bitcoin/pull/20980#pullrequestreview-655077115",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-840052113,840052113,
hebasto,2021-05-13 09:33:11,Testing this PR together with #21871 reveals some kind of [incompatibility](https://github.com/bitcoin/bitcoin/pull/21871#issuecomment-840104559).,https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-840440681,840440681,
fanquake,2021-07-01 08:43:05,"I am fixing the macOS issues with test-security-check, so this can be part of 22.0.",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-872050853,872050853,
fanquake,2021-07-01 13:03:20,"I've opened #22381, which is a rebased version of this, with the macOS  fix.",https://github.com/bitcoin/bitcoin/pull/20980#issuecomment-872228460,872228460,
fanquake,2021-01-22 04:26:25,"If you are going to change these, you'll have to fixup the mypy issues (causing the lint job to fail):\n```bash\ncontrib/devtools/symbol-check.py:198: error: List item 0 has incompatible type ""Optional[str]""; expected ""Union[bytes, str, _PathLike[Any]]""\ncontrib/devtools/symbol-check.py:219: error: List item 0 has incompatible type ""Optional[str]""; expected ""Union[bytes, str, _PathLike[Any]]""\",https://github.com/bitcoin/bitcoin/pull/20980#discussion_r562380245,562380245,contrib/devtools/security-check.py
fanquake,2021-01-22 04:28:52,"The Linux security checks don't need either `objdump`, or `otool` (we are using [pixie](https://github.com/bitcoin/bitcoin/blob/master/contrib/devtools/pixie.py)), so why set them here? Same for macOS not needing `objdump` and PE not needing `otool`.",https://github.com/bitcoin/bitcoin/pull/20980#discussion_r562381009,562381009,Makefile.am
fanquake,2021-01-22 04:37:37,nit: could drop `ELF` from here and below. As the security (and symbol) checks are across all platforms.,https://github.com/bitcoin/bitcoin/pull/20980#discussion_r562383236,562383236,contrib/guix/libexec/build.sh
dongcarl,2021-01-22 20:14:58,Fixed!,https://github.com/bitcoin/bitcoin/pull/20980#discussion_r562883218,562883218,contrib/guix/libexec/build.sh
dongcarl,2021-01-22 20:15:02,Fixed!,https://github.com/bitcoin/bitcoin/pull/20980#discussion_r562883267,562883267,Makefile.am
dongcarl,2021-01-22 20:15:51,"Not sure how best to fix...\n\nNaive fix:\n```diff\ndiff --git a/contrib/devtools/symbol-check.py b/contrib/devtools/symbol-check.py\nindex 52f04e8cdf..e85f5b5fd4 100755\n--- a/contrib/devtools/symbol-check.py\n+++ b/contrib/devtools/symbol-check.py\n@@ -52,9 +52,9 @@ IGNORE_EXPORTS = {\n '_edata', '_end', '__end__', '_init', '__bss_start', '__bss_start__', '_bss_end__', '__bss_end__', '_",https://github.com/bitcoin/bitcoin/pull/20980#discussion_r562883708,562883708,contrib/devtools/security-check.py
fanquake,2021-03-04 01:50:01,"In d3e6ee6439f98c3676ce1909a5218549cbfd84d8. I think testing for this, and adding to our hardened ldflags when available is fine. It's enabled by default, however we like to be explicit. It's also available with the binutils (2.34) we are using for gitian builds.\n\nNote that some of these flags also imply each other:\n`--high-entropy-va` implies `--dynamic-base` & `--enable-reloc-section`\n`-",https://github.com/bitcoin/bitcoin/pull/20980#discussion_r586965347,586965347,configure.ac
fanquake,2021-03-04 02:00:24,Checked that this matches https://salsa.debian.org/mingw-w64-team/binutils-mingw-w64/-/blob/master/debian/patches/disable-flags.patch bar whitespace changes.,https://github.com/bitcoin/bitcoin/pull/20980#discussion_r586973378,586973378,contrib/guix/patches/binutils-mingw-w64-disable-flags.patch
fanquake,2021-03-04 02:04:36,"At this stage we have already given in to not being able to run the test security check target for windows in gitian due to lack of `--no` options in ld, so adding `--disable` here to test `--enable-reloc-section` isn't making anything worse. If anything this speaks to the usefulness of Guix, given how easy it is to patch these `--no/--disable` flags back into our toolchain. It would be much  more",https://github.com/bitcoin/bitcoin/pull/20980#discussion_r586976252,586976252,contrib/devtools/test-security-check.py
laanwj,2021-03-15 09:22:48,"What is the rationale for making these lambdas instead of evaluating them here and now, once? We don't expect anything to change over the course of the program do we?",https://github.com/bitcoin/bitcoin/pull/20980#discussion_r594169309,594169309,contrib/devtools/symbol-check.py
dongcarl,2021-03-15 16:10:30,"In order to appease the python type linter, I made `determine_wellknown_cmd` simply error out if the program is not found\n\nhttps://github.com/bitcoin/bitcoin/blob/05f870018c618167c4740e7d1381e98bd30ae5f9/contrib/devtools/utils.py#L14-L22\n\nTherefore, if we were to evaluate these immediately, and the tool does not exist in the environment (e.g. `otool` won't exist in a build container for Li",https://github.com/bitcoin/bitcoin/pull/20980#discussion_r594475181,594475181,contrib/devtools/symbol-check.py
laanwj,2021-03-16 13:55:13,"I personally think  using lambdas here is not a nice construction. If it is only 'to appease the type linter', please add an ignore pragma `# type: ignore`. Our purpose for linters is to make the code better not unnecessarily verbose :smile: ",https://github.com/bitcoin/bitcoin/pull/20980#discussion_r595191372,595191372,contrib/devtools/symbol-check.py
hebasto,2021-05-09 13:08:46,"style nit: I know it follows the surrounding style, but the double quoting is really unneeded here:\n```suggestion\n  AX_CHECK_LINK_FLAG([-Wl,--enable-reloc-section], [HARDENED_LDFLAGS=""$HARDENED_LDFLAGS -Wl,--enable-reloc-section""], [], [$LDFLAG_WERROR])\n```",https://github.com/bitcoin/bitcoin/pull/20980#discussion_r628888314,628888314,configure.ac
