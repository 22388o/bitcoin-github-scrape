[
  {
    "sha": "835a21b42402d546bd72f8a3f452f0c743fefe82",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MzVhMjFiNDI0MDJkNTQ2YmQ3MmY4YTNmNDUyZjBjNzQzZmVmZTgy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-02-16T13:59:04Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-02-16T13:59:04Z"
      },
      "message": "Squashed 'src/leveldb/' changes from c521b3ac65..64052c76c5\n\n64052c76c5 Merge #15: Add filename to corruption errors\n135ed0fb4e Add filename to corruption errors\n\ngit-subtree-dir: src/leveldb\ngit-subtree-split: 64052c76c567cff3dad32d1db0ef969d97b5882f",
      "tree": {
        "sha": "d14102bd5802c9b2d4472f712a0a66653e41f5cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d14102bd5802c9b2d4472f712a0a66653e41f5cc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/835a21b42402d546bd72f8a3f452f0c743fefe82",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/835a21b42402d546bd72f8a3f452f0c743fefe82",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/835a21b42402d546bd72f8a3f452f0c743fefe82",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/835a21b42402d546bd72f8a3f452f0c743fefe82/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b13a68e129f51b664e33b1894e33ebb7b94cdcc7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b13a68e129f51b664e33b1894e33ebb7b94cdcc7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b13a68e129f51b664e33b1894e33ebb7b94cdcc7"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 32,
      "deletions": 8
    },
    "files": [
      {
        "sha": "3bb58e560aa7c099c7937d226315d1ed46273d43",
        "filename": "db/db_impl.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/835a21b42402d546bd72f8a3f452f0c743fefe82/db/db_impl.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/835a21b42402d546bd72f8a3f452f0c743fefe82/db/db_impl.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/db/db_impl.cc?ref=835a21b42402d546bd72f8a3f452f0c743fefe82",
        "patch": "@@ -414,7 +414,7 @@ Status DBImpl::RecoverLogFile(uint64_t log_number, bool last_log,\n          status.ok()) {\n     if (record.size() < 12) {\n       reporter.Corruption(\n-          record.size(), Status::Corruption(\"log record too small\"));\n+          record.size(), Status::Corruption(\"log record too small\", fname));\n       continue;\n     }\n     WriteBatchInternal::SetContents(&batch, record);"
      },
      {
        "sha": "d06d64d640b19f60a37571dcb887be5f36ce1514",
        "filename": "db/leveldbutil.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/835a21b42402d546bd72f8a3f452f0c743fefe82/db/leveldbutil.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/835a21b42402d546bd72f8a3f452f0c743fefe82/db/leveldbutil.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/db/leveldbutil.cc?ref=835a21b42402d546bd72f8a3f452f0c743fefe82",
        "patch": "@@ -19,6 +19,7 @@ class StdoutPrinter : public WritableFile {\n   virtual Status Close() { return Status::OK(); }\n   virtual Status Flush() { return Status::OK(); }\n   virtual Status Sync() { return Status::OK(); }\n+  virtual std::string GetName() const { return \"[stdout]\"; }\n };\n \n bool HandleDumpCommand(Env* env, char** files, int num) {"
      },
      {
        "sha": "8b6ad136d7dab58717e7d2ced614e1fb78024d8a",
        "filename": "db/log_reader.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/835a21b42402d546bd72f8a3f452f0c743fefe82/db/log_reader.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/835a21b42402d546bd72f8a3f452f0c743fefe82/db/log_reader.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/db/log_reader.cc?ref=835a21b42402d546bd72f8a3f452f0c743fefe82",
        "patch": "@@ -186,7 +186,7 @@ uint64_t Reader::LastRecordOffset() {\n }\n \n void Reader::ReportCorruption(uint64_t bytes, const char* reason) {\n-  ReportDrop(bytes, Status::Corruption(reason));\n+  ReportDrop(bytes, Status::Corruption(reason, file_->GetName()));\n }\n \n void Reader::ReportDrop(uint64_t bytes, const Status& reason) {"
      },
      {
        "sha": "7281e3d3457fe3a088a18472c25b699b986b42d5",
        "filename": "db/repair.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/835a21b42402d546bd72f8a3f452f0c743fefe82/db/repair.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/835a21b42402d546bd72f8a3f452f0c743fefe82/db/repair.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/db/repair.cc?ref=835a21b42402d546bd72f8a3f452f0c743fefe82",
        "patch": "@@ -203,7 +203,7 @@ class Repairer {\n     while (reader.ReadRecord(&record, &scratch)) {\n       if (record.size() < 12) {\n         reporter.Corruption(\n-            record.size(), Status::Corruption(\"log record too small\"));\n+            record.size(), Status::Corruption(\"log record too small\", logname));\n         continue;\n       }\n       WriteBatchInternal::SetContents(&batch, record);"
      },
      {
        "sha": "68c0614a59e5e98d635cf9b8b5d8b2ff0f75be22",
        "filename": "helpers/memenv/memenv.cc",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/835a21b42402d546bd72f8a3f452f0c743fefe82/helpers/memenv/memenv.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/835a21b42402d546bd72f8a3f452f0c743fefe82/helpers/memenv/memenv.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/helpers/memenv/memenv.cc?ref=835a21b42402d546bd72f8a3f452f0c743fefe82",
        "patch": "@@ -176,6 +176,7 @@ class SequentialFileImpl : public SequentialFile {\n     return Status::OK();\n   }\n \n+  virtual std::string GetName() const { return \"[memenv]\"; }\n  private:\n   FileState* file_;\n   uint64_t pos_;\n@@ -196,6 +197,7 @@ class RandomAccessFileImpl : public RandomAccessFile {\n     return file_->Read(offset, n, result, scratch);\n   }\n \n+  virtual std::string GetName() const { return \"[memenv]\"; }\n  private:\n   FileState* file_;\n };\n@@ -218,6 +220,7 @@ class WritableFileImpl : public WritableFile {\n   virtual Status Flush() { return Status::OK(); }\n   virtual Status Sync() { return Status::OK(); }\n \n+  virtual std::string GetName() const { return \"[memenv]\"; }\n  private:\n   FileState* file_;\n };"
      },
      {
        "sha": "275d441eaeee49aa3418b0f672d03bd61d8bab6c",
        "filename": "include/leveldb/env.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/835a21b42402d546bd72f8a3f452f0c743fefe82/include/leveldb/env.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/835a21b42402d546bd72f8a3f452f0c743fefe82/include/leveldb/env.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/include/leveldb/env.h?ref=835a21b42402d546bd72f8a3f452f0c743fefe82",
        "patch": "@@ -191,6 +191,9 @@ class SequentialFile {\n   // REQUIRES: External synchronization\n   virtual Status Skip(uint64_t n) = 0;\n \n+  // Get a name for the file, only for error reporting\n+  virtual std::string GetName() const = 0;\n+\n  private:\n   // No copying allowed\n   SequentialFile(const SequentialFile&);\n@@ -215,6 +218,9 @@ class RandomAccessFile {\n   virtual Status Read(uint64_t offset, size_t n, Slice* result,\n                       char* scratch) const = 0;\n \n+  // Get a name for the file, only for error reporting\n+  virtual std::string GetName() const = 0;\n+\n  private:\n   // No copying allowed\n   RandomAccessFile(const RandomAccessFile&);\n@@ -234,6 +240,9 @@ class WritableFile {\n   virtual Status Flush() = 0;\n   virtual Status Sync() = 0;\n \n+  // Get a name for the file, only for error reporting\n+  virtual std::string GetName() const = 0;\n+\n  private:\n   // No copying allowed\n   WritableFile(const WritableFile&);"
      },
      {
        "sha": "285e1c0de39d7f6a915f1812c9f18c17a4bcf908",
        "filename": "table/format.cc",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/835a21b42402d546bd72f8a3f452f0c743fefe82/table/format.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/835a21b42402d546bd72f8a3f452f0c743fefe82/table/format.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/table/format.cc?ref=835a21b42402d546bd72f8a3f452f0c743fefe82",
        "patch": "@@ -82,7 +82,7 @@ Status ReadBlock(RandomAccessFile* file,\n   }\n   if (contents.size() != n + kBlockTrailerSize) {\n     delete[] buf;\n-    return Status::Corruption(\"truncated block read\");\n+    return Status::Corruption(\"truncated block read\", file->GetName());\n   }\n \n   // Check the crc of the type and the block contents\n@@ -92,7 +92,7 @@ Status ReadBlock(RandomAccessFile* file,\n     const uint32_t actual = crc32c::Value(data, n + 1);\n     if (actual != crc) {\n       delete[] buf;\n-      s = Status::Corruption(\"block checksum mismatch\");\n+      s = Status::Corruption(\"block checksum mismatch\", file->GetName());\n       return s;\n     }\n   }\n@@ -119,13 +119,13 @@ Status ReadBlock(RandomAccessFile* file,\n       size_t ulength = 0;\n       if (!port::Snappy_GetUncompressedLength(data, n, &ulength)) {\n         delete[] buf;\n-        return Status::Corruption(\"corrupted compressed block contents\");\n+        return Status::Corruption(\"corrupted compressed block contents\", file->GetName());\n       }\n       char* ubuf = new char[ulength];\n       if (!port::Snappy_Uncompress(data, n, ubuf)) {\n         delete[] buf;\n         delete[] ubuf;\n-        return Status::Corruption(\"corrupted compressed block contents\");\n+        return Status::Corruption(\"corrupted compressed block contents\", file->GetName());\n       }\n       delete[] buf;\n       result->data = Slice(ubuf, ulength);\n@@ -135,7 +135,7 @@ Status ReadBlock(RandomAccessFile* file,\n     }\n     default:\n       delete[] buf;\n-      return Status::Corruption(\"bad block type\");\n+      return Status::Corruption(\"bad block type\", file->GetName());\n   }\n \n   return Status::OK();"
      },
      {
        "sha": "4676bc2240c97b1eceb3e9961e5cee832b58492f",
        "filename": "util/env_posix.cc",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/835a21b42402d546bd72f8a3f452f0c743fefe82/util/env_posix.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/835a21b42402d546bd72f8a3f452f0c743fefe82/util/env_posix.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/util/env_posix.cc?ref=835a21b42402d546bd72f8a3f452f0c743fefe82",
        "patch": "@@ -121,6 +121,8 @@ class PosixSequentialFile: public SequentialFile {\n     }\n     return Status::OK();\n   }\n+\n+  virtual std::string GetName() const { return filename_; }\n };\n \n // pread() based random-access\n@@ -172,6 +174,8 @@ class PosixRandomAccessFile: public RandomAccessFile {\n     }\n     return s;\n   }\n+\n+  virtual std::string GetName() const { return filename_; }\n };\n \n // mmap() based random-access\n@@ -206,6 +210,8 @@ class PosixMmapReadableFile: public RandomAccessFile {\n     }\n     return s;\n   }\n+\n+  virtual std::string GetName() const { return filename_; }\n };\n \n class PosixWritableFile : public WritableFile {\n@@ -287,6 +293,8 @@ class PosixWritableFile : public WritableFile {\n     }\n     return s;\n   }\n+\n+  virtual std::string GetName() const { return filename_; }\n };\n \n static int LockOrUnlock(int fd, bool lock) {"
      },
      {
        "sha": "81380216bb09b7afd9c85760bb729a28716bb069",
        "filename": "util/env_win.cc",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/835a21b42402d546bd72f8a3f452f0c743fefe82/util/env_win.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/835a21b42402d546bd72f8a3f452f0c743fefe82/util/env_win.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/util/env_win.cc?ref=835a21b42402d546bd72f8a3f452f0c743fefe82",
        "patch": "@@ -78,6 +78,7 @@ class Win32SequentialFile : public SequentialFile\n     virtual Status Read(size_t n, Slice* result, char* scratch);\n     virtual Status Skip(uint64_t n);\n     BOOL isEnable();\n+    virtual std::string GetName() const { return _filename; }\n private:\n     BOOL _Init();\n     void _CleanUp();\n@@ -94,6 +95,7 @@ class Win32RandomAccessFile : public RandomAccessFile\n     virtual ~Win32RandomAccessFile();\n     virtual Status Read(uint64_t offset, size_t n, Slice* result,char* scratch) const;\n     BOOL isEnable();\n+    virtual std::string GetName() const { return _filename; }\n private:\n     BOOL _Init(LPCWSTR path);\n     void _CleanUp();\n@@ -114,6 +116,7 @@ class Win32WritableFile : public WritableFile\n     virtual Status Flush();\n     virtual Status Sync();\n     BOOL isEnable();\n+    virtual std::string GetName() const { return filename_; }\n private:\n     std::string filename_;\n     ::HANDLE _hFile;"
      }
    ]
  },
  {
    "sha": "faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWE2ZGQyN2IxZjFmOTZmNWUxYTI2ZTgzMGUxYTgwMjU1YWZkYjVm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-02-16T14:01:35Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-02-16T13:59:28Z"
      },
      "message": "Bump leveldb subtree",
      "tree": {
        "sha": "ac28ac960c3a60cfa750bf86d095ef01e0f72280",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac28ac960c3a60cfa750bf86d095ef01e0f72280"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABAgAGBQJahuPAAAoJEM4rdWl+aaVICnUL/2gQj816lcpllx8n9KRFCm3q\nxwT8D9sTpsA7wg/t75dVcd/ZiGsYOxdUNCzKoG1FmSyW+OjL5Ffsgsxsf6EcD/cn\ns4GNolpnHP6qyNOU0Eohi4y1z3miQt2hzMeJxYGW2KehKFY9HZZwcDySUEKOSeii\nOMJRuQXkGduQiEUBX6Su4aprTm7miLH8j+kDBcBs1qKDduZ9iReIXm9CqjwT7k+L\nvImnYDizdt+vIlmOdC/zZRYQu0tJRi5WKgduqT7XFYUEO25VI6rzC4IDTHNpa/uE\n3js3xG1QyECpwd+v2pHrmIdpBzT8MovEKdS/k94Wz88X2PukNbqxY1FM2qjmx7CL\nfH3tzjv9VnrGA56i3hL5ct4G3hAn7pC6fUhNOXYlgJwRO7ZCH9UcYmCOiULi5uBE\nF5R0AiJtUkIkyoK7DhYWM/QB9kCLSbCOtkoOKtCDxBjNmP6Eixs2YDhXz7dtmXr2\n0EG2opxFfL0BjGi0TRdoyi2xwO18SUgAo9yeCkWJ4g==\n=I15k\n-----END PGP SIGNATURE-----",
        "payload": "tree ac28ac960c3a60cfa750bf86d095ef01e0f72280\nparent 13e31dd6548d64a5992f439e74bb424bf88aca04\nparent 835a21b42402d546bd72f8a3f452f0c743fefe82\nauthor MarcoFalke <falke.marco@gmail.com> 1518789695 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1518789568 -0500\n\nBump leveldb subtree\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "13e31dd6548d64a5992f439e74bb424bf88aca04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13e31dd6548d64a5992f439e74bb424bf88aca04",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/13e31dd6548d64a5992f439e74bb424bf88aca04"
      },
      {
        "sha": "835a21b42402d546bd72f8a3f452f0c743fefe82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/835a21b42402d546bd72f8a3f452f0c743fefe82",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/835a21b42402d546bd72f8a3f452f0c743fefe82"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 32,
      "deletions": 8
    },
    "files": [
      {
        "sha": "3bb58e560aa7c099c7937d226315d1ed46273d43",
        "filename": "src/leveldb/db/db_impl.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/db/db_impl.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/db/db_impl.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/db_impl.cc?ref=faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f",
        "patch": "@@ -414,7 +414,7 @@ Status DBImpl::RecoverLogFile(uint64_t log_number, bool last_log,\n          status.ok()) {\n     if (record.size() < 12) {\n       reporter.Corruption(\n-          record.size(), Status::Corruption(\"log record too small\"));\n+          record.size(), Status::Corruption(\"log record too small\", fname));\n       continue;\n     }\n     WriteBatchInternal::SetContents(&batch, record);"
      },
      {
        "sha": "d06d64d640b19f60a37571dcb887be5f36ce1514",
        "filename": "src/leveldb/db/leveldbutil.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/db/leveldbutil.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/db/leveldbutil.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/leveldbutil.cc?ref=faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f",
        "patch": "@@ -19,6 +19,7 @@ class StdoutPrinter : public WritableFile {\n   virtual Status Close() { return Status::OK(); }\n   virtual Status Flush() { return Status::OK(); }\n   virtual Status Sync() { return Status::OK(); }\n+  virtual std::string GetName() const { return \"[stdout]\"; }\n };\n \n bool HandleDumpCommand(Env* env, char** files, int num) {"
      },
      {
        "sha": "8b6ad136d7dab58717e7d2ced614e1fb78024d8a",
        "filename": "src/leveldb/db/log_reader.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/db/log_reader.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/db/log_reader.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/log_reader.cc?ref=faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f",
        "patch": "@@ -186,7 +186,7 @@ uint64_t Reader::LastRecordOffset() {\n }\n \n void Reader::ReportCorruption(uint64_t bytes, const char* reason) {\n-  ReportDrop(bytes, Status::Corruption(reason));\n+  ReportDrop(bytes, Status::Corruption(reason, file_->GetName()));\n }\n \n void Reader::ReportDrop(uint64_t bytes, const Status& reason) {"
      },
      {
        "sha": "7281e3d3457fe3a088a18472c25b699b986b42d5",
        "filename": "src/leveldb/db/repair.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/db/repair.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/db/repair.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/repair.cc?ref=faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f",
        "patch": "@@ -203,7 +203,7 @@ class Repairer {\n     while (reader.ReadRecord(&record, &scratch)) {\n       if (record.size() < 12) {\n         reporter.Corruption(\n-            record.size(), Status::Corruption(\"log record too small\"));\n+            record.size(), Status::Corruption(\"log record too small\", logname));\n         continue;\n       }\n       WriteBatchInternal::SetContents(&batch, record);"
      },
      {
        "sha": "68c0614a59e5e98d635cf9b8b5d8b2ff0f75be22",
        "filename": "src/leveldb/helpers/memenv/memenv.cc",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/helpers/memenv/memenv.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/helpers/memenv/memenv.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/helpers/memenv/memenv.cc?ref=faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f",
        "patch": "@@ -176,6 +176,7 @@ class SequentialFileImpl : public SequentialFile {\n     return Status::OK();\n   }\n \n+  virtual std::string GetName() const { return \"[memenv]\"; }\n  private:\n   FileState* file_;\n   uint64_t pos_;\n@@ -196,6 +197,7 @@ class RandomAccessFileImpl : public RandomAccessFile {\n     return file_->Read(offset, n, result, scratch);\n   }\n \n+  virtual std::string GetName() const { return \"[memenv]\"; }\n  private:\n   FileState* file_;\n };\n@@ -218,6 +220,7 @@ class WritableFileImpl : public WritableFile {\n   virtual Status Flush() { return Status::OK(); }\n   virtual Status Sync() { return Status::OK(); }\n \n+  virtual std::string GetName() const { return \"[memenv]\"; }\n  private:\n   FileState* file_;\n };"
      },
      {
        "sha": "275d441eaeee49aa3418b0f672d03bd61d8bab6c",
        "filename": "src/leveldb/include/leveldb/env.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/include/leveldb/env.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/include/leveldb/env.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/include/leveldb/env.h?ref=faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f",
        "patch": "@@ -191,6 +191,9 @@ class SequentialFile {\n   // REQUIRES: External synchronization\n   virtual Status Skip(uint64_t n) = 0;\n \n+  // Get a name for the file, only for error reporting\n+  virtual std::string GetName() const = 0;\n+\n  private:\n   // No copying allowed\n   SequentialFile(const SequentialFile&);\n@@ -215,6 +218,9 @@ class RandomAccessFile {\n   virtual Status Read(uint64_t offset, size_t n, Slice* result,\n                       char* scratch) const = 0;\n \n+  // Get a name for the file, only for error reporting\n+  virtual std::string GetName() const = 0;\n+\n  private:\n   // No copying allowed\n   RandomAccessFile(const RandomAccessFile&);\n@@ -234,6 +240,9 @@ class WritableFile {\n   virtual Status Flush() = 0;\n   virtual Status Sync() = 0;\n \n+  // Get a name for the file, only for error reporting\n+  virtual std::string GetName() const = 0;\n+\n  private:\n   // No copying allowed\n   WritableFile(const WritableFile&);"
      },
      {
        "sha": "285e1c0de39d7f6a915f1812c9f18c17a4bcf908",
        "filename": "src/leveldb/table/format.cc",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/table/format.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/table/format.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/table/format.cc?ref=faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f",
        "patch": "@@ -82,7 +82,7 @@ Status ReadBlock(RandomAccessFile* file,\n   }\n   if (contents.size() != n + kBlockTrailerSize) {\n     delete[] buf;\n-    return Status::Corruption(\"truncated block read\");\n+    return Status::Corruption(\"truncated block read\", file->GetName());\n   }\n \n   // Check the crc of the type and the block contents\n@@ -92,7 +92,7 @@ Status ReadBlock(RandomAccessFile* file,\n     const uint32_t actual = crc32c::Value(data, n + 1);\n     if (actual != crc) {\n       delete[] buf;\n-      s = Status::Corruption(\"block checksum mismatch\");\n+      s = Status::Corruption(\"block checksum mismatch\", file->GetName());\n       return s;\n     }\n   }\n@@ -119,13 +119,13 @@ Status ReadBlock(RandomAccessFile* file,\n       size_t ulength = 0;\n       if (!port::Snappy_GetUncompressedLength(data, n, &ulength)) {\n         delete[] buf;\n-        return Status::Corruption(\"corrupted compressed block contents\");\n+        return Status::Corruption(\"corrupted compressed block contents\", file->GetName());\n       }\n       char* ubuf = new char[ulength];\n       if (!port::Snappy_Uncompress(data, n, ubuf)) {\n         delete[] buf;\n         delete[] ubuf;\n-        return Status::Corruption(\"corrupted compressed block contents\");\n+        return Status::Corruption(\"corrupted compressed block contents\", file->GetName());\n       }\n       delete[] buf;\n       result->data = Slice(ubuf, ulength);\n@@ -135,7 +135,7 @@ Status ReadBlock(RandomAccessFile* file,\n     }\n     default:\n       delete[] buf;\n-      return Status::Corruption(\"bad block type\");\n+      return Status::Corruption(\"bad block type\", file->GetName());\n   }\n \n   return Status::OK();"
      },
      {
        "sha": "4676bc2240c97b1eceb3e9961e5cee832b58492f",
        "filename": "src/leveldb/util/env_posix.cc",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/util/env_posix.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/util/env_posix.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/env_posix.cc?ref=faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f",
        "patch": "@@ -121,6 +121,8 @@ class PosixSequentialFile: public SequentialFile {\n     }\n     return Status::OK();\n   }\n+\n+  virtual std::string GetName() const { return filename_; }\n };\n \n // pread() based random-access\n@@ -172,6 +174,8 @@ class PosixRandomAccessFile: public RandomAccessFile {\n     }\n     return s;\n   }\n+\n+  virtual std::string GetName() const { return filename_; }\n };\n \n // mmap() based random-access\n@@ -206,6 +210,8 @@ class PosixMmapReadableFile: public RandomAccessFile {\n     }\n     return s;\n   }\n+\n+  virtual std::string GetName() const { return filename_; }\n };\n \n class PosixWritableFile : public WritableFile {\n@@ -287,6 +293,8 @@ class PosixWritableFile : public WritableFile {\n     }\n     return s;\n   }\n+\n+  virtual std::string GetName() const { return filename_; }\n };\n \n static int LockOrUnlock(int fd, bool lock) {"
      },
      {
        "sha": "81380216bb09b7afd9c85760bb729a28716bb069",
        "filename": "src/leveldb/util/env_win.cc",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/util/env_win.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f/src/leveldb/util/env_win.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/env_win.cc?ref=faa6dd27b1f1f96f5e1a26e830e1a80255afdb5f",
        "patch": "@@ -78,6 +78,7 @@ class Win32SequentialFile : public SequentialFile\n     virtual Status Read(size_t n, Slice* result, char* scratch);\n     virtual Status Skip(uint64_t n);\n     BOOL isEnable();\n+    virtual std::string GetName() const { return _filename; }\n private:\n     BOOL _Init();\n     void _CleanUp();\n@@ -94,6 +95,7 @@ class Win32RandomAccessFile : public RandomAccessFile\n     virtual ~Win32RandomAccessFile();\n     virtual Status Read(uint64_t offset, size_t n, Slice* result,char* scratch) const;\n     BOOL isEnable();\n+    virtual std::string GetName() const { return _filename; }\n private:\n     BOOL _Init(LPCWSTR path);\n     void _CleanUp();\n@@ -114,6 +116,7 @@ class Win32WritableFile : public WritableFile\n     virtual Status Flush();\n     virtual Status Sync();\n     BOOL isEnable();\n+    virtual std::string GetName() const { return filename_; }\n private:\n     std::string filename_;\n     ::HANDLE _hFile;"
      }
    ]
  }
]