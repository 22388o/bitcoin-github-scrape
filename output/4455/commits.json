[
  {
    "sha": "3f7a61fc0966bc63dfcafd231c449d922abb884c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjdhNjFmYzA5NjZiYzYzZGZjYWZkMjMxYzQ0OWQ5MjJhYmI4ODRj",
    "commit": {
      "author": {
        "name": "Michael Ford",
        "email": "fanquake@gmail.com",
        "date": "2014-07-02T09:16:49Z"
      },
      "committer": {
        "name": "Michael Ford",
        "email": "fanquake@gmail.com",
        "date": "2014-07-02T09:16:49Z"
      },
      "message": "Update Gitian Build guide to include OSX",
      "tree": {
        "sha": "7671c3e700c117389f3332b0aedd2d576726717f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7671c3e700c117389f3332b0aedd2d576726717f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f7a61fc0966bc63dfcafd231c449d922abb884c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f7a61fc0966bc63dfcafd231c449d922abb884c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f7a61fc0966bc63dfcafd231c449d922abb884c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f7a61fc0966bc63dfcafd231c449d922abb884c/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dd49e92fb0cae0dcdf0b2ea303da99c7814db473",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd49e92fb0cae0dcdf0b2ea303da99c7814db473",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dd49e92fb0cae0dcdf0b2ea303da99c7814db473"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 17,
      "deletions": 18
    },
    "files": [
      {
        "sha": "b356a5d88d8d28bae1f683b8c17448e409ee162f",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 17,
        "deletions": 18,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f7a61fc0966bc63dfcafd231c449d922abb884c/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f7a61fc0966bc63dfcafd231c449d922abb884c/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=3f7a61fc0966bc63dfcafd231c449d922abb884c",
        "patch": "@@ -4,8 +4,8 @@ Gitian building\n *Setup instructions for a gitian build of Bitcoin using a Debian VM or physical system.*\n \n Gitian is the deterministic build process that is used to build the Bitcoin\n-Core executables [1]. It provides a way to be reasonably sure that the\n-executables are really built from source on github. It also makes sure that\n+Core executables. It provides a way to be reasonably sure that the\n+executables are really built from source on GitHub. It also makes sure that\n the same, tested dependencies are used and statically built into the executable.\n \n Multiple developers build the source code by following a specific descriptor\n@@ -17,9 +17,6 @@ More independent gitian builders are needed, which is why I wrote this\n guide. It is preferred to follow these steps yourself instead of using someone else's\n VM image to avoid 'contaminating' the build.\n \n-[1] For all platforms except for MacOSX, at this point. Work for deterministic\n-builds for Mac is under way here: https://github.com/theuni/osx-cross-depends .\n-\n Table of Contents\n ------------------\n \n@@ -38,7 +35,7 @@ Preparing the Gitian builder host\n ---------------------------------\n \n The first step is to prepare the host environment that will be used to perform the Gitian builds.\n-In this guide it is explained how to set up the environment, and how to get the builds started.\n+This guide explains how to set up the environment, and how to start the builds.\n \n Debian Linux was chosen as the host distribution because it has a lightweight install (in contrast to Ubuntu) and is readily available.\n Any kind of virtualization can be used, for example:\n@@ -134,7 +131,7 @@ and proceed, just press `Enter`. To select a different button, press `Tab`.\n \n ![](gitian-building/debian_install_5_configure_the_network.png)\n \n-- Choose a root password and enter it twice (and remember it for later) \n+- Choose a root password and enter it twice (remember it for later) \n \n ![](gitian-building/debian_install_6a_set_up_root_password.png)\n \n@@ -143,7 +140,7 @@ and proceed, just press `Enter`. To select a different button, press `Tab`.\n ![](gitian-building/debian_install_7_set_up_user_fullname.png)\n ![](gitian-building/debian_install_8_set_up_username.png)\n \n-- Choose a user password and enter it twice (and remember it for later) \n+- Choose a user password and enter it twice (remember it for later) \n \n ![](gitian-building/debian_install_9_user_password.png)\n \n@@ -236,7 +233,7 @@ adduser debian sudo\n When you get a colorful screen with a question about the 'LXC directory', just\n go with the default (`/var/lib/lxc`).\n \n-Then set up LXC and the rest with the following is a complex jumble of settings and workarounds:\n+Then set up LXC and the rest with the following, which is a complex jumble of settings and workarounds:\n \n ```bash\n # the version of lxc-start in Debian 7.4 needs to run as root, so make sure\n@@ -280,7 +277,7 @@ cd ..\n \n **Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n \n-Clone the git repositories for bitcoin and gitian and then checkout the bitcoin version that you are willing to build.\n+Clone the git repositories for bitcoin and gitian and then checkout the bitcoin version that you want to build.\n \n ```bash\n git clone https://github.com/devrandom/gitian-builder.git\n@@ -319,10 +316,10 @@ you will find a list of `wget` commands that can be executed to get the dependen\n \n I needed to add `--no-check-certificate` to the OpenSSL wget line to make it work.\n Likely this is because the ca-certificates in Debian 7.4 is fairly old. This does not create a \n-security issue as the gitian descriptors check integrity of the input archives and refuse to work\n+security issue as the gitian descriptors check the integrity of the input archives and refuse to work\n if any one is corrupted.\n \n-After downloading the archives, execute the `gbuild` commends to build the dependencies.\n+After downloading the archives, execute the `gbuild` commands to build the dependencies.\n This can take a long time, but only has to be done when the dependencies change, for example\n to upgrade the used version.\n \n@@ -339,7 +336,7 @@ tail -f var/build.log\n Building Bitcoin\n ----------------\n \n-To build Bitcoin (for Linux and/or Windows) just follow the steps under 'perform\n+To build Bitcoin (for Linux, OSX and Windows) just follow the steps under 'perform\n gitian builds' in [doc/release-process.md](release-process.md) in the bitcoin repository.\n \n Output from `gbuild` will look something like\n@@ -372,7 +369,7 @@ can be inspected in `var/install.log` and `var/build.log`.\n Building an alternative repository\n -----------------------------------\n \n-If you want to do a test build of a pull on github it can be useful to point\n+If you want to do a test build of a pull on GitHub it can be useful to point\n the gitian builder at an alternative repository, using the same descriptors\n and inputs.\n \n@@ -382,22 +379,24 @@ URL=https://github.com/laanwj/bitcoin.git\n COMMIT=2014_03_windows_unicode_path\n ./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n ./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n ```\n \n Signing externally\n -------------------\n \n-If you want to do the PGP signing on another device that's possible too; just define `SIGNER` as mentioned\n-and follow the steps in the build process as normally.\n+If you want to do the PGP signing on another device that's also possible; just define `SIGNER` as mentioned\n+and follow the steps in the build process as normal.\n \n     gpg: skipped \"laanwj\": secret key not available\n \n When you execute `gsign` you will get an error from GPG, which can be ignored. Copy the resulting `.assert` files\n in `gitian.sigs` to your signing machine and do\n \n ```bash\n-    gpg --detach-sign ${VERSION}/${SIGNER}/bitcoin-build.assert\n+    gpg --detach-sign ${VERSION}-linux/${SIGNER}/bitcoin-build.assert\n     gpg --detach-sign ${VERSION}-win/${SIGNER}/bitcoin-build.assert\n+    gpg --detach-sign ${VERSION}-osx/${SIGNER}/bitcoin-build.assert\n ```\n \n This will create the `.sig` files that can be committed together with the `.assert` files to assert your\n@@ -407,5 +406,5 @@ Uploading signatures\n ---------------------\n \n After building and signing you can push your signatures (both the `.assert` and `.assert.sig` files) to the\n-[bitcoin/gitian.sigs](https://github.com/bitcoin/gitian.sigs/) repository, or if not possible create a pull\n+[bitcoin/gitian.sigs](https://github.com/bitcoin/gitian.sigs/) repository, or if that's not possible create a pull\n request. You can also mail the files to me (laanwj@gmail.com) and I'll commit them."
      }
    ]
  }
]