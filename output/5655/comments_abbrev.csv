sipa,2015-01-14T02:06:11Z,Nitty suggestion: call it -rpckeepalive with default value 1.\n,https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-69857928,69857928,
gmaxwell,2015-01-14T02:18:07Z,Fair enough.\n,https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-69858895,69858895,
jonasschnelli,2015-01-14T04:47:55Z,Somehow related to #5526.\n,https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-69868781,69868781,
laanwj,2015-01-14T07:24:07Z,"Is there any practical advantage to having http keep-alive support in Bitcoin Core? \ne.g. the ""pipeline a lot of requests"" case we already support RPC batching.\nRPC is meant as a local mechanism, so any latency for setting up a new TCP connection will be dwarfed by, say, parsing overhead.\n\nLooks like something that is _reasonably_ hard to handle right in client libraries, although OTOH they co",https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-69878378,69878378,
jonasschnelli,2015-01-14T08:04:23Z,Because i recently analyzed the http behavior i allow myself to comment on this:\nIMO the problem of blocking or say open connections from/to clients is the missing timeout implementation. Disabling http keep-alive option alone will not prevent from dead-and-open connection because the implementation currently uses the blocking `getline()`. If a malfunction client is not sending a valid http reque,https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-69881822,69881822,
gmaxwell,2015-01-14T08:35:58Z,"Based on conversation with @laanwj I've switched this off by default. This is actually my preference; but I expected to be alone in the opinion that we should just shut it off until it works better, at least for 0.10. \n",https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-69884536,69884536,
jonasschnelli,2015-01-14T09:43:49Z,ACK\nnit: you need to remove or rewrite the recently added rcp-test (httpbasics.py)\n,https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-69891571,69891571,
laanwj,2015-01-14T11:54:26Z,@jonaschnelli Looks like the test framework has no easy way to pass extra arguments to bitcoind :( \nAdded it in https://github.com/laanwj/bitcoin/tree/2015_01_fix_tests_for_5655\n\n@gmaxwell you can cherry-pick https://github.com/laanwj/bitcoin/commit/4c65e99ed84cf3da1b91efaabe5e85b11333df1a to make this pass travis again\n,https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-69905986,69905986,
jonasschnelli,2015-01-14T12:16:11Z,@laanwj: test looks good but I would recommend to also add a tiny check if keep-alive is disabled when starting a node without the new arg.\n\nI can also add a commit on top of yours if you like to have this additional test but lack of time to do it.\n,https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-69908139,69908139,
laanwj,2015-01-14T12:19:02Z,"@jonasschnelli more tests is always good, you could e.g. start one of the four nodes without the option (it passes extraargs for every node individually) and then try that out. I don't have time right now.\n",https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-69908435,69908435,
jonasschnelli,2015-01-14T15:37:52Z,@gmaxwell you might also pull in https://github.com/jonasschnelli/bitcoin/commit/c9792d1363c914737aad4bfc727e523d1d68c4cd\nThis will extend the tests.\n,https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-69934417,69934417,
gmaxwell,2015-01-14T18:06:25Z,@Diapolo Thanks for the air-cover on the translation strings.\n,https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-69961703,69961703,
jonasschnelli,2015-01-15T08:09:22Z,Tested again ACK.\n,https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-70052219,70052219,
laanwj,2015-01-15T09:19:00Z,Cherry-picked to 0.10 branch via aaf55d25c6191c0effd5fa5dd5d2d0f17e715854\n,https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-70058859,70058859,
jgarzik,2015-01-15T13:39:02Z,"Did anyone research the reason for adding keep-alive support?\n\nTurning this option on by default will now break those clients that were fixed, yes?\n",https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-70086284,70086284,
jonasschnelli,2015-01-15T13:47:39Z,"#1101 is related, was basically merged via https://github.com/luke-jr/bitcoin/commit/7ee8f04aa18052b269c74fc1488ac65b8ce2359b\n\nSee also: https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1491291\n\nOnce there was a open PR of a asio implementation of the RPC server (https://github.com/bitcoin/bitcoin/pull/214 wonder why this never made it to the master).\n",https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-70087275,70087275,
laanwj,2015-01-15T14:14:58Z,@jgarzik The reason clients break is a combination of a bug in the client - not effectively reusing open connections -  and misbehavior at our side - not properly timing out unused connections.\n\nDisabling keep-alive is always safe: clients know that they have to reconnect if the server slams the connection (especially as  the Connection: Close header is sent).\n\nThe option can be safely reenabl,https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-70090719,70090719,
jgarzik,2015-01-15T19:00:23Z,"@laanwj ""Disabling keep-alive is always safe""  Wrong.  This demonstrates the need to **research why a code change was added** before disabling it!\n\nThe keep-alive feature was added [in part] because the repeated open/close cycles of many clients would eventually cause a hang due to so many local sockets in TIME_WAIT.\n\nDisabling keep-alive will resurrect that problem, **introducing hangs** into",https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-70140899,70140899,
jonasschnelli,2015-01-15T19:33:09Z,@jgarzik's concerns sounds realistic to me.\nWhat if we just switch the default for `-rpckeepalive` from the current `false` to `true`?\nThen users with client behaviors after @gmaxwell can still disable it.\n\nBut the long term goal are unclear to me now.\nWould it make sense to rewrite the RPC server into the direction of https://github.com/jgarzik/rpcsrv?\nGavin also wrote today on IRC: \n\n> I,https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-70146563,70146563,
jgarzik,2015-01-15T20:42:56Z,This is an example of a bug that this change **re-introduces** to bitcoind: https://github.com/bitcoin/bitcoin/issues/344\n\nOr just google for bitcoind TIME_WAIT.\n\nMerging this into 0.10 creates obvious regressions.\n,https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-70157929,70157929,
gmaxwell,2015-01-15T21:14:48Z,"Jeff, I believe I read _every_ commit and PR related to the introduction of persistent connections. Not a single one of them mentioned this. I also initially created this a a default no change in behavior in the interest of being conservative, but unfortunately; you can't tell if it's the broken persistent connection support thats breaking you: it just looks like Bitcoin core is unresponsive. \n\n",https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-70162936,70162936,
jgarzik,2015-01-15T21:29:38Z,"The original genesis of keep-alive support is that it was originally written (by JoelKatz?) to work around problems that miners were seeing with the original open/close/open/close behavior that leaves behind reams of TIME_WAIT etc. sockets, eventually leading to a non-responsive bitcoind.\n\nRE `SO_REUSEADDR`, that is for servers restarting, not clients reconnecting.  It does not help this situati",https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-70165338,70165338,
gmaxwell,2015-01-16T01:45:02Z,"@jgarzik ""the only salve we have offered is""  not so:  ""turn keep alive back on""-- it's a flag, it's documented in the help output. I'm not making an argument if this is sufficient or not; just pointing it out: I wouldn't introduce a change in behavior like this without at least a switch to get the old behavior back.\n\nWe have multiple reports that the software is unusable since 0.8.1. We got a",https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-70196150,70196150,
jgarzik,2015-01-16T01:57:51Z,"The reproducer was typically high speed 'getwork' traffic from generation-1 pool server proxies, but non-miners were also able to make it fail with high speed wallet RPCs. 275/second would be a low number versus historical examples.\n\nRE flag:  It's still a behavior change that forces clients to fix their software -- software that has been working for years -- with very little warning.\n\nThis be",https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-70197216,70197216,
laanwj,2015-01-16T08:40:58Z,"@jgarzik I don't feel like arguing this anymore. Damned if we do, damned if we don't. I get tired of this. Let's keep the option but feel free to change the default to 1 again. I'll ACK it.\n",https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-70223418,70223418,
jgarzik,2015-01-16T09:14:48Z,"If people want the feature, a properly release-managed plan would _not_ introduce this regression in 0.10 -- particularly so late in the 0.10 release cycle:\n- 0.10 defaults to 0.9.x behavior to prevent further regressions (keep-alive on)\n- Communicate to the users that you are introducing a change that might break their software in 0.11\n- Then turn keep-alive off in master if that's what people",https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-70226888,70226888,
laanwj,2015-01-16T09:21:54Z,"My last words on this: Disabling it was meant as a quick workaround for the problems reported by @gmaxwell.\n\nWe perceived that in its current implementation the keep-alive does more damage than it's worth. I was not aware that the other way around also could break clients. Thanks for pointing to the issue.\n\nHence, I'm fine with changing the default back to 1 for 0.10, and for master too. If th",https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-70227571,70227571,
sipa,2015-01-16T10:38:54Z,"ACK on adding the option, bu lt leaving it enabled by default.\n",https://github.com/bitcoin/bitcoin/pull/5655#issuecomment-70236210,70236210,
Diapolo,2015-01-14T14:25:08Z,"Can you please use the format from rpcthreads, which allows changing defaults without the need for re-translating the help message (use `strprintf`)?\n",https://github.com/bitcoin/bitcoin/pull/5655#discussion_r22938730,22938730,src/init.cpp
