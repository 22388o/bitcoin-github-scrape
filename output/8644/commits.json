[
  {
    "sha": "f0121f18e75f950cff4f1128cf78bc892fe0fe54",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMDEyMWYxOGU3NWY5NTBjZmY0ZjExMjhjZjc4YmM4OTJmZTBmZTU0",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-08-26T19:44:44Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-09-02T00:21:35Z"
      },
      "message": "Check for compatibility with download in FindNextBlocksToDownload",
      "tree": {
        "sha": "864942a3d29d1957862bd0969122ab582b8e0dc8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/864942a3d29d1957862bd0969122ab582b8e0dc8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f0121f18e75f950cff4f1128cf78bc892fe0fe54",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0121f18e75f950cff4f1128cf78bc892fe0fe54",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f0121f18e75f950cff4f1128cf78bc892fe0fe54",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0121f18e75f950cff4f1128cf78bc892fe0fe54/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "122fdfdae91542152e40359f99245ed589010b3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/122fdfdae91542152e40359f99245ed589010b3b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/122fdfdae91542152e40359f99245ed589010b3b"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 11,
      "deletions": 9
    },
    "files": [
      {
        "sha": "f50c5ec4063f4c26d08d43c32c17f33ef0f68352",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 9,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f0121f18e75f950cff4f1128cf78bc892fe0fe54/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f0121f18e75f950cff4f1128cf78bc892fe0fe54/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f0121f18e75f950cff4f1128cf78bc892fe0fe54",
        "patch": "@@ -537,7 +537,7 @@ CBlockIndex* LastCommonAncestor(CBlockIndex* pa, CBlockIndex* pb) {\n \n /** Update pindexLastCommonBlock and add not-in-flight missing successors to vBlocks, until it has\n  *  at most count entries. */\n-void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vector<CBlockIndex*>& vBlocks, NodeId& nodeStaller) {\n+void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vector<CBlockIndex*>& vBlocks, NodeId& nodeStaller, const Consensus::Params& consensusParams) {\n     if (count == 0)\n         return;\n \n@@ -594,6 +594,10 @@ void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vector<CBl\n                 // We consider the chain that this peer is on invalid.\n                 return;\n             }\n+            if (!State(nodeid)->fHaveWitness && IsWitnessEnabled(pindex->pprev, consensusParams)) {\n+                // We wouldn't download this block or its descendants from this peer.\n+                return;\n+            }\n             if (pindex->nStatus & BLOCK_HAVE_DATA || chainActive.Contains(pindex)) {\n                 if (pindex->nChainTx)\n                     state->pindexLastCommonBlock = pindex;\n@@ -6714,15 +6718,13 @@ bool SendMessages(CNode* pto)\n         if (!pto->fDisconnect && !pto->fClient && (fFetch || !IsInitialBlockDownload()) && state.nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n             vector<CBlockIndex*> vToDownload;\n             NodeId staller = -1;\n-            FindNextBlocksToDownload(pto->GetId(), MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller);\n+            FindNextBlocksToDownload(pto->GetId(), MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller, consensusParams);\n             BOOST_FOREACH(CBlockIndex *pindex, vToDownload) {\n-                if (State(pto->GetId())->fHaveWitness || !IsWitnessEnabled(pindex->pprev, consensusParams)) {\n-                    uint32_t nFetchFlags = GetFetchFlags(pto, pindex->pprev, consensusParams);\n-                    vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                    MarkBlockAsInFlight(pto->GetId(), pindex->GetBlockHash(), consensusParams, pindex);\n-                    LogPrint(\"net\", \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                        pindex->nHeight, pto->id);\n-                }\n+                uint32_t nFetchFlags = GetFetchFlags(pto, pindex->pprev, consensusParams);\n+                vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n+                MarkBlockAsInFlight(pto->GetId(), pindex->GetBlockHash(), consensusParams, pindex);\n+                LogPrint(\"net\", \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n+                    pindex->nHeight, pto->id);\n             }\n             if (state.nBlocksInFlight == 0 && staller != -1) {\n                 if (State(staller)->nStallingSince == 0) {"
      }
    ]
  }
]