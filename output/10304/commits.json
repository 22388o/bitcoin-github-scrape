[
  {
    "sha": "0300d5e556cc1556b9cba1ec11ff3eef47bddca5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMzAwZDVlNTU2Y2MxNTU2YjljYmExZWMxMWZmM2VlZjQ3YmRkY2E1",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-05-01T10:02:07Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-05-01T10:02:21Z"
      },
      "message": "[rpc] Allow a txid param in getrawmempool to get details about specific transaction if found. Closes #10300",
      "tree": {
        "sha": "f4d183aa4e96c8eabaf3695ed71ffde42e465d7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f4d183aa4e96c8eabaf3695ed71ffde42e465d7f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0300d5e556cc1556b9cba1ec11ff3eef47bddca5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJZBwgGAAoJEFevdi2zNTMieZwP/0hldX7tklzZ1fPlJIl4LXU0\nZK+7vp6QanTH8e420CWx81NcfSu/9H9yYg2KNpJDerhrTEiBGLiI7sn4k+sdhigG\nInOUlSseSSSmMjVzJyvJkyvZmtbj76pYTlZ2VBtDYY3ngLdOyRvELKTr+7K+gpLJ\n6k56bhT3rYte36WTSz7R1qQ5Syzgv74ao/8acWcfAlm2CYbnOJf1tOPcjfO7dnJb\nG7/04WEYDHBr/pOWgRRIxrZq6h5GaJ2ccOctdVl0SK33jXsIW/9JKHw4cX/286KR\nldul/Wic9+EmE/By0Fq9W/oLaJ0RIzm70AG3PBPMF20BNXDUqBg9LCcEOXeMdXp+\nvQyt7It+r59oupbHkzKzr+h5ByN8DpalhZFOxVCirFg4Wklb0Dh1o1uDdXNPbQsi\nGrj1y3602XRKa1gZSuvsk4D7xdxz/rBwYNsOu16pXWmstmuzuhR/3hxbkUZfV39F\nq167KVhcU+Bidwb9XDOZLie9daSJG+PZIDmQTMdhDz9vg2h++Yb743fOkTdJrRe8\naYYdmLiT/XUaWPOGfSI7O4p/jSKTPeCl8ugt6ARGEa2fLEdURjbzsLMJooC3im4G\nkMgCkS6X6DA/lURyZnsWjXGCQfHQK9wX+i3rcZdXSVZbg42xh+j85PgMM3raY3L9\nFjIjsaGCwnniw2cGB0qy\n=YvnU\n-----END PGP SIGNATURE-----",
        "payload": "tree f4d183aa4e96c8eabaf3695ed71ffde42e465d7f\nparent 9c33ffd3876401d9e8b2144a5c725b9ece0c175d\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1493632927 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1493632941 +0900\n\n[rpc] Allow a txid param in getrawmempool to get details about specific transaction if found. Closes #10300\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0300d5e556cc1556b9cba1ec11ff3eef47bddca5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0300d5e556cc1556b9cba1ec11ff3eef47bddca5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0300d5e556cc1556b9cba1ec11ff3eef47bddca5/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c33ffd3876401d9e8b2144a5c725b9ece0c175d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c33ffd3876401d9e8b2144a5c725b9ece0c175d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c33ffd3876401d9e8b2144a5c725b9ece0c175d"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 26,
      "deletions": 14
    },
    "files": [
      {
        "sha": "3ece0f0e90905f998c1900875ddb1fdafe153216",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 13,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0300d5e556cc1556b9cba1ec11ff3eef47bddca5/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0300d5e556cc1556b9cba1ec11ff3eef47bddca5/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=0300d5e556cc1556b9cba1ec11ff3eef47bddca5",
        "patch": "@@ -379,7 +379,7 @@ void entryToJSON(UniValue &info, const CTxMemPoolEntry &e)\n     info.push_back(Pair(\"depends\", depends));\n }\n \n-UniValue mempoolToJSON(bool fVerbose)\n+UniValue mempoolToJSON(bool fVerbose, uint256* txid)\n {\n     if (fVerbose)\n     {\n@@ -388,9 +388,11 @@ UniValue mempoolToJSON(bool fVerbose)\n         BOOST_FOREACH(const CTxMemPoolEntry& e, mempool.mapTx)\n         {\n             const uint256& hash = e.GetTx().GetHash();\n-            UniValue info(UniValue::VOBJ);\n-            entryToJSON(info, e);\n-            o.push_back(Pair(hash.ToString(), info));\n+            if (!txid || *txid == hash) {\n+                UniValue info(UniValue::VOBJ);\n+                entryToJSON(info, e);\n+                o.push_back(Pair(hash.ToString(), info));\n+            }\n         }\n         return o;\n     }\n@@ -400,21 +402,27 @@ UniValue mempoolToJSON(bool fVerbose)\n         mempool.queryHashes(vtxid);\n \n         UniValue a(UniValue::VARR);\n-        BOOST_FOREACH(const uint256& hash, vtxid)\n-            a.push_back(hash.ToString());\n+        BOOST_FOREACH(const uint256& hash, vtxid) {\n+            if (!txid || *txid == hash) {\n+                a.push_back(hash.ToString());\n+                if (txid) return a;\n+            }\n+        }\n \n         return a;\n     }\n }\n \n UniValue getrawmempool(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() > 1)\n+    if (request.fHelp || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"getrawmempool ( verbose )\\n\"\n+            \"getrawmempool ( verbose txid )\\n\"\n             \"\\nReturns all transaction ids in memory pool as a json array of string transaction ids.\\n\"\n+            \"If txid is set, only the matching transaction will be returned, if found.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. verbose (boolean, optional, default=false) True for a json object, false for array of transaction ids\\n\"\n+            \"2. txid    (string, optional) Transaction to display\\n\"\n             \"\\nResult: (for verbose = false):\\n\"\n             \"[                     (json array of string)\\n\"\n             \"  \\\"transactionid\\\"     (string) The transaction id\\n\"\n@@ -429,13 +437,17 @@ UniValue getrawmempool(const JSONRPCRequest& request)\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getrawmempool\", \"true\")\n             + HelpExampleRpc(\"getrawmempool\", \"true\")\n+            + HelpExampleRpc(\"getrawmempool\", \"true 7dde270e7071667c5d53b073f1d7854319696ea10202e0fb8874c2361dcdd6da\")\n         );\n \n-    bool fVerbose = false;\n-    if (request.params.size() > 0)\n-        fVerbose = request.params[0].get_bool();\n+    bool fVerbose = request.params.size() > 0 && !request.params[0].isNull() && request.params[0].get_bool();\n+    bool fTxid = request.params.size() > 1 && !request.params[1].isNull();\n+    uint256 txid;\n+    if (request.params.size() > 1 && !request.params[1].isNull()) {\n+        txid = ParseHashV(request.params[1], \"txid parameter\");\n+    }\n \n-    return mempoolToJSON(fVerbose);\n+    return mempoolToJSON(fVerbose, fTxid ? &txid : nullptr);\n }\n \n UniValue getmempoolancestors(const JSONRPCRequest& request)\n@@ -1431,7 +1443,7 @@ static const CRPCCommand commands[] =\n     { \"blockchain\",         \"getmempooldescendants\",  &getmempooldescendants,  true,  {\"txid\",\"verbose\"} },\n     { \"blockchain\",         \"getmempoolentry\",        &getmempoolentry,        true,  {\"txid\"} },\n     { \"blockchain\",         \"getmempoolinfo\",         &getmempoolinfo,         true,  {} },\n-    { \"blockchain\",         \"getrawmempool\",          &getrawmempool,          true,  {\"verbose\"} },\n+    { \"blockchain\",         \"getrawmempool\",          &getrawmempool,          true,  {\"verbose\",\"txid\"} },\n     { \"blockchain\",         \"gettxout\",               &gettxout,               true,  {\"txid\",\"n\",\"include_mempool\"} },\n     { \"blockchain\",         \"gettxoutsetinfo\",        &gettxoutsetinfo,        true,  {} },\n     { \"blockchain\",         \"pruneblockchain\",        &pruneblockchain,        true,  {\"height\"} },"
      },
      {
        "sha": "f6af5e837ece61a5b4a29cd82bed5db48fe434df",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0300d5e556cc1556b9cba1ec11ff3eef47bddca5/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0300d5e556cc1556b9cba1ec11ff3eef47bddca5/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=0300d5e556cc1556b9cba1ec11ff3eef47bddca5",
        "patch": "@@ -31,7 +31,7 @@ UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool tx\n UniValue mempoolInfoToJSON();\n \n /** Mempool to JSON */\n-UniValue mempoolToJSON(bool fVerbose = false);\n+UniValue mempoolToJSON(bool fVerbose = false, uint256* txid = nullptr);\n \n /** Block header to JSON */\n UniValue blockheaderToJSON(const CBlockIndex* blockindex);"
      }
    ]
  }
]