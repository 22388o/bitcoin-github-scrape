[
  {
    "sha": "f582eda4ed0b5729c9406b63479e637d8d011139",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNTgyZWRhNGVkMGI1NzI5Yzk0MDZiNjM0NzllNjM3ZDhkMDExMTM5",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-02-13T02:33:00Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-02-13T19:25:38Z"
      },
      "message": "Make qa/rpc-tests/ compatible with OSX\n\nReworked send.sh, so it works properly on my Mac (killall send.sh\ndoesn't work, because the process name is 'bash' not 'send.sh').\nSo now send.sh writes a .send.pid file, and invoking it as\nsend.sh -STOP (as the bitcoind -walletnotify) signals that PID.",
      "tree": {
        "sha": "13c148b870c5f174eaec36a13917b435e2ce87c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/13c148b870c5f174eaec36a13917b435e2ce87c0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f582eda4ed0b5729c9406b63479e637d8d011139",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f582eda4ed0b5729c9406b63479e637d8d011139",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f582eda4ed0b5729c9406b63479e637d8d011139",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f582eda4ed0b5729c9406b63479e637d8d011139/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6056c87d25994bbceb23d6ae50df1276a51d51bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6056c87d25994bbceb23d6ae50df1276a51d51bd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6056c87d25994bbceb23d6ae50df1276a51d51bd"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 15,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2c0d5375c063f6e105cf2e46834ecd07158e86a3",
        "filename": "qa/rpc-tests/send.sh",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f582eda4ed0b5729c9406b63479e637d8d011139/qa/rpc-tests/send.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f582eda4ed0b5729c9406b63479e637d8d011139/qa/rpc-tests/send.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/send.sh?ref=f582eda4ed0b5729c9406b63479e637d8d011139",
        "patch": "@@ -1,14 +1,28 @@\n #!/bin/bash\n TIMEOUT=10\n SIGNAL=HUP\n+PIDFILE=.send.pid\n if [ $# -eq 0 ]; then\n   echo -e \"Usage:\\t$0 <cmd>\"\n   echo -e \"\\tRuns <cmd> and wait ${TIMEOUT} seconds or until SIG${SIGNAL} is received.\"\n   echo -e \"\\tReturns: 0 if SIG${SIGNAL} is received, 1 otherwise.\"\n+  echo -e \"Or:\\t$0 -STOP\"\n+  echo -e \"\\tsends SIG${SIGNAL} to running send.sh\"\n   exit 0\n fi\n+\n+if [ $1 == \"-STOP\" ]; then\n+  if [ -s ${PIDFILE} ]; then\n+      kill -s ${SIGNAL} $(<${PIDFILE})\n+  fi\n+  exit 0\n+fi\n+\n trap '[[ ${PID} ]] && kill ${PID}' ${SIGNAL}\n+trap 'rm -f ${PIDFILE}' EXIT\n+echo $$ > ${PIDFILE}\n \"$@\"\n sleep ${TIMEOUT} & PID=$!\n wait ${PID} && exit 1\n+\n exit 0"
      },
      {
        "sha": "d1e4c941cc1a80c07720d9e376bcaa68dd904a33",
        "filename": "qa/rpc-tests/util.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f582eda4ed0b5729c9406b63479e637d8d011139/qa/rpc-tests/util.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f582eda4ed0b5729c9406b63479e637d8d011139/qa/rpc-tests/util.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/util.sh?ref=f582eda4ed0b5729c9406b63479e637d8d011139",
        "patch": "@@ -23,7 +23,7 @@ function CreateDataDir {\n   echo \"rpcuser=rt\" >> $CONF\n   echo \"rpcpassword=rt\" >> $CONF\n   echo \"rpcwait=1\" >> $CONF\n-  echo \"walletnotify=killall -HUP `basename ${SENDANDWAIT}`\" >> $CONF\n+  echo \"walletnotify=${SENDANDWAIT} -STOP\" >> $CONF\n   shift\n   while (( \"$#\" )); do\n       echo $1 >> $CONF"
      }
    ]
  },
  {
    "sha": "2b72d46f4232b58835d44aa3abd711df399d4728",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYjcyZDQ2ZjQyMzJiNTg4MzVkNDRhYTNhYmQ3MTFkZjM5OWQ0NzI4",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-02-12T18:43:07Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-02-14T16:08:40Z"
      },
      "message": "Handle \"conflicted\" transactions properly\n\nExtend CMerkleTx::GetDepthInMainChain with the concept of\na \"conflicted\" transaction-- a transaction generated by the wallet\nthat is not in the main chain or in the mempool, and, therefore,\nwill likely never be confirmed.\n\nGetDepthInMainChain() now returns -1 for conflicted transactions\n(0 for unconfirmed-but-in-the-mempool, and >1 for confirmed).\n\nThis makes getbalance, getbalance '*', and listunspent all agree when there are\nmutated transactions in the wallet.\n\nBefore:\n listunspent: one 49BTC output\n getbalance: 96 BTC (change counted twice)\n getbalance '*': 46 BTC (spends counted twice)\n\nAfter: all agree, 49 BTC available to spend.",
      "tree": {
        "sha": "10a3b83f99ded1db30aa01cefd090dca5e3f6124",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10a3b83f99ded1db30aa01cefd090dca5e3f6124"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b72d46f4232b58835d44aa3abd711df399d4728",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b72d46f4232b58835d44aa3abd711df399d4728",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2b72d46f4232b58835d44aa3abd711df399d4728",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b72d46f4232b58835d44aa3abd711df399d4728/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f582eda4ed0b5729c9406b63479e637d8d011139",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f582eda4ed0b5729c9406b63479e637d8d011139",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f582eda4ed0b5729c9406b63479e637d8d011139"
      }
    ],
    "stats": {
      "total": 205,
      "additions": 194,
      "deletions": 11
    },
    "files": [
      {
        "sha": "7aca5f36dfbd5e0a7ba5356850f3a97ae6ff3e09",
        "filename": "qa/rpc-tests/txnmall.sh",
        "status": "added",
        "additions": 144,
        "deletions": 0,
        "changes": 144,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b72d46f4232b58835d44aa3abd711df399d4728/qa/rpc-tests/txnmall.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b72d46f4232b58835d44aa3abd711df399d4728/qa/rpc-tests/txnmall.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txnmall.sh?ref=2b72d46f4232b58835d44aa3abd711df399d4728",
        "patch": "@@ -0,0 +1,144 @@\n+#!/usr/bin/env bash\n+\n+# Test block generation and basic wallet sending\n+\n+if [ $# -lt 1 ]; then\n+        echo \"Usage: $0 path_to_binaries\"\n+        echo \"e.g. $0 ../../src\"\n+        exit 1\n+fi\n+\n+BITCOIND=${1}/bitcoind\n+CLI=${1}/bitcoin-cli\n+\n+DIR=\"${BASH_SOURCE%/*}\"\n+SENDANDWAIT=\"${DIR}/send.sh\"\n+if [[ ! -d \"$DIR\" ]]; then DIR=\"$PWD\"; fi\n+. \"$DIR/util.sh\"\n+\n+D=$(mktemp -d test.XXXXX)\n+\n+# Two nodes; one will play the part of merchant, the\n+# other an evil transaction-mutating miner.\n+\n+D1=${D}/node1\n+CreateDataDir $D1 port=11000 rpcport=11001\n+B1ARGS=\"-datadir=$D1 -debug\"\n+$BITCOIND $B1ARGS &\n+B1PID=$!\n+\n+D2=${D}/node2\n+CreateDataDir $D2 port=11010 rpcport=11011\n+B2ARGS=\"-datadir=$D2 -debug\"\n+$BITCOIND $B2ARGS &\n+B2PID=$!\n+\n+trap \"kill -9 $B1PID $B2PID; rm -rf $D\" EXIT\n+\n+# Wait until all four nodes are at the same block number\n+function WaitBlocks {\n+    while :\n+    do\n+        sleep 1\n+        BLOCKS1=$( GetBlocks $B1ARGS )\n+        BLOCKS2=$( GetBlocks $B2ARGS )\n+        if (( $BLOCKS1 == $BLOCKS2 ))\n+        then\n+            break\n+        fi\n+    done\n+}\n+\n+# Wait until node has $N peers\n+function WaitPeers {\n+    while :\n+    do\n+        PEERS=$( $CLI $1 getconnectioncount )\n+        if (( \"$PEERS\" == $2 ))\n+        then\n+            break\n+        fi\n+        sleep 1\n+    done\n+}\n+\n+# Start with B2 connected to B1:\n+$CLI $B2ARGS addnode 127.0.0.1:11000 onetry\n+WaitPeers \"$B1ARGS\" 1\n+\n+# 1 block, 50 XBT each == 50 XBT\n+$CLI $B1ARGS setgenerate true 1\n+\n+WaitBlocks\n+# 100 blocks, 0 mature == 0 XBT\n+$CLI $B2ARGS setgenerate true 100\n+WaitBlocks\n+\n+CheckBalance $B1ARGS 50\n+CheckBalance $B2ARGS 0\n+\n+# restart B2 with no connection\n+$CLI $B2ARGS stop > /dev/null 2>&1\n+wait $B2PID\n+$BITCOIND $B2ARGS &\n+B2PID=$!\n+\n+B2ADDRESS=$( $CLI $B2ARGS getnewaddress )\n+\n+# Have B1 create two transactions; second will\n+# spend change from first, since B1 starts with only a single\n+# 50 bitcoin output:\n+TXID1=$( $CLI $B1ARGS sendtoaddress $B2ADDRESS 1.0 )\n+TXID2=$( $CLI $B1ARGS sendtoaddress $B2ADDRESS 2.0 )\n+\n+# Mutate TXID1 and add it to B2's memory pool:\n+RAWTX1=$( $CLI $B1ARGS getrawtransaction $TXID1 )\n+RAWTX2=$( $CLI $B1ARGS getrawtransaction $TXID2 )\n+# ... mutate RAWTX1:\n+# RAWTX1 is hex-encoded, serialized transaction. So each\n+# byte is two characters; we'll prepend the first\n+# \"push\" in the scriptsig with OP_PUSHDATA1 (0x4c),\n+# and add one to the length of the signature.\n+# Fields are fixed; from the beginning:\n+# 4-byte version\n+# 1-byte varint number-of inputs (one in this case)\n+# 32-byte previous txid\n+# 4-byte previous output\n+# 1-byte varint length-of-scriptsig\n+# 1-byte PUSH this many bytes onto stack\n+#  ... etc\n+# So: to mutate, we want to get byte 41 (hex characters 82-83),\n+# increment it, and insert 0x4c after it.\n+L=${RAWTX1:82:2}\n+NEWLEN=$( printf \"%x\" $(( 16#$L + 1 )) )\n+MUTATEDTX1=${RAWTX1:0:82}${NEWLEN}4c${RAWTX1:84}\n+# ... give mutated tx1 to B2:\n+MUTATEDTXID=$( $CLI $B2ARGS sendrawtransaction $MUTATEDTX1 )\n+\n+echo \"TXID1: \" $TXID1\n+echo \"Mutated: \" $MUTATEDTXID\n+\n+# Re-connect nodes, and have B2 mine a block\n+$CLI $B2ARGS addnode 127.0.0.1:11000 onetry\n+WaitPeers \"$B1ARGS\" 1\n+\n+$CLI $B2ARGS setgenerate true 1\n+WaitBlocks\n+\n+$CLI $B2ARGS stop > /dev/null 2>&1\n+wait $B2PID\n+$CLI $B1ARGS stop > /dev/null 2>&1\n+wait $B1PID\n+\n+trap \"\" EXIT\n+\n+echo \"Done, bitcoind's shut down. To rerun/poke around:\"\n+echo \"${1}/bitcoind -datadir=$D1 -daemon\"\n+echo \"${1}/bitcoind -datadir=$D2 -daemon -connect=127.0.0.1:11000\"\n+echo \"To cleanup:\"\n+echo \"killall bitcoind; rm -rf test.*\"\n+exit 0\n+\n+echo \"Tests successful, cleaning up\"\n+rm -rf $D\n+exit 0"
      },
      {
        "sha": "36dd03a2b1b31142d2180058a1ef50d17aa964bc",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b72d46f4232b58835d44aa3abd711df399d4728/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b72d46f4232b58835d44aa3abd711df399d4728/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=2b72d46f4232b58835d44aa3abd711df399d4728",
        "patch": "@@ -872,7 +872,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n }\n \n \n-int CMerkleTx::GetDepthInMainChain(CBlockIndex* &pindexRet) const\n+int CMerkleTx::GetDepthInMainChainINTERNAL(CBlockIndex* &pindexRet) const\n {\n     if (hashBlock == 0 || nIndex == -1)\n         return 0;\n@@ -897,6 +897,14 @@ int CMerkleTx::GetDepthInMainChain(CBlockIndex* &pindexRet) const\n     return chainActive.Height() - pindex->nHeight + 1;\n }\n \n+int CMerkleTx::GetDepthInMainChain(CBlockIndex* &pindexRet) const\n+{\n+    int nResult = GetDepthInMainChainINTERNAL(pindexRet);\n+    if (nResult == 0 && !mempool.exists(GetHash()))\n+        return -1; // Not in chain, not in mempool\n+\n+    return nResult;\n+}\n \n int CMerkleTx::GetBlocksToMaturity() const\n {"
      },
      {
        "sha": "09250e4a3e013c86f5ed360e1588aef9ec205c91",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b72d46f4232b58835d44aa3abd711df399d4728/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b72d46f4232b58835d44aa3abd711df399d4728/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=2b72d46f4232b58835d44aa3abd711df399d4728",
        "patch": "@@ -423,6 +423,8 @@ class CScriptCheck\n /** A transaction with a merkle branch linking it to the block chain. */\n class CMerkleTx : public CTransaction\n {\n+private:\n+    int GetDepthInMainChainINTERNAL(CBlockIndex* &pindexRet) const;\n public:\n     uint256 hashBlock;\n     std::vector<uint256> vMerkleBranch;\n@@ -461,9 +463,14 @@ class CMerkleTx : public CTransaction\n \n \n     int SetMerkleBranch(const CBlock* pblock=NULL);\n+\n+    // Return depth of transaction in blockchain:\n+    // -1  : not in blockchain, and not in memory pool (conflicted transaction)\n+    //  0  : in memory pool, waiting to be included in a block\n+    // >=1 : this many blocks deep in the main chain\n     int GetDepthInMainChain(CBlockIndex* &pindexRet) const;\n     int GetDepthInMainChain() const { CBlockIndex *pindexRet; return GetDepthInMainChain(pindexRet); }\n-    bool IsInMainChain() const { return GetDepthInMainChain() > 0; }\n+    bool IsInMainChain() const { CBlockIndex *pindexRet; return GetDepthInMainChainINTERNAL(pindexRet) > 0; }\n     int GetBlocksToMaturity() const;\n     bool AcceptToMemoryPool(bool fLimitFree=true);\n };"
      },
      {
        "sha": "9f18d790892066ef0f4ce02df51e5abfe366f1df",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b72d46f4232b58835d44aa3abd711df399d4728/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b72d46f4232b58835d44aa3abd711df399d4728/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=2b72d46f4232b58835d44aa3abd711df399d4728",
        "patch": "@@ -30,7 +30,9 @@ QString TransactionDesc::FormatTxStatus(const CWalletTx& wtx)\n     else\n     {\n         int nDepth = wtx.GetDepthInMainChain();\n-        if (GetAdjustedTime() - wtx.nTimeReceived > 2 * 60 && wtx.GetRequestCount() == 0)\n+        if (nDepth < 0)\n+            return tr(\"conflicted\");\n+        else if (GetAdjustedTime() - wtx.nTimeReceived > 2 * 60 && wtx.GetRequestCount() == 0)\n             return tr(\"%1/offline\").arg(nDepth);\n         else if (nDepth < 6)\n             return tr(\"%1/unconfirmed\").arg(nDepth);"
      },
      {
        "sha": "fabe292b4491f1db6414401688e28fbd8674845b",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b72d46f4232b58835d44aa3abd711df399d4728/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b72d46f4232b58835d44aa3abd711df399d4728/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=2b72d46f4232b58835d44aa3abd711df399d4728",
        "patch": "@@ -494,7 +494,9 @@ void WalletModel::getOutputs(const std::vector<COutPoint>& vOutpoints, std::vect\n     BOOST_FOREACH(const COutPoint& outpoint, vOutpoints)\n     {\n         if (!wallet->mapWallet.count(outpoint.hash)) continue;\n-        COutput out(&wallet->mapWallet[outpoint.hash], outpoint.n, wallet->mapWallet[outpoint.hash].GetDepthInMainChain());\n+        int nDepth = wallet->mapWallet[outpoint.hash].GetDepthInMainChain();\n+        if (nDepth < 0) continue;\n+        COutput out(&wallet->mapWallet[outpoint.hash], outpoint.n, nDepth);\n         vOutputs.push_back(out);\n     }\n }\n@@ -513,7 +515,9 @@ void WalletModel::listCoins(std::map<QString, std::vector<COutput> >& mapCoins)\n     BOOST_FOREACH(const COutPoint& outpoint, vLockedCoins)\n     {\n         if (!wallet->mapWallet.count(outpoint.hash)) continue;\n-        COutput out(&wallet->mapWallet[outpoint.hash], outpoint.n, wallet->mapWallet[outpoint.hash].GetDepthInMainChain());\n+        int nDepth = wallet->mapWallet[outpoint.hash].GetDepthInMainChain();\n+        if (nDepth < 0) continue;\n+        COutput out(&wallet->mapWallet[outpoint.hash], outpoint.n, nDepth);\n         vCoins.push_back(out);\n     }\n "
      },
      {
        "sha": "2b49762d4a8777652e84281eb6835f12cf6586c0",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b72d46f4232b58835d44aa3abd711df399d4728/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b72d46f4232b58835d44aa3abd711df399d4728/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=2b72d46f4232b58835d44aa3abd711df399d4728",
        "patch": "@@ -45,7 +45,7 @@ void WalletTxToJSON(const CWalletTx& wtx, Object& entry)\n     entry.push_back(Pair(\"confirmations\", confirms));\n     if (wtx.IsCoinBase())\n         entry.push_back(Pair(\"generated\", true));\n-    if (confirms)\n+    if (confirms > 0)\n     {\n         entry.push_back(Pair(\"blockhash\", wtx.hashBlock.GetHex()));\n         entry.push_back(Pair(\"blockindex\", wtx.nIndex));\n@@ -1109,7 +1109,10 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n             Object entry;\n             entry.push_back(Pair(\"account\", strSentAccount));\n             MaybePushAddress(entry, s.first);\n-            entry.push_back(Pair(\"category\", \"send\"));\n+            if (wtx.GetDepthInMainChain() < 0)\n+                entry.push_back(Pair(\"category\", \"conflicted\"));\n+            else\n+                entry.push_back(Pair(\"category\", \"send\"));\n             entry.push_back(Pair(\"amount\", ValueFromAmount(-s.second)));\n             entry.push_back(Pair(\"fee\", ValueFromAmount(-nFee)));\n             if (fLong)\n@@ -1141,7 +1144,12 @@ void ListTransactions(const CWalletTx& wtx, const string& strAccount, int nMinDe\n                         entry.push_back(Pair(\"category\", \"generate\"));\n                 }\n                 else\n-                    entry.push_back(Pair(\"category\", \"receive\"));\n+                {\n+                    if (wtx.GetDepthInMainChain() < 0)\n+                        entry.push_back(Pair(\"category\", \"conflicted\"));\n+                    else\n+                        entry.push_back(Pair(\"category\", \"receive\"));\n+                }\n                 entry.push_back(Pair(\"amount\", ValueFromAmount(r.second)));\n                 if (fLong)\n                     WalletTxToJSON(wtx, entry);"
      },
      {
        "sha": "2853f375a53213b033cc3f5d334adfd0ebcfb91c",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b72d46f4232b58835d44aa3abd711df399d4728/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b72d46f4232b58835d44aa3abd711df399d4728/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=2b72d46f4232b58835d44aa3abd711df399d4728",
        "patch": "@@ -1021,11 +1021,15 @@ void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed, const\n             if (pcoin->IsCoinBase() && pcoin->GetBlocksToMaturity() > 0)\n                 continue;\n \n+            int nDepth = pcoin->GetDepthInMainChain();\n+            if (nDepth < 0)\n+                continue;\n+\n             for (unsigned int i = 0; i < pcoin->vout.size(); i++) {\n                 if (!(pcoin->IsSpent(i)) && IsMine(pcoin->vout[i]) &&\n                     !IsLockedCoin((*it).first, i) && pcoin->vout[i].nValue > 0 &&\n                     (!coinControl || !coinControl->HasSelected() || coinControl->IsSelected((*it).first, i)))\n-                        vCoins.push_back(COutput(pcoin, i, pcoin->GetDepthInMainChain()));\n+                        vCoins.push_back(COutput(pcoin, i, nDepth));\n             }\n         }\n     }"
      },
      {
        "sha": "ed63e2a714bdf2832eaff2af4404a442eef3bfaa",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b72d46f4232b58835d44aa3abd711df399d4728/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b72d46f4232b58835d44aa3abd711df399d4728/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=2b72d46f4232b58835d44aa3abd711df399d4728",
        "patch": "@@ -700,8 +700,11 @@ class CWalletTx : public CMerkleTx\n         // Quick answer in most cases\n         if (!IsFinalTx(*this))\n             return false;\n-        if (GetDepthInMainChain() >= 1)\n+        int nDepth = GetDepthInMainChain();\n+        if (nDepth >= 1)\n             return true;\n+        if (nDepth < 0)\n+            return false;\n         if (!bSpendZeroConfChange || !IsFromMe()) // using wtx's cached debit\n             return false;\n \n@@ -717,8 +720,11 @@ class CWalletTx : public CMerkleTx\n \n             if (!IsFinalTx(*ptx))\n                 return false;\n-            if (ptx->GetDepthInMainChain() >= 1)\n+            int nPDepth = ptx->GetDepthInMainChain();\n+            if (nPDepth >= 1)\n                 continue;\n+            if (nPDepth < 0)\n+                return false;\n             if (!pwallet->IsFromMe(*ptx))\n                 return false;\n "
      }
    ]
  },
  {
    "sha": "9a3d936fc2e98b1e8234bf27e09cf7bc22811bee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTNkOTM2ZmMyZTk4YjFlODIzNGJmMjdlMDljZjdiYzIyODExYmVl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-02-14T06:59:07Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-02-14T18:25:24Z"
      },
      "message": "qt: GUI for conflicted transactions\n\n- Exclamation mark icon for conflicted transactions\n- Show mouseover status for conflicted transactions as \"conflicted\"\n- Don't show inactive transactions on overview page overview",
      "tree": {
        "sha": "6c04425a46f658ed92568c7a2ede61a6754cbd40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c04425a46f658ed92568c7a2ede61a6754cbd40"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2b72d46f4232b58835d44aa3abd711df399d4728",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b72d46f4232b58835d44aa3abd711df399d4728",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2b72d46f4232b58835d44aa3abd711df399d4728"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 37,
      "deletions": 6
    },
    "files": [
      {
        "sha": "030804db6e44601d7561c52f3f9d5a7edde9c9be",
        "filename": "src/qt/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=9a3d936fc2e98b1e8234bf27e09cf7bc22811bee",
        "patch": "@@ -243,6 +243,7 @@ RES_ICONS = \\\n   res/icons/toolbar_testnet.png \\\n   res/icons/transaction0.png \\\n   res/icons/transaction2.png \\\n+  res/icons/transaction_conflicted.png \\\n   res/icons/tx_inout.png \\\n   res/icons/tx_input.png \\\n   res/icons/tx_output.png \\"
      },
      {
        "sha": "7c3a7756b79348794ab981bbdd8681d1bbf9c8a9",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=9a3d936fc2e98b1e8234bf27e09cf7bc22811bee",
        "patch": "@@ -12,6 +12,7 @@\n         <file alias=\"connect_4\">res/icons/connect4_16.png</file>\n         <file alias=\"transaction_0\">res/icons/transaction0.png</file>\n         <file alias=\"transaction_confirmed\">res/icons/transaction2.png</file>\n+        <file alias=\"transaction_conflicted\">res/icons/transaction_conflicted.png</file>\n         <file alias=\"transaction_1\">res/icons/clock1.png</file>\n         <file alias=\"transaction_2\">res/icons/clock2.png</file>\n         <file alias=\"transaction_3\">res/icons/clock3.png</file>"
      },
      {
        "sha": "1a9d1de571d9709c71406565c56df9b55c8c7863",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=9a3d936fc2e98b1e8234bf27e09cf7bc22811bee",
        "patch": "@@ -175,6 +175,7 @@ void OverviewPage::setWalletModel(WalletModel *model)\n         filter->setLimit(NUM_ITEMS);\n         filter->setDynamicSortFilter(true);\n         filter->setSortRole(Qt::EditRole);\n+        filter->setShowInactive(false);\n         filter->sort(TransactionTableModel::Status, Qt::DescendingOrder);\n \n         ui->listTransactions->setModel(filter);"
      },
      {
        "sha": "51fff649abfaf8097bcfe7b69e2f02f5ebfd6107",
        "filename": "src/qt/res/icons/transaction_conflicted.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/res/icons/transaction_conflicted.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/res/icons/transaction_conflicted.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/transaction_conflicted.png?ref=9a3d936fc2e98b1e8234bf27e09cf7bc22811bee"
      },
      {
        "sha": "f9546fddb5edbbb385760c5b2cb1665e9087b6c1",
        "filename": "src/qt/transactionfilterproxy.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/transactionfilterproxy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/transactionfilterproxy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionfilterproxy.cpp?ref=9a3d936fc2e98b1e8234bf27e09cf7bc22811bee",
        "patch": "@@ -5,6 +5,7 @@\n #include \"transactionfilterproxy.h\"\n \n #include \"transactiontablemodel.h\"\n+#include \"transactionrecord.h\"\n \n #include <cstdlib>\n \n@@ -22,7 +23,8 @@ TransactionFilterProxy::TransactionFilterProxy(QObject *parent) :\n     addrPrefix(),\n     typeFilter(ALL_TYPES),\n     minAmount(0),\n-    limitRows(-1)\n+    limitRows(-1),\n+    showInactive(true)\n {\n }\n \n@@ -35,7 +37,10 @@ bool TransactionFilterProxy::filterAcceptsRow(int sourceRow, const QModelIndex &\n     QString address = index.data(TransactionTableModel::AddressRole).toString();\n     QString label = index.data(TransactionTableModel::LabelRole).toString();\n     qint64 amount = llabs(index.data(TransactionTableModel::AmountRole).toLongLong());\n+    int status = index.data(TransactionTableModel::StatusRole).toInt();\n \n+    if(!showInactive && status == TransactionStatus::Conflicted)\n+        return false;\n     if(!(TYPE(type) & typeFilter))\n         return false;\n     if(datetime < dateFrom || datetime > dateTo)\n@@ -78,6 +83,12 @@ void TransactionFilterProxy::setLimit(int limit)\n     this->limitRows = limit;\n }\n \n+void TransactionFilterProxy::setShowInactive(bool showInactive)\n+{\n+    this->showInactive = showInactive;\n+    invalidateFilter();\n+}\n+\n int TransactionFilterProxy::rowCount(const QModelIndex &parent) const\n {\n     if(limitRows != -1)"
      },
      {
        "sha": "9919bc3fd68f13dd250546245bdcff215c0bbc27",
        "filename": "src/qt/transactionfilterproxy.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/transactionfilterproxy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/transactionfilterproxy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionfilterproxy.h?ref=9a3d936fc2e98b1e8234bf27e09cf7bc22811bee",
        "patch": "@@ -36,6 +36,9 @@ class TransactionFilterProxy : public QSortFilterProxyModel\n     /** Set maximum number of rows returned, -1 if unlimited. */\n     void setLimit(int limit);\n \n+    /** Set whether to show conflicted transactions. */\n+    void setShowInactive(bool showInactive);\n+\n     int rowCount(const QModelIndex &parent = QModelIndex()) const;\n \n protected:\n@@ -48,6 +51,7 @@ class TransactionFilterProxy : public QSortFilterProxyModel\n     quint32 typeFilter;\n     qint64 minAmount;\n     int limitRows;\n+    bool showInactive;\n };\n \n #endif // TRANSACTIONFILTERPROXY_H"
      },
      {
        "sha": "345ecfb196f20d0527c39c79502ad9351c64e84e",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=9a3d936fc2e98b1e8234bf27e09cf7bc22811bee",
        "patch": "@@ -183,7 +183,11 @@ void TransactionRecord::updateStatus(const CWalletTx &wtx)\n     }\n     else\n     {\n-        if (GetAdjustedTime() - wtx.nTimeReceived > 2 * 60 && wtx.GetRequestCount() == 0)\n+        if (status.depth < 0)\n+        {\n+            status.status = TransactionStatus::Conflicted;\n+        }\n+        else if (GetAdjustedTime() - wtx.nTimeReceived > 2 * 60 && wtx.GetRequestCount() == 0)\n         {\n             status.status = TransactionStatus::Offline;\n         }"
      },
      {
        "sha": "d7be0bc438fee80c1d741be2c946d463323a5595",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=9a3d936fc2e98b1e8234bf27e09cf7bc22811bee",
        "patch": "@@ -36,7 +36,8 @@ class TransactionStatus\n         OpenUntilBlock,\n         Offline,\n         Unconfirmed,\n-        HaveConfirmations\n+        HaveConfirmations,\n+        Conflicted\n     };\n \n     bool confirmed;"
      },
      {
        "sha": "9386d46272a3eec7c6d7e64a6a5a7c2b660af5e3",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=9a3d936fc2e98b1e8234bf27e09cf7bc22811bee",
        "patch": "@@ -312,14 +312,17 @@ QString TransactionTableModel::formatTxStatus(const TransactionRecord *wtx) cons\n             status = tr(\"Open until %1\").arg(GUIUtil::dateTimeStr(wtx->status.open_for));\n             break;\n         case TransactionStatus::Offline:\n-            status = tr(\"Offline (%1 confirmations)\").arg(wtx->status.depth);\n+            status = tr(\"Offline\");\n             break;\n         case TransactionStatus::Unconfirmed:\n             status = tr(\"Unconfirmed (%1 of %2 confirmations)\").arg(wtx->status.depth).arg(TransactionRecord::NumConfirmations);\n             break;\n         case TransactionStatus::HaveConfirmations:\n             status = tr(\"Confirmed (%1 confirmations)\").arg(wtx->status.depth);\n             break;\n+        case TransactionStatus::Conflicted:\n+            status = tr(\"Conflicted\");\n+            break;\n         }\n     }\n \n@@ -471,7 +474,6 @@ QVariant TransactionTableModel::txStatusDecoration(const TransactionRecord *wtx)\n         case TransactionStatus::OpenUntilBlock:\n         case TransactionStatus::OpenUntilDate:\n             return QColor(64,64,255);\n-            break;\n         case TransactionStatus::Offline:\n             return QColor(192,192,192);\n         case TransactionStatus::Unconfirmed:\n@@ -486,6 +488,8 @@ QVariant TransactionTableModel::txStatusDecoration(const TransactionRecord *wtx)\n             };\n         case TransactionStatus::HaveConfirmations:\n             return QIcon(\":/icons/transaction_confirmed\");\n+        case TransactionStatus::Conflicted:\n+            return QIcon(\":/icons/transaction_conflicted\");\n         }\n     }\n     return QColor(0,0,0);\n@@ -587,6 +591,8 @@ QVariant TransactionTableModel::data(const QModelIndex &index, int role) const\n                                           rec->status.maturity != TransactionStatus::Mature);\n     case FormattedAmountRole:\n         return formatTxAmount(rec, false);\n+    case StatusRole:\n+        return rec->status.status;\n     }\n     return QVariant();\n }"
      },
      {
        "sha": "7b9cf09cbeb8be785e93723bb76b12daf3611c88",
        "filename": "src/qt/transactiontablemodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/transactiontablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a3d936fc2e98b1e8234bf27e09cf7bc22811bee/src/qt/transactiontablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.h?ref=9a3d936fc2e98b1e8234bf27e09cf7bc22811bee",
        "patch": "@@ -53,7 +53,9 @@ class TransactionTableModel : public QAbstractTableModel\n         /** Is transaction confirmed? */\n         ConfirmedRole,\n         /** Formatted amount, without brackets when unconfirmed */\n-        FormattedAmountRole\n+        FormattedAmountRole,\n+        /** Transaction status (TransactionRecord::Status) */\n+        StatusRole\n     };\n \n     int rowCount(const QModelIndex &parent) const;"
      }
    ]
  }
]