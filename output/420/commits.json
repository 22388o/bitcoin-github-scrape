[
  {
    "sha": "a74b01cfb21b4ec69b7ba9bbab2845c87f95e976",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzRiMDFjZmIyMWI0ZWM2OWI3YmE5YmJhYjI4NDVjODdmOTVlOTc2",
    "commit": {
      "author": {
        "name": "Forrest Voight",
        "email": "forrest@forre.st",
        "date": "2011-07-18T16:18:15Z"
      },
      "committer": {
        "name": "Forrest Voight",
        "email": "forrest@forre.st",
        "date": "2011-07-18T16:18:15Z"
      },
      "message": "Added a new argument to 'getnewaddress' - 'rawpubkey' - that makes it return an object with both the address and the pubkey in hexadecimal form.",
      "tree": {
        "sha": "4063ba94cd385d7b51065dc4972c9bd2f2f46fdc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4063ba94cd385d7b51065dc4972c9bd2f2f46fdc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a74b01cfb21b4ec69b7ba9bbab2845c87f95e976",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a74b01cfb21b4ec69b7ba9bbab2845c87f95e976",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a74b01cfb21b4ec69b7ba9bbab2845c87f95e976",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a74b01cfb21b4ec69b7ba9bbab2845c87f95e976/comments",
    "author": {
      "login": "forrestv",
      "id": 59872,
      "node_id": "MDQ6VXNlcjU5ODcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/59872?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/forrestv",
      "html_url": "https://github.com/forrestv",
      "followers_url": "https://api.github.com/users/forrestv/followers",
      "following_url": "https://api.github.com/users/forrestv/following{/other_user}",
      "gists_url": "https://api.github.com/users/forrestv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/forrestv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/forrestv/subscriptions",
      "organizations_url": "https://api.github.com/users/forrestv/orgs",
      "repos_url": "https://api.github.com/users/forrestv/repos",
      "events_url": "https://api.github.com/users/forrestv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/forrestv/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "forrestv",
      "id": 59872,
      "node_id": "MDQ6VXNlcjU5ODcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/59872?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/forrestv",
      "html_url": "https://github.com/forrestv",
      "followers_url": "https://api.github.com/users/forrestv/followers",
      "following_url": "https://api.github.com/users/forrestv/following{/other_user}",
      "gists_url": "https://api.github.com/users/forrestv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/forrestv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/forrestv/subscriptions",
      "organizations_url": "https://api.github.com/users/forrestv/orgs",
      "repos_url": "https://api.github.com/users/forrestv/repos",
      "events_url": "https://api.github.com/users/forrestv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/forrestv/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "786bfc3bb7610e5b4f9affce3ce98da0df98256a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/786bfc3bb7610e5b4f9affce3ce98da0df98256a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/786bfc3bb7610e5b4f9affce3ce98da0df98256a"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 20,
      "deletions": 5
    },
    "files": [
      {
        "sha": "47b521b3d2fd97ed86a61a90d9c077ec0d04c1d0",
        "filename": "src/rpc.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 5,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a74b01cfb21b4ec69b7ba9bbab2845c87f95e976/src/rpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a74b01cfb21b4ec69b7ba9bbab2845c87f95e976/src/rpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc.cpp?ref=a74b01cfb21b4ec69b7ba9bbab2845c87f95e976",
        "patch": "@@ -317,23 +317,37 @@ Value getinfo(const Array& params, bool fHelp)\n \n Value getnewaddress(const Array& params, bool fHelp)\n {\n-    if (fHelp || params.size() > 1)\n+    if (fHelp || params.size() > 2)\n         throw runtime_error(\n-            \"getnewaddress [account]\\n\"\n+            \"getnewaddress [account] [rawpubkey=false]\\n\"\n             \"Returns a new bitcoin address for receiving payments.  \"\n             \"If [account] is specified (recommended), it is added to the address book \"\n-            \"so payments received with the address will be credited to [account].\");\n+            \"so payments received with the address will be credited to [account].\"\n+            \"If [rawpubkey] is true, the address is returned along with its \"\n+            \"pubkey in hexadecimal form.\");\n \n     // Parse the account first so we don't generate a key if there's an error\n     string strAccount;\n     if (params.size() > 0)\n         strAccount = AccountFromValue(params[0]);\n+    bool rawpubkey = false;\n+    if (params.size() > 1)\n+        rawpubkey = params[1].get_bool();\n \n     // Generate a new key that is added to wallet\n-    string strAddress = PubKeyToAddress(pwalletMain->GetKeyFromKeyPool());\n+    vector<unsigned char> pubkey = pwalletMain->GetKeyFromKeyPool();\n+    string strAddress = PubKeyToAddress(pubkey);\n \n     pwalletMain->SetAddressBookName(strAddress, strAccount);\n-    return strAddress;\n+\n+    if (rawpubkey) {\n+        Object obj;\n+        obj.push_back(Pair(\"address\", strAddress));\n+        obj.push_back(Pair(\"pubkey\", HexStr(pubkey)));\n+        return obj;\n+    }\n+    else\n+        return strAddress;\n }\n \n \n@@ -2097,6 +2111,7 @@ int CommandLineRPC(int argc, char *argv[])\n         //\n         if (strMethod == \"setgenerate\"            && n > 0) ConvertTo<bool>(params[0]);\n         if (strMethod == \"setgenerate\"            && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+        if (strMethod == \"getnewaddress\"          && n > 1) ConvertTo<bool>(params[1]);\n         if (strMethod == \"sendtoaddress\"          && n > 1) ConvertTo<double>(params[1]);\n         if (strMethod == \"settxfee\"               && n > 0) ConvertTo<double>(params[0]);\n         if (strMethod == \"getamountreceived\"      && n > 1) ConvertTo<boost::int64_t>(params[1]); // deprecated"
      }
    ]
  }
]