practicalswift,2021-10-07 11:40:57,"Concept ACK\n\nVery happy to see the `KNOWN_VIOLATIONS` list in `test/lint/lint-locale-dependence.sh` shrink. Only a few violations left to tackle! :)",https://github.com/bitcoin/bitcoin/pull/23213#issuecomment-937711448,937711448,
DrahtBot,2021-10-07 17:44:13,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#20744](https://github.com/bitcoin/bitcoin/pull/20744) (Use std::filesystem. Remove Boost Filesystem & System by fanquake",https://github.com/bitcoin/bitcoin/pull/23213#issuecomment-938015801,938015801,
MarcoFalke,2021-10-12 07:11:35,"> a couple ideas, feel free to ignore\n\nLeaving as is for now.",https://github.com/bitcoin/bitcoin/pull/23213#issuecomment-940729329,940729329,
MarcoFalke,2021-10-12 07:12:34,Force pushed with a rebase. Should be easy to re-ACK with git range-diff (6 line diff).,https://github.com/bitcoin/bitcoin/pull/23213#issuecomment-940729939,940729939,
practicalswift,2021-10-12 08:08:51,cr ACK fa8d49289479b8eda7ba7530515c414d1cd566a3,https://github.com/bitcoin/bitcoin/pull/23213#issuecomment-940768689,940768689,
brunoerg,2021-10-09 12:51:55,"Wouldn't it be better using a loop to avoid repetition? like:\n```\nitems = ['5a', '-5', '0', '2001', '99999999999999999999999999999999999']\n   for i in items:\n     assert_equal(\n        bytes(f'Header count out of range: {i}\r\n', 'utf8'),\n        self.test_rest_request(f""/headers/{i}/{bb_hash}"", ret_type=RetType.BYTES, status=400),\n     )\n```",https://github.com/bitcoin/bitcoin/pull/23213#discussion_r725484081,725484081,test/functional/interface_rest.py
MarcoFalke,2021-10-11 09:21:25,"Thanks, done",https://github.com/bitcoin/bitcoin/pull/23213#discussion_r725941755,725941755,test/functional/interface_rest.py
shaavan,2021-10-11 18:00:59,"For a very similar reason as specified [here](https://github.com/bitcoin/bitcoin/pull/23227#discussion_r725608515) I would suggest making the following change.\n```suggestion\n    if (!parsed_count.has_value() || *parsed_count < 1 || *parsed_count > 2000) {\n```\n\n**Doubt:** In the PR, 23227, you used checked access for the variable num. But in this PR, you used unchecked access for the vari",https://github.com/bitcoin/bitcoin/pull/23213#discussion_r726474942,726474942,src/rest.cpp
MarcoFalke,2021-10-12 07:07:32,"> Doubt: In the PR, 23227, you used checked access for the variable num. But in this PR, you used unchecked access for the variable parsed_count, though they had a very similar use case. Is there any specific reason behind doing so? (Checked Unchecked access reference)\n\nbitcoin-tx is allowed to throw exceptions, so there is no downside in using `.value()`, thus doing the check twice. `rest` is",https://github.com/bitcoin/bitcoin/pull/23213#discussion_r726821437,726821437,src/rest.cpp
MarcoFalke,2021-10-12 07:09:33,"> has_value\n\nThanks, done.",https://github.com/bitcoin/bitcoin/pull/23213#discussion_r726822864,726822864,src/rest.cpp
promag,2021-10-12 08:10:37,"nit,\n```cpp\nif (!parsed_count.has_value()) {\n    return RESTERR(req, HTTP_BAD_REQUEST, ""Header count invalid: "" + SanitizeString(path[0]));\n}\n```\n",https://github.com/bitcoin/bitcoin/pull/23213#discussion_r726868492,726868492,src/rest.cpp
MarcoFalke,2021-10-12 08:58:11,"This would also print ""invalid"" instead of ""out of range"" for `-1` and `99999999999999999999999999999999999`. I think the current code is fine. Leaving as is for now.",https://github.com/bitcoin/bitcoin/pull/23213#discussion_r726910395,726910395,src/rest.cpp
shaavan,2021-10-12 12:24:19,"> bitcoin-tx is allowed to throw exceptions, so there is no downside in using .value(), thus doing the check twice. rest is not allowed to do that, so we do the check only once, which is sufficient.\n\nThat makes sense. Thanks for clearing it out!",https://github.com/bitcoin/bitcoin/pull/23213#discussion_r727084567,727084567,src/rest.cpp
