[
  {
    "sha": "9e7b23b73387600d175aff8bd5e6624dd51f86e7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTdiMjNiNzMzODc2MDBkMTc1YWZmOGJkNWU2NjI0ZGQ1MWY4NmU3",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2020-02-01T01:03:53Z"
      },
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2020-06-19T06:32:59Z"
      },
      "message": "Improve TransactionErrorString messages.",
      "tree": {
        "sha": "edf4d979c4a3dd0ec7b36f91f885f2fa6489ad50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/edf4d979c4a3dd0ec7b36f91f885f2fa6489ad50"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e7b23b73387600d175aff8bd5e6624dd51f86e7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e7b23b73387600d175aff8bd5e6624dd51f86e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e7b23b73387600d175aff8bd5e6624dd51f86e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e7b23b73387600d175aff8bd5e6624dd51f86e7/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "057bd3189f12be40e641023ea3a0d9ffe5079ddb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/057bd3189f12be40e641023ea3a0d9ffe5079ddb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/057bd3189f12be40e641023ea3a0d9ffe5079ddb"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "3e29083712eac13ca0fa73bd5eec8ac024e39de4",
        "filename": "src/util/error.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e7b23b73387600d175aff8bd5e6624dd51f86e7/src/util/error.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e7b23b73387600d175aff8bd5e6624dd51f86e7/src/util/error.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/error.cpp?ref=9e7b23b73387600d175aff8bd5e6624dd51f86e7",
        "patch": "@@ -14,7 +14,7 @@ bilingual_str TransactionErrorString(const TransactionError err)\n         case TransactionError::OK:\n             return Untranslated(\"No error\");\n         case TransactionError::MISSING_INPUTS:\n-            return Untranslated(\"Missing inputs\");\n+            return Untranslated(\"Inputs missing or spent\");\n         case TransactionError::ALREADY_IN_CHAIN:\n             return Untranslated(\"Transaction already in block chain\");\n         case TransactionError::P2P_DISABLED:\n@@ -24,11 +24,11 @@ bilingual_str TransactionErrorString(const TransactionError err)\n         case TransactionError::MEMPOOL_ERROR:\n             return Untranslated(\"AcceptToMemoryPool failed\");\n         case TransactionError::INVALID_PSBT:\n-            return Untranslated(\"PSBT is not sane\");\n+            return Untranslated(\"PSBT is not well-formed\");\n         case TransactionError::PSBT_MISMATCH:\n             return Untranslated(\"PSBTs not compatible (different transactions)\");\n         case TransactionError::SIGHASH_MISMATCH:\n-            return Untranslated(\"Specified sighash value does not match existing value\");\n+            return Untranslated(\"Specified sighash value does not match value stored in PSBT\");\n         case TransactionError::MAX_FEE_EXCEEDED:\n             return Untranslated(\"Fee exceeds maximum configured by -maxtxfee\");\n         // no default case, so the compiler can warn about missing cases"
      },
      {
        "sha": "a263e2270557669aa819d6890882a909ec89c6fe",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e7b23b73387600d175aff8bd5e6624dd51f86e7/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e7b23b73387600d175aff8bd5e6624dd51f86e7/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=9e7b23b73387600d175aff8bd5e6624dd51f86e7",
        "patch": "@@ -467,7 +467,7 @@ def test_psbt_input_keys(psbt_input, keys):\n         assert_equal(analysis['next'], 'creator')\n         assert_equal(analysis['error'], 'PSBT is not valid. Input 0 specifies invalid prevout')\n \n-        assert_raises_rpc_error(-25, 'Missing inputs', self.nodes[0].walletprocesspsbt, 'cHNidP8BAJoCAAAAAkvEW8NnDtdNtDpsmze+Ht2LH35IJcKv00jKAlUs21RrAwAAAAD/////S8Rbw2cO1020OmybN74e3Ysffkglwq/TSMoCVSzbVGsBAAAAAP7///8CwLYClQAAAAAWABSNJKzjaUb3uOxixsvh1GGE3fW7zQD5ApUAAAAAFgAUKNw0x8HRctAgmvoevm4u1SbN7XIAAAAAAAEAnQIAAAACczMa321tVHuN4GKWKRncycI22aX3uXgwSFUKM2orjRsBAAAAAP7///9zMxrfbW1Ue43gYpYpGdzJwjbZpfe5eDBIVQozaiuNGwAAAAAA/v///wIA+QKVAAAAABl2qRT9zXUVA8Ls5iVqynLHe5/vSe1XyYisQM0ClQAAAAAWABRmWQUcjSjghQ8/uH4Bn/zkakwLtAAAAAAAAQEfQM0ClQAAAAAWABRmWQUcjSjghQ8/uH4Bn/zkakwLtAAAAA==')\n+        assert_raises_rpc_error(-25, 'Inputs missing or spent', self.nodes[0].walletprocesspsbt, 'cHNidP8BAJoCAAAAAkvEW8NnDtdNtDpsmze+Ht2LH35IJcKv00jKAlUs21RrAwAAAAD/////S8Rbw2cO1020OmybN74e3Ysffkglwq/TSMoCVSzbVGsBAAAAAP7///8CwLYClQAAAAAWABSNJKzjaUb3uOxixsvh1GGE3fW7zQD5ApUAAAAAFgAUKNw0x8HRctAgmvoevm4u1SbN7XIAAAAAAAEAnQIAAAACczMa321tVHuN4GKWKRncycI22aX3uXgwSFUKM2orjRsBAAAAAP7///9zMxrfbW1Ue43gYpYpGdzJwjbZpfe5eDBIVQozaiuNGwAAAAAA/v///wIA+QKVAAAAABl2qRT9zXUVA8Ls5iVqynLHe5/vSe1XyYisQM0ClQAAAAAWABRmWQUcjSjghQ8/uH4Bn/zkakwLtAAAAAAAAQEfQM0ClQAAAAAWABRmWQUcjSjghQ8/uH4Bn/zkakwLtAAAAA==')\n \n if __name__ == '__main__':\n     PSBTTest().main()"
      }
    ]
  },
  {
    "sha": "5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZGQwYzAzZmZhM2FlYWE2OWQ4YTNhNzE2ZjkwMmY0NTBkNWVhYWVj",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2020-02-01T02:12:14Z"
      },
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2020-06-19T06:32:59Z"
      },
      "message": "FillPSBT: report number of inputs signed (or would sign)\n\nIn FillPSBT, optionally report the number of inputs we successfully\nsigned, as an out parameter. If \"sign\" is false, instead report the\nnumber of inputs for which GetSigningProvider does not return nullptr.\n(This is a potentially overbroad estimate of inputs we could sign.)",
      "tree": {
        "sha": "169889777b3202574728ff54a3b65592fc67e906",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/169889777b3202574728ff54a3b65592fc67e906"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e7b23b73387600d175aff8bd5e6624dd51f86e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e7b23b73387600d175aff8bd5e6624dd51f86e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e7b23b73387600d175aff8bd5e6624dd51f86e7"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 46,
      "deletions": 13
    },
    "files": [
      {
        "sha": "b65eb72b1ccf94d26091606d277f8fb258f12edf",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec",
        "patch": "@@ -335,9 +335,10 @@ class WalletImpl : public Wallet\n         bool sign,\n         bool bip32derivs,\n         PartiallySignedTransaction& psbtx,\n-        bool& complete) override\n+        bool& complete,\n+        size_t* n_signed) override\n     {\n-        return m_wallet->FillPSBT(psbtx, complete, sighash_type, sign, bip32derivs);\n+        return m_wallet->FillPSBT(psbtx, complete, sighash_type, sign, bip32derivs, n_signed);\n     }\n     WalletBalances getBalances() override\n     {"
      },
      {
        "sha": "e2161521f6662e015feef6a6d363ebd958ea5a56",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec",
        "patch": "@@ -197,7 +197,8 @@ class Wallet\n         bool sign,\n         bool bip32derivs,\n         PartiallySignedTransaction& psbtx,\n-        bool& complete) = 0;\n+        bool& complete,\n+        size_t* n_signed) = 0;\n \n     //! Get balances.\n     virtual WalletBalances getBalances() = 0;"
      },
      {
        "sha": "0ac61f3adc02384121e81ebc4f99d91ee07b7525",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec",
        "patch": "@@ -392,7 +392,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n         CMutableTransaction mtx = CMutableTransaction{*(m_current_transaction->getWtx())};\n         PartiallySignedTransaction psbtx(mtx);\n         bool complete = false;\n-        const TransactionError err = model->wallet().fillPSBT(SIGHASH_ALL, false /* sign */, true /* bip32derivs */, psbtx, complete);\n+        const TransactionError err = model->wallet().fillPSBT(SIGHASH_ALL, false /* sign */, true /* bip32derivs */, psbtx, complete, nullptr);\n         assert(!complete);\n         assert(err == TransactionError::OK);\n         // Serialize the PSBT"
      },
      {
        "sha": "72c75f7be02b41f1eae00e803b4a3d356c32d8ce",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec",
        "patch": "@@ -536,7 +536,7 @@ bool WalletModel::bumpFee(uint256 hash, uint256& new_hash)\n     if (create_psbt) {\n         PartiallySignedTransaction psbtx(mtx);\n         bool complete = false;\n-        const TransactionError err = wallet().fillPSBT(SIGHASH_ALL, false /* sign */, true /* bip32derivs */, psbtx, complete);\n+        const TransactionError err = wallet().fillPSBT(SIGHASH_ALL, false /* sign */, true /* bip32derivs */, psbtx, complete, nullptr);\n         if (err != TransactionError::OK || complete) {\n             QMessageBox::critical(nullptr, tr(\"Fee bump error\"), tr(\"Can't draft transaction.\"));\n             return false;"
      },
      {
        "sha": "e12a98a53b1482a765e7416efc173db9b72ff872",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 2,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec",
        "patch": "@@ -585,8 +585,11 @@ SigningResult LegacyScriptPubKeyMan::SignMessage(const std::string& message, con\n     return SigningResult::SIGNING_FAILED;\n }\n \n-TransactionError LegacyScriptPubKeyMan::FillPSBT(PartiallySignedTransaction& psbtx, int sighash_type, bool sign, bool bip32derivs) const\n+TransactionError LegacyScriptPubKeyMan::FillPSBT(PartiallySignedTransaction& psbtx, int sighash_type, bool sign, bool bip32derivs, int* n_signed) const\n {\n+    if (n_signed) {\n+        *n_signed = 0;\n+    }\n     for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n         const CTxIn& txin = psbtx.tx->vin[i];\n         PSBTInput& input = psbtx.inputs.at(i);\n@@ -617,6 +620,14 @@ TransactionError LegacyScriptPubKeyMan::FillPSBT(PartiallySignedTransaction& psb\n         SignatureData sigdata;\n         input.FillSignatureData(sigdata);\n         SignPSBTInput(HidingSigningProvider(this, !sign, !bip32derivs), psbtx, i, sighash_type);\n+\n+        bool signed_one = PSBTInputSigned(input);\n+        if (n_signed && (signed_one || !sign)) {\n+            // If sign is false, we assume that we _could_ sign if we get here. This\n+            // will never have false negatives; it is hard to tell under what i\n+            // circumstances it could have false positives.\n+            (*n_signed)++;\n+        }\n     }\n \n     // Fill in the bip32 keypaths and redeemscripts for the outputs so that hardware wallets can identify change\n@@ -2064,8 +2075,11 @@ SigningResult DescriptorScriptPubKeyMan::SignMessage(const std::string& message,\n     return SigningResult::OK;\n }\n \n-TransactionError DescriptorScriptPubKeyMan::FillPSBT(PartiallySignedTransaction& psbtx, int sighash_type, bool sign, bool bip32derivs) const\n+TransactionError DescriptorScriptPubKeyMan::FillPSBT(PartiallySignedTransaction& psbtx, int sighash_type, bool sign, bool bip32derivs, int* n_signed) const\n {\n+    if (n_signed) {\n+        *n_signed = 0;\n+    }\n     for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n         const CTxIn& txin = psbtx.tx->vin[i];\n         PSBTInput& input = psbtx.inputs.at(i);\n@@ -2117,6 +2131,14 @@ TransactionError DescriptorScriptPubKeyMan::FillPSBT(PartiallySignedTransaction&\n         }\n \n         SignPSBTInput(HidingSigningProvider(keys.get(), !sign, !bip32derivs), psbtx, i, sighash_type);\n+\n+        bool signed_one = PSBTInputSigned(input);\n+        if (n_signed && (signed_one || !sign)) {\n+            // If sign is false, we assume that we _could_ sign if we get here. This\n+            // will never have false negatives; it is hard to tell under what i\n+            // circumstances it could have false positives.\n+            (*n_signed)++;\n+        }\n     }\n \n     // Fill in the bip32 keypaths and redeemscripts for the outputs so that hardware wallets can identify change"
      },
      {
        "sha": "9fa2a68284c1d53302eea91fc3f4eb87201c4ede",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec",
        "patch": "@@ -234,7 +234,7 @@ class ScriptPubKeyMan\n     /** Sign a message with the given script */\n     virtual SigningResult SignMessage(const std::string& message, const PKHash& pkhash, std::string& str_sig) const { return SigningResult::SIGNING_FAILED; };\n     /** Adds script and derivation path information to a PSBT, and optionally signs it. */\n-    virtual TransactionError FillPSBT(PartiallySignedTransaction& psbt, int sighash_type = 1 /* SIGHASH_ALL */, bool sign = true, bool bip32derivs = false) const { return TransactionError::INVALID_PSBT; }\n+    virtual TransactionError FillPSBT(PartiallySignedTransaction& psbt, int sighash_type = 1 /* SIGHASH_ALL */, bool sign = true, bool bip32derivs = false, int* n_signed = nullptr) const { return TransactionError::INVALID_PSBT; }\n \n     virtual uint256 GetID() const { return uint256(); }\n \n@@ -393,7 +393,7 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n \n     bool SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const override;\n     SigningResult SignMessage(const std::string& message, const PKHash& pkhash, std::string& str_sig) const override;\n-    TransactionError FillPSBT(PartiallySignedTransaction& psbt, int sighash_type = 1 /* SIGHASH_ALL */, bool sign = true, bool bip32derivs = false) const override;\n+    TransactionError FillPSBT(PartiallySignedTransaction& psbt, int sighash_type = 1 /* SIGHASH_ALL */, bool sign = true, bool bip32derivs = false, int* n_signed = nullptr) const override;\n \n     uint256 GetID() const override;\n \n@@ -596,7 +596,7 @@ class DescriptorScriptPubKeyMan : public ScriptPubKeyMan\n \n     bool SignTransaction(CMutableTransaction& tx, const std::map<COutPoint, Coin>& coins, int sighash, std::map<int, std::string>& input_errors) const override;\n     SigningResult SignMessage(const std::string& message, const PKHash& pkhash, std::string& str_sig) const override;\n-    TransactionError FillPSBT(PartiallySignedTransaction& psbt, int sighash_type = 1 /* SIGHASH_ALL */, bool sign = true, bool bip32derivs = false) const override;\n+    TransactionError FillPSBT(PartiallySignedTransaction& psbt, int sighash_type = 1 /* SIGHASH_ALL */, bool sign = true, bool bip32derivs = false, int* n_signed = nullptr) const override;\n \n     uint256 GetID() const override;\n "
      },
      {
        "sha": "e02d172111866b0b7a70dfe8e1d368e2ba85c27b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec",
        "patch": "@@ -2471,8 +2471,11 @@ bool CWallet::SignTransaction(CMutableTransaction& tx, const std::map<COutPoint,\n     return false;\n }\n \n-TransactionError CWallet::FillPSBT(PartiallySignedTransaction& psbtx, bool& complete, int sighash_type, bool sign, bool bip32derivs) const\n+TransactionError CWallet::FillPSBT(PartiallySignedTransaction& psbtx, bool& complete, int sighash_type, bool sign, bool bip32derivs, size_t * n_signed) const\n {\n+    if (n_signed) {\n+        *n_signed = 0;\n+    }\n     LOCK(cs_wallet);\n     // Get all of the previous transactions\n     for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n@@ -2503,10 +2506,15 @@ TransactionError CWallet::FillPSBT(PartiallySignedTransaction& psbtx, bool& comp\n \n     // Fill in information from ScriptPubKeyMans\n     for (ScriptPubKeyMan* spk_man : GetAllScriptPubKeyMans()) {\n-        TransactionError res = spk_man->FillPSBT(psbtx, sighash_type, sign, bip32derivs);\n+        int n_signed_this_spkm = 0;\n+        TransactionError res = spk_man->FillPSBT(psbtx, sighash_type, sign, bip32derivs, &n_signed_this_spkm);\n         if (res != TransactionError::OK) {\n             return res;\n         }\n+\n+        if (n_signed) {\n+            (*n_signed) += n_signed_this_spkm;\n+        }\n     }\n \n     // Complete if every input is now signed"
      },
      {
        "sha": "9931671fb4afa7699afa9b55bc807c952a2adec6",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec",
        "patch": "@@ -964,7 +964,8 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n                   bool& complete,\n                   int sighash_type = 1 /* SIGHASH_ALL */,\n                   bool sign = true,\n-                  bool bip32derivs = true) const;\n+                  bool bip32derivs = true,\n+                  size_t* n_signed = nullptr) const;\n \n     /**\n      * Create a new transaction paying the recipients with a set of coins"
      }
    ]
  },
  {
    "sha": "a6cb0b0c29d327d01aebb98b0504f317eb19c3dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNmNiMGIwYzI5ZDMyN2QwMWFlYmI5OGIwNTA0ZjMxN2ViMTljM2Rj",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2020-05-29T08:25:04Z"
      },
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2020-06-19T09:20:04Z"
      },
      "message": "[gui] PSBT Operations Dialog (sign & broadcast)\n\nAdd a \"PSBT Operations\" dialog, reached from the \"Load PSBT...\" menu\nitem, giving options to sign or broadcast the loaded PSBT as\nappropriate, as well as copying the result to the clipboard or saving\nit to a file.",
      "tree": {
        "sha": "bb6310a7677bb704e256521eaae23c48d5586817",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb6310a7677bb704e256521eaae23c48d5586817"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5dd0c03ffa3aeaa69d8a3a716f902f450d5eaaec"
      }
    ],
    "stats": {
      "total": 549,
      "additions": 496,
      "deletions": 53
    },
    "files": [
      {
        "sha": "6a3c9f1dc125b9e44fb27b11f4bdab81f12dd5fc",
        "filename": "build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj?ref=a6cb0b0c29d327d01aebb98b0504f317eb19c3dc",
        "patch": "@@ -35,6 +35,7 @@\n     <ClCompile Include=\"..\\..\\src\\qt\\paymentserver.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\qt\\peertablemodel.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\qt\\platformstyle.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\psbtoperationsdialog.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\qt\\qrimagewidget.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\qt\\qvalidatedlineedit.cpp\" />\n     <ClCompile Include=\"..\\..\\src\\qt\\qvaluecombobox.cpp\" />\n@@ -87,6 +88,7 @@\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_paymentserver.cpp\" />\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_peertablemodel.cpp\" />\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_platformstyle.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_psbtoperationsdialog.cpp\" />\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qrimagewidget.cpp\" />\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qvalidatedlineedit.cpp\" />\n     <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qvaluecombobox.cpp\" />"
      },
      {
        "sha": "1f66516172c238a60062d9339b36ae4a164e7bb9",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=a6cb0b0c29d327d01aebb98b0504f317eb19c3dc",
        "patch": "@@ -25,6 +25,7 @@ QT_FORMS_UI = \\\n   qt/forms/openuridialog.ui \\\n   qt/forms/optionsdialog.ui \\\n   qt/forms/overviewpage.ui \\\n+  qt/forms/psbtoperationsdialog.ui \\\n   qt/forms/receivecoinsdialog.ui \\\n   qt/forms/receiverequestdialog.ui \\\n   qt/forms/debugwindow.ui \\\n@@ -61,6 +62,7 @@ QT_MOC_CPP = \\\n   qt/moc_overviewpage.cpp \\\n   qt/moc_peertablemodel.cpp \\\n   qt/moc_paymentserver.cpp \\\n+  qt/moc_psbtoperationsdialog.cpp \\\n   qt/moc_qrimagewidget.cpp \\\n   qt/moc_qvalidatedlineedit.cpp \\\n   qt/moc_qvaluecombobox.cpp \\\n@@ -132,6 +134,7 @@ BITCOIN_QT_H = \\\n   qt/paymentserver.h \\\n   qt/peertablemodel.h \\\n   qt/platformstyle.h \\\n+  qt/psbtoperationsdialog.h \\\n   qt/qrimagewidget.h \\\n   qt/qvalidatedlineedit.h \\\n   qt/qvaluecombobox.h \\\n@@ -245,6 +248,7 @@ BITCOIN_QT_WALLET_CPP = \\\n   qt/openuridialog.cpp \\\n   qt/overviewpage.cpp \\\n   qt/paymentserver.cpp \\\n+  qt/psbtoperationsdialog.cpp \\\n   qt/qrimagewidget.cpp \\\n   qt/receivecoinsdialog.cpp \\\n   qt/receiverequestdialog.cpp \\"
      },
      {
        "sha": "10260740f0d202b172dd1c6bf98a34bc5011574f",
        "filename": "src/psbt.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/src/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/src/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/psbt.cpp?ref=a6cb0b0c29d327d01aebb98b0504f317eb19c3dc",
        "patch": "@@ -214,6 +214,17 @@ bool PSBTInputSigned(const PSBTInput& input)\n     return !input.final_script_sig.empty() || !input.final_script_witness.IsNull();\n }\n \n+size_t CountPSBTUnsignedInputs(const PartiallySignedTransaction& psbt) {\n+    size_t count = 0;\n+    for (const auto& input : psbt.inputs) {\n+        if (!PSBTInputSigned(input)) {\n+            count++;\n+        }\n+    }\n+\n+    return count;\n+}\n+\n void UpdatePSBTOutput(const SigningProvider& provider, PartiallySignedTransaction& psbt, int index)\n {\n     const CTxOut& out = psbt.tx->vout.at(index);"
      },
      {
        "sha": "0a8ea2ea0b144ea308982963aabf6e5adcbed5c7",
        "filename": "src/psbt.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/src/psbt.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/src/psbt.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/psbt.h?ref=a6cb0b0c29d327d01aebb98b0504f317eb19c3dc",
        "patch": "@@ -579,6 +579,9 @@ bool PSBTInputSigned(const PSBTInput& input);\n /** Signs a PSBTInput, verifying that all provided data matches what is being signed. */\n bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction& psbt, int index, int sighash = SIGHASH_ALL, SignatureData* out_sigdata = nullptr, bool use_dummy = false);\n \n+/** Counts the unsigned inputs of a PSBT. */\n+size_t CountPSBTUnsignedInputs(const PartiallySignedTransaction& psbt);\n+\n /** Updates a PSBTOutput with information from provider.\n  *\n  * This fills in the redeem_script, witness_script, and hd_keypaths where possible."
      },
      {
        "sha": "70f1d2efd4825aba8f7d9c47b4f138f49979014f",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=a6cb0b0c29d327d01aebb98b0504f317eb19c3dc",
        "patch": "@@ -321,7 +321,7 @@ void BitcoinGUI::createActions()\n     signMessageAction->setStatusTip(tr(\"Sign messages with your Bitcoin addresses to prove you own them\"));\n     verifyMessageAction = new QAction(tr(\"&Verify message...\"), this);\n     verifyMessageAction->setStatusTip(tr(\"Verify messages to ensure they were signed with specified Bitcoin addresses\"));\n-    m_load_psbt_action = new QAction(tr(\"Load PSBT...\"), this);\n+    m_load_psbt_action = new QAction(tr(\"&Load PSBT from file...\"), this);\n     m_load_psbt_action->setStatusTip(tr(\"Load Partially Signed Bitcoin Transaction\"));\n \n     openRPCConsoleAction = new QAction(tr(\"Node window\"), this);"
      },
      {
        "sha": "c2e2f5035bde4de09d36c87eac76ba50b2be2c4e",
        "filename": "src/qt/forms/psbtoperationsdialog.ui",
        "status": "added",
        "additions": 148,
        "deletions": 0,
        "changes": 148,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/src/qt/forms/psbtoperationsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/src/qt/forms/psbtoperationsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/psbtoperationsdialog.ui?ref=a6cb0b0c29d327d01aebb98b0504f317eb19c3dc",
        "patch": "@@ -0,0 +1,148 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<ui version=\"4.0\">\n+ <class>PSBTOperationsDialog</class>\n+ <widget class=\"QDialog\" name=\"PSBTOperationsDialog\">\n+  <property name=\"geometry\">\n+   <rect>\n+    <x>0</x>\n+    <y>0</y>\n+    <width>585</width>\n+    <height>327</height>\n+   </rect>\n+  </property>\n+  <property name=\"windowTitle\">\n+   <string>Dialog</string>\n+  </property>\n+  <layout class=\"QVBoxLayout\" name=\"verticalLayout\">\n+   <property name=\"spacing\">\n+    <number>12</number>\n+   </property>\n+   <property name=\"sizeConstraint\">\n+    <enum>QLayout::SetDefaultConstraint</enum>\n+   </property>\n+   <property name=\"bottomMargin\">\n+    <number>12</number>\n+   </property>\n+   <item>\n+    <layout class=\"QVBoxLayout\" name=\"mainDialogLayout\">\n+     <property name=\"spacing\">\n+      <number>5</number>\n+     </property>\n+     <property name=\"topMargin\">\n+      <number>0</number>\n+     </property>\n+     <property name=\"bottomMargin\">\n+      <number>0</number>\n+     </property>\n+     <item>\n+      <widget class=\"QLabel\" name=\"statusBar\">\n+       <property name=\"font\">\n+        <font>\n+         <weight>75</weight>\n+         <bold>true</bold>\n+        </font>\n+       </property>\n+       <property name=\"autoFillBackground\">\n+        <bool>false</bool>\n+       </property>\n+       <property name=\"styleSheet\">\n+        <string notr=\"true\"/>\n+       </property>\n+       <property name=\"text\">\n+        <string/>\n+       </property>\n+      </widget>\n+     </item>\n+     <item>\n+      <widget class=\"QTextEdit\" name=\"transactionDescription\">\n+       <property name=\"undoRedoEnabled\">\n+        <bool>false</bool>\n+       </property>\n+       <property name=\"readOnly\">\n+        <bool>true</bool>\n+       </property>\n+      </widget>\n+     </item>\n+     <item>\n+      <layout class=\"QHBoxLayout\" name=\"buttonRowLayout\">\n+       <property name=\"spacing\">\n+        <number>5</number>\n+       </property>\n+       <item>\n+        <widget class=\"QPushButton\" name=\"signTransactionButton\">\n+         <property name=\"sizePolicy\">\n+          <sizepolicy hsizetype=\"Minimum\" vsizetype=\"Fixed\">\n+           <horstretch>0</horstretch>\n+           <verstretch>0</verstretch>\n+          </sizepolicy>\n+         </property>\n+         <property name=\"font\">\n+          <font>\n+           <weight>50</weight>\n+           <bold>false</bold>\n+          </font>\n+         </property>\n+         <property name=\"text\">\n+          <string>Sign Tx</string>\n+         </property>\n+         <property name=\"autoDefault\">\n+          <bool>true</bool>\n+         </property>\n+         <property name=\"default\">\n+          <bool>false</bool>\n+         </property>\n+         <property name=\"flat\">\n+          <bool>false</bool>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <widget class=\"QPushButton\" name=\"broadcastTransactionButton\">\n+         <property name=\"text\">\n+          <string>Broadcast Tx</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <spacer name=\"horizontalSpacer\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Horizontal</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>40</width>\n+           <height>20</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n+       <item>\n+        <widget class=\"QPushButton\" name=\"copyToClipboardButton\">\n+         <property name=\"text\">\n+          <string>Copy to Clipboard</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <widget class=\"QPushButton\" name=\"saveButton\">\n+         <property name=\"text\">\n+          <string>Save...</string>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <widget class=\"QPushButton\" name=\"closeButton\">\n+         <property name=\"text\">\n+          <string>Close</string>\n+         </property>\n+        </widget>\n+       </item>\n+      </layout>\n+     </item>\n+    </layout>\n+   </item>\n+  </layout>\n+ </widget>\n+ <resources/>\n+ <connections/>\n+</ui>"
      },
      {
        "sha": "58167d4bb45941902fac3549a9cce6cb51cdc69e",
        "filename": "src/qt/psbtoperationsdialog.cpp",
        "status": "added",
        "additions": 268,
        "deletions": 0,
        "changes": 268,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/src/qt/psbtoperationsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/src/qt/psbtoperationsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/psbtoperationsdialog.cpp?ref=a6cb0b0c29d327d01aebb98b0504f317eb19c3dc",
        "patch": "@@ -0,0 +1,268 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/psbtoperationsdialog.h>\n+\n+#include <core_io.h>\n+#include <interfaces/node.h>\n+#include <key_io.h>\n+#include <node/psbt.h>\n+#include <policy/policy.h>\n+#include <qt/bitcoinunits.h>\n+#include <qt/forms/ui_psbtoperationsdialog.h>\n+#include <qt/guiutil.h>\n+#include <qt/optionsmodel.h>\n+#include <util/strencodings.h>\n+\n+#include <iostream>\n+\n+\n+PSBTOperationsDialog::PSBTOperationsDialog(\n+    QWidget* parent, WalletModel* wallet_model, ClientModel* client_model) : QDialog(parent),\n+                                                                             m_ui(new Ui::PSBTOperationsDialog),\n+                                                                             m_wallet_model(wallet_model),\n+                                                                             m_client_model(client_model)\n+{\n+    m_ui->setupUi(this);\n+    setWindowTitle(\"PSBT Operations\");\n+\n+    connect(m_ui->signTransactionButton, &QPushButton::clicked, this, &PSBTOperationsDialog::signTransaction);\n+    connect(m_ui->broadcastTransactionButton, &QPushButton::clicked, this, &PSBTOperationsDialog::broadcastTransaction);\n+    connect(m_ui->copyToClipboardButton, &QPushButton::clicked, this, &PSBTOperationsDialog::copyToClipboard);\n+    connect(m_ui->saveButton, &QPushButton::clicked, this, &PSBTOperationsDialog::saveTransaction);\n+\n+    connect(m_ui->closeButton, &QPushButton::clicked, this, &PSBTOperationsDialog::close);\n+\n+    m_ui->signTransactionButton->setEnabled(false);\n+    m_ui->broadcastTransactionButton->setEnabled(false);\n+}\n+\n+PSBTOperationsDialog::~PSBTOperationsDialog()\n+{\n+    delete m_ui;\n+}\n+\n+void PSBTOperationsDialog::openWithPSBT(PartiallySignedTransaction psbtx)\n+{\n+    m_transaction_data = psbtx;\n+\n+    bool complete;\n+    size_t n_could_sign;\n+    FinalizePSBT(psbtx);  // Make sure all existing signatures are fully combined before checking for completeness.\n+    TransactionError err = m_wallet_model->wallet().fillPSBT(SIGHASH_ALL, false /* sign */, true /* bip32derivs */,  m_transaction_data, complete, &n_could_sign);\n+    if (err != TransactionError::OK) {\n+        showStatus(tr(\"Failed to load transaction: %1\")\n+            .arg(QString::fromStdString(TransactionErrorString(err).translated)), StatusLevel::ERR);\n+        return;\n+    }\n+\n+    m_ui->broadcastTransactionButton->setEnabled(complete);\n+    m_ui->signTransactionButton->setEnabled(!complete && !m_wallet_model->wallet().privateKeysDisabled() && n_could_sign > 0);\n+\n+    updateTransactionDisplay();\n+}\n+\n+void PSBTOperationsDialog::signTransaction()\n+{\n+    bool complete;\n+    size_t n_signed;\n+    TransactionError err = m_wallet_model->wallet().fillPSBT(SIGHASH_ALL, true /* sign */, true /* bip32derivs */, m_transaction_data, complete, &n_signed);\n+\n+    if (err != TransactionError::OK) {\n+        showStatus(tr(\"Failed to sign transaction: %1\")\n+            .arg(QString::fromStdString(TransactionErrorString(err).translated)), StatusLevel::ERR);\n+        return;\n+    }\n+\n+    updateTransactionDisplay();\n+\n+    if (!complete && n_signed < 1) {\n+        showStatus(tr(\"Could not sign any more inputs.\"), StatusLevel::WARN);\n+    } else if (!complete) {\n+        showStatus(tr(\"Signed %1 inputs, but more signatures are still required.\").arg(n_signed),\n+            StatusLevel::INFO);\n+    } else {\n+        showStatus(tr(\"Signed transaction successfully. Transaction is ready to broadcast.\"),\n+            StatusLevel::INFO);\n+        m_ui->broadcastTransactionButton->setEnabled(true);\n+    }\n+}\n+\n+void PSBTOperationsDialog::broadcastTransaction()\n+{\n+    CMutableTransaction mtx;\n+    if (!FinalizeAndExtractPSBT(m_transaction_data, mtx)) {\n+        // This is never expected to fail unless we were given a malformed PSBT\n+        // (e.g. with an invalid signature.)\n+        showStatus(tr(\"Unknown error processing transaction.\"), StatusLevel::ERR);\n+        return;\n+    }\n+\n+    CTransactionRef tx = MakeTransactionRef(mtx);\n+    std::string err_string;\n+    TransactionError error = BroadcastTransaction(\n+        *m_client_model->node().context(), tx, err_string, DEFAULT_MAX_RAW_TX_FEE_RATE.GetFeePerK(), /* relay */ true, /* await_callback */ false);\n+\n+    if (error == TransactionError::OK) {\n+        showStatus(tr(\"Transaction broadcast successfully! Transaction ID: %1\")\n+            .arg(QString::fromStdString(tx->GetHash().GetHex())), StatusLevel::INFO);\n+    } else {\n+        showStatus(tr(\"Transaction broadcast failed: %1\")\n+            .arg(QString::fromStdString(TransactionErrorString(error).translated)), StatusLevel::ERR);\n+    }\n+}\n+\n+void PSBTOperationsDialog::copyToClipboard() {\n+    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n+    ssTx << m_transaction_data;\n+    GUIUtil::setClipboard(EncodeBase64(ssTx.str()).c_str());\n+    showStatus(tr(\"PSBT copied to clipboard.\"), StatusLevel::INFO);\n+}\n+\n+void PSBTOperationsDialog::saveTransaction() {\n+    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n+    ssTx << m_transaction_data;\n+\n+    QString selected_filter;\n+    QString filename_suggestion = \"\";\n+    bool first = true;\n+    for (const CTxOut& out : m_transaction_data.tx->vout) {\n+        if (!first) {\n+            filename_suggestion.append(\"-\");\n+        }\n+        CTxDestination address;\n+        ExtractDestination(out.scriptPubKey, address);\n+        QString amount = BitcoinUnits::format(m_wallet_model->getOptionsModel()->getDisplayUnit(), out.nValue);\n+        QString address_str = QString::fromStdString(EncodeDestination(address));\n+        filename_suggestion.append(address_str + \"-\" + amount);\n+        first = false;\n+    }\n+    filename_suggestion.append(\".psbt\");\n+    QString filename = GUIUtil::getSaveFileName(this,\n+        tr(\"Save Transaction Data\"), filename_suggestion,\n+        tr(\"Partially Signed Transaction (Binary) (*.psbt)\"), &selected_filter);\n+    if (filename.isEmpty()) {\n+        return;\n+    }\n+    std::ofstream out(filename.toLocal8Bit().data());\n+    out << ssTx.str();\n+    out.close();\n+    showStatus(tr(\"PSBT saved to disk.\"), StatusLevel::INFO);\n+}\n+\n+void PSBTOperationsDialog::updateTransactionDisplay() {\n+    m_ui->transactionDescription->setText(QString::fromStdString(renderTransaction(m_transaction_data)));\n+    showTransactionStatus(m_transaction_data);\n+}\n+\n+std::string PSBTOperationsDialog::renderTransaction(const PartiallySignedTransaction &psbtx)\n+{\n+    QString tx_description = \"\";\n+    CAmount totalAmount = 0;\n+    for (const CTxOut& out : psbtx.tx->vout) {\n+        CTxDestination address;\n+        ExtractDestination(out.scriptPubKey, address);\n+        totalAmount += out.nValue;\n+        tx_description.append(tr(\" * Sends %1 to %2\")\n+            .arg(BitcoinUnits::formatWithUnit(BitcoinUnits::BTC, out.nValue))\n+            .arg(QString::fromStdString(EncodeDestination(address))));\n+        tx_description.append(\"<br>\");\n+    }\n+\n+    PSBTAnalysis analysis = AnalyzePSBT(psbtx);\n+    tx_description.append(\" * \");\n+    if (!*analysis.fee) {\n+        // This happens if the transaction is missing input UTXO information.\n+        tx_description.append(tr(\"Unable to calculate transaction fee or total transaction amount.\"));\n+    } else {\n+        tx_description.append(tr(\"Pays transaction fee: \"));\n+        tx_description.append(BitcoinUnits::formatWithUnit(BitcoinUnits::BTC, *analysis.fee));\n+\n+        // add total amount in all subdivision units\n+        tx_description.append(\"<hr />\");\n+        QStringList alternativeUnits;\n+        for (const BitcoinUnits::Unit u : BitcoinUnits::availableUnits())\n+        {\n+            if(u != m_client_model->getOptionsModel()->getDisplayUnit()) {\n+                alternativeUnits.append(BitcoinUnits::formatHtmlWithUnit(u, totalAmount));\n+            }\n+        }\n+        tx_description.append(QString(\"<b>%1</b>: <b>%2</b>\").arg(tr(\"Total Amount\"))\n+            .arg(BitcoinUnits::formatHtmlWithUnit(m_client_model->getOptionsModel()->getDisplayUnit(), totalAmount)));\n+        tx_description.append(QString(\"<br /><span style='font-size:10pt; font-weight:normal;'>(=%1)</span>\")\n+            .arg(alternativeUnits.join(\" \" + tr(\"or\") + \" \")));\n+    }\n+\n+    size_t num_unsigned = CountPSBTUnsignedInputs(psbtx);\n+    if (num_unsigned > 0) {\n+        tx_description.append(\"<br><br>\");\n+        tx_description.append(tr(\"Transaction has %1 unsigned inputs.\").arg(QString::number(num_unsigned)));\n+    }\n+\n+    return tx_description.toStdString();\n+}\n+\n+void PSBTOperationsDialog::showStatus(const QString &msg, StatusLevel level) {\n+    m_ui->statusBar->setText(msg);\n+    switch (level) {\n+        case StatusLevel::INFO: {\n+            m_ui->statusBar->setStyleSheet(\"QLabel { background-color : lightgreen }\");\n+            break;\n+        }\n+        case StatusLevel::WARN: {\n+            m_ui->statusBar->setStyleSheet(\"QLabel { background-color : orange }\");\n+            break;\n+        }\n+        case StatusLevel::ERR: {\n+            m_ui->statusBar->setStyleSheet(\"QLabel { background-color : red }\");\n+            break;\n+        }\n+    }\n+    m_ui->statusBar->show();\n+}\n+\n+size_t PSBTOperationsDialog::couldSignInputs(const PartiallySignedTransaction &psbtx) {\n+    size_t n_signed;\n+    bool complete;\n+    TransactionError err = m_wallet_model->wallet().fillPSBT(SIGHASH_ALL, false /* sign */, false /* bip32derivs */, m_transaction_data, complete, &n_signed);\n+\n+    if (err != TransactionError::OK) {\n+        return 0;\n+    }\n+    return n_signed;\n+}\n+\n+void PSBTOperationsDialog::showTransactionStatus(const PartiallySignedTransaction &psbtx) {\n+    PSBTAnalysis analysis = AnalyzePSBT(psbtx);\n+    size_t n_could_sign = couldSignInputs(psbtx);\n+\n+    switch (analysis.next) {\n+        case PSBTRole::UPDATER: {\n+            showStatus(tr(\"Transaction is missing some information about inputs.\"), StatusLevel::WARN);\n+            break;\n+        }\n+        case PSBTRole::SIGNER: {\n+            QString need_sig_text = tr(\"Transaction still needs signature(s).\");\n+            StatusLevel level = StatusLevel::INFO;\n+            if (m_wallet_model->wallet().privateKeysDisabled()) {\n+                need_sig_text += \" \" + tr(\"(But this wallet cannot sign transactions.)\");\n+                level = StatusLevel::WARN;\n+            } else if (n_could_sign < 1) {\n+                need_sig_text += \" \" + tr(\"(But this wallet does not have the right keys.)\"); // XXX wording\n+                level = StatusLevel::WARN;\n+            }\n+            showStatus(need_sig_text, level);\n+            break;\n+        }\n+        case PSBTRole::FINALIZER:\n+        case PSBTRole::EXTRACTOR: {\n+            showStatus(tr(\"Transaction is fully signed and ready for broadcast.\"), StatusLevel::INFO);\n+            break;\n+        }\n+        default: {\n+            showStatus(tr(\"Transaction status is unknown.\"), StatusLevel::ERR);\n+            break;\n+        }\n+    }\n+}"
      },
      {
        "sha": "f37bdbe39a3cc13252045cc04df638d7d38c1b48",
        "filename": "src/qt/psbtoperationsdialog.h",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/src/qt/psbtoperationsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/src/qt/psbtoperationsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/psbtoperationsdialog.h?ref=a6cb0b0c29d327d01aebb98b0504f317eb19c3dc",
        "patch": "@@ -0,0 +1,54 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_QT_PSBTOPERATIONSDIALOG_H\n+#define BITCOIN_QT_PSBTOPERATIONSDIALOG_H\n+\n+#include <QDialog>\n+\n+#include <psbt.h>\n+#include <qt/clientmodel.h>\n+#include <qt/walletmodel.h>\n+\n+namespace Ui {\n+class PSBTOperationsDialog;\n+}\n+\n+/** Dialog showing transaction details. */\n+class PSBTOperationsDialog : public QDialog\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PSBTOperationsDialog(QWidget* parent, WalletModel* walletModel, ClientModel* clientModel);\n+    ~PSBTOperationsDialog();\n+\n+    void openWithPSBT(PartiallySignedTransaction psbtx);\n+\n+public Q_SLOTS:\n+    void signTransaction();\n+    void broadcastTransaction();\n+    void copyToClipboard();\n+    void saveTransaction();\n+\n+private:\n+    Ui::PSBTOperationsDialog* m_ui;\n+    PartiallySignedTransaction m_transaction_data;\n+    WalletModel* m_wallet_model;\n+    ClientModel* m_client_model;\n+\n+    enum class StatusLevel {\n+        INFO,\n+        WARN,\n+        ERR\n+    };\n+\n+    size_t couldSignInputs(const PartiallySignedTransaction &psbtx);\n+    void updateTransactionDisplay();\n+    std::string renderTransaction(const PartiallySignedTransaction &psbtx);\n+    void showStatus(const QString &msg, StatusLevel level);\n+    void showTransactionStatus(const PartiallySignedTransaction &psbtx);\n+};\n+\n+#endif // BITCOIN_QT_PSBTOPERATIONSDIALOG_H"
      },
      {
        "sha": "d4fa60126a04f1e25e8b28ffc4debeca23f1c7cc",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 52,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=a6cb0b0c29d327d01aebb98b0504f317eb19c3dc",
        "patch": "@@ -11,6 +11,7 @@\n #include <qt/askpassphrasedialog.h>\n #include <qt/clientmodel.h>\n #include <qt/guiutil.h>\n+#include <qt/psbtoperationsdialog.h>\n #include <qt/optionsmodel.h>\n #include <qt/overviewpage.h>\n #include <qt/platformstyle.h>\n@@ -224,58 +225,10 @@ void WalletView::gotoLoadPSBT()\n         return;\n     }\n \n-    CMutableTransaction mtx;\n-    bool complete = false;\n-    PSBTAnalysis analysis = AnalyzePSBT(psbtx);\n-    QMessageBox msgBox;\n-    msgBox.setText(\"PSBT\");\n-    switch (analysis.next) {\n-    case PSBTRole::CREATOR:\n-    case PSBTRole::UPDATER:\n-        msgBox.setInformativeText(\"PSBT is incomplete. Copy to clipboard for manual inspection?\");\n-        break;\n-    case PSBTRole::SIGNER:\n-        msgBox.setInformativeText(\"Transaction needs more signatures. Copy to clipboard?\");\n-        break;\n-    case PSBTRole::FINALIZER:\n-    case PSBTRole::EXTRACTOR:\n-        complete = FinalizeAndExtractPSBT(psbtx, mtx);\n-        if (complete) {\n-            msgBox.setInformativeText(tr(\"Would you like to send this transaction?\"));\n-        } else {\n-            // The analyzer missed something, e.g. if there are final_scriptSig/final_scriptWitness\n-            // but with invalid signatures.\n-            msgBox.setInformativeText(tr(\"There was an unexpected problem processing the PSBT. Copy to clipboard for manual inspection?\"));\n-        }\n-    }\n-\n-    msgBox.setStandardButtons(QMessageBox::Yes | QMessageBox::Cancel);\n-    switch (msgBox.exec()) {\n-    case QMessageBox::Yes: {\n-        if (complete) {\n-            std::string err_string;\n-            CTransactionRef tx = MakeTransactionRef(mtx);\n-\n-            TransactionError result = BroadcastTransaction(*clientModel->node().context(), tx, err_string, DEFAULT_MAX_RAW_TX_FEE_RATE.GetFeePerK(), /* relay */ true, /* wait_callback */ false);\n-            if (result == TransactionError::OK) {\n-                Q_EMIT message(tr(\"Success\"), tr(\"Broadcasted transaction successfully.\"), CClientUIInterface::MSG_INFORMATION | CClientUIInterface::MODAL);\n-            } else {\n-                Q_EMIT message(tr(\"Error\"), QString::fromStdString(err_string), CClientUIInterface::MSG_ERROR);\n-            }\n-        } else {\n-            // Serialize the PSBT\n-            CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n-            ssTx << psbtx;\n-            GUIUtil::setClipboard(EncodeBase64(ssTx.str()).c_str());\n-            Q_EMIT message(tr(\"PSBT copied\"), \"Copied to clipboard\", CClientUIInterface::MSG_INFORMATION);\n-            return;\n-        }\n-    }\n-    case QMessageBox::Cancel:\n-        break;\n-    default:\n-        assert(false);\n-    }\n+    PSBTOperationsDialog* dlg = new PSBTOperationsDialog(this, walletModel, clientModel);\n+    dlg->openWithPSBT(psbtx);\n+    dlg->setAttribute(Qt::WA_DeleteOnClose);\n+    dlg->exec();\n }\n \n bool WalletView::handlePaymentRequest(const SendCoinsRecipient& recipient)"
      }
    ]
  },
  {
    "sha": "11a0ffb29d1b4dcc55c8826873f340ab4196af21",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMWEwZmZiMjlkMWI0ZGNjNTVjODgyNjg3M2YzNDBhYjQxOTZhZjIx",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2020-01-31T23:59:57Z"
      },
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2020-06-19T09:20:04Z"
      },
      "message": "[gui] Load PSBT from clipboard",
      "tree": {
        "sha": "539263ebb90413fa6aeea3f2c059104b6a92e2b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/539263ebb90413fa6aeea3f2c059104b6a92e2b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11a0ffb29d1b4dcc55c8826873f340ab4196af21",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11a0ffb29d1b4dcc55c8826873f340ab4196af21",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/11a0ffb29d1b4dcc55c8826873f340ab4196af21",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11a0ffb29d1b4dcc55c8826873f340ab4196af21/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6cb0b0c29d327d01aebb98b0504f317eb19c3dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6cb0b0c29d327d01aebb98b0504f317eb19c3dc"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 38,
      "deletions": 19
    },
    "files": [
      {
        "sha": "b4182e85242d44685e33ae5fafe41771db0da8c8",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11a0ffb29d1b4dcc55c8826873f340ab4196af21/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11a0ffb29d1b4dcc55c8826873f340ab4196af21/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=11a0ffb29d1b4dcc55c8826873f340ab4196af21",
        "patch": "@@ -323,6 +323,8 @@ void BitcoinGUI::createActions()\n     verifyMessageAction->setStatusTip(tr(\"Verify messages to ensure they were signed with specified Bitcoin addresses\"));\n     m_load_psbt_action = new QAction(tr(\"&Load PSBT from file...\"), this);\n     m_load_psbt_action->setStatusTip(tr(\"Load Partially Signed Bitcoin Transaction\"));\n+    m_load_psbt_clipboard_action = new QAction(tr(\"Load PSBT from clipboard...\"), this);\n+    m_load_psbt_clipboard_action->setStatusTip(tr(\"Load Partially Signed Bitcoin Transaction from clipboard\"));\n \n     openRPCConsoleAction = new QAction(tr(\"Node window\"), this);\n     openRPCConsoleAction->setStatusTip(tr(\"Open node debugging and diagnostic console\"));\n@@ -381,6 +383,7 @@ void BitcoinGUI::createActions()\n         connect(signMessageAction, &QAction::triggered, [this]{ showNormalIfMinimized(); });\n         connect(signMessageAction, &QAction::triggered, [this]{ gotoSignMessageTab(); });\n         connect(m_load_psbt_action, &QAction::triggered, [this]{ gotoLoadPSBT(); });\n+        connect(m_load_psbt_clipboard_action, &QAction::triggered, [this]{ gotoLoadPSBT(true); });\n         connect(verifyMessageAction, &QAction::triggered, [this]{ showNormalIfMinimized(); });\n         connect(verifyMessageAction, &QAction::triggered, [this]{ gotoVerifyMessageTab(); });\n         connect(usedSendingAddressesAction, &QAction::triggered, walletFrame, &WalletFrame::usedSendingAddresses);\n@@ -459,6 +462,7 @@ void BitcoinGUI::createMenuBar()\n         file->addAction(signMessageAction);\n         file->addAction(verifyMessageAction);\n         file->addAction(m_load_psbt_action);\n+        file->addAction(m_load_psbt_clipboard_action);\n         file->addSeparator();\n     }\n     file->addAction(quitAction);\n@@ -878,9 +882,9 @@ void BitcoinGUI::gotoVerifyMessageTab(QString addr)\n {\n     if (walletFrame) walletFrame->gotoVerifyMessageTab(addr);\n }\n-void BitcoinGUI::gotoLoadPSBT()\n+void BitcoinGUI::gotoLoadPSBT(bool from_clipboard)\n {\n-    if (walletFrame) walletFrame->gotoLoadPSBT();\n+    if (walletFrame) walletFrame->gotoLoadPSBT(from_clipboard);\n }\n #endif // ENABLE_WALLET\n "
      },
      {
        "sha": "697e83e77218d987cf077c8d51e028cd12fee81a",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11a0ffb29d1b4dcc55c8826873f340ab4196af21/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11a0ffb29d1b4dcc55c8826873f340ab4196af21/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=11a0ffb29d1b4dcc55c8826873f340ab4196af21",
        "patch": "@@ -139,6 +139,7 @@ class BitcoinGUI : public QMainWindow\n     QAction* signMessageAction = nullptr;\n     QAction* verifyMessageAction = nullptr;\n     QAction* m_load_psbt_action = nullptr;\n+    QAction* m_load_psbt_clipboard_action = nullptr;\n     QAction* aboutAction = nullptr;\n     QAction* receiveCoinsAction = nullptr;\n     QAction* receiveCoinsMenuAction = nullptr;\n@@ -278,8 +279,8 @@ public Q_SLOTS:\n     void gotoSignMessageTab(QString addr = \"\");\n     /** Show Sign/Verify Message dialog and switch to verify message tab */\n     void gotoVerifyMessageTab(QString addr = \"\");\n-    /** Show load Partially Signed Bitcoin Transaction dialog */\n-    void gotoLoadPSBT();\n+    /** Load Partially Signed Bitcoin Transaction from file or clipboard */\n+    void gotoLoadPSBT(bool from_clipboard = false);\n \n     /** Show open dialog */\n     void openClicked();"
      },
      {
        "sha": "ec56f2755fc3a16db50ed74945d48c90b5801a7e",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11a0ffb29d1b4dcc55c8826873f340ab4196af21/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11a0ffb29d1b4dcc55c8826873f340ab4196af21/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=11a0ffb29d1b4dcc55c8826873f340ab4196af21",
        "patch": "@@ -165,11 +165,11 @@ void WalletFrame::gotoVerifyMessageTab(QString addr)\n         walletView->gotoVerifyMessageTab(addr);\n }\n \n-void WalletFrame::gotoLoadPSBT()\n+void WalletFrame::gotoLoadPSBT(bool from_clipboard)\n {\n     WalletView *walletView = currentWalletView();\n     if (walletView) {\n-        walletView->gotoLoadPSBT();\n+        walletView->gotoLoadPSBT(from_clipboard);\n     }\n }\n "
      },
      {
        "sha": "2b5f2634688a689aa3f376c8b7715a9745326240",
        "filename": "src/qt/walletframe.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11a0ffb29d1b4dcc55c8826873f340ab4196af21/src/qt/walletframe.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11a0ffb29d1b4dcc55c8826873f340ab4196af21/src/qt/walletframe.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.h?ref=11a0ffb29d1b4dcc55c8826873f340ab4196af21",
        "patch": "@@ -79,7 +79,7 @@ public Q_SLOTS:\n     void gotoVerifyMessageTab(QString addr = \"\");\n \n     /** Load Partially Signed Bitcoin Transaction */\n-    void gotoLoadPSBT();\n+    void gotoLoadPSBT(bool from_clipboard = false);\n \n     /** Encrypt the wallet */\n     void encryptWallet(bool status);"
      },
      {
        "sha": "a3f303aea618402108b5125a17c0ef461e7c27dc",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 11,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11a0ffb29d1b4dcc55c8826873f340ab4196af21/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11a0ffb29d1b4dcc55c8826873f340ab4196af21/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=11a0ffb29d1b4dcc55c8826873f340ab4196af21",
        "patch": "@@ -28,6 +28,8 @@\n \n #include <QAction>\n #include <QActionGroup>\n+#include <QApplication>\n+#include <QClipboard>\n #include <QFileDialog>\n #include <QHBoxLayout>\n #include <QProgressDialog>\n@@ -205,23 +207,35 @@ void WalletView::gotoVerifyMessageTab(QString addr)\n         signVerifyMessageDialog->setAddress_VM(addr);\n }\n \n-void WalletView::gotoLoadPSBT()\n+void WalletView::gotoLoadPSBT(bool from_clipboard)\n {\n-    QString filename = GUIUtil::getOpenFileName(this,\n-        tr(\"Load Transaction Data\"), QString(),\n-        tr(\"Partially Signed Transaction (*.psbt)\"), nullptr);\n-    if (filename.isEmpty()) return;\n-    if (GetFileSize(filename.toLocal8Bit().data(), MAX_FILE_SIZE_PSBT) == MAX_FILE_SIZE_PSBT) {\n-        Q_EMIT message(tr(\"Error\"), tr(\"PSBT file must be smaller than 100 MiB\"), CClientUIInterface::MSG_ERROR);\n-        return;\n+    std::string data;\n+\n+    if (from_clipboard) {\n+        std::string raw = QApplication::clipboard()->text().toStdString();\n+        bool invalid;\n+        data = DecodeBase64(raw, &invalid);\n+        if (invalid) {\n+            Q_EMIT message(tr(\"Error\"), tr(\"Unable to decode PSBT from clipboard (invalid base64)\"), CClientUIInterface::MSG_ERROR);\n+            return;\n+        }\n+    } else {\n+        QString filename = GUIUtil::getOpenFileName(this,\n+            tr(\"Load Transaction Data\"), QString(),\n+            tr(\"Partially Signed Transaction (*.psbt)\"), nullptr);\n+        if (filename.isEmpty()) return;\n+        if (GetFileSize(filename.toLocal8Bit().data(), MAX_FILE_SIZE_PSBT) == MAX_FILE_SIZE_PSBT) {\n+            Q_EMIT message(tr(\"Error\"), tr(\"PSBT file must be smaller than 100 MiB\"), CClientUIInterface::MSG_ERROR);\n+            return;\n+        }\n+        std::ifstream in(filename.toLocal8Bit().data(), std::ios::binary);\n+        data = std::string(std::istreambuf_iterator<char>{in}, {});\n     }\n-    std::ifstream in(filename.toLocal8Bit().data(), std::ios::binary);\n-    std::string data(std::istreambuf_iterator<char>{in}, {});\n \n     std::string error;\n     PartiallySignedTransaction psbtx;\n     if (!DecodeRawPSBT(psbtx, data, error)) {\n-        Q_EMIT message(tr(\"Error\"), tr(\"Unable to decode PSBT file\") + \"\\n\" + QString::fromStdString(error), CClientUIInterface::MSG_ERROR);\n+        Q_EMIT message(tr(\"Error\"), tr(\"Unable to decode PSBT\") + \"\\n\" + QString::fromStdString(error), CClientUIInterface::MSG_ERROR);\n         return;\n     }\n "
      },
      {
        "sha": "f186554758fbbb2d4a3436eb289302e7d169880d",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11a0ffb29d1b4dcc55c8826873f340ab4196af21/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11a0ffb29d1b4dcc55c8826873f340ab4196af21/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=11a0ffb29d1b4dcc55c8826873f340ab4196af21",
        "patch": "@@ -84,7 +84,7 @@ public Q_SLOTS:\n     /** Show Sign/Verify Message dialog and switch to verify message tab */\n     void gotoVerifyMessageTab(QString addr = \"\");\n     /** Load Partially Signed Bitcoin Transaction */\n-    void gotoLoadPSBT();\n+    void gotoLoadPSBT(bool from_clipboard = false);\n \n     /** Show incoming transaction notification for new transactions.\n "
      }
    ]
  },
  {
    "sha": "931dd4760855e036c176a23ec2de367c460e4243",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MzFkZDQ3NjA4NTVlMDM2YzE3NmEyM2VjMmRlMzY3YzQ2MGU0MjQz",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2020-05-29T08:21:08Z"
      },
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2020-06-19T09:20:04Z"
      },
      "message": "Make lint-spelling.py happy",
      "tree": {
        "sha": "174da668e954ddd28e7d543d57ab232c0d058d13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/174da668e954ddd28e7d543d57ab232c0d058d13"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/931dd4760855e036c176a23ec2de367c460e4243",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/931dd4760855e036c176a23ec2de367c460e4243",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/931dd4760855e036c176a23ec2de367c460e4243",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/931dd4760855e036c176a23ec2de367c460e4243/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "11a0ffb29d1b4dcc55c8826873f340ab4196af21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11a0ffb29d1b4dcc55c8826873f340ab4196af21",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/11a0ffb29d1b4dcc55c8826873f340ab4196af21"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "34f54325b305a4830bc27c8ab7149d571718c816",
        "filename": "test/lint/lint-spelling.ignore-words.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/931dd4760855e036c176a23ec2de367c460e4243/test/lint/lint-spelling.ignore-words.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/931dd4760855e036c176a23ec2de367c460e4243/test/lint/lint-spelling.ignore-words.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-spelling.ignore-words.txt?ref=931dd4760855e036c176a23ec2de367c460e4243",
        "patch": "@@ -14,3 +14,4 @@ setban\n hist\n ser\n unselect\n+lowercased"
      }
    ]
  }
]