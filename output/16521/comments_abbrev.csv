DrahtBot,2019-08-01 19:48:42,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-517431390,517431390,
MarcoFalke,2019-08-02 13:29:55,"A few tests need to be updated, since the default is no longer an absolute value of 0.01, but a fee rate of 0.01 BTC/kB. Generally txs are less than 1kB, so the absurd high-fee will kick in earlier.",https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-517701223,517701223,
promag,2019-08-02 14:04:59,"Concept ACK.\n\n`AcceptToMemoryPool` could be changed to receive `absurd_fee_rate` instead? Then computing the transaction fee could be moved there (reducing duplicate code) and `DEFAULT_MAX_FEE_RATE` could be moved to validation.h.\n\nShould backport this?",https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-517713353,517713353,
MarcoFalke,2019-08-02 15:25:08,"@promag The fee check has nothing to do with validation, so the default value should not live in validation. See also "" [WIP] Remove nAbsurdFee fee from AcceptToMemoryPool #15810 "" by @jnewbery ",https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-517742628,517742628,
MarcoFalke,2019-08-02 15:27:23,"Also, I'd rather not change validation in a bugfix for an rpc.",https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-517743517,517743517,
promag,2019-08-02 15:31:41,"@MarcoFalke sorry for not being clear on my comment, I wasn't suggesting to do that change here, hence the backport question.\n\nThanks for referencing #15810.",https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-517745098,517745098,
MarcoFalke,2019-08-02 15:34:27,"This was introduced here: https://github.com/bitcoin/bitcoin/issues/16382#issuecomment-512040082, so no it does not need backport.",https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-517746093,517746093,
MarcoFalke,2019-08-05 19:28:38,ACK 7335bd33aec9105811755921bf14463975c392d7,https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-518367200,518367200,
remagpie,2019-08-06 02:37:01,"One of the Travis jobs has failed by timeout.\nI have no idea why it failed though.\nShould I investigate about it?",https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-518473701,518473701,
Sjors,2019-08-06 12:26:06,"I restarted Travis for you.\n\nACK 7335bd3, though I suggest having the RPC code catch `absurdly-high-fee` from validation and change it to `absurdly-high-fee-rate`.\n\nThe rename from `DEFAULT_MAX_RAW_TX_FEE` to `DEFAULT_MAX_RAW_TX_FEE_RATE ` adds a much needed clarification. It's less easy to confuse with `DEFAULT_TRANSACTION_MAXFEE` (`-maxtxfee`).\n\nWe're still in a bit of weird situatio",https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-518647069,518647069,
MarcoFalke,2019-08-06 14:21:33,cc @kallewoof ,https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-518690792,518690792,
remagpie,2019-08-07 13:56:14,"@Sjors I agree with the rationale behind your suggestion, but I can't think of a neat way of actually implementing it.\nI prefer leaving it as is, but I'm open to suggestion if there's any good idea for the implementation.",https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-519108883,519108883,
MarcoFalke,2019-08-12 18:47:47,"ACK 49b1f4811735f523571f3e99abd58b61cd1ac3e8\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK 49b1f4811735f523571f3e99abd58b61cd1ac3e8\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUh4Hgv+KIUo919Iwy0K/MPxGM6EE+WdBPrO/cqSixufYn5kMZ5+goPcBAJ8v5",https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-520548472,520548472,
MarcoFalke,2019-09-16 19:17:06,re-run ci,https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-531918734,531918734,
remagpie,2019-09-17 02:08:38,I couldn't reproduce the failing test on my machine. Is it CI's problem?,https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-532027386,532027386,
laanwj,2019-09-18 14:47:38,ACK 2dfd6834ef8737e16e4b96df0c459f30a0721d6c (ACKs by Sjors and MarcoFalke above for trivially different code),https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-532719185,532719185,
MarcoFalke,2019-09-18 18:36:11,"post-merge re-ACK 2dfd6834ef8737e16e4b96df0c459f30a0721d6c (only change is style nit)\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\npost-merge re-ACK 2dfd6834ef8737e16e4b96df0c459f30a0721d6c (only change is style nit)\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlw",https://github.com/bitcoin/bitcoin/pull/16521#issuecomment-532812218,532812218,
MarcoFalke,2019-08-01 17:54:48,"Can the type be changed as well?\n\n```suggestion\nconst static CFeeRate DEFAULT_MAX_RAW_TX_FEE_RATE{COIN / 10};\n```",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r309823127,309823127,src/rpc/rawtransaction.cpp
MarcoFalke,2019-08-01 17:56:13,"```suggestion\n    CFeeRate max_raw_tx_fee_rate{DEFAULT_MAX_RAW_TX_FEE_RATE};\n```",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r309823736,309823736,src/rpc/rawtransaction.cpp
MarcoFalke,2019-08-01 17:57:06,Why is this test change needed?,https://github.com/bitcoin/bitcoin/pull/16521#discussion_r309824140,309824140,test/functional/rpc_rawtransaction.py
MarcoFalke,2019-08-01 17:57:19,Same here,https://github.com/bitcoin/bitcoin/pull/16521#discussion_r309824234,309824234,test/functional/rpc_rawtransaction.py
remagpie,2019-08-01 19:00:59,"`CFeeRate` can't be `constexpr` since it doesn't have `constexpr` constructor.\nWe can change it to `const` though.",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r309850844,309850844,src/rpc/rawtransaction.cpp
remagpie,2019-08-01 19:02:49,This didn't have to be changed. I'll revert this line.,https://github.com/bitcoin/bitcoin/pull/16521#discussion_r309851498,309851498,test/functional/rpc_rawtransaction.py
remagpie,2019-08-01 19:04:31,"This line is testing if the RPC call succeeds if appropriate `maxfeerate` was provided.\nSince the amount of fee attached to the transaction was changed, `maxfeerate` should be increased too.",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r309852105,309852105,test/functional/rpc_rawtransaction.py
remagpie,2019-08-01 19:16:03,Fixed.,https://github.com/bitcoin/bitcoin/pull/16521#discussion_r309856227,309856227,src/rpc/rawtransaction.cpp
MarcoFalke,2019-08-01 19:37:22,"Yeah,`static const` is more than enough for our purposes",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r309863891,309863891,src/rpc/rawtransaction.cpp
MarcoFalke,2019-08-01 19:38:29,Why is the test changed at all?,https://github.com/bitcoin/bitcoin/pull/16521#discussion_r309864295,309864295,test/functional/rpc_rawtransaction.py
remagpie,2019-08-02 02:52:46,"Let me explain it a bit in detail.\n\nI wanted to test if a transaction with sufficiently high fee rate gets rejected if no `maxfeerate` was specified.\nI could've created a new transaction with a high fee and run test with it, but I thought it would be nice if I can reuse the existing code so that the change becomes minimal.\nThe existing `rawTx`'s fee was too low for that, but there should b",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r309965616,309965616,test/functional/rpc_rawtransaction.py
MarcoFalke,2019-08-02 12:11:26,"> I wanted to test if a transaction with sufficiently high fee rate gets rejected if no maxfeerate was specified.\n\nThis is tested in other functional tests already. (I presume you can find them by removing the failure in the source code, re-compile and re-run the tests)",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r310103105,310103105,test/functional/rpc_rawtransaction.py
remagpie,2019-08-02 12:49:14,"I changed my code as following, but couldn't find any failing test. Could you point the exact test you're referring to?\n```diff\n+ CFeeRate max_raw_tx_fee_rate{DEFAULT_MAX_RAW_TX_FEE_RATE * 1000000};\n- CFeeRate max_raw_tx_fee_rate{DEFAULT_MAX_RAW_TX_FEE_RATE};\n```",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r310115310,310115310,test/functional/rpc_rawtransaction.py
MarcoFalke,2019-08-02 13:21:35,You might be right. Going to take a look... :eyes: ,https://github.com/bitcoin/bitcoin/pull/16521#discussion_r310127954,310127954,test/functional/rpc_rawtransaction.py
MarcoFalke,2019-08-02 13:26:54,"You are right. Sorry, you can keep your changes as they are.",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r310130362,310130362,test/functional/rpc_rawtransaction.py
MarcoFalke,2019-08-02 13:27:58,@Remagpie Mind to address this? I think changing the type makes it harder to get wrong again in the code in the future.,https://github.com/bitcoin/bitcoin/pull/16521#discussion_r310130772,310130772,src/rpc/rawtransaction.cpp
remagpie,2019-08-03 02:23:00,"Sorry for the late response. I think there's no problem if it's okay to use `static const` here.\nI'll fix this.",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r310335498,310335498,src/rpc/rawtransaction.cpp
MarcoFalke,2019-08-05 17:37:11,Couldn't you call `GetVirtualTransactionSize` instead of copy-pasting the constants here?,https://github.com/bitcoin/bitcoin/pull/16521#discussion_r310714672,310714672,src/rpc/rawtransaction.cpp
MarcoFalke,2019-08-05 17:37:40,Same,https://github.com/bitcoin/bitcoin/pull/16521#discussion_r310714842,310714842,src/rpc/rawtransaction.cpp
MarcoFalke,2019-08-05 17:38:25,"Please use name arguments for unnamed integer values. Also, this commit needs to be squashed into the earlier one (the one where the tests start to fail)",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r310715127,310715127,test/functional/feature_segwit.py
MarcoFalke,2019-08-05 17:38:35,Same,https://github.com/bitcoin/bitcoin/pull/16521#discussion_r310715182,310715182,test/functional/wallet_basic.py
remagpie,2019-08-05 18:12:49,It seems it's possible. I'll replace it.,https://github.com/bitcoin/bitcoin/pull/16521#discussion_r310728569,310728569,src/rpc/rawtransaction.cpp
remagpie,2019-08-05 18:35:50,"Most of the other test code using `sendrawtransaction` doesn't use named parameter for `maxfeerate`.\nDo you have any reason for using different convention here?",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r310737499,310737499,test/functional/feature_segwit.py
MarcoFalke,2019-08-05 18:38:33,Up to you. Just pick what you prefer.,https://github.com/bitcoin/bitcoin/pull/16521#discussion_r310738513,310738513,test/functional/feature_segwit.py
remagpie,2019-08-05 19:17:29,"Squashed, and didn't change to a named argument.",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r310752925,310752925,test/functional/feature_segwit.py
kallewoof,2019-08-07 08:33:14,"This tests the default, but removes the test for when a user provides a max fee rate below the default. That is probably the more frequent use case, so it should be tested.",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r311430546,311430546,test/functional/rpc_rawtransaction.py
remagpie,2019-08-07 13:58:15,Agreed. I'll refactor the test a little bit so that both cases are covered.,https://github.com/bitcoin/bitcoin/pull/16521#discussion_r311568362,311568362,test/functional/rpc_rawtransaction.py
practicalswift,2019-08-18 11:02:39,Style nit: The storage-class specifier is typically put at the start of the declaration in this project -- that is: `static const …` is typically used instead of `const static …` :-),https://github.com/bitcoin/bitcoin/pull/16521#discussion_r314979938,314979938,src/rpc/rawtransaction.cpp
remagpie,2019-08-18 15:17:11,Fixed.,https://github.com/bitcoin/bitcoin/pull/16521#discussion_r314990322,314990322,src/rpc/rawtransaction.cpp
MarcoFalke,2019-09-18 19:00:52,"eh, actually this is incorrect. Appending zeros after the number after the decimal point does not change the number.\n\n\n```py\n>>> 0.9 == 0.90\nTrue\n",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r325842308,325842308,test/functional/rpc_rawtransaction.py
kallewoof,2019-09-20 02:24:10,"Yeah, should be `0.99990000`",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r326450118,326450118,test/functional/rpc_rawtransaction.py
remagpie,2019-09-20 02:57:56,OMG. I'll send a patch soon.,https://github.com/bitcoin/bitcoin/pull/16521#discussion_r326455032,326455032,test/functional/rpc_rawtransaction.py
jonatack,2019-09-21 17:02:56,"> Yeah, should be `0.99990000`\n\nDone in #16929.",https://github.com/bitcoin/bitcoin/pull/16521#discussion_r326866989,326866989,test/functional/rpc_rawtransaction.py
