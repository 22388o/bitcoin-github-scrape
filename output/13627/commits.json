[
  {
    "sha": "d0b9405f964670d6eaa8529f65fa7993b2a406c8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMGI5NDA1Zjk2NDY3MGQ2ZWFhODUyOWY2NWZhNzk5M2IyYTQwNmM4",
    "commit": {
      "author": {
        "name": "251",
        "email": "13120787+251Labs@users.noreply.github.com",
        "date": "2018-07-10T18:55:53Z"
      },
      "committer": {
        "name": "251",
        "email": "13120787+251Labs@users.noreply.github.com",
        "date": "2018-07-11T22:48:49Z"
      },
      "message": "Refactors `keystore.h` type aliases.\n\nThis squashed commit either encapsulates type alias declarations at the appropriate scope; or removes type aliases that are not used.\n\nThe encapsulated type aliases are declared using C++11's `using` notation in favor of the `typedef` notation.",
      "tree": {
        "sha": "31d5ddae7c3b91e3fc00ff33f9a30d6f8ed04123",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31d5ddae7c3b91e3fc00ff33f9a30d6f8ed04123"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0b9405f964670d6eaa8529f65fa7993b2a406c8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0b9405f964670d6eaa8529f65fa7993b2a406c8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d0b9405f964670d6eaa8529f65fa7993b2a406c8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0b9405f964670d6eaa8529f65fa7993b2a406c8/comments",
    "author": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ba77df15de92deb35bfd501d4635aed3236af30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ba77df15de92deb35bfd501d4635aed3236af30",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ba77df15de92deb35bfd501d4635aed3236af30"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 7,
      "deletions": 8
    },
    "files": [
      {
        "sha": "f64024c7e7f673259e255fb193ce95b718d31be7",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 5,
        "deletions": 8,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0b9405f964670d6eaa8529f65fa7993b2a406c8/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0b9405f964670d6eaa8529f65fa7993b2a406c8/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=d0b9405f964670d6eaa8529f65fa7993b2a406c8",
        "patch": "@@ -38,17 +38,17 @@ class CKeyStore : public SigningProvider\n     virtual bool HaveWatchOnly() const =0;\n };\n \n-typedef std::map<CKeyID, CKey> KeyMap;\n-typedef std::map<CKeyID, CPubKey> WatchKeyMap;\n-typedef std::map<CScriptID, CScript > ScriptMap;\n-typedef std::set<CScript> WatchOnlySet;\n-\n /** Basic key store, that keeps keys in an address->secret map */\n class CBasicKeyStore : public CKeyStore\n {\n protected:\n     mutable CCriticalSection cs_KeyStore;\n \n+    using KeyMap = std::map<CKeyID, CKey>;\n+    using WatchKeyMap = std::map<CKeyID, CPubKey>;\n+    using ScriptMap = std::map<CScriptID, CScript>;\n+    using WatchOnlySet = std::set<CScript>;\n+\n     KeyMap mapKeys GUARDED_BY(cs_KeyStore);\n     WatchKeyMap mapWatchKeys GUARDED_BY(cs_KeyStore);\n     ScriptMap mapScripts GUARDED_BY(cs_KeyStore);\n@@ -74,9 +74,6 @@ class CBasicKeyStore : public CKeyStore\n     bool HaveWatchOnly() const override;\n };\n \n-typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;\n-typedef std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char> > > CryptedKeyMap;\n-\n /** Return the CKeyID of the key involved in a script (if there is a unique one). */\n CKeyID GetKeyForDestination(const CKeyStore& store, const CTxDestination& dest);\n "
      },
      {
        "sha": "52842cd978677d611b5f3e164bf73960fbb4981a",
        "filename": "src/wallet/crypter.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0b9405f964670d6eaa8529f65fa7993b2a406c8/src/wallet/crypter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0b9405f964670d6eaa8529f65fa7993b2a406c8/src/wallet/crypter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.h?ref=d0b9405f964670d6eaa8529f65fa7993b2a406c8",
        "patch": "@@ -126,6 +126,8 @@ class CCryptoKeyStore : public CBasicKeyStore\n     bool fDecryptionThoroughlyChecked;\n \n protected:\n+    using CryptedKeyMap = std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char>>>;\n+\n     bool SetCrypted();\n \n     //! will encrypt previously unencrypted keys"
      }
    ]
  }
]