DrahtBot,2019-08-31 17:01:15,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17032 (Tests: Chainparams: Make regtest almost fully customizable by jtimon)\n* #16224 (gui: Bilingual GUI error messages",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-526847567,526847567,
instagibbs,2019-09-12 17:33:47,utACK https://github.com/bitcoin/bitcoin/pull/16770/commits/e1960b127cdd6cbd9e54ea70989c417ad9fd0c4d,https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-530927628,530927628,
jtimon,2019-10-02 22:41:26,"After https://github.com/bitcoin/bitcoin/pull/16524 has been merged, this doesn't decouple anything anymore, it's just a rename. Which means we can also remove the old names: updated.",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-537711517,537711517,
MarcoFalke,2019-10-02 22:57:45,"I know this has been discussed in the meeting and everyone was meh or +1 for this and I was the only one against it. But to be consistent, shouldn't you update the `if (!Params().MineBlocksOnDemand())` in `setmocktime` as well? Pretty much any `MineBlocksOnDemand` that is not used in the miner is a candidate for `IsTestChain` (according to me) or for a separate flag in the chainparams (according t",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-537715801,537715801,
jtimon,2019-10-03 00:47:38,"I asumed MineBlocksOnDemand() was renamed to the equivalent for fPowNoRetargeting against my deepest bike-shedding wishes, but, no, not the getter, only the internal variable.\nWhat  was the rationale?\n\nWhy do we even have ""candidates for IsTestChain""?\nIs that documented anywhere?\n\nI understand the desire to simplify chainparams, but I don't think the best path is to group them and coup",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-537739536,537739536,
MarcoFalke,2019-10-03 15:06:04,"> I understand the desire to simplify chainparams, but I don't think the best path is to group them and couple them but to try to document them so it gets more obvious which ones aren't really needed.\n\nThose checks are there to prevent users from shooting themselves in the foot. Non std txs could mean they accidentally created an malformed tx, making all their funds go to miners. Incorrect moc",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-537986474,537986474,
jtimon,2019-10-03 17:57:43,"Sorry, I don't see how that says anything against what I'm saying. The checks and functionalities can be the same independently of them being documented in different chainparams fields or grouped and coupled into a single field named IsTestChain despite being unrelated functionalities.\nIn any case, if I can read more about discussions around ""candidates for IsTestChain()"", that would be awesome.",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-538056487,538056487,
MarcoFalke,2019-10-03 18:05:55,"Right, the only difference is the amount of code needed in chainparams",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-538059570,538059570,
MarcoFalke,2019-10-03 18:08:05,"Long-term I don't care which option we pick, but we should be consistent. That means that the `MineBlocksOnDemand()` check in `setmocktime` should be either replaced with `IsTestChain()` or something like `CanSetMockTime()`, no?",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-538060414,538060414,
jtimon,2019-10-03 20:04:45,"> That means that the MineBlocksOnDemand() check in setmocktime should be either replaced with IsTestChain() or something like CanSetMockTime(), no?\n\nPerhaps CanSetMockTime(), but not IsTestChain, I think. That should be false for testnet, no?\nI mean, even if we wanted to group unrelated things under IsTestChain(), unless I'm missing something. ",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-538106296,538106296,
MarcoFalke,2019-10-03 20:07:53,"> Perhaps CanSetMockTime(), but not IsTestChain, I think.\n\nFine with me.\n\n> That should be false for testnet, no?\n\nFine with me. (off-topic: While I think there is no risk to enable it for testnet)",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-538107518,538107518,
MarcoFalke,2019-10-08 14:06:08,@jtimon Are you working on the `CanSetMockTime` or nah? https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-538106296,https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-539530240,539530240,
jtimon,2019-10-08 19:03:49,"No, I'm not working on CanSetMockTime. I'm still not sure what do you want to do about it or what's the relation to this PR.",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-539656505,539656505,
MarcoFalke,2019-10-08 19:37:38,What is the high level goal of this pull request then?,https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-539669151,539669151,
jtimon,2019-10-08 19:52:03,"Get rid of IsTestChain renaming it to something that describes what it does better.\n",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-539674608,539674608,
jtimon,2019-10-09 13:45:07,"There's a label that says ""waiting for author"". I don't understand, waiting for author to do what?\n",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-540007662,540007662,
jtimon,2019-10-11 04:00:20,"I think @MarcoFalke and I agreed on IRC his nits would be solved with something like this:\n\nhttps://github.com/bitcoin/bitcoin/pull/17106\n\nTherefore we can focus on what's at hand here, which is much less.\n\n@instagibbs you gave your utACK before #16524 when in my opinion it was more important, (because there was a functional coupling right there) it was actually decoupling rather than ",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-540891856,540891856,
jtimon,2020-02-04 11:40:52,"@MarcoFalke Do you agree with what I said or did I misunderstood our chat discussion?\n",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-581868753,581868753,
jtimon,2020-02-19 20:13:31,"Rebased.\n\n@MarcoFalke  note it seems #18037 decouples whether the chain is mockable or not from MineBlocksOnDemand like #17106 (and it does more things), so if I understood you well, your concerns should be solved, right?\n",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-588426296,588426296,
jtimon,2020-05-06 13:33:01,Closing due to lack of interest.,https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-624652000,624652000,
MarcoFalke,2020-05-06 14:37:27,"I think there was agreement to do this in the meeting when the topic was discussed, but I think no one had interest to review.\n\nI hereby commit to reviewing this if at least one other person reviews this :)",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-624687819,624687819,
jtimon,2020-05-06 20:27:48,"I think it takes very little time to review this, probably even less time than in answering my last question to you. I mean, how much time does it get to give an utACK or even a concept ACK to this?\n3 minutes?\n \nBut I'm not interested in this myself anymore, so don't bother. I would be more interested in getting review for #17037 or even #17032 \nBut even for those, I'm not even motivated t",https://github.com/bitcoin/bitcoin/pull/16770#issuecomment-624872595,624872595,
MarcoFalke,2019-09-13 03:04:43,Could add a commit to mention this is the default value and not the value used in validation?,https://github.com/bitcoin/bitcoin/pull/16770#discussion_r324021725,324021725,src/chainparams.h
MarcoFalke,2019-09-13 03:06:22,"Something like\n\n```suggestion\n    /** Default for -acceptnonstdtxn */\n```",https://github.com/bitcoin/bitcoin/pull/16770#discussion_r324021941,324021941,src/chainparams.h
jtimon,2019-09-13 17:15:46,"well, I was leaving that for another PR: https://github.com/bitcoin/bitcoin/pull/16526\nSee also https://github.com/bitcoin/bitcoin/pull/16527 which is another option.",https://github.com/bitcoin/bitcoin/pull/16770#discussion_r324287324,324287324,src/chainparams.h
