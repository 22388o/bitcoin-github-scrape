[
  {
    "sha": "9a6b8b956831a4af04312118d5ba37445c6b9ccb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTZiOGI5NTY4MzFhNGFmMDQzMTIxMThkNWJhMzc0NDVjNmI5Y2Ni",
    "commit": {
      "author": {
        "name": "Chris Kleeschulte",
        "email": "chrisk@bitpay.com",
        "date": "2015-06-24T16:52:01Z"
      },
      "committer": {
        "name": "Chris Kleeschulte",
        "email": "chrisk@bitpay.com",
        "date": "2015-06-24T16:52:01Z"
      },
      "message": "Added the ability to build Bitcoin sources in a remote build directory (taking advantage of VPATH). The embedded leveldb custom Makefile and build_detect_platform shell script were the sole hold outs in order to make this happen. \n\n1. Made Autoconf aware of the fact that there is a Makefile.in in the leveldb directory.\n2. Ensured that this file is checked into source control and not ignored.\n3. Removed the reference to the custom Makefile in the leveled directory because the configure script (using config.status) will be writing the actual Makefile in the leveldb directory.\n4. Referenced @srcdir@ in the Makefile.in for the leveldb directory in order to make use of the actual srcdir for remote builds.\n5. Altered the builder script (build_detect_platform) to write the proper paths into its output file.",
      "tree": {
        "sha": "01e9ba235b31e01d19ea55086a6edc51c9451a03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01e9ba235b31e01d19ea55086a6edc51c9451a03"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a6b8b956831a4af04312118d5ba37445c6b9ccb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a6b8b956831a4af04312118d5ba37445c6b9ccb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9a6b8b956831a4af04312118d5ba37445c6b9ccb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a6b8b956831a4af04312118d5ba37445c6b9ccb/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "91389e51c78ae3565b037e31dd5382b52bd75136",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91389e51c78ae3565b037e31dd5382b52bd75136",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/91389e51c78ae3565b037e31dd5382b52bd75136"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 13,
      "deletions": 10
    },
    "files": [
      {
        "sha": "ff0b2ca42c338b33f7a0d981d698c418429c351d",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a6b8b956831a4af04312118d5ba37445c6b9ccb/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a6b8b956831a4af04312118d5ba37445c6b9ccb/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=9a6b8b956831a4af04312118d5ba37445c6b9ccb",
        "patch": "@@ -10,6 +10,7 @@ src/qt/test/test_bitcoin-qt\n \n # autoreconf\n Makefile.in\n+!src/leveldb/Makefile.in\n aclocal.m4\n autom4te.cache/\n build-aux/config.guess"
      },
      {
        "sha": "a579dd47580b9ec81a4e3acf29e2f8f292a6d268",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a6b8b956831a4af04312118d5ba37445c6b9ccb/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a6b8b956831a4af04312118d5ba37445c6b9ccb/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=9a6b8b956831a4af04312118d5ba37445c6b9ccb",
        "patch": "@@ -868,7 +868,7 @@ AC_SUBST(BUILD_QT)\n AC_SUBST(BUILD_TEST_QT)\n AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n-AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n+AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py src/leveldb/Makefile])\n AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n AC_CONFIG_FILES([qa/pull-tester/tests-config.sh],[chmod +x qa/pull-tester/tests-config.sh])\n "
      },
      {
        "sha": "d3f619cb21495a6f8834f2cf8de421cbd089e2fe",
        "filename": "src/leveldb/Makefile.in",
        "status": "renamed",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a6b8b956831a4af04312118d5ba37445c6b9ccb/src/leveldb/Makefile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a6b8b956831a4af04312118d5ba37445c6b9ccb/src/leveldb/Makefile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/Makefile.in?ref=9a6b8b956831a4af04312118d5ba37445c6b9ccb",
        "patch": "@@ -16,21 +16,20 @@ OPT ?= -O2 -DNDEBUG\n \n # detect what platform we're building on\n $(shell CC=\"$(CC)\" CXX=\"$(CXX)\" TARGET_OS=\"$(TARGET_OS)\" \\\n-    ./build_detect_platform build_config.mk ./)\n+    @srcdir@/build_detect_platform build_config.mk @srcdir@)\n # this file is generated by the previous line to set build flags and sources\n include build_config.mk\n-\n-CFLAGS += -I. -I./include $(PLATFORM_CCFLAGS) $(OPT)\n-CXXFLAGS += -I. -I./include $(PLATFORM_CXXFLAGS) $(OPT)\n+CFLAGS += -I@srcdir@ -I@srcdir@/include $(PLATFORM_CCFLAGS) $(OPT)\n+CXXFLAGS += -I@srcdir@ -I@srcdir@/include $(PLATFORM_CXXFLAGS) $(OPT)\n \n LDFLAGS += $(PLATFORM_LDFLAGS)\n LIBS += $(PLATFORM_LIBS)\n \n LIBOBJECTS = $(SOURCES:.cc=.o)\n MEMENVOBJECTS = $(MEMENV_SOURCES:.cc=.o)\n \n-TESTUTIL = ./util/testutil.o\n-TESTHARNESS = ./util/testharness.o $(TESTUTIL)\n+TESTUTIL = @srcdir@/util/testutil.o\n+TESTHARNESS = @srcdir@/util/testharness.o $(TESTUTIL)\n \n # Note: iOS should probably be using libtool, not ar.\n ifeq ($(PLATFORM), IOS)\n@@ -225,3 +224,6 @@ else\n .c.o:\n \t$(CC) $(CFLAGS) -c $< -o $@\n endif\n+EMPTY_AUTOMAKE_TARGETS = distclean maintainer-clean distdir\n+.PHONY: $(EMPTY_AUTOMAKE_TARGETS)\n+$(EMPTY_AUTOMAKE_TARGETS):",
        "previous_filename": "src/leveldb/Makefile"
      },
      {
        "sha": "aa48acc5f76b225a47b110ec8c5f25bfdbf5c74c",
        "filename": "src/leveldb/build_detect_platform",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a6b8b956831a4af04312118d5ba37445c6b9ccb/src/leveldb/build_detect_platform",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a6b8b956831a4af04312118d5ba37445c6b9ccb/src/leveldb/build_detect_platform",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/build_detect_platform?ref=9a6b8b956831a4af04312118d5ba37445c6b9ccb",
        "patch": "@@ -176,14 +176,14 @@ set -f # temporarily disable globbing so that our patterns aren't expanded\n PRUNE_TEST=\"-name *test*.cc -prune\"\n PRUNE_BENCH=\"-name *_bench.cc -prune\"\n PRUNE_TOOL=\"-name leveldb_main.cc -prune\"\n-PORTABLE_FILES=`find $DIRS $PRUNE_TEST -o $PRUNE_BENCH -o $PRUNE_TOOL -o -name '*.cc' -print | sort | sed \"s,^$PREFIX/,,\" | tr \"\\n\" \" \"`\n+PORTABLE_FILES=`find $DIRS $PRUNE_TEST -o $PRUNE_BENCH -o $PRUNE_TOOL -o -name '*.cc' -print | sort | tr \"\\n\" \" \"`\n \n set +f # re-enable globbing\n \n # The sources consist of the portable files, plus the platform-specific port\n # file.\n-echo \"SOURCES=$PORTABLE_FILES $PORT_FILE\" >> $OUTPUT\n-echo \"MEMENV_SOURCES=helpers/memenv/memenv.cc\" >> $OUTPUT\n+echo \"SOURCES=$PORTABLE_FILES $PREFIX/$PORT_FILE\" >> $OUTPUT\n+echo \"MEMENV_SOURCES=$PREFIX/helpers/memenv/memenv.cc\" >> $OUTPUT\n \n if [ \"$CROSS_COMPILE\" = \"true\" ]; then\n     # Cross-compiling; do not try any compilation tests."
      }
    ]
  }
]