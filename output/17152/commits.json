[
  {
    "sha": "b337f58fa0d81264f2624ca0ef1f15c844f8bf62",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMzM3ZjU4ZmEwZDgxMjY0ZjI2MjRjYTBlZjFmMTVjODQ0ZjhiZjYy",
    "commit": {
      "author": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-10-13T19:00:48Z"
      },
      "committer": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-10-14T17:47:46Z"
      },
      "message": "gui: Added label & tooltip for Verify Message labels",
      "tree": {
        "sha": "ca40b73c6d591d8c9e5e36fc7716a7237098e9da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca40b73c6d591d8c9e5e36fc7716a7237098e9da"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b337f58fa0d81264f2624ca0ef1f15c844f8bf62",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b337f58fa0d81264f2624ca0ef1f15c844f8bf62",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b337f58fa0d81264f2624ca0ef1f15c844f8bf62",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b337f58fa0d81264f2624ca0ef1f15c844f8bf62/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b33c03b0cb82e57eb862542c9d331b7ceb8f3a62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b33c03b0cb82e57eb862542c9d331b7ceb8f3a62",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b33c03b0cb82e57eb862542c9d331b7ceb8f3a62"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 13,
      "deletions": 2
    },
    "files": [
      {
        "sha": "62a3d8e43dd730438ccac394803bc4f6a7bceef0",
        "filename": "src/qt/forms/signverifymessagedialog.ui",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b337f58fa0d81264f2624ca0ef1f15c844f8bf62/src/qt/forms/signverifymessagedialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b337f58fa0d81264f2624ca0ef1f15c844f8bf62/src/qt/forms/signverifymessagedialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/signverifymessagedialog.ui?ref=b337f58fa0d81264f2624ca0ef1f15c844f8bf62",
        "patch": "@@ -285,10 +285,18 @@\n         </layout>\n        </item>\n        <item>\n-        <widget class=\"QPlainTextEdit\" name=\"messageIn_VM\"/>\n+        <widget class=\"QPlainTextEdit\" name=\"messageIn_VM\">\n+          <property name=\"toolTip\">\n+            <string>The signed message to verify</string>\n+          </property>\n+        </widget>\n        </item>\n        <item>\n-        <widget class=\"QValidatedLineEdit\" name=\"signatureIn_VM\"/>\n+        <widget class=\"QValidatedLineEdit\" name=\"signatureIn_VM\">\n+          <property name=\"toolTip\">\n+            <string>The signature given when the message was signed</string>\n+          </property>\n+        </widget>\n        </item>\n        <item>\n         <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2_VM\">"
      },
      {
        "sha": "390a50be39b646a2f5f44499a9ba11c48e054f11",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b337f58fa0d81264f2624ca0ef1f15c844f8bf62/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b337f58fa0d81264f2624ca0ef1f15c844f8bf62/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=b337f58fa0d81264f2624ca0ef1f15c844f8bf62",
        "patch": "@@ -41,6 +41,9 @@ SignVerifyMessageDialog::SignVerifyMessageDialog(const PlatformStyle *_platformS\n     GUIUtil::setupAddressWidget(ui->addressIn_SM, this);\n     GUIUtil::setupAddressWidget(ui->addressIn_VM, this);\n \n+    ui->messageIn_VM->setPlaceholderText(tr(\"Enter the signed message to verify\"));\n+    ui->signatureIn_VM->setPlaceholderText(tr(\"Enter the signature given when the message was signed\"));\n+\n     ui->addressIn_SM->installEventFilter(this);\n     ui->messageIn_SM->installEventFilter(this);\n     ui->signatureOut_SM->installEventFilter(this);"
      }
    ]
  },
  {
    "sha": "f57dfa20f4f2ffb1de90bfd416b738e26cb00d22",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNTdkZmEyMGY0ZjJmZmIxZGU5MGJmZDQxNmI3MzhlMjZjYjAwZDIy",
    "commit": {
      "author": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-10-14T17:34:30Z"
      },
      "committer": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-10-14T17:47:46Z"
      },
      "message": "Moved placeholder code to UI file for verify labels",
      "tree": {
        "sha": "2123e762dc52ed5c400442423508a0cc7e50dc3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2123e762dc52ed5c400442423508a0cc7e50dc3a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f57dfa20f4f2ffb1de90bfd416b738e26cb00d22",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f57dfa20f4f2ffb1de90bfd416b738e26cb00d22",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f57dfa20f4f2ffb1de90bfd416b738e26cb00d22",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f57dfa20f4f2ffb1de90bfd416b738e26cb00d22/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b337f58fa0d81264f2624ca0ef1f15c844f8bf62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b337f58fa0d81264f2624ca0ef1f15c844f8bf62",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b337f58fa0d81264f2624ca0ef1f15c844f8bf62"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 6,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8a7bdfdbc670afa736f08c217e64be0beef5f5ab",
        "filename": "src/qt/forms/signverifymessagedialog.ui",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f57dfa20f4f2ffb1de90bfd416b738e26cb00d22/src/qt/forms/signverifymessagedialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f57dfa20f4f2ffb1de90bfd416b738e26cb00d22/src/qt/forms/signverifymessagedialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/signverifymessagedialog.ui?ref=f57dfa20f4f2ffb1de90bfd416b738e26cb00d22",
        "patch": "@@ -289,13 +289,19 @@\n           <property name=\"toolTip\">\n             <string>The signed message to verify</string>\n           </property>\n+          <property name=\"placeholderText\">\n+            <string>The signed message to verify</string>\n+          </property>\n         </widget>\n        </item>\n        <item>\n         <widget class=\"QValidatedLineEdit\" name=\"signatureIn_VM\">\n           <property name=\"toolTip\">\n             <string>The signature given when the message was signed</string>\n           </property>\n+          <property name=\"placeholderText\">\n+            <string>The signature given when the message was signed</string>\n+          </property>\n         </widget>\n        </item>\n        <item>"
      },
      {
        "sha": "71f5f2ae75d1337db12869255cda238ccd1a8565",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f57dfa20f4f2ffb1de90bfd416b738e26cb00d22/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f57dfa20f4f2ffb1de90bfd416b738e26cb00d22/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=f57dfa20f4f2ffb1de90bfd416b738e26cb00d22",
        "patch": "@@ -41,9 +41,6 @@ SignVerifyMessageDialog::SignVerifyMessageDialog(const PlatformStyle *_platformS\n     GUIUtil::setupAddressWidget(ui->addressIn_SM, this);\n     GUIUtil::setupAddressWidget(ui->addressIn_VM, this);\n \n-    ui->messageIn_VM->setPlaceholderText(tr(\"Enter the signed message to verify\"));\n-    ui->signatureIn_VM->setPlaceholderText(tr(\"Enter the signature given when the message was signed\"));\n-\n     ui->addressIn_SM->installEventFilter(this);\n     ui->messageIn_SM->installEventFilter(this);\n     ui->signatureOut_SM->installEventFilter(this);"
      }
    ]
  },
  {
    "sha": "dcf708b1e0a7c86882ec98ad1455fe3af55d8be0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkY2Y3MDhiMWUwYTdjODY4ODJlYzk4YWQxNDU1ZmUzYWY1NWQ4YmUw",
    "commit": {
      "author": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-10-15T17:06:41Z"
      },
      "committer": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-10-15T17:06:41Z"
      },
      "message": "Merge branch 'master' of https://github.com/dannmat/bitcoin",
      "tree": {
        "sha": "2123e762dc52ed5c400442423508a0cc7e50dc3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2123e762dc52ed5c400442423508a0cc7e50dc3a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dcf708b1e0a7c86882ec98ad1455fe3af55d8be0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcf708b1e0a7c86882ec98ad1455fe3af55d8be0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dcf708b1e0a7c86882ec98ad1455fe3af55d8be0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcf708b1e0a7c86882ec98ad1455fe3af55d8be0/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "f57dfa20f4f2ffb1de90bfd416b738e26cb00d22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f57dfa20f4f2ffb1de90bfd416b738e26cb00d22",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f57dfa20f4f2ffb1de90bfd416b738e26cb00d22"
      },
      {
        "sha": "610d9384de7f4de861d94c9b1af4fddc8aa57ad9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/610d9384de7f4de861d94c9b1af4fddc8aa57ad9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/610d9384de7f4de861d94c9b1af4fddc8aa57ad9"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "d4a475ed7e5dc29ac1ca907f088ad405bd388821",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNGE0NzVlZDdlNWRjMjlhYzFjYTkwN2YwODhhZDQwNWJkMzg4ODIx",
    "commit": {
      "author": {
        "name": "Matt Ward",
        "email": "mattwardiom@gmail.com",
        "date": "2019-10-15T17:17:47Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2019-10-15T17:17:47Z"
      },
      "message": "Merge pull request #1 from bitcoin/master\n\nMerge from origin",
      "tree": {
        "sha": "0bb444b2e5ad8c52041a06754843d9f0cdbea6e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0bb444b2e5ad8c52041a06754843d9f0cdbea6e3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4a475ed7e5dc29ac1ca907f088ad405bd388821",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdpf87CRBK7hj4Ov3rIwAAdHIIAB4NZb93/+Hx4cITWybX20km\nrz/Y6125Q2RXx9RIe2UPslzrMvbcerh/B5vPH223X68LCdeRHjafBjNBtZ3XCx5r\nLK8yq1qitDGQe1r8XPkgKusKmQUDJ1RpMmBe1YVF8EWMnvCTN0Dfh9IBY2+KxrLC\neRR4urTpXd3cFLKxGE1HAiL4thXmw5gEdAOwEVVjdQtEl+qFwEFTlCWwTpMBSpk5\n1BEc+lxRXm6VjIH5Fw3P9LP+LAVGzjnvZXWu5LKioM0/vjOpCCsZOLZsfQvZDH7K\nkioFmVdeU9j1M6acYRnfn2TixyaJJKHRdcJ8c4XvyKXT2FXr69RwY681XZxAw0c=\n=X/40\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 0bb444b2e5ad8c52041a06754843d9f0cdbea6e3\nparent dcf708b1e0a7c86882ec98ad1455fe3af55d8be0\nparent 137b7a2af1aa3e19e543af68345c6e10dd27a6dc\nauthor Matt Ward <mattwardiom@gmail.com> 1571159867 +0100\ncommitter GitHub <noreply@github.com> 1571159867 +0100\n\nMerge pull request #1 from bitcoin/master\n\nMerge from origin"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4a475ed7e5dc29ac1ca907f088ad405bd388821",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d4a475ed7e5dc29ac1ca907f088ad405bd388821",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4a475ed7e5dc29ac1ca907f088ad405bd388821/comments",
    "author": {
      "login": "dannmat",
      "id": 9567098,
      "node_id": "MDQ6VXNlcjk1NjcwOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9567098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dannmat",
      "html_url": "https://github.com/dannmat",
      "followers_url": "https://api.github.com/users/dannmat/followers",
      "following_url": "https://api.github.com/users/dannmat/following{/other_user}",
      "gists_url": "https://api.github.com/users/dannmat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dannmat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dannmat/subscriptions",
      "organizations_url": "https://api.github.com/users/dannmat/orgs",
      "repos_url": "https://api.github.com/users/dannmat/repos",
      "events_url": "https://api.github.com/users/dannmat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dannmat/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dcf708b1e0a7c86882ec98ad1455fe3af55d8be0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcf708b1e0a7c86882ec98ad1455fe3af55d8be0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dcf708b1e0a7c86882ec98ad1455fe3af55d8be0"
      },
      {
        "sha": "137b7a2af1aa3e19e543af68345c6e10dd27a6dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/137b7a2af1aa3e19e543af68345c6e10dd27a6dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/137b7a2af1aa3e19e543af68345c6e10dd27a6dc"
      }
    ],
    "stats": {
      "total": 89,
      "additions": 61,
      "deletions": 28
    },
    "files": [
      {
        "sha": "fb91208954ea9698d5610a85a1a9b3efb7311142",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4a475ed7e5dc29ac1ca907f088ad405bd388821/.github/ISSUE_TEMPLATE/bug_report.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4a475ed7e5dc29ac1ca907f088ad405bd388821/.github/ISSUE_TEMPLATE/bug_report.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/bug_report.md?ref=d4a475ed7e5dc29ac1ca907f088ad405bd388821",
        "patch": "@@ -1,6 +1,6 @@\n ---\n name: Bug report\n-about: Create a report to help us improve\n+about: Create a report to help us improve (use this for suspected bugs only, if not sure, open a regular issue below)\n title: ''\n labels: Bug\n assignees: ''"
      },
      {
        "sha": "715b65f09161ce4e5d747d88d724219627817118",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 10,
        "deletions": 5,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4a475ed7e5dc29ac1ca907f088ad405bd388821/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4a475ed7e5dc29ac1ca907f088ad405bd388821/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=d4a475ed7e5dc29ac1ca907f088ad405bd388821",
        "patch": "@@ -753,12 +753,17 @@ if test x$use_hardening != xno; then\n   AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n   AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n \n-  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n-    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n-      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+  # When enable_debug is yes, all optimizations are disabled.\n+  # However, FORTIFY_SOURCE requires that there is some level of optimization, otherwise it does nothing and just creates a compiler warning.\n+  # Since FORTIFY_SOURCE is a no-op without optimizations, do not enable it when enable_debug is yes.\n+  if test x$enable_debug != xyes; then\n+    AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n+      AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n+        HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+      ])\n+      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n     ])\n-    HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n-  ])\n+  fi\n \n   AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n   AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])"
      },
      {
        "sha": "29b49ebff4b5af0bb4bbffdc0030e0a07c04ab18",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4a475ed7e5dc29ac1ca907f088ad405bd388821/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4a475ed7e5dc29ac1ca907f088ad405bd388821/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=d4a475ed7e5dc29ac1ca907f088ad405bd388821",
        "patch": "@@ -11,5 +11,5 @@ This script should not be run manually, instead, after building as usual:\n During the process, the disk image window will pop up briefly where the fancy\n settings are applied. This is normal, please do not interfere.\n \n-When finished, it will produce `Bitcoin-Core.dmg`.\n+When finished, it will produce `Bitcoin-Qt.dmg`.\n "
      },
      {
        "sha": "45562cec62e523625f3aa956651e6463b434816c",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4a475ed7e5dc29ac1ca907f088ad405bd388821/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4a475ed7e5dc29ac1ca907f088ad405bd388821/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=d4a475ed7e5dc29ac1ca907f088ad405bd388821",
        "patch": "@@ -18,23 +18,23 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.19.0**):\n * [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)). Starting **v0.17.0**, whether to send reject messages can be configured with the `-enablebip61` option, and support is deprecated (disabled by default) as of **v0.18.0**. Support was removed in **v0.20.0** ([PR #15437](https://github.com/bitcoin/bitcoin/pull/15437)).\n * [`BIP 65`](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/bitcoin/bitcoin/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/bitcoin/bitcoin/pull/6124).\n * [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n-* [`BIP 68`](https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/bitcoin/bitcoin/pull/7184)), and have been activated since *block 419328*.\n+* [`BIP 68`](https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/bitcoin/bitcoin/pull/7184)), and have been *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n * [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)). Support can be optionally disabled at build time since **v0.18.0** ([PR 14451](https://github.com/bitcoin/bitcoin/pull/14451)), and is disabled by default at build time since **v0.19.0** ([PR #15584](https://github.com/bitcoin/bitcoin/pull/15584)).\n * [`BIP 90`](https://github.com/bitcoin/bips/blob/master/bip-0090.mediawiki): Trigger mechanism for activation of BIPs 34, 65, and 66 has been simplified to block height checks since **v0.14.0** ([PR #8391](https://github.com/bitcoin/bitcoin/pull/8391)).\n * [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, and enforced for all peer versions as of **v0.13.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579) and [PR #6641](https://github.com/bitcoin/bitcoin/pull/6641)).\n-* [`BIP 112`](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/bitcoin/bitcoin/pull/7524)) and has been activated since *block 419328*.\n-* [`BIP 113`](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/bitcoin/bitcoin/pull/6566)) and have been activated since *block 419328*.\n+* [`BIP 112`](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/bitcoin/bitcoin/pull/7524)), and has been *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n+* [`BIP 113`](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/bitcoin/bitcoin/pull/6566)), and has been *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n * [`BIP 125`](https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki): Opt-in full replace-by-fee signaling honoured in mempool and mining as of **v0.12.0** ([PR 6871](https://github.com/bitcoin/bitcoin/pull/6871)). Enabled by default in the wallet GUI as of **v0.18.1** ([PR #11605](https://github.com/bitcoin/bitcoin/pull/11605))\n * [`BIP 130`](https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki): direct headers announcement is negotiated with peer versions `>=70012` as of **v0.12.0** ([PR 6494](https://github.com/bitcoin/bitcoin/pull/6494)).\n * [`BIP 133`](https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki): feefilter messages are respected and sent for peer versions `>=70013` as of **v0.13.0** ([PR 7542](https://github.com/bitcoin/bitcoin/pull/7542)).\n-* [`BIP 141`](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki): Segregated Witness (Consensus Layer) as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)), and defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n-* [`BIP 143`](https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki): Transaction Signature Verification for Version 0 Witness Program as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)) and defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n+* [`BIP 141`](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki): Segregated Witness (Consensus Layer) as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)), defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)), and *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n+* [`BIP 143`](https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki): Transaction Signature Verification for Version 0 Witness Program as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)), defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)), and *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n * [`BIP 144`](https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki): Segregated Witness as of **0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)).\n * [`BIP 145`](https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki): getblocktemplate updates for Segregated Witness as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)).\n-* [`BIP 147`](https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki): NULLDUMMY softfork as of **v0.13.1** ([PR 8636](https://github.com/bitcoin/bitcoin/pull/8636) and [PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n+* [`BIP 147`](https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki): NULLDUMMY softfork as of **v0.13.1** ([PR 8636](https://github.com/bitcoin/bitcoin/pull/8636) and [PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)), *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n * [`BIP 152`](https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki): Compact block transfer and related optimizations are used as of **v0.13.0** ([PR 8068](https://github.com/bitcoin/bitcoin/pull/8068)).\n - [`BIP 158`](https://github.com/bitcoin/bips/blob/master/bip-0158.mediawiki): Compact Block Filters for Light Clients can be indexed as of **v0.19.0** ([PR #14121](https://github.com/bitcoin/bitcoin/pull/14121)).\n-* [`BIP 159`](https://github.com/bitcoin/bips/blob/master/bip-0159.mediawiki): The NODE_NETWORK_LIMITED service bit is signalled as of **v0.16.0** ([PR 11740](https://github.com/bitcoin/bitcoin/pull/11740)), and such nodes are connected to as of **v0.17.0** ([PR 10387](https://github.com/bitcoin/bitcoin/pull/10387)).\n+* [`BIP 159`](https://github.com/bitcoin/bips/blob/master/bip-0159.mediawiki): The `NODE_NETWORK_LIMITED` service bit is signalled as of **v0.16.0** ([PR 11740](https://github.com/bitcoin/bitcoin/pull/11740)), and such nodes are connected to as of **v0.17.0** ([PR 10387](https://github.com/bitcoin/bitcoin/pull/10387)).\n * [`BIP 173`](https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki): Bech32 addresses for native Segregated Witness outputs are supported as of **v0.16.0** ([PR 11167](https://github.com/bitcoin/bitcoin/pull/11167)). Bech32 addresses are generated by default as of **v0.20.0** ([PR 16884](https://github.com/bitcoin/bitcoin/pull/16884)).\n * [`BIP 174`](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki): RPCs to operate on Partially Signed Bitcoin Transactions (PSBT) are present as of **v0.17.0** ([PR 13557](https://github.com/bitcoin/bitcoin/pull/13557)).\n * [`BIP 176`](https://github.com/bitcoin/bips/blob/master/bip-0176.mediawiki): Bits Denomination [QT only] is supported as of **v0.16.0** ([PR 12035](https://github.com/bitcoin/bitcoin/pull/12035))."
      },
      {
        "sha": "9cf4b4b075d3809c5e7229eca32171605e97eb36",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 28,
        "deletions": 1,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4a475ed7e5dc29ac1ca907f088ad405bd388821/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4a475ed7e5dc29ac1ca907f088ad405bd388821/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=d4a475ed7e5dc29ac1ca907f088ad405bd388821",
        "patch": "@@ -87,7 +87,6 @@ code.\n   - `++i` is preferred over `i++`.\n   - `nullptr` is preferred over `NULL` or `(void*)0`.\n   - `static_assert` is preferred over `assert` where possible. Generally; compile-time checking is preferred over run-time checking.\n-  - `enum class` is preferred over `enum` where possible. Scoped enumerations avoid two potential pitfalls/problems with traditional C++ enumerations: implicit conversions to int, and name clashes due to enumerators being exported to the surrounding scope.\n \n Block style example:\n ```c++\n@@ -563,6 +562,34 @@ class A\n   - *Rationale*: Easier to understand what is happening, thus easier to spot mistakes, even for those\n   that are not language lawyers.\n \n+- Prefer `enum class` (scoped enumerations) over `enum` (traditional enumerations) where possible.\n+\n+  - *Rationale*: Scoped enumerations avoid two potential pitfalls/problems with traditional C++ enumerations: implicit conversions to `int`, and name clashes due to enumerators being exported to the surrounding scope.\n+\n+- `switch` statement on an enumeration example:\n+\n+```cpp\n+enum class Tabs {\n+    INFO,\n+    CONSOLE,\n+    GRAPH,\n+    PEERS\n+};\n+\n+int GetInt(Tabs tab)\n+{\n+    switch (tab) {\n+    case Tabs::INFO: return 0;\n+    case Tabs::CONSOLE: return 1;\n+    case Tabs::GRAPH: return 2;\n+    case Tabs::PEERS: return 3;\n+    } // no default case, so the compiler can warn about missing cases\n+    assert(false);\n+}\n+```\n+\n+*Rationale*: The comment documents skipping `default:` label, and it complies with `clang-format` rules. The assertion prevents firing of `-Wreturn-type` warning on some compilers.\n+\n Strings and formatting\n ------------------------\n "
      },
      {
        "sha": "aae039dd77f335b5f52da066e3ddee27a9b81ddb",
        "filename": "src/.clang-format",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4a475ed7e5dc29ac1ca907f088ad405bd388821/src/.clang-format",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4a475ed7e5dc29ac1ca907f088ad405bd388821/src/.clang-format",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/.clang-format?ref=d4a475ed7e5dc29ac1ca907f088ad405bd388821",
        "patch": "@@ -5,6 +5,7 @@ AlignEscapedNewlinesLeft: true\n AlignTrailingComments: true\n AllowAllParametersOfDeclarationOnNextLine: false\n AllowShortBlocksOnASingleLine: false\n+AllowShortCaseLabelsOnASingleLine: true\n AllowShortFunctionsOnASingleLine: All\n AllowShortIfStatementsOnASingleLine: true\n AllowShortLoopsOnASingleLine: false"
      },
      {
        "sha": "b504a3cbb19f7926f55b7aabc399b5eec979b293",
        "filename": "src/test/fs_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4a475ed7e5dc29ac1ca907f088ad405bd388821/src/test/fs_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4a475ed7e5dc29ac1ca907f088ad405bd388821/src/test/fs_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fs_tests.cpp?ref=d4a475ed7e5dc29ac1ca907f088ad405bd388821",
        "patch": "@@ -15,7 +15,7 @@ BOOST_AUTO_TEST_CASE(fsbridge_fstream)\n     fs::path tmpfolder = GetDataDir();\n     // tmpfile1 should be the same as tmpfile2\n     fs::path tmpfile1 = tmpfolder / \"fs_tests_\u20bf_\ud83c\udfc3\";\n-    fs::path tmpfile2 = tmpfolder / L\"fs_tests_\u20bf_\ud83c\udfc3\";\n+    fs::path tmpfile2 = tmpfolder / \"fs_tests_\u20bf_\ud83c\udfc3\";\n     {\n         fsbridge::ofstream file(tmpfile1);\n         file << \"bitcoin\";"
      },
      {
        "sha": "c7e98bd4dbe95cae87cc7014bf3571831ac99129",
        "filename": "test/functional/feature_block.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4a475ed7e5dc29ac1ca907f088ad405bd388821/test/functional/feature_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4a475ed7e5dc29ac1ca907f088ad405bd388821/test/functional/feature_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_block.py?ref=d4a475ed7e5dc29ac1ca907f088ad405bd388821",
        "patch": "@@ -46,7 +46,7 @@\n     OP_RETURN,\n     OP_TRUE,\n     SIGHASH_ALL,\n-    SignatureHash,\n+    LegacySignatureHash,\n     hash160,\n )\n from test_framework.test_framework import BitcoinTestFramework\n@@ -532,7 +532,7 @@ def run_test(self):\n             # second input is corresponding P2SH output from b39\n             tx.vin.append(CTxIn(COutPoint(b39.vtx[i].sha256, 0), b''))\n             # Note: must pass the redeem_script (not p2sh_script) to the signature hash function\n-            (sighash, err) = SignatureHash(redeem_script, tx, 1, SIGHASH_ALL)\n+            (sighash, err) = LegacySignatureHash(redeem_script, tx, 1, SIGHASH_ALL)\n             sig = self.coinbase_key.sign_ecdsa(sighash) + bytes(bytearray([SIGHASH_ALL]))\n             scriptSig = CScript([sig, redeem_script])\n \n@@ -1312,7 +1312,7 @@ def sign_tx(self, tx, spend_tx):\n         if (scriptPubKey[0] == OP_TRUE):  # an anyone-can-spend\n             tx.vin[0].scriptSig = CScript()\n             return\n-        (sighash, err) = SignatureHash(spend_tx.vout[0].scriptPubKey, tx, 0, SIGHASH_ALL)\n+        (sighash, err) = LegacySignatureHash(spend_tx.vout[0].scriptPubKey, tx, 0, SIGHASH_ALL)\n         tx.vin[0].scriptSig = CScript([self.coinbase_key.sign_ecdsa(sighash) + bytes(bytearray([SIGHASH_ALL]))])\n \n     def create_and_sign_transaction(self, spend_tx, value, script=CScript([OP_TRUE])):"
      },
      {
        "sha": "0c7edbf4342d68293f9a0310b61c83345c0306cb",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4a475ed7e5dc29ac1ca907f088ad405bd388821/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4a475ed7e5dc29ac1ca907f088ad405bd388821/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=d4a475ed7e5dc29ac1ca907f088ad405bd388821",
        "patch": "@@ -67,8 +67,8 @@\n     SIGHASH_ANYONECANPAY,\n     SIGHASH_NONE,\n     SIGHASH_SINGLE,\n-    SegwitVersion1SignatureHash,\n-    SignatureHash,\n+    SegwitV0SignatureHash,\n+    LegacySignatureHash,\n     hash160,\n )\n from test_framework.test_framework import BitcoinTestFramework\n@@ -103,7 +103,7 @@ def get_p2pkh_script(pubkeyhash):\n \n def sign_p2pk_witness_input(script, tx_to, in_idx, hashtype, value, key):\n     \"\"\"Add signature for a P2PK witness program.\"\"\"\n-    tx_hash = SegwitVersion1SignatureHash(script, tx_to, in_idx, hashtype, value)\n+    tx_hash = SegwitV0SignatureHash(script, tx_to, in_idx, hashtype, value)\n     signature = key.sign_ecdsa(tx_hash) + chr(hashtype).encode('latin-1')\n     tx_to.wit.vtxinwit[in_idx].scriptWitness.stack = [signature, script]\n     tx_to.rehash()\n@@ -1489,7 +1489,7 @@ def test_uncompressed_pubkey(self):\n         tx2.vin.append(CTxIn(COutPoint(tx.sha256, 0), b\"\"))\n         tx2.vout.append(CTxOut(tx.vout[0].nValue - 1000, script_wsh))\n         script = get_p2pkh_script(pubkeyhash)\n-        sig_hash = SegwitVersion1SignatureHash(script, tx2, 0, SIGHASH_ALL, tx.vout[0].nValue)\n+        sig_hash = SegwitV0SignatureHash(script, tx2, 0, SIGHASH_ALL, tx.vout[0].nValue)\n         signature = key.sign_ecdsa(sig_hash) + b'\\x01'  # 0x1 is SIGHASH_ALL\n         tx2.wit.vtxinwit.append(CTxInWitness())\n         tx2.wit.vtxinwit[0].scriptWitness.stack = [signature, pubkey]\n@@ -1543,7 +1543,7 @@ def test_uncompressed_pubkey(self):\n         tx5 = CTransaction()\n         tx5.vin.append(CTxIn(COutPoint(tx4.sha256, 0), b\"\"))\n         tx5.vout.append(CTxOut(tx4.vout[0].nValue - 1000, CScript([OP_TRUE])))\n-        (sig_hash, err) = SignatureHash(script_pubkey, tx5, 0, SIGHASH_ALL)\n+        (sig_hash, err) = LegacySignatureHash(script_pubkey, tx5, 0, SIGHASH_ALL)\n         signature = key.sign_ecdsa(sig_hash) + b'\\x01'  # 0x1 is SIGHASH_ALL\n         tx5.vin[0].scriptSig = CScript([signature, pubkey])\n         tx5.rehash()\n@@ -1693,7 +1693,7 @@ def test_signature_version_1(self):\n         tx2.vout.append(CTxOut(tx.vout[0].nValue, CScript([OP_TRUE])))\n \n         script = get_p2pkh_script(pubkeyhash)\n-        sig_hash = SegwitVersion1SignatureHash(script, tx2, 0, SIGHASH_ALL, tx.vout[0].nValue)\n+        sig_hash = SegwitV0SignatureHash(script, tx2, 0, SIGHASH_ALL, tx.vout[0].nValue)\n         signature = key.sign_ecdsa(sig_hash) + b'\\x01'  # 0x1 is SIGHASH_ALL\n \n         # Check that we can't have a scriptSig"
      },
      {
        "sha": "51aa9057f79f8d977dcb2fa283a8f0a9eff5202b",
        "filename": "test/functional/test_framework/script.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4a475ed7e5dc29ac1ca907f088ad405bd388821/test/functional/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4a475ed7e5dc29ac1ca907f088ad405bd388821/test/functional/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/script.py?ref=d4a475ed7e5dc29ac1ca907f088ad405bd388821",
        "patch": "@@ -2,7 +2,7 @@\n # Copyright (c) 2015-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Functionality to build scripts, as well as SignatureHash().\n+\"\"\"Functionality to build scripts, as well as signature hash functions.\n \n This file is modified from python-bitcoinlib.\n \"\"\"\n@@ -608,7 +608,7 @@ def FindAndDelete(script, sig):\n     return CScript(r)\n \n \n-def SignatureHash(script, txTo, inIdx, hashtype):\n+def LegacySignatureHash(script, txTo, inIdx, hashtype):\n     \"\"\"Consensus-correct SignatureHash\n \n     Returns (hash, err) to precisely match the consensus-critical behavior of\n@@ -662,7 +662,7 @@ def SignatureHash(script, txTo, inIdx, hashtype):\n # Performance optimization probably not necessary for python tests, however.\n # Note that this corresponds to sigversion == 1 in EvalScript, which is used\n # for version 0 witnesses.\n-def SegwitVersion1SignatureHash(script, txTo, inIdx, hashtype, amount):\n+def SegwitV0SignatureHash(script, txTo, inIdx, hashtype, amount):\n \n     hashPrevouts = 0\n     hashSequence = 0"
      }
    ]
  },
  {
    "sha": "d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzk2YWMxMGViYjYzY2QyNDliOWIyZGVlYjdkNWIxYzA2MDNlMjll",
    "commit": {
      "author": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-10-15T17:20:16Z"
      },
      "committer": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-10-15T17:20:16Z"
      },
      "message": "Merge remote-tracking branch 'upstream/master'",
      "tree": {
        "sha": "0bb444b2e5ad8c52041a06754843d9f0cdbea6e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0bb444b2e5ad8c52041a06754843d9f0cdbea6e3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "dcf708b1e0a7c86882ec98ad1455fe3af55d8be0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcf708b1e0a7c86882ec98ad1455fe3af55d8be0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dcf708b1e0a7c86882ec98ad1455fe3af55d8be0"
      },
      {
        "sha": "137b7a2af1aa3e19e543af68345c6e10dd27a6dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/137b7a2af1aa3e19e543af68345c6e10dd27a6dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/137b7a2af1aa3e19e543af68345c6e10dd27a6dc"
      }
    ],
    "stats": {
      "total": 89,
      "additions": 61,
      "deletions": 28
    },
    "files": [
      {
        "sha": "fb91208954ea9698d5610a85a1a9b3efb7311142",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/.github/ISSUE_TEMPLATE/bug_report.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/.github/ISSUE_TEMPLATE/bug_report.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/bug_report.md?ref=d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e",
        "patch": "@@ -1,6 +1,6 @@\n ---\n name: Bug report\n-about: Create a report to help us improve\n+about: Create a report to help us improve (use this for suspected bugs only, if not sure, open a regular issue below)\n title: ''\n labels: Bug\n assignees: ''"
      },
      {
        "sha": "715b65f09161ce4e5d747d88d724219627817118",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 10,
        "deletions": 5,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e",
        "patch": "@@ -753,12 +753,17 @@ if test x$use_hardening != xno; then\n   AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n   AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n \n-  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n-    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n-      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+  # When enable_debug is yes, all optimizations are disabled.\n+  # However, FORTIFY_SOURCE requires that there is some level of optimization, otherwise it does nothing and just creates a compiler warning.\n+  # Since FORTIFY_SOURCE is a no-op without optimizations, do not enable it when enable_debug is yes.\n+  if test x$enable_debug != xyes; then\n+    AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n+      AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n+        HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+      ])\n+      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n     ])\n-    HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n-  ])\n+  fi\n \n   AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n   AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])"
      },
      {
        "sha": "29b49ebff4b5af0bb4bbffdc0030e0a07c04ab18",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e",
        "patch": "@@ -11,5 +11,5 @@ This script should not be run manually, instead, after building as usual:\n During the process, the disk image window will pop up briefly where the fancy\n settings are applied. This is normal, please do not interfere.\n \n-When finished, it will produce `Bitcoin-Core.dmg`.\n+When finished, it will produce `Bitcoin-Qt.dmg`.\n "
      },
      {
        "sha": "45562cec62e523625f3aa956651e6463b434816c",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e",
        "patch": "@@ -18,23 +18,23 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.19.0**):\n * [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)). Starting **v0.17.0**, whether to send reject messages can be configured with the `-enablebip61` option, and support is deprecated (disabled by default) as of **v0.18.0**. Support was removed in **v0.20.0** ([PR #15437](https://github.com/bitcoin/bitcoin/pull/15437)).\n * [`BIP 65`](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/bitcoin/bitcoin/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/bitcoin/bitcoin/pull/6124).\n * [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n-* [`BIP 68`](https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/bitcoin/bitcoin/pull/7184)), and have been activated since *block 419328*.\n+* [`BIP 68`](https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/bitcoin/bitcoin/pull/7184)), and have been *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n * [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)). Support can be optionally disabled at build time since **v0.18.0** ([PR 14451](https://github.com/bitcoin/bitcoin/pull/14451)), and is disabled by default at build time since **v0.19.0** ([PR #15584](https://github.com/bitcoin/bitcoin/pull/15584)).\n * [`BIP 90`](https://github.com/bitcoin/bips/blob/master/bip-0090.mediawiki): Trigger mechanism for activation of BIPs 34, 65, and 66 has been simplified to block height checks since **v0.14.0** ([PR #8391](https://github.com/bitcoin/bitcoin/pull/8391)).\n * [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, and enforced for all peer versions as of **v0.13.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579) and [PR #6641](https://github.com/bitcoin/bitcoin/pull/6641)).\n-* [`BIP 112`](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/bitcoin/bitcoin/pull/7524)) and has been activated since *block 419328*.\n-* [`BIP 113`](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/bitcoin/bitcoin/pull/6566)) and have been activated since *block 419328*.\n+* [`BIP 112`](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/bitcoin/bitcoin/pull/7524)), and has been *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n+* [`BIP 113`](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/bitcoin/bitcoin/pull/6566)), and has been *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n * [`BIP 125`](https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki): Opt-in full replace-by-fee signaling honoured in mempool and mining as of **v0.12.0** ([PR 6871](https://github.com/bitcoin/bitcoin/pull/6871)). Enabled by default in the wallet GUI as of **v0.18.1** ([PR #11605](https://github.com/bitcoin/bitcoin/pull/11605))\n * [`BIP 130`](https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki): direct headers announcement is negotiated with peer versions `>=70012` as of **v0.12.0** ([PR 6494](https://github.com/bitcoin/bitcoin/pull/6494)).\n * [`BIP 133`](https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki): feefilter messages are respected and sent for peer versions `>=70013` as of **v0.13.0** ([PR 7542](https://github.com/bitcoin/bitcoin/pull/7542)).\n-* [`BIP 141`](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki): Segregated Witness (Consensus Layer) as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)), and defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n-* [`BIP 143`](https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki): Transaction Signature Verification for Version 0 Witness Program as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)) and defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n+* [`BIP 141`](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki): Segregated Witness (Consensus Layer) as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)), defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)), and *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n+* [`BIP 143`](https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki): Transaction Signature Verification for Version 0 Witness Program as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)), defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)), and *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n * [`BIP 144`](https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki): Segregated Witness as of **0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)).\n * [`BIP 145`](https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki): getblocktemplate updates for Segregated Witness as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)).\n-* [`BIP 147`](https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki): NULLDUMMY softfork as of **v0.13.1** ([PR 8636](https://github.com/bitcoin/bitcoin/pull/8636) and [PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n+* [`BIP 147`](https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki): NULLDUMMY softfork as of **v0.13.1** ([PR 8636](https://github.com/bitcoin/bitcoin/pull/8636) and [PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)), *buried* since **v0.19.0** ([PR #16060](https://github.com/bitcoin/bitcoin/pull/16060)).\n * [`BIP 152`](https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki): Compact block transfer and related optimizations are used as of **v0.13.0** ([PR 8068](https://github.com/bitcoin/bitcoin/pull/8068)).\n - [`BIP 158`](https://github.com/bitcoin/bips/blob/master/bip-0158.mediawiki): Compact Block Filters for Light Clients can be indexed as of **v0.19.0** ([PR #14121](https://github.com/bitcoin/bitcoin/pull/14121)).\n-* [`BIP 159`](https://github.com/bitcoin/bips/blob/master/bip-0159.mediawiki): The NODE_NETWORK_LIMITED service bit is signalled as of **v0.16.0** ([PR 11740](https://github.com/bitcoin/bitcoin/pull/11740)), and such nodes are connected to as of **v0.17.0** ([PR 10387](https://github.com/bitcoin/bitcoin/pull/10387)).\n+* [`BIP 159`](https://github.com/bitcoin/bips/blob/master/bip-0159.mediawiki): The `NODE_NETWORK_LIMITED` service bit is signalled as of **v0.16.0** ([PR 11740](https://github.com/bitcoin/bitcoin/pull/11740)), and such nodes are connected to as of **v0.17.0** ([PR 10387](https://github.com/bitcoin/bitcoin/pull/10387)).\n * [`BIP 173`](https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki): Bech32 addresses for native Segregated Witness outputs are supported as of **v0.16.0** ([PR 11167](https://github.com/bitcoin/bitcoin/pull/11167)). Bech32 addresses are generated by default as of **v0.20.0** ([PR 16884](https://github.com/bitcoin/bitcoin/pull/16884)).\n * [`BIP 174`](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki): RPCs to operate on Partially Signed Bitcoin Transactions (PSBT) are present as of **v0.17.0** ([PR 13557](https://github.com/bitcoin/bitcoin/pull/13557)).\n * [`BIP 176`](https://github.com/bitcoin/bips/blob/master/bip-0176.mediawiki): Bits Denomination [QT only] is supported as of **v0.16.0** ([PR 12035](https://github.com/bitcoin/bitcoin/pull/12035))."
      },
      {
        "sha": "9cf4b4b075d3809c5e7229eca32171605e97eb36",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 28,
        "deletions": 1,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e",
        "patch": "@@ -87,7 +87,6 @@ code.\n   - `++i` is preferred over `i++`.\n   - `nullptr` is preferred over `NULL` or `(void*)0`.\n   - `static_assert` is preferred over `assert` where possible. Generally; compile-time checking is preferred over run-time checking.\n-  - `enum class` is preferred over `enum` where possible. Scoped enumerations avoid two potential pitfalls/problems with traditional C++ enumerations: implicit conversions to int, and name clashes due to enumerators being exported to the surrounding scope.\n \n Block style example:\n ```c++\n@@ -563,6 +562,34 @@ class A\n   - *Rationale*: Easier to understand what is happening, thus easier to spot mistakes, even for those\n   that are not language lawyers.\n \n+- Prefer `enum class` (scoped enumerations) over `enum` (traditional enumerations) where possible.\n+\n+  - *Rationale*: Scoped enumerations avoid two potential pitfalls/problems with traditional C++ enumerations: implicit conversions to `int`, and name clashes due to enumerators being exported to the surrounding scope.\n+\n+- `switch` statement on an enumeration example:\n+\n+```cpp\n+enum class Tabs {\n+    INFO,\n+    CONSOLE,\n+    GRAPH,\n+    PEERS\n+};\n+\n+int GetInt(Tabs tab)\n+{\n+    switch (tab) {\n+    case Tabs::INFO: return 0;\n+    case Tabs::CONSOLE: return 1;\n+    case Tabs::GRAPH: return 2;\n+    case Tabs::PEERS: return 3;\n+    } // no default case, so the compiler can warn about missing cases\n+    assert(false);\n+}\n+```\n+\n+*Rationale*: The comment documents skipping `default:` label, and it complies with `clang-format` rules. The assertion prevents firing of `-Wreturn-type` warning on some compilers.\n+\n Strings and formatting\n ------------------------\n "
      },
      {
        "sha": "aae039dd77f335b5f52da066e3ddee27a9b81ddb",
        "filename": "src/.clang-format",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/src/.clang-format",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/src/.clang-format",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/.clang-format?ref=d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e",
        "patch": "@@ -5,6 +5,7 @@ AlignEscapedNewlinesLeft: true\n AlignTrailingComments: true\n AllowAllParametersOfDeclarationOnNextLine: false\n AllowShortBlocksOnASingleLine: false\n+AllowShortCaseLabelsOnASingleLine: true\n AllowShortFunctionsOnASingleLine: All\n AllowShortIfStatementsOnASingleLine: true\n AllowShortLoopsOnASingleLine: false"
      },
      {
        "sha": "b504a3cbb19f7926f55b7aabc399b5eec979b293",
        "filename": "src/test/fs_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/src/test/fs_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/src/test/fs_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fs_tests.cpp?ref=d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e",
        "patch": "@@ -15,7 +15,7 @@ BOOST_AUTO_TEST_CASE(fsbridge_fstream)\n     fs::path tmpfolder = GetDataDir();\n     // tmpfile1 should be the same as tmpfile2\n     fs::path tmpfile1 = tmpfolder / \"fs_tests_\u20bf_\ud83c\udfc3\";\n-    fs::path tmpfile2 = tmpfolder / L\"fs_tests_\u20bf_\ud83c\udfc3\";\n+    fs::path tmpfile2 = tmpfolder / \"fs_tests_\u20bf_\ud83c\udfc3\";\n     {\n         fsbridge::ofstream file(tmpfile1);\n         file << \"bitcoin\";"
      },
      {
        "sha": "c7e98bd4dbe95cae87cc7014bf3571831ac99129",
        "filename": "test/functional/feature_block.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/test/functional/feature_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/test/functional/feature_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_block.py?ref=d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e",
        "patch": "@@ -46,7 +46,7 @@\n     OP_RETURN,\n     OP_TRUE,\n     SIGHASH_ALL,\n-    SignatureHash,\n+    LegacySignatureHash,\n     hash160,\n )\n from test_framework.test_framework import BitcoinTestFramework\n@@ -532,7 +532,7 @@ def run_test(self):\n             # second input is corresponding P2SH output from b39\n             tx.vin.append(CTxIn(COutPoint(b39.vtx[i].sha256, 0), b''))\n             # Note: must pass the redeem_script (not p2sh_script) to the signature hash function\n-            (sighash, err) = SignatureHash(redeem_script, tx, 1, SIGHASH_ALL)\n+            (sighash, err) = LegacySignatureHash(redeem_script, tx, 1, SIGHASH_ALL)\n             sig = self.coinbase_key.sign_ecdsa(sighash) + bytes(bytearray([SIGHASH_ALL]))\n             scriptSig = CScript([sig, redeem_script])\n \n@@ -1312,7 +1312,7 @@ def sign_tx(self, tx, spend_tx):\n         if (scriptPubKey[0] == OP_TRUE):  # an anyone-can-spend\n             tx.vin[0].scriptSig = CScript()\n             return\n-        (sighash, err) = SignatureHash(spend_tx.vout[0].scriptPubKey, tx, 0, SIGHASH_ALL)\n+        (sighash, err) = LegacySignatureHash(spend_tx.vout[0].scriptPubKey, tx, 0, SIGHASH_ALL)\n         tx.vin[0].scriptSig = CScript([self.coinbase_key.sign_ecdsa(sighash) + bytes(bytearray([SIGHASH_ALL]))])\n \n     def create_and_sign_transaction(self, spend_tx, value, script=CScript([OP_TRUE])):"
      },
      {
        "sha": "0c7edbf4342d68293f9a0310b61c83345c0306cb",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e",
        "patch": "@@ -67,8 +67,8 @@\n     SIGHASH_ANYONECANPAY,\n     SIGHASH_NONE,\n     SIGHASH_SINGLE,\n-    SegwitVersion1SignatureHash,\n-    SignatureHash,\n+    SegwitV0SignatureHash,\n+    LegacySignatureHash,\n     hash160,\n )\n from test_framework.test_framework import BitcoinTestFramework\n@@ -103,7 +103,7 @@ def get_p2pkh_script(pubkeyhash):\n \n def sign_p2pk_witness_input(script, tx_to, in_idx, hashtype, value, key):\n     \"\"\"Add signature for a P2PK witness program.\"\"\"\n-    tx_hash = SegwitVersion1SignatureHash(script, tx_to, in_idx, hashtype, value)\n+    tx_hash = SegwitV0SignatureHash(script, tx_to, in_idx, hashtype, value)\n     signature = key.sign_ecdsa(tx_hash) + chr(hashtype).encode('latin-1')\n     tx_to.wit.vtxinwit[in_idx].scriptWitness.stack = [signature, script]\n     tx_to.rehash()\n@@ -1489,7 +1489,7 @@ def test_uncompressed_pubkey(self):\n         tx2.vin.append(CTxIn(COutPoint(tx.sha256, 0), b\"\"))\n         tx2.vout.append(CTxOut(tx.vout[0].nValue - 1000, script_wsh))\n         script = get_p2pkh_script(pubkeyhash)\n-        sig_hash = SegwitVersion1SignatureHash(script, tx2, 0, SIGHASH_ALL, tx.vout[0].nValue)\n+        sig_hash = SegwitV0SignatureHash(script, tx2, 0, SIGHASH_ALL, tx.vout[0].nValue)\n         signature = key.sign_ecdsa(sig_hash) + b'\\x01'  # 0x1 is SIGHASH_ALL\n         tx2.wit.vtxinwit.append(CTxInWitness())\n         tx2.wit.vtxinwit[0].scriptWitness.stack = [signature, pubkey]\n@@ -1543,7 +1543,7 @@ def test_uncompressed_pubkey(self):\n         tx5 = CTransaction()\n         tx5.vin.append(CTxIn(COutPoint(tx4.sha256, 0), b\"\"))\n         tx5.vout.append(CTxOut(tx4.vout[0].nValue - 1000, CScript([OP_TRUE])))\n-        (sig_hash, err) = SignatureHash(script_pubkey, tx5, 0, SIGHASH_ALL)\n+        (sig_hash, err) = LegacySignatureHash(script_pubkey, tx5, 0, SIGHASH_ALL)\n         signature = key.sign_ecdsa(sig_hash) + b'\\x01'  # 0x1 is SIGHASH_ALL\n         tx5.vin[0].scriptSig = CScript([signature, pubkey])\n         tx5.rehash()\n@@ -1693,7 +1693,7 @@ def test_signature_version_1(self):\n         tx2.vout.append(CTxOut(tx.vout[0].nValue, CScript([OP_TRUE])))\n \n         script = get_p2pkh_script(pubkeyhash)\n-        sig_hash = SegwitVersion1SignatureHash(script, tx2, 0, SIGHASH_ALL, tx.vout[0].nValue)\n+        sig_hash = SegwitV0SignatureHash(script, tx2, 0, SIGHASH_ALL, tx.vout[0].nValue)\n         signature = key.sign_ecdsa(sig_hash) + b'\\x01'  # 0x1 is SIGHASH_ALL\n \n         # Check that we can't have a scriptSig"
      },
      {
        "sha": "51aa9057f79f8d977dcb2fa283a8f0a9eff5202b",
        "filename": "test/functional/test_framework/script.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/test/functional/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e/test/functional/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/script.py?ref=d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e",
        "patch": "@@ -2,7 +2,7 @@\n # Copyright (c) 2015-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Functionality to build scripts, as well as SignatureHash().\n+\"\"\"Functionality to build scripts, as well as signature hash functions.\n \n This file is modified from python-bitcoinlib.\n \"\"\"\n@@ -608,7 +608,7 @@ def FindAndDelete(script, sig):\n     return CScript(r)\n \n \n-def SignatureHash(script, txTo, inIdx, hashtype):\n+def LegacySignatureHash(script, txTo, inIdx, hashtype):\n     \"\"\"Consensus-correct SignatureHash\n \n     Returns (hash, err) to precisely match the consensus-critical behavior of\n@@ -662,7 +662,7 @@ def SignatureHash(script, txTo, inIdx, hashtype):\n # Performance optimization probably not necessary for python tests, however.\n # Note that this corresponds to sigversion == 1 in EvalScript, which is used\n # for version 0 witnesses.\n-def SegwitVersion1SignatureHash(script, txTo, inIdx, hashtype, amount):\n+def SegwitV0SignatureHash(script, txTo, inIdx, hashtype, amount):\n \n     hashPrevouts = 0\n     hashSequence = 0"
      }
    ]
  },
  {
    "sha": "f5400f45d3acd34359697d7bb2458ba278823afc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNTQwMGY0NWQzYWNkMzQzNTk2OTdkN2JiMjQ1OGJhMjc4ODIzYWZj",
    "commit": {
      "author": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-10-15T17:20:31Z"
      },
      "committer": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-10-15T17:20:31Z"
      },
      "message": "Merge branch 'master' of https://github.com/dannmat/bitcoin",
      "tree": {
        "sha": "0bb444b2e5ad8c52041a06754843d9f0cdbea6e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0bb444b2e5ad8c52041a06754843d9f0cdbea6e3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f5400f45d3acd34359697d7bb2458ba278823afc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5400f45d3acd34359697d7bb2458ba278823afc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f5400f45d3acd34359697d7bb2458ba278823afc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5400f45d3acd34359697d7bb2458ba278823afc/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d396ac10ebb63cd249b9b2deeb7d5b1c0603e29e"
      },
      {
        "sha": "d4a475ed7e5dc29ac1ca907f088ad405bd388821",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4a475ed7e5dc29ac1ca907f088ad405bd388821",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d4a475ed7e5dc29ac1ca907f088ad405bd388821"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "e1774b34c4970b0afd33e740e0acd75269e4b239",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTc3NGIzNGM0OTcwYjBhZmQzM2U3NDBlMGFjZDc1MjY5ZTRiMjM5",
    "commit": {
      "author": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-10-15T17:45:26Z"
      },
      "committer": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-10-15T17:45:26Z"
      },
      "message": "doc: Added instructions for how to add an upsteam to forked repo",
      "tree": {
        "sha": "45a05d3dd2c726b4b98d00acee055eace1ade816",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45a05d3dd2c726b4b98d00acee055eace1ade816"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1774b34c4970b0afd33e740e0acd75269e4b239",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1774b34c4970b0afd33e740e0acd75269e4b239",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e1774b34c4970b0afd33e740e0acd75269e4b239",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1774b34c4970b0afd33e740e0acd75269e4b239/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "f5400f45d3acd34359697d7bb2458ba278823afc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5400f45d3acd34359697d7bb2458ba278823afc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f5400f45d3acd34359697d7bb2458ba278823afc"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1bfefc0503e04a65c9dc2cdc6a1a5fe32415dabc",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1774b34c4970b0afd33e740e0acd75269e4b239/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1774b34c4970b0afd33e740e0acd75269e4b239/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=e1774b34c4970b0afd33e740e0acd75269e4b239",
        "patch": "@@ -50,6 +50,10 @@ To contribute a patch, the workflow is as follows:\n   1. Create topic branch\n   1. Commit patches\n \n+Note: You should only fork the repository for your first patch. Afterwards, add the origin\n+as an upstream on your fork and create branches for each patch.\n+[See here for more details](https://help.github.com/en/articles/configuring-a-remote-for-a-fork).\n+\n The project coding conventions in the [developer notes](doc/developer-notes.md)\n must be adhered to.\n "
      }
    ]
  },
  {
    "sha": "d4e966fd030d45ba7851283817b2ec226eec10f2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNGU5NjZmZDAzMGQ0NWJhNzg1MTI4MzgxN2IyZWMyMjZlZWMxMGYy",
    "commit": {
      "author": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-10-15T18:19:22Z"
      },
      "committer": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-10-15T18:19:22Z"
      },
      "message": "Squashing commits for pull request",
      "tree": {
        "sha": "45a05d3dd2c726b4b98d00acee055eace1ade816",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45a05d3dd2c726b4b98d00acee055eace1ade816"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4e966fd030d45ba7851283817b2ec226eec10f2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4e966fd030d45ba7851283817b2ec226eec10f2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d4e966fd030d45ba7851283817b2ec226eec10f2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4e966fd030d45ba7851283817b2ec226eec10f2/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "137b7a2af1aa3e19e543af68345c6e10dd27a6dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/137b7a2af1aa3e19e543af68345c6e10dd27a6dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/137b7a2af1aa3e19e543af68345c6e10dd27a6dc"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1bfefc0503e04a65c9dc2cdc6a1a5fe32415dabc",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4e966fd030d45ba7851283817b2ec226eec10f2/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4e966fd030d45ba7851283817b2ec226eec10f2/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=d4e966fd030d45ba7851283817b2ec226eec10f2",
        "patch": "@@ -50,6 +50,10 @@ To contribute a patch, the workflow is as follows:\n   1. Create topic branch\n   1. Commit patches\n \n+Note: You should only fork the repository for your first patch. Afterwards, add the origin\n+as an upstream on your fork and create branches for each patch.\n+[See here for more details](https://help.github.com/en/articles/configuring-a-remote-for-a-fork).\n+\n The project coding conventions in the [developer notes](doc/developer-notes.md)\n must be adhered to.\n "
      }
    ]
  },
  {
    "sha": "fb4328bc898d4474d6cb642a7c4e5a85ea274e29",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjQzMjhiYzg5OGQ0NDc0ZDZjYjY0MmE3YzRlNWE4NWVhMjc0ZTI5",
    "commit": {
      "author": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-10-15T18:19:37Z"
      },
      "committer": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-10-15T18:19:37Z"
      },
      "message": "Merge branch 'master' of https://github.com/dannmat/bitcoin",
      "tree": {
        "sha": "45a05d3dd2c726b4b98d00acee055eace1ade816",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45a05d3dd2c726b4b98d00acee055eace1ade816"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb4328bc898d4474d6cb642a7c4e5a85ea274e29",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb4328bc898d4474d6cb642a7c4e5a85ea274e29",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb4328bc898d4474d6cb642a7c4e5a85ea274e29",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb4328bc898d4474d6cb642a7c4e5a85ea274e29/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "d4e966fd030d45ba7851283817b2ec226eec10f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4e966fd030d45ba7851283817b2ec226eec10f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d4e966fd030d45ba7851283817b2ec226eec10f2"
      },
      {
        "sha": "e1774b34c4970b0afd33e740e0acd75269e4b239",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1774b34c4970b0afd33e740e0acd75269e4b239",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e1774b34c4970b0afd33e740e0acd75269e4b239"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  }
]