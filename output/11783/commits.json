[
  {
    "sha": "d31e5c1d0f303a8cd97077d425488ed5abdf5345",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzFlNWMxZDBmMzAzYThjZDk3MDc3ZDQyNTQ4OGVkNWFiZGY1MzQ1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-11-28T11:08:09Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-11-28T11:12:05Z"
      },
      "message": "Fix shutdown in case of errors during initialization\n\nPR #10286 introduced a few steps which are not robust to early shutdown\nin initialization.\n\nStumbled upon this with #11781, not sure if there are other scenarios\nthat can trigger it, but it's harden against this in any case.",
      "tree": {
        "sha": "d679abc9eab2edd8636df68df5a143fb35cf600f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d679abc9eab2edd8636df68df5a143fb35cf600f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d31e5c1d0f303a8cd97077d425488ed5abdf5345",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d31e5c1d0f303a8cd97077d425488ed5abdf5345",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d31e5c1d0f303a8cd97077d425488ed5abdf5345",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d31e5c1d0f303a8cd97077d425488ed5abdf5345/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "26efc220a13aa3413f6e55e311e8991445104f82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26efc220a13aa3413f6e55e311e8991445104f82",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/26efc220a13aa3413f6e55e311e8991445104f82"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 8,
      "deletions": 3
    },
    "files": [
      {
        "sha": "98915e98418f6d2192884665688302b377391494",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d31e5c1d0f303a8cd97077d425488ed5abdf5345/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d31e5c1d0f303a8cd97077d425488ed5abdf5345/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d31e5c1d0f303a8cd97077d425488ed5abdf5345",
        "patch": "@@ -193,8 +193,8 @@ void Shutdown()\n \n     // Because these depend on each-other, we make sure that neither can be\n     // using the other before destroying them.\n-    UnregisterValidationInterface(peerLogic.get());\n-    if(g_connman) g_connman->Stop();\n+    if (peerLogic) UnregisterValidationInterface(peerLogic.get());\n+    if (g_connman) g_connman->Stop();\n     peerLogic.reset();\n     g_connman.reset();\n "
      },
      {
        "sha": "abbd8cc4d2be5da60c413c5a71cb07534f55294b",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d31e5c1d0f303a8cd97077d425488ed5abdf5345/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d31e5c1d0f303a8cd97077d425488ed5abdf5345/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=d31e5c1d0f303a8cd97077d425488ed5abdf5345",
        "patch": "@@ -49,7 +49,9 @@ void CMainSignals::UnregisterBackgroundSignalScheduler() {\n }\n \n void CMainSignals::FlushBackgroundCallbacks() {\n-    m_internals->m_schedulerClient.EmptyQueue();\n+    if (m_internals) {\n+        m_internals->m_schedulerClient.EmptyQueue();\n+    }\n }\n \n void CMainSignals::RegisterWithMempoolSignals(CTxMemPool& pool) {\n@@ -92,6 +94,9 @@ void UnregisterValidationInterface(CValidationInterface* pwalletIn) {\n }\n \n void UnregisterAllValidationInterfaces() {\n+    if (!g_signals.m_internals) {\n+        return;\n+    }\n     g_signals.m_internals->BlockChecked.disconnect_all_slots();\n     g_signals.m_internals->Broadcast.disconnect_all_slots();\n     g_signals.m_internals->Inventory.disconnect_all_slots();"
      }
    ]
  }
]