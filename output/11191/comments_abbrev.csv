MarcoFalke,2017-08-30T08:17:46Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/11191#issuecomment-325918116,325918116,
AkioNak,2017-09-06T07:47:40Z,"@MarcoFalke I added the followings:\n1. > So, I will add `{BCLog::NONE, ""none""}` to `LogCategories[]` and add to the help text that `""0""` and `""1""` are the shorthand of `""none""` and `""all""`.\n2. made `""0""` and `""none""` to be  treated as same in `-debug` for`bitcoind`.\n3. make `""0""` and `""none""` means ignore other specified logging category of `""include""` or `""exclude""` for this RPC like when t",https://github.com/bitcoin/bitcoin/pull/11191#issuecomment-327403685,327403685,
AkioNak,2017-11-15T07:40:56Z,"@kallewoof Thank you for your review.\nI fixed that which you pointed out.",https://github.com/bitcoin/bitcoin/pull/11191#issuecomment-344510611,344510611,
fanquake,2017-11-17T14:12:35Z,Please squash 1830d5c,https://github.com/bitcoin/bitcoin/pull/11191#issuecomment-345253991,345253991,
AkioNak,2017-11-20T09:35:31Z,"@promag fixed simplify the right side of the equations.\n@fanquake squashed.",https://github.com/bitcoin/bitcoin/pull/11191#issuecomment-345640503,345640503,
laanwj,2017-11-30T09:12:12Z,Lightly tested ACK c60c49b6794279325725a5c3c1a8d3dc6764b966,https://github.com/bitcoin/bitcoin/pull/11191#issuecomment-348127208,348127208,
MarcoFalke,2017-08-30T07:42:47Z,"According to the help text, this is a valid ""category"":\n\n```\n  -debug=<category>\n       Output debugging information (default: 0, ...",https://github.com/bitcoin/bitcoin/pull/11191#discussion_r135992025,135992025,src/rpc/misc.cpp
AkioNak,2017-08-30T09:21:16Z,"@MarcoFalke Thank you for your review.\nOh, indeed.\nI think `-debug=1`(or0) is very clear for initial parameter, but I'm afraid that it is a little bit hard to understand that `""0""` is ignored in this RPC command.\nSo, I will add `{BCLog::NONE, ""none""}` to `LogCategories[]` and add to the help text that `""0""` and `""1""` are the shorthand of `""none""` and `""all""`.",https://github.com/bitcoin/bitcoin/pull/11191#discussion_r136015993,136015993,src/rpc/misc.cpp
MarcoFalke,2017-08-30T09:30:09Z,"I wasn't even aware of this rpc. You might want to wait for feedback by someone who used this. Though, I think your suggestion makes sense.",https://github.com/bitcoin/bitcoin/pull/11191#discussion_r136018126,136018126,src/rpc/misc.cpp
AkioNak,2017-08-30T10:06:33Z,"Then, I will wait for feedback for a while, thanks.",https://github.com/bitcoin/bitcoin/pull/11191#discussion_r136026409,136026409,src/rpc/misc.cpp
kallewoof,2017-11-15T04:00:06Z,"Style: Either use same line (`if (..) return 0;`) or use braces (\n```\nif (..) {\n    return 0;\n}\n```",https://github.com/bitcoin/bitcoin/pull/11191#discussion_r151029035,151029035,src/rpc/misc.cpp
kallewoof,2017-11-15T04:01:00Z,"The standard is to have put space after `(` and before `)` for optional args, i.e. `( <include> <exclude> )`",https://github.com/bitcoin/bitcoin/pull/11191#discussion_r151029103,151029103,src/rpc/misc.cpp
kallewoof,2017-11-15T04:01:48Z,`and returns the list` (`s`),https://github.com/bitcoin/bitcoin/pull/11191#discussion_r151029149,151029149,src/rpc/misc.cpp
kallewoof,2017-11-15T04:03:37Z,"A bit hard to understand. Maybe: `The arguments are evaluated in order \""include\"", \""exclude\"". If an item is both included and excluded, it will thus end up being excluded.`",https://github.com/bitcoin/bitcoin/pull/11191#discussion_r151029307,151029307,src/rpc/misc.cpp
kallewoof,2017-11-15T04:04:29Z,`as category names`,https://github.com/bitcoin/bitcoin/pull/11191#discussion_r151029365,151029365,src/rpc/misc.cpp
promag,2017-11-17T15:31:43Z,"```cpp\n[](const auto& cat){return cat == ""0"" || cat == ""none"";}\n```",https://github.com/bitcoin/bitcoin/pull/11191#discussion_r151712833,151712833,src/init.cpp
AkioNak,2017-11-19T13:51:13Z,"@promag thank you for your review.\n1.  auto specifier can not use in lambda epression when -std=c++11.\n2. std::string has == operater with c-string.\n\nso I will change to following:\n``` [](std::string cat){return cat == ""0"" || cat == ""none"";})) { ```",https://github.com/bitcoin/bitcoin/pull/11191#discussion_r151865332,151865332,src/init.cpp
promag,2017-11-19T22:31:36Z,"BTW, this is not the 1st time I would prefer to read:\n```cpp\nstd::set<std::string> categories = gArgs.GetUniqueArgs(""-debug"");\n\nif (!categories.count(""0"") && !categories.count(""none"")) {\n```\nOr simply:\n```cpp\nif (!gArgs.IsArgSet(""-debug"", ""0"") && !gArgs.IsArgSet(""-debug"", ""none"")) {\n```",https://github.com/bitcoin/bitcoin/pull/11191#discussion_r151880598,151880598,src/init.cpp
