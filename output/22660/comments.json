[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894703199",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22660#issuecomment-894703199",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22660",
    "id": 894703199,
    "node_id": "IC_kwDOABII5841VBZf",
    "user": {
      "login": "0xB10C",
      "id": 19157360,
      "node_id": "MDQ6VXNlcjE5MTU3MzYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/19157360?u=a20996a145f1be613c7b0a57e75d36508572e29d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xB10C",
      "html_url": "https://github.com/0xB10C",
      "followers_url": "https://api.github.com/users/0xB10C/followers",
      "following_url": "https://api.github.com/users/0xB10C/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xB10C/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
      "organizations_url": "https://api.github.com/users/0xB10C/orgs",
      "repos_url": "https://api.github.com/users/0xB10C/repos",
      "events_url": "https://api.github.com/users/0xB10C/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xB10C/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-07T20:23:46Z",
    "updated_at": "2021-08-07T20:23:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK, thanks for further improving this :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/894703199/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693336444",
    "pull_request_review_id": 735485691,
    "id": 693336444,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzMzNjQ0NA==",
    "diff_hunk": "@@ -5,32 +5,64 @@\n \n import argparse\n import subprocess\n-import requests\n import sys\n+import requests\n+\n+DEFAULT_GLOBAL_FAUCET = 'https://signetfaucet.com/claim'\n+GLOBAL_FIRST_BLOCK_HASH = '00000086d6b2636cb2a392d45edc4ec544a10024d30141c9adf4bfd9de533b53'\n \n parser = argparse.ArgumentParser(description='Script to get coins from a faucet.', epilog='You may need to start with double-dash (--) when providing bitcoin-cli arguments.')\n parser.add_argument('-c', '--cmd', dest='cmd', default='bitcoin-cli', help='bitcoin-cli command to use')\n-parser.add_argument('-f', '--faucet', dest='faucet', default='https://signetfaucet.com/claim', help='URL of the faucet')\n+parser.add_argument('-f', '--faucet', dest='faucet', default=DEFAULT_GLOBAL_FAUCET, help='URL of the faucet')\n parser.add_argument('-a', '--addr', dest='addr', default='', help='Bitcoin address to which the faucet should send')\n parser.add_argument('-p', '--password', dest='password', default='', help='Faucet password, if any')\n parser.add_argument('bitcoin_cli_args', nargs='*', help='Arguments to pass on to bitcoin-cli (default: -signet)')\n \n args = parser.parse_args()\n \n-if args.addr == '':\n-    if args.bitcoin_cli_args == []:\n-        args.bitcoin_cli_args = ['-signet']\n-    # get address for receiving coins\n+if args.bitcoin_cli_args == []:\n+    args.bitcoin_cli_args = ['-signet']\n+\n+\n+def bitcoin_cli(rpc_command_and_params):\n+    argv = [args.cmd] + args.bitcoin_cli_args + rpc_command_and_params\n     try:\n-        args.addr = subprocess.check_output([args.cmd] + args.bitcoin_cli_args + ['getnewaddress', 'faucet', 'bech32']).strip()\n+        return subprocess.check_output(argv).strip().decode()\n     except FileNotFoundError:\n         print('The binary', args.cmd, 'could not be found.')\n-        exit()\n+        exit(1)\n+    except subprocess.CalledProcessError:\n+        cmdline = ' '.join(argv)\n+        print(f'-----\\nError while calling \"{cmdline}\" (see output above).')\n+        exit(1)\n+\n+\n+if args.faucet.lower() == DEFAULT_GLOBAL_FAUCET:\n+    # Get the hash of the block at height 1 of the currently active signet chain\n+    curr_signet_hash = bitcoin_cli(['getblockhash', '1'])\n+    if curr_signet_hash != GLOBAL_FIRST_BLOCK_HASH:\n+        print('The global faucet cannot be used with a custom Signet network. Please use the global signet or setup your custom faucet to use this functionality.\\n')\n+        exit(1)\n+\n+if args.addr == '':\n+    # get address for receiving coins\n+    args.addr = bitcoin_cli(['getnewaddress', 'faucet', 'bech32'])\n \n data = {'address': args.addr, 'password': args.password}\n try:\n     res = requests.post(args.faucet, data=data)\n except:\n     print('Unexpected error when contacting faucet:', sys.exc_info()[0])",
    "path": "contrib/signet/getcoins.py",
    "position": 43,
    "original_position": 59,
    "commit_id": "42dbd9025adc200012c103d2c091cf026f1d50b1",
    "original_commit_id": "42dbd9025adc200012c103d2c091cf026f1d50b1",
    "user": {
      "login": "Zero-1729",
      "id": 23586626,
      "node_id": "MDQ6VXNlcjIzNTg2NjI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/23586626?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zero-1729",
      "html_url": "https://github.com/Zero-1729",
      "followers_url": "https://api.github.com/users/Zero-1729/followers",
      "following_url": "https://api.github.com/users/Zero-1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zero-1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zero-1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zero-1729/subscriptions",
      "organizations_url": "https://api.github.com/users/Zero-1729/orgs",
      "repos_url": "https://api.github.com/users/Zero-1729/repos",
      "events_url": "https://api.github.com/users/Zero-1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zero-1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Currently, the message printed here might be cryptic to a non-Python savvy user. For example, when attempting to connect to a URL with no schema (e.g. `test.com`) you get the following:\r\n\r\n```sh\r\n$ ./contrib/signet/getcoins.py --faucet=\"test.com\"\r\nUnexpected error when contacting faucet: <class 'requests.exceptions.MissingSchema'>\r\n```\r\n\r\nWhile we're at it, I'd suggest the following for a more digestible error message:\r\n\r\n```suggestion\r\n    print('Unexpected error when contacting faucet:', sys.exc_info()[1])\r\n```\r\n\r\nwhich results in the following message:\r\n\r\n```sh\r\n$ ./contrib/signet/getcoins.py --faucet=\"test.com\"\r\nUnexpected error when contacting faucet: Invalid URL 'test.com': No schema supplied. Perhaps you meant http://test.com?\r\n```\r\n\r\n**Note**: this would also affect other similar error messages such as a `connectionError` (tested with `--faucet=\"http://fhjvjhj.com/\"`).",
    "created_at": "2021-08-21T10:21:00Z",
    "updated_at": "2021-08-21T10:27:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22660#discussion_r693336444",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22660",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693336444"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22660#discussion_r693336444"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22660"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/693336444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 55,
    "original_line": 55,
    "side": "RIGHT"
  }
]