[
  {
    "sha": "4a0c08fdcf0776fe565d958547796f6a78f415f1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YTBjMDhmZGNmMDc3NmZlNTY1ZDk1ODU0Nzc5NmY2YTc4ZjQxNWYx",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-06-07T19:45:03Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-06-08T13:20:53Z"
      },
      "message": "[tests] update zmq test to use correct config.ini file",
      "tree": {
        "sha": "5eaa77641b5a0dc019f0cf1af64ea19d8068ca10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5eaa77641b5a0dc019f0cf1af64ea19d8068ca10"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a0c08fdcf0776fe565d958547796f6a78f415f1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a0c08fdcf0776fe565d958547796f6a78f415f1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4a0c08fdcf0776fe565d958547796f6a78f415f1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a0c08fdcf0776fe565d958547796f6a78f415f1/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c248e39f2807a7f89e555e99cc55cb2de1ad335",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c248e39f2807a7f89e555e99cc55cb2de1ad335",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c248e39f2807a7f89e555e99cc55cb2de1ad335"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ca89e200ed3ca51c414ca82581e65dfc88942550",
        "filename": "test/functional/zmq_test.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a0c08fdcf0776fe565d958547796f6a78f415f1/test/functional/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a0c08fdcf0776fe565d958547796f6a78f415f1/test/functional/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/zmq_test.py?ref=4a0c08fdcf0776fe565d958547796f6a78f415f1",
        "patch": "@@ -28,7 +28,7 @@ def setup_nodes(self):\n         # Check that bitcoin has been built with ZMQ enabled\n         config = configparser.ConfigParser()\n         if not self.options.configfile:\n-            self.options.configfile = os.path.dirname(__file__) + \"/config.ini\"\n+            self.options.configfile = os.path.dirname(__file__) + \"/../config.ini\"\n         config.read_file(open(self.options.configfile))\n \n         if not config[\"components\"].getboolean(\"ENABLE_ZMQ\"):"
      }
    ]
  },
  {
    "sha": "5ebd5f9e1528e8c185e83981007dd6198c7f73dd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZWJkNWY5ZTE1MjhlOGMxODVlODM5ODEwMDdkZDYxOThjN2Y3M2Rk",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-06-07T20:14:20Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-06-08T19:18:32Z"
      },
      "message": "[tests] tidy up zmq_test.py",
      "tree": {
        "sha": "0f35cd58e66e759a17eae69297e10b347df6627b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f35cd58e66e759a17eae69297e10b347df6627b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ebd5f9e1528e8c185e83981007dd6198c7f73dd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ebd5f9e1528e8c185e83981007dd6198c7f73dd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ebd5f9e1528e8c185e83981007dd6198c7f73dd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ebd5f9e1528e8c185e83981007dd6198c7f73dd/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4a0c08fdcf0776fe565d958547796f6a78f415f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a0c08fdcf0776fe565d958547796f6a78f415f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4a0c08fdcf0776fe565d958547796f6a78f415f1"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 24,
      "deletions": 27
    },
    "files": [
      {
        "sha": "8ccb172d9ba8c70ce46fa99ff9454f5245c5a630",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ebd5f9e1528e8c185e83981007dd6198c7f73dd/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ebd5f9e1528e8c185e83981007dd6198c7f73dd/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=5ebd5f9e1528e8c185e83981007dd6198c7f73dd",
        "patch": "@@ -78,7 +78,7 @@\n     'rawtransactions.py',\n     'reindex.py',\n     # vv Tests less than 30s vv\n-    \"zmq_test.py\",\n+    'zmq_test.py',\n     'mempool_resurrect_test.py',\n     'txn_doublespend.py --mineblock',\n     'txn_clone.py',"
      },
      {
        "sha": "fd7cbc05dafc4877ebf37048ced45c83af8c273f",
        "filename": "test/functional/zmq_test.py",
        "status": "modified",
        "additions": 23,
        "deletions": 26,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ebd5f9e1528e8c185e83981007dd6198c7f73dd/test/functional/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ebd5f9e1528e8c185e83981007dd6198c7f73dd/test/functional/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/zmq_test.py?ref=5ebd5f9e1528e8c185e83981007dd6198c7f73dd",
        "patch": "@@ -8,15 +8,15 @@\n import struct\n \n from test_framework.test_framework import BitcoinTestFramework, SkipTest\n-from test_framework.util import *\n+from test_framework.util import (assert_equal,\n+                                 bytes_to_hex_str,\n+                                 )\n \n class ZMQTest (BitcoinTestFramework):\n \n     def __init__(self):\n         super().__init__()\n-        self.num_nodes = 4\n-\n-    port = 28332\n+        self.num_nodes = 2\n \n     def setup_nodes(self):\n         # Try to import python3-zmq. Skip this test if the import fails.\n@@ -38,57 +38,55 @@ def setup_nodes(self):\n         self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)\n         self.zmqSubSocket.setsockopt(zmq.SUBSCRIBE, b\"hashblock\")\n         self.zmqSubSocket.setsockopt(zmq.SUBSCRIBE, b\"hashtx\")\n-        self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % self.port)\n-        self.nodes = self.start_nodes(self.num_nodes, self.options.tmpdir, extra_args=[\n-            ['-zmqpubhashtx=tcp://127.0.0.1:'+str(self.port), '-zmqpubhashblock=tcp://127.0.0.1:'+str(self.port)],\n-            [],\n-            [],\n-            []\n-            ])\n+        ip_address = \"tcp://127.0.0.1:28332\"\n+        self.zmqSubSocket.connect(ip_address)\n+        extra_args = [['-zmqpubhashtx=%s' % ip_address, '-zmqpubhashblock=%s' % ip_address], []]\n+        self.nodes = self.start_nodes(self.num_nodes, self.options.tmpdir, extra_args)\n \n     def run_test(self):\n-        self.sync_all()\n-\n         genhashes = self.nodes[0].generate(1)\n         self.sync_all()\n \n-        self.log.info(\"listen...\")\n+        self.log.info(\"Wait for tx\")\n         msg = self.zmqSubSocket.recv_multipart()\n         topic = msg[0]\n         assert_equal(topic, b\"hashtx\")\n         body = msg[1]\n         msgSequence = struct.unpack('<I', msg[-1])[-1]\n-        assert_equal(msgSequence, 0) #must be sequence 0 on hashtx\n+        assert_equal(msgSequence, 0)  # must be sequence 0 on hashtx\n \n+        self.log.info(\"Wait for block\")\n         msg = self.zmqSubSocket.recv_multipart()\n         topic = msg[0]\n         body = msg[1]\n         msgSequence = struct.unpack('<I', msg[-1])[-1]\n-        assert_equal(msgSequence, 0) #must be sequence 0 on hashblock\n+        assert_equal(msgSequence, 0)  # must be sequence 0 on hashblock\n         blkhash = bytes_to_hex_str(body)\n \n-        assert_equal(genhashes[0], blkhash) #blockhash from generate must be equal to the hash received over zmq\n+        assert_equal(genhashes[0], blkhash)  # blockhash from generate must be equal to the hash received over zmq\n \n+        self.log.info(\"Generate 10 blocks (and 10 coinbase txes)\")\n         n = 10\n         genhashes = self.nodes[1].generate(n)\n         self.sync_all()\n \n         zmqHashes = []\n         blockcount = 0\n-        for x in range(0,n*2):\n+        for x in range(n * 2):\n             msg = self.zmqSubSocket.recv_multipart()\n             topic = msg[0]\n             body = msg[1]\n             if topic == b\"hashblock\":\n                 zmqHashes.append(bytes_to_hex_str(body))\n                 msgSequence = struct.unpack('<I', msg[-1])[-1]\n-                assert_equal(msgSequence, blockcount+1)\n+                assert_equal(msgSequence, blockcount + 1)\n                 blockcount += 1\n \n-        for x in range(0,n):\n-            assert_equal(genhashes[x], zmqHashes[x]) #blockhash from generate must be equal to the hash received over zmq\n+        for x in range(n):\n+            assert_equal(genhashes[x], zmqHashes[x])  # blockhash from generate must be equal to the hash received over zmq\n \n-        #test tx from a second node\n+        self.log.info(\"Wait for tx from second node\")\n+        # test tx from a second node\n         hashRPC = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1.0)\n         self.sync_all()\n \n@@ -100,10 +98,9 @@ def run_test(self):\n         if topic == b\"hashtx\":\n             hashZMQ = bytes_to_hex_str(body)\n             msgSequence = struct.unpack('<I', msg[-1])[-1]\n-            assert_equal(msgSequence, blockcount+1)\n-\n-        assert_equal(hashRPC, hashZMQ) #blockhash from generate must be equal to the hash received over zmq\n+            assert_equal(msgSequence, blockcount + 1)\n \n+        assert_equal(hashRPC, hashZMQ)  # txid from sendtoaddress must be equal to the hash received over zmq\n \n if __name__ == '__main__':\n-    ZMQTest ().main ()\n+    ZMQTest().main()"
      }
    ]
  },
  {
    "sha": "b1bac1cb7ea1560b46ff758864660a21a228ed67",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMWJhYzFjYjdlYTE1NjBiNDZmZjc1ODg2NDY2MGEyMWEyMjhlZDY3",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-06-07T20:30:38Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-06-12T13:13:03Z"
      },
      "message": "[tests] in zmq test, timeout if message not received",
      "tree": {
        "sha": "9a219b38230b35c222d36ee5341bf867bd2064a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9a219b38230b35c222d36ee5341bf867bd2064a4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1bac1cb7ea1560b46ff758864660a21a228ed67",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1bac1cb7ea1560b46ff758864660a21a228ed67",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b1bac1cb7ea1560b46ff758864660a21a228ed67",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1bac1cb7ea1560b46ff758864660a21a228ed67/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ebd5f9e1528e8c185e83981007dd6198c7f73dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ebd5f9e1528e8c185e83981007dd6198c7f73dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ebd5f9e1528e8c185e83981007dd6198c7f73dd"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "c1ffecc77b3a4d28787a911beb27c7a828cfe05e",
        "filename": "test/functional/zmq_test.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1bac1cb7ea1560b46ff758864660a21a228ed67/test/functional/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1bac1cb7ea1560b46ff758864660a21a228ed67/test/functional/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/zmq_test.py?ref=b1bac1cb7ea1560b46ff758864660a21a228ed67",
        "patch": "@@ -36,6 +36,7 @@ def setup_nodes(self):\n \n         self.zmqContext = zmq.Context()\n         self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)\n+        self.zmqSubSocket.set(zmq.RCVTIMEO, 60000)\n         self.zmqSubSocket.setsockopt(zmq.SUBSCRIBE, b\"hashblock\")\n         self.zmqSubSocket.setsockopt(zmq.SUBSCRIBE, b\"hashtx\")\n         ip_address = \"tcp://127.0.0.1:28332\"\n@@ -94,11 +95,10 @@ def run_test(self):\n         msg = self.zmqSubSocket.recv_multipart()\n         topic = msg[0]\n         body = msg[1]\n-        hashZMQ = \"\"\n-        if topic == b\"hashtx\":\n-            hashZMQ = bytes_to_hex_str(body)\n-            msgSequence = struct.unpack('<I', msg[-1])[-1]\n-            assert_equal(msgSequence, blockcount + 1)\n+        assert_equal(topic, b\"hashtx\")\n+        hashZMQ = bytes_to_hex_str(body)\n+        msgSequence = struct.unpack('<I', msg[-1])[-1]\n+        assert_equal(msgSequence, blockcount + 1)\n \n         assert_equal(hashRPC, hashZMQ)  # txid from sendtoaddress must be equal to the hash received over zmq\n "
      }
    ]
  },
  {
    "sha": "7c51e9f0dc67d8187051071e15ac9c649ea90c65",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YzUxZTlmMGRjNjdkODE4NzA1MTA3MWUxNWFjOWM2NDllYTkwYzY1",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-06-08T03:30:52Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-06-12T13:17:18Z"
      },
      "message": "[tests] destroy zmq context in zmq_tests.py",
      "tree": {
        "sha": "9b59ab0882107d62548894260c52332190c2606c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9b59ab0882107d62548894260c52332190c2606c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c51e9f0dc67d8187051071e15ac9c649ea90c65",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c51e9f0dc67d8187051071e15ac9c649ea90c65",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7c51e9f0dc67d8187051071e15ac9c649ea90c65",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c51e9f0dc67d8187051071e15ac9c649ea90c65/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b1bac1cb7ea1560b46ff758864660a21a228ed67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1bac1cb7ea1560b46ff758864660a21a228ed67",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1bac1cb7ea1560b46ff758864660a21a228ed67"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "26c946d215eb36bffe80c060c4e11fb0f930500f",
        "filename": "test/functional/zmq_test.py",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7c51e9f0dc67d8187051071e15ac9c649ea90c65/test/functional/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7c51e9f0dc67d8187051071e15ac9c649ea90c65/test/functional/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/zmq_test.py?ref=7c51e9f0dc67d8187051071e15ac9c649ea90c65",
        "patch": "@@ -45,6 +45,14 @@ def setup_nodes(self):\n         self.nodes = self.start_nodes(self.num_nodes, self.options.tmpdir, extra_args)\n \n     def run_test(self):\n+        try:\n+            self._zmq_test()\n+        finally:\n+            # Destroy the zmq context\n+            self.log.debug(\"Destroying zmq context\")\n+            self.zmqContext.destroy(linger=None)\n+\n+    def _zmq_test(self):\n         genhashes = self.nodes[0].generate(1)\n         self.sync_all()\n "
      }
    ]
  },
  {
    "sha": "0a4912e46aecef6f04c6287508020ec60424ed24",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYTQ5MTJlNDZhZWNlZjZmMDRjNjI4NzUwODAyMGVjNjA0MjRlZDI0",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-06-08T13:33:52Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-06-12T13:17:18Z"
      },
      "message": "[tests] timeout integration tests on travis after 20 minutes",
      "tree": {
        "sha": "f94bd0e8bc4581eff6766ac30a400967239a005a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f94bd0e8bc4581eff6766ac30a400967239a005a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a4912e46aecef6f04c6287508020ec60424ed24",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a4912e46aecef6f04c6287508020ec60424ed24",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0a4912e46aecef6f04c6287508020ec60424ed24",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a4912e46aecef6f04c6287508020ec60424ed24/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7c51e9f0dc67d8187051071e15ac9c649ea90c65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c51e9f0dc67d8187051071e15ac9c649ea90c65",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7c51e9f0dc67d8187051071e15ac9c649ea90c65"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6379021158c7509ea52eeb7b8b4da2097fbaa300",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a4912e46aecef6f04c6287508020ec60424ed24/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a4912e46aecef6f04c6287508020ec60424ed24/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=0a4912e46aecef6f04c6287508020ec60424ed24",
        "patch": "@@ -20,6 +20,7 @@\n import os\n import time\n import shutil\n+import signal\n import sys\n import subprocess\n import tempfile\n@@ -389,6 +390,10 @@ def get_next(self):\n             time.sleep(.5)\n             for j in self.jobs:\n                 (name, time0, proc, log_out, log_err) = j\n+                if os.getenv('TRAVIS') == 'true' and int(time.time() - time0) > 20 * 60:\n+                    # In travis, timeout individual tests after 20 minutes (to stop tests hanging and not\n+                    # providing useful output.\n+                    proc.send_signal(signal.SIGINT)\n                 if proc.poll() is not None:\n                     log_out.seek(0), log_err.seek(0)\n                     [stdout, stderr] = [l.read().decode('utf-8') for l in (log_out, log_err)]"
      }
    ]
  }
]