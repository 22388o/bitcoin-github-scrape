DrahtBot,2019-07-03 17:57:12,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/16333#issuecomment-508195628,508195628,
promag,2019-07-04 15:38:46,Fails with `Assertion failed: lock cs_main not held in ./validation.h:411`,https://github.com/bitcoin/bitcoin/pull/16333#issuecomment-508522150,508522150,
ajtowns,2019-07-05 01:51:52,"> I changed the BIP34 height to `2`, so that the block at height=1 may be used to mine a duplicate coinbase. (Needed to test mainnet behaviour)\n\nThis didn't quite make sense to me, but I think it works. I think the two behaviours that warrant testing are:\n\n * block 1 coinbase txid = X, block 2 spends X, block 3 coinbase txid = X, block 4 spends X again; all okay\n * block 1 coinbase txid ",https://github.com/bitcoin/bitcoin/pull/16333#issuecomment-508604071,508604071,
ajtowns,2019-07-16 06:25:30,"Based on the comments in #14633 our implementation doesn't match BIP34 for blocks at heights lower than 17 (since we do `OP_1..OP_16` instead of non-minimal `0x01 [0x01...0x10]` as per BIP34); maybe it might be better to only test BIP34 from block 17 rather than block 2? FWIW, tests look like they work unchanged with `BIP34Height = 17` instead of 2.\n\nIf so, could be worth adding `assert(global",https://github.com/bitcoin/bitcoin/pull/16333#issuecomment-511683294,511683294,
MarcoFalke,2019-08-05 12:27:09,"> maybe it might be better to only test BIP34 from block 17 rather than block 2\n> If so, could be worth adding assert(globalChainParams->GetConsensus().BIP34Height > 16);\n\nAdding this assert would break existing test networks such as\n* signet\nhttps://github.com/bitcoin/bitcoin/blob/542b66b3588c779b21b128c694c2f60ab2a81382/src/chainparams.cpp#L299\n* liquid\nhttps://github.com/ElementsP",https://github.com/bitcoin/bitcoin/pull/16333#issuecomment-518213529,518213529,
jtimon,2019-10-10 22:12:50,"Concept ACK\nJust a question, the second commit won't pass the tests until the next commit is applied too, will it?\nIf that's the case, perhaps we should consider a squash for ""git bisect"" purposes.\nIf all commits pass all tests independently, I said nothing.",https://github.com/bitcoin/bitcoin/pull/16333#issuecomment-540821175,540821175,
MarcoFalke,2019-10-11 18:37:12,"Huh, the second commit changes nothing other than that the tests mine version 4 blocks instead of version 1 blocks. If version 1 blocks were accepted, then version 4 blocks are accepted as well under our current consensus rules. So the second commit should pass. And I am pretty sure I did check that it passed.",https://github.com/bitcoin/bitcoin/pull/16333#issuecomment-541177422,541177422,
theStack,2021-07-25 23:35:27,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16333#issuecomment-886275631,886275631,
MarcoFalke,2021-08-01 15:05:50,"> This confused me a little.\n\nEdited OP comment",https://github.com/bitcoin/bitcoin/pull/16333#issuecomment-890536205,890536205,
MarcoFalke,2021-08-02 10:40:15,"@ajtowns Mind to re-ACK/NACK based on your \n\n> (Edited to add: ACK once the above is dealt with one way or another, fwiw) (https://github.com/bitcoin/bitcoin/pull/16333#issuecomment-511683294)\n\n?",https://github.com/bitcoin/bitcoin/pull/16333#issuecomment-890921758,890921758,
ajtowns,2021-08-02 14:13:40,"ACK 222290f54388270937cb6c174195717e2214ec0d\n\nStill seems sad this isn't documented accurately outside the source, but bip34's final and a new bip just for the first ~16 blocks on signet or regtest seems weak too.",https://github.com/bitcoin/bitcoin/pull/16333#issuecomment-891062895,891062895,
instagibbs,2019-07-03 14:06:00,please document why,https://github.com/bitcoin/bitcoin/pull/16333#discussion_r299975273,299975273,test/functional/test_framework/blocktools.py
MarcoFalke,2019-07-03 14:27:58,I don't know the reason for this. The rule was added by satoshi in the first commit https://github.com/bitcoin/bitcoin/blame/5b721607b1057df4dfe97f80d235ed372312f398/main.h#L495,https://github.com/bitcoin/bitcoin/pull/16333#discussion_r299987349,299987349,test/functional/test_framework/blocktools.py
laanwj,2019-07-03 14:30:02,"this doesn't look like an improvement in readability, might want to surround this table with `// clang-format off` and `// clang-format on`",https://github.com/bitcoin/bitcoin/pull/16333#discussion_r299988583,299988583,src/test/miner_tests.cpp
MarcoFalke,2019-07-03 14:34:33,"clang format will put them in separate lines, which is wasteful. So I ran the ""paragraph formatter"" in vim for extra compaction. I don't think this needs to be human-readable, so should be fine as is.",https://github.com/bitcoin/bitcoin/pull/16333#discussion_r299991209,299991209,src/test/miner_tests.cpp
instagibbs,2019-07-03 14:53:44,"Ok then just document it's a check in `CheckTransaction`, I just couldn't recall this rule.",https://github.com/bitcoin/bitcoin/pull/16333#discussion_r300002280,300002280,test/functional/test_framework/blocktools.py
MarcoFalke,2019-07-03 14:58:58,Done,https://github.com/bitcoin/bitcoin/pull/16333#discussion_r300005333,300005333,test/functional/test_framework/blocktools.py
fqlx,2019-07-06 01:44:41,I'd prefer not to use Yoda conditions,https://github.com/bitcoin/bitcoin/pull/16333#discussion_r300816304,300816304,src/test/miner_tests.cpp
MarcoFalke,2019-08-05 12:36:26,"Done. Added `// clang-format {off,on}`",https://github.com/bitcoin/bitcoin/pull/16333#discussion_r310581808,310581808,src/test/miner_tests.cpp
jonatack,2021-07-28 13:20:03,"fac90c55be478f0323eafa1d560e it seems that using `from test_framework.blocktools import VERSIONBITS_LAST_OLD_BLOCK_VERSION` in `messages.py` would be a circular import, but perhaps\n```suggestion\n        self.nVersion = 4  # VERSIONBITS_LAST_OLD_BLOCK_VERSION in test_framework.blocktools\n```",https://github.com/bitcoin/bitcoin/pull/16333#discussion_r678293077,678293077,test/functional/test_framework/messages.py
jonatack,2021-07-28 13:52:45,"222290f5438827093 clever simplification. nit, feel free to ignore\n```suggestion\n    BOOST_CHECK(Assert(m_node.chainman)->ProcessNewBlockHeaders({pblock->GetBlockHeader()}, /* state */ ignored, Params()));\n```",https://github.com/bitcoin/bitcoin/pull/16333#discussion_r678322450,678322450,src/test/validation_block_tests.cpp
MarcoFalke,2021-07-28 14:12:33,I don't think named args are useful for args whose meaning is already clear. Otherwise we could add the comment to every arg. So leaving as-is.,https://github.com/bitcoin/bitcoin/pull/16333#discussion_r678341135,678341135,src/test/validation_block_tests.cpp
MarcoFalke,2021-07-28 14:15:31,Might do if I have to re-touch,https://github.com/bitcoin/bitcoin/pull/16333#discussion_r678343892,678343892,test/functional/test_framework/messages.py
