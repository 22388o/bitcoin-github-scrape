jgarzik,2014-06-06T15:05:33Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/4250#issuecomment-45346897,45346897,
gavinandresen,2014-06-16T16:18:05Z,Rebased just to get pull-tester to re-test.\n,https://github.com/bitcoin/bitcoin/pull/4250#issuecomment-46199850,46199850,
petertodd,2014-06-21T15:23:15Z,"This would be extremely dangerous to implement right now as there is no ceiling on the estimated fee. A sybil attacker could easily skew your idea of what fees to pay upwards arbitrarily high, or for that matter, a fluke high estimate at startup. fRejectInsaneFee isn't even set when AcceptToMemoryPool() is called in the CWallet::CommitTransaction() codepath so the fee could be essentially anything",https://github.com/bitcoin/bitcoin/pull/4250#issuecomment-46756403,46756403,
gavinandresen,2014-06-21T17:04:59Z,"Not vulnerable to Sybil attacks-- attacker would have to produce bogus blocks with valid POW to affect estimates.\n\n> On Jun 21, 2014, at 11:23 AM, Peter Todd notifications@github.com wrote:\n> \n> This would be extremely dangerous to implement right now as there is no ceiling on the estimated fee. A sybil attacker could easily skew your idea of what fees to pay upwards arbitrarily high, or for t",https://github.com/bitcoin/bitcoin/pull/4250#issuecomment-46759067,46759067,
petertodd,2014-06-21T18:20:35Z,Steps to reproduce:\n1. Delete fee_estimates.dat\n2. ./bitcoind -minrelaytxfee=0.1 -limitfreerelay=0 (and hack out priority code I think too)\n3. Create a transaction with 1BTC fee.\n4. Wait for confirmation.\n5. Observe that 'estimatefee 1' returns 5.208 BTC/KB\n6. Send some funds.\n7. Observe that Bitcoin happily sent a transaction with a 1BTC fee without even blinking based on a single transact,https://github.com/bitcoin/bitcoin/pull/4250#issuecomment-46760891,46760891,
gmaxwell,2014-06-21T20:24:30Z,In my experience talking to people the uncertainty they suffer around fees causes them a lot more problems than the fees themselves... people basically clawing their eyes out in panic when fees are non-zero because they just don't know what they are.   We'd probably save a lot of stress for users by supporting a setting of a hard maximum fee per transaction and a setting for a hard maximum fee per,https://github.com/bitcoin/bitcoin/pull/4250#issuecomment-46763827,46763827,
laanwj,2014-06-27T16:59:25Z,Code changes look good to me. Haven't tested.\n,https://github.com/bitcoin/bitcoin/pull/4250#issuecomment-47374223,47374223,
laanwj,2014-07-01T11:00:09Z,"BTW: \n- After this, `CFeeRate CTransaction::minTxFee` can be moved to wallet.cpp, as it is no longer used in main.cpp.\n- Similarly, `-mintxfee` option could be moved to the Wallet options category in HelpMessage.\n",https://github.com/bitcoin/bitcoin/pull/4250#issuecomment-47642860,47642860,
sipa,2014-07-01T11:01:16Z,"I think all fee related code (CFeeRate, CTransaction::minTxFee, ...) can move out of core.\n",https://github.com/bitcoin/bitcoin/pull/4250#issuecomment-47642946,47642946,
laanwj,2014-07-01T11:07:10Z,"Moving the minrelayfee would involve more work though, as it's used in many functions in main still.\n",https://github.com/bitcoin/bitcoin/pull/4250#issuecomment-47643399,47643399,
sipa,2014-07-01T11:08:00Z,"Yes, to main. There's no need for it to be in core.\n",https://github.com/bitcoin/bitcoin/pull/4250#issuecomment-47643472,47643472,
gavinandresen,2014-07-03T18:29:11Z,"Rebased, and nits picked (fee variables moved from core to wallet/main).\n\nIf pull-tester is happy I'm going to pull.\n\n@Diapolo:  I didn't bother with DEFAULT_TX_CONFIRMTARGET because one is the obvious choice for a default, and I doubt we'll ever decide that two or three or eleven makes more sense than one.\n",https://github.com/bitcoin/bitcoin/pull/4250#issuecomment-47967389,47967389,
jgarzik,2014-07-03T18:43:32Z,lightly tested ACK\n,https://github.com/bitcoin/bitcoin/pull/4250#issuecomment-47969198,47969198,
BitcoinPullTester,2014-07-03T19:40:00Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4250_13fc83c77bb9108c00dd7709ce17719edb763273/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4250#issuecomment-47975292,47975292,
laanwj,2014-07-04T03:36:48Z,Posthumous ACK.\n,https://github.com/bitcoin/bitcoin/pull/4250#issuecomment-48006343,48006343,
Diapolo,2014-06-17T06:47:38Z,AFAIK we ordered the commands here alphabetically.\n,https://github.com/bitcoin/bitcoin/pull/4250#discussion_r13845130,13845130,src/init.cpp
laanwj,2014-06-17T06:55:55Z,"@Diapolo If that's the goal at least add a comment at the top of HelpMessage() that they're meant to be sorted alphabetically per category. Otherwise, it will not stay sorted very long.\n",https://github.com/bitcoin/bitcoin/pull/4250#discussion_r13845289,13845289,src/init.cpp
Diapolo,2014-06-17T06:58:16Z,If we can get to that consensus I'm going to add a short hint yes.\n,https://github.com/bitcoin/bitcoin/pull/4250#discussion_r13845345,13845345,src/init.cpp
laanwj,2014-06-17T06:59:08Z,"No need for ""consensus"", this is way too unimportant to vote about, just do it\n",https://github.com/bitcoin/bitcoin/pull/4250#discussion_r13845366,13845366,src/init.cpp
Diapolo,2014-06-17T07:18:14Z,#4357\n,https://github.com/bitcoin/bitcoin/pull/4250#discussion_r13845787,13845787,src/init.cpp
laanwj,2014-06-27T15:11:57Z,This could be `const static`\n,https://github.com/bitcoin/bitcoin/pull/4250#discussion_r14297424,14297424,src/qt/coincontroldialog.cpp
Diapolo,2014-07-01T12:11:41Z,"May I suggest to add a DEFAULT_TX_CONFIRMTARGET and use that where currently 1 is used. It's also nice to use this in the help string, because when changing a default we don't need to change the help string.\n\nSee e.g. `-blockmaxsize=<n>` in init.cpp.\n",https://github.com/bitcoin/bitcoin/pull/4250#discussion_r14400198,14400198,src/wallet.cpp
