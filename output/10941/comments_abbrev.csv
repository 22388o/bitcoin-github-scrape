practicalswift,2017-07-27T11:59:08Z,Concept ACK :-),https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-318341525,318341525,
promag,2017-07-27T21:35:11Z,@practicalswift thanks for the review. Added a few comments and fixed the nits.,https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-318493215,318493215,
promag,2017-07-31T20:05:36Z,@MarcoFalke done. However can't get tmpdir in the constructor. Any other suggestion?,https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-319180756,319180756,
MarcoFalke,2017-07-31T20:15:03Z,"You could try to overwrite setup_network:\n\n```py\ndef setup_network():\n    self.extra_args = [bla]\n    super().setup_network()\n```\n\nOn Mon, Jul 31, 2017 at 10:06 PM, João Barbosa <notifications@github.com>\nwrote:\n\n> @MarcoFalke <https://github.com/marcofalke> done. However can't get\n> tmpdir in the constructor. Any other suggestion?\n>\n> —\n> You are receiving this because you were men",https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-319183328,319183328,
promag,2017-07-31T20:54:46Z,"@MarcoFalke ty, all comments addressed.",https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-319193521,319193521,
practicalswift,2017-08-01T04:51:22Z,utACK d2c730c77f9b4011040e30f2bc2a4c8c6deb13f2,https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-319267063,319267063,
promag,2017-08-12T02:03:40Z,@jnewbery done. Also rebased.,https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-321950628,321950628,
MarcoFalke,2017-08-12T11:29:02Z,Needs rebase,https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-321975439,321975439,
promag,2017-08-12T13:56:18Z,@MarcoFalke done.,https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-321982717,321982717,
jnewbery,2017-08-14T17:24:58Z,I still believe that this test should be merged with #10966 and the `forknotify.py` test. They're testing very similar functionality and there's a lot of shared code between the three tests.,https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-322253225,322253225,
promag,2017-10-04T06:59:24Z,As suggested I'll merge the test and use `wait_until`.,https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-334066565,334066565,
promag,2017-10-04T14:14:26Z,Rebased and updated as per suggestions. Still in a separate test file because IMO that should go to a different PR since `forknotify.py` needs to be changed.,https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-334169226,334169226,
jnewbery,2017-10-04T15:33:53Z,Please see https://github.com/jnewbery/bitcoin/tree/fork_notify. This adds blocknotify and walletnotify to the existint fork_notify.py test script.,https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-334195990,334195990,
promag,2017-10-10T00:37:35Z,"@jnewbery Picked your branch and added a commit that adds `-rescan` to `node[1]` (needs squash).\n\n@MarcoFalke the block sort was already on the @jnewbery branch.",https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-335326121,335326121,
jnewbery,2017-10-10T16:51:27Z,"Tested ACK 6d9c1593497e9f295b5f335c7c7a0df7966d7590. As you've pointed out, should be squashed prior to merge.",https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-335537770,335537770,
promag,2017-10-10T22:39:11Z,@jnewbery Done.,https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-335628997,335628997,
promag,2017-10-10T22:45:42Z,"@mess110 Done, thank you.",https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-335630068,335630068,
mess110,2017-10-10T22:49:49Z,"ACK https://github.com/bitcoin/bitcoin/pull/10941/commits/857b32b4b280f13997cf2fa471802ad6a27075fb\n\n(or the squashed version of this)",https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-335630812,335630812,
promag,2017-10-10T22:52:07Z,I think makes sense to have individual commits.,https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-335631238,335631238,
laanwj,2017-10-11T09:24:25Z,"> I think makes sense to have individual commits.\n\nCertainly if multiple authors are involved. And the different commits concern different aspects.\n\nWhat we want to avoid with squashing is sequential commits like ""fix the previous commit"" which are internal to the author's working and are only confusing when reading the history. But that's not the case here.\n\nutACK 857b32b",https://github.com/bitcoin/bitcoin/pull/10941#issuecomment-335750516,335750516,
promag,2017-07-27T11:13:13Z,Without sleep sometimes the file doesn't have all blocks because `runCommand()` is aync. Any idea to avoid the sleep without pooling or blocking reads?,https://github.com/bitcoin/bitcoin/pull/10941#discussion_r129814005,129814005,test/functional/blocknotify.py
practicalswift,2017-07-27T11:57:14Z,Replace with `import os`. `os.close` and `os.remove` is used below :-),https://github.com/bitcoin/bitcoin/pull/10941#discussion_r129821628,129821628,test/functional/blocknotify.py
practicalswift,2017-07-27T11:57:31Z,Remove `assert_raises_jsonrpc`. Not used :-),https://github.com/bitcoin/bitcoin/pull/10941#discussion_r129821681,129821681,test/functional/blocknotify.py
practicalswift,2017-07-27T11:58:18Z,"Nit: `fd, path = mkstemp(text=True)` will do :-)",https://github.com/bitcoin/bitcoin/pull/10941#discussion_r129821828,129821828,test/functional/blocknotify.py
promag,2017-07-27T12:00:02Z,Lol yes. What do you guys prefer? Import module or symbols?,https://github.com/bitcoin/bitcoin/pull/10941#discussion_r129822139,129822139,test/functional/blocknotify.py
practicalswift,2017-07-27T12:10:21Z,"We have a winner:\n\n```\n$ git grep -E ""(import os|from os)"" -- ""*.py"" | cut -f2 -d: | sort | uniq -c\n     25 import os\n      2 import os.path\n```",https://github.com/bitcoin/bitcoin/pull/10941#discussion_r129823979,129823979,test/functional/blocknotify.py
MarcoFalke,2017-07-28T09:13:55Z,"Please use `self.options.tmpdir`, so that files are contained in a single tree for each test.\n\nAlso nit: Please no whitespace for named args. (`text=True`)",https://github.com/bitcoin/bitcoin/pull/10941#discussion_r130046354,130046354,test/functional/blocknotify.py
MarcoFalke,2017-07-28T09:16:37Z,"Please no fixed sleeps. This might be too much time on a fast system or too less time on a slow io system.\n\nYou could wrap it into a while loop with timeout on failure and break on success. Alternatively there should be some helper function `wait_until` if I am not mistaken.",https://github.com/bitcoin/bitcoin/pull/10941#discussion_r130046878,130046878,test/functional/blocknotify.py
jnewbery,2017-07-28T09:26:51Z,"nit: whitespace.\n\nConsider using a linter to catch nits.",https://github.com/bitcoin/bitcoin/pull/10941#discussion_r130048943,130048943,test/functional/blocknotify.py
jnewbery,2017-07-28T09:29:15Z,can assign `self.path` above rather than assign to a local variable `path`,https://github.com/bitcoin/bitcoin/pull/10941#discussion_r130049444,130049444,test/functional/blocknotify.py
promag,2017-07-28T10:13:12Z,`self.options` is not defined at this point.,https://github.com/bitcoin/bitcoin/pull/10941#discussion_r130057474,130057474,test/functional/blocknotify.py
jnewbery,2017-08-02T17:37:59Z,"A few comments on this loop:\n\n- I'd make the sleep longer (say 0.1 seconds). I'm also not sure you need the back-off. Just a `time.sleep(0.1)` should be fine.\n- The total time allowed for the file to be written is 0.45 seconds. That needs to be longer (up to 10 seconds) since Travis can block i/o for many seconds at a time. See #10072.\n- Please make the comment clear about the total time a",https://github.com/bitcoin/bitcoin/pull/10941#discussion_r130944628,130944628,test/functional/blocknotify.py
MarcoFalke,2017-08-12T14:25:45Z,"Maybe wait until the file is created? I'd really suggest using some sort of wrapper, like the `wait_until` from `mininode`.\n\n```py\nwait_until(lambda: os.path.isfile(self.path), timeout=1)\nwait_until(lambda: os.stat(self.path).st_size >= (block_count * 65), timeout=10)",https://github.com/bitcoin/bitcoin/pull/10941#discussion_r132819059,132819059,test/functional/blocknotify.py
MarcoFalke,2017-08-15T15:13:27Z,"Just to make sure, that this is causing failures on my machine:\n\n```py\n  File ""./test/functional/blocknotify.py"", line 38, in run_test\n    while os.stat(self.path).st_size < (block_count * 65) and attempts < 100:\nFileNotFoundError: [Errno 2] No such file or directory: '/tmp/bitcoin_test_runner_20170815_171120/blocknotify_621/blocks.txt'\n",https://github.com/bitcoin/bitcoin/pull/10941#discussion_r133216090,133216090,test/functional/blocknotify.py
MarcoFalke,2017-10-02T18:59:25Z,ping @promag: Are you still working on this?,https://github.com/bitcoin/bitcoin/pull/10941#discussion_r142225936,142225936,test/functional/blocknotify.py
ryanofsky,2017-10-03T13:21:09Z,Maybe escape path with `shlex.quote(self.path)`,https://github.com/bitcoin/bitcoin/pull/10941#discussion_r142398289,142398289,test/functional/blocknotify.py
ryanofsky,2017-10-03T13:27:13Z,"> ping @promag: Are you still working on this?\n\nI'm not seeing any errors when I run the test, but this is probably caused by a race between the start of this loop and the first notification. Could be fixed by adding a `not os.path.exists(self.path)` check here, or adding `with open(self.path, ""w""): pass` to `setup_network`.",https://github.com/bitcoin/bitcoin/pull/10941#discussion_r142400104,142400104,test/functional/blocknotify.py
MarcoFalke,2017-10-03T15:38:37Z,"Indeed. The code I posted a few comments above fixed it for me.\n\nc.f.\n\n```py\nwait_until(lambda: os.path.isfile(self.path), timeout=1)\nwait_until(lambda: os.stat(self.path).st_size >= (block_count * 65), timeout=10)",https://github.com/bitcoin/bitcoin/pull/10941#discussion_r142439250,142439250,test/functional/blocknotify.py
promag,2017-10-04T14:12:49Z,`tmpdir` is used elsewhere (should be secure) and `blocks.txt` doesn't need to be quoted. Is there a strong argument for it?,https://github.com/bitcoin/bitcoin/pull/10941#discussion_r142681792,142681792,test/functional/blocknotify.py
promag,2017-10-04T14:16:54Z,Of you mean to quote the command `echo %%s >> %s`?,https://github.com/bitcoin/bitcoin/pull/10941#discussion_r142683108,142683108,test/functional/blocknotify.py
ryanofsky,2017-10-04T14:50:23Z,Quoting the entire command would be incorrect because it is passed literally to [system(3)](http://man7.org/linux/man-pages/man3/system.3.html). Quoting the path is correct because it is being passed as a shell token. Anyway just suggested this in case you wanted the code to be more correct. There are no practical implications (security or otherwise) either way.,https://github.com/bitcoin/bitcoin/pull/10941#discussion_r142693364,142693364,test/functional/blocknotify.py
promag,2017-10-04T14:53:26Z,"Right, otherwise it wouldn't work 😃 I'm going for simplicity if you don't mind.",https://github.com/bitcoin/bitcoin/pull/10941#discussion_r142694324,142694324,test/functional/blocknotify.py
MarcoFalke,2017-10-09T19:41:20Z,"Hmm. I don't think boost::thread guarantees that the thread run in the order they are constructed. Am I wrong?\n\nThe arrays should have the same content, but a different order.",https://github.com/bitcoin/bitcoin/pull/10941#discussion_r143559521,143559521,test/functional/blocknotify.py
promag,2017-10-10T00:20:08Z,"Correct, in `-walletnotify` (#10966) there's:\n```cpp\n            # txids are sorted because there is no order guarantee in notifications\n            assert_equal(sorted(txids_rpc), sorted(txids_file))\n```\nSo I'll do the same here for correctness.",https://github.com/bitcoin/bitcoin/pull/10941#discussion_r143606819,143606819,test/functional/blocknotify.py
mess110,2017-10-10T22:42:16Z,"You are also testing -walletnotify, could you please update the comment?",https://github.com/bitcoin/bitcoin/pull/10941#discussion_r143872241,143872241,test/functional/notifications.py
mess110,2017-10-10T22:42:54Z,Is the class name still correct? I think it should be something like `NotificationsTest`,https://github.com/bitcoin/bitcoin/pull/10941#discussion_r143872357,143872357,test/functional/notifications.py
