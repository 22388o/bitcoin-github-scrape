[
  {
    "sha": "9c72a464f87ad80d16ea6720dfc6a53578b94c92",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YzcyYTQ2NGY4N2FkODBkMTZlYTY3MjBkZmM2YTUzNTc4Yjk0Yzky",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-10-04T14:37:33Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-10-10T22:44:59Z"
      },
      "message": "[tests] Tidy up forknotify.py",
      "tree": {
        "sha": "7c6db1dd4986b249b8a9052bbda05d8a2fe89019",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c6db1dd4986b249b8a9052bbda05d8a2fe89019"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c72a464f87ad80d16ea6720dfc6a53578b94c92",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c72a464f87ad80d16ea6720dfc6a53578b94c92",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9c72a464f87ad80d16ea6720dfc6a53578b94c92",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c72a464f87ad80d16ea6720dfc6a53578b94c92/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e022463a4b238750476430d08b45bc9171791e6f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e022463a4b238750476430d08b45bc9171791e6f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e022463a4b238750476430d08b45bc9171791e6f"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 7,
      "deletions": 23
    },
    "files": [
      {
        "sha": "d74b3181dad028ddb76b52317e64dbe38ca441dd",
        "filename": "test/functional/forknotify.py",
        "status": "modified",
        "additions": 7,
        "deletions": 23,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c72a464f87ad80d16ea6720dfc6a53578b94c92/test/functional/forknotify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c72a464f87ad80d16ea6720dfc6a53578b94c92/test/functional/forknotify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/forknotify.py?ref=9c72a464f87ad80d16ea6720dfc6a53578b94c92",
        "patch": "@@ -4,56 +4,40 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the -alertnotify option.\"\"\"\n import os\n-import time\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, wait_until\n \n class ForkNotifyTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n \n     def setup_network(self):\n         self.alert_filename = os.path.join(self.options.tmpdir, \"alert.txt\")\n-        with open(self.alert_filename, 'w', encoding='utf8'):\n-            pass  # Just open then close to create zero-length file\n-        self.extra_args = [[\"-blockversion=2\", \"-alertnotify=echo %s >> \\\"\" + self.alert_filename + \"\\\"\"],\n+        self.extra_args = [[\"-alertnotify=echo %%s >> %s\" % self.alert_filename],\n                            [\"-blockversion=211\"]]\n         super().setup_network()\n \n     def run_test(self):\n-        # Mine 51 up-version blocks\n+        # Mine 51 up-version blocks. -alertnotify should trigger on the 51st.\n         self.nodes[1].generate(51)\n         self.sync_all()\n-        # -alertnotify should trigger on the 51'st,\n-        # but mine and sync another to give\n-        # -alertnotify time to write\n-        self.nodes[1].generate(1)\n-        self.sync_all()\n \n         # Give bitcoind 10 seconds to write the alert notification\n-        timeout = 10.0\n-        while timeout > 0:\n-            if os.path.exists(self.alert_filename) and os.path.getsize(self.alert_filename):\n-                break\n-            time.sleep(0.1)\n-            timeout -= 0.1\n-        else:\n-            assert False, \"-alertnotify did not warn of up-version blocks\"\n+        wait_until(lambda: os.path.isfile(self.alert_filename) and os.path.getsize(self.alert_filename), timeout=10)\n \n         with open(self.alert_filename, 'r', encoding='utf8') as f:\n             alert_text = f.read()\n \n         # Mine more up-version blocks, should not get more alerts:\n-        self.nodes[1].generate(1)\n-        self.sync_all()\n-        self.nodes[1].generate(1)\n+        self.nodes[1].generate(2)\n         self.sync_all()\n \n         with open(self.alert_filename, 'r', encoding='utf8') as f:\n             alert_text2 = f.read()\n \n-        if alert_text != alert_text2:\n-            raise AssertionError(\"-alertnotify excessive warning of up-version blocks\")\n+        self.log.info(\"-alertnotify should not continue notifying for more unknown version blocks\")\n+        assert_equal(alert_text, alert_text2)\n \n if __name__ == '__main__':\n     ForkNotifyTest().main()"
      }
    ]
  },
  {
    "sha": "df18d29a02ae2804ae8490ea816fe0e88a971e8e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjE4ZDI5YTAyYWUyODA0YWU4NDkwZWE4MTZmZTBlODhhOTcxZThl",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-07-31T21:13:27Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-10-10T22:46:04Z"
      },
      "message": "[tests] Add -blocknotify functional test",
      "tree": {
        "sha": "a0132a35c16e65a03d99d2d71b4ae182ceb5c624",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0132a35c16e65a03d99d2d71b4ae182ceb5c624"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df18d29a02ae2804ae8490ea816fe0e88a971e8e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df18d29a02ae2804ae8490ea816fe0e88a971e8e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/df18d29a02ae2804ae8490ea816fe0e88a971e8e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df18d29a02ae2804ae8490ea816fe0e88a971e8e/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c72a464f87ad80d16ea6720dfc6a53578b94c92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c72a464f87ad80d16ea6720dfc6a53578b94c92",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c72a464f87ad80d16ea6720dfc6a53578b94c92"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 22,
      "deletions": 7
    },
    "files": [
      {
        "sha": "80a74c00202c9983564df0cf29f2f658e532ddc3",
        "filename": "test/functional/notifications.py",
        "status": "renamed",
        "additions": 21,
        "deletions": 6,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df18d29a02ae2804ae8490ea816fe0e88a971e8e/test/functional/notifications.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df18d29a02ae2804ae8490ea816fe0e88a971e8e/test/functional/notifications.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/notifications.py?ref=df18d29a02ae2804ae8490ea816fe0e88a971e8e",
        "patch": "@@ -2,25 +2,40 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test the -alertnotify option.\"\"\"\n+\"\"\"Test the -alertnotify and -blocknotify options.\"\"\"\n import os\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, wait_until\n \n-class ForkNotifyTest(BitcoinTestFramework):\n+class NotificationsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n \n     def setup_network(self):\n         self.alert_filename = os.path.join(self.options.tmpdir, \"alert.txt\")\n-        self.extra_args = [[\"-alertnotify=echo %%s >> %s\" % self.alert_filename],\n+        self.block_filename = os.path.join(self.options.tmpdir, 'blocks.txt')\n+        self.extra_args = [[\"-blockversion=2\",\n+                            \"-alertnotify=echo %%s >> %s\" % self.alert_filename,\n+                            \"-blocknotify=echo %%s >> %s\" % self.block_filename],\n                            [\"-blockversion=211\"]]\n         super().setup_network()\n \n     def run_test(self):\n-        # Mine 51 up-version blocks. -alertnotify should trigger on the 51st.\n-        self.nodes[1].generate(51)\n+        self.log.info(\"test -blocknotify\")\n+        block_count = 10\n+        blocks = self.nodes[1].generate(block_count)\n+\n+        # wait at most 10 seconds for expected file size before reading the content\n+        wait_until(lambda: os.path.isfile(self.block_filename) and os.stat(self.block_filename).st_size >= (block_count * 65), timeout=10)\n+\n+        # file content should equal the generated blocks hashes\n+        with open(self.block_filename, 'r') as f:\n+            assert_equal(sorted(blocks), sorted(f.read().splitlines()))\n+\n+        # Mine another 41 up-version blocks. -alertnotify should trigger on the 51st.\n+        self.log.info(\"test -alertnotify\")\n+        self.nodes[1].generate(41)\n         self.sync_all()\n \n         # Give bitcoind 10 seconds to write the alert notification\n@@ -40,4 +55,4 @@ def run_test(self):\n         assert_equal(alert_text, alert_text2)\n \n if __name__ == '__main__':\n-    ForkNotifyTest().main()\n+    NotificationsTest().main()",
        "previous_filename": "test/functional/forknotify.py"
      },
      {
        "sha": "43c3d0aa85778f00e409298ac60933ef64b5c890",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df18d29a02ae2804ae8490ea816fe0e88a971e8e/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df18d29a02ae2804ae8490ea816fe0e88a971e8e/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=df18d29a02ae2804ae8490ea816fe0e88a971e8e",
        "patch": "@@ -148,7 +148,7 @@\n     'example_test.py',\n     'txn_doublespend.py',\n     'txn_clone.py --mineblock',\n-    'forknotify.py',\n+    'notifications.py',\n     'invalidateblock.py',\n     'p2p-acceptblock.py',\n     'replace-by-fee.py',"
      }
    ]
  },
  {
    "sha": "857b32b4b280f13997cf2fa471802ad6a27075fb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NTdiMzJiNGIyODBmMTM5OTdjZjJmYTQ3MTgwMmFkNmEyNzA3NWZi",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-07-31T21:36:27Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-10-10T22:46:13Z"
      },
      "message": "[tests] Add -walletnotify functional test",
      "tree": {
        "sha": "a96fa620b8dece1098fb812339a79d81e6549f56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a96fa620b8dece1098fb812339a79d81e6549f56"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/857b32b4b280f13997cf2fa471802ad6a27075fb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/857b32b4b280f13997cf2fa471802ad6a27075fb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/857b32b4b280f13997cf2fa471802ad6a27075fb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/857b32b4b280f13997cf2fa471802ad6a27075fb/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "df18d29a02ae2804ae8490ea816fe0e88a971e8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df18d29a02ae2804ae8490ea816fe0e88a971e8e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/df18d29a02ae2804ae8490ea816fe0e88a971e8e"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 32,
      "deletions": 4
    },
    "files": [
      {
        "sha": "c88972ab91bd975a3c2b2c46f404c7889c6a26bf",
        "filename": "test/functional/notifications.py",
        "status": "modified",
        "additions": 32,
        "deletions": 4,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/857b32b4b280f13997cf2fa471802ad6a27075fb/test/functional/notifications.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/857b32b4b280f13997cf2fa471802ad6a27075fb/test/functional/notifications.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/notifications.py?ref=857b32b4b280f13997cf2fa471802ad6a27075fb",
        "patch": "@@ -2,23 +2,29 @@\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test the -alertnotify and -blocknotify options.\"\"\"\n+\"\"\"Test the -alertnotify, -blocknotify and -walletnotify options.\"\"\"\n import os\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, wait_until\n+from test_framework.util import assert_equal, wait_until, connect_nodes_bi\n \n class NotificationsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n+        self.setup_clean_chain = True\n \n     def setup_network(self):\n         self.alert_filename = os.path.join(self.options.tmpdir, \"alert.txt\")\n-        self.block_filename = os.path.join(self.options.tmpdir, 'blocks.txt')\n+        self.block_filename = os.path.join(self.options.tmpdir, \"blocks.txt\")\n+        self.tx_filename = os.path.join(self.options.tmpdir, \"transactions.txt\")\n+\n+        # -alertnotify and -blocknotify on node0, walletnotify on node1\n         self.extra_args = [[\"-blockversion=2\",\n                             \"-alertnotify=echo %%s >> %s\" % self.alert_filename,\n                             \"-blocknotify=echo %%s >> %s\" % self.block_filename],\n-                           [\"-blockversion=211\"]]\n+                           [\"-blockversion=211\",\n+                            \"-rescan\",\n+                            \"-walletnotify=echo %%s >> %s\" % self.tx_filename]]\n         super().setup_network()\n \n     def run_test(self):\n@@ -33,6 +39,28 @@ def run_test(self):\n         with open(self.block_filename, 'r') as f:\n             assert_equal(sorted(blocks), sorted(f.read().splitlines()))\n \n+        self.log.info(\"test -walletnotify\")\n+        # wait at most 10 seconds for expected file size before reading the content\n+        wait_until(lambda: os.path.isfile(self.tx_filename) and os.stat(self.tx_filename).st_size >= (block_count * 65), timeout=10)\n+\n+        # file content should equal the generated transaction hashes\n+        txids_rpc = list(map(lambda t: t['txid'], self.nodes[1].listtransactions(\"*\", block_count)))\n+        with open(self.tx_filename, 'r') as f:\n+            assert_equal(sorted(txids_rpc), sorted(f.read().splitlines()))\n+        os.remove(self.tx_filename)\n+\n+        self.log.info(\"test -walletnotify after rescan\")\n+        # restart node to rescan to force wallet notifications\n+        self.restart_node(1)\n+        connect_nodes_bi(self.nodes, 0, 1)\n+\n+        wait_until(lambda: os.path.isfile(self.tx_filename) and os.stat(self.tx_filename).st_size >= (block_count * 65), timeout=10)\n+\n+        # file content should equal the generated transaction hashes\n+        txids_rpc = list(map(lambda t: t['txid'], self.nodes[1].listtransactions(\"*\", block_count)))\n+        with open(self.tx_filename, 'r') as f:\n+            assert_equal(sorted(txids_rpc), sorted(f.read().splitlines()))\n+\n         # Mine another 41 up-version blocks. -alertnotify should trigger on the 51st.\n         self.log.info(\"test -alertnotify\")\n         self.nodes[1].generate(41)"
      }
    ]
  }
]