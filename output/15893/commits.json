[
  {
    "sha": "25b078658139c1aea58393a32ac5a79144d8d140",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNWIwNzg2NTgxMzljMWFlYTU4MzkzYTMyYWM1YTc5MTQ0ZDhkMTQw",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-04-25T21:01:01Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-04-26T01:01:09Z"
      },
      "message": "Fix missing input template by making minimal tx",
      "tree": {
        "sha": "696bebafeb0ca464416614d99681c5c5a610749b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/696bebafeb0ca464416614d99681c5c5a610749b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25b078658139c1aea58393a32ac5a79144d8d140",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25b078658139c1aea58393a32ac5a79144d8d140",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/25b078658139c1aea58393a32ac5a79144d8d140",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25b078658139c1aea58393a32ac5a79144d8d140/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c65c77c721b69f1782509145d62978d31c9a1d78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c65c77c721b69f1782509145d62978d31c9a1d78",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c65c77c721b69f1782509145d62978d31c9a1d78"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 5,
      "deletions": 15
    },
    "files": [
      {
        "sha": "d262dae5aa47b7f738f546d196c387ce868e3268",
        "filename": "test/functional/data/invalid_txs.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25b078658139c1aea58393a32ac5a79144d8d140/test/functional/data/invalid_txs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25b078658139c1aea58393a32ac5a79144d8d140/test/functional/data/invalid_txs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/data/invalid_txs.py?ref=25b078658139c1aea58393a32ac5a79144d8d140",
        "patch": "@@ -71,9 +71,13 @@ class InputMissing(BadTxTemplate):\n     reject_reason = \"bad-txns-vin-empty\"\n     expect_disconnect = False\n \n+    # We use a blank transaction here to make sure\n+    # it is interpreted as a non-witness transaction.\n+    # Otherwise the transaction will fail the\n+    # \"surpufluous witness\" check during deserialization\n+    # rather than the input count check.\n     def get_tx(self):\n         tx = CTransaction()\n-        tx.vout.append(CTxOut(0, sc.CScript([sc.OP_TRUE] * 100)))\n         tx.calc_sha256()\n         return tx\n "
      },
      {
        "sha": "72eb4f804f649baf4c7ac8810e7d0aa15afce6e2",
        "filename": "test/functional/feature_block.py",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25b078658139c1aea58393a32ac5a79144d8d140/test/functional/feature_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25b078658139c1aea58393a32ac5a79144d8d140/test/functional/feature_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_block.py?ref=25b078658139c1aea58393a32ac5a79144d8d140",
        "patch": "@@ -146,20 +146,6 @@ def run_test(self):\n             badtx = template.get_tx()\n             if TxTemplate != invalid_txs.InputMissing:\n                 self.sign_tx(badtx, attempt_spend_tx)\n-            else:\n-                # Segwit is active in regtest at this point, so to deserialize a\n-                # transaction without any inputs correctly, we set the outputs\n-                # to an empty list. This is a hack, as the serialization of an\n-                # empty list of outputs is deserialized as flags==0 and thus\n-                # deserialization of the outputs is skipped.\n-                # A policy check requires \"loose\" txs to be of a minimum size,\n-                # so vtx is not set to be empty in the TxTemplate class and we\n-                # only apply the workaround where txs are not \"loose\", i.e. in\n-                # blocks.\n-                #\n-                # The workaround has the purpose that both sides calculate\n-                # the same tx hash in the merkle tree\n-                badtx.vout = []\n             badtx.rehash()\n             badblock = self.update_block(blockname, [badtx])\n             self.send_blocks("
      }
    ]
  },
  {
    "sha": "cc556e4a30b4a32eab6722f590489d89b2875de3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYzU1NmU0YTMwYjRhMzJlYWI2NzIyZjU5MDQ4OWQ4OWIyODc1ZGUz",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-03-21T17:47:47Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-04-26T01:01:09Z"
      },
      "message": "Add test for superfluous witness record in deserialization",
      "tree": {
        "sha": "144dc01e1212721dc6be7291d3ff33c8dac84eb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/144dc01e1212721dc6be7291d3ff33c8dac84eb6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc556e4a30b4a32eab6722f590489d89b2875de3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc556e4a30b4a32eab6722f590489d89b2875de3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cc556e4a30b4a32eab6722f590489d89b2875de3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc556e4a30b4a32eab6722f590489d89b2875de3/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "25b078658139c1aea58393a32ac5a79144d8d140",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25b078658139c1aea58393a32ac5a79144d8d140",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/25b078658139c1aea58393a32ac5a79144d8d140"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 29,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5d8d4d4f151ee29536ef4d9b27d941104304bd60",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cc556e4a30b4a32eab6722f590489d89b2875de3/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cc556e4a30b4a32eab6722f590489d89b2875de3/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=cc556e4a30b4a32eab6722f590489d89b2875de3",
        "patch": "@@ -36,6 +36,7 @@\n     ser_vector,\n     sha256,\n     uint256_from_str,\n+    FromHex,\n )\n from test_framework.mininode import (\n     P2PInterface,\n@@ -77,6 +78,7 @@\n     disconnect_nodes,\n     get_bip9_status,\n     hex_str_to_bytes,\n+    assert_raises_rpc_error,\n )\n \n # The versionbit bit used to signal activation of SegWit\n@@ -269,6 +271,7 @@ def run_test(self):\n         self.test_non_standard_witness()\n         self.test_upgrade_after_activation()\n         self.test_witness_sigops()\n+        self.test_superfluous_witness()\n \n     # Individual tests\n \n@@ -2034,5 +2037,31 @@ def test_witness_sigops(self):\n \n         # TODO: test p2sh sigop counting\n \n+    def test_superfluous_witness(self):\n+        # Serialization of tx that puts witness flag to 1 always\n+        def serialize_with_bogus_witness(tx):\n+            flags = 1\n+            r = b\"\"\n+            r += struct.pack(\"<i\", tx.nVersion)\n+            if flags:\n+                dummy = []\n+                r += ser_vector(dummy)\n+                r += struct.pack(\"<B\", flags)\n+            r += ser_vector(tx.vin)\n+            r += ser_vector(tx.vout)\n+            if flags & 1:\n+                if (len(tx.wit.vtxinwit) != len(tx.vin)):\n+                    # vtxinwit must have the same length as vin\n+                    tx.wit.vtxinwit = tx.wit.vtxinwit[:len(tx.vin)]\n+                    for i in range(len(tx.wit.vtxinwit), len(tx.vin)):\n+                        tx.wit.vtxinwit.append(CTxInWitness())\n+                r += tx.wit.serialize()\n+            r += struct.pack(\"<I\", tx.nLockTime)\n+            return r\n+\n+        raw = self.nodes[0].createrawtransaction([{\"txid\":\"00\"*32, \"vout\":0}], {self.nodes[0].getnewaddress():1})\n+        tx = FromHex(CTransaction(), raw)\n+        assert_raises_rpc_error(-22, \"TX decode failed\", self.nodes[0].decoderawtransaction, serialize_with_bogus_witness(tx).hex())\n+\n if __name__ == '__main__':\n     SegWitTest().main()"
      }
    ]
  }
]