[
  {
    "sha": "fa78a2fc670d7162d6ba6d432188da6d6e5288ac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTc4YTJmYzY3MGQ3MTYyZDZiYTZkNDMyMTg4ZGE2ZDZlNTI4OGFj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-09-16T00:01:20Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-10-26T11:45:12Z"
      },
      "message": "[tests] Test that nodes respond to getdata with notfound\n\nIf a node has not announced a tx at all, then it should respond to\ngetdata messages for that tx with notfound, to avoid leaking tx\norigination privacy.",
      "tree": {
        "sha": "d4c9af1ec508c0b20bbb1a3ab3957a9d6916a67c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4c9af1ec508c0b20bbb1a3ab3957a9d6916a67c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa78a2fc670d7162d6ba6d432188da6d6e5288ac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJb0v5IAAoJEM4rdWl+aaVIIz4L/0IYU9stCG2JWsgudduV1YQi\nMYpjRFDDouGpKyrKownE6q3szN/4DfyJbKvXy7Z+Tg8SNnqoLDyeM5bCzMs5OdSy\nRn5Yz4SEW6HXToDh9rrJjgj/p3anz+D9Sc9/4qHbQfp2fmZUOsM9/pUTBrkw/kF0\nUvq2XwCRU1B52Su+5w798+ADATtlWXSs8stt8YVpFuKXsmz6JEddQXKKyaOXWPBZ\nqfyfeT34rOVKxH2zKAeltJFZ9gmryjTT5k9qOKrdKJEARPqgspkeQy/4YvGEEQ9o\nhvagU3wa/afnMHa6odWC6ub9gCXn3b4YONj7M2Vgu7Qs0mL9oNtUblkFf6g7eHZy\n86shlaFfQRFYy3Lwf3k9onMCgDg2bPXXpD1QQPyVMdX/F8vrLI1UKSA2rvICnziG\n6FRhDcava+YcFVWTmO71R9m9pBkze2rSMVX7DF/D11XiAA2Ac/SMvZ/4seFLYQm8\nKs5e5ljpULm/8IrS97NG48z7z4n3cfCsE9qLCZhZDw==\n=ZlRH\n-----END PGP SIGNATURE-----",
        "payload": "tree d4c9af1ec508c0b20bbb1a3ab3957a9d6916a67c\nparent 2b88f67e0bccbc23f30bf65f944f5cadad88f221\nauthor MarcoFalke <falke.marco@gmail.com> 1537056080 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1540554312 -0400\n\n[tests] Test that nodes respond to getdata with notfound\n\nIf a node has not announced a tx at all, then it should respond to\ngetdata messages for that tx with notfound, to avoid leaking tx\norigination privacy.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa78a2fc670d7162d6ba6d432188da6d6e5288ac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa78a2fc670d7162d6ba6d432188da6d6e5288ac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa78a2fc670d7162d6ba6d432188da6d6e5288ac/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2b88f67e0bccbc23f30bf65f944f5cadad88f221",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b88f67e0bccbc23f30bf65f944f5cadad88f221",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2b88f67e0bccbc23f30bf65f944f5cadad88f221"
      }
    ],
    "stats": {
      "total": 110,
      "additions": 109,
      "deletions": 1
    },
    "files": [
      {
        "sha": "dc4d475b2d894551615ab26144eb0afccaaf5775",
        "filename": "test/functional/p2p_leak_tx.py",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa78a2fc670d7162d6ba6d432188da6d6e5288ac/test/functional/p2p_leak_tx.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa78a2fc670d7162d6ba6d432188da6d6e5288ac/test/functional/p2p_leak_tx.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak_tx.py?ref=fa78a2fc670d7162d6ba6d432188da6d6e5288ac",
        "patch": "@@ -0,0 +1,57 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test that we don't leak txs to inbound peers that we haven't yet announced to\"\"\"\n+\n+from test_framework.messages import msg_getdata, CInv\n+from test_framework.mininode import P2PDataStore\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+)\n+\n+\n+class P2PNode(P2PDataStore):\n+    def on_inv(self, msg):\n+        pass\n+\n+\n+class P2PLeakTxTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        gen_node = self.nodes[0]  # The block and tx generating node\n+        gen_node.generate(1)\n+\n+        inbound_peer = self.nodes[0].add_p2p_connection(P2PNode())  # An \"attacking\" inbound peer\n+\n+        MAX_REPEATS = 100\n+        self.log.info(\"Running test up to {} times.\".format(MAX_REPEATS))\n+        for i in range(MAX_REPEATS):\n+            self.log.info('Run repeat {}'.format(i + 1))\n+            txid = gen_node.sendtoaddress(gen_node.getnewaddress(), 0.01)\n+\n+            want_tx = msg_getdata()\n+            want_tx.inv.append(CInv(t=1, h=int(txid, 16)))\n+            inbound_peer.last_message.pop('notfound', None)\n+            inbound_peer.send_message(want_tx)\n+            inbound_peer.sync_with_ping()\n+\n+            if inbound_peer.last_message.get('notfound'):\n+                self.log.debug('tx {} was not yet announced to us.'.format(txid))\n+                self.log.debug(\"node has responded with a notfound message. End test.\")\n+                assert_equal(inbound_peer.last_message['notfound'].vec[0].hash, int(txid, 16))\n+                inbound_peer.last_message.pop('notfound')\n+                break\n+            else:\n+                self.log.debug('tx {} was already announced to us. Try test again.'.format(txid))\n+                assert int(txid, 16) in [inv.hash for inv in inbound_peer.last_message['inv'].inv]\n+\n+\n+if __name__ == '__main__':\n+    P2PLeakTxTest().main()"
      },
      {
        "sha": "92acbb9a09d338edc763ddc77c846611688656a0",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa78a2fc670d7162d6ba6d432188da6d6e5288ac/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa78a2fc670d7162d6ba6d432188da6d6e5288ac/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=fa78a2fc670d7162d6ba6d432188da6d6e5288ac",
        "patch": "@@ -1232,6 +1232,23 @@ def __repr__(self):\n         return \"msg_mempool()\"\n \n \n+class msg_notfound:\n+    __slots__ = (\"vec\", )\n+    command = b\"notfound\"\n+\n+    def __init__(self, vec=None):\n+        self.vec = vec or []\n+\n+    def deserialize(self, f):\n+        self.vec = deser_vector(f, CInv)\n+\n+    def serialize(self):\n+        return ser_vector(self.vec)\n+\n+    def __repr__(self):\n+        return \"msg_notfound(vec=%s)\" % (repr(self.vec))\n+\n+\n class msg_sendheaders:\n     __slots__ = ()\n     command = b\"sendheaders\""
      },
      {
        "sha": "91fde136de74bfbc54032b1cc5a308060cce5720",
        "filename": "test/functional/test_framework/mininode.py",
        "status": "modified",
        "additions": 34,
        "deletions": 1,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa78a2fc670d7162d6ba6d432188da6d6e5288ac/test/functional/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa78a2fc670d7162d6ba6d432188da6d6e5288ac/test/functional/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/mininode.py?ref=fa78a2fc670d7162d6ba6d432188da6d6e5288ac",
        "patch": "@@ -21,7 +21,38 @@\n import sys\n import threading\n \n-from test_framework.messages import CBlockHeader, MIN_VERSION_SUPPORTED, msg_addr, msg_block, MSG_BLOCK, msg_blocktxn, msg_cmpctblock, msg_feefilter, msg_getaddr, msg_getblocks, msg_getblocktxn, msg_getdata, msg_getheaders, msg_headers, msg_inv, msg_mempool, msg_ping, msg_pong, msg_reject, msg_sendcmpct, msg_sendheaders, msg_tx, MSG_TX, MSG_TYPE_MASK, msg_verack, msg_version, NODE_NETWORK, NODE_WITNESS, sha256\n+from test_framework.messages import (\n+    CBlockHeader,\n+    MIN_VERSION_SUPPORTED,\n+    msg_addr,\n+    msg_block,\n+    MSG_BLOCK,\n+    msg_blocktxn,\n+    msg_cmpctblock,\n+    msg_feefilter,\n+    msg_getaddr,\n+    msg_getblocks,\n+    msg_getblocktxn,\n+    msg_getdata,\n+    msg_getheaders,\n+    msg_headers,\n+    msg_inv,\n+    msg_mempool,\n+    msg_notfound,\n+    msg_ping,\n+    msg_pong,\n+    msg_reject,\n+    msg_sendcmpct,\n+    msg_sendheaders,\n+    msg_tx,\n+    MSG_TX,\n+    MSG_TYPE_MASK,\n+    msg_verack,\n+    msg_version,\n+    NODE_NETWORK,\n+    NODE_WITNESS,\n+    sha256,\n+)\n from test_framework.util import wait_until\n \n logger = logging.getLogger(\"TestFramework.mininode\")\n@@ -40,6 +71,7 @@\n     b\"headers\": msg_headers,\n     b\"inv\": msg_inv,\n     b\"mempool\": msg_mempool,\n+    b\"notfound\": msg_notfound,\n     b\"ping\": msg_ping,\n     b\"pong\": msg_pong,\n     b\"reject\": msg_reject,\n@@ -295,6 +327,7 @@ def on_getdata(self, message): pass\n     def on_getheaders(self, message): pass\n     def on_headers(self, message): pass\n     def on_mempool(self, message): pass\n+    def on_notfound(self, message): pass\n     def on_pong(self, message): pass\n     def on_reject(self, message): pass\n     def on_sendcmpct(self, message): pass"
      },
      {
        "sha": "620554ffe46092036bc00ca74ac32b8fcde659ee",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa78a2fc670d7162d6ba6d432188da6d6e5288ac/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa78a2fc670d7162d6ba6d432188da6d6e5288ac/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=fa78a2fc670d7162d6ba6d432188da6d6e5288ac",
        "patch": "@@ -152,6 +152,7 @@\n     'feature_versionbits_warning.py',\n     'rpc_preciousblock.py',\n     'wallet_importprunedfunds.py',\n+    'p2p_leak_tx.py',\n     'rpc_signmessage.py',\n     'feature_nulldummy.py',\n     'mempool_accept.py',"
      }
    ]
  }
]