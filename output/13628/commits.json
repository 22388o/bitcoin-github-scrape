[
  {
    "sha": "ed8cb7d7f0a0219189a777fd41c7823b0f251f5f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDhjYjdkN2YwYTAyMTkxODlhNzc3ZmQ0MWM3ODIzYjBmMjUxZjVm",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "accounts@carldong.me",
        "date": "2018-07-11T00:41:19Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "accounts@carldong.me",
        "date": "2018-07-11T02:05:47Z"
      },
      "message": "DRYify gitian-build.sh",
      "tree": {
        "sha": "4b44d5ab55171fc3d30532f2fd487df07d0ff4f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b44d5ab55171fc3d30532f2fd487df07d0ff4f5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed8cb7d7f0a0219189a777fd41c7823b0f251f5f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed8cb7d7f0a0219189a777fd41c7823b0f251f5f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed8cb7d7f0a0219189a777fd41c7823b0f251f5f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed8cb7d7f0a0219189a777fd41c7823b0f251f5f/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fad42e8c4a9d625146f82bab9a038d945d40ac4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad42e8c4a9d625146f82bab9a038d945d40ac4f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fad42e8c4a9d625146f82bab9a038d945d40ac4f"
      }
    ],
    "stats": {
      "total": 140,
      "additions": 62,
      "deletions": 78
    },
    "files": [
      {
        "sha": "8f6b719a95855b502514c06f090f4b83f2c298df",
        "filename": "contrib/gitian-build.sh",
        "status": "modified",
        "additions": 62,
        "deletions": 78,
        "changes": 140,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed8cb7d7f0a0219189a777fd41c7823b0f251f5f/contrib/gitian-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed8cb7d7f0a0219189a777fd41c7823b0f251f5f/contrib/gitian-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.sh?ref=ed8cb7d7f0a0219189a777fd41c7823b0f251f5f",
        "patch": "@@ -251,6 +251,36 @@ git fetch\n git checkout ${COMMIT}\n popd\n \n+build() {\n+    #\n+    # Usage: build RELEASE DESCRIPTOR\n+    #   e.g. build linux gitian-linux.yml\n+    #\n+    release=\"$1\"\n+    baserelease=\"${release/-*/}\"\n+    descriptor=\"../bitcoin/contrib/gitian-descriptors/$2\"\n+\n+    echo \"\"\n+    echo \"Compiling ${VERSION} ${release}\"\n+    echo \"\"\n+\n+    # Different gbuild flags if we're codesigning\n+    if [[ \"${release}\" == *-signed ]]\n+    then\n+        ./bin/gbuild -i --commit \"signature=${COMMIT}\" \"${descriptor}\"\n+    else\n+        ./bin/gbuild -j \"${proc}\" -m \"${mem}\" --commit \"bitcoin=${COMMIT}\" --url \"bitcoin=${url}\" \"${descriptor}\"\n+        mv build/out/src/bitcoin-*.tar.gz \"../bitcoin-binaries/${VERSION}\"\n+    fi\n+\n+    # Move outputs to inputs if they will be codesigned\n+    [[ \"${release}\" == *-unsigned ]] && mv build/out/bitcoin-*-\"${release}\".tar.gz inputs/bitcoin-\"${release}\".tar.gz\n+\n+    mv build/out/bitcoin*-\"${baserelease}\"*.tar.gz \"../bitcoin-binaries/${VERSION}\"\n+\n+    ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release \"${VERSION}-${release}\" --destination ../gitian.sigs/ \"${descriptor}\"\n+}\n+\n # Build\n if [[ $build = true ]]\n then\n@@ -267,38 +297,16 @@ then\n \twget -N -P inputs $osslTarUrl\n \tmake -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n \n-\t# Linux\n-\tif [[ $linux = true ]]\n-\tthen\n-            echo \"\"\n-\t    echo \"Compiling ${VERSION} Linux\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t    ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t    mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/${VERSION}\n-\tfi\n-\t# Windows\n-\tif [[ $windows = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Compiling ${VERSION} Windows\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t    ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t    mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n-\t    mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../bitcoin-binaries/${VERSION}\n-\tfi\n-\t# Mac OSX\n-\tif [[ $osx = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Compiling ${VERSION} Mac OSX\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t    ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t    mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n-\t    mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../bitcoin-binaries/${VERSION}\n-\tfi\n+  for i in \"${linux}:linux\" \\\n+           \"${windows}:win-unsigned\" \\\n+           \"${osx}:osx-unsigned\"\n+  do\n+    willdo=\"${i/:*/}\"\n+    release=\"${i/*:/}\"\n+    descriptor=\"gitian-${release/-*/}.yml\"\n+\n+    [[ \"${willdo}\" = true ]] && build \"${release}\" \"${descriptor}\"\n+  done\n \tpopd\n \n         if [[ $commitFiles = true ]]\n@@ -319,32 +327,20 @@ fi\n # Verify the build\n if [[ $verify = true ]]\n then\n-\t# Linux\n \tpushd ./gitian-builder\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Linux\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t# Windows\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Windows\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t# Mac OSX\t\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Mac OSX\"\n-\techo \"\"\t\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t# Signed Windows\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Signed Windows\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t# Signed Mac OSX\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Signed Mac OSX\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\t\n+  for i in \"linux:gitian-linux.yml\" \\\n+           \"win-unsigned:gitian-win.yml\" \\\n+           \"osx-unsigned:gitian-osx.yml\" \\\n+           \"win-signed:gitian-win-signer.yml\" \\\n+           \"osx-signed:gitian-osx-signer.yml\"\n+  do\n+    release=\"${i/:*/}\"\n+    descriptor=\"${i/*:/}\"\n+\t  echo \"\"\n+\t  echo \"Verifying v${VERSION} ${release}\"\n+\t  echo \"\"\n+\t  ./bin/gverify -v -d ../gitian.sigs/ -r \"${VERSION}-${release}\" \"../bitcoin/contrib/gitian-descriptors/${descriptor}\"\n+  done\n \tpopd\n fi\n \n@@ -353,27 +349,15 @@ if [[ $sign = true ]]\n then\n \t\n         pushd ./gitian-builder\n-\t# Sign Windows\n-\tif [[ $windows = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Signing ${VERSION} Windows\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t    ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t    mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/${VERSION}\n-\t    mv build/out/bitcoin-*win32-setup.exe ../bitcoin-binaries/${VERSION}\n-\tfi\n-\t# Sign Mac OSX\n-\tif [[ $osx = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Signing ${VERSION} Mac OSX\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t    ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t    mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/${VERSION}/bitcoin-${VERSION}-osx.dmg\n-\tfi\n+  for i in \"${windows}:win-signed\" \\\n+           \"${osx}:osx-signed\"\n+  do\n+      willdo=\"${i/:*/}\"\n+      release=\"${i/*:/}\"\n+      descriptor=\"gitian-${release/signed/signer}.yml\"\n+\n+      [[ \"${willdo}\" = true ]] && build \"${release}\" \"${descriptor}\"\n+  done\n \tpopd\n \n         if [[ $commitFiles = true ]]"
      }
    ]
  },
  {
    "sha": "2a6150dc27a6ddbb519e44c911a2ac13ce9bb291",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYTYxNTBkYzI3YTZkZGJiNTE5ZTQ0YzkxMWEyYWMxM2NlOWJiMjkx",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "accounts@carldong.me",
        "date": "2018-07-11T02:13:03Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "accounts@carldong.me",
        "date": "2018-07-11T02:24:14Z"
      },
      "message": "Whitespace fixes.",
      "tree": {
        "sha": "7fe615ed7f844b6c611108eec12a5c77b5326f3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7fe615ed7f844b6c611108eec12a5c77b5326f3e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a6150dc27a6ddbb519e44c911a2ac13ce9bb291",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a6150dc27a6ddbb519e44c911a2ac13ce9bb291",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2a6150dc27a6ddbb519e44c911a2ac13ce9bb291",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a6150dc27a6ddbb519e44c911a2ac13ce9bb291/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed8cb7d7f0a0219189a777fd41c7823b0f251f5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed8cb7d7f0a0219189a777fd41c7823b0f251f5f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed8cb7d7f0a0219189a777fd41c7823b0f251f5f"
      }
    ],
    "stats": {
      "total": 320,
      "additions": 160,
      "deletions": 160
    },
    "files": [
      {
        "sha": "48211158b962375855460f916554e997d59b5e7c",
        "filename": "contrib/gitian-build.sh",
        "status": "modified",
        "additions": 160,
        "deletions": 160,
        "changes": 320,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a6150dc27a6ddbb519e44c911a2ac13ce9bb291/contrib/gitian-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a6150dc27a6ddbb519e44c911a2ac13ce9bb291/contrib/gitian-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.sh?ref=2a6150dc27a6ddbb519e44c911a2ac13ce9bb291",
        "patch": "@@ -60,99 +60,99 @@ while :; do\n     case $1 in\n         # Verify\n         -v|--verify)\n-\t    verify=true\n+            verify=true\n             ;;\n         # Build\n         -b|--build)\n-\t    build=true\n+            build=true\n             ;;\n         # Sign binaries\n         -s|--sign)\n-\t    sign=true\n+            sign=true\n             ;;\n         # Build then Sign\n         -B|--buildsign)\n-\t    sign=true\n-\t    build=true\n+            sign=true\n+            build=true\n             ;;\n         # PGP Signer\n         -S|--signer)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tSIGNER=\"$2\"\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"--signer\" requires a non-empty argument.'\n-\t\texit 1\n-\t    fi\n-           ;;\n+            if [ -n \"$2\" ]\n+            then\n+                SIGNER=\"$2\"\n+                shift\n+            else\n+                echo 'Error: \"--signer\" requires a non-empty argument.'\n+                exit 1\n+            fi\n+            ;;\n         # Operating Systems\n         -o|--os)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tlinux=false\n-\t\twindows=false\n-\t\tosx=false\n-\t\tif [[ \"$2\" = *\"l\"* ]]\n-\t\tthen\n-\t\t    linux=true\n-\t\tfi\n-\t\tif [[ \"$2\" = *\"w\"* ]]\n-\t\tthen\n-\t\t    windows=true\n-\t\tfi\n-\t\tif [[ \"$2\" = *\"x\"* ]]\n-\t\tthen\n-\t\t    osx=true\n-\t\tfi\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"--os\" requires an argument containing an l (for linux), w (for windows), or x (for Mac OSX)'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-\t# Help message\n-\t-h|--help)\n-\t    echo \"$usage\"\n-\t    exit 0\n-\t    ;;\n-\t# Commit or branch\n-\t-c|--commit)\n-\t    commit=true\n-\t    ;;\n-\t# Number of Processes\n-\t-j)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tproc=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"-j\" requires an argument'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-\t# Memory to allocate\n-\t-m)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tmem=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"-m\" requires an argument'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-\t# URL\n-\t-u)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\turl=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"-u\" requires an argument'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n+            if [ -n \"$2\" ]\n+            then\n+                linux=false\n+                windows=false\n+                osx=false\n+                if [[ \"$2\" = *\"l\"* ]]\n+                then\n+                    linux=true\n+                fi\n+                if [[ \"$2\" = *\"w\"* ]]\n+                then\n+                    windows=true\n+                fi\n+                if [[ \"$2\" = *\"x\"* ]]\n+                then\n+                    osx=true\n+                fi\n+                shift\n+            else\n+                echo 'Error: \"--os\" requires an argument containing an l (for linux), w (for windows), or x (for Mac OSX)'\n+                exit 1\n+            fi\n+            ;;\n+        # Help message\n+        -h|--help)\n+            echo \"$usage\"\n+            exit 0\n+            ;;\n+        # Commit or branch\n+        -c|--commit)\n+            commit=true\n+            ;;\n+        # Number of Processes\n+        -j)\n+            if [ -n \"$2\" ]\n+            then\n+                proc=$2\n+                shift\n+            else\n+                echo 'Error: \"-j\" requires an argument'\n+                exit 1\n+            fi\n+            ;;\n+        # Memory to allocate\n+        -m)\n+            if [ -n \"$2\" ]\n+            then\n+                mem=$2\n+                shift\n+            else\n+                echo 'Error: \"-m\" requires an argument'\n+                exit 1\n+            fi\n+            ;;\n+        # URL\n+        -u)\n+            if [ -n \"$2\" ]\n+            then\n+                url=$2\n+                shift\n+            else\n+                echo 'Error: \"-u\" requires an argument'\n+                exit 1\n+            fi\n+            ;;\n         # kvm\n         --kvm)\n             lxc=false\n@@ -170,8 +170,8 @@ while :; do\n         --setup)\n             setup=true\n             ;;\n-\t*)               # Default case: If no more options then break out of the loop.\n-             break\n+        *)               # Default case: If no more options then break out of the loop.\n+            break\n     esac\n     shift\n done\n@@ -223,7 +223,7 @@ fi\n # Add a \"v\" if no -c\n if [[ $commit = false ]]\n then\n-\tCOMMIT=\"v${VERSION}\"\n+    COMMIT=\"v${VERSION}\"\n fi\n echo ${COMMIT}\n \n@@ -284,92 +284,92 @@ build() {\n # Build\n if [[ $build = true ]]\n then\n-\t# Make output folder\n-\tmkdir -p ./bitcoin-binaries/${VERSION}\n-\t\n-\t# Build Dependencies\n-\techo \"\"\n-\techo \"Building Dependencies\"\n-\techo \"\"\n-\tpushd ./gitian-builder\t\n-\tmkdir -p inputs\n-\twget -N -P inputs $osslPatchUrl\n-\twget -N -P inputs $osslTarUrl\n-\tmake -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n-\n-  for i in \"${linux}:linux\" \\\n-           \"${windows}:win-unsigned\" \\\n-           \"${osx}:osx-unsigned\"\n-  do\n-    willdo=\"${i/:*/}\"\n-    release=\"${i/*:/}\"\n-    descriptor=\"gitian-${release/-*/}.yml\"\n-\n-    [[ \"${willdo}\" = true ]] && build \"${release}\" \"${descriptor}\"\n-  done\n-\tpopd\n-\n-        if [[ $commitFiles = true ]]\n-        then\n-\t    # Commit to gitian.sigs repo\n-            echo \"\"\n-            echo \"Committing ${VERSION} Unsigned Sigs\"\n-            echo \"\"\n-            pushd gitian.sigs\n-            git add ${VERSION}-linux/\"${SIGNER}\"\n-            git add ${VERSION}-win-unsigned/\"${SIGNER}\"\n-            git add ${VERSION}-osx-unsigned/\"${SIGNER}\"\n-            git commit -a -m \"Add ${VERSION} unsigned sigs for ${SIGNER}\"\n-            popd\n-        fi\n+    # Make output folder\n+    mkdir -p ./bitcoin-binaries/${VERSION}\n+\n+    # Build Dependencies\n+    echo \"\"\n+    echo \"Building Dependencies\"\n+    echo \"\"\n+\n+    pushd ./gitian-builder\n+    mkdir -p inputs\n+    wget -N -P inputs $osslPatchUrl\n+    wget -N -P inputs $osslTarUrl\n+    make -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n+\n+    for i in \"${linux}:linux\" \\\n+             \"${windows}:win-unsigned\" \\\n+             \"${osx}:osx-unsigned\"\n+    do\n+        willdo=\"${i/:*/}\"\n+        release=\"${i/*:/}\"\n+        descriptor=\"gitian-${release/-*/}.yml\"\n+\n+        [[ \"${willdo}\" = true ]] && build \"${release}\" \"${descriptor}\"\n+    done\n+    popd\n+\n+    if [[ $commitFiles = true ]]\n+    then\n+        # Commit to gitian.sigs repo\n+        echo \"\"\n+        echo \"Committing ${VERSION} Unsigned Sigs\"\n+        echo \"\"\n+        pushd gitian.sigs\n+        git add ${VERSION}-linux/\"${SIGNER}\"\n+        git add ${VERSION}-win-unsigned/\"${SIGNER}\"\n+        git add ${VERSION}-osx-unsigned/\"${SIGNER}\"\n+        git commit -a -m \"Add ${VERSION} unsigned sigs for ${SIGNER}\"\n+        popd\n+    fi\n fi\n \n # Verify the build\n if [[ $verify = true ]]\n then\n-\tpushd ./gitian-builder\n-  for i in \"linux:gitian-linux.yml\" \\\n-           \"win-unsigned:gitian-win.yml\" \\\n-           \"osx-unsigned:gitian-osx.yml\" \\\n-           \"win-signed:gitian-win-signer.yml\" \\\n-           \"osx-signed:gitian-osx-signer.yml\"\n-  do\n-    release=\"${i/:*/}\"\n-    descriptor=\"${i/*:/}\"\n-\t  echo \"\"\n-\t  echo \"Verifying v${VERSION} ${release}\"\n-\t  echo \"\"\n-\t  ./bin/gverify -v -d ../gitian.sigs/ -r \"${VERSION}-${release}\" \"../bitcoin/contrib/gitian-descriptors/${descriptor}\"\n-  done\n-\tpopd\n+    pushd ./gitian-builder\n+    for i in \"linux:gitian-linux.yml\" \\\n+             \"win-unsigned:gitian-win.yml\" \\\n+             \"osx-unsigned:gitian-osx.yml\" \\\n+             \"win-signed:gitian-win-signer.yml\" \\\n+             \"osx-signed:gitian-osx-signer.yml\"\n+    do\n+        release=\"${i/:*/}\"\n+        descriptor=\"${i/*:/}\"\n+        echo \"\"\n+        echo \"Verifying v${VERSION} ${release}\"\n+        echo \"\"\n+        ./bin/gverify -v -d ../gitian.sigs/ -r \"${VERSION}-${release}\" \"../bitcoin/contrib/gitian-descriptors/${descriptor}\"\n+    done\n+    popd\n fi\n \n # Sign binaries\n if [[ $sign = true ]]\n then\n-\t\n-        pushd ./gitian-builder\n-  for i in \"${windows}:win-signed\" \\\n-           \"${osx}:osx-signed\"\n-  do\n-      willdo=\"${i/:*/}\"\n-      release=\"${i/*:/}\"\n-      descriptor=\"gitian-${release/signed/signer}.yml\"\n-\n-      [[ \"${willdo}\" = true ]] && build \"${release}\" \"${descriptor}\"\n-  done\n-\tpopd\n-\n-        if [[ $commitFiles = true ]]\n-        then\n-            # Commit Sigs\n-            pushd gitian.sigs\n-            echo \"\"\n-            echo \"Committing ${VERSION} Signed Sigs\"\n-            echo \"\"\n-            git add ${VERSION}-win-signed/\"${SIGNER}\"\n-            git add ${VERSION}-osx-signed/\"${SIGNER}\"\n-            git commit -a -m \"Add ${VERSION} signed binary sigs for ${SIGNER}\"\n-            popd\n-        fi\n+    pushd ./gitian-builder\n+    for i in \"${windows}:win-signed\" \\\n+             \"${osx}:osx-signed\"\n+    do\n+        willdo=\"${i/:*/}\"\n+        release=\"${i/*:/}\"\n+        descriptor=\"gitian-${release/signed/signer}.yml\"\n+\n+        [[ \"${willdo}\" = true ]] && build \"${release}\" \"${descriptor}\"\n+    done\n+    popd\n+\n+    if [[ $commitFiles = true ]]\n+    then\n+        # Commit Sigs\n+        pushd gitian.sigs\n+        echo \"\"\n+        echo \"Committing ${VERSION} Signed Sigs\"\n+        echo \"\"\n+        git add ${VERSION}-win-signed/\"${SIGNER}\"\n+        git add ${VERSION}-osx-signed/\"${SIGNER}\"\n+        git commit -a -m \"Add ${VERSION} signed binary sigs for ${SIGNER}\"\n+        popd\n+    fi\n fi"
      }
    ]
  },
  {
    "sha": "8df0cb393d053cebedb3f2dad0d3f3388cee7dc9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZGYwY2IzOTNkMDUzY2ViZWRiM2YyZGFkMGQzZjMzODhjZWU3ZGM5",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "accounts@carldong.me",
        "date": "2018-07-11T02:25:22Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "accounts@carldong.me",
        "date": "2018-07-11T02:25:22Z"
      },
      "message": "gitian-build.sh: Conform to shellcheck, improve robustness",
      "tree": {
        "sha": "8da890b09089f3fe4f9b351d704c7c2a8c07b517",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8da890b09089f3fe4f9b351d704c7c2a8c07b517"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8df0cb393d053cebedb3f2dad0d3f3388cee7dc9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8df0cb393d053cebedb3f2dad0d3f3388cee7dc9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8df0cb393d053cebedb3f2dad0d3f3388cee7dc9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8df0cb393d053cebedb3f2dad0d3f3388cee7dc9/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2a6150dc27a6ddbb519e44c911a2ac13ce9bb291",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a6150dc27a6ddbb519e44c911a2ac13ce9bb291",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2a6150dc27a6ddbb519e44c911a2ac13ce9bb291"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 12,
      "deletions": 18
    },
    "files": [
      {
        "sha": "fc6841f1f106fad9a884424edd36a14443edced6",
        "filename": "contrib/gitian-build.sh",
        "status": "modified",
        "additions": 12,
        "deletions": 18,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8df0cb393d053cebedb3f2dad0d3f3388cee7dc9/contrib/gitian-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8df0cb393d053cebedb3f2dad0d3f3388cee7dc9/contrib/gitian-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.sh?ref=8df0cb393d053cebedb3f2dad0d3f3388cee7dc9",
        "patch": "@@ -29,7 +29,7 @@ signProg=\"gpg --detach-sign\"\n commitFiles=true\n \n # Help Message\n-read -d '' usage <<- EOF\n+read -rd '' usage <<- EOF\n Usage: $scriptName [-c|u|v|b|s|B|o|h|j|m|] signer version\n \n Run this script from the directory containing the bitcoin, gitian-builder, gitian.sigs, and bitcoin-detached-sigs.\n@@ -177,10 +177,7 @@ while :; do\n done\n \n # Set up LXC\n-if [[ $lxc = true ]]\n-then\n-    export USE_LXC=1\n-fi\n+[[ $lxc = true ]] && export USE_LXC=1\n \n # Check for OSX SDK\n if [[ ! -e \"gitian-builder/inputs/MacOSX10.11.sdk.tar.gz\" && $osx == true ]]\n@@ -221,11 +218,8 @@ then\n fi\n \n # Add a \"v\" if no -c\n-if [[ $commit = false ]]\n-then\n-    COMMIT=\"v${VERSION}\"\n-fi\n-echo ${COMMIT}\n+[[ $commit = false ]] && COMMIT=\"v${VERSION}\"\n+echo \"${COMMIT}\"\n \n # Setup build environment\n if [[ $setup = true ]]\n@@ -248,7 +242,7 @@ fi\n # Set up build\n pushd ./bitcoin\n git fetch\n-git checkout ${COMMIT}\n+git checkout \"${COMMIT}\"\n popd\n \n build() {\n@@ -285,7 +279,7 @@ build() {\n if [[ $build = true ]]\n then\n     # Make output folder\n-    mkdir -p ./bitcoin-binaries/${VERSION}\n+    mkdir -p \"./bitcoin-binaries/${VERSION}\"\n \n     # Build Dependencies\n     echo \"\"\n@@ -296,7 +290,7 @@ then\n     mkdir -p inputs\n     wget -N -P inputs $osslPatchUrl\n     wget -N -P inputs $osslTarUrl\n-    make -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n+    make -C ../bitcoin/depends download SOURCES_PATH=\"$(pwd)/cache/common\"\n \n     for i in \"${linux}:linux\" \\\n              \"${windows}:win-unsigned\" \\\n@@ -317,9 +311,9 @@ then\n         echo \"Committing ${VERSION} Unsigned Sigs\"\n         echo \"\"\n         pushd gitian.sigs\n-        git add ${VERSION}-linux/\"${SIGNER}\"\n-        git add ${VERSION}-win-unsigned/\"${SIGNER}\"\n-        git add ${VERSION}-osx-unsigned/\"${SIGNER}\"\n+        git add \"${VERSION}-linux/${SIGNER}\"\n+        git add \"${VERSION}-win-unsigned/${SIGNER}\"\n+        git add \"${VERSION}-osx-unsigned/${SIGNER}\"\n         git commit -a -m \"Add ${VERSION} unsigned sigs for ${SIGNER}\"\n         popd\n     fi\n@@ -367,8 +361,8 @@ then\n         echo \"\"\n         echo \"Committing ${VERSION} Signed Sigs\"\n         echo \"\"\n-        git add ${VERSION}-win-signed/\"${SIGNER}\"\n-        git add ${VERSION}-osx-signed/\"${SIGNER}\"\n+        git add \"${VERSION}-win-signed/${SIGNER}\"\n+        git add \"${VERSION}-osx-signed/${SIGNER}\"\n         git commit -a -m \"Add ${VERSION} signed binary sigs for ${SIGNER}\"\n         popd\n     fi"
      }
    ]
  }
]