vasild,2020-06-01 12:58:28,"Notice: this is just one possible fix. Other possible fixes are:\n\n1. Reverse the other access path, so we always have the order as `m_cached_tip_mutex`, `cs_main`. I think this would require bigger changes.\n\n2. Ditch `m_cached_tip_mutex` and protect `ClientModel::m_cached_tip_blocks` by `cs_main`. Adding more stuff under the protection of `cs_main` would in general reduce concurrency. Mayb",https://github.com/bitcoin/bitcoin/pull/19132#issuecomment-636846505,636846505,
furszy,2020-06-01 17:20:58,"Hmm, good catch.\n\nWould actually think it on the other way around. The problem shouldn't be on the slot side (the slot can be inside the same process or be another process -- GUI division -- or whatever). Better to review the reason behind `cs_main` being locked on the signal trigger side on the first place.\n\nWhy not doing the same as what is being done on the `NotifyHeaderTip` function. T",https://github.com/bitcoin/bitcoin/pull/19132#issuecomment-636997831,636997831,
MarcoFalke,2020-06-01 17:37:33,See commit d86edd3d3093be4c00d2c6a6fde6dfa77e2f4855,https://github.com/bitcoin/bitcoin/pull/19132#issuecomment-637005942,637005942,
jonasschnelli,2020-06-05 07:22:47,Tested ACK f46b678acff0b2e75e26aa50b14d935b3d251a2a,https://github.com/bitcoin/bitcoin/pull/19132#issuecomment-639306306,639306306,
MarcoFalke,2020-06-01 13:11:22,"```suggestion\n    tip = m_node.getBestBlockHash(); // Will lock `cs_main` (and release it). This is needed to be done early to not violate the implicit lock order cs_main -> m_cached_tip_mutex\n```\n\nI think the comment about the lock order can be combined with this comment?",https://github.com/bitcoin/bitcoin/pull/19132#discussion_r433224459,433224459,src/qt/clientmodel.cpp
MarcoFalke,2020-06-01 13:17:01,"If the requirement to check `IsNull` twice is dropped, then I think this whole function can be written shorter in just 4 lines of code:\n\n```cpp\n     uint256 tip{WITH_LOCK(m_cached_tip_mutex, return m_cached_tip_blocks)};\n     if (!tip.IsNull()) return tip;\n\n     tip = m_node.getBestBlockHash(); // Will lock `cs_main` (and release it). This is needed to be done early to not violate the ",https://github.com/bitcoin/bitcoin/pull/19132#discussion_r433227346,433227346,src/qt/clientmodel.cpp
vasild,2020-06-01 15:16:00,Combined the two comments and reworded them a little.,https://github.com/bitcoin/bitcoin/pull/19132#discussion_r433296213,433296213,src/qt/clientmodel.cpp
vasild,2020-06-01 15:27:04,"The above snippet can end up setting/overwriting `m_cached_tip_blocks` if it is not null. I.e. if it is null during the `if`, later some other thread sets it to some non null value (while we are calling `m_node.getBestBlockHash()`) and we end up overwriting what the other thread set.\n\nMaybe that is ok in this case or maybe it cannot happen due to some constraints outside of this function. This",https://github.com/bitcoin/bitcoin/pull/19132#discussion_r433302831,433302831,src/qt/clientmodel.cpp
