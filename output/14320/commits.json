[
  {
    "sha": "2d796faf62095e83f74337c26e7e1a8c3957cf3c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZDc5NmZhZjYyMDk1ZTgzZjc0MzM3YzI2ZTdlMWE4YzM5NTdjZjNj",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-09-25T13:56:16Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-10-24T15:08:16Z"
      },
      "message": "wallet: Fix duplicate fileid",
      "tree": {
        "sha": "7bd309a07b5e4fa231a39521ff8cc33fcd3b58be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7bd309a07b5e4fa231a39521ff8cc33fcd3b58be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d796faf62095e83f74337c26e7e1a8c3957cf3c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d796faf62095e83f74337c26e7e1a8c3957cf3c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2d796faf62095e83f74337c26e7e1a8c3957cf3c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d796faf62095e83f74337c26e7e1a8c3957cf3c/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5c25409d6851182c5e351720cee36812c229b77a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c25409d6851182c5e351720cee36812c229b77a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5c25409d6851182c5e351720cee36812c229b77a"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 26,
      "deletions": 12
    },
    "files": [
      {
        "sha": "25880f35290320d1a86fc0f503ebba003af798fc",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 12,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d796faf62095e83f74337c26e7e1a8c3957cf3c/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d796faf62095e83f74337c26e7e1a8c3957cf3c/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=2d796faf62095e83f74337c26e7e1a8c3957cf3c",
        "patch": "@@ -20,6 +20,7 @@\n #include <boost/thread.hpp>\n \n namespace {\n+\n //! Make sure database has a unique fileid within the environment. If it\n //! doesn't, throw an error. BDB caches do not work properly when more than one\n //! open database has the same fileid (values written to one database may show\n@@ -29,25 +30,19 @@ namespace {\n //! (https://docs.oracle.com/cd/E17275_01/html/programmer_reference/program_copy.html),\n //! so bitcoin should never create different databases with the same fileid, but\n //! this error can be triggered if users manually copy database files.\n-void CheckUniqueFileid(const BerkeleyEnvironment& env, const std::string& filename, Db& db)\n+void CheckUniqueFileid(const BerkeleyEnvironment& env, const std::string& filename, Db& db, WalletDatabaseFileId& fileid)\n {\n     if (env.IsMock()) return;\n \n-    u_int8_t fileid[DB_FILE_ID_LEN];\n-    int ret = db.get_mpf()->get_fileid(fileid);\n+    int ret = db.get_mpf()->get_fileid(fileid.value);\n     if (ret != 0) {\n         throw std::runtime_error(strprintf(\"BerkeleyBatch: Can't open database %s (get_fileid failed with %d)\", filename, ret));\n     }\n \n-    for (const auto& item : env.mapDb) {\n-        u_int8_t item_fileid[DB_FILE_ID_LEN];\n-        if (item.second && item.second->get_mpf()->get_fileid(item_fileid) == 0 &&\n-            memcmp(fileid, item_fileid, sizeof(fileid)) == 0) {\n-            const char* item_filename = nullptr;\n-            item.second->get_dbname(&item_filename, nullptr);\n+    for (const auto& item : env.m_fileids) {\n+        if (fileid == item.second && &fileid != &item.second) {\n             throw std::runtime_error(strprintf(\"BerkeleyBatch: Can't open database %s (duplicates fileid %s from %s)\", filename,\n-                HexStr(std::begin(item_fileid), std::end(item_fileid)),\n-                item_filename ? item_filename : \"(unknown database)\"));\n+                HexStr(std::begin(item.second.value), std::end(item.second.value)), item.first));\n         }\n     }\n }\n@@ -56,6 +51,11 @@ CCriticalSection cs_db;\n std::map<std::string, BerkeleyEnvironment> g_dbenvs GUARDED_BY(cs_db); //!< Map from directory name to open db environment.\n } // namespace\n \n+bool WalletDatabaseFileId::operator==(const WalletDatabaseFileId& rhs) const\n+{\n+    return memcmp(value, &rhs.value, sizeof(value)) == 0;\n+}\n+\n BerkeleyEnvironment* GetWalletEnv(const fs::path& wallet_path, std::string& database_filename)\n {\n     fs::path env_directory;\n@@ -504,7 +504,7 @@ BerkeleyBatch::BerkeleyBatch(BerkeleyDatabase& database, const char* pszMode, bo\n             // versions of BDB have an set_lk_exclusive method for this\n             // purpose, but the older version we use does not.)\n             for (const auto& env : g_dbenvs) {\n-                CheckUniqueFileid(env.second, strFilename, *pdb_temp);\n+                CheckUniqueFileid(env.second, strFilename, *pdb_temp, this->env->m_fileids[strFilename]);\n             }\n \n             pdb = pdb_temp.release();\n@@ -826,6 +826,13 @@ void BerkeleyDatabase::Flush(bool shutdown)\n             LOCK(cs_db);\n             g_dbenvs.erase(env->Directory().string());\n             env = nullptr;\n+        } else {\n+            // TODO: To avoid g_dbenvs.erase erasing the environment prematurely after the\n+            // first database shutdown when multiple databases are open in the same\n+            // environment, should replace raw database `env` pointers with shared or weak\n+            // pointers, or else separate the database and environment shutdowns so\n+            // environments can be shut down after databases.\n+            env->m_fileids.erase(strFile);\n         }\n     }\n }"
      },
      {
        "sha": "68a59607ae3e906eb947dfe0c1fc975957db2d64",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d796faf62095e83f74337c26e7e1a8c3957cf3c/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d796faf62095e83f74337c26e7e1a8c3957cf3c/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=2d796faf62095e83f74337c26e7e1a8c3957cf3c",
        "patch": "@@ -18,13 +18,19 @@\n #include <map>\n #include <memory>\n #include <string>\n+#include <unordered_map>\n #include <vector>\n \n #include <db_cxx.h>\n \n static const unsigned int DEFAULT_WALLET_DBLOGSIZE = 100;\n static const bool DEFAULT_WALLET_PRIVDB = true;\n \n+struct WalletDatabaseFileId {\n+    u_int8_t value[DB_FILE_ID_LEN];\n+    bool operator==(const WalletDatabaseFileId& rhs) const;\n+};\n+\n class BerkeleyEnvironment\n {\n private:\n@@ -38,6 +44,7 @@ class BerkeleyEnvironment\n     std::unique_ptr<DbEnv> dbenv;\n     std::map<std::string, int> mapFileUseCount;\n     std::map<std::string, Db*> mapDb;\n+    std::unordered_map<std::string, WalletDatabaseFileId> m_fileids;\n     std::condition_variable_any m_db_in_use;\n \n     BerkeleyEnvironment(const fs::path& env_directory);"
      }
    ]
  },
  {
    "sha": "4ea77320c5f0b275876be41ff530bb328ba0cb87",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZWE3NzMyMGM1ZjBiMjc1ODc2YmU0MWZmNTMwYmIzMjhiYTBjYjg3",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-10-24T04:33:50Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-10-24T15:08:16Z"
      },
      "message": "tests: add test case for loading copied wallet twice",
      "tree": {
        "sha": "319d9c8ce4687d01c23235fcdf935c13fa87b739",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/319d9c8ce4687d01c23235fcdf935c13fa87b739"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ea77320c5f0b275876be41ff530bb328ba0cb87",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ea77320c5f0b275876be41ff530bb328ba0cb87",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4ea77320c5f0b275876be41ff530bb328ba0cb87",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ea77320c5f0b275876be41ff530bb328ba0cb87/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2d796faf62095e83f74337c26e7e1a8c3957cf3c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d796faf62095e83f74337c26e7e1a8c3957cf3c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2d796faf62095e83f74337c26e7e1a8c3957cf3c"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "39df54ebfa8d8e22dfb90c4eb37467fa9da37298",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ea77320c5f0b275876be41ff530bb328ba0cb87/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ea77320c5f0b275876be41ff530bb328ba0cb87/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=4ea77320c5f0b275876be41ff530bb328ba0cb87",
        "patch": "@@ -229,6 +229,10 @@ def wallet_file(name):\n         # Fail to load if one wallet is a copy of another\n         assert_raises_rpc_error(-1, \"BerkeleyBatch: Can't open database w8_copy (duplicates fileid\", self.nodes[0].loadwallet, 'w8_copy')\n \n+        # Fail to load if one wallet is a copy of another, test this twice to make sure that we don't re-introduce #14304\n+        assert_raises_rpc_error(-1, \"BerkeleyBatch: Can't open database w8_copy (duplicates fileid\", self.nodes[0].loadwallet, 'w8_copy')\n+\n+\n         # Fail to load if wallet file is a symlink\n         if os.name != 'nt':\n             assert_raises_rpc_error(-4, \"Wallet file verification failed: Invalid -wallet path 'w8_symlink'\", self.nodes[0].loadwallet, 'w8_symlink')"
      }
    ]
  }
]