[
  {
    "sha": "ee5c1ce5a6155d502d8e779d3490d6cf66374c3f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZTVjMWNlNWE2MTU1ZDUwMmQ4ZTc3OWQzNDkwZDZjZjY2Mzc0YzNm",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-01-11T06:31:16Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-01-18T03:07:13Z"
      },
      "message": "Bug-fix: listsinceblock: use closest common ancestor when a block hash was provided for a chain that was not the main chain.",
      "tree": {
        "sha": "8747ac02a8749c889f347b3f8fc2028e5b1fc385",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8747ac02a8749c889f347b3f8fc2028e5b1fc385"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee5c1ce5a6155d502d8e779d3490d6cf66374c3f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee5c1ce5a6155d502d8e779d3490d6cf66374c3f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ee5c1ce5a6155d502d8e779d3490d6cf66374c3f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee5c1ce5a6155d502d8e779d3490d6cf66374c3f/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6696b4635ceb9b47aaa63244bff9032fa7b08354",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6696b4635ceb9b47aaa63244bff9032fa7b08354",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6696b4635ceb9b47aaa63244bff9032fa7b08354"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 14,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f99aed519aa1f136b6dc6f5aa243eb065cc7a14d",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 4,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee5c1ce5a6155d502d8e779d3490d6cf66374c3f/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee5c1ce5a6155d502d8e779d3490d6cf66374c3f/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=ee5c1ce5a6155d502d8e779d3490d6cf66374c3f",
        "patch": "@@ -1679,7 +1679,7 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n \n-    CBlockIndex *pindex = NULL;\n+    const CBlockIndex *pindex = NULL;\n     int target_confirms = 1;\n     isminefilter filter = ISMINE_SPENDABLE;\n \n@@ -1690,7 +1690,16 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n         blockId.SetHex(request.params[0].get_str());\n         BlockMap::iterator it = mapBlockIndex.find(blockId);\n         if (it != mapBlockIndex.end())\n+        {\n             pindex = it->second;\n+            if (chainActive[pindex->nHeight] != pindex)\n+            {\n+                // the block being asked for is a part of a deactivated chain;\n+                // we don't want to depend on its perceived height in the block\n+                // chain, we want to instead use the last common ancestor\n+                pindex = chainActive.FindFork(pindex);\n+            }\n+        }\n     }\n \n     if (request.params.size() > 1)\n@@ -1701,9 +1710,10 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter\");\n     }\n \n-    if(request.params.size() > 2)\n-        if(request.params[2].get_bool())\n-            filter = filter | ISMINE_WATCH_ONLY;\n+    if (request.params.size() > 2 && request.params[2].get_bool())\n+    {\n+        filter = filter | ISMINE_WATCH_ONLY;\n+    }\n \n     int depth = pindex ? (1 + chainActive.Height() - pindex->nHeight) : -1;\n "
      }
    ]
  },
  {
    "sha": "7ba0a00aae03b438e63d0ada9ff68a7618c7f907",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YmEwYTAwYWFlMDNiNDM4ZTYzZDBhZGE5ZmY2OGE3NjE4YzdmOTA3",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-01-11T11:02:25Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-01-18T03:31:20Z"
      },
      "message": "Testing: listsinceblock should not use orphan block height.",
      "tree": {
        "sha": "6503865cbbdd693375b3a4e5f2026451a83a4c64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6503865cbbdd693375b3a4e5f2026451a83a4c64"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7ba0a00aae03b438e63d0ada9ff68a7618c7f907",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ba0a00aae03b438e63d0ada9ff68a7618c7f907",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7ba0a00aae03b438e63d0ada9ff68a7618c7f907",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ba0a00aae03b438e63d0ada9ff68a7618c7f907/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ee5c1ce5a6155d502d8e779d3490d6cf66374c3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee5c1ce5a6155d502d8e779d3490d6cf66374c3f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ee5c1ce5a6155d502d8e779d3490d6cf66374c3f"
      }
    ],
    "stats": {
      "total": 81,
      "additions": 81,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f3aa34a44d8917aa6f936ac835abbfbd0b1a96c9",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7ba0a00aae03b438e63d0ada9ff68a7618c7f907/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7ba0a00aae03b438e63d0ada9ff68a7618c7f907/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=7ba0a00aae03b438e63d0ada9ff68a7618c7f907",
        "patch": "@@ -152,6 +152,7 @@\n     'nulldummy.py',\n     'import-rescan.py',\n     'rpcnamedargs.py',\n+    'listsinceblock.py',\n ]\n if ENABLE_ZMQ:\n     testScripts.append('zmq_test.py')"
      },
      {
        "sha": "ca67b8ecebbaa1f9fd7cc6acc6e8e7835771c3ef",
        "filename": "qa/rpc-tests/listsinceblock.py",
        "status": "added",
        "additions": 80,
        "deletions": 0,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7ba0a00aae03b438e63d0ada9ff68a7618c7f907/qa/rpc-tests/listsinceblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7ba0a00aae03b438e63d0ada9ff68a7618c7f907/qa/rpc-tests/listsinceblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/listsinceblock.py?ref=7ba0a00aae03b438e63d0ada9ff68a7618c7f907",
        "patch": "@@ -0,0 +1,80 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+class ListSinceBlockTest (BitcoinTestFramework):\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+\n+    def run_test (self):\n+        '''\n+        `listsinceblock` did not behave correctly when handed a block that was\n+        no longer in the main chain:\n+\n+             ab0\n+          /       \\\n+        aa1 [tx0]   bb1\n+         |           |\n+        aa2         bb2\n+         |           |\n+        aa3         bb3\n+                     |\n+                    bb4\n+\n+        Consider a client that has only seen block `aa3` above. It asks the node\n+        to `listsinceblock aa3`. But at some point prior the main chain switched\n+        to the bb chain.\n+\n+        Previously: listsinceblock would find height=4 for block aa3 and compare\n+        this to height=5 for the tip of the chain (bb4). It would then return\n+        results restricted to bb3-bb4.\n+\n+        Now: listsinceblock finds the fork at ab0 and returns results in the\n+        range bb1-bb4.\n+\n+        This test only checks that [tx0] is present.\n+        '''\n+\n+        assert_equal(self.is_network_split, False)\n+        self.nodes[2].generate(101)\n+        self.sync_all()\n+\n+        assert_equal(self.nodes[0].getbalance(), 0)\n+        assert_equal(self.nodes[1].getbalance(), 0)\n+        assert_equal(self.nodes[2].getbalance(), 50)\n+        assert_equal(self.nodes[3].getbalance(), 0)\n+\n+        # Split network into two\n+        self.split_network()\n+        assert_equal(self.is_network_split, True)\n+\n+        # send to nodes[0] from nodes[2]\n+        senttx = self.nodes[2].sendtoaddress(self.nodes[0].getnewaddress(), 1)\n+\n+        # generate on both sides\n+        lastblockhash = self.nodes[1].generate(6)[5]\n+        self.nodes[2].generate(7)\n+        print('lastblockhash=%s' % (lastblockhash))\n+\n+        self.sync_all()\n+\n+        self.join_network()\n+\n+        # listsinceblock(lastblockhash) should now include tx, as seen from nodes[0]\n+        lsbres = self.nodes[0].listsinceblock(lastblockhash)\n+        found = False\n+        for tx in lsbres['transactions']:\n+            if tx['txid'] == senttx:\n+                found = True\n+                break\n+        assert_equal(found, True)\n+\n+if __name__ == '__main__':\n+    ListSinceBlockTest().main()"
      }
    ]
  }
]