[
  {
    "sha": "fad389862725abe4351879e3333e47e9e5bf9e0c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQzODk4NjI3MjVhYmU0MzUxODc5ZTMzMzNlNDdlOWU1YmY5ZTBj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-08-13T11:42:43Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-08-13T11:41:52Z"
      },
      "message": "doc: move-only release notes of individual prs",
      "tree": {
        "sha": "9def60a67301a48760325ce63bdac319863000b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9def60a67301a48760325ce63bdac319863000b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad389862725abe4351879e3333e47e9e5bf9e0c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJbcW6AAAoJEM4rdWl+aaVI7qgL/R+EDjZvqo9eEzBkXLC2NtZh\nsE33zXPvwOBKnbK/AYFR2L4nFZhV6vBUDH8GCmusTRjW8uPFfc9adFFzFzCrOMqM\nkW8s0coPp3yl9j1Uqe/wz7x09M1Fu7qAHR7w18DCcbtGPnzH83un52kNccSsEtD2\nTwdcGNjcs9RQA6G7QqtH1MDyRsASyCQPPD9MoTug3VD1Awjhcqlox7eW9173EyJ1\nHRZX6vlf5UxozOb7A1+CIq1zjuY0FeNBr0xPjMhPIH6w1Pm/QpxQgjABNMVVzLGU\njKf5NKV5RoPtd7P2ErDD163VHAze69405WD/W4e2NDwJm54py1MNXgbYmxVR9C8C\nw2zKNY0MJNe2SKl23mSycmnp5j28GMs7GHZZUY98LndN3PcBQ+DqwfRUKUJ7+TEJ\nT7BvTvUOeNpnfH829ZxTZYZjm/Phb/edDbL7iZR1KudJ1VW+kAQhNQQdE9MVo4rp\nyYabArF6gVhfJF9mqd96amypECrlkl+BhJP1ThbwdQ==\n=DUHb\n-----END PGP SIGNATURE-----",
        "payload": "tree 9def60a67301a48760325ce63bdac319863000b0\nparent 73a09b445800aa80e2356f47f459ebf132888fa9\nauthor MarcoFalke <falke.marco@gmail.com> 1534160563 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1534160512 -0400\n\ndoc: move-only release notes of individual prs\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad389862725abe4351879e3333e47e9e5bf9e0c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad389862725abe4351879e3333e47e9e5bf9e0c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad389862725abe4351879e3333e47e9e5bf9e0c/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "73a09b445800aa80e2356f47f459ebf132888fa9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73a09b445800aa80e2356f47f459ebf132888fa9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/73a09b445800aa80e2356f47f459ebf132888fa9"
      }
    ],
    "stats": {
      "total": 223,
      "additions": 111,
      "deletions": 112
    },
    "files": [
      {
        "sha": "7e1967daf020a50c2cc98cdb59bc44fae623b349",
        "filename": "doc/release-notes-pr10267.md",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73a09b445800aa80e2356f47f459ebf132888fa9/doc/release-notes-pr10267.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73a09b445800aa80e2356f47f459ebf132888fa9/doc/release-notes-pr10267.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-pr10267.md?ref=73a09b445800aa80e2356f47f459ebf132888fa9",
        "patch": "@@ -1,13 +0,0 @@\n-Changed command-line options\n-----------------------------\n-\n-- `-includeconf=<file>` can be used to include additional configuration files.\n-  Only works inside the `bitcoin.conf` file, not inside included files or from\n-  command-line. Multiple files may be included. Can be disabled from command-\n-  line via `-noincludeconf`. Note that multi-argument commands like\n-  `-includeconf` will override preceding `-noincludeconf`, i.e.\n-\n-    noincludeconf=1\n-    includeconf=relative.conf\n-\n-  as bitcoin.conf will still include `relative.conf`."
      },
      {
        "sha": "a2eb8cd83707ca5b27f5a0f98262d4785fa3becc",
        "filename": "doc/release-notes-pr10740.md",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73a09b445800aa80e2356f47f459ebf132888fa9/doc/release-notes-pr10740.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73a09b445800aa80e2356f47f459ebf132888fa9/doc/release-notes-pr10740.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-pr10740.md?ref=73a09b445800aa80e2356f47f459ebf132888fa9",
        "patch": "@@ -1,10 +0,0 @@\n-Dynamic loading and creation of wallets\n----------------------------------------\n-\n-Previously, wallets could only be loaded or created at startup, by specifying `-wallet` parameters on the command line or in the bitcoin.conf file. It is now possible to load, create and unload wallets dynamically at runtime:\n-\n-- Existing wallets can be loaded by calling the `loadwallet` RPC. The wallet can be specified as file/directory basename (which must be located in the `walletdir` directory), or as an absolute path to a file/directory.\n-- New wallets can be created (and loaded) by calling the `createwallet` RPC. The provided name must not match a wallet file in the `walletdir` directory or the name of a wallet that is currently loaded.\n-- Loaded wallets can be unloaded by calling the `unloadwallet` RPC.\n-\n-This feature is currently only available through the RPC interface."
      },
      {
        "sha": "293a00ad75db42b8bc3c42d475369e58dff7b380",
        "filename": "doc/release-notes-pr12257.md",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73a09b445800aa80e2356f47f459ebf132888fa9/doc/release-notes-pr12257.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73a09b445800aa80e2356f47f459ebf132888fa9/doc/release-notes-pr12257.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-pr12257.md?ref=73a09b445800aa80e2356f47f459ebf132888fa9",
        "patch": "@@ -1,9 +0,0 @@\n-Notable changes\n-===============\n-\n-Coin selection\n---------------\n-- A new `-avoidpartialspends` flag has been added (default=false). If enabled, the wallet will try to spend UTXO's that point at the same destination\n-  together. This is a privacy increase, as there will no longer be cases where a wallet will inadvertently spend only parts of the coins sent to\n-  the same address (note that if someone were to send coins to that address after it was used, those coins will still be included in future\n-  coin selections)."
      },
      {
        "sha": "b493908716c9cbc9f8db932961873b5d0e0a29dc",
        "filename": "doc/release-notes-pr12823.md",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73a09b445800aa80e2356f47f459ebf132888fa9/doc/release-notes-pr12823.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73a09b445800aa80e2356f47f459ebf132888fa9/doc/release-notes-pr12823.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-pr12823.md?ref=73a09b445800aa80e2356f47f459ebf132888fa9",
        "patch": "@@ -1,20 +0,0 @@\n-Configuration sections for testnet and regtest\n-----------------------------------------------\n-\n-It is now possible for a single configuration file to set different\n-options for different networks. This is done by using sections or by\n-prefixing the option with the network, such as:\n-\n-    main.uacomment=bitcoin\n-    test.uacomment=bitcoin-testnet\n-    regtest.uacomment=regtest\n-    [main]\n-    mempoolsize=300\n-    [test]\n-    mempoolsize=100\n-    [regtest]\n-    mempoolsize=20\n-\n-The `addnode=`, `connect=`, `port=`, `bind=`, `rpcport=`, `rpcbind=`\n-and `wallet=` options will only apply to mainnet when specified in the\n-configuration file, unless a network is specified."
      },
      {
        "sha": "f4a95bd40fa45846761bd6d385bd591ef99620c2",
        "filename": "doc/release-notes-pr12892.md",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73a09b445800aa80e2356f47f459ebf132888fa9/doc/release-notes-pr12892.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73a09b445800aa80e2356f47f459ebf132888fa9/doc/release-notes-pr12892.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-pr12892.md?ref=73a09b445800aa80e2356f47f459ebf132888fa9",
        "patch": "@@ -1,37 +0,0 @@\n-'label' and 'account' APIs for wallet\n--------------------------------------\n-\n-A new 'label' API has been introduced for the wallet. This is intended as a\n-replacement for the deprecated 'account' API. The 'account' can continue to\n-be used in V0.17 by starting bitcoind with the '-deprecatedrpc=accounts'\n-argument, and will be fully removed in V0.18.\n-\n-The label RPC methods mirror the account functionality, with the following functional differences:\n-\n-- Labels can be set on any address, not just receiving addresses. This functionality was previously only available through the GUI.\n-- Labels can be deleted by reassigning all addresses using the `setlabel` RPC method.\n-- There isn't support for sending transactions _from_ a label, or for determining which label a transaction was sent from.\n-- Labels do not have a balance.\n-\n-Here are the changes to RPC methods:\n-\n-| Deprecated Method       | New Method            | Notes       |\n-| :---------------------- | :-------------------- | :-----------|\n-| `getaccount`            | `getaddressinfo`      | `getaddressinfo` returns a json object with address information instead of just the name of the account as a string. |\n-| `getaccountaddress`     | n/a                   | There is no replacement for `getaccountaddress` since labels do not have an associated receive address. |\n-| `getaddressesbyaccount` | `getaddressesbylabel` | `getaddressesbylabel` returns a json object with the addresses as keys, instead of a list of strings. |\n-| `getreceivedbyaccount`  | `getreceivedbylabel`  | _no change in behavior_ |\n-| `listaccounts`          | `listlabels`          | `listlabels` does not return a balance or accept `minconf` and `watchonly` arguments. |\n-| `listreceivedbyaccount` | `listreceivedbylabel` | Both methods return new `label` fields, along with `account` fields for backward compatibility. |\n-| `move`                  | n/a                   | _no replacement_ |\n-| `sendfrom`              | n/a                   | _no replacement_ |\n-| `setaccount`            | `setlabel`            | Both methods now: <ul><li>allow assigning labels to any address, instead of raising an error if the address is not receiving address.<li>delete the previous label associated with an address when the final address using that label is reassigned to a different label, instead of making an implicit `getaccountaddress` call to ensure the previous label still has a receiving address. |\n-\n-| Changed Method         | Notes   |\n-| :--------------------- | :------ |\n-| `addmultisigaddress`   | Renamed `account` named parameter to `label`. Still accepts `account` for backward compatibility if running with '-deprecatedrpc=accounts'. |\n-| `getnewaddress`        | Renamed `account` named parameter to `label`. Still accepts `account` for backward compatibility. if running with '-deprecatedrpc=accounts' |\n-| `listunspent`          | Returns new `label` fields. `account` field will be returned for backward compatibility if running with '-deprecatedrpc=accounts' |\n-| `sendmany`             | The `account` named parameter has been renamed to `dummy`. If provided, the `dummy` parameter must be set to the empty string, unless running with the `-deprecatedrpc=accounts` argument (in which case functionality is unchanged). |\n-| `listtransactions`     | The `account` named parameter has been renamed to `dummy`. If provided, the `dummy` parameter must be set to the string `*`, unless running with the `-deprecatedrpc=accounts` argument (in which case functionality is unchanged). |\n-| `getbalance`           | `account`, `minconf` and `include_watchonly` parameters are deprecated, and can only be used if running with '-deprecatedrpc=accounts' |"
      },
      {
        "sha": "92e7e23217c0373f045318a3c9a64992912304eb",
        "filename": "doc/release-notes-pr12924.md",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73a09b445800aa80e2356f47f459ebf132888fa9/doc/release-notes-pr12924.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73a09b445800aa80e2356f47f459ebf132888fa9/doc/release-notes-pr12924.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-pr12924.md?ref=73a09b445800aa80e2356f47f459ebf132888fa9",
        "patch": "@@ -1,12 +0,0 @@\n-RPC changes\n-------------\n-\n-### Low-level changes\n-\n-- The `getwalletinfo` RPC method now returns an `hdseedid` value, which is always the same as the incorrectly-named `hdmasterkeyid` value. `hdmasterkeyid` will be removed in V0.18.\n-- The `getaddressinfo` RPC method now returns an `hdseedid` value, which is always the same as the incorrectly-named `hdmasterkeyid` value. `hdmasterkeyid` will be removed in V0.18.\n-\n-Other API changes\n------------------\n-\n-- The `inactivehdmaster` property in the `dumpwallet` output has been corrected to `inactivehdseed`"
      },
      {
        "sha": "3ab4a984dbad651184ba3e9ea19bc9894d4d80b3",
        "filename": "doc/release-notes-pr13033.md",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73a09b445800aa80e2356f47f459ebf132888fa9/doc/release-notes-pr13033.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73a09b445800aa80e2356f47f459ebf132888fa9/doc/release-notes-pr13033.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-pr13033.md?ref=73a09b445800aa80e2356f47f459ebf132888fa9",
        "patch": "@@ -1,11 +0,0 @@\n-Transaction index changes\n--------------------------\n-\n-The transaction index is now built separately from the main node procedure,\n-meaning the `-txindex` flag can be toggled without a full reindex. If bitcoind\n-is run with `-txindex` on a node that is already partially or fully synced\n-without one, the transaction index will be built in the background and become\n-available once caught up. When switching from running `-txindex` to running\n-without the flag, the transaction index database will *not* be deleted\n-automatically, meaning it could be turned back on at a later time without a full\n-resync."
      },
      {
        "sha": "a24a13408b56a52a03ccfabcbc57b89638499574",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 111,
        "deletions": 0,
        "changes": 111,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad389862725abe4351879e3333e47e9e5bf9e0c/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad389862725abe4351879e3333e47e9e5bf9e0c/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=fad389862725abe4351879e3333e47e9e5bf9e0c",
        "patch": "@@ -59,6 +59,20 @@ support versions of macOS older than 10.10.\n Notable changes\n ===============\n \n+Changed command-line options\n+----------------------------\n+\n+- `-includeconf=<file>` can be used to include additional configuration files.\n+  Only works inside the `bitcoin.conf` file, not inside included files or from\n+  command-line. Multiple files may be included. Can be disabled from command-\n+  line via `-noincludeconf`. Note that multi-argument commands like\n+  `-includeconf` will override preceding `-noincludeconf`, i.e.\n+\n+    noincludeconf=1\n+    includeconf=relative.conf\n+\n+  as bitcoin.conf will still include `relative.conf`.\n+\n GUI changes\n -----------\n \n@@ -106,6 +120,83 @@ For backwards compatibility, wallet paths that are names of existing data files\n in the `-walletdir` directory will continue to be accepted and interpreted the\n same as before.\n \n+Dynamic loading and creation of wallets\n+---------------------------------------\n+\n+Previously, wallets could only be loaded or created at startup, by specifying `-wallet` parameters on the command line or in the bitcoin.conf file. It is now possible to load, create and unload wallets dynamically at runtime:\n+\n+- Existing wallets can be loaded by calling the `loadwallet` RPC. The wallet can be specified as file/directory basename (which must be located in the `walletdir` directory), or as an absolute path to a file/directory.\n+- New wallets can be created (and loaded) by calling the `createwallet` RPC. The provided name must not match a wallet file in the `walletdir` directory or the name of a wallet that is currently loaded.\n+- Loaded wallets can be unloaded by calling the `unloadwallet` RPC.\n+\n+This feature is currently only available through the RPC interface.\n+\n+Coin selection\n+--------------\n+- A new `-avoidpartialspends` flag has been added (default=false). If enabled, the wallet will try to spend UTXO's that point at the same destination\n+  together. This is a privacy increase, as there will no longer be cases where a wallet will inadvertently spend only parts of the coins sent to\n+  the same address (note that if someone were to send coins to that address after it was used, those coins will still be included in future\n+  coin selections).\n+\n+Configuration sections for testnet and regtest\n+----------------------------------------------\n+\n+It is now possible for a single configuration file to set different\n+options for different networks. This is done by using sections or by\n+prefixing the option with the network, such as:\n+\n+    main.uacomment=bitcoin\n+    test.uacomment=bitcoin-testnet\n+    regtest.uacomment=regtest\n+    [main]\n+    mempoolsize=300\n+    [test]\n+    mempoolsize=100\n+    [regtest]\n+    mempoolsize=20\n+\n+The `addnode=`, `connect=`, `port=`, `bind=`, `rpcport=`, `rpcbind=`\n+and `wallet=` options will only apply to mainnet when specified in the\n+configuration file, unless a network is specified.\n+\n+'label' and 'account' APIs for wallet\n+-------------------------------------\n+\n+A new 'label' API has been introduced for the wallet. This is intended as a\n+replacement for the deprecated 'account' API. The 'account' can continue to\n+be used in V0.17 by starting bitcoind with the '-deprecatedrpc=accounts'\n+argument, and will be fully removed in V0.18.\n+\n+The label RPC methods mirror the account functionality, with the following functional differences:\n+\n+- Labels can be set on any address, not just receiving addresses. This functionality was previously only available through the GUI.\n+- Labels can be deleted by reassigning all addresses using the `setlabel` RPC method.\n+- There isn't support for sending transactions _from_ a label, or for determining which label a transaction was sent from.\n+- Labels do not have a balance.\n+\n+Here are the changes to RPC methods:\n+\n+| Deprecated Method       | New Method            | Notes       |\n+| :---------------------- | :-------------------- | :-----------|\n+| `getaccount`            | `getaddressinfo`      | `getaddressinfo` returns a json object with address information instead of just the name of the account as a string. |\n+| `getaccountaddress`     | n/a                   | There is no replacement for `getaccountaddress` since labels do not have an associated receive address. |\n+| `getaddressesbyaccount` | `getaddressesbylabel` | `getaddressesbylabel` returns a json object with the addresses as keys, instead of a list of strings. |\n+| `getreceivedbyaccount`  | `getreceivedbylabel`  | _no change in behavior_ |\n+| `listaccounts`          | `listlabels`          | `listlabels` does not return a balance or accept `minconf` and `watchonly` arguments. |\n+| `listreceivedbyaccount` | `listreceivedbylabel` | Both methods return new `label` fields, along with `account` fields for backward compatibility. |\n+| `move`                  | n/a                   | _no replacement_ |\n+| `sendfrom`              | n/a                   | _no replacement_ |\n+| `setaccount`            | `setlabel`            | Both methods now: <ul><li>allow assigning labels to any address, instead of raising an error if the address is not receiving address.<li>delete the previous label associated with an address when the final address using that label is reassigned to a different label, instead of making an implicit `getaccountaddress` call to ensure the previous label still has a receiving address. |\n+\n+| Changed Method         | Notes   |\n+| :--------------------- | :------ |\n+| `addmultisigaddress`   | Renamed `account` named parameter to `label`. Still accepts `account` for backward compatibility if running with '-deprecatedrpc=accounts'. |\n+| `getnewaddress`        | Renamed `account` named parameter to `label`. Still accepts `account` for backward compatibility. if running with '-deprecatedrpc=accounts' |\n+| `listunspent`          | Returns new `label` fields. `account` field will be returned for backward compatibility if running with '-deprecatedrpc=accounts' |\n+| `sendmany`             | The `account` named parameter has been renamed to `dummy`. If provided, the `dummy` parameter must be set to the empty string, unless running with the `-deprecatedrpc=accounts` argument (in which case functionality is unchanged). |\n+| `listtransactions`     | The `account` named parameter has been renamed to `dummy`. If provided, the `dummy` parameter must be set to the string `*`, unless running with the `-deprecatedrpc=accounts` argument (in which case functionality is unchanged). |\n+| `getbalance`           | `account`, `minconf` and `include_watchonly` parameters are deprecated, and can only be used if running with '-deprecatedrpc=accounts' |\n+\n Low-level RPC changes\n ---------------------\n \n@@ -130,6 +221,14 @@ Low-level RPC changes\n   `importmulti` with hex script argument). `signrawtransaction*` also still\n   works for them.\n \n+- The `getwalletinfo` RPC method now returns an `hdseedid` value, which is always the same as the incorrectly-named `hdmasterkeyid` value. `hdmasterkeyid` will be removed in V0.18.\n+- The `getaddressinfo` RPC method now returns an `hdseedid` value, which is always the same as the incorrectly-named `hdmasterkeyid` value. `hdmasterkeyid` will be removed in V0.18.\n+\n+Other API changes\n+-----------------\n+\n+- The `inactivehdmaster` property in the `dumpwallet` output has been corrected to `inactivehdseed`\n+\n ### Logging\n \n - The log timestamp format is now ISO 8601 (e.g. \"2018-02-28T12:34:56Z\").\n@@ -139,6 +238,18 @@ Low-level RPC changes\n   disables logging to debug.log. Instead, logging to file can be explicitly disabled\n   by setting `-debuglogfile=0`.\n \n+Transaction index changes\n+-------------------------\n+\n+The transaction index is now built separately from the main node procedure,\n+meaning the `-txindex` flag can be toggled without a full reindex. If bitcoind\n+is run with `-txindex` on a node that is already partially or fully synced\n+without one, the transaction index will be built in the background and become\n+available once caught up. When switching from running `-txindex` to running\n+without the flag, the transaction index database will *not* be deleted\n+automatically, meaning it could be turned back on at a later time without a full\n+resync.\n+\n Miner block size removed\n ------------------------\n "
      }
    ]
  }
]