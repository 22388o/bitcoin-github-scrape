[
  {
    "sha": "c5650a5466eaa2a1f5779ce797c2857ba8399d4b",
    "node_id": "C_kwDOABII59oAKGM1NjUwYTU0NjZlYWEyYTFmNTc3OWNlNzk3YzI4NTdiYTgzOTlkNGI",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-11-22T10:22:18Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-11-22T10:58:57Z"
      },
      "message": "doc: cleanup wallet build docs",
      "tree": {
        "sha": "d2a4d93bef15b36e06131c44997ec75ecc93631f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d2a4d93bef15b36e06131c44997ec75ecc93631f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c5650a5466eaa2a1f5779ce797c2857ba8399d4b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmGbd/IACgkQLuufXMCV\nJsGEMw/+M1n1fudKV/BP4f5+S4x0y/20yVwiP2iqERxwIU9xuVe7eD2GTn99naz4\nxP7lbQgPW75znNUEnyZjhgdIXBOSnm4p1mBOXAmk3btooOYpGeef2ZQDRMIOxlRB\n+QNIf3H+L8l04/VVSAKN2hEgt2tuVAopB3+ym9j4PcIqS+571Ule6KxaFn6ZA+ZV\n5su5OhSASA+YacQGWwrhE7Xj8LhoR1DHXRkJjd8EznF8jaS5L5Q7jBAhX/0LLkhl\njZWQf7hjHtnYo8ztP8sKBQ44C6GbcneSqas5Wn39v1041l8Q1B53k7SdXlNci4xG\nd6YkZP3rdevmXqsuiCqM8EprzKVXQ8rS+LxL7Is7nzmXH3iKzQqSKzN57yvrryJN\nZlhPcBMMV2Qsdy7p4ikJQJ8WRKZpaYUyrKEdC0alOLe7mp2jgQmbzAuvWgI/Zm3Y\nV0dH9jKOa35X2I92WB7nVwWcPWgjoiwcEd+Dv3ZFrAv+mDKMf3UKs8PKMBNVyhk7\n591pKkMNfI3AOn4VVrFMmhjapxMDj0txwPbSefVgiXIhSmM/1bB+DxL51m/jCNZs\n3r37J7uMkNUycH5S1CUVxl36x2K6/pADYEpi4WBtxeDF/OO1bI3VjjrltotTCVBG\n/6k6vJPGoEWbnyv5mbdD/xG7vef45gAaFE2K3n+0RmWquIhUV74=\n=2RCj\n-----END PGP SIGNATURE-----",
        "payload": "tree d2a4d93bef15b36e06131c44997ec75ecc93631f\nparent a2ed33b23bc0b4050aebd15dab5f78d9cda4d9d8\nauthor fanquake <fanquake@gmail.com> 1637576538 +0800\ncommitter fanquake <fanquake@gmail.com> 1637578737 +0800\n\ndoc: cleanup wallet build docs\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5650a5466eaa2a1f5779ce797c2857ba8399d4b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c5650a5466eaa2a1f5779ce797c2857ba8399d4b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5650a5466eaa2a1f5779ce797c2857ba8399d4b/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a2ed33b23bc0b4050aebd15dab5f78d9cda4d9d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2ed33b23bc0b4050aebd15dab5f78d9cda4d9d8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a2ed33b23bc0b4050aebd15dab5f78d9cda4d9d8"
      }
    ],
    "stats": {
      "total": 88,
      "additions": 39,
      "deletions": 49
    },
    "files": [
      {
        "sha": "f6b812a5962582721ce85042e6b29f2b071ec3e2",
        "filename": "doc/build-freebsd.md",
        "status": "modified",
        "additions": 12,
        "deletions": 13,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5650a5466eaa2a1f5779ce797c2857ba8399d4b/doc/build-freebsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5650a5466eaa2a1f5779ce797c2857ba8399d4b/doc/build-freebsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-freebsd.md?ref=c5650a5466eaa2a1f5779ce797c2857ba8399d4b",
        "patch": "@@ -52,20 +52,19 @@ git clone https://github.com/bitcoin/bitcoin.git\n ### 3. Install Optional Dependencies\n \n #### Wallet Dependencies\n-It is not necessary to build wallet functionality to run bitcoind or the GUI. To enable legacy wallets, you must install `db5`. To enable [descriptor wallets](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md), `sqlite3` is required. Skip `db5` if you intend to *exclusively* use descriptor wallets\n \n-###### Legacy Wallet Support\n-`db5` is required to enable support for legacy wallets. Skip if you don't intend to use legacy wallets\n+###### Wallet\n \n-```bash\n-pkg install db5\n+`sqlite3` is used for the ([descriptor based](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md)) wallet.\n+``` bash\n+pkg install sqlite3\n ```\n \n-###### Descriptor Wallet Support\n+###### Legacy Wallet\n+`db5` is required to enable support for legacy wallets.\n \n-`sqlite3` is required to enable support for descriptor wallets. Skip if you don't intend to use descriptor wallets.\n-``` bash\n-pkg install sqlite3\n+```bash\n+pkg install db5\n ```\n ---\n \n@@ -98,8 +97,8 @@ pkg install python3\n ### 1. Configuration\n \n There are many ways to configure Bitcoin Core, here are a few common examples:\n-##### Wallet (BDB + SQlite) Support, No GUI:\n-This explicitly enables legacy wallet support and disables the GUI. If `sqlite3` is installed, then descriptor wallet support will be built.\n+##### Wallet & Legacy Wallet Support, No GUI:\n+This explicitly enables legacy wallet support and disables the GUI. If `sqlite3` is installed, then wallet support will also be built.\n ```bash\n ./autogen.sh\n ./configure --with-gui=no --with-incompatible-bdb \\\n@@ -108,8 +107,8 @@ This explicitly enables legacy wallet support and disables the GUI. If `sqlite3`\n     MAKE=gmake\n ```\n \n-##### Wallet (only SQlite) and GUI Support:\n-This explicitly enables the GUI and disables legacy wallet support. If `qt5` is not installed, this will throw an error. If `sqlite3` is installed then descriptor wallet functionality will be built. If `sqlite3` is not installed, then wallet functionality will be disabled.\n+##### Wallet and GUI Support:\n+This explicitly enables the GUI and disables legacy wallet support. If `qt5` is not installed, this will throw an error. If `sqlite3` is installed then wallet functionality will be built. If `sqlite3` is not installed, then wallet functionality will be disabled.\n ```bash\n ./autogen.sh\n ./configure --without-bdb --with-gui=yes MAKE=gmake"
      },
      {
        "sha": "3f7e8b061698bee23bec60cddc9744555a78bcb8",
        "filename": "doc/build-netbsd.md",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5650a5466eaa2a1f5779ce797c2857ba8399d4b/doc/build-netbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5650a5466eaa2a1f5779ce797c2857ba8399d4b/doc/build-netbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-netbsd.md?ref=c5650a5466eaa2a1f5779ce797c2857ba8399d4b",
        "patch": "@@ -21,6 +21,7 @@ libevent\n libtool\n pkg-config\n python37\n+sqlite3\n \n git clone https://github.com/bitcoin/bitcoin.git\n ```\n@@ -29,8 +30,7 @@ See [dependencies.md](dependencies.md) for a complete overview.\n \n ### Building BerkeleyDB\n \n-BerkeleyDB is only necessary for the wallet functionality. To skip this, pass\n-`--disable-wallet` to `./configure` and skip to the next section.\n+BerkeleyDB is only necessary for legacy wallet functionality.\n \n It is recommended to use Berkeley DB 4.8. You cannot use the BerkeleyDB library\n from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n@@ -54,23 +54,24 @@ export BDB_PREFIX=\"$PWD/db4\"\n With wallet:\n ```bash\n ./autogen.sh\n-./configure --with-gui=no CPPFLAGS=\"-I/usr/pkg/include\" \\\n+./configure --with-gui=no \\\n+    CPPFLAGS=\"-I/usr/pkg/include\" \\\n     LDFLAGS=\"-L/usr/pkg/lib\" \\\n     BOOST_CPPFLAGS=\"-I/usr/pkg/include\" \\\n     BOOST_LDFLAGS=\"-L/usr/pkg/lib\" \\\n-    BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" \\\n-    BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" \\\n     MAKE=gmake\n ```\n \n-Without wallet:\n+With legacy wallet:\n ```bash\n ./autogen.sh\n ./configure --with-gui=no --disable-wallet \\\n     CPPFLAGS=\"-I/usr/pkg/include\" \\\n     LDFLAGS=\"-L/usr/pkg/lib\" \\\n     BOOST_CPPFLAGS=\"-I/usr/pkg/include\" \\\n     BOOST_LDFLAGS=\"-L/usr/pkg/lib\" \\\n+    BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" \\\n+    BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" \\\n     MAKE=gmake\n ```\n "
      },
      {
        "sha": "e3240f9f19b9d13701a67e646c8e069b428422b4",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 9,
        "deletions": 11,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5650a5466eaa2a1f5779ce797c2857ba8399d4b/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5650a5466eaa2a1f5779ce797c2857ba8399d4b/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=c5650a5466eaa2a1f5779ce797c2857ba8399d4b",
        "patch": "@@ -30,8 +30,7 @@ compilers within the same executable will result in errors.\n \n ### Building BerkeleyDB\n \n-BerkeleyDB is only necessary for the wallet functionality. To skip this, pass\n-`--disable-wallet` to `./configure` and skip to the next section.\n+BerkeleyDB is only necessary for legacy wallet functionality.\n \n It is recommended to use Berkeley DB 4.8. You cannot use the BerkeleyDB library\n from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n@@ -77,24 +76,23 @@ and preprocessor defines like `waitid()` and `WEXITED` that are not available.)\n To configure with wallet:\n ```bash\n ./configure --with-gui=no --disable-external-signer CC=cc CXX=c++ \\\n-    BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" \\\n-    BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" \\\n     MAKE=gmake\n ```\n \n-To configure without wallet:\n-```bash\n-./configure --disable-wallet --with-gui=no --disable-external-signer CC=cc CC_FOR_BUILD=cc CXX=c++ MAKE=gmake\n-```\n-\n-To configure with GUI:\n+To configure with legacy wallet:\n ```bash\n-./configure --with-gui=yes --disable-external-signer CC=cc CXX=c++ \\\n+./configure --with-gui=no --disable-external-signer CC=cc CXX=c++ \\\n     BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" \\\n     BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" \\\n     MAKE=gmake\n ```\n \n+To configure without wallet or gui:\n+```bash\n+./configure --disable-wallet --with-gui=no --disable-external-signer \\\n+    CC=cc CC_FOR_BUILD=cc CXX=c++ MAKE=gmake\n+```\n+\n Build and run the tests:\n ```bash\n gmake # use \"-j N\" here for N parallel jobs"
      },
      {
        "sha": "d2ebb232dafbb94fdcd4a83b1be890a4467c5dd0",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 7,
        "deletions": 15,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5650a5466eaa2a1f5779ce797c2857ba8399d4b/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5650a5466eaa2a1f5779ce797c2857ba8399d4b/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=c5650a5466eaa2a1f5779ce797c2857ba8399d4b",
        "patch": "@@ -99,30 +99,22 @@ git clone https://github.com/bitcoin/bitcoin.git\n \n #### Wallet Dependencies\n \n-It is not necessary to build wallet functionality to run `bitcoind` or  `bitcoin-qt`.\n-To enable legacy wallets, you must install `berkeley-db@4`.\n-To enable [descriptor wallets](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md), `sqlite` is required.\n-Skip `berkeley-db@4` if you intend to *exclusively* use descriptor wallets.\n+###### Wallet\n \n-###### Legacy Wallet Support\n-\n-`berkeley-db@4` is required to enable support for legacy wallets.\n-Skip if you don't intend to use legacy wallets.\n+`sqlite` is required for the wallet ([descriptor based](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md)).\n \n ``` bash\n-brew install berkeley-db@4\n+brew install sqlite\n ```\n \n-###### Descriptor Wallet Support\n+Note: macOS ships with a version of `sqlite`. You may not need to install it.\n \n-Note: Apple has included a useable `sqlite` package since macOS 10.14.\n-You may not need to install this package.\n+###### Legacy Wallet\n \n-`sqlite` is required to enable support for descriptor wallets.\n-Skip if you don't intend to use descriptor wallets.\n+`berkeley-db@4` is only required to enable support for legacy wallets.\n \n ``` bash\n-brew install sqlite\n+brew install berkeley-db@4\n ```\n ---\n "
      },
      {
        "sha": "aebe3b6152b9eecaa8d6a33219fd0c320a135bdf",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5650a5466eaa2a1f5779ce797c2857ba8399d4b/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5650a5466eaa2a1f5779ce797c2857ba8399d4b/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=c5650a5466eaa2a1f5779ce797c2857ba8399d4b",
        "patch": "@@ -84,7 +84,7 @@ Now, you can either build from self-compiled [depends](/depends/README.md) or in\n \n     sudo apt-get install libevent-dev libboost-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev\n \n-SQLite is required for the descriptor wallet:\n+SQLite is required for the wallet:\n \n     sudo apt install libsqlite3-dev\n \n@@ -141,7 +141,7 @@ Now, you can either build from self-compiled [depends](/depends/README.md) or in\n \n     sudo dnf install libevent-devel boost-devel\n \n-SQLite is required for the descriptor wallet:\n+SQLite is required for the wallet:\n \n     sudo dnf install sqlite-devel\n \n@@ -232,7 +232,7 @@ from the root of the repository.\n \n Otherwise, you can build Bitcoin Core from self-compiled [depends](/depends/README.md).\n \n-**Note**: You only need Berkeley DB if the wallet is enabled (see [*Disable-wallet mode*](#disable-wallet-mode)).\n+**Note**: You only need Berkeley DB if you want to use the legacy wallet.\n \n Security\n --------\n@@ -287,7 +287,7 @@ disable-wallet mode with:\n \n     ./configure --disable-wallet\n \n-In this case there is no dependency on Berkeley DB 4.8 and SQLite.\n+In this case there is no dependency on SQLite or Berkeley DB 4.8.\n \n Mining is also possible in disable-wallet mode using the `getblocktemplate` RPC call.\n "
      }
    ]
  }
]