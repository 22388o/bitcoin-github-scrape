laanwj,2021-09-27 10:49:50,Concept ACK,https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-927747159,927747159,
meshcollider,2021-10-04 02:24:34,"@katesalazar just a few notes:\n- [Please squash your commits](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits)\n- `MIN_FREE_SPACE_BEFORE_TEST` is currently unused, so that needs to be corrected (unless you decide to remove it - but it think it is better to check there is enough space *before* starting each test, rather than checking *after* each).\n- I agree wi",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-933094037,933094037,
katesalazar,2021-10-04 05:19:20,"@meshcollider wrote:\n\n> * I agree with Marco's comments about the 16M (and note that he is the test framework maintainer, so please do take his advice seriously ðŸ™‚)\n\nDoes agreeing come simply from trusting Marco, or\ndoes it come from real positive a posteriori knowledge of the technology,\nyou have?\n",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-933151990,933151990,
MarcoFalke,2021-10-04 07:03:53,"Again, no one asked you to trust me. Everything is in the source code, which you can read or execute yourself: https://github.com/bitcoin/bitcoin/pull/23100#discussion_r718559981",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-933201870,933201870,
katesalazar,2021-10-04 08:29:51,"You keep not proving your point,\nI am not applying your suggestion myself.\nIt's better you commit your unproven magic numbers under your name\nin a subsequent PR or an alternative PR.\n",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-933262667,933262667,
fanquake,2021-10-05 06:02:51,"> I am not applying your suggestion myself.\n> It's better you commit your unproven magic numbers under your name\n\nThat's fine, you don't have to do anything you don't want to. However, this Pull Request is not going to be merged with the review comments left unaddressed, or the `TODO` left in the code. So you either need to address everything, or you can close this PR.",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-934093182,934093182,
katesalazar,2021-10-05 06:45:51,"I've watched example_test.py failing to run successfully,\napparently refusing to start under ~10M free space.\nIt's likely I'll investigate and end up adding Marco's suggestion.\n",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-934115291,934115291,
katesalazar,2021-10-05 07:10:41,"See also:\nhttps://github.com/bitcoin/bitcoin/blob/9e530c6352c3e3d4f2936bbbb1bcb34ff9ca6378/src/util/system.cpp#L146\n\nIn:\n\nhttps://github.com/bitcoin/bitcoin/blob/9e530c6352c3e3d4f2936bbbb1bcb34ff9ca6378/src/util/system.cpp#L144-L150",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-934129961,934129961,
katesalazar,2021-10-05 07:17:09,"I think it can refuse to boot with 'Disk space too low' with more than\n16M free, tried using 30M, it seems it refused to boot.\n",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-934134314,934134314,
meshcollider,2021-10-08 12:08:27,"Please squash your commits again :)\n\nIt is good practice to squash after every fixup so that the PR is immediately ready to review and merge. Otherwise, squashing later will invalidate the ACKs on that commit hash.",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-938590457,938590457,
yanmaani,2021-10-08 15:26:55,"Conceptually it'd be cleaner if you could detect Bitcoin Core complaining about free space once and then abort the test, but I don't know if that's feasible.",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-938730824,938730824,
katesalazar,2021-10-08 20:52:07,"> It is good practice to squash after every fixup so that the PR is immediately ready to review and merge. Otherwise, squashing later will invalidate the ACKs on that commit hash.\n\nUnderstood and grabbed this advice for urgent changes.\nWhich you won't see me taking care of in the next maybe 5 or 10 years,\nfor reasons.\n\nI'll squash on demand, because that's the rules.\nBut squashing is",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-939109228,939109228,
katesalazar,2021-10-08 21:07:50,"BTW I very much appreciate your patience with my\nbi-polar bear things, thank you.\n",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-939116513,939116513,
katesalazar,2021-10-09 15:19:14,"dc439011d155033dec4ad0af2059808ce9b8cd73\nis an amend of (only) the commit message of\n646029c4365bc921a84cf8952200d81f6e68b1b4\n(which passed CI checks).\n",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-939313375,939313375,
meshcollider,2021-10-10 10:25:35,"> But squashing is a lossy* process, on Git and on GitHub, and I don't think I should be doing it lightly.\n\nYou should, because in general people don't review PRs that look WIP - and unsquashed fixup commits immediately signal WIP. PRs are required to be clean and tidy for merge. There's no need to worry about loss because the new commit should always be an improvement over the old. Feel free ",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-939451825,939451825,
theStack,2021-10-11 13:41:25,"Concept ACK\n\nIt happened more than once to me that /tmp got clogged up with left-overs of failed test runs that I forgot to clean, so I'm supporting an early low-space detection. Will test later.",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-940043483,940043483,
theStack,2021-10-12 15:22:50,"FWIW, on my system, functional tests start to fail already when less than ~67MB are available on the /tmp partition. This matches the code in `CheckDiskSpace` which needs `min_disk_space` (50MB) _plus_ the value `additional_bytes` that is passed to this function, which in turn are the 16MB mentioned above for first block pre-allocation.",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-941115724,941115724,
katesalazar,2021-10-12 15:33:16,"> FWIW, on my system, functional tests start to fail already when less than ~67MB are available on the /tmp partition. This matches the code in `CheckDiskSpace` which needs `min_disk_space` (50MB) _plus_ the value `additional_bytes` that is passed to this function, which in turn are the 16MB mentioned above for first block pre-allocation.\n\nI never tested those conditions, but really looked lik",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-941126085,941126085,
katesalazar,2021-10-12 16:39:39,Let's set MIN_FREE_SPACE to ((50 + 16) * 1024 * 1024).,https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-941182410,941182410,
katesalazar,2021-10-13 19:58:44,"A ((50 + 16) * 1024 * 1024) value should be better.\nI'll wait a few days and if there's no opposition I'll\nsubmit such change and report it to ACKer/s.\n\nThanks @theStack.\n",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-942671872,942671872,
katesalazar,2021-10-19 07:13:05,"@meshcollider wrote:\n> utACK [dc43901](https://github.com/bitcoin/bitcoin/commit/dc439011d155033dec4ad0af2059808ce9b8cd73)\n\nI pushed 4b41e9d7745a6856263f on top of dc439011d155033dec.\n\nI don't know what's the software allowing to push an\n4b41e9d7745a6856263f ACK (would that be the case) on top of an\ndc439011d155033dec ACK, more importantly I don't know what's the\nsoftware allowing ",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-946429241,946429241,
fanquake,2021-10-19 07:16:36,"@katesalazar I don't understand your previous comment. In any case, you need to squash your commits. You should just be doing that by default.",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-946431415,946431415,
katesalazar,2021-10-19 07:28:59,"@fanquake wrote:\n\n> I don't understand your previous comment.\n\nDon't worry, I'm surely missing some task you do when you review.\n\nLet's suppose there is a rev A changing 1000 lines, it's acknowledged.\nA change happens and rev B has to be submitted changing 1 single line.\n\nSubmitting B on top of A is straight forward and safe.\n\nYou want me to directly push B fixed up in A, i.e",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-946439238,946439238,
katesalazar,2021-10-19 07:33:43,"> How do you compare A to C and get the equivalent to B without me even\never pushing B?\n\nClarification,\nI know `git diff A C` gives it; but my question is, do you really do this to\nsee B? Or do you just read all over all of the changes in A once again\nwhen C is pushed?\n",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-946442321,946442321,
fanquake,2021-10-19 07:35:35,You probably want [`git range-diff`](https://git-scm.com/docs/git-range-diff). I'd suggest reading our [productivity docs](https://github.com/bitcoin/bitcoin/blob/master/doc/productivity.md#diff-the-diffs-with-git-range-diff).,https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-946443593,946443593,
katesalazar,2021-10-19 09:14:12,"> You probably want [`git range-diff`](https://git-scm.com/docs/git-range-diff). I'd suggest reading our [productivity docs](https://github.com/bitcoin/bitcoin/blob/master/doc/productivity.md#diff-the-diffs-with-git-range-diff).\n\nOh, we stand on the shoulders of giants!\n\nBut even if range-diff works, how would you make sure that the old\nfeature branch tip revision (rev) isn't removed by ",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-946518930,946518930,
MarcoFalke,2021-10-19 09:39:21,You can create a branch or tag to make sure git doesn't gc it,https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-946538823,946538823,
katesalazar,2021-10-19 09:51:32,"Understood. Good enough, thanks.",https://github.com/bitcoin/bitcoin/pull/23100#issuecomment-946555789,946555789,
MarcoFalke,2021-09-27 10:55:51,"Is this needed? Pretty sure libFuzzer will print this error by itself.\n\nAlso, the fuzz inputs usually do not reside in the `/tmp` dir, which was the motivation for this patch?",https://github.com/bitcoin/bitcoin/pull/23100#discussion_r716580189,716580189,test/fuzz/test_runner.py
MarcoFalke,2021-09-27 15:51:39,"I think this can be bumped to 16 M, because it is not possible to create a datadir that is smaller than that.\n\nThe first block file will pre-allocate 16M:\n\n```\n16M	/tmp/aaa/regtest/blocks/blk00000.dat",https://github.com/bitcoin/bitcoin/pull/23100#discussion_r716825510,716825510,test/functional/test_runner.py
MarcoFalke,2021-09-27 15:53:27,This will leave dangling processes,https://github.com/bitcoin/bitcoin/pull/23100#discussion_r716827058,716827058,test/functional/test_runner.py
katesalazar,2021-09-27 16:14:07,"~~Unable to reproduce on my system\nwhen current test is feature_taproot.py --previous_release\nwhen execution flow reaches the line (don't know what other\ntests were running concurrently).~~\n",https://github.com/bitcoin/bitcoin/pull/23100#discussion_r716844261,716844261,test/functional/test_runner.py
katesalazar,2021-09-28 03:09:40,"We cannot apply that, because that could make the output line\n""no free space left on device"" be shown when that's not really\nthe failure reason.\n\nThough I've applied your idea in a different way.\n",https://github.com/bitcoin/bitcoin/pull/23100#discussion_r717188616,717188616,test/functional/test_runner.py
MarcoFalke,2021-09-29 13:22:17,why add a todo?,https://github.com/bitcoin/bitcoin/pull/23100#discussion_r718507344,718507344,test/functional/test_runner.py
katesalazar,2021-09-29 13:36:18,"because you wrote you think a test requires 16M\n\na todo is the best I can add here about that\n",https://github.com/bitcoin/bitcoin/pull/23100#discussion_r718520996,718520996,test/functional/test_runner.py
MarcoFalke,2021-09-29 13:40:45,I think it would be better to change the number instead of adding a TODO to change the number,https://github.com/bitcoin/bitcoin/pull/23100#discussion_r718525522,718525522,test/functional/test_runner.py
katesalazar,2021-09-29 13:46:15,"I think so as well, but I can't personally commit it",https://github.com/bitcoin/bitcoin/pull/23100#discussion_r718530972,718530972,test/functional/test_runner.py
MarcoFalke,2021-09-29 13:52:38,why?,https://github.com/bitcoin/bitcoin/pull/23100#discussion_r718537902,718537902,test/functional/test_runner.py
katesalazar,2021-09-29 13:55:32,"because I don't trust you, because I don't even know you,\nbecause one should only commit code one can take ownership of,\nbecause I can't take ownership of an assertion you seem not\nto be even sure of,\nbecause I would lie by committing it!\n",https://github.com/bitcoin/bitcoin/pull/23100#discussion_r718541018,718541018,test/functional/test_runner.py
MarcoFalke,2021-09-29 14:14:19,"You don't have to trust me. The value is in the source code `BLOCKFILE_CHUNK_SIZE`, or you can test it yourself: https://github.com/bitcoin/bitcoin/pull/23100#discussion_r716825510\n\nEven if wasn't, what is the worst thing that could happen by increasing the number?",https://github.com/bitcoin/bitcoin/pull/23100#discussion_r718559981,718559981,test/functional/test_runner.py
katesalazar,2021-09-29 17:12:09,"> The value is in the source code `BLOCKFILE_CHUNK_SIZE`, or you can test it yourself\n\nI would have a look, thanks.\n\nI was hoping that many of the >200 functional tests would not strictly require that a large space reserve. ðŸ™„\n\n> Even if wasn't, what is the worst thing that could happen by increasing the number?\n\nIn case the constant didn't apply to all tests, it would result on unn",https://github.com/bitcoin/bitcoin/pull/23100#discussion_r718725534,718725534,test/functional/test_runner.py
katesalazar,2021-09-30 17:48:25,"I have had a casual look,\nI'd say there are many functional tests ending and being removed\nupon success way before reaching 16MiB,\nI'm feeling like removing MIN_FREE_SPACE_BEFORE_TEST. ðŸ¤”\n",https://github.com/bitcoin/bitcoin/pull/23100#discussion_r719630752,719630752,test/functional/test_runner.py
katesalazar,2021-10-01 06:18:55,"There's even some functional tests occupying only KiBs and in a blink of an eye it's successful and gone.\n\nIn a few days I'd be removing MIN_FREE_SPACE_BEFORE_TEST.\n",https://github.com/bitcoin/bitcoin/pull/23100#discussion_r719970688,719970688,test/functional/test_runner.py
MarcoFalke,2021-10-05 08:56:29,"Instead of a comment ""Could be larger"" it could make sense to explain why this was chosen or where the magic number is from.\n\nAlso, why are you not choosing the value from `constexpr min_disk_space`?",https://github.com/bitcoin/bitcoin/pull/23100#discussion_r722031643,722031643,test/functional/test_runner.py
MarcoFalke,2021-10-05 09:34:04,"The comment below ""    # Clean up dangling processes if any. This may only happen with --failfast option."" will need to be updated",https://github.com/bitcoin/bitcoin/pull/23100#discussion_r722062738,722062738,test/functional/test_runner.py
katesalazar,2021-10-05 09:44:01,"Yes!\nI will just let the CI build finish successfully before changing it.\n",https://github.com/bitcoin/bitcoin/pull/23100#discussion_r722070714,722070714,test/functional/test_runner.py
fanquake,2021-10-07 05:33:33,"Please don't put source file names / C++ implementation details here, as they are likely to just become outdated in regards to the code. Also, comments like ""in general but not always"" are not really useful, unless they are elaborated on (and that would be overkill here), as the reader is just left wondering about the ""but not always"" conditions.",https://github.com/bitcoin/bitcoin/pull/23100#discussion_r723859423,723859423,test/functional/test_runner.py
