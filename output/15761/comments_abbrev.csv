laanwj,2019-04-06T07:11:40Z,"No opposition to having this, but wouldn't `bitcoin-wallet-tool` be the designated place for this?",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-480480966,480480966,
achow101,2019-04-06T15:51:23Z,"> No opposition to having this, but wouldn't `bitcoin-wallet-tool` be the designated place for this?\n\nI'm not really a fan of putting things that users might actually use and want to use in a place that is less accessible. `bitcoin-wallet-tool` is command line only and many users won't know how to use it. With an RPC, most users will be able to use it since there is a RPC console in the GUI.",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-480514693,480514693,
MarcoFalke,2019-04-06T16:26:36Z,Related: #13044,https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-480517346,480517346,
DrahtBot,2019-04-06T17:26:01Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18699 (wallet: Avoid translating RPC errors by MarcoFalke)\n* #18647 (rpc: remove g_rpc_node & g_rpc_chain by brakmic)\n*",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-480521997,480521997,
jnewbery,2019-04-06T18:48:34Z,"Concept ACK although I agree with @laanwj that a utility function that does not require access to the chainstate or P2P rightly lives in the wallet tool.\n\n>  I'm not really a fan of putting things that users might actually use and want to use in a place that is less accessible [...] With an RPC, most users will be able to use it since there is a RPC console in the GUI.\n\nI'd disagree that R",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-480528308,480528308,
sipa,2019-04-06T19:04:34Z,"Is this something that we'd like to be accessible to wallets why they're loaded? If so, it needs to be an RPC (and possibly also in the wallet tool). ",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-480529447,480529447,
achow101,2019-04-06T20:04:34Z,"> Is this something that we'd like to be accessible to wallets why they're loaded?\n\nI would like it to be.",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-480533618,480533618,
jnewbery,2019-04-07T20:26:16Z,"> Is this something that we'd like to be accessible to wallets while they're loaded?\n\nThis seems to me to potentially add complexity in future. I could imagine there may be some potential upgrade actions that would conflict badly when executed on a running wallet. Why not keep it simple and only allow upgrade when the wallet is not running?\n\nEDIT: to be clear, I'm not NACKing this. I think",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-480626179,480626179,
promag,2019-04-08T14:25:38Z,"Concept ACK removing the `-upgradewallet` argument.\n\nWhy not add `upgrade` option to `loadwallet` RPC?",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-480853986,480853986,
achow101,2019-04-09T14:34:21Z,"> Why not add `upgrade` option to `loadwallet` RPC?\n\nI think it makes more sense to have upgrading be separate from loading.",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-481278120,481278120,
jnewbery,2019-04-09T14:46:59Z,"> I think it makes more sense to have upgrading be separate from loading.\n\nCan you justify that? Upgrading wallets is something that most users will very rarely (if ever) have to do. What's the benefit to adding the flexibility to upgrade wallets during runtime? The downsides seem pretty obvious to me (potential increased complexity and having to reason about interactions with other wallet ope",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-481283456,481283456,
achow101,2019-04-10T06:48:45Z,"> I'd disagree that RPC is accessible to users who aren't able to use the command line. We shouldn't encourage users to type commands into the debug command window if they're not able to use the command line. Besides, `upgradewallet` is currently command line only, so moving it to the wallet tool maintains exactly the same level of accessibility.\n\nI disagree. It is far easier for users to unde",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-481557033,481557033,
MarcoFalke,2019-04-10T13:31:32Z,Concept ACK moving it to either or both (tool and rpc),https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-481691925,481691925,
flack,2019-04-12T18:34:44Z,"The RPC variant probably has the advantage that the function could be added to the File menu later on (maybe right next to ""Backup wallet...""), which would also alleviate the concerns about having users enter random stuff in the console",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-482679097,482679097,
luke-jr,2019-04-20T21:12:42Z,Nit: commit messages misspell upgrade multiple times,https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-485173032,485173032,
achow101,2019-04-20T23:28:42Z,"> Nit: commit messages misspell upgrade multiple times\n\nFixed\n\n> The first commit is convoluted/difficult to review\n\nHow so? It's mostly just a move\n\n> broken (-upgradewallet no longer works).\n\nShould be fixed\n",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-485196235,485196235,
luke-jr,2019-04-20T23:44:00Z,"Re first commit: Since it's on the object, you drop the `walletInstance->` everywhere. I'd suggest a minimal moveonly commit, then a subsequent one that makes the changes.",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-485198521,485198521,
achow101,2019-04-22T04:25:36Z,I've done some commit reorganization as suggested by @luke-jr so this should be easier to review now.,https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-485320969,485320969,
achow101,2019-07-09T20:50:10Z,Rebased,https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-509802035,509802035,
achow101,2019-11-04T18:44:10Z,"This is currently getting messed up by the ScriptPubKeyMan changes. Will fix, rebase, and address comments after ScriptPubKeyMan is fully introduced.",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-549491984,549491984,
codewiz,2019-11-30T11:30:44Z,"@achow101, could you please rebase your patches?",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-559952224,559952224,
achow101,2019-12-01T02:32:29Z,"> Will fix, rebase, and address comments after ScriptPubKeyMan is fully introduced.",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-560042719,560042719,
achow101,2019-12-04T01:17:14Z,"I've rebased and fixed this up a bit, but it does kind of conflict with the ScriptPubKeyMan changes.",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-561430782,561430782,
darosior,2020-03-31T13:24:27Z,"Happy to review this once rebased as there are still users broken after multiple releases (it's been almost a year now... :/), see https://github.com/bitcoin/bitcoin/issues/16091.",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-606624866,606624866,
MarcoFalke,2020-04-06T21:24:57Z,"Maybe split out the first commit (move-only) as a separate pull, to cut down on the conflicts in the future?",https://github.com/bitcoin/bitcoin/pull/15761#issuecomment-610044967,610044967,
MarcoFalke,2019-04-06T16:19:21Z,"```suggestion\n        throw JSONRPCError(RPC_WALLET_ERROR, ""Cannot set a HD seed on a non-HD wallet. Use the upgradewallet RPC in order to upgrade a non-HD wallet to HD"");\n```",https://github.com/bitcoin/bitcoin/pull/15761#discussion_r272800660,272800660,src/wallet/rpcwallet.cpp
MarcoFalke,2019-04-06T16:19:33Z,"```suggestion\nstatic UniValue upgradewallet(const JSONRPCRequest& request)\n```",https://github.com/bitcoin/bitcoin/pull/15761#discussion_r272800667,272800667,src/wallet/rpcwallet.cpp
MarcoFalke,2019-04-06T16:21:48Z,"Could use a const object that is in scope even when no help was not requested? That way checking the arguments could be done through the HelpMan in the future. See for example `const RPCHelpMan help{""sendmany"",` for what I mean.",https://github.com/bitcoin/bitcoin/pull/15761#discussion_r272800740,272800740,src/wallet/rpcwallet.cpp
MarcoFalke,2019-04-06T16:24:49Z,"This fails to compile.\n\nMind to make a move-only of the upgrade code into a standalone member function, that is merely called by the RPC instead of moving the whole wallet logic into the rpc file?",https://github.com/bitcoin/bitcoin/pull/15761#discussion_r272800829,272800829,src/wallet/rpcwallet.cpp
achow101,2019-04-06T16:56:33Z,Done,https://github.com/bitcoin/bitcoin/pull/15761#discussion_r272801797,272801797,src/wallet/rpcwallet.cpp
achow101,2019-04-06T16:56:38Z,Done,https://github.com/bitcoin/bitcoin/pull/15761#discussion_r272801801,272801801,src/wallet/rpcwallet.cpp
achow101,2019-04-06T16:56:42Z,Done,https://github.com/bitcoin/bitcoin/pull/15761#discussion_r272801804,272801804,src/wallet/rpcwallet.cpp
achow101,2019-04-06T16:56:46Z,Done,https://github.com/bitcoin/bitcoin/pull/15761#discussion_r272801807,272801807,src/wallet/rpcwallet.cpp
luke-jr,2019-04-20T21:19:11Z,This is removed in the wrong commit.,https://github.com/bitcoin/bitcoin/pull/15761#discussion_r277146727,277146727,src/wallet/wallet.cpp
achow101,2019-04-20T23:28:14Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/15761#discussion_r277149102,277149102,src/wallet/wallet.cpp
luke-jr,2019-04-20T23:46:08Z,Part of this is supposed to run by default if `fFirstRun`.,https://github.com/bitcoin/bitcoin/pull/15761#discussion_r277149385,277149385,src/wallet/wallet.cpp
achow101,2019-04-22T03:48:53Z,"That part is completely redundant. It just sets the wallet version but `SetMinVersion` is already called below in the `if (fFirstRun)` block. Furthermore, that call forces the wallet version to be the latest version so whatever version number specified for `-upgradewallet` that would have been set is overridden anyways.",https://github.com/bitcoin/bitcoin/pull/15761#discussion_r277200284,277200284,src/wallet/wallet.cpp
darosior,2019-07-09T14:30:07Z,"This comment isnt related to the lock, is it ?",https://github.com/bitcoin/bitcoin/pull/15761#discussion_r301618241,301618241,src/wallet/wallet.cpp
achow101,2019-07-09T20:50:06Z,Removed,https://github.com/bitcoin/bitcoin/pull/15761#discussion_r301787825,301787825,src/wallet/wallet.cpp
MarcoFalke,2020-04-19T11:02:58Z,"in commit 1e48796c99b63aa8fa8451ce7b0c20759ea43500\n\nThis is a bug and it needs to call walletInstance->UpgradeWallet, but I see the code is removed in the next commit anyway",https://github.com/bitcoin/bitcoin/pull/15761#discussion_r410878408,410878408,src/wallet/wallet.cpp
MarcoFalke,2020-04-19T11:04:19Z,"```suggestion\n            {""version"", RPCArg::Type::NUM, /* default */ strprintf(""%d"", WalletFeature::LATEST), ""The version number to upgrade to. Default is the latest wallet version""}\n```\n\nUnrelated nit for future cleanup: This should probably be scoped and not in the global namespace",https://github.com/bitcoin/bitcoin/pull/15761#discussion_r410878661,410878661,src/wallet/rpcwallet.cpp
MarcoFalke,2020-04-20T13:50:40Z,"Luckily it doesn't compile:\n\n```\nwallet/wallet.cpp:3831:14: error: call to non-static member function without an object argument\n        if (!UpgradeWallet(gArgs.GetBoolArg(""-upgradewallet"", 0), error, warnings)) {\n             ^~~~~~~~~~~~~\n1 error generated.\n",https://github.com/bitcoin/bitcoin/pull/15761#discussion_r411393493,411393493,src/wallet/wallet.cpp
