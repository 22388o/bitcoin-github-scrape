[
  {
    "sha": "44fb2a596b4a1aa70253c4145c35be6de68da22a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NGZiMmE1OTZiNGExYWE3MDI1M2M0MTQ1YzM1YmU2ZGU2OGRhMjJh",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-04-07T15:40:13Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-04-08T14:45:27Z"
      },
      "message": "tests: Add fuzzing harness for FeeFilterRounder",
      "tree": {
        "sha": "4aea1b48dbc6c2947636d4e2c029fcf615d5b3be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4aea1b48dbc6c2947636d4e2c029fcf615d5b3be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/44fb2a596b4a1aa70253c4145c35be6de68da22a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44fb2a596b4a1aa70253c4145c35be6de68da22a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/44fb2a596b4a1aa70253c4145c35be6de68da22a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44fb2a596b4a1aa70253c4145c35be6de68da22a/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "63dad673487d3623f9076721d2a1924263272eb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63dad673487d3623f9076721d2a1924263272eb9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/63dad673487d3623f9076721d2a1924263272eb9"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 33,
      "deletions": 0
    },
    "files": [
      {
        "sha": "70bb385298171cc7d1ac6dfe5600bd9e46b1c2eb",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44fb2a596b4a1aa70253c4145c35be6de68da22a/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44fb2a596b4a1aa70253c4145c35be6de68da22a/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=44fb2a596b4a1aa70253c4145c35be6de68da22a",
        "patch": "@@ -34,6 +34,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/eval_script \\\n   test/fuzz/fee_rate \\\n   test/fuzz/fee_rate_deserialize \\\n+  test/fuzz/fees \\\n   test/fuzz/flat_file_pos_deserialize \\\n   test/fuzz/flatfile \\\n   test/fuzz/float \\\n@@ -465,6 +466,12 @@ test_fuzz_fee_rate_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_fee_rate_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_fee_rate_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n+test_fuzz_fees_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_fees_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_fees_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_fees_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_fees_SOURCES = test/fuzz/fees.cpp\n+\n test_fuzz_flat_file_pos_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DFLAT_FILE_POS_DESERIALIZE=1\n test_fuzz_flat_file_pos_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_flat_file_pos_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "090994263ea5e33c0c1fae3c334c475015505f2d",
        "filename": "src/test/fuzz/fees.cpp",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44fb2a596b4a1aa70253c4145c35be6de68da22a/src/test/fuzz/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44fb2a596b4a1aa70253c4145c35be6de68da22a/src/test/fuzz/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/fees.cpp?ref=44fb2a596b4a1aa70253c4145c35be6de68da22a",
        "patch": "@@ -0,0 +1,26 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <amount.h>\n+#include <optional.h>\n+#include <policy/fees.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    const CFeeRate minimal_incremental_fee{ConsumeMoney(fuzzed_data_provider)};\n+    FeeFilterRounder fee_filter_rounder{minimal_incremental_fee};\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        const CAmount current_minimum_fee = ConsumeMoney(fuzzed_data_provider);\n+        const CAmount rounded_fee = fee_filter_rounder.round(current_minimum_fee);\n+        assert(MoneyRange(rounded_fee));\n+    }\n+}"
      }
    ]
  },
  {
    "sha": "7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YjlhMmRjODY0MjY5MjYwMzhiMmY0OWQzZDRjZTRjYjY0ZGNkMTRi",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-04-07T16:31:43Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-04-08T14:45:27Z"
      },
      "message": "tests: Add fuzzing harness for AdditionOverflow(...)",
      "tree": {
        "sha": "64078fd73e0a6d17ba84e15ac83f08302944387e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64078fd73e0a6d17ba84e15ac83f08302944387e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "44fb2a596b4a1aa70253c4145c35be6de68da22a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44fb2a596b4a1aa70253c4145c35be6de68da22a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/44fb2a596b4a1aa70253c4145c35be6de68da22a"
      }
    ],
    "stats": {
      "total": 73,
      "additions": 73,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1f1d70d9cdd5286db9fe1a38c56514dd3ee135be",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b",
        "patch": "@@ -3,6 +3,7 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n FUZZ_TARGETS = \\\n+  test/fuzz/addition_overflow \\\n   test/fuzz/addr_info_deserialize \\\n   test/fuzz/addrdb \\\n   test/fuzz/address_deserialize \\\n@@ -280,6 +281,12 @@ endif\n \n if ENABLE_FUZZ\n \n+test_fuzz_addition_overflow_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_addition_overflow_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_addition_overflow_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_addition_overflow_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_addition_overflow_SOURCES = test/fuzz/addition_overflow.cpp\n+\n test_fuzz_addr_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DADDR_INFO_DESERIALIZE=1\n test_fuzz_addr_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_addr_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "a455992b137ffe93e436506a83ec3cd7d9eba8c1",
        "filename": "src/test/fuzz/addition_overflow.cpp",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b/src/test/fuzz/addition_overflow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b/src/test/fuzz/addition_overflow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/addition_overflow.cpp?ref=7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b",
        "patch": "@@ -0,0 +1,55 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+#if defined(__has_builtin)\n+#if __has_builtin(__builtin_add_overflow)\n+#define HAVE_BUILTIN_ADD_OVERFLOW\n+#endif\n+#elif defined(__GNUC__) && (__GNUC__ >= 5)\n+#define HAVE_BUILTIN_ADD_OVERFLOW\n+#endif\n+\n+namespace {\n+template <typename T>\n+void TestAdditionOverflow(FuzzedDataProvider& fuzzed_data_provider)\n+{\n+    const T i = fuzzed_data_provider.ConsumeIntegral<T>();\n+    const T j = fuzzed_data_provider.ConsumeIntegral<T>();\n+    const bool is_addition_overflow_custom = AdditionOverflow(i, j);\n+#if defined(HAVE_BUILTIN_ADD_OVERFLOW)\n+    T result_builtin;\n+    const bool is_addition_overflow_builtin = __builtin_add_overflow(i, j, &result_builtin);\n+    assert(is_addition_overflow_custom == is_addition_overflow_builtin);\n+    if (!is_addition_overflow_custom) {\n+        assert(i + j == result_builtin);\n+    }\n+#else\n+    if (!is_addition_overflow_custom) {\n+        (void)(i + j);\n+    }\n+#endif\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    TestAdditionOverflow<int64_t>(fuzzed_data_provider);\n+    TestAdditionOverflow<uint64_t>(fuzzed_data_provider);\n+    TestAdditionOverflow<int32_t>(fuzzed_data_provider);\n+    TestAdditionOverflow<uint32_t>(fuzzed_data_provider);\n+    TestAdditionOverflow<int16_t>(fuzzed_data_provider);\n+    TestAdditionOverflow<uint16_t>(fuzzed_data_provider);\n+    TestAdditionOverflow<char>(fuzzed_data_provider);\n+    TestAdditionOverflow<unsigned char>(fuzzed_data_provider);\n+    TestAdditionOverflow<signed char>(fuzzed_data_provider);\n+}"
      },
      {
        "sha": "ba4b012f95a11ee20a04eba6f82a928d325e2dca",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b",
        "patch": "@@ -120,4 +120,15 @@ NODISCARD bool MultiplicationOverflow(const T i, const T j) noexcept\n     }\n }\n \n+template <class T>\n+NODISCARD bool AdditionOverflow(const T i, const T j) noexcept\n+{\n+    static_assert(std::is_integral<T>::value, \"Integral required.\");\n+    if (std::numeric_limits<T>::is_signed) {\n+        return (i > 0 && j > std::numeric_limits<T>::max() - i) ||\n+               (i < 0 && j < std::numeric_limits<T>::min() - i);\n+    }\n+    return std::numeric_limits<T>::max() - i < j;\n+}\n+\n #endif // BITCOIN_TEST_FUZZ_UTIL_H"
      }
    ]
  },
  {
    "sha": "2df5701e902effa93834d9520690cbaca7e504f3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZGY1NzAxZTkwMmVmZmE5MzgzNGQ5NTIwNjkwY2JhY2E3ZTUwNGYz",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-04-07T16:32:00Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-04-08T14:45:27Z"
      },
      "message": "tests: Add coverage of GetVirtualTransactionSize(...) to existing fuzzer",
      "tree": {
        "sha": "7221a99d32c9eac97d985cd3be0edac8a1705d09",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7221a99d32c9eac97d985cd3be0edac8a1705d09"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2df5701e902effa93834d9520690cbaca7e504f3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2df5701e902effa93834d9520690cbaca7e504f3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2df5701e902effa93834d9520690cbaca7e504f3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2df5701e902effa93834d9520690cbaca7e504f3/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7b9a2dc86426926038b2f49d3d4ce4cb64dcd14b"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "f3259f65987928c4efdf5748be6e45d9ca0ad575",
        "filename": "src/test/fuzz/integer.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2df5701e902effa93834d9520690cbaca7e504f3/src/test/fuzz/integer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2df5701e902effa93834d9520690cbaca7e504f3/src/test/fuzz/integer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/integer.cpp?ref=2df5701e902effa93834d9520690cbaca7e504f3",
        "patch": "@@ -23,6 +23,7 @@\n #include <streams.h>\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n #include <time.h>\n #include <uint256.h>\n #include <util/moneystr.h>\n@@ -90,8 +91,12 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     }\n     (void)GetSizeOfCompactSize(u64);\n     (void)GetSpecialScriptSize(u32);\n-    // (void)GetVirtualTransactionSize(i64, i64); // function defined only for a subset of int64_t inputs\n-    // (void)GetVirtualTransactionSize(i64, i64, u32); // function defined only for a subset of int64_t/uint32_t inputs\n+    if (!MultiplicationOverflow(i64, static_cast<int64_t>(::nBytesPerSigOp)) && !AdditionOverflow(i64 * ::nBytesPerSigOp, static_cast<int64_t>(4))) {\n+        (void)GetVirtualTransactionSize(i64, i64);\n+    }\n+    if (!MultiplicationOverflow(i64, static_cast<int64_t>(u32)) && !AdditionOverflow(i64, static_cast<int64_t>(4)) && !AdditionOverflow(i64 * u32, static_cast<int64_t>(4))) {\n+        (void)GetVirtualTransactionSize(i64, i64, u32);\n+    }\n     (void)HexDigit(ch);\n     (void)MoneyRange(i64);\n     (void)ToString(i64);"
      }
    ]
  },
  {
    "sha": "57890b2555ca347373109052f6789c23f46bc594",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Nzg5MGIyNTU1Y2EzNDczNzMxMDkwNTJmNjc4OWMyM2Y0NmJjNTk0",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-04-08T13:16:04Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-04-08T14:45:27Z"
      },
      "message": "tests: Add fuzzing harness for classes/functions in checkqueue.h",
      "tree": {
        "sha": "2f1d48647c958cc91d7cec0fbaac34e11278c4a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f1d48647c958cc91d7cec0fbaac34e11278c4a4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57890b2555ca347373109052f6789c23f46bc594",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57890b2555ca347373109052f6789c23f46bc594",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/57890b2555ca347373109052f6789c23f46bc594",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57890b2555ca347373109052f6789c23f46bc594/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2df5701e902effa93834d9520690cbaca7e504f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2df5701e902effa93834d9520690cbaca7e504f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2df5701e902effa93834d9520690cbaca7e504f3"
      }
    ],
    "stats": {
      "total": 72,
      "additions": 72,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2a1f1ea73b539cfe14574446390d3e62c114f6b7",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57890b2555ca347373109052f6789c23f46bc594/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57890b2555ca347373109052f6789c23f46bc594/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=57890b2555ca347373109052f6789c23f46bc594",
        "patch": "@@ -28,6 +28,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/bloom_filter \\\n   test/fuzz/bloomfilter_deserialize \\\n   test/fuzz/chain \\\n+  test/fuzz/checkqueue \\\n   test/fuzz/coins_deserialize \\\n   test/fuzz/decode_tx \\\n   test/fuzz/descriptor_parse \\\n@@ -431,6 +432,12 @@ test_fuzz_chain_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_chain_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_chain_SOURCES = test/fuzz/chain.cpp\n \n+test_fuzz_checkqueue_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_checkqueue_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_checkqueue_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_checkqueue_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_checkqueue_SOURCES = test/fuzz/checkqueue.cpp\n+\n test_fuzz_coins_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DCOINS_DESERIALIZE=1\n test_fuzz_coins_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_coins_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "2ed097b8275851bf76a72a49b14679ae1e70f4e5",
        "filename": "src/test/fuzz/checkqueue.cpp",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57890b2555ca347373109052f6789c23f46bc594/src/test/fuzz/checkqueue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57890b2555ca347373109052f6789c23f46bc594/src/test/fuzz/checkqueue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/checkqueue.cpp?ref=57890b2555ca347373109052f6789c23f46bc594",
        "patch": "@@ -0,0 +1,65 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <checkqueue.h>\n+#include <optional.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+namespace {\n+struct DumbCheck {\n+    const bool result = false;\n+\n+    DumbCheck() = default;\n+\n+    explicit DumbCheck(const bool _result) : result(_result)\n+    {\n+    }\n+\n+    bool operator()() const\n+    {\n+        return result;\n+    }\n+\n+    void swap(DumbCheck& x)\n+    {\n+    }\n+};\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    const unsigned int batch_size = fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(0, 1024);\n+    CCheckQueue<DumbCheck> check_queue_1{batch_size};\n+    CCheckQueue<DumbCheck> check_queue_2{batch_size};\n+    std::vector<DumbCheck> checks_1;\n+    std::vector<DumbCheck> checks_2;\n+    const int size = fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 1024);\n+    for (int i = 0; i < size; ++i) {\n+        const bool result = fuzzed_data_provider.ConsumeBool();\n+        checks_1.emplace_back(result);\n+        checks_2.emplace_back(result);\n+    }\n+    if (fuzzed_data_provider.ConsumeBool()) {\n+        check_queue_1.Add(checks_1);\n+    }\n+    if (fuzzed_data_provider.ConsumeBool()) {\n+        (void)check_queue_1.Wait();\n+    }\n+\n+    CCheckQueueControl<DumbCheck> check_queue_control{&check_queue_2};\n+    if (fuzzed_data_provider.ConsumeBool()) {\n+        check_queue_control.Add(checks_2);\n+    }\n+    if (fuzzed_data_provider.ConsumeBool()) {\n+        (void)check_queue_control.Wait();\n+    }\n+}"
      }
    ]
  },
  {
    "sha": "bf76000493082da05bf7258a5038e16fa76cd143",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjc2MDAwNDkzMDgyZGEwNWJmNzI1OGE1MDM4ZTE2ZmE3NmNkMTQz",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-04-08T13:48:37Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-04-08T14:45:27Z"
      },
      "message": "tests: Add fuzzing harness for classes/functions in cuckoocache.h",
      "tree": {
        "sha": "634bdf699110cde8b5bff2b71d2a013ae943d8fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/634bdf699110cde8b5bff2b71d2a013ae943d8fd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf76000493082da05bf7258a5038e16fa76cd143",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf76000493082da05bf7258a5038e16fa76cd143",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf76000493082da05bf7258a5038e16fa76cd143",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf76000493082da05bf7258a5038e16fa76cd143/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "57890b2555ca347373109052f6789c23f46bc594",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57890b2555ca347373109052f6789c23f46bc594",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57890b2555ca347373109052f6789c23f46bc594"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 57,
      "deletions": 0
    },
    "files": [
      {
        "sha": "fa0fbca8e8472e7ed5fc079a2037cde03b6d5968",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf76000493082da05bf7258a5038e16fa76cd143/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf76000493082da05bf7258a5038e16fa76cd143/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=bf76000493082da05bf7258a5038e16fa76cd143",
        "patch": "@@ -30,6 +30,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/chain \\\n   test/fuzz/checkqueue \\\n   test/fuzz/coins_deserialize \\\n+  test/fuzz/cuckoocache \\\n   test/fuzz/decode_tx \\\n   test/fuzz/descriptor_parse \\\n   test/fuzz/diskblockindex_deserialize \\\n@@ -444,6 +445,12 @@ test_fuzz_coins_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_coins_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_coins_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n+test_fuzz_cuckoocache_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_cuckoocache_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_cuckoocache_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_cuckoocache_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_cuckoocache_SOURCES = test/fuzz/cuckoocache.cpp\n+\n test_fuzz_decode_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_decode_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_decode_tx_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "2daf676c4a6796de6f6f943771d19684d90bad00",
        "filename": "src/cuckoocache.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf76000493082da05bf7258a5038e16fa76cd143/src/cuckoocache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf76000493082da05bf7258a5038e16fa76cd143/src/cuckoocache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/cuckoocache.h?ref=bf76000493082da05bf7258a5038e16fa76cd143",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_CUCKOOCACHE_H\n #define BITCOIN_CUCKOOCACHE_H\n \n+#include <algorithm> // std::find\n #include <array>\n #include <atomic>\n #include <cmath>"
      },
      {
        "sha": "f674efe1b12ac291409f1a61978005d6bfe7b1c4",
        "filename": "src/test/fuzz/cuckoocache.cpp",
        "status": "added",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf76000493082da05bf7258a5038e16fa76cd143/src/test/fuzz/cuckoocache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf76000493082da05bf7258a5038e16fa76cd143/src/test/fuzz/cuckoocache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/cuckoocache.cpp?ref=bf76000493082da05bf7258a5038e16fa76cd143",
        "patch": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <cuckoocache.h>\n+#include <optional.h>\n+#include <script/sigcache.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+namespace {\n+FuzzedDataProvider* fuzzed_data_provider_ptr = nullptr;\n+\n+struct RandomHasher {\n+    template <uint8_t>\n+    uint32_t operator()(const bool& /* unused */) const\n+    {\n+        assert(fuzzed_data_provider_ptr != nullptr);\n+        return fuzzed_data_provider_ptr->ConsumeIntegral<uint32_t>();\n+    }\n+};\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    fuzzed_data_provider_ptr = &fuzzed_data_provider;\n+    CuckooCache::cache<bool, RandomHasher> cuckoo_cache{};\n+    if (fuzzed_data_provider.ConsumeBool()) {\n+        const size_t megabytes = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 16);\n+        cuckoo_cache.setup_bytes(megabytes << 20);\n+    } else {\n+        cuckoo_cache.setup(fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0, 4096));\n+    }\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            cuckoo_cache.insert(fuzzed_data_provider.ConsumeBool());\n+        } else {\n+            cuckoo_cache.contains(fuzzed_data_provider.ConsumeBool(), fuzzed_data_provider.ConsumeBool());\n+        }\n+    }\n+    fuzzed_data_provider_ptr = nullptr;\n+}"
      }
    ]
  },
  {
    "sha": "283bd72156959f420f13acc7a34e513ca3446025",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyODNiZDcyMTU2OTU5ZjQyMGYxM2FjYzdhMzRlNTEzY2EzNDQ2MDI1",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-04-08T14:28:47Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-04-08T14:45:27Z"
      },
      "message": "tests: Add coverage of {,Incremental}DynamicUsage(const std::set<X, Y>& s) to existing fuzzer",
      "tree": {
        "sha": "f249296daf08fe7e2cbae4f24538be433195cad9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f249296daf08fe7e2cbae4f24538be433195cad9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/283bd72156959f420f13acc7a34e513ca3446025",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/283bd72156959f420f13acc7a34e513ca3446025",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/283bd72156959f420f13acc7a34e513ca3446025",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/283bd72156959f420f13acc7a34e513ca3446025/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf76000493082da05bf7258a5038e16fa76cd143",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf76000493082da05bf7258a5038e16fa76cd143",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf76000493082da05bf7258a5038e16fa76cd143"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7c2537aaf5d475096aa51286c9d10e76be7672b5",
        "filename": "src/test/fuzz/integer.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/283bd72156959f420f13acc7a34e513ca3446025/src/test/fuzz/integer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/283bd72156959f420f13acc7a34e513ca3446025/src/test/fuzz/integer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/integer.cpp?ref=283bd72156959f420f13acc7a34e513ca3446025",
        "patch": "@@ -36,6 +36,7 @@\n #include <cassert>\n #include <chrono>\n #include <limits>\n+#include <set>\n #include <vector>\n \n void initialize()\n@@ -114,6 +115,12 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     (void)memusage::DynamicUsage(u8);\n     const unsigned char uch = static_cast<unsigned char>(u8);\n     (void)memusage::DynamicUsage(uch);\n+    {\n+        const std::set<int64_t> i64s{i64, static_cast<int64_t>(u64)};\n+        const size_t dynamic_usage = memusage::DynamicUsage(i64s);\n+        const size_t incremental_dynamic_usage = memusage::IncrementalDynamicUsage(i64s);\n+        assert(dynamic_usage == incremental_dynamic_usage * i64s.size());\n+    }\n     (void)MillisToTimeval(i64);\n     const double d = ser_uint64_to_double(u64);\n     assert(ser_double_to_uint64(d) == u64);"
      }
    ]
  }
]