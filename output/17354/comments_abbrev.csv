promag,2019-11-02 16:25:25,I've noticed that `SetUsedDestinationState` is not called with `used=false` so at the moment half of the function is unused code - is someone planning to change this or should we drop the unused code?,https://github.com/bitcoin/bitcoin/pull/17354#issuecomment-549058916,549058916,
promag,2019-11-02 16:35:16,"Maybe we should add `WalletBatch&` argument to all wallet ""mutation"" methods?",https://github.com/bitcoin/bitcoin/pull/17354#issuecomment-549059872,549059872,
promag,2019-11-07 08:49:08,@achow101 @meshcollider friendly review request.,https://github.com/bitcoin/bitcoin/pull/17354#issuecomment-550982547,550982547,
ryanofsky,2019-11-07 11:58:31,"> Maybe we should add `WalletBatch&` argument to all wallet ""mutation"" methods?\n\nI'd like this convention since it would make it clearer which methods could hit the database. I'd like it even more if it was extended to methods that read and didn't just mutate the database and was extended to KeyMan and SigningProvider classes so the ugly `encrypted_batch` hack could go away.\n(WalletBatch cou",https://github.com/bitcoin/bitcoin/pull/17354#issuecomment-551050251,551050251,
promag,2019-11-07 12:13:02,"@ryanofsky original goal was to remove the recursive lock. Note that now `SetUsedDestinationState` uses the existing batch in `AddToWallet` - resulting in just one flush per wallet transaction (IIUC).\n\nThanks for the review!\n\nUpdated OP.",https://github.com/bitcoin/bitcoin/pull/17354#issuecomment-551054578,551054578,
ryanofsky,2019-11-07 12:20:59,"> @ryanofsky original goal was to remove the recursive lock. Note that now `SetUsedDestinationState` uses the existing batch in `AddToWallet` - resulting in just one flush per wallet transaction (IIUC).\n\nGood to mention the motivation and brag about improvements like this in the PR description. It helps to understand the change and motivate reviews",https://github.com/bitcoin/bitcoin/pull/17354#issuecomment-551057006,551057006,
promag,2019-11-07 12:24:13,"> And maybe moving toward a consistent convention for passing batch instances?\n\nI understand that you support this, if others also then I can follow up - just add üëç here.",https://github.com/bitcoin/bitcoin/pull/17354#issuecomment-551058010,551058010,
achow101,2019-11-07 23:26:56,ACK 0b75a7f0680d16a41043864a897470324917b1e8,https://github.com/bitcoin/bitcoin/pull/17354#issuecomment-551313298,551313298,
MarcoFalke,2019-11-07 23:53:42,ACK 0b75a7f0680d16a41043864a897470324917b1e8,https://github.com/bitcoin/bitcoin/pull/17354#issuecomment-551320379,551320379,
