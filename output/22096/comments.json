[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850544924",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-850544924",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
    "id": 850544924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDU0NDkyNA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-28T16:50:25Z",
    "updated_at": "2021-05-28T16:50:25Z",
    "author_association": "MEMBER",
    "body": "I agree this makes sense.  \r\n\r\nWhile you're improving the addrfetch logic, perhaps we could also add a timeout for disconnection so that if an addrfetch peer hasn't responded to our `getaddr` for some amount of time, we eventually disconnect regardless?  I believe right now we'd just stay connected indefinitely to such a peer.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850544924/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850761176",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-850761176",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
    "id": 850761176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDc2MTE3Ng==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-29T03:27:04Z",
    "updated_at": "2021-05-29T03:27:04Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850761176/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/851036683",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-851036683",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
    "id": 851036683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTAzNjY4Mw==",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-30T17:51:19Z",
    "updated_at": "2021-05-30T17:52:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "> While you're improving the addrfetch logic, perhaps we could also add a timeout for disconnection so that if an addrfetch peer hasn't responded to our `getaddr` for some amount of time, we eventually disconnect regardless? I believe right now we'd just stay connected indefinitely to such a peer.\r\n\r\nYes, I think that would be useful, and I will add this. I think such an addrfetch peer also wouldn't count toward the max full outbound limit in spite of effectively behaving like one. As for the timeout, I'd suggest a value `4*AVG_ADDRESS_BROADCAST_INTERVAL = 2min` after connection.\r\n\r\n> half baked thought: Wondering if it would make sense to combine this value with the one used here. In my understanding, both are trying to use the number of addrs to discern [response to getaddr] vs [probably a self-announcement]. We could introduce a constant that's used in both places.\r\n\r\nDo you suggest just using `size > 10` instead of 1 in the check? More seems difficult, because the rest of the criteria work on the level of individual addrs.\r\n\r\n> I'm also wondering if we can add functional test coverage for `AddrFetch` connections. I think the groundwork is in place with the outbound-full-relay and block-relay-only connections. We might just be able to add the addr-fetch option to TestNode.add_outbound_p2p_connection, the addconnection RPC, and CConnman::AddConnection\r\ntimeout behavior is tested. \r\n\r\nGood idea! I think it would make sense to combine this with @sdaftuar 's suggestion of a timeout, so that the timout will be tested. \r\nAdding AddrFetch to the test framework actually does seem to work exactly as you suggested, just need to figure out some details and will add this in the next days (unless reviewers prefer that to be a separate PR). \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/851036683/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/853943719",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-853943719",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
    "id": 853943719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1Mzk0MzcxOQ==",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-03T15:08:55Z",
    "updated_at": "2021-06-03T15:08:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I added the timeout and a functional test now. Thanks a lot @amitiuttarwar for help with the functional test!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/853943719/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/854872805",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-854872805",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
    "id": 854872805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NDg3MjgwNQ==",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-04T16:54:01Z",
    "updated_at": "2021-06-04T16:54:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the review @jonatack! I took your suggestions and pushed an update.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/854872805/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/856458778",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-856458778",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
    "id": 856458778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjQ1ODc3OA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-08T05:38:19Z",
    "updated_at": "2021-06-08T05:38:19Z",
    "author_association": "MEMBER",
    "body": "utACK 535c990e16c6c191aa1b484b800a16bf5e4d0765",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/856458778/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/859397506",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-859397506",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
    "id": 859397506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTM5NzUwNg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-11T08:48:20Z",
    "updated_at": "2021-06-11T08:48:20Z",
    "author_association": "MEMBER",
    "body": "Code review ACK 8dbf2b210dbdaddc11295b926fefddca127d7e8a",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/859397506/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862106795",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-862106795",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
    "id": 862106795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MjEwNjc5NQ==",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-16T07:04:52Z",
    "updated_at": "2021-06-16T07:18:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Analyzing #22243 gave me the concern that a timeout of `4*AVG_ADDRESS_BROADCAST_INTERVAL = 2min` may be  too low, given the distribution of `PoissonNextSend()`, leading to the node disconnecting early before the peer would send an addr too often. I'll do some simulations later today to confirm.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/862106795/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863531523",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-863531523",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
    "id": 863531523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzUzMTUyMw==",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-17T20:11:22Z",
    "updated_at": "2021-06-17T20:11:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "I changed the timeout to `10 * AVG_ADDRESS_BROADCAST_INTERVAL = 5min`. Simulated this, and while the probability of failure (i.e. disconnecting before the peer has scheduled its getaddr answer) was ~1.8% before, it is now of order 10^-5 which I think is fine.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863531523/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863533983",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-863533983",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
    "id": 863533983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzUzMzk4Mw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-17T20:15:11Z",
    "updated_at": "2021-06-17T20:15:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nGood catch!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863533983/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863597963",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-863597963",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
    "id": 863597963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzU5Nzk2Mw==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-17T22:16:33Z",
    "updated_at": "2021-06-17T22:16:33Z",
    "author_association": "MEMBER",
    "body": "reACK 96061d3410898d4759488e50d1f78211849ede50",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863597963/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863915473",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-863915473",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
    "id": 863915473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzkxNTQ3Mw==",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?u=06eb9ae4f9b3f954056098860decccbf1340e40f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-18T09:55:26Z",
    "updated_at": "2021-06-18T09:55:26Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/863915473/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864006264",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-864006264",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
    "id": 864006264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NDAwNjI2NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-18T12:34:57Z",
    "updated_at": "2021-06-18T12:34:57Z",
    "author_association": "MEMBER",
    "body": "Code review ACK 96061d3410898d4759488e50d1f78211849ede50",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/864006264/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/878653183",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-878653183",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
    "id": 878653183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODY1MzE4Mw==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-12T23:03:11Z",
    "updated_at": "2021-07-12T23:03:11Z",
    "author_association": "MEMBER",
    "body": "reACK 5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/878653183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/883325420",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-883325420",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
    "id": 883325420,
    "node_id": "IC_kwDOABII5840pnns",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?u=06eb9ae4f9b3f954056098860decccbf1340e40f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-20T11:42:44Z",
    "updated_at": "2021-07-20T11:42:44Z",
    "author_association": "MEMBER",
    "body": "ACK 5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/883325420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/883372535",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-883372535",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22096",
    "id": 883372535,
    "node_id": "IC_kwDOABII5840pzH3",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-20T12:59:55Z",
    "updated_at": "2021-07-20T12:59:55Z",
    "author_association": "MEMBER",
    "body": "Posthumous ACK 5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/883372535/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644893405",
    "pull_request_review_id": 675415633,
    "id": 644893405,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDg5MzQwNQ==",
    "diff_hunk": "@@ -4364,6 +4366,12 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n \n     MaybeSendPing(*pto, *peer, current_time);\n \n+    if(pto->IsAddrFetchConn() && current_time - std::chrono::seconds(pto->nTimeConnected) > 4 * AVG_ADDRESS_BROADCAST_INTERVAL) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, don't hesitate to run clang format on the changes\r\n```suggestion\r\n    if (pto->IsAddrFetchConn() && current_time - std::chrono::seconds(pto->nTimeConnected) > 4 * AVG_ADDRESS_BROADCAST_INTERVAL) {\r\n```",
    "created_at": "2021-06-03T15:28:28Z",
    "updated_at": "2021-06-03T15:54:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644893405",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644893405"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644893405"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644893405/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4369,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644894232",
    "pull_request_review_id": 675415633,
    "id": 644894232,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDg5NDIzMg==",
    "diff_hunk": "@@ -337,7 +337,7 @@ static RPCHelpMan addconnection()\n         \"\\nOpen an outbound connection to a specified node. This RPC is for testing only.\\n\",\n         {\n             {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The IP address and port to attempt connecting to.\"},\n-            {\"connection_type\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Type of connection to open, either \\\"outbound-full-relay\\\" or \\\"block-relay-only\\\".\"},\n+            {\"connection_type\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Type of connection to open, \\\"outbound-full-relay\\\", \\\"block-relay-only\\\" or \\\"addr-fetch\\\".\"},",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "suggest replacing the comma with parentheses or a colon\r\n```suggestion\r\n            {\"connection_type\", RPCArg::Type::STR, RPCArg::Optional::NO,\r\n             \"Type of connection to open (\\\"outbound-full-relay\\\", \\\"block-relay-only\\\" or \\\"addr-fetch\\\").\"},\r\n```",
    "created_at": "2021-06-03T15:29:27Z",
    "updated_at": "2021-06-03T16:00:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644894232",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644894232"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644894232"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644894232/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 340,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644895675",
    "pull_request_review_id": 675415633,
    "id": 644895675,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDg5NTY3NQ==",
    "diff_hunk": "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class AddrFetchPeer(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.got_getheaders = False\n+        self.got_getaddr = False",
    "path": "test/functional/p2p_addrfetch.py",
    "position": null,
    "original_position": 27,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "New variables naming nit, `s/got_*/received_*/`",
    "created_at": "2021-06-03T15:31:10Z",
    "updated_at": "2021-06-03T15:54:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644895675",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644895675"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644895675"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644895675/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644896581",
    "pull_request_review_id": 675415633,
    "id": 644896581,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDg5NjU4MQ==",
    "diff_hunk": "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class AddrFetchPeer(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.got_getheaders = False\n+        self.got_getaddr = False\n+\n+    def on_getheaders(self, message): self.got_getheaders = True\n+    def on_getaddr(self, message): self.got_getaddr = True\n+\n+\n+class P2PAddrFetch(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        self.log.info('Connect to an addr-fetch peer')\n+        peer = node.add_outbound_p2p_connection(AddrFetchPeer(), p2p_idx=0, connection_type=\"addr-fetch\")\n+        info = node.getpeerinfo()\n+        assert_equal(len(info), 1)\n+        assert_equal(info[0]['connection_type'], 'addr-fetch')\n+\n+        self.log.info('Check that we send getaddr but don\\'t try to sync headers with the addr-fetch peer')",
    "path": "test/functional/p2p_addrfetch.py",
    "position": null,
    "original_position": 47,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n        self.log.info(\"Check that we send getaddr but don't try to sync headers with the addr-fetch peer\")\r\n```",
    "created_at": "2021-06-03T15:32:21Z",
    "updated_at": "2021-06-03T15:54:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644896581",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644896581"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644896581"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644896581/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 47,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644897008",
    "pull_request_review_id": 675415633,
    "id": 644897008,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDg5NzAwOA==",
    "diff_hunk": "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class AddrFetchPeer(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.got_getheaders = False\n+        self.got_getaddr = False\n+\n+    def on_getheaders(self, message): self.got_getheaders = True\n+    def on_getaddr(self, message): self.got_getaddr = True\n+\n+\n+class P2PAddrFetch(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        self.log.info('Connect to an addr-fetch peer')\n+        peer = node.add_outbound_p2p_connection(AddrFetchPeer(), p2p_idx=0, connection_type=\"addr-fetch\")\n+        info = node.getpeerinfo()\n+        assert_equal(len(info), 1)\n+        assert_equal(info[0]['connection_type'], 'addr-fetch')\n+\n+        self.log.info('Check that we send getaddr but don\\'t try to sync headers with the addr-fetch peer')\n+        peer.sync_send_with_ping",
    "path": "test/functional/p2p_addrfetch.py",
    "position": null,
    "original_position": 48,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n        peer.sync_send_with_ping()\r\n```",
    "created_at": "2021-06-03T15:32:53Z",
    "updated_at": "2021-06-03T15:54:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644897008",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644897008"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644897008"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644897008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 48,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644897593",
    "pull_request_review_id": 675415633,
    "id": 644897593,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDg5NzU5Mw==",
    "diff_hunk": "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class AddrFetchPeer(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.got_getheaders = False\n+        self.got_getaddr = False\n+\n+    def on_getheaders(self, message): self.got_getheaders = True\n+    def on_getaddr(self, message): self.got_getaddr = True\n+\n+\n+class P2PAddrFetch(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        self.log.info('Connect to an addr-fetch peer')\n+        peer = node.add_outbound_p2p_connection(AddrFetchPeer(), p2p_idx=0, connection_type=\"addr-fetch\")\n+        info = node.getpeerinfo()\n+        assert_equal(len(info), 1)\n+        assert_equal(info[0]['connection_type'], 'addr-fetch')\n+\n+        self.log.info('Check that we send getaddr but don\\'t try to sync headers with the addr-fetch peer')\n+        peer.sync_send_with_ping\n+        assert peer.got_getaddr\n+        assert not peer.got_getheaders\n+\n+        self.log.info('Check that answering the getaddr with a single address does not lead to disconnect')\n+        # This prevents disconnecting on self-announcements\n+        msg = msg_addr()\n+        msg.addrs = [ADDR]\n+        peer.send_and_ping(msg)\n+        assert_equal(len(node.getpeerinfo()), 1)\n+\n+        self.log.info('Check that answering with larger addr messages leads to disconnect')\n+        msg.addrs = [ADDR]*2",
    "path": "test/functional/p2p_addrfetch.py",
    "position": null,
    "original_position": 60,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "PEP8\r\n```suggestion\r\n        msg.addrs = [ADDR] * 2\r\n```",
    "created_at": "2021-06-03T15:33:40Z",
    "updated_at": "2021-06-03T15:54:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644897593",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644897593"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644897593"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644897593/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 60,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644897812",
    "pull_request_review_id": 675415633,
    "id": 644897812,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDg5NzgxMg==",
    "diff_hunk": "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class AddrFetchPeer(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.got_getheaders = False\n+        self.got_getaddr = False\n+\n+    def on_getheaders(self, message): self.got_getheaders = True\n+    def on_getaddr(self, message): self.got_getaddr = True\n+\n+\n+class P2PAddrFetch(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        self.log.info('Connect to an addr-fetch peer')\n+        peer = node.add_outbound_p2p_connection(AddrFetchPeer(), p2p_idx=0, connection_type=\"addr-fetch\")\n+        info = node.getpeerinfo()\n+        assert_equal(len(info), 1)\n+        assert_equal(info[0]['connection_type'], 'addr-fetch')\n+\n+        self.log.info('Check that we send getaddr but don\\'t try to sync headers with the addr-fetch peer')\n+        peer.sync_send_with_ping\n+        assert peer.got_getaddr\n+        assert not peer.got_getheaders\n+\n+        self.log.info('Check that answering the getaddr with a single address does not lead to disconnect')\n+        # This prevents disconnecting on self-announcements\n+        msg = msg_addr()\n+        msg.addrs = [ADDR]\n+        peer.send_and_ping(msg)\n+        assert_equal(len(node.getpeerinfo()), 1)\n+\n+        self.log.info('Check that answering with larger addr messages leads to disconnect')\n+        msg.addrs = [ADDR]*2\n+        peer.send_message(msg)\n+        peer.wait_for_disconnect(timeout=5)\n+\n+        self.log.info('Check timeout for addr-fetch peer that do not send addrs')",
    "path": "test/functional/p2p_addrfetch.py",
    "position": null,
    "original_position": 64,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n        self.log.info('Check timeout for addr-fetch peer that does not send addrs')\r\n```",
    "created_at": "2021-06-03T15:33:56Z",
    "updated_at": "2021-06-03T15:54:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644897812",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644897812"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644897812"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644897812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 64,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644898105",
    "pull_request_review_id": 675415633,
    "id": 644898105,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDg5ODEwNQ==",
    "diff_hunk": "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class AddrFetchPeer(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.got_getheaders = False\n+        self.got_getaddr = False\n+\n+    def on_getheaders(self, message): self.got_getheaders = True\n+    def on_getaddr(self, message): self.got_getaddr = True\n+\n+\n+class P2PAddrFetch(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        self.log.info('Connect to an addr-fetch peer')\n+        peer = node.add_outbound_p2p_connection(AddrFetchPeer(), p2p_idx=0, connection_type=\"addr-fetch\")\n+        info = node.getpeerinfo()\n+        assert_equal(len(info), 1)\n+        assert_equal(info[0]['connection_type'], 'addr-fetch')\n+\n+        self.log.info('Check that we send getaddr but don\\'t try to sync headers with the addr-fetch peer')\n+        peer.sync_send_with_ping\n+        assert peer.got_getaddr\n+        assert not peer.got_getheaders\n+\n+        self.log.info('Check that answering the getaddr with a single address does not lead to disconnect')\n+        # This prevents disconnecting on self-announcements\n+        msg = msg_addr()\n+        msg.addrs = [ADDR]\n+        peer.send_and_ping(msg)\n+        assert_equal(len(node.getpeerinfo()), 1)\n+\n+        self.log.info('Check that answering with larger addr messages leads to disconnect')\n+        msg.addrs = [ADDR]*2\n+        peer.send_message(msg)\n+        peer.wait_for_disconnect(timeout=5)\n+\n+        self.log.info('Check timeout for addr-fetch peer that do not send addrs')\n+        peer = node.add_outbound_p2p_connection(AddrFetchPeer(), p2p_idx=1, connection_type=\"addr-fetch\")\n+        node.setmocktime(int(time.time()) + 130)  # Timeout: 2 min\n+        peer.sync_send_with_ping",
    "path": "test/functional/p2p_addrfetch.py",
    "position": null,
    "original_position": 67,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```diff\r\n-        node.setmocktime(int(time.time()) + 130)  # Timeout: 2 min\r\n-        peer.sync_send_with_ping\r\n+        node.setmocktime(int(time.time()) + 130)  # Timeout: 2 minutes (with 10 seconds of leeway)\r\n+        peer.sync_send_with_ping()\r\n```",
    "created_at": "2021-06-03T15:34:19Z",
    "updated_at": "2021-06-03T16:12:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644898105",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644898105"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644898105"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644898105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 67,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644898589",
    "pull_request_review_id": 675415633,
    "id": 644898589,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDg5ODU4OQ==",
    "diff_hunk": "@@ -557,9 +557,9 @@ def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, **kwargs):\n         return p2p_conn\n \n     def add_outbound_p2p_connection(self, p2p_conn, *, p2p_idx, connection_type=\"outbound-full-relay\", **kwargs):\n-        \"\"\"Add an outbound p2p connection from node. Either\n-        full-relay(\"outbound-full-relay\") or\n-        block-relay-only(\"block-relay-only\") connection.\n+        \"\"\"Add an outbound p2p connection from node. Must be a\n+        full-relay(\"outbound-full-relay\"), block-relay-only(\"block-relay-only\")",
    "path": "test/functional/test_framework/test_node.py",
    "position": null,
    "original_position": 8,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n        full-relay (\"outbound-full-relay\"), block-relay-only (\"block-relay-only\")\r\n```\r\nor: `Must be an \"outbound-full-relay\", \"block-relay-only\" or \"addr-fetch\" connection.`",
    "created_at": "2021-06-03T15:34:57Z",
    "updated_at": "2021-06-03T15:54:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644898589",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644898589"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644898589"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644898589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 561,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644912954",
    "pull_request_review_id": 675415633,
    "id": 644912954,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NDkxMjk1NA==",
    "diff_hunk": "@@ -1166,16 +1166,27 @@ void CConnman::CreateNodeFromAcceptedSocket(SOCKET hSocket,\n \n bool CConnman::AddConnection(const std::string& address, ConnectionType conn_type)\n {\n-    if (conn_type != ConnectionType::OUTBOUND_FULL_RELAY && conn_type != ConnectionType::BLOCK_RELAY) return false;\n-\n-    const int max_connections = conn_type == ConnectionType::OUTBOUND_FULL_RELAY ? m_max_outbound_full_relay : m_max_outbound_block_relay;\n+    int max_connections;\n+    switch(conn_type) {\n+        case ConnectionType::INBOUND:\n+        case ConnectionType::MANUAL:\n+        case ConnectionType::FEELER:\n+            return false;\n+        case ConnectionType::OUTBOUND_FULL_RELAY:\n+            max_connections = m_max_outbound_full_relay;\n+        case ConnectionType::BLOCK_RELAY:\n+            max_connections = m_max_outbound_block_relay;\n+        // no limit for ADDR_FETCH because -seednode has no limit either\n+        case ConnectionType:: ADDR_FETCH:\n+            max_connections = 0;\n+    }",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 20,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    } // no default case, so the compiler can warn about missing cases\r\n```\r\n",
    "created_at": "2021-06-03T15:49:38Z",
    "updated_at": "2021-06-03T15:58:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644912954",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644912954"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644912954"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/644912954/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1182,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645705818",
    "pull_request_review_id": 676475587,
    "id": 645705818,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTcwNTgxOA==",
    "diff_hunk": "@@ -4364,6 +4366,12 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n \n     MaybeSendPing(*pto, *peer, current_time);\n \n+    if(pto->IsAddrFetchConn() && current_time - std::chrono::seconds(pto->nTimeConnected) > 4 * AVG_ADDRESS_BROADCAST_INTERVAL) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done, thanks",
    "created_at": "2021-06-04T16:32:28Z",
    "updated_at": "2021-06-04T16:32:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645705818",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645705818"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645705818"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645705818/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4369,
    "side": "RIGHT",
    "in_reply_to_id": 644893405
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645706319",
    "pull_request_review_id": 676476260,
    "id": 645706319,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTcwNjMxOQ==",
    "diff_hunk": "@@ -337,7 +337,7 @@ static RPCHelpMan addconnection()\n         \"\\nOpen an outbound connection to a specified node. This RPC is for testing only.\\n\",\n         {\n             {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The IP address and port to attempt connecting to.\"},\n-            {\"connection_type\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Type of connection to open, either \\\"outbound-full-relay\\\" or \\\"block-relay-only\\\".\"},\n+            {\"connection_type\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Type of connection to open, \\\"outbound-full-relay\\\", \\\"block-relay-only\\\" or \\\"addr-fetch\\\".\"},",
    "path": "src/rpc/net.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2021-06-04T16:33:20Z",
    "updated_at": "2021-06-04T16:33:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645706319",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645706319"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645706319"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645706319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 340,
    "side": "RIGHT",
    "in_reply_to_id": 644894232
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645707433",
    "pull_request_review_id": 676478003,
    "id": 645707433,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTcwNzQzMw==",
    "diff_hunk": "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class AddrFetchPeer(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.got_getheaders = False\n+        self.got_getaddr = False\n+\n+    def on_getheaders(self, message): self.got_getheaders = True\n+    def on_getaddr(self, message): self.got_getaddr = True\n+\n+\n+class P2PAddrFetch(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        self.log.info('Connect to an addr-fetch peer')\n+        peer = node.add_outbound_p2p_connection(AddrFetchPeer(), p2p_idx=0, connection_type=\"addr-fetch\")\n+        info = node.getpeerinfo()\n+        assert_equal(len(info), 1)\n+        assert_equal(info[0]['connection_type'], 'addr-fetch')\n+\n+        self.log.info('Check that we send getaddr but don\\'t try to sync headers with the addr-fetch peer')\n+        peer.sync_send_with_ping",
    "path": "test/functional/p2p_addrfetch.py",
    "position": null,
    "original_position": 48,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "oops, thanks!",
    "created_at": "2021-06-04T16:35:13Z",
    "updated_at": "2021-06-04T16:35:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645707433",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645707433"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645707433"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645707433/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 48,
    "side": "RIGHT",
    "in_reply_to_id": 644897008
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645707951",
    "pull_request_review_id": 676478667,
    "id": 645707951,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTcwNzk1MQ==",
    "diff_hunk": "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class AddrFetchPeer(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.got_getheaders = False\n+        self.got_getaddr = False\n+\n+    def on_getheaders(self, message): self.got_getheaders = True\n+    def on_getaddr(self, message): self.got_getaddr = True\n+\n+\n+class P2PAddrFetch(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        self.log.info('Connect to an addr-fetch peer')\n+        peer = node.add_outbound_p2p_connection(AddrFetchPeer(), p2p_idx=0, connection_type=\"addr-fetch\")\n+        info = node.getpeerinfo()\n+        assert_equal(len(info), 1)\n+        assert_equal(info[0]['connection_type'], 'addr-fetch')\n+\n+        self.log.info('Check that we send getaddr but don\\'t try to sync headers with the addr-fetch peer')\n+        peer.sync_send_with_ping\n+        assert peer.got_getaddr\n+        assert not peer.got_getheaders\n+\n+        self.log.info('Check that answering the getaddr with a single address does not lead to disconnect')\n+        # This prevents disconnecting on self-announcements\n+        msg = msg_addr()\n+        msg.addrs = [ADDR]\n+        peer.send_and_ping(msg)\n+        assert_equal(len(node.getpeerinfo()), 1)\n+\n+        self.log.info('Check that answering with larger addr messages leads to disconnect')\n+        msg.addrs = [ADDR]*2\n+        peer.send_message(msg)\n+        peer.wait_for_disconnect(timeout=5)\n+\n+        self.log.info('Check timeout for addr-fetch peer that do not send addrs')",
    "path": "test/functional/p2p_addrfetch.py",
    "position": null,
    "original_position": 64,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed",
    "created_at": "2021-06-04T16:36:03Z",
    "updated_at": "2021-06-04T16:36:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645707951",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645707951"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645707951"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645707951/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 64,
    "side": "RIGHT",
    "in_reply_to_id": 644897812
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645714090",
    "pull_request_review_id": 676487156,
    "id": 645714090,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTcxNDA5MA==",
    "diff_hunk": "@@ -0,0 +1,72 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class AddrFetchPeer(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.got_getheaders = False\n+        self.got_getaddr = False\n+\n+    def on_getheaders(self, message): self.got_getheaders = True\n+    def on_getaddr(self, message): self.got_getaddr = True\n+\n+\n+class P2PAddrFetch(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        self.log.info('Connect to an addr-fetch peer')\n+        peer = node.add_outbound_p2p_connection(AddrFetchPeer(), p2p_idx=0, connection_type=\"addr-fetch\")\n+        info = node.getpeerinfo()\n+        assert_equal(len(info), 1)\n+        assert_equal(info[0]['connection_type'], 'addr-fetch')\n+\n+        self.log.info('Check that we send getaddr but don\\'t try to sync headers with the addr-fetch peer')\n+        peer.sync_send_with_ping\n+        assert peer.got_getaddr\n+        assert not peer.got_getheaders\n+\n+        self.log.info('Check that answering the getaddr with a single address does not lead to disconnect')\n+        # This prevents disconnecting on self-announcements\n+        msg = msg_addr()\n+        msg.addrs = [ADDR]\n+        peer.send_and_ping(msg)\n+        assert_equal(len(node.getpeerinfo()), 1)\n+\n+        self.log.info('Check that answering with larger addr messages leads to disconnect')\n+        msg.addrs = [ADDR]*2\n+        peer.send_message(msg)\n+        peer.wait_for_disconnect(timeout=5)\n+\n+        self.log.info('Check timeout for addr-fetch peer that do not send addrs')\n+        peer = node.add_outbound_p2p_connection(AddrFetchPeer(), p2p_idx=1, connection_type=\"addr-fetch\")\n+        node.setmocktime(int(time.time()) + 130)  # Timeout: 2 min\n+        peer.sync_send_with_ping",
    "path": "test/functional/p2p_addrfetch.py",
    "position": null,
    "original_position": 67,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changed to 121 (more leeway is not really needed) and removed the `sync_send_with_ping()` which is incorrect here because it conflicts with the disconnect.",
    "created_at": "2021-06-04T16:46:46Z",
    "updated_at": "2021-06-04T16:46:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645714090",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645714090"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645714090"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645714090/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 67,
    "side": "RIGHT",
    "in_reply_to_id": 644898105
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645715316",
    "pull_request_review_id": 676488764,
    "id": 645715316,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTcxNTMxNg==",
    "diff_hunk": "@@ -557,9 +557,9 @@ def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, **kwargs):\n         return p2p_conn\n \n     def add_outbound_p2p_connection(self, p2p_conn, *, p2p_idx, connection_type=\"outbound-full-relay\", **kwargs):\n-        \"\"\"Add an outbound p2p connection from node. Either\n-        full-relay(\"outbound-full-relay\") or\n-        block-relay-only(\"block-relay-only\") connection.\n+        \"\"\"Add an outbound p2p connection from node. Must be a\n+        full-relay(\"outbound-full-relay\"), block-relay-only(\"block-relay-only\")",
    "path": "test/functional/test_framework/test_node.py",
    "position": null,
    "original_position": 8,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Took the short version, that should be clear enough.",
    "created_at": "2021-06-04T16:48:48Z",
    "updated_at": "2021-06-04T16:48:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645715316",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645715316"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645715316"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645715316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 561,
    "side": "RIGHT",
    "in_reply_to_id": 644898589
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645715483",
    "pull_request_review_id": 676488937,
    "id": 645715483,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTcxNTQ4Mw==",
    "diff_hunk": "@@ -1166,16 +1166,27 @@ void CConnman::CreateNodeFromAcceptedSocket(SOCKET hSocket,\n \n bool CConnman::AddConnection(const std::string& address, ConnectionType conn_type)\n {\n-    if (conn_type != ConnectionType::OUTBOUND_FULL_RELAY && conn_type != ConnectionType::BLOCK_RELAY) return false;\n-\n-    const int max_connections = conn_type == ConnectionType::OUTBOUND_FULL_RELAY ? m_max_outbound_full_relay : m_max_outbound_block_relay;\n+    int max_connections;\n+    switch(conn_type) {\n+        case ConnectionType::INBOUND:\n+        case ConnectionType::MANUAL:\n+        case ConnectionType::FEELER:\n+            return false;\n+        case ConnectionType::OUTBOUND_FULL_RELAY:\n+            max_connections = m_max_outbound_full_relay;\n+        case ConnectionType::BLOCK_RELAY:\n+            max_connections = m_max_outbound_block_relay;\n+        // no limit for ADDR_FETCH because -seednode has no limit either\n+        case ConnectionType:: ADDR_FETCH:\n+            max_connections = 0;\n+    }",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 20,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "d728c6c8717960d4cbc5c2ea10833ce997d7ae1b",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2021-06-04T16:49:01Z",
    "updated_at": "2021-06-04T16:49:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645715483",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645715483"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645715483"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/645715483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1182,
    "side": "RIGHT",
    "in_reply_to_id": 644912954
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/648166396",
    "pull_request_review_id": 679470138,
    "id": 648166396,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0ODE2NjM5Ng==",
    "diff_hunk": "@@ -0,0 +1,71 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class AddrFetchPeer(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.received_getheaders = False\n+        self.received_getaddr = False\n+\n+    def on_getheaders(self, message): self.received_getheaders = True\n+    def on_getaddr(self, message): self.received_getaddr = True",
    "path": "test/functional/p2p_addrfetch.py",
    "position": null,
    "original_position": 30,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "535c990e16c6c191aa1b484b800a16bf5e4d0765",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No need for this specialized subclass. The base P2PInterface counts messages received by type, so you can just use that:\r\n\r\n```diff\r\ndiff --git a/test/functional/p2p_addrfetch.py b/test/functional/p2p_addrfetch.py\r\nindex b50a710adb..e50e9e7ee4 100755\r\n--- a/test/functional/p2p_addrfetch.py\r\n+++ b/test/functional/p2p_addrfetch.py\r\n@@ -9,7 +9,7 @@ Test p2p addr-fetch connections\r\n import time\r\n \r\n from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\r\n-from test_framework.p2p import P2PInterface\r\n+from test_framework.p2p import P2PInterface, p2p_lock\r\n from test_framework.test_framework import BitcoinTestFramework\r\n from test_framework.util import assert_equal\r\n \r\n@@ -19,17 +19,6 @@ ADDR.nServices = NODE_NETWORK | NODE_WITNESS\r\n ADDR.ip = \"192.0.0.8\"\r\n ADDR.port = 18444\r\n \r\n-\r\n-class AddrFetchPeer(P2PInterface):\r\n-    def __init__(self):\r\n-        super().__init__()\r\n-        self.received_getheaders = False\r\n-        self.received_getaddr = False\r\n-\r\n-    def on_getheaders(self, message): self.received_getheaders = True\r\n-    def on_getaddr(self, message): self.received_getaddr = True\r\n-\r\n-\r\n class P2PAddrFetch(BitcoinTestFramework):\r\n \r\n     def set_test_params(self):\r\n@@ -39,15 +28,16 @@ class P2PAddrFetch(BitcoinTestFramework):\r\n     def run_test(self):\r\n         node = self.nodes[0]\r\n         self.log.info(\"Connect to an addr-fetch peer\")\r\n-        peer = node.add_outbound_p2p_connection(AddrFetchPeer(), p2p_idx=0, connection_type=\"addr-fetch\")\r\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"addr-fetch\")\r\n         info = node.getpeerinfo()\r\n         assert_equal(len(info), 1)\r\n         assert_equal(info[0]['connection_type'], 'addr-fetch')\r\n \r\n         self.log.info(\"Check that we send getaddr but don't try to sync headers with the addr-fetch peer\")\r\n         peer.sync_send_with_ping()\r\n-        assert peer.received_getaddr\r\n-        assert not peer.received_getheaders\r\n+        with p2p_lock:\r\n+            assert peer.message_count['getaddr'] >= 1\r\n+            assert peer.message_count['getheaders'] == 0\r\n \r\n         self.log.info(\"Check that answering the getaddr with a single address does not lead to disconnect\")\r\n         # This prevents disconnecting on self-announcements\r\n@@ -62,7 +52,7 @@ class P2PAddrFetch(BitcoinTestFramework):\r\n         peer.wait_for_disconnect(timeout=5)\r\n \r\n         self.log.info(\"Check timeout for addr-fetch peer that does not send addrs\")\r\n-        peer = node.add_outbound_p2p_connection(AddrFetchPeer(), p2p_idx=1, connection_type=\"addr-fetch\")\r\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=1, connection_type=\"addr-fetch\")\r\n         node.setmocktime(int(time.time()) + 121)  # Timeout: 2 minutes\r\n         peer.wait_for_disconnect(timeout=5)\r\n```\r\n\r\n(this also fixes a potential race where data in the `P2PInterface` was being read without locking the p2p_lock)",
    "created_at": "2021-06-09T10:17:18Z",
    "updated_at": "2021-06-09T10:32:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r648166396",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/648166396"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r648166396"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/648166396/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 23,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 30,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/649520004",
    "pull_request_review_id": 681243752,
    "id": 649520004,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0OTUyMDAwNA==",
    "diff_hunk": "@@ -0,0 +1,71 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class AddrFetchPeer(P2PInterface):\n+    def __init__(self):\n+        super().__init__()\n+        self.received_getheaders = False\n+        self.received_getaddr = False\n+\n+    def on_getheaders(self, message): self.received_getheaders = True\n+    def on_getaddr(self, message): self.received_getaddr = True",
    "path": "test/functional/p2p_addrfetch.py",
    "position": null,
    "original_position": 30,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "535c990e16c6c191aa1b484b800a16bf5e4d0765",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks - I simplified the test as suggested. (with the slightly stricter `assert peer.message_count['getaddr'] == 1`)\r\n",
    "created_at": "2021-06-10T20:45:04Z",
    "updated_at": "2021-06-10T20:45:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r649520004",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/649520004"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r649520004"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/649520004/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 23,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 30,
    "side": "RIGHT",
    "in_reply_to_id": 648166396
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655642075",
    "pull_request_review_id": 688781682,
    "id": 655642075,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTY0MjA3NQ==",
    "diff_hunk": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface, p2p_lock\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class P2PAddrFetch(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Connect to an addr-fetch peer\")\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"addr-fetch\")\n+        info = node.getpeerinfo()\n+        assert_equal(len(info), 1)\n+        assert_equal(info[0]['connection_type'], 'addr-fetch')\n+\n+        self.log.info(\"Check that we send getaddr but don't try to sync headers with the addr-fetch peer\")\n+        peer.sync_send_with_ping()\n+        with p2p_lock:\n+            assert peer.message_count['getaddr'] == 1\n+            assert peer.message_count['getheaders'] == 0\n+\n+        self.log.info(\"Check that answering the getaddr with a single address does not lead to disconnect\")\n+        # This prevents disconnecting on self-announcements\n+        msg = msg_addr()\n+        msg.addrs = [ADDR]\n+        peer.send_and_ping(msg)\n+        assert_equal(len(node.getpeerinfo()), 1)\n+\n+        self.log.info(\"Check that answering with larger addr messages leads to disconnect\")\n+        msg.addrs = [ADDR] * 2\n+        peer.send_message(msg)\n+        peer.wait_for_disconnect(timeout=5)",
    "path": "test/functional/p2p_addrfetch.py",
    "position": 53,
    "original_position": 53,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "96061d3410898d4759488e50d1f78211849ede50",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is the `assert_equal()` necessary for the validation?\r\n\r\n```suggestion\r\n        peer.wait_for_disconnect(timeout=5)\r\n        assert_equal(len(node.getpeerinfo()), 0)\r\n```",
    "created_at": "2021-06-21T19:17:35Z",
    "updated_at": "2021-06-21T19:18:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r655642075",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655642075"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r655642075"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655642075/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 53,
    "original_line": 53,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655642422",
    "pull_request_review_id": 688781682,
    "id": 655642422,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTY0MjQyMg==",
    "diff_hunk": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface, p2p_lock\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class P2PAddrFetch(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Connect to an addr-fetch peer\")\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"addr-fetch\")\n+        info = node.getpeerinfo()\n+        assert_equal(len(info), 1)\n+        assert_equal(info[0]['connection_type'], 'addr-fetch')\n+\n+        self.log.info(\"Check that we send getaddr but don't try to sync headers with the addr-fetch peer\")\n+        peer.sync_send_with_ping()\n+        with p2p_lock:\n+            assert peer.message_count['getaddr'] == 1\n+            assert peer.message_count['getheaders'] == 0\n+\n+        self.log.info(\"Check that answering the getaddr with a single address does not lead to disconnect\")\n+        # This prevents disconnecting on self-announcements\n+        msg = msg_addr()\n+        msg.addrs = [ADDR]\n+        peer.send_and_ping(msg)\n+        assert_equal(len(node.getpeerinfo()), 1)\n+\n+        self.log.info(\"Check that answering with larger addr messages leads to disconnect\")\n+        msg.addrs = [ADDR] * 2\n+        peer.send_message(msg)\n+        peer.wait_for_disconnect(timeout=5)\n+\n+        self.log.info(\"Check timeout for addr-fetch peer that does not send addrs\")\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=1, connection_type=\"addr-fetch\")\n+        node.setmocktime(int(time.time()) + 301)  # Timeout: 5 minutes\n+        peer.wait_for_disconnect(timeout=5)",
    "path": "test/functional/p2p_addrfetch.py",
    "position": 58,
    "original_position": 58,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "96061d3410898d4759488e50d1f78211849ede50",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is the `assert_equal()` necessary for the validation?\r\n\r\n```suggestion\r\n        peer.wait_for_disconnect(timeout=5)\r\n        assert_equal(len(node.getpeerinfo()), 0)\r\n```",
    "created_at": "2021-06-21T19:18:11Z",
    "updated_at": "2021-06-21T19:19:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r655642422",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655642422"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r655642422"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655642422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 58,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655799680",
    "pull_request_review_id": 688972196,
    "id": 655799680,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTc5OTY4MA==",
    "diff_hunk": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface, p2p_lock\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class P2PAddrFetch(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Connect to an addr-fetch peer\")\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"addr-fetch\")\n+        info = node.getpeerinfo()\n+        assert_equal(len(info), 1)\n+        assert_equal(info[0]['connection_type'], 'addr-fetch')\n+\n+        self.log.info(\"Check that we send getaddr but don't try to sync headers with the addr-fetch peer\")\n+        peer.sync_send_with_ping()\n+        with p2p_lock:\n+            assert peer.message_count['getaddr'] == 1\n+            assert peer.message_count['getheaders'] == 0\n+\n+        self.log.info(\"Check that answering the getaddr with a single address does not lead to disconnect\")\n+        # This prevents disconnecting on self-announcements\n+        msg = msg_addr()\n+        msg.addrs = [ADDR]\n+        peer.send_and_ping(msg)\n+        assert_equal(len(node.getpeerinfo()), 1)\n+\n+        self.log.info(\"Check that answering with larger addr messages leads to disconnect\")\n+        msg.addrs = [ADDR] * 2\n+        peer.send_message(msg)\n+        peer.wait_for_disconnect(timeout=5)",
    "path": "test/functional/p2p_addrfetch.py",
    "position": 53,
    "original_position": 53,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "96061d3410898d4759488e50d1f78211849ede50",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "checking the node's connections doesn't seem harmful, but it also doesn't seem necessary because of the way the `wait_for_disconnect` function works- it keeps checking if the P2PConnection object [is connected](https://github.com/bitcoin/bitcoin/blob/master/test/functional/test_framework/p2p.py#L154), and would fail if that was still true after 5 seconds. ",
    "created_at": "2021-06-22T00:53:54Z",
    "updated_at": "2021-06-22T00:53:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r655799680",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655799680"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r655799680"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/655799680/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 53,
    "original_line": 53,
    "side": "RIGHT",
    "in_reply_to_id": 655642075
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662613950",
    "pull_request_review_id": 697682286,
    "id": 662613950,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjYxMzk1MA==",
    "diff_hunk": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface, p2p_lock\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class P2PAddrFetch(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Connect to an addr-fetch peer\")\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"addr-fetch\")\n+        info = node.getpeerinfo()\n+        assert_equal(len(info), 1)\n+        assert_equal(info[0]['connection_type'], 'addr-fetch')\n+\n+        self.log.info(\"Check that we send getaddr but don't try to sync headers with the addr-fetch peer\")\n+        peer.sync_send_with_ping()\n+        with p2p_lock:\n+            assert peer.message_count['getaddr'] == 1\n+            assert peer.message_count['getheaders'] == 0\n+\n+        self.log.info(\"Check that answering the getaddr with a single address does not lead to disconnect\")\n+        # This prevents disconnecting on self-announcements\n+        msg = msg_addr()\n+        msg.addrs = [ADDR]\n+        peer.send_and_ping(msg)\n+        assert_equal(len(node.getpeerinfo()), 1)\n+\n+        self.log.info(\"Check that answering with larger addr messages leads to disconnect\")\n+        msg.addrs = [ADDR] * 2\n+        peer.send_message(msg)\n+        peer.wait_for_disconnect(timeout=5)",
    "path": "test/functional/p2p_addrfetch.py",
    "position": 53,
    "original_position": 53,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "96061d3410898d4759488e50d1f78211849ede50",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree that `wait_for_disconnect` should be sufficient.",
    "created_at": "2021-07-01T21:54:24Z",
    "updated_at": "2021-07-01T21:54:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r662613950",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662613950"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r662613950"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662613950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 53,
    "original_line": 53,
    "side": "RIGHT",
    "in_reply_to_id": 655642075
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662614707",
    "pull_request_review_id": 697683113,
    "id": 662614707,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjYxNDcwNw==",
    "diff_hunk": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface, p2p_lock\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class P2PAddrFetch(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Connect to an addr-fetch peer\")\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"addr-fetch\")\n+        info = node.getpeerinfo()\n+        assert_equal(len(info), 1)\n+        assert_equal(info[0]['connection_type'], 'addr-fetch')\n+\n+        self.log.info(\"Check that we send getaddr but don't try to sync headers with the addr-fetch peer\")\n+        peer.sync_send_with_ping()\n+        with p2p_lock:\n+            assert peer.message_count['getaddr'] == 1\n+            assert peer.message_count['getheaders'] == 0\n+\n+        self.log.info(\"Check that answering the getaddr with a single address does not lead to disconnect\")\n+        # This prevents disconnecting on self-announcements\n+        msg = msg_addr()\n+        msg.addrs = [ADDR]\n+        peer.send_and_ping(msg)\n+        assert_equal(len(node.getpeerinfo()), 1)\n+\n+        self.log.info(\"Check that answering with larger addr messages leads to disconnect\")\n+        msg.addrs = [ADDR] * 2\n+        peer.send_message(msg)\n+        peer.wait_for_disconnect(timeout=5)\n+\n+        self.log.info(\"Check timeout for addr-fetch peer that does not send addrs\")\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=1, connection_type=\"addr-fetch\")\n+        node.setmocktime(int(time.time()) + 301)  # Timeout: 5 minutes\n+        peer.wait_for_disconnect(timeout=5)",
    "path": "test/functional/p2p_addrfetch.py",
    "position": 58,
    "original_position": 58,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "96061d3410898d4759488e50d1f78211849ede50",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "same as [here](https://github.com/bitcoin/bitcoin/pull/22096#discussion_r655799680), `wait_for_disconnect` should be sufficient.",
    "created_at": "2021-07-01T21:56:02Z",
    "updated_at": "2021-07-01T21:56:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r662614707",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662614707"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r662614707"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/662614707/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 58,
    "original_line": 58,
    "side": "RIGHT",
    "in_reply_to_id": 655642422
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666747588",
    "pull_request_review_id": 702778001,
    "id": 666747588,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Njc0NzU4OA==",
    "diff_hunk": "@@ -4364,6 +4364,12 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n \n     const auto current_time = GetTime<std::chrono::microseconds>();\n \n+    if (pto->IsAddrFetchConn() && current_time - std::chrono::seconds(pto->nTimeConnected) > 10 * AVG_ADDRESS_BROADCAST_INTERVAL) {",
    "path": "src/net_processing.cpp",
    "position": 15,
    "original_position": 4,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "533500d9072b7d5a36a6491784bdeb9247e91fb0",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why linking this timing to `AVG_ADDRESS_BROADCAST_INTERVAL`? It seems irrelevant.\r\nAlso, 5 minutes feels like a lot, if we thinking of a bootstrapping node hitting buggy/sybil nodes again and again. Maybe 1 minute?",
    "created_at": "2021-07-09T07:51:42Z",
    "updated_at": "2021-07-09T07:51:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666747588",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666747588"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666747588"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666747588/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4367,
    "original_line": 4367,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666750206",
    "pull_request_review_id": 702781501,
    "id": 666750206,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Njc1MDIwNg==",
    "diff_hunk": "@@ -4364,6 +4364,12 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n \n     const auto current_time = GetTime<std::chrono::microseconds>();\n \n+    if (pto->IsAddrFetchConn() && current_time - std::chrono::seconds(pto->nTimeConnected) > 10 * AVG_ADDRESS_BROADCAST_INTERVAL) {",
    "path": "src/net_processing.cpp",
    "position": 15,
    "original_position": 4,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "533500d9072b7d5a36a6491784bdeb9247e91fb0",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah yeah, I see the Poisson justification.\r\n\r\nnit: Shouldn't it be linked to `AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL` then? This is the relevant constant for the first Poisson delay, no?",
    "created_at": "2021-07-09T07:55:57Z",
    "updated_at": "2021-07-09T08:16:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666750206",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666750206"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666750206"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666750206/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4367,
    "original_line": 4367,
    "side": "RIGHT",
    "in_reply_to_id": 666747588
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666755010",
    "pull_request_review_id": 702787833,
    "id": 666755010,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Njc1NTAxMA==",
    "diff_hunk": "@@ -2779,7 +2779,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n         m_addrman.Add(vAddrOk, pfrom.addr, 2 * 60 * 60);\n         if (vAddr.size() < 1000) peer->m_getaddr_sent = false;",
    "path": "src/net_processing.cpp",
    "position": 3,
    "original_position": 3,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "b6c5d1e450dde6a54bd785504c923adfb45c7060",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Does this work as intended though? \r\n1. Alice connects to Bob, each other send GETADDR, m_getaddr_sent=true\r\n2. Alice self-announces, Bob sets `m_getaddr_sent=false`\r\n3. Alice responds to GETADDR, `m_getaddr_sent` is already false, so the check relying on it is not really correct.\r\n\r\nThe check being incorrect seems to be not critical because `vAddr.size() <= 10` is very likely to be false anyway (assuming sane addrman), but what's the point then?\r\n\r\nWhat this check actually does is `don't relay the first self-announcement`. I don't think this is intended? Or if it is, it's very unclear from the codebase esp with that variable name. We could really benefit from a comment.",
    "created_at": "2021-07-09T08:03:20Z",
    "updated_at": "2021-07-09T08:03:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666755010",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666755010"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666755010"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666755010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2781,
    "original_line": 2781,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666761122",
    "pull_request_review_id": 702796206,
    "id": 666761122,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Njc2MTEyMg==",
    "diff_hunk": "@@ -1166,16 +1166,29 @@ void CConnman::CreateNodeFromAcceptedSocket(SOCKET hSocket,\n \n bool CConnman::AddConnection(const std::string& address, ConnectionType conn_type)\n {\n-    if (conn_type != ConnectionType::OUTBOUND_FULL_RELAY && conn_type != ConnectionType::BLOCK_RELAY) return false;\n-\n-    const int max_connections = conn_type == ConnectionType::OUTBOUND_FULL_RELAY ? m_max_outbound_full_relay : m_max_outbound_block_relay;\n+    int max_connections{0};\n+    switch (conn_type) {\n+    case ConnectionType::INBOUND:\n+    case ConnectionType::MANUAL:\n+    case ConnectionType::FEELER:\n+        return false;\n+    case ConnectionType::OUTBOUND_FULL_RELAY:\n+        max_connections = m_max_outbound_full_relay;\n+        break;\n+    case ConnectionType::BLOCK_RELAY:\n+        max_connections = m_max_outbound_block_relay;\n+        break;\n+    // no limit for ADDR_FETCH because -seednode has no limit either\n+    case ConnectionType::ADDR_FETCH:\n+        break;\n+    } // no default case, so the compiler can warn about missing cases\n \n     // Count existing connections\n     int existing_connections = WITH_LOCK(cs_vNodes,\n                                          return std::count_if(vNodes.begin(), vNodes.end(), [conn_type](CNode* node) { return node->m_conn_type == conn_type; }););\n \n     // Max connections of specified type already exist\n-    if (existing_connections >= max_connections) return false;\n+    if (max_connections && existing_connections >= max_connections) return false;",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 30,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "129b7a87157e63619dc5f916383c13e36f8ca95e",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: I would probably slightly prefer std::optional over relying on `bool(0) == false`, because the former is more readable.",
    "created_at": "2021-07-09T08:13:20Z",
    "updated_at": "2021-07-09T08:21:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666761122",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666761122"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666761122"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666761122/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1191,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666763022",
    "pull_request_review_id": 702798753,
    "id": 666763022,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Njc2MzAyMg==",
    "diff_hunk": "@@ -2779,7 +2779,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n         m_addrman.Add(vAddrOk, pfrom.addr, 2 * 60 * 60);\n         if (vAddr.size() < 1000) peer->m_getaddr_sent = false;",
    "path": "src/net_processing.cpp",
    "position": 3,
    "original_position": 3,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "b6c5d1e450dde6a54bd785504c923adfb45c7060",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Note: what i'm asking here is not really related to the change of this PR.",
    "created_at": "2021-07-09T08:16:21Z",
    "updated_at": "2021-07-09T08:16:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666763022",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666763022"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666763022"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666763022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2781,
    "original_line": 2781,
    "side": "RIGHT",
    "in_reply_to_id": 666755010
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666864054",
    "pull_request_review_id": 702933289,
    "id": 666864054,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Njg2NDA1NA==",
    "diff_hunk": "@@ -4364,6 +4364,12 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n \n     const auto current_time = GetTime<std::chrono::microseconds>();\n \n+    if (pto->IsAddrFetchConn() && current_time - std::chrono::seconds(pto->nTimeConnected) > 10 * AVG_ADDRESS_BROADCAST_INTERVAL) {",
    "path": "src/net_processing.cpp",
    "position": 15,
    "original_position": 4,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "533500d9072b7d5a36a6491784bdeb9247e91fb0",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think so: `AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL=24h` only deals with our self-announcements, which are then added to `m_addrs_to_send`. The frequency with which we actually send out the content of `m_addrs_to_send` is controlled by  `AVG_ADDRESS_BROADCAST_INTERVAL`. \r\n\r\nI initially chose a timeout of 2min instead of 5min, but that would have led to a premature disconnect in 1.8% of attempts, which seemed too high.\r\nI think it makes sense to be a bit more conservative here, because we use AddrFetch only when we have specified the peer with `-seednode` or when we can't do DNS and thus connect manually to DNS seeds. We currently don't make AddrFetch connections to random nodes, and don't just choose another AddrFetch peer if we don't get an answer from the current one.",
    "created_at": "2021-07-09T10:59:10Z",
    "updated_at": "2021-07-09T11:08:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666864054",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666864054"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666864054"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666864054/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4367,
    "original_line": 4367,
    "side": "RIGHT",
    "in_reply_to_id": 666747588
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666868366",
    "pull_request_review_id": 702939269,
    "id": 666868366,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Njg2ODM2Ng==",
    "diff_hunk": "@@ -2779,7 +2779,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n         m_addrman.Add(vAddrOk, pfrom.addr, 2 * 60 * 60);\n         if (vAddr.size() < 1000) peer->m_getaddr_sent = false;",
    "path": "src/net_processing.cpp",
    "position": 3,
    "original_position": 3,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "b6c5d1e450dde6a54bd785504c923adfb45c7060",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree, it doesn't work as intended! There was some earlier discussion about this (the flag was recently renamed from `fGetAddr`), see https://github.com/bitcoin/bitcoin/pull/21707#issuecomment-824361280 and you may recall #19794. Maybe it would be good to revisit this topic...",
    "created_at": "2021-07-09T11:07:33Z",
    "updated_at": "2021-07-09T11:07:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666868366",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666868366"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666868366"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/666868366/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2781,
    "original_line": 2781,
    "side": "RIGHT",
    "in_reply_to_id": 666755010
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667559982",
    "pull_request_review_id": 703642428,
    "id": 667559982,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzU1OTk4Mg==",
    "diff_hunk": "@@ -1166,16 +1166,29 @@ void CConnman::CreateNodeFromAcceptedSocket(SOCKET hSocket,\n \n bool CConnman::AddConnection(const std::string& address, ConnectionType conn_type)\n {\n-    if (conn_type != ConnectionType::OUTBOUND_FULL_RELAY && conn_type != ConnectionType::BLOCK_RELAY) return false;\n-\n-    const int max_connections = conn_type == ConnectionType::OUTBOUND_FULL_RELAY ? m_max_outbound_full_relay : m_max_outbound_block_relay;\n+    int max_connections{0};\n+    switch (conn_type) {\n+    case ConnectionType::INBOUND:\n+    case ConnectionType::MANUAL:\n+    case ConnectionType::FEELER:\n+        return false;\n+    case ConnectionType::OUTBOUND_FULL_RELAY:\n+        max_connections = m_max_outbound_full_relay;\n+        break;\n+    case ConnectionType::BLOCK_RELAY:\n+        max_connections = m_max_outbound_block_relay;\n+        break;\n+    // no limit for ADDR_FETCH because -seednode has no limit either\n+    case ConnectionType::ADDR_FETCH:\n+        break;\n+    } // no default case, so the compiler can warn about missing cases\n \n     // Count existing connections\n     int existing_connections = WITH_LOCK(cs_vNodes,\n                                          return std::count_if(vNodes.begin(), vNodes.end(), [conn_type](CNode* node) { return node->m_conn_type == conn_type; }););\n \n     // Max connections of specified type already exist\n-    if (existing_connections >= max_connections) return false;\n+    if (max_connections && existing_connections >= max_connections) return false;",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 30,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "129b7a87157e63619dc5f916383c13e36f8ca95e",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-07-12T00:32:25Z",
    "updated_at": "2021-07-12T00:32:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r667559982",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667559982"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r667559982"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667559982/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1191,
    "side": "RIGHT",
    "in_reply_to_id": 666761122
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667690523",
    "pull_request_review_id": 703797440,
    "id": 667690523,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzY5MDUyMw==",
    "diff_hunk": "@@ -4364,6 +4364,12 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n \n     const auto current_time = GetTime<std::chrono::microseconds>();\n \n+    if (pto->IsAddrFetchConn() && current_time - std::chrono::seconds(pto->nTimeConnected) > 10 * AVG_ADDRESS_BROADCAST_INTERVAL) {",
    "path": "src/net_processing.cpp",
    "position": 15,
    "original_position": 4,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "533500d9072b7d5a36a6491784bdeb9247e91fb0",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ACK the second part justification.\r\n\r\nRe first part: You are right, my confusion was because of 2 variables we have: `m_next_addr_send` and `m_next_local_addr_send`.\r\n",
    "created_at": "2021-07-12T07:30:10Z",
    "updated_at": "2021-07-12T07:30:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r667690523",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667690523"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r667690523"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667690523/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4367,
    "original_line": 4367,
    "side": "RIGHT",
    "in_reply_to_id": 666747588
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667700301",
    "pull_request_review_id": 703810922,
    "id": 667700301,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NzcwMDMwMQ==",
    "diff_hunk": "@@ -4364,6 +4364,12 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n \n     const auto current_time = GetTime<std::chrono::microseconds>();\n \n+    if (pto->IsAddrFetchConn() && current_time - std::chrono::seconds(pto->nTimeConnected) > 10 * AVG_ADDRESS_BROADCAST_INTERVAL) {",
    "path": "src/net_processing.cpp",
    "position": 15,
    "original_position": 4,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "533500d9072b7d5a36a6491784bdeb9247e91fb0",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "So I'm just pointing out here that this timeout also handles the case when they send us 1-addr messages (in a malicious case, this can be anything, not just self-announcement).\r\n\r\nCurrently I can't come up with a way why this is bad, but if we want to disable this unintended behaviour, we could disconnect addrfetch peers on the second 1-addr message too.\r\n\r\nIdeally, this gets a comment at least :)",
    "created_at": "2021-07-12T07:45:29Z",
    "updated_at": "2021-07-12T07:49:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r667700301",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667700301"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r667700301"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667700301/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4367,
    "original_line": 4367,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667853763",
    "pull_request_review_id": 704009878,
    "id": 667853763,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2Nzg1Mzc2Mw==",
    "diff_hunk": "@@ -1166,16 +1166,29 @@ void CConnman::CreateNodeFromAcceptedSocket(SOCKET hSocket,\n \n bool CConnman::AddConnection(const std::string& address, ConnectionType conn_type)\n {\n-    if (conn_type != ConnectionType::OUTBOUND_FULL_RELAY && conn_type != ConnectionType::BLOCK_RELAY) return false;\n-\n-    const int max_connections = conn_type == ConnectionType::OUTBOUND_FULL_RELAY ? m_max_outbound_full_relay : m_max_outbound_block_relay;\n+    std::optional<int> max_connections;\n+    switch (conn_type) {\n+    case ConnectionType::INBOUND:\n+    case ConnectionType::MANUAL:\n+    case ConnectionType::FEELER:\n+        return false;\n+    case ConnectionType::OUTBOUND_FULL_RELAY:\n+        max_connections = m_max_outbound_full_relay;\n+        break;\n+    case ConnectionType::BLOCK_RELAY:\n+        max_connections = m_max_outbound_block_relay;\n+        break;\n+    // no limit for ADDR_FETCH because -seednode has no limit either\n+    case ConnectionType::ADDR_FETCH:\n+        break;\n+    } // no default case, so the compiler can warn about missing cases\n \n     // Count existing connections\n     int existing_connections = WITH_LOCK(cs_vNodes,\n                                          return std::count_if(vNodes.begin(), vNodes.end(), [conn_type](CNode* node) { return node->m_conn_type == conn_type; }););\n \n     // Max connections of specified type already exist\n-    if (existing_connections >= max_connections) return false;\n+    if (max_connections != std::nullopt && existing_connections >= max_connections) return false;",
    "path": "src/net.cpp",
    "position": 30,
    "original_position": 30,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: it may be slightly more idiomatic to use `std::optional::has_value()`, or even just use the [bool operator](https://en.cppreference.com/w/cpp/utility/optional/operator_bool):\r\n\r\n```suggestion\r\n    if (max_connections && existing_connections >= max_connections) return false;\r\n```",
    "created_at": "2021-07-12T11:36:47Z",
    "updated_at": "2021-07-12T11:37:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r667853763",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667853763"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r667853763"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/667853763/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1191,
    "original_line": 1191,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668311795",
    "pull_request_review_id": 704611311,
    "id": 668311795,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODMxMTc5NQ==",
    "diff_hunk": "@@ -4364,6 +4364,12 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n \n     const auto current_time = GetTime<std::chrono::microseconds>();\n \n+    if (pto->IsAddrFetchConn() && current_time - std::chrono::seconds(pto->nTimeConnected) > 10 * AVG_ADDRESS_BROADCAST_INTERVAL) {",
    "path": "src/net_processing.cpp",
    "position": 15,
    "original_position": 4,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "533500d9072b7d5a36a6491784bdeb9247e91fb0",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@naumenkogs do I understand correctly that you're concerned about the case where an AddrFetch connection could repeatedly send addr messages with 1 address in them, until this timeout is hit? \r\n\r\nThe malicious case seems very unlikely- we only make AddrFetch connections to nodes submitted via `-seednode`, or to the DNS seeds in certain circumstances. \r\n\r\nIn a more ordinary case, I could imagine how the gossiping of self-announcements could lead to > 1 addr message with a size of 1. If the AddrFetch connection runs a Bitcoin Core node, it seems possible since this line waits approximately 10 intervals before timing out. But also I believe the seeders often run custom software and it doesn't make sense to me that they should be less effective if they were to participate in network gossip. \r\n\r\nConceptually, AddrFetch connections are trying to get a `getaddr` to be fulfilled, and a `getaddr` is a request for many addresses. To me, it makes sense for the requesting node to wait a certain amount of time for an acceptable response, and disconnect if that condition is not met. I'm not seeing why we would want to disconnect even earlier in this circumstance. ",
    "created_at": "2021-07-12T23:02:49Z",
    "updated_at": "2021-07-12T23:02:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r668311795",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668311795"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r668311795"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668311795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4367,
    "original_line": 4367,
    "side": "RIGHT",
    "in_reply_to_id": 667700301
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668549619",
    "pull_request_review_id": 704903566,
    "id": 668549619,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODU0OTYxOQ==",
    "diff_hunk": "@@ -4364,6 +4364,12 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n \n     const auto current_time = GetTime<std::chrono::microseconds>();\n \n+    if (pto->IsAddrFetchConn() && current_time - std::chrono::seconds(pto->nTimeConnected) > 10 * AVG_ADDRESS_BROADCAST_INTERVAL) {",
    "path": "src/net_processing.cpp",
    "position": 15,
    "original_position": 4,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "533500d9072b7d5a36a6491784bdeb9247e91fb0",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url": "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": ">The malicious case seems very unlikely- we only make AddrFetch connections to nodes submitted via -seednode, or to the DNS seeds in certain circumstances.\r\n\r\nYes indeed. For some reason I thought we do this to random nodes periodically. Maybe that's a feature I wanted to see, in some form :)\r\nI agree that for current master it's much less of a concern. A comment might help for future when master changes.\r\n\r\n> If the AddrFetch connection runs a Bitcoin Core node, it seems possible since this line waits approximately 10 intervals before timing out.\r\n\r\nI don't understand this part. Yeah it's 10 intervals of 30s, but self-announcement happens once every 24h. Very-very unlikely a second self-announcement appears within 300s.\r\n\r\n>But also I believe the seeders often run custom software and it doesn't make sense to me that they should be less effective if they were to participate in network gossip.\r\n\r\nI also don't understand this part, what does it have to do with them participating in gossip?\r\n\r\n",
    "created_at": "2021-07-13T08:36:29Z",
    "updated_at": "2021-07-13T08:36:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r668549619",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668549619"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r668549619"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668549619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4367,
    "original_line": 4367,
    "side": "RIGHT",
    "in_reply_to_id": 667700301
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668991182",
    "pull_request_review_id": 705489841,
    "id": 668991182,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2ODk5MTE4Mg==",
    "diff_hunk": "@@ -4364,6 +4364,12 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n \n     const auto current_time = GetTime<std::chrono::microseconds>();\n \n+    if (pto->IsAddrFetchConn() && current_time - std::chrono::seconds(pto->nTimeConnected) > 10 * AVG_ADDRESS_BROADCAST_INTERVAL) {",
    "path": "src/net_processing.cpp",
    "position": 15,
    "original_position": 4,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "533500d9072b7d5a36a6491784bdeb9247e91fb0",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I was entertaining the idea of when a node might send multiple addr messages of size 1 before fulfilling the getaddr message. Although bitcoin core nodes will only initiate a self announcement once every ~24 hours, they will relay self announcements from other nodes. ",
    "created_at": "2021-07-13T17:56:57Z",
    "updated_at": "2021-07-13T17:56:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r668991182",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668991182"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r668991182"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/668991182/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4367,
    "original_line": 4367,
    "side": "RIGHT",
    "in_reply_to_id": 667700301
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669201863",
    "pull_request_review_id": 705756027,
    "id": 669201863,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTIwMTg2Mw==",
    "diff_hunk": "@@ -4364,6 +4364,12 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n \n     const auto current_time = GetTime<std::chrono::microseconds>();\n \n+    if (pto->IsAddrFetchConn() && current_time - std::chrono::seconds(pto->nTimeConnected) > 10 * AVG_ADDRESS_BROADCAST_INTERVAL) {",
    "path": "src/net_processing.cpp",
    "position": 15,
    "original_position": 4,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "533500d9072b7d5a36a6491784bdeb9247e91fb0",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it's also not really more malicious than when they send us nothing at all: The worst thing I could think of that they might do is to painstakingly send us more than 1000 addresses this way.\r\n\r\nI'm not sure what kind of comment would help, I'd rather not describe the AddrFetch success-case logic in detail here at the failure case, because if we adjust that logic, the comment will most likely be forgotten.  \r\nMaybe something non-specific like \"Timeout for AddrFetch peers for when they don't sent us a suitable getaddr response (in which case we'd immediately disconnect)\"? ",
    "created_at": "2021-07-14T00:47:17Z",
    "updated_at": "2021-07-14T00:47:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r669201863",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669201863"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r669201863"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669201863/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4367,
    "original_line": 4367,
    "side": "RIGHT",
    "in_reply_to_id": 667700301
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669202272",
    "pull_request_review_id": 705756410,
    "id": 669202272,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTIwMjI3Mg==",
    "diff_hunk": "@@ -1166,16 +1166,29 @@ void CConnman::CreateNodeFromAcceptedSocket(SOCKET hSocket,\n \n bool CConnman::AddConnection(const std::string& address, ConnectionType conn_type)\n {\n-    if (conn_type != ConnectionType::OUTBOUND_FULL_RELAY && conn_type != ConnectionType::BLOCK_RELAY) return false;\n-\n-    const int max_connections = conn_type == ConnectionType::OUTBOUND_FULL_RELAY ? m_max_outbound_full_relay : m_max_outbound_block_relay;\n+    std::optional<int> max_connections;\n+    switch (conn_type) {\n+    case ConnectionType::INBOUND:\n+    case ConnectionType::MANUAL:\n+    case ConnectionType::FEELER:\n+        return false;\n+    case ConnectionType::OUTBOUND_FULL_RELAY:\n+        max_connections = m_max_outbound_full_relay;\n+        break;\n+    case ConnectionType::BLOCK_RELAY:\n+        max_connections = m_max_outbound_block_relay;\n+        break;\n+    // no limit for ADDR_FETCH because -seednode has no limit either\n+    case ConnectionType::ADDR_FETCH:\n+        break;\n+    } // no default case, so the compiler can warn about missing cases\n \n     // Count existing connections\n     int existing_connections = WITH_LOCK(cs_vNodes,\n                                          return std::count_if(vNodes.begin(), vNodes.end(), [conn_type](CNode* node) { return node->m_conn_type == conn_type; }););\n \n     // Max connections of specified type already exist\n-    if (existing_connections >= max_connections) return false;\n+    if (max_connections != std::nullopt && existing_connections >= max_connections) return false;",
    "path": "src/net.cpp",
    "position": 30,
    "original_position": 30,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Will change to `std::optional::has_value()` when I push next time - I don't like the bool operator for `optional<int>` because it being true in the case `max_connections == 0` might be a bit confusing for a cursory reader.",
    "created_at": "2021-07-14T00:48:20Z",
    "updated_at": "2021-07-14T00:48:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r669202272",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669202272"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r669202272"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/669202272/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1191,
    "original_line": 1191,
    "side": "RIGHT",
    "in_reply_to_id": 667853763
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676485940",
    "pull_request_review_id": 714691277,
    "id": 676485940,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NjQ4NTk0MA==",
    "diff_hunk": "@@ -1166,16 +1166,29 @@ void CConnman::CreateNodeFromAcceptedSocket(SOCKET hSocket,\n \n bool CConnman::AddConnection(const std::string& address, ConnectionType conn_type)\n {\n-    if (conn_type != ConnectionType::OUTBOUND_FULL_RELAY && conn_type != ConnectionType::BLOCK_RELAY) return false;\n-\n-    const int max_connections = conn_type == ConnectionType::OUTBOUND_FULL_RELAY ? m_max_outbound_full_relay : m_max_outbound_block_relay;\n+    std::optional<int> max_connections;\n+    switch (conn_type) {\n+    case ConnectionType::INBOUND:\n+    case ConnectionType::MANUAL:\n+    case ConnectionType::FEELER:\n+        return false;\n+    case ConnectionType::OUTBOUND_FULL_RELAY:\n+        max_connections = m_max_outbound_full_relay;\n+        break;\n+    case ConnectionType::BLOCK_RELAY:\n+        max_connections = m_max_outbound_block_relay;\n+        break;\n+    // no limit for ADDR_FETCH because -seednode has no limit either\n+    case ConnectionType::ADDR_FETCH:\n+        break;\n+    } // no default case, so the compiler can warn about missing cases\n \n     // Count existing connections\n     int existing_connections = WITH_LOCK(cs_vNodes,\n                                          return std::count_if(vNodes.begin(), vNodes.end(), [conn_type](CNode* node) { return node->m_conn_type == conn_type; }););\n \n     // Max connections of specified type already exist\n-    if (existing_connections >= max_connections) return false;\n+    if (max_connections != std::nullopt && existing_connections >= max_connections) return false;",
    "path": "src/net.cpp",
    "position": 30,
    "original_position": 30,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I find it slightly confusing to check for `std::nullopt`, but then use the >= operator on std::optional. That operator will again check for `std::nullopt`. Funnily that operator will evaluate to true if `max_connections` was `std::nullopt`, which it can't be here. It might be more clear to just use the >= operator on `int`.",
    "created_at": "2021-07-26T10:34:36Z",
    "updated_at": "2021-07-26T10:34:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r676485940",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676485940"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r676485940"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/676485940/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1191,
    "original_line": 1191,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677826907",
    "pull_request_review_id": 716411219,
    "id": 677826907,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NzgyNjkwNw==",
    "diff_hunk": "@@ -1166,16 +1166,29 @@ void CConnman::CreateNodeFromAcceptedSocket(SOCKET hSocket,\n \n bool CConnman::AddConnection(const std::string& address, ConnectionType conn_type)\n {\n-    if (conn_type != ConnectionType::OUTBOUND_FULL_RELAY && conn_type != ConnectionType::BLOCK_RELAY) return false;\n-\n-    const int max_connections = conn_type == ConnectionType::OUTBOUND_FULL_RELAY ? m_max_outbound_full_relay : m_max_outbound_block_relay;\n+    std::optional<int> max_connections;\n+    switch (conn_type) {\n+    case ConnectionType::INBOUND:\n+    case ConnectionType::MANUAL:\n+    case ConnectionType::FEELER:\n+        return false;\n+    case ConnectionType::OUTBOUND_FULL_RELAY:\n+        max_connections = m_max_outbound_full_relay;\n+        break;\n+    case ConnectionType::BLOCK_RELAY:\n+        max_connections = m_max_outbound_block_relay;\n+        break;\n+    // no limit for ADDR_FETCH because -seednode has no limit either\n+    case ConnectionType::ADDR_FETCH:\n+        break;\n+    } // no default case, so the compiler can warn about missing cases\n \n     // Count existing connections\n     int existing_connections = WITH_LOCK(cs_vNodes,\n                                          return std::count_if(vNodes.begin(), vNodes.end(), [conn_type](CNode* node) { return node->m_conn_type == conn_type; }););\n \n     // Max connections of specified type already exist\n-    if (existing_connections >= max_connections) return false;\n+    if (max_connections != std::nullopt && existing_connections >= max_connections) return false;",
    "path": "src/net.cpp",
    "position": 30,
    "original_position": 30,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "user": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I see your point - do I understand it correctly that you suggest to use `existing_connections >= max_connections.value()` in the comparison instead? I could do that as a follow-up.\r\n",
    "created_at": "2021-07-27T21:54:03Z",
    "updated_at": "2021-07-27T21:54:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r677826907",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677826907"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r677826907"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677826907/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1191,
    "original_line": 1191,
    "side": "RIGHT",
    "in_reply_to_id": 676485940
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678070848",
    "pull_request_review_id": 716701533,
    "id": 678070848,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODA3MDg0OA==",
    "diff_hunk": "@@ -1166,16 +1166,29 @@ void CConnman::CreateNodeFromAcceptedSocket(SOCKET hSocket,\n \n bool CConnman::AddConnection(const std::string& address, ConnectionType conn_type)\n {\n-    if (conn_type != ConnectionType::OUTBOUND_FULL_RELAY && conn_type != ConnectionType::BLOCK_RELAY) return false;\n-\n-    const int max_connections = conn_type == ConnectionType::OUTBOUND_FULL_RELAY ? m_max_outbound_full_relay : m_max_outbound_block_relay;\n+    std::optional<int> max_connections;\n+    switch (conn_type) {\n+    case ConnectionType::INBOUND:\n+    case ConnectionType::MANUAL:\n+    case ConnectionType::FEELER:\n+        return false;\n+    case ConnectionType::OUTBOUND_FULL_RELAY:\n+        max_connections = m_max_outbound_full_relay;\n+        break;\n+    case ConnectionType::BLOCK_RELAY:\n+        max_connections = m_max_outbound_block_relay;\n+        break;\n+    // no limit for ADDR_FETCH because -seednode has no limit either\n+    case ConnectionType::ADDR_FETCH:\n+        break;\n+    } // no default case, so the compiler can warn about missing cases\n \n     // Count existing connections\n     int existing_connections = WITH_LOCK(cs_vNodes,\n                                          return std::count_if(vNodes.begin(), vNodes.end(), [conn_type](CNode* node) { return node->m_conn_type == conn_type; }););\n \n     // Max connections of specified type already exist\n-    if (existing_connections >= max_connections) return false;\n+    if (max_connections != std::nullopt && existing_connections >= max_connections) return false;",
    "path": "src/net.cpp",
    "position": 30,
    "original_position": 30,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`*max_connections` should be enough because an exception can't be thrown",
    "created_at": "2021-07-28T08:05:13Z",
    "updated_at": "2021-07-28T08:05:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r678070848",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678070848"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r678070848"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678070848/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1191,
    "original_line": 1191,
    "side": "RIGHT",
    "in_reply_to_id": 676485940
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678449923",
    "pull_request_review_id": 717201130,
    "id": 678449923,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODQ0OTkyMw==",
    "diff_hunk": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test p2p addr-fetch connections\n+\"\"\"\n+\n+import time\n+\n+from test_framework.messages import msg_addr, CAddress, NODE_NETWORK, NODE_WITNESS\n+from test_framework.p2p import P2PInterface, p2p_lock\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+ADDR = CAddress()\n+ADDR.time = int(time.time())\n+ADDR.nServices = NODE_NETWORK | NODE_WITNESS\n+ADDR.ip = \"192.0.0.8\"\n+ADDR.port = 18444\n+\n+\n+class P2PAddrFetch(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        self.log.info(\"Connect to an addr-fetch peer\")\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=0, connection_type=\"addr-fetch\")\n+        info = node.getpeerinfo()\n+        assert_equal(len(info), 1)\n+        assert_equal(info[0]['connection_type'], 'addr-fetch')\n+\n+        self.log.info(\"Check that we send getaddr but don't try to sync headers with the addr-fetch peer\")\n+        peer.sync_send_with_ping()\n+        with p2p_lock:\n+            assert peer.message_count['getaddr'] == 1\n+            assert peer.message_count['getheaders'] == 0\n+\n+        self.log.info(\"Check that answering the getaddr with a single address does not lead to disconnect\")\n+        # This prevents disconnecting on self-announcements\n+        msg = msg_addr()\n+        msg.addrs = [ADDR]\n+        peer.send_and_ping(msg)\n+        assert_equal(len(node.getpeerinfo()), 1)\n+\n+        self.log.info(\"Check that answering with larger addr messages leads to disconnect\")\n+        msg.addrs = [ADDR] * 2\n+        peer.send_message(msg)\n+        peer.wait_for_disconnect(timeout=5)\n+\n+        self.log.info(\"Check timeout for addr-fetch peer that does not send addrs\")\n+        peer = node.add_outbound_p2p_connection(P2PInterface(), p2p_idx=1, connection_type=\"addr-fetch\")\n+        node.setmocktime(int(time.time()) + 301)  # Timeout: 5 minutes",
    "path": "test/functional/p2p_addrfetch.py",
    "position": 57,
    "original_position": 57,
    "commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "original_commit_id": "5730a43703f7e5a5ca26245ba3b55fbdd027d0b6",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The state just before the timeout could be checked to ensure the disconnection only occurs after the 5 minute threshold.",
    "created_at": "2021-07-28T16:07:36Z",
    "updated_at": "2021-07-28T16:08:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r678449923",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678449923"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22096#discussion_r678449923"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22096"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678449923/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 57,
    "original_line": 57,
    "side": "RIGHT"
  }
]