sdaftuar,2021-05-28 16:50:25,"I agree this makes sense.  \n\nWhile you're improving the addrfetch logic, perhaps we could also add a timeout for disconnection so that if an addrfetch peer hasn't responded to our `getaddr` for some amount of time, we eventually disconnect regardless?  I believe right now we'd just stay connected indefinitely to such a peer.",https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-850544924,850544924,
sipa,2021-05-29 03:27:04,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-850761176,850761176,
mzumsande,2021-05-30 17:51:19,"> While you're improving the addrfetch logic, perhaps we could also add a timeout for disconnection so that if an addrfetch peer hasn't responded to our `getaddr` for some amount of time, we eventually disconnect regardless? I believe right now we'd just stay connected indefinitely to such a peer.\n\nYes, I think that would be useful, and I will add this. I think such an addrfetch peer also woul",https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-851036683,851036683,
mzumsande,2021-06-03 15:08:55,I added the timeout and a functional test now. Thanks a lot @amitiuttarwar for help with the functional test!,https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-853943719,853943719,
mzumsande,2021-06-04 16:54:01,Thanks for the review @jonatack! I took your suggestions and pushed an update.,https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-854872805,854872805,
sipa,2021-06-08 05:38:19,utACK 535c990e16c6c191aa1b484b800a16bf5e4d0765,https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-856458778,856458778,
jnewbery,2021-06-11 08:48:20,Code review ACK 8dbf2b210dbdaddc11295b926fefddca127d7e8a,https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-859397506,859397506,
mzumsande,2021-06-16 07:04:52,"Analyzing #22243 gave me the concern that a timeout of `4*AVG_ADDRESS_BROADCAST_INTERVAL = 2min` may be  too low, given the distribution of `PoissonNextSend()`, leading to the node disconnecting early before the peer would send an addr too often. I'll do some simulations later today to confirm.",https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-862106795,862106795,
mzumsande,2021-06-17 20:11:22,"I changed the timeout to `10 * AVG_ADDRESS_BROADCAST_INTERVAL = 5min`. Simulated this, and while the probability of failure (i.e. disconnecting before the peer has scheduled its getaddr answer) was ~1.8% before, it is now of order 10^-5 which I think is fine.",https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-863531523,863531523,
practicalswift,2021-06-17 20:15:11,"Concept ACK\n\nGood catch!",https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-863533983,863533983,
amitiuttarwar,2021-06-17 22:16:33,reACK 96061d3410898d4759488e50d1f78211849ede50,https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-863597963,863597963,
naumenkogs,2021-06-18 09:55:26,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-863915473,863915473,
jnewbery,2021-06-18 12:34:57,Code review ACK 96061d3410898d4759488e50d1f78211849ede50,https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-864006264,864006264,
amitiuttarwar,2021-07-12 23:03:11,reACK 5730a43703f7e5a5ca26245ba3b55fbdd027d0b6,https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-878653183,878653183,
naumenkogs,2021-07-20 11:42:44,ACK 5730a43703f7e5a5ca26245ba3b55fbdd027d0b6,https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-883325420,883325420,
laanwj,2021-07-20 12:59:55,Posthumous ACK 5730a43703f7e5a5ca26245ba3b55fbdd027d0b6,https://github.com/bitcoin/bitcoin/pull/22096#issuecomment-883372535,883372535,
jonatack,2021-06-03 15:28:28,"nit, don't hesitate to run clang format on the changes\n```suggestion\n    if (pto->IsAddrFetchConn() && current_time - std::chrono::seconds(pto->nTimeConnected) > 4 * AVG_ADDRESS_BROADCAST_INTERVAL) {\n```",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644893405,644893405,src/net_processing.cpp
jonatack,2021-06-03 15:29:27,"suggest replacing the comma with parentheses or a colon\n```suggestion\n            {""connection_type"", RPCArg::Type::STR, RPCArg::Optional::NO,\n             ""Type of connection to open (\""outbound-full-relay\"", \""block-relay-only\"" or \""addr-fetch\"").""},\n```",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644894232,644894232,src/rpc/net.cpp
jonatack,2021-06-03 15:31:10,"New variables naming nit, `s/got_*/received_*/`",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644895675,644895675,test/functional/p2p_addrfetch.py
jonatack,2021-06-03 15:32:21,"```suggestion\n        self.log.info(""Check that we send getaddr but don't try to sync headers with the addr-fetch peer"")\n```",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644896581,644896581,test/functional/p2p_addrfetch.py
jonatack,2021-06-03 15:32:53,"```suggestion\n        peer.sync_send_with_ping()\n```",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644897008,644897008,test/functional/p2p_addrfetch.py
jonatack,2021-06-03 15:33:40,"PEP8\n```suggestion\n        msg.addrs = [ADDR] * 2\n```",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644897593,644897593,test/functional/p2p_addrfetch.py
jonatack,2021-06-03 15:33:56,"```suggestion\n        self.log.info('Check timeout for addr-fetch peer that does not send addrs')\n```",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644897812,644897812,test/functional/p2p_addrfetch.py
jonatack,2021-06-03 15:34:19,"```diff\n-        node.setmocktime(int(time.time()) + 130)  # Timeout: 2 min\n-        peer.sync_send_with_ping\n+        node.setmocktime(int(time.time()) + 130)  # Timeout: 2 minutes (with 10 seconds of leeway)\n+        peer.sync_send_with_ping()\n```",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644898105,644898105,test/functional/p2p_addrfetch.py
jonatack,2021-06-03 15:34:57,"```suggestion\n        full-relay (""outbound-full-relay""), block-relay-only (""block-relay-only"")\n```\nor: `Must be an ""outbound-full-relay"", ""block-relay-only"" or ""addr-fetch"" connection.`",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644898589,644898589,test/functional/test_framework/test_node.py
jonatack,2021-06-03 15:49:38,"```suggestion\n    } // no default case, so the compiler can warn about missing cases\n```\n",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r644912954,644912954,src/net.cpp
mzumsande,2021-06-04 16:32:28,"done, thanks",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645705818,645705818,src/net_processing.cpp
mzumsande,2021-06-04 16:33:20,done,https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645706319,645706319,src/rpc/net.cpp
mzumsande,2021-06-04 16:35:13,"oops, thanks!",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645707433,645707433,test/functional/p2p_addrfetch.py
mzumsande,2021-06-04 16:36:03,fixed,https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645707951,645707951,test/functional/p2p_addrfetch.py
mzumsande,2021-06-04 16:46:46,Changed to 121 (more leeway is not really needed) and removed the `sync_send_with_ping()` which is incorrect here because it conflicts with the disconnect.,https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645714090,645714090,test/functional/p2p_addrfetch.py
mzumsande,2021-06-04 16:48:48,"Took the short version, that should be clear enough.",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645715316,645715316,test/functional/test_framework/test_node.py
mzumsande,2021-06-04 16:49:01,done,https://github.com/bitcoin/bitcoin/pull/22096#discussion_r645715483,645715483,src/net.cpp
jnewbery,2021-06-09 10:17:18,"No need for this specialized subclass. The base P2PInterface counts messages received by type, so you can just use that:\n\n```diff\ndiff --git a/test/functional/p2p_addrfetch.py b/test/functional/p2p_addrfetch.py\nindex b50a710adb..e50e9e7ee4 100755\n--- a/test/functional/p2p_addrfetch.py\n+++ b/test/functional/p2p_addrfetch.py\n@@ -9,7 +9,7 @@ Test p2p addr-fetch connections\n import tim",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r648166396,648166396,test/functional/p2p_addrfetch.py
mzumsande,2021-06-10 20:45:04,"Thanks - I simplified the test as suggested. (with the slightly stricter `assert peer.message_count['getaddr'] == 1`)\n",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r649520004,649520004,test/functional/p2p_addrfetch.py
lsilva01,2021-06-21 19:17:35,"Is the `assert_equal()` necessary for the validation?\n\n```suggestion\n        peer.wait_for_disconnect(timeout=5)\n        assert_equal(len(node.getpeerinfo()), 0)\n```",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r655642075,655642075,test/functional/p2p_addrfetch.py
lsilva01,2021-06-21 19:18:11,"Is the `assert_equal()` necessary for the validation?\n\n```suggestion\n        peer.wait_for_disconnect(timeout=5)\n        assert_equal(len(node.getpeerinfo()), 0)\n```",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r655642422,655642422,test/functional/p2p_addrfetch.py
amitiuttarwar,2021-06-22 00:53:54,"checking the node's connections doesn't seem harmful, but it also doesn't seem necessary because of the way the `wait_for_disconnect` function works- it keeps checking if the P2PConnection object [is connected](https://github.com/bitcoin/bitcoin/blob/master/test/functional/test_framework/p2p.py#L154), and would fail if that was still true after 5 seconds. ",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r655799680,655799680,test/functional/p2p_addrfetch.py
mzumsande,2021-07-01 21:54:24,I agree that `wait_for_disconnect` should be sufficient.,https://github.com/bitcoin/bitcoin/pull/22096#discussion_r662613950,662613950,test/functional/p2p_addrfetch.py
mzumsande,2021-07-01 21:56:02,"same as [here](https://github.com/bitcoin/bitcoin/pull/22096#discussion_r655799680), `wait_for_disconnect` should be sufficient.",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r662614707,662614707,test/functional/p2p_addrfetch.py
naumenkogs,2021-07-09 07:51:42,"Why linking this timing to `AVG_ADDRESS_BROADCAST_INTERVAL`? It seems irrelevant.\nAlso, 5 minutes feels like a lot, if we thinking of a bootstrapping node hitting buggy/sybil nodes again and again. Maybe 1 minute?",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666747588,666747588,src/net_processing.cpp
naumenkogs,2021-07-09 07:55:57,"Ah yeah, I see the Poisson justification.\n\nnit: Shouldn't it be linked to `AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL` then? This is the relevant constant for the first Poisson delay, no?",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666750206,666750206,src/net_processing.cpp
naumenkogs,2021-07-09 08:03:20,"Does this work as intended though? \n1. Alice connects to Bob, each other send GETADDR, m_getaddr_sent=true\n2. Alice self-announces, Bob sets `m_getaddr_sent=false`\n3. Alice responds to GETADDR, `m_getaddr_sent` is already false, so the check relying on it is not really correct.\n\nThe check being incorrect seems to be not critical because `vAddr.size() <= 10` is very likely to be false any",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666755010,666755010,src/net_processing.cpp
naumenkogs,2021-07-09 08:13:20,"nit: I would probably slightly prefer std::optional over relying on `bool(0) == false`, because the former is more readable.",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666761122,666761122,src/net.cpp
naumenkogs,2021-07-09 08:16:21,Note: what i'm asking here is not really related to the change of this PR.,https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666763022,666763022,src/net_processing.cpp
mzumsande,2021-07-09 10:59:10,"I don't think so: `AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL=24h` only deals with our self-announcements, which are then added to `m_addrs_to_send`. The frequency with which we actually send out the content of `m_addrs_to_send` is controlled by  `AVG_ADDRESS_BROADCAST_INTERVAL`. \n\nI initially chose a timeout of 2min instead of 5min, but that would have led to a premature disconnect in 1.8% of attem",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666864054,666864054,src/net_processing.cpp
mzumsande,2021-07-09 11:07:33,"I agree, it doesn't work as intended! There was some earlier discussion about this (the flag was recently renamed from `fGetAddr`), see https://github.com/bitcoin/bitcoin/pull/21707#issuecomment-824361280 and you may recall #19794. Maybe it would be good to revisit this topic...",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r666868366,666868366,src/net_processing.cpp
mzumsande,2021-07-12 00:32:25,Done.,https://github.com/bitcoin/bitcoin/pull/22096#discussion_r667559982,667559982,src/net.cpp
naumenkogs,2021-07-12 07:30:10,"ACK the second part justification.\n\nRe first part: You are right, my confusion was because of 2 variables we have: `m_next_addr_send` and `m_next_local_addr_send`.\n",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r667690523,667690523,src/net_processing.cpp
naumenkogs,2021-07-12 07:45:29,"So I'm just pointing out here that this timeout also handles the case when they send us 1-addr messages (in a malicious case, this can be anything, not just self-announcement).\n\nCurrently I can't come up with a way why this is bad, but if we want to disable this unintended behaviour, we could disconnect addrfetch peers on the second 1-addr message too.\n\nIdeally, this gets a comment at leas",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r667700301,667700301,src/net_processing.cpp
jnewbery,2021-07-12 11:36:47,"nit: it may be slightly more idiomatic to use `std::optional::has_value()`, or even just use the [bool operator](https://en.cppreference.com/w/cpp/utility/optional/operator_bool):\n\n```suggestion\n    if (max_connections && existing_connections >= max_connections) return false;\n```",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r667853763,667853763,src/net.cpp
amitiuttarwar,2021-07-12 23:02:49,"@naumenkogs do I understand correctly that you're concerned about the case where an AddrFetch connection could repeatedly send addr messages with 1 address in them, until this timeout is hit? \n\nThe malicious case seems very unlikely- we only make AddrFetch connections to nodes submitted via `-seednode`, or to the DNS seeds in certain circumstances. \n\nIn a more ordinary case, I could imagin",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r668311795,668311795,src/net_processing.cpp
naumenkogs,2021-07-13 08:36:29,">The malicious case seems very unlikely- we only make AddrFetch connections to nodes submitted via -seednode, or to the DNS seeds in certain circumstances.\n\nYes indeed. For some reason I thought we do this to random nodes periodically. Maybe that's a feature I wanted to see, in some form :)\nI agree that for current master it's much less of a concern. A comment might help for future when mast",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r668549619,668549619,src/net_processing.cpp
amitiuttarwar,2021-07-13 17:56:57,"I was entertaining the idea of when a node might send multiple addr messages of size 1 before fulfilling the getaddr message. Although bitcoin core nodes will only initiate a self announcement once every ~24 hours, they will relay self announcements from other nodes. ",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r668991182,668991182,src/net_processing.cpp
mzumsande,2021-07-14 00:47:17,"I think it's also not really more malicious than when they send us nothing at all: The worst thing I could think of that they might do is to painstakingly send us more than 1000 addresses this way.\n\nI'm not sure what kind of comment would help, I'd rather not describe the AddrFetch success-case logic in detail here at the failure case, because if we adjust that logic, the comment will most lik",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r669201863,669201863,src/net_processing.cpp
mzumsande,2021-07-14 00:48:20,Will change to `std::optional::has_value()` when I push next time - I don't like the bool operator for `optional<int>` because it being true in the case `max_connections == 0` might be a bit confusing for a cursory reader.,https://github.com/bitcoin/bitcoin/pull/22096#discussion_r669202272,669202272,src/net.cpp
MarcoFalke,2021-07-26 10:34:36,"I find it slightly confusing to check for `std::nullopt`, but then use the >= operator on std::optional. That operator will again check for `std::nullopt`. Funnily that operator will evaluate to true if `max_connections` was `std::nullopt`, which it can't be here. It might be more clear to just use the >= operator on `int`.",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r676485940,676485940,src/net.cpp
mzumsande,2021-07-27 21:54:03,"I see your point - do I understand it correctly that you suggest to use `existing_connections >= max_connections.value()` in the comparison instead? I could do that as a follow-up.\n",https://github.com/bitcoin/bitcoin/pull/22096#discussion_r677826907,677826907,src/net.cpp
MarcoFalke,2021-07-28 08:05:13,`*max_connections` should be enough because an exception can't be thrown,https://github.com/bitcoin/bitcoin/pull/22096#discussion_r678070848,678070848,src/net.cpp
jonatack,2021-07-28 16:07:36,The state just before the timeout could be checked to ensure the disconnection only occurs after the 5 minute threshold.,https://github.com/bitcoin/bitcoin/pull/22096#discussion_r678449923,678449923,test/functional/p2p_addrfetch.py
