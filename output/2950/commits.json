[
  {
    "sha": "6e51b3bddf782f53527cf968445b298ebdec9bbc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZTUxYjNiZGRmNzgyZjUzNTI3Y2Y5Njg0NDViMjk4ZWJkZWM5YmJj",
    "commit": {
      "author": {
        "name": "patrick s",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-08-29T06:53:26Z"
      },
      "committer": {
        "name": "patrick s",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-08-29T06:53:26Z"
      },
      "message": "improve wallet load time by removing duplicated calls to EC_KEY_check_key and adding a hash for vchPubKey/vchPrivKey entries in wallet.dat\n\nbackwards compatible with previous wallet.dat format",
      "tree": {
        "sha": "d7cd486a75648cbcc5e5aec9da4bbf4e21292bb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7cd486a75648cbcc5e5aec9da4bbf4e21292bb6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e51b3bddf782f53527cf968445b298ebdec9bbc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e51b3bddf782f53527cf968445b298ebdec9bbc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6e51b3bddf782f53527cf968445b298ebdec9bbc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e51b3bddf782f53527cf968445b298ebdec9bbc/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ff33a3470dd1d1446549d02609c991c0490e0fdf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff33a3470dd1d1446549d02609c991c0490e0fdf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ff33a3470dd1d1446549d02609c991c0490e0fdf"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 54,
      "deletions": 8
    },
    "files": [
      {
        "sha": "0377140f79301204c13b4c490e1b4c9c587e2caa",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e51b3bddf782f53527cf968445b298ebdec9bbc/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e51b3bddf782f53527cf968445b298ebdec9bbc/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=6e51b3bddf782f53527cf968445b298ebdec9bbc",
        "patch": "@@ -166,9 +166,12 @@ class CECKey {\n         assert(nSize == nSize2);\n     }\n \n-    bool SetPrivKey(const CPrivKey &privkey) {\n+    bool SetPrivKey(const CPrivKey &privkey, bool fSkipCheck=false) {\n         const unsigned char* pbegin = &privkey[0];\n         if (d2i_ECPrivateKey(&pkey, &pbegin, privkey.size())) {\n+            if(fSkipCheck)\n+                return true;\n+            \n             // d2i_ECPrivateKey returns true if parsing succeeds.\n             // This doesn't necessarily mean the key is valid.\n             if (EC_KEY_check_key(pkey))\n@@ -409,6 +412,18 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     return true;\n }\n \n+bool CKey::Load(CPrivKey &privkey, CPubKey &vchPubKey, bool fSkipCheck=false) {\n+    CECKey key;\n+    if (!key.SetPrivKey(privkey, fSkipCheck))\n+        return false;\n+    \n+    key.GetSecretBytes(vch);\n+    fCompressed = vchPubKey.IsCompressed();\n+    fValid = true;\n+    \n+    return true;\n+}\n+\n bool CPubKey::Verify(const uint256 &hash, const std::vector<unsigned char>& vchSig) const {\n     if (!IsValid())\n         return false;"
      },
      {
        "sha": "ac050356f263320673e31d97be3e63844eda78cc",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e51b3bddf782f53527cf968445b298ebdec9bbc/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e51b3bddf782f53527cf968445b298ebdec9bbc/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=6e51b3bddf782f53527cf968445b298ebdec9bbc",
        "patch": "@@ -261,6 +261,9 @@ class CKey {\n \n     // Derive BIP32 child key.\n     bool Derive(CKey& keyChild, unsigned char ccChild[32], unsigned int nChild, const unsigned char cc[32]) const;\n+    \n+    // Load private key and check that public key matches.\n+    bool Load(CPrivKey &privkey, CPubKey &vchPubKey, bool fSkipCheck);  \n };\n \n struct CExtPubKey {"
      },
      {
        "sha": "f7edd084582acf709ee36ce4e20391a19075cda7",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 5,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e51b3bddf782f53527cf968445b298ebdec9bbc/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e51b3bddf782f53527cf968445b298ebdec9bbc/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=6e51b3bddf782f53527cf968445b298ebdec9bbc",
        "patch": "@@ -306,6 +306,8 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             }\n             CKey key;\n             CPrivKey pkey;\n+            uint256 hash = 0;\n+            \n             if (strType == \"key\")\n             {\n                 wss.nKeys++;\n@@ -315,14 +317,34 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                 ssValue >> wkey;\n                 pkey = wkey.vchPrivKey;\n             }\n-            if (!key.SetPrivKey(pkey, vchPubKey.IsCompressed()))\n+            try\n             {\n-                strErr = \"Error reading wallet database: CPrivKey corrupt\";\n-                return false;\n+                ssValue >> hash;\n+            }\n+            catch(...){}\n+            \n+            bool fSkipCheck = false;\n+            \n+            if (hash != 0)\n+            {\n+                // hash pubkey/privkey to accelerate wallet load\n+                std::vector<unsigned char> vchKey;\n+                vchKey.reserve(vchPubKey.size() + pkey.size());\n+                vchKey.insert(vchKey.end(), vchPubKey.begin(), vchPubKey.end());\n+                vchKey.insert(vchKey.end(), pkey.begin(), pkey.end());\n+                \n+                if (Hash(vchKey.begin(), vchKey.end()) != hash)\n+                {\n+                    strErr = \"Error reading wallet database: CPubKey/CPrivKey corrupt\";\n+                    return false;\n+                }\n+                \n+                fSkipCheck = true;\n             }\n-            if (key.GetPubKey() != vchPubKey)\n+            \n+            if (!key.Load(pkey, vchPubKey, fSkipCheck))\n             {\n-                strErr = \"Error reading wallet database: CPrivKey pubkey inconsistency\";\n+                strErr = \"Error reading wallet database: CPrivKey corrupt\";\n                 return false;\n             }\n             if (!pwallet->LoadKey(key, vchPubKey))"
      },
      {
        "sha": "2d01a5cf74ce76205d7b40d98b1dc5d14015ec7e",
        "filename": "src/walletdb.h",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e51b3bddf782f53527cf968445b298ebdec9bbc/src/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e51b3bddf782f53527cf968445b298ebdec9bbc/src/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.h?ref=6e51b3bddf782f53527cf968445b298ebdec9bbc",
        "patch": "@@ -93,8 +93,14 @@ class CWalletDB : public CDB\n         if (!Write(std::make_pair(std::string(\"keymeta\"), vchPubKey),\n                    keyMeta))\n             return false;\n-\n-        return Write(std::make_pair(std::string(\"key\"), vchPubKey), vchPrivKey, false);\n+        \n+        // hash pubkey/privkey to accelerate wallet load\n+        std::vector<unsigned char> vchKey;\n+        vchKey.reserve(vchPubKey.size() + vchPrivKey.size());\n+        vchKey.insert(vchKey.end(), vchPubKey.begin(), vchPubKey.end());\n+        vchKey.insert(vchKey.end(), vchPrivKey.begin(), vchPrivKey.end());\n+        \n+        return Write(std::make_pair(std::string(\"key\"), vchPubKey), std::make_pair(vchPrivKey, Hash(vchKey.begin(), vchKey.end())), false);\n     }\n \n     bool WriteCryptedKey(const CPubKey& vchPubKey,"
      }
    ]
  },
  {
    "sha": "a42eef6f10e1da1c76e1c9ba49a2ff2459c62fea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNDJlZWY2ZjEwZTFkYTFjNzZlMWM5YmE0OWEyZmYyNDU5YzYyZmVh",
    "commit": {
      "author": {
        "name": "patrick s",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-08-29T08:11:47Z"
      },
      "committer": {
        "name": "patrick s",
        "email": "patrick.strateman@gmail.com",
        "date": "2013-08-29T08:11:47Z"
      },
      "message": "verify vchPubKey matches calculated public key unless fSkipCheck is set",
      "tree": {
        "sha": "22fe8dc0fdcf81e4af3050f5c1143f4f45dbbdfb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/22fe8dc0fdcf81e4af3050f5c1143f4f45dbbdfb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a42eef6f10e1da1c76e1c9ba49a2ff2459c62fea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a42eef6f10e1da1c76e1c9ba49a2ff2459c62fea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a42eef6f10e1da1c76e1c9ba49a2ff2459c62fea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a42eef6f10e1da1c76e1c9ba49a2ff2459c62fea/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e51b3bddf782f53527cf968445b298ebdec9bbc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e51b3bddf782f53527cf968445b298ebdec9bbc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e51b3bddf782f53527cf968445b298ebdec9bbc"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "fe5222378a7b6b5e6330b84a0478ff491958040a",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a42eef6f10e1da1c76e1c9ba49a2ff2459c62fea/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a42eef6f10e1da1c76e1c9ba49a2ff2459c62fea/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=a42eef6f10e1da1c76e1c9ba49a2ff2459c62fea",
        "patch": "@@ -421,6 +421,12 @@ bool CKey::Load(CPrivKey &privkey, CPubKey &vchPubKey, bool fSkipCheck=false) {\n     fCompressed = vchPubKey.IsCompressed();\n     fValid = true;\n     \n+    if (fSkipCheck)\n+        return true;\n+    \n+    if (GetPubKey() != vchPubKey)\n+        return false;\n+    \n     return true;\n }\n "
      }
    ]
  },
  {
    "sha": "bc68788317a4ece16f0cfb0cb7eb1e0e220cbc6f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYzY4Nzg4MzE3YTRlY2UxNmYwY2ZiMGNiN2ViMWUwZTIyMGNiYzZm",
    "commit": {
      "author": {
        "name": "phantomcircuit",
        "email": "phantomcircuit@debian",
        "date": "2013-10-13T06:44:28Z"
      },
      "committer": {
        "name": "phantomcircuit",
        "email": "phantomcircuit@debian",
        "date": "2013-10-13T06:44:28Z"
      },
      "message": "comment explaining new wallet format for key/wkey entries",
      "tree": {
        "sha": "03c5f214af41d66e01c426a5ece04bd0183317cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/03c5f214af41d66e01c426a5ece04bd0183317cf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc68788317a4ece16f0cfb0cb7eb1e0e220cbc6f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc68788317a4ece16f0cfb0cb7eb1e0e220cbc6f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bc68788317a4ece16f0cfb0cb7eb1e0e220cbc6f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc68788317a4ece16f0cfb0cb7eb1e0e220cbc6f/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "a42eef6f10e1da1c76e1c9ba49a2ff2459c62fea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a42eef6f10e1da1c76e1c9ba49a2ff2459c62fea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a42eef6f10e1da1c76e1c9ba49a2ff2459c62fea"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d31db5e425e30b7d3ee4f36d5a370e27a7ea119f",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc68788317a4ece16f0cfb0cb7eb1e0e220cbc6f/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc68788317a4ece16f0cfb0cb7eb1e0e220cbc6f/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=bc68788317a4ece16f0cfb0cb7eb1e0e220cbc6f",
        "patch": "@@ -317,6 +317,12 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                 ssValue >> wkey;\n                 pkey = wkey.vchPrivKey;\n             }\n+            \n+            // Old wallets store keys as \"key\" [pubkey] => [privkey]\n+            // ... which was slow for wallets with lots of keys, because the public key is re-derived from the private key\n+            // using EC operations as a checksum.\n+            // Newer wallets store keys as \"key\"[pubkey] => [privkey][hash(pubkey,privkey)], which is much faster while\n+            // remaining backwards-compatible.\n             try\n             {\n                 ssValue >> hash;"
      }
    ]
  }
]