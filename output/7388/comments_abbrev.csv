sandakersmann,2016-01-21T12:57:26Z,This was introduced in pull #7386 \n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173561653,173561653,
btcdrak,2016-01-21T12:58:08Z,"This was not ""introduced"" in #7386, the feature was already on by default. #7386 introduced the ability to turn it off, by popular request I might add.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173561778,173561778,
sandakersmann,2016-01-21T13:00:05Z,Semantics.\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173562306,173562306,
jonasschnelli,2016-01-21T13:01:40Z,"The original PR was https://github.com/bitcoin/bitcoin/pull/6871. The just merged (#7386) on does not change any policy,... it's just a configuration option.\n\n@sandakersmann: if you care about bitcoin core and RBF, why did you not participate in #6871 (the actual change proposal)?\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173562558,173562558,
jtoomim,2016-01-21T13:01:49Z,utACK. \n\nWe will be doing something similar to this (but more thorough) in Classic. It would be nice if a git pull were enough to incorporate it. https://bitcoinclassic.consider.it/revert-opt-in-rbf\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173562583,173562583,
wangchun,2016-01-21T13:09:06Z,ACK\n\nRBF is steal. This PR should be merged asap to prevent potential financial loss.\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173563835,173563835,
dcousens,2016-01-21T13:11:18Z,"@wangchun,  although I disagree with your conclusion,  I can't help but point out that this does not stop the use of this _policy_,  and miners who are economically rationale may likely still set `-permitrbf` to `true`.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173564233,173564233,
sipa,2016-01-21T13:13:49Z,"I'm willing to consider this due to the unexpected controversy this is causing. I do however think this due to a misunderstanding:\n- It's perfectly possible to keep accepting 0-conf transactions, if you believe they are safe for your use case. Opt-in RBF sets a non-maximum nSequence value, which causes many providers to already consider the transaction non-standard for the purpose of accepting 0-",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173564744,173564744,
laanwj,2016-01-21T13:24:39Z,NACK\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173568323,173568323,
btcdrak,2016-01-21T13:30:31Z,NACK because the feature is already optional and #7386 did not change the existing behaviour which has been in discussion all year. The right time to argue this would have been in #6871 which was widely [ACKd](https://archive.is/31mmw).\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173571043,173571043,
jonasschnelli,2016-01-21T13:32:41Z,"We have accepted the nSequence based opt-in RBF proposal in #6871. Merchants and wallets should already ""listen"" for the nSequence INTMAX if they rely on 0 confirmation transactions, otherwise they really should do it now.\n\nIt safely re-enables the mempool replacement feature original implemented by Satoshi and disabled by him as a SPAM protection (http://sourceforge.net/p/bitcoin/code/140/).\n\",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173571460,173571460,
wangchun,2016-01-21T13:39:58Z,@jonasschnelli Could you please tell me which wallet has been ready to warn users for potential RBF transactions? What the average user without much Bitcoin knowledge can do when he/she see this warning?\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173572877,173572877,
sipa,2016-01-21T13:47:13Z,"@wangchun It's only an issue for merchants who accept 0-conf transactions, not wallets (who typically don't count unconfirmed transactions from the outside as spendable anyway). Several payment processors and analysis services (which aim to make 0-confirmations safer) already treat non-max nSequence as unsafe (and they should, regardless of whether opt-in RBF gets adopted or not).\n\nIf anyone fee",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173574295,173574295,
sdaftuar,2016-01-21T13:51:59Z,"@wangchun Also please note #7222 (just recently merged), which adds new RPC output fields for users of bitcoin core's wallet that indicates whether an unconfirmed payment is BIP125-replaceable.  This will be included in the next 0.12 release candidate.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173575269,173575269,
wangchun,2016-01-21T14:03:16Z,So you admit nobody has yet been ready for opt-in RBF but deploy it in the next release IMHO this is no better than force a hard fork without consensus\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173578120,173578120,
jonasschnelli,2016-01-21T14:06:19Z,> @jonasschnelli Could you please tell me which wallet has been ready to warn users for potential RBF transactions?\n\nSome wallets might want to add an extra warning if a RBF transaction are among the unconfirmed incoming transactions. That would be possible.\n\nBut most (all) wallets do already treat unconfirmed transactions/balance as **unconfirmed**. People should really not rely on **unconfir,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173578818,173578818,
sipa,2016-01-21T14:10:19Z,"@wangchun As far as I know, services for 0-conf acceptance already discard non-final nSequence values. I'd very much like to hear if this is not true.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173579855,173579855,
dcousens,2016-01-21T14:12:08Z,"@wangchun I think there was an expectation that interested parties were keeping watch with bitcoin core development, but it seems many were relying on 3rd parties to report on core development for them;  and therefore there has been this lapse in communication.\n\n@sipa as discussed on IRC:\n\n> It's only an issue for merchants who accept 0-conf transactions, not wallets (who typically don't count",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173580235,173580235,
MarcoFalke,2016-01-21T14:12:55Z,"""Everyone knows 0-conf is perfectly save and rbf will break it"" ... Not\n\n> As recently shown by Peter Todd, it's quite easy to double spend your transaction, and this was without RBF being deployed.\n\nThus, NACK.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173580426,173580426,
dcousens,2016-01-21T14:13:41Z,tentative NACK\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173580610,173580610,
laanwj,2016-01-21T14:19:38Z,It takes quite a while for a new major release to be widely deployed. It's not like the network will all switch in one day after 0.12 release. The P2P network is a mix of various versions. There is even now a part of nodes that runs with RBF enabled (at least those running master). Even a part that does full (non opt-in) RBF (see https://en.bitcoin.it/wiki/Transaction_replacement#Peter_Todd.27s_fu,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173582620,173582620,
arsenische,2016-01-21T16:45:39Z,"utACK\n\n> miners who are economically rationale may likely still set -permitrbf to true.\n\n...in the future. But currently they are more interested in high BTC price because the block reward is much higher than the tx fees, and the amount of transactions in block is quite limited. 0-confs are unsafe but usable, breaking them may negatively affect the BTC price.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173630151,173630151,
petertodd,2016-01-21T18:39:14Z,"@wangchun The wallets that don't warn about the opt-in RBF flag are trivially vulnerable to multiple ways of doublespending transactions. For instance, I don't know of any standard wallets that warn you if someone sends you a really low fee tx, even though they can be trivially doublespent with a higher fee tx. Similarly, because v0.12.0 changes what's allowed in OP_RETURN, you'll be able to easil",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173668779,173668779,
skajake,2016-01-21T19:43:40Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173687097,173687097,
seweso,2016-01-21T21:02:04Z,"Maybe - even if we don't agree with zero-conf - we should still create some guidelines on how to accept them as safely as possible. \n\nI mean it's a bit like promoting abstinence as a way to prevent unwanted pregnancies and STD's, it just doesn't work. So we better also make sure it is as safe as possible. \n\nMy personal view is that Opt-in RBF improves zero-conf by making it very clear what can",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173706648,173706648,
petertodd,2016-01-21T21:06:33Z,"@seweso Again, the wallets/merchants who are _not_ trivially vulnerable to doublespends - including new doublespend opportunities separate from opt-in RBF that have been added to v0.12.0 - are already ready for opt-in RBF. We are _not_ increasing risk for anyone any more than every release increases risk.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173707706,173707706,
arsenische,2016-01-21T21:10:15Z,@petertodd why not to make this controversial change ('opt-in RBF') disabled by default and let the node operators choose?\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173708564,173708564,
petertodd,2016-01-21T21:21:19Z,"Default settings are advice from the Bitcoin Core team; I believe it is bad advice to disable a feature that helps Bitcoin users as a whole for the sake of concerns that aren't justified by evidence.\n\nThat would be not unlike shipping Bitcoin with transaction relaying for P2SH turned off, because of an controversy about it that wasn't supported by the facts.\n\nPeople who still disagree are welc",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173711334,173711334,
maddenw,2016-01-21T22:40:09Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173738585,173738585,
greenaddress,2016-01-21T22:55:03Z,"NACK, configurable can be useful but default should be on to work reasonably well\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173741941,173741941,
cypherdoc,2016-01-21T23:04:39Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173743928,173743928,
h0jeZvgoxFepBQ2C,2016-01-21T23:47:50Z,"ACK, its a new feature with a big discussions and controversy - and no real consensus, so from my point of view it's better to set it to false in this release. \n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173752418,173752418,
roybadami,2016-01-21T23:53:41Z,"@sipa ""It's only an issue for merchants who accept 0-conf transactions, not wallets (who typically don't count unconfirmed transactions from the outside as spendable anyway).""\n\nI don't buy that.   A wallet user is a financial actor.  The question is not whether they will spend those particular received bitcoins, but what actions they will or may take on the receipt of those bitcoins.  At the ery",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173753386,173753386,
sipa,2016-01-21T23:59:26Z,"@roybadami If you're going to take an irreversible action based on an\nunconfirmed transaction without any further analysis, you can already very\neasily be ripped off; transactions with low fee, or transactions whose\nstandardness recently changed, ... are very much at risk of being double\nspend. Services exist that do analysis for you, however, and I know of none\nthat don't take nSequence valu",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173754311,173754311,
jameshilliard,2016-01-21T23:59:53Z,"NACK, opt-in RBF is easy to detect and handle by merchants and wallets, there's no reason not to have it enabled by default. On another note people need to be aware that until a transaction is confirmed it can be easily changed and that 0-conf is not secure and its use should be discouraged under conditions where a double spend would cause significant damage.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173754388,173754388,
dgenr8,2016-01-22T00:03:20Z,"Even though I believe _opt-in_ (and only opt-in) RBF is an improvement for overall zero-conf reliability, and has other use cases, the community clearly does not want the network to honor any kind of RBF at this time.  So there should be a switch (thank you #7386) and the default should be do-not-permit.\n\nACK.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173754970,173754970,
sandakersmann,2016-01-22T00:21:02Z,@sipa It is not us that should show you that services for 0-conf acceptance have implemented discard function for non-final nSequence values. This is something that you should know all about and show us before you implement such dramatic changes to policy.\n\n@petertodd You are the one implementing new policies. Because of this you are the one that must justified by evidence that this new policy h,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173759160,173759160,
ghost,2016-01-22T00:33:35Z,"@petertodd wrote: ""Similarly, because v0.12.0 changes what's allowed in OP_RETURN, you'll be able to easily doublespend by sending txs that use this new OP_RETURN format, followed by a tx that doesn't.""\n\nSo this OP_RETURN hard fork incompatibility is now an attack vector against 0-conf spends, by someone who has already publicly defrauded Coinbase using a double spend attack.\n\nNice work!\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173761252,173761252,
kristovatlas,2016-01-22T00:41:02Z,"ACK. I suggest setting the default to false so that volume of opt-in RBF does not exceed the intentionality of the Bitcoin network. Once it has been demonstrated that a significant majority of volume has proper detection, only then does it makes to me to revisit setting the default to true.\n\nI know for a fact that no one has yet confirmed that a significant majority of volume has proper Opt-In R",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173762347,173762347,
sipa,2016-01-22T00:44:28Z,"> So this OP_RETURN hard fork incompatibility is now an attack vector\n> against 0-conf spends, by someone who has already publicly defrauded\n> Coinbase using a double spend attack.\n\nEvery policy change (and it's not a hard fork or an incompatibility, just a\nchange in what transactions get relayed) introduces an increased chance for\nsuccesfully double spending. That's inevitable. Worse, it ca",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173762820,173762820,
ghost,2016-01-22T01:45:38Z,"@sipa with the greatest of respect, you could close vulnerabilities like that if you weren't all so afraid of a planned hard fork.\n\nWhat's more important - the raw number of nodes (even with masses running on AWS, running pre-0.8, etc.) or the number of functioning nodes? \n\nIs there a concern that a hard fork will expose the emperor has no clothes? i.e. that planned hard forking isn't catastro",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173773196,173773196,
sipa,2016-01-22T01:47:05Z,Off topic.\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173773526,173773526,
stale2000,2016-01-22T02:05:32Z,"@petertodd \n\n""People who still disagree are welcome to run other software.""\n\nGotcha, so what you are saying is that you don't care about consensus.  This is a new feature that you want, and it is going to be implemented regardless if the majority of the community disagrees.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173777188,173777188,
sandakersmann,2016-01-22T02:07:22Z,The only reason people want RBF implemented is that central planners in Core are forcing a deadweight loss in the block space market by limiting the blocksize. This is terrible because it undermines the long term viability of the Bitcoin network. We need all the adoption we can get on the main chain to ensure a healthy network in the future.\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173777478,173777478,
dcousens,2016-01-22T02:21:00Z,"@sandakersmann please don't accuse anyone _actually_ participating in the discussion [and who has an opinion which is the opposite of yours] as ""central planners"".\nIn any case perhaps reading [a set of use cases for RBF](https://github.com/btcdrak/website/blob/b67bdf94620ba6528f3863193b7bcabc8029f3aa/_posts/en/pages/faq/2016-01-21-rbf-faq.md) will help you understand its purpose.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173779801,173779801,
sandakersmann,2016-01-22T02:29:01Z,"@dcousens When someone interfere with the free block space market and thinks they know better, that is central planning. Enforcing artificial limits are without doubt central planning.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173781114,173781114,
achow101,2016-01-22T02:42:34Z,"@stale2000 By no means is this a new feature. Replacing transactions was originally in Satoshi's first version. Since this is node policy, not consensus (it won't cause a fork). Where does the majority of the community disagree? Are they disagreeing because they don't understand how Opt-In works?\n\n@sandakersmann by that logic any implementation of Bitcoin and any new feature added and any new fe",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173785180,173785180,
sandakersmann,2016-01-22T02:46:25Z,@achow101 Yes by enforcing the 1MB blocksize limit. I agree this went a bit off topic. Sorry about that.\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173786096,173786096,
amacneil,2016-01-22T03:10:12Z,"NACK. Consider me as someone who absolutely opposes full-RBF, but if Core is going to support opt-in RBF semantics then it's illogical to disable this by default.\n\nI think most people ACKing this PR don't understand how the currently implemented opt-in behavior works. At the very least the OP comments on this PR don't make any sense given that #7386 didn't change any existing behavior.\n\nMaybe ",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173789921,173789921,
sandakersmann,2016-01-22T03:15:33Z,@amacneil It changes existing behaviour from Core 0.11.2 and that is the code base that runs the network today.\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173790537,173790537,
sdaftuar,2016-01-22T03:17:32Z,@sandakersmann Could you please explain the change so we're all on the same page?\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173790778,173790778,
sandakersmann,2016-01-22T03:19:52Z,@sdaftuar If we merge this pull request there will not be any policy change from Core 0.11.2 by default.\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173791033,173791033,
amacneil,2016-01-22T03:21:09Z,"@sandakersmann right, but that change was already merged into master weeks ago, and is _opt in_ for the sender of the transaction. How does this PR help the situation?\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173791465,173791465,
achow101,2016-01-22T03:24:26Z,"@sandakersmann That is completely illogical. If we don't do anything then there won't be any policy change by default. Your logic says that we should just not release 0.12 since it changes from what the network is currently running. By your logic, we should not do anything to change individual node policy or network consensus because it would ""change existing behaviour from the code base that runs",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173793071,173793071,
sandakersmann,2016-01-22T03:24:32Z,@amacneil I was unfortunately not aware of that initial change before it was merged. This PR helps since nodes won't be mining and relaying RBF transactions. \n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173793129,173793129,
sandakersmann,2016-01-22T03:27:29Z,@achow101 I'm not against change. Only this change.\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173794234,173794234,
achow101,2016-01-22T03:30:29Z,@sandakersmann come up with a better argument then because the one you are using says that all change is bad.\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173794535,173794535,
sandakersmann,2016-01-22T03:31:56Z,Did you read this?\n\nhttps://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173759160\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173794709,173794709,
amacneil,2016-01-22T03:32:35Z,"@sandakersmann you're aware that the new behavior is opt-in right? As in, the sender of the transaction explicitly requests that they want the ability to double spend, and to the merchant/recipient it's clear as daylight that this feature has been enabled. By default Core does not create these transactions, or even have the ability to create them currently.\n\nSo this is just adding extra flexibil",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173794766,173794766,
sandakersmann,2016-01-22T03:35:12Z,@amacneil It does not add flexibility for the average user. It adds attack vectors and confusion.\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173795071,173795071,
skajake,2016-01-22T03:36:17Z,"The reason this mempool policy change is so incredibly dangerous is that the entire bitcoin ecosystem is built around the assumption that the vast majority of nodes will (and are) rationally running a First-seen-safe policy.  Since 99% of node operators do not change the default settings, this has been a safe-enough (not 100% safe obviously) assumption.\n\nThis change radically changes that assump",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173795199,173795199,
achow101,2016-01-22T03:45:45Z,@sandakersmann I have read that comment. \n\n> It is not us that should show you that services for 0-conf acceptance have implemented discard function for non-final nSequence values. This is something that you should know all about and show us before you implement such dramatic changes to policy.\n\nSipa is saying that there are no services which accept 0-conf transactions that accept non-final tr,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173796594,173796594,
sandakersmann,2016-01-22T03:55:47Z,"> Sipa is saying that there are no services which accept 0-conf transactions that accept non-final transactions. Since opt-in makes it non-final, they are already prepared for that. He (and everyone else on the team) has already looked at the services and have already determined that they all already deal with non-final transactions. He is saying that you would not be able to find any service that",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173799199,173799199,
dcousens,2016-01-22T03:56:34Z,> I would like some documentation on that.\n\nhttps://bitcoin.org/en/glossary/sequence-number\n\n> Part of all transactions. A number intended to allow unconfirmed time-locked transactions to be updated before being finalized; not currently used except to disable locktime in a transaction\n\nhttps://bitcoin.stackexchange.com/questions/2025/what-is-txins-sequence is probably a better explanation.  ,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173799308,173799308,
sandakersmann,2016-01-22T04:04:42Z,@dcousens That is today’s reality. Sipa is referring to RBF that might be a part of tomorrow's network. \n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173800445,173800445,
dcousens,2016-01-22T04:19:30Z,"@sandakersmann I know,  we were referring to today's reality in the perspective of any deployment/technical/economic shocks that might occur as a result of RBF right?\nI would base my [without further inquiry] assumptions of what merchants/wallets have deployed based on the above documented behaviours.\nThat is,  its a thing,  but _not-yet-enabled_ (except for `nLockTime` and `CLTV`, which is itse",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173802164,173802164,
GIJensen,2016-01-22T04:35:10Z,"NACK, I can't fathom why we should make this change. Opt-in RBF is already here, we're planning on keeping it, disabling it by default just seems ridiculous. Wallet developers should update their wallets to properly make users aware of RBF when allowing 0conf.\n\nIf people are worried about users not being educated on RBF, then there should be a proposal on making sure users are informed. Not disa",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173803743,173803743,
ripper234,2016-01-22T05:14:32Z,"ACK\n\nRBF needs to be pot-in. Let miners make an informed decision on such a controversial topic, don't ""silently"" or automatically change this behavior.\n\nI like the opt-in flag, don't like that it is/was opt-out.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173812290,173812290,
ripper234,2016-01-22T05:15:04Z,"@GIJensen \n\n> Opt-in RBF is already here\n\nWhat you have right now it opt-out, not opt-in. It should be opt-in, this is what this PR is about.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173812493,173812493,
GIJensen,2016-01-22T05:22:03Z,"@ripper234, no the opt-in aspect is the fact that senders opt-in by flagging a transaction as RBF replaceable. The wallet owner can then choose to trust it before it gets a confirmation.\n\nThis is different than non opt-in RBF where there would be no flag and all transactions would be replacable before a confirmation.\n\nIf I'm understading this new option correctly, this change would actually pr",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173814783,173814783,
dcousens,2016-01-22T05:27:40Z,"@ripper234 this PR proposes _opt-in to opt-in RBF_ as the default.\n\nWithout this PR,  the current situation is _opt-out to opt-in RBF_.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173815941,173815941,
ripper234,2016-01-22T05:43:53Z,"Wow this shit is complicated :)\n\nOk, if I understand it correctly: What I want is opt-in to opt-in.\n- Nothing should be on by default.\n- Miners should be able to opt in to the RBF game.\n- The RBF game should allow users to opt in to replaceability.\n\nIf I understand correctly, then ACK this.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173819053,173819053,
GIJensen,2016-01-22T05:53:53Z,"@ripper234, I believe this would also force nodes to opt-in manually as well. I believe this change could reduce the usefulness of RBF.\n\nI fail to understand the support for this change. RBF does not harm nodes or miners, at all. It makes sense for them to choose to disable it by personal preference as someone who doesn't know or care about RBF wouldn't be affected in the slightest.\n\nWallets r",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173820050,173820050,
JonComer,2016-01-22T06:02:49Z,"As @skajake has stated the overwhelming reason that people oppose RBF is not lack of knowledge about it, but the potential impact it has on businessss that accept Bitcoin. The last thing we should be doing is making it harder it scarier for businesses to interact with or accept Bitcoin transactions. Of course someone with @petertodds level of skill can double spend, but businesses accept risk of c",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173820891,173820891,
JonComer,2016-01-22T06:03:56Z,*chaos (not China) . Sorry typing from a phone with autocorrect \n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173821017,173821017,
JonComer,2016-01-22T06:27:24Z,*counterfeit not countoffer. Will do better job of editing next time. :/\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173823962,173823962,
jgarzik,2016-01-22T10:23:47Z,ACK.  Clear consensus for this among users and businesses.\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173871450,173871450,
laanwj,2016-01-22T10:25:53Z,@jgarzik Clear consensus? What are you smoking? There is no clear consensus. Just read the posts here for one.\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173871844,173871844,
JonComer,2016-01-22T11:06:39Z,"@laanwj. What businesses or retail business owners are NACKing on this thread? Or are you referring to dev consensus as consensus?  \n\nIf you are that's fine, but I feel like consensus is a word often used by devs about devs. I think this is a problem as consensus is tossed around a lot in here. For instance devs re: RBF talk about having had consensus months ago. Should we not strive for a much ",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173881125,173881125,
laanwj,2016-01-22T11:09:09Z,"> This is bad for Bitcoin and having this turned on as a default is bad for Bitcoin.\n\nHaving the possibility of opt-in RBF does not mean that transactions are created with RBF opt-in by default. As far as I know, no wallets have this possibility at this point at all, let alone do it by default. \n\nHowever, transactions that do opt-in to RBF are distinguishable (that's the whole point of opt-in ",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173882420,173882420,
JonComer,2016-01-22T11:27:30Z,"""By arguing to disable this you are killing a useful feature. No one will dare touch this again one it is disabled.""\n\nIf it is such a useful, needed, desired feature why would no one dare touch it if it was disabled??\n\nI seems like if there is indeed great market demand for it, it will be used. \n\nHowever, do you know for a fact that retail merchants will NOT have to do code integrations and/",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173888604,173888604,
jonasschnelli,2016-01-22T11:28:52Z,Sidenote for @JonComer\n\n> [...] Maybe that way we can avoid a separation in dev consensus and user consensus that Jeff is referring to that can be seen in the consider.it polling.\n\nUsers consensus is very hard to measure. Did you know I can buy 1'000 twitter followers for 10USD? I'm pretty sure you can do something similar with consider.it or with github ACKs.\n\nWe should **not** start public,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173889467,173889467,
laanwj,2016-01-22T11:32:00Z,"> I seems like if there is indeed great market demand for it, it will be used.\n\nOpt-in RBF is a compromise that can't be used if the network doesn't support it. It is not very useful if only a few nodes support it.\n\n@petertodd's full-RBF patch solves this by adding a version bits so that nodes that support full RBF can find each other. That's the other path. It allows some users to use RBF wit",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173890959,173890959,
JonComer,2016-01-22T11:32:35Z,"@jonasschnelli \nI nowhere said we should ""vote"".  However business analyst exist in this world because they act as bridges between user/consumer/client desires and demands and engineers/technicians/coders.  Otherwise ""innovation"" is done in a vacuum. We are, in my opinion, seriously lacking in the equivalent of business analysts in the bitcoin community. Right now we seem to be operating by the s",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173891251,173891251,
seweso,2016-01-22T11:40:19Z,"@petertodd What are these ""new doublespend opportunities separate from opt-in RBF that have been added to v0.12.0""?  \n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173893406,173893406,
JonComer,2016-01-22T11:40:47Z,"@laanwj \n\nA couple of questions just to clarify where you stand on this topic.\n\nDo you support RBF because you think its important to give people the option to ""move to the front of the line"" by paying more fees or is it more (or equal) to try and ""protect"" retailers from double spends?\n\nIf you only think the former is a case for then ignore this next part. But if you think the latter is a c",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173893569,173893569,
greenaddress,2016-01-22T11:42:02Z,"@JonComer I know for a fact that those using zero conf will have to update regardless of opt-in RBF because virtually any release introduces some network changes (min relay fee, min dust, mem pool limiting, OP_RETURN updates isStandard changes, etc) which can and will be exploited for double spends.\n\nI'm not even the first one to say [this](https://github.com/bitcoin/bitcoin/pull/7388#issuecomme",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173894033,173894033,
jonasschnelli,2016-01-22T11:43:46Z,@JonComer: I totally agree with you. But we are discussing on a technical platform (the heart of the technical project management of Bitcoin Core).\n\nBusiness analysts may help write BIPs (bitcoin improve proposals) or help people choosing which bitcoin software they should run.\n\nBut this is the wrong place for analyst level discussions.\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173894714,173894714,
ripper234,2016-01-22T11:46:43Z,"I opened a consider.it page.\n\nhttps://bitcoin.consider.it/set-permitrbf-to-false\n\nIf anyone has a better description for this feature, let me know.\nI used:\n\n> RBF: Miners opt-in (config) to allow tx opted-in by users to be Replaced-By-Fee.\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173895376,173895376,
JonComer,2016-01-22T11:47:48Z,"@jonasschnelli \n\nThis is fortunately or unfortunately the most and only direct root to most devs. ""This is not the place"" is not true in my opinion. Those anaylst level discussions just are not being held other places. I think you can expect more people like myself looking to speak directly to the source in the future. And I think that communication is valuable both ways. If you can point out th",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173895545,173895545,
jonasschnelli,2016-01-22T11:52:00Z,"@JonComer:\nSee https://bitcoincore.org/en/contribute/\nand https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#decision-making-process\n\n> But the truth is decisions that effect the community are being ACKed and NACKed right here on github. \n\nIMO not true. Decisions are made by people who run the new (or old) software. Miners, merchants or user (node operators).\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173897598,173897598,
laanwj,2016-01-22T11:52:20Z,"> Do you support RBF because you think its important to give people the option to ""move to the front of the line"" by paying more fees or is it more (or equal) to try and ""protect"" retailers from double spends?\n\nBoth:\n\nI support RBF because I want wallets to be able to 'unstuck' transactions that have already been sent. This is a clear solution for a clear problem, but it is not all. There are ",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173897789,173897789,
jtimon,2016-01-22T13:23:09Z,"As noted by other people, it is fine if the feature is controversial because this is just rlay policy and not a consensus  rule. But I really don't  understand how can opt-in RBF be possibly controversial.  Maybe there is a lesson to learn here: full RBF has been implemented for years but never merged because it was ""controversial"". After long, the more complex opt-in RBF was developed, with the g",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173920096,173920096,
skajake,2016-01-22T13:42:40Z,"> Maybe we should have just deployed full RBF years ago...\n\nSo when a dangerous policy change is faced with controversy, your solution is to force a more radical version down the throats of your users?  I sincerely hope you are trolling\n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173924359,173924359,
laanwj,2016-01-22T13:52:12Z,"> So when a dangerous policy change is faced with controversy, your solution is to force a more radical version down the throats of your users? I sincerely hope you are trolling\n\nYou've been fed a false history. Full RBF was the original proposal, which was too controversial to be widely adapted. Opt-in RBF was proposed as a compromise to make both RBF supporters and the status quo happy. If the",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173926292,173926292,
jtimon,2016-01-22T14:15:12Z,To me themost dangerous policy is always accepting 0-conf as irreversible transactions. Some people were operating under the assumption that first seen policy can be a consensus  rule or is universally deployed as policy. That's false and extremely dangerous.\nAlso what @laanwj said abot the history. All I'm saying is that if opt-in RBF doesn't  solve the only problem full RBF had IMO (being contr,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173931526,173931526,
pointbiz,2016-01-22T17:55:12Z,"ACK\n\nAll rules don't fall under block chain enforced consensus. Some things depend on honest nodes and altruism. Relaying transactions is one such thing. The context here is that irreversibility is a feature. Double spending is the problem and the block chain is that solution. \n\nWhat is the block chain confirming? The first payment of the spender. Hence, it solving the double spend problem. \n",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-173992285,173992285,
TheBlueMatt,2016-01-22T18:56:01Z,"Can we close this? I have seen a bunch of complaints from people who have never contributed to Bitcoin in any significant way and no complaints from any wallets, anywhere. On the other side, I've seen several wallets desperately asking for this feature. This issue is not going anywhere.\n\nWorse, the submitter cant even be bothered to fix the tests. Not sure if this was meant to be political bulls",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-174011596,174011596,
GIJensen,2016-01-22T20:27:09Z,"I agree with @TheBlueMatt, this discussion isn't going anywhere. Many in support of this change are simply against RBF, and this PR isn't about whether RBF will stay in core. Nobody has addressed exactly what benefits this change will have (regardless if this changes goes in, wallets and merchants will be at roughly the same risk for 0-conf), we seem to only downsides.\n\nThere's always opportunit",https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-174037241,174037241,
jonasschnelli,2016-01-22T20:28:01Z,Closing.\n,https://github.com/bitcoin/bitcoin/pull/7388#issuecomment-174037445,174037445,
