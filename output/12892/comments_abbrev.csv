jnewbery,2018-04-05T17:34:57Z,"This is #7729 with the following changes:\n\n- rebased on master\n- don't mark `getaddressinfo` as deprecated (https://github.com/bitcoin/bitcoin/pull/7729#discussion_r177767690)\n- used `address` instead of `bitcoinaddress` as the argument for several RPC methods (https://github.com/bitcoin/bitcoin/pull/7729#discussion_r177768880)\n- remove destdata from RPC return objects (https://github.co",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-379016369,379016369,
jnewbery,2018-04-05T17:36:45Z,"For full history of this PR, see #7729. Requesting review from reviewers of that PR: @Sjors , @MarcoFalke , @ryanofsky , @jonasschnelli , @instagibbs , @sipa , @luke-jr .\n",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-379016903,379016903,
jnewbery,2018-04-05T21:36:31Z,Thanks for the review @promag . Will address comments tomorrow.,https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-379084425,379084425,
jnewbery,2018-04-06T16:54:22Z,Addressed review comments from @promag and @PierreRochard . Are you able to re-review?,https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-379312744,379312744,
PierreRochard,2018-04-06T18:33:56Z,"Yes, re-reviewing now",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-379339376,379339376,
PierreRochard,2018-04-06T21:47:21Z,"A behavior difference between the old `getaccountaddress` and the new aliased `getlabeladdress` is causing the `wallet_basic.py` to fail. I was able to fix it by adding `force` to the test, but I think it's the endpoint that should be changed if the goal is to not break the API with the aliasing.\n\n`rpc_listtransactions.py` and `wallet_listreceivedby.py` are also failing, it may be due to the s",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-379392774,379392774,
PierreRochard,2018-04-07T09:21:51Z,"Fixing `wallet_basic.py` and `rpc_listtransactions.py`: If we want to continue supporting the behavior of the aliased `getaccountaddress`, `force` should default to `true` when that call is made, so something like `bool force = request.strMethod == ""getaccountaddress"" ? true : false;`\n\nFixing `wallet_listreceivedby.py`: line 143 should read `self.nodes[1].getlabeladdress(label=""mynewlabel"", fo",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-379456090,379456090,
jnewbery,2018-04-07T16:43:04Z,Thanks for the fixes @PierreRochard! I've updated the tests as you suggested and force pushed.,https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-379482863,379482863,
PierreRochard,2018-04-07T19:06:40Z,Tested ACK 1f7f1dfd1c16cf0c9a700e2b262ffa8f6c6559cd,https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-379491909,379491909,
laanwj,2018-04-09T02:40:10Z,"I'm still not convinced we really need `getlabeladdress` in the first place, but anyhow.\nutACK https://github.com/bitcoin/bitcoin/pull/12892/commits/1f7f1dfd1c16cf0c9a700e2b262ffa8f6c6559cd",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-379611854,379611854,
MarcoFalke,2018-04-09T18:24:44Z,Needs rebase,https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-379847574,379847574,
jnewbery,2018-04-09T19:22:16Z,"Rebased.\n\n> I'm still not convinced we really need getlabeladdress\n\nok, that's three concept NACKs for `getlabeladdress` (me, @jonasschnelli https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179550228 and @laanwj https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-379611854).\n\nI kept this call because there was a comment in the previous PR (https://github.com/bitcoin/bit",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-379864444,379864444,
PierreRochard,2018-04-09T19:58:03Z,"@jnewbery I agree that `getlabeladdress` should be removed, it has too much overlap with `getnewaddress` and miner-specific use cases are likely best implemented in the mining software (this suggestion seems reasonable: https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-206938418)",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-379874953,379874953,
ryanofsky,2018-04-09T20:02:41Z,"> Other reviewers of this and the previous PR (@promag, @PierreRochard, @Sjors, @MarcoFalke , @ryanofsky , @instagibbs , @sipa , @luke-jr) - please can you provide concept input into whether we should just remove getlabeladdress?\n\nI think it would be better to keep this PR as focused as possible. The goal should just be to fill in the last missing bits of the label implementation, so it is eas",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-379876303,379876303,
jnewbery,2018-04-09T21:25:15Z,"> I don't think it makes sense to introduce additional differences between accounts and labels that will make migration more difficult than necessary.\n\nok, I can see the merit in that. Let's keep this PR focused and we can squabble over removing `getlabeladdress` later.\n\nI've updated the help text for `getlabeladdress` and added release notes.\n\nRe-review would be very much appreciated ",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-379898889,379898889,
laanwj,2018-04-10T08:46:51Z,"My intent was not for the `getlabeladdress` discussion to block this PR. We need to make a decision about it before the 0.17 release, not necessarily now.\n\n> getlabeladdress doesn't make much sense to me, and blurs the distinction that ""labels are associated with addresses, instead of addresses associated with labels"".\n\nAnother problem with it is that it requires keeping this whole `CAccou",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-380023219,380023219,
jnewbery,2018-04-10T14:20:37Z,"Thanks @promag - I've addressed your comments.\n\n86d3394 -> 74a9e81 . Only change is addressing promag comments:\n\n```\ndiff --git a/src/wallet/rpcwallet.cpp b/src/wallet/rpcwallet.cpp\nindex aeea7af..50495d0 100644\n--- a/src/wallet/rpcwallet.cpp\n+++ b/src/wallet/rpcwallet.cpp\n@@ -3739,9 +3739,9 @@ static UniValue AddressBookDataToJSON(const CAddressBookData& data, const bool v\n {",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-380116979,380116979,
jnewbery,2018-04-10T15:32:47Z,"Thanks @promag and @ryanofsky - I've answered/addressed your comments.\n\n> In some calls, if the response is empty, RPC_WALLET_INVALID_LABEL_NAME is raised instead of just returning []. However calling listlabels with an unknown purpose will return [].\n\nI don't think that's inconsistent - calling eg `getaddressesbylabel` with a non-existent label throws an error. Calling `listlabels` with a",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-380144513,380144513,
jnewbery,2018-04-10T16:57:53Z,"Thanks for the release notes suggestions Russ. I've taken them almost exactly verbatim from your wiki, with the following change:\n\n> delete the previous label associated with an address, instead of making an implicit getaccountaddress call to ensure the previous label still has a receiving address\n\nto\n\n> delete the previous label associated with an address when the final address using ",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-380173557,380173557,
jnewbery,2018-04-10T17:35:26Z,"> feel free to ignore these unless perhaps you're updating the PR anyway.\n\nThanks, let's leave these for now. Minor punctuation/wording can be fixed when release notes are merged at the end of the release cycle.",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-380185101,380185101,
jnewbery,2018-04-10T17:39:50Z,"> feel free to ignore these unless perhaps you're updating the PR anyway.\n\nBleurgh. lint-whitespace didn't like my release notes. Fixed them and pulled in Russ's changes.",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-380186499,380186499,
jamesob,2018-04-10T20:56:37Z,"utACK https://github.com/bitcoin/bitcoin/pull/12892/commits/b00faff9ed653ea28d02ff6d821183389fcd8b29\n\nLooks good. The release notes are very helpful.",https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-380243880,380243880,
jnewbery,2018-04-10T23:28:28Z,Fixed comment. b00faff -> 41ba061,https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-380279074,380279074,
promag,2018-04-11T08:18:27Z,utACK 41ba061.,https://github.com/bitcoin/bitcoin/pull/12892#issuecomment-380368293,380368293,
MarcoFalke,2018-04-05T17:39:55Z,Unrelated change.,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179544127,179544127,src/wallet/rpcwallet.cpp
jnewbery,2018-04-05T17:41:42Z,reverted,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179544644,179544644,src/wallet/rpcwallet.cpp
jonasschnelli,2018-04-05T18:00:10Z,"Since this call gets even weirder, shouldn't we deprecate it in this PR?",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179550228,179550228,src/wallet/rpcwallet.cpp
jnewbery,2018-04-05T20:09:28Z,"Aparently some miners require this functionality (https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-199444036).\n\nI'd personally prefer to deprecate/remove this RPC method, but in the interest of making progress on this, let's maintain the current functionality and reconsider deprecation later.",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179586165,179586165,src/wallet/rpcwallet.cpp
promag,2018-04-05T20:45:36Z,Remove `cs_main`?,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179595395,179595395,src/wallet/rpcwallet.cpp
promag,2018-04-05T20:49:18Z,"Future improvements:\n  - move this to wallet function?\n  - index address by label with a multi map?",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179596357,179596357,src/wallet/rpcwallet.cpp
promag,2018-04-05T20:50:29Z,Could push to `ret` and avoid `addresses`?,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179596659,179596659,src/wallet/rpcwallet.cpp
promag,2018-04-05T20:51:05Z,Remove `cs_main`?,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179596812,179596812,src/wallet/rpcwallet.cpp
promag,2018-04-05T20:51:45Z,`!params[0].isNull()`,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179596968,179596968,src/wallet/rpcwallet.cpp
promag,2018-04-05T20:52:20Z,"Nit, space before `{`.",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179597144,179597144,src/wallet/rpcwallet.cpp
promag,2018-04-05T20:56:39Z,Already sorted?,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179598325,179598325,src/wallet/rpcwallet.cpp
promag,2018-04-05T20:58:41Z,Nit space after `&`.,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179598904,179598904,src/wallet/rpcwallet.cpp
promag,2018-04-05T21:27:09Z,"Nit, move to `CWallet::DeleteLabel(const std::string& label)`? Or make it `static` for now?",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179605981,179605981,src/wallet/rpcwallet.cpp
promag,2018-04-05T21:28:06Z,Missing `( force )`.,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179606230,179606230,src/wallet/rpcwallet.cpp
promag,2018-04-05T21:28:32Z,Missing `< 1`.,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179606340,179606340,src/wallet/rpcwallet.cpp
promag,2018-04-05T21:29:13Z,"Nit, add `{}`.",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179606516,179606516,src/wallet/rpcwallet.cpp
PierreRochard,2018-04-05T23:39:49Z,"Agree, if left unchanged this would be the only direct `CWalletDB` call from rpcwallet. Seems as though it should go through `CWallet`",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179629187,179629187,src/wallet/rpcwallet.cpp
PierreRochard,2018-04-06T15:36:58Z,It seems odd to me that `label` is marked as a required argument for `setlabel` but if it's not provided then we default to an empty string instead of throwing an error. If we want to keep the behavior then `label` should be marked as optional.,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179796359,179796359,src/wallet/rpcwallet.cpp
jnewbery,2018-04-06T16:00:01Z,done,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179802956,179802956,src/wallet/rpcwallet.cpp
jnewbery,2018-04-06T16:00:20Z,done,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179803063,179803063,src/wallet/rpcwallet.cpp
jnewbery,2018-04-06T16:25:56Z,"yes, done.",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179809220,179809220,src/wallet/rpcwallet.cpp
jnewbery,2018-04-06T16:27:42Z,done,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179809653,179809653,src/wallet/rpcwallet.cpp
jnewbery,2018-04-06T16:28:36Z,fixed,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179809880,179809880,src/wallet/rpcwallet.cpp
jnewbery,2018-04-06T16:31:50Z,"Yes, you're right. I've removed `label_list`",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179810654,179810654,src/wallet/rpcwallet.cpp
jnewbery,2018-04-06T16:32:06Z,fixed,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179810711,179810711,src/wallet/rpcwallet.cpp
jnewbery,2018-04-06T16:39:06Z,Moved into `CWallet`,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179812404,179812404,src/wallet/rpcwallet.cpp
jnewbery,2018-04-06T16:40:07Z,fixed,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179812653,179812653,src/wallet/rpcwallet.cpp
jnewbery,2018-04-06T16:46:08Z,I've updated the behaviour to match the help text: the rpc call will fail if no label is provided.,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179814333,179814333,src/wallet/rpcwallet.cpp
jnewbery,2018-04-06T16:49:12Z,added,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179815039,179815039,src/wallet/rpcwallet.cpp
jnewbery,2018-04-06T16:51:37Z,fixed,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179815534,179815534,src/wallet/rpcwallet.cpp
jnewbery,2018-04-06T16:52:02Z,I'll leave this functionality here for now. Can be refactored later if required.,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179815634,179815634,src/wallet/rpcwallet.cpp
promag,2018-04-06T23:16:50Z,"Nit, `const std::string& label`.",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r179895721,179895721,src/wallet/wallet.cpp
promag,2018-04-09T22:54:28Z,`pushKV`.,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180254273,180254273,src/wallet/rpcwallet.cpp
promag,2018-04-09T22:54:32Z,`pushKV`.,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180254287,180254287,src/wallet/rpcwallet.cpp
promag,2018-04-10T14:12:02Z,`pushKV`.,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180435727,180435727,src/wallet/rpcwallet.cpp
promag,2018-04-10T14:14:59Z,"Nit,\n```\nassociated with labels (unlike with accounts).\n```",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180436783,180436783,doc/release-notes-pr12892.md
jnewbery,2018-04-10T14:17:53Z,Agree that's better. Fixed.,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180437903,180437903,src/wallet/wallet.cpp
jnewbery,2018-04-10T14:17:58Z,fixed,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180437928,180437928,src/wallet/rpcwallet.cpp
jnewbery,2018-04-10T14:18:02Z,fixed,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180437964,180437964,src/wallet/rpcwallet.cpp
jnewbery,2018-04-10T14:18:07Z,fixed,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180438007,180438007,src/wallet/rpcwallet.cpp
promag,2018-04-10T14:25:07Z,"Nit, could have better alignment:\n```\nResult:\n[                      (json array of string)\n  ""label"",  (string) Label name\n  ...\n] \n```",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180440700,180440700,src/wallet/rpcwallet.cpp
promag,2018-04-10T14:27:46Z,"Build `ret` here:\n```cpp\nif (label_set.insert(entry.second.name).second) {\n    ret.push_back(name);\n}",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180441702,180441702,src/wallet/rpcwallet.cpp
ryanofsky,2018-04-10T14:37:23Z,"Would suggest changing this to ""(string) The current receiving address for the label."" I think 'label address' is pretty opaque and introducing it as a formal term is less helpful than just saying ""current receiving address"" or ""default receiving address"" when there's a need to refer to it. Receiving address / receive_address is also how it's referred to in `wallet_labels.py`.",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180445243,180445243,src/wallet/rpcwallet.cpp
promag,2018-04-10T14:41:32Z,`Defaults to` depends on the method.,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180446675,180446675,src/wallet/rpcwallet.cpp
ryanofsky,2018-04-10T15:01:43Z,"> Defaults to depends on the method.\n\nI guess simplest way to fix this would be to say ""Defaults to false, unless the getaccountaddress method alias is being called, in which case the default is true for backwards compatibility.""\n\nIf you wanted to be more clever I guess you could adapt the help text.\n\nAll of this is making me less a fan of the original suggestion to have a force argume",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180455083,180455083,src/wallet/rpcwallet.cpp
jnewbery,2018-04-10T15:05:12Z,"Placing into a set sorts the labels by name (`mapAddressBook` will be sorted by key, which is the `CTxDestination`)",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180456426,180456426,src/wallet/rpcwallet.cpp
jnewbery,2018-04-10T15:06:27Z,fixed,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180456878,180456878,src/wallet/rpcwallet.cpp
ryanofsky,2018-04-10T15:14:15Z,Maybe say receiving address instead of 'label address' here too.,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180459797,180459797,src/wallet/rpcwallet.cpp
jnewbery,2018-04-10T15:16:29Z,thanks! fixed,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180460682,180460682,src/wallet/rpcwallet.cpp
jnewbery,2018-04-10T15:23:32Z,"yes, agree that's better.",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180463279,180463279,src/wallet/rpcwallet.cpp
jnewbery,2018-04-10T15:24:08Z,fixed,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180463500,180463500,src/wallet/rpcwallet.cpp
jnewbery,2018-04-10T15:26:21Z,"> I guess simplest way to fix this would be to say...\n\nYes, that's clear. Updated.\n\n> All of this is making me less a fan of the original suggestion to have a force argument, though.\n\nPlease - can we not hold this PR up on the details of the `getlabeladdress` RPC? I would much rather we merged something that made progress towards removing the accounts system, and then worked out what t",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180464405,180464405,src/wallet/rpcwallet.cpp
jnewbery,2018-04-10T15:41:23Z,Added a comment to explain that this is to sort the labels.,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180469859,180469859,src/wallet/rpcwallet.cpp
ryanofsky,2018-04-10T16:29:53Z,"This is great! There are a lot of changes I would suggest but I thought it would be easier to just make them in a wiki page:\n\nhttps://github.com/bitcoin-core/bitcoin-devwiki/wiki/12892-Label-API-release-notes\n\nThe main change is trying to organize the RPC information in a table.\n\nFeel free to delete the wiki page and move anything here.",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180486019,180486019,doc/release-notes-pr12892.md
promag,2018-04-10T23:00:00Z,"`Add to a set ...`?\n\nAnyway, I mean there is no point in sorting the response, could very well be an unsorted list. We just want to make sure there are no repeated labels.",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180592059,180592059,src/wallet/rpcwallet.cpp
jnewbery,2018-04-10T23:28:08Z,Thanks. Fixed to `Add to a set`,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180596696,180596696,src/wallet/rpcwallet.cpp
kallewoof,2018-04-11T08:54:37Z,Nit: ` ? true : false` is redundant.,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180680210,180680210,src/wallet/rpcwallet.cpp
jnewbery,2018-04-11T13:06:11Z,duh. Will tidy up in follow-up PR.,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180746056,180746056,src/wallet/rpcwallet.cpp
promag,2018-04-11T13:17:01Z,"Let it go, will go away when accounts are removed.",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180749367,180749367,src/wallet/rpcwallet.cpp
kallewoof,2018-04-11T13:37:49Z,"Yeah, not worth a PR for just that.",https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180756236,180756236,src/wallet/rpcwallet.cpp
jnewbery,2018-04-11T19:10:07Z,Fixed in #12953,https://github.com/bitcoin/bitcoin/pull/12892#discussion_r180866587,180866587,src/wallet/rpcwallet.cpp
