[
  {
    "sha": "f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMThiOGVjN2NmNmViZmZmOWVlZjgzOWM2YTU2MzBhZDJlNmU3ZGI2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-07-31T14:41:06Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-08-03T15:40:55Z"
      },
      "message": "Make sure LogPrintf strings are line-terminated\n\nFix the cases where LogPrint[f] was accidentally called without line\nterminator, which resulted in concatenated log lines.\n\n(see e.g. #6492)",
      "tree": {
        "sha": "576196cf15fe14280bf560a848404caa2825f942",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/576196cf15fe14280bf560a848404caa2825f942"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "86cfd23f68367af072500b1758a4c446cdd36e74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86cfd23f68367af072500b1758a4c446cdd36e74",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/86cfd23f68367af072500b1758a4c446cdd36e74"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 10,
      "deletions": 9
    },
    "files": [
      {
        "sha": "fa122816552860b56f2762854417728ce2df2f6c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6",
        "patch": "@@ -3398,7 +3398,7 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n                     }\n                 }\n             } catch (const std::exception& e) {\n-                LogPrintf(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n+                LogPrintf(\"%s: Deserialize or I/O error - %s\\n\", __func__, e.what());\n             }\n         }\n     } catch (const std::runtime_error& e) {"
      },
      {
        "sha": "cdee541d2f27027e8c5d3a150649dc9c88f6c5aa",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6",
        "patch": "@@ -249,7 +249,7 @@ unsigned int TxConfirmStats::NewTx(unsigned int nBlockHeight, double val)\n     unsigned int bucketindex = bucketMap.lower_bound(val)->second;\n     unsigned int blockIndex = nBlockHeight % unconfTxs.size();\n     unconfTxs[blockIndex][bucketindex]++;\n-    LogPrint(\"estimatefee\", \"adding to %s\\n\", dataTypeString);\n+    LogPrint(\"estimatefee\", \"adding to %s\", dataTypeString);\n     return bucketindex;\n }\n \n@@ -390,8 +390,9 @@ void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, boo\n         mapMemPoolTxs[hash].bucketIndex = feeStats.NewTx(txHeight, (double)feeRate.GetFeePerK());\n     }\n     else {\n-        LogPrint(\"estimatefee\", \"not adding\\n\");\n+        LogPrint(\"estimatefee\", \"not adding\");\n     }\n+    LogPrint(\"estimatefee\", \"\\n\");\n }\n \n void CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxMemPoolEntry& entry)"
      },
      {
        "sha": "68091010f7f676f3c595b93e55901ed630193ca4",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6",
        "patch": "@@ -752,14 +752,14 @@ void StopRPCThreads()\n     {\n         acceptor->cancel(ec);\n         if (ec)\n-            LogPrintf(\"%s: Warning: %s when cancelling acceptor\", __func__, ec.message());\n+            LogPrintf(\"%s: Warning: %s when cancelling acceptor\\n\", __func__, ec.message());\n     }\n     rpc_acceptors.clear();\n     BOOST_FOREACH(const PAIRTYPE(std::string, boost::shared_ptr<deadline_timer>) &timer, deadlineTimers)\n     {\n         timer.second->cancel(ec);\n         if (ec)\n-            LogPrintf(\"%s: Warning: %s when cancelling timer\", __func__, ec.message());\n+            LogPrintf(\"%s: Warning: %s when cancelling timer\\n\", __func__, ec.message());\n     }\n     deadlineTimers.clear();\n "
      },
      {
        "sha": "c921dae45d35f1993454d14ee71ca5a2d93a246c",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6",
        "patch": "@@ -348,7 +348,7 @@ CTxMemPool::WriteFeeEstimates(CAutoFile& fileout) const\n         minerPolicyEstimator->Write(fileout);\n     }\n     catch (const std::exception&) {\n-        LogPrintf(\"CTxMemPool::WriteFeeEstimates(): unable to write policy estimator data (non-fatal)\");\n+        LogPrintf(\"CTxMemPool::WriteFeeEstimates(): unable to write policy estimator data (non-fatal)\\n\");\n         return false;\n     }\n     return true;\n@@ -367,7 +367,7 @@ CTxMemPool::ReadFeeEstimates(CAutoFile& filein)\n         minerPolicyEstimator->Read(filein);\n     }\n     catch (const std::exception&) {\n-        LogPrintf(\"CTxMemPool::ReadFeeEstimates(): unable to read policy estimator data (non-fatal)\");\n+        LogPrintf(\"CTxMemPool::ReadFeeEstimates(): unable to read policy estimator data (non-fatal)\\n\");\n         return false;\n     }\n     return true;"
      },
      {
        "sha": "0b0fb562e07f5c72d3ff8ec241801f3cfeccfb24",
        "filename": "src/wallet/crypter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6/src/wallet/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6/src/wallet/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.cpp?ref=f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6",
        "patch": "@@ -186,7 +186,7 @@ bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n         }\n         if (keyPass && keyFail)\n         {\n-            LogPrintf(\"The wallet is probably corrupted: Some keys decrypt but not all.\");\n+            LogPrintf(\"The wallet is probably corrupted: Some keys decrypt but not all.\\n\");\n             assert(false);\n         }\n         if (keyFail || !keyPass)"
      },
      {
        "sha": "dcc29831396b9f2ef0a733ca7d532685b2afc880",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=f18b8ec7cf6ebfff9eef839c6a5630ad2e6e7db6",
        "patch": "@@ -2109,7 +2109,7 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n             if (!wtxNew.AcceptToMemoryPool(false))\n             {\n                 // This must not fail. The transaction has already been signed and recorded.\n-                LogPrintf(\"CommitTransaction(): Error: Transaction not valid\");\n+                LogPrintf(\"CommitTransaction(): Error: Transaction not valid\\n\");\n                 return false;\n             }\n             wtxNew.RelayWalletTransaction();"
      }
    ]
  }
]