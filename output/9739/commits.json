[
  {
    "sha": "99c0e81b9529dbcbc262bdc9854cbb0517c5a8fd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OWMwZTgxYjk1MjlkYmNiYzI2MmJkYzk4NTRjYmIwNTE3YzVhOGZk",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-09T23:59:32Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-10T18:13:48Z"
      },
      "message": "Fix BIP68 activation test",
      "tree": {
        "sha": "dcd29c307a288ba49ecee5c1da0206bdf0874f07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dcd29c307a288ba49ecee5c1da0206bdf0874f07"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/99c0e81b9529dbcbc262bdc9854cbb0517c5a8fd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99c0e81b9529dbcbc262bdc9854cbb0517c5a8fd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/99c0e81b9529dbcbc262bdc9854cbb0517c5a8fd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99c0e81b9529dbcbc262bdc9854cbb0517c5a8fd/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b860915f8b0dae98e57a254d11575ea41f5c5a79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b860915f8b0dae98e57a254d11575ea41f5c5a79",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b860915f8b0dae98e57a254d11575ea41f5c5a79"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 13,
      "deletions": 21
    },
    "files": [
      {
        "sha": "ae3a3147a46cb03dd68824b672726a0f16d565eb",
        "filename": "qa/rpc-tests/bip68-sequence.py",
        "status": "modified",
        "additions": 13,
        "deletions": 21,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99c0e81b9529dbcbc262bdc9854cbb0517c5a8fd/qa/rpc-tests/bip68-sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99c0e81b9529dbcbc262bdc9854cbb0517c5a8fd/qa/rpc-tests/bip68-sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-sequence.py?ref=99c0e81b9529dbcbc262bdc9854cbb0517c5a8fd",
        "patch": "@@ -51,15 +51,12 @@ def run_test(self):\n         print(\"Running test BIP68 not consensus before versionbits activation\")\n         self.test_bip68_not_consensus()\n \n-        print(\"Verifying nVersion=2 transactions aren't standard\")\n-        self.test_version2_relay(before_activation=True)\n+        print(\"Verifying nVersion=2 transactions are standard\")\n+        self.test_version2_relay()\n \n         print(\"Activating BIP68 (and 112/113)\")\n         self.activateCSV()\n \n-        print(\"Verifying nVersion=2 transactions are now standard\")\n-        self.test_version2_relay(before_activation=False)\n-\n         print(\"Passed\\n\")\n \n     # Test that BIP68 is not in effect if tx version is 1, or if\n@@ -399,30 +396,25 @@ def test_bip68_not_consensus(self):\n         self.nodes[0].submitblock(ToHex(block))\n         assert_equal(self.nodes[0].getbestblockhash(), block.hash)\n \n-    def activateCSV(self):\n-        # activation should happen at block height 432 (3 periods)\n-        min_activation_height = 432\n-        height = self.nodes[0].getblockcount()\n-        assert(height < 432)\n-        self.nodes[0].generate(432-height)\n-        assert(get_bip9_status(self.nodes[0], 'csv')['status'] == 'active')\n-        sync_blocks(self.nodes)\n-\n-    # Use self.nodes[1] to test standardness relay policy\n-    def test_version2_relay(self, before_activation):\n+    # Use self.nodes[1] to test that version 2 transactions are standard even before BIP68 activation.\n+    def test_version2_relay(self):\n         inputs = [ ]\n         outputs = { self.nodes[1].getnewaddress() : 1.0 }\n         rawtx = self.nodes[1].createrawtransaction(inputs, outputs)\n         rawtxfund = self.nodes[1].fundrawtransaction(rawtx)['hex']\n         tx = FromHex(CTransaction(), rawtxfund)\n         tx.nVersion = 2\n         tx_signed = self.nodes[1].signrawtransaction(ToHex(tx))[\"hex\"]\n-        try:\n-            tx_id = self.nodes[1].sendrawtransaction(tx_signed)\n-            assert(before_activation == False)\n-        except:\n-            assert(before_activation)\n+        tx_id = self.nodes[1].sendrawtransaction(tx_signed)\n \n+    def activateCSV(self):\n+        # activation should happen at block height 432 (3 periods)\n+        min_activation_height = 432\n+        height = self.nodes[0].getblockcount()\n+        assert(height < 432)\n+        self.nodes[0].generate(432-height)\n+        assert(get_bip9_status(self.nodes[0], 'csv')['status'] == 'active')\n+        sync_blocks(self.nodes)\n \n if __name__ == '__main__':\n     BIP68Test().main()"
      }
    ]
  },
  {
    "sha": "f5aba8a3c5f10bf42595cbaf0439976cd48c57b1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNWFiYThhM2M1ZjEwYmY0MjU5NWNiYWYwNDM5OTc2Y2Q0OGM1N2Ix",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-21T21:52:12Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-22T23:24:16Z"
      },
      "message": "Move tx version 2 standardness check to after bip68 activation",
      "tree": {
        "sha": "de3884ca3482e93c77c089a46f243902497bd8ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de3884ca3482e93c77c089a46f243902497bd8ff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f5aba8a3c5f10bf42595cbaf0439976cd48c57b1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5aba8a3c5f10bf42595cbaf0439976cd48c57b1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f5aba8a3c5f10bf42595cbaf0439976cd48c57b1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5aba8a3c5f10bf42595cbaf0439976cd48c57b1/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "99c0e81b9529dbcbc262bdc9854cbb0517c5a8fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99c0e81b9529dbcbc262bdc9854cbb0517c5a8fd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/99c0e81b9529dbcbc262bdc9854cbb0517c5a8fd"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 14,
      "deletions": 13
    },
    "files": [
      {
        "sha": "009df7cbaa76f8037c1808daa86cf5dfa3121f89",
        "filename": "qa/rpc-tests/bip68-sequence.py",
        "status": "modified",
        "additions": 14,
        "deletions": 13,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5aba8a3c5f10bf42595cbaf0439976cd48c57b1/qa/rpc-tests/bip68-sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5aba8a3c5f10bf42595cbaf0439976cd48c57b1/qa/rpc-tests/bip68-sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-sequence.py?ref=f5aba8a3c5f10bf42595cbaf0439976cd48c57b1",
        "patch": "@@ -51,12 +51,13 @@ def run_test(self):\n         print(\"Running test BIP68 not consensus before versionbits activation\")\n         self.test_bip68_not_consensus()\n \n-        print(\"Verifying nVersion=2 transactions are standard\")\n-        self.test_version2_relay()\n-\n         print(\"Activating BIP68 (and 112/113)\")\n         self.activateCSV()\n \n+        print(\"Verifying nVersion=2 transactions are standard.\")\n+        print(\"Note that with current versions of bitcoin software, nVersion=2 transactions are always standard (independent of BIP68 activation status).\")\n+        self.test_version2_relay()\n+\n         print(\"Passed\\n\")\n \n     # Test that BIP68 is not in effect if tx version is 1, or if\n@@ -396,7 +397,16 @@ def test_bip68_not_consensus(self):\n         self.nodes[0].submitblock(ToHex(block))\n         assert_equal(self.nodes[0].getbestblockhash(), block.hash)\n \n-    # Use self.nodes[1] to test that version 2 transactions are standard even before BIP68 activation.\n+    def activateCSV(self):\n+        # activation should happen at block height 432 (3 periods)\n+        min_activation_height = 432\n+        height = self.nodes[0].getblockcount()\n+        assert(height < 432)\n+        self.nodes[0].generate(432-height)\n+        assert(get_bip9_status(self.nodes[0], 'csv')['status'] == 'active')\n+        sync_blocks(self.nodes)\n+\n+    # Use self.nodes[1] to test that version 2 transactions are standard.\n     def test_version2_relay(self):\n         inputs = [ ]\n         outputs = { self.nodes[1].getnewaddress() : 1.0 }\n@@ -407,14 +417,5 @@ def test_version2_relay(self):\n         tx_signed = self.nodes[1].signrawtransaction(ToHex(tx))[\"hex\"]\n         tx_id = self.nodes[1].sendrawtransaction(tx_signed)\n \n-    def activateCSV(self):\n-        # activation should happen at block height 432 (3 periods)\n-        min_activation_height = 432\n-        height = self.nodes[0].getblockcount()\n-        assert(height < 432)\n-        self.nodes[0].generate(432-height)\n-        assert(get_bip9_status(self.nodes[0], 'csv')['status'] == 'active')\n-        sync_blocks(self.nodes)\n-\n if __name__ == '__main__':\n     BIP68Test().main()"
      }
    ]
  }
]