[
  {
    "sha": "ba803efb687c2cb408176c546a544a8466c652ea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYTgwM2VmYjY4N2MyY2I0MDgxNzZjNTQ2YTU0NGE4NDY2YzY1MmVh",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-02-13T22:28:39Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-02-15T13:17:57Z"
      },
      "message": "Harden against mistakes handling invalid blocks\n\nFixes a bug in AcceptBlock() in invoking CheckBlock() with incorrect\narguments, and restores a call to CheckBlock() from ProcessNewBlock()\nas belt-and-suspenders.\n\nUpdates the (overspecified) tests to match behavior.",
      "tree": {
        "sha": "c7659cde7bfce8c021c27f762bcb7a0d88b88df2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c7659cde7bfce8c021c27f762bcb7a0d88b88df2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba803efb687c2cb408176c546a544a8466c652ea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba803efb687c2cb408176c546a544a8466c652ea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ba803efb687c2cb408176c546a544a8466c652ea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba803efb687c2cb408176c546a544a8466c652ea/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1c2edd9f6707d16c03ecfba094b1cfec2ddc4dce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c2edd9f6707d16c03ecfba094b1cfec2ddc4dce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1c2edd9f6707d16c03ecfba094b1cfec2ddc4dce"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 13,
      "deletions": 7
    },
    "files": [
      {
        "sha": "44e5f103224651b9b01155484315de78eb8c00a8",
        "filename": "qa/rpc-tests/p2p-fullblocktest.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba803efb687c2cb408176c546a544a8466c652ea/qa/rpc-tests/p2p-fullblocktest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba803efb687c2cb408176c546a544a8466c652ea/qa/rpc-tests/p2p-fullblocktest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-fullblocktest.py?ref=ba803efb687c2cb408176c546a544a8466c652ea",
        "patch": "@@ -398,7 +398,7 @@ def update_block(block_number, new_transactions):\n \n         # Extend the b26 chain to make sure bitcoind isn't accepting b26\n         b27 = block(27, spend=out[7])\n-        yield rejected(RejectResult(16, b'bad-prevblk'))\n+        yield rejected(RejectResult(0, b'bad-prevblk'))\n \n         # Now try a too-large-coinbase script\n         tip(15)\n@@ -410,7 +410,7 @@ def update_block(block_number, new_transactions):\n \n         # Extend the b28 chain to make sure bitcoind isn't accepting b28\n         b29 = block(29, spend=out[7])\n-        yield rejected(RejectResult(16, b'bad-prevblk'))\n+        yield rejected(RejectResult(0, b'bad-prevblk'))\n \n         # b30 has a max-sized coinbase scriptSig.\n         tip(23)"
      },
      {
        "sha": "4ce0723b21cccd8425ee77b2256bf3c89decf82f",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba803efb687c2cb408176c546a544a8466c652ea/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba803efb687c2cb408176c546a544a8466c652ea/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ba803efb687c2cb408176c546a544a8466c652ea",
        "patch": "@@ -3187,7 +3187,7 @@ static bool AcceptBlock(const std::shared_ptr<const CBlock>& pblock, CValidation\n     }\n     if (fNewBlock) *fNewBlock = true;\n \n-    if (!CheckBlock(block, state, chainparams.GetConsensus(), GetAdjustedTime()) ||\n+    if (!CheckBlock(block, state, chainparams.GetConsensus()) ||\n         !ContextualCheckBlock(block, state, chainparams.GetConsensus(), pindex->pprev)) {\n         if (state.IsInvalid() && !state.CorruptionPossible()) {\n             pindex->nStatus |= BLOCK_FAILED_VALID;\n@@ -3229,13 +3229,19 @@ static bool AcceptBlock(const std::shared_ptr<const CBlock>& pblock, CValidation\n bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing, bool *fNewBlock)\n {\n     {\n-        LOCK(cs_main);\n-\n-        // Store to disk\n         CBlockIndex *pindex = NULL;\n         if (fNewBlock) *fNewBlock = false;\n         CValidationState state;\n-        bool ret = AcceptBlock(pblock, state, chainparams, &pindex, fForceProcessing, NULL, fNewBlock);\n+        // Ensure that CheckBlock() passes before calling AcceptBlock, as\n+        // belt-and-suspenders.\n+        bool ret = CheckBlock(*pblock, state, chainparams.GetConsensus());\n+\n+        LOCK(cs_main);\n+\n+        if (ret) {\n+            // Store to disk\n+            ret = AcceptBlock(pblock, state, chainparams, &pindex, fForceProcessing, NULL, fNewBlock);\n+        }\n         CheckBlockIndex(chainparams.GetConsensus());\n         if (!ret) {\n             GetMainSignals().BlockChecked(*pblock, state);"
      }
    ]
  }
]