[
  {
    "sha": "d59d2806c29a132645ae54d37278392c87bd590a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNTlkMjgwNmMyOWExMzI2NDVhZTU0ZDM3Mjc4MzkyYzg3YmQ1OTBh",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-04-18T14:17:04Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-04-18T14:17:04Z"
      },
      "message": "Add ServerArgsOptions struct\n\nA struct is used instead of bit flags as args could have non-boolean\ntypes.",
      "tree": {
        "sha": "d58bdf58f02268fd07ee60fbe4c83a92f4a2cb90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d58bdf58f02268fd07ee60fbe4c83a92f4a2cb90"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d59d2806c29a132645ae54d37278392c87bd590a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmB8P2AACgkQQQEIES5+\nqB8ZgBAAp/nJVWlo+TSJc/bEoYU+SJCa6s6Tcs6Q80Vehcu3g0smj5oiNlUxQTLK\nHfTRPvEZTEnkZ78RKBw3b7u37WKDJW2DqfsXoru4LkhWxxu/FV6WxhMvf2Ldc4nz\n3IMrjG3D6/5MnbtMVz05PhmNOuXUiJW4U05pDHu7k9NG+2e07SQxfKiUzQHQiIzA\n5qqa4uemp9dkc+gIrtsMyLTgRwRgxrz0xzNZeppu9YtqZ4jVFpj8AnfHDt44be2d\nTBrzQ3YbtaxbQGXommSWOwhPsYlcJlfjKv7qf0TcM6q1RQIN3DzqIiuGPecER3j/\n37JN1fQHG14qtmmsgfhmPRkawcmsagtSiiad+PjQiHfUEu1r+P7sq3y7ofpGxhLS\nAQreksqyA4kFrlKjmk+SVLHlq7luZ8x9csuC84ercH/gNjwDK8KisZpzoIQ7+BGQ\n+2P0tv45HfQ6sATQV+/oF5nyFfK5lc8ThQjdib/Xir7NXsd2NKi8EKsUkivW7095\nUj/DalgC8EozCBQB3szGnLR+kmgjl4sI6YpkRJAB65w5bFFvzWyIfR7Cn6azVBxG\nGaD+m7foyAjC/PHts4dmv6y4mfOukvq5FvYeGxem1lVyorR6JXiBqcRr7iW2RIUJ\niQ0QD0MgZJzfKPzFbDfIXZwrMIbLHp7kqUeZU6v3SCmZq0Kagao=\n=olbv\n-----END PGP SIGNATURE-----",
        "payload": "tree d58bdf58f02268fd07ee60fbe4c83a92f4a2cb90\nparent 01bb3afb5197cffec6bfe324a2efc314ddfdca57\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1618755424 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1618755424 +0300\n\nAdd ServerArgsOptions struct\n\nA struct is used instead of bit flags as args could have non-boolean\ntypes.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d59d2806c29a132645ae54d37278392c87bd590a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d59d2806c29a132645ae54d37278392c87bd590a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d59d2806c29a132645ae54d37278392c87bd590a/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "01bb3afb5197cffec6bfe324a2efc314ddfdca57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01bb3afb5197cffec6bfe324a2efc314ddfdca57",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/01bb3afb5197cffec6bfe324a2efc314ddfdca57"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "de016c5b947879e9eddcbfde50ec191aea322f08",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d59d2806c29a132645ae54d37278392c87bd590a/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d59d2806c29a132645ae54d37278392c87bd590a/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=d59d2806c29a132645ae54d37278392c87bd590a",
        "patch": "@@ -26,6 +26,17 @@ namespace util {\n class Ref;\n } // namespace util\n \n+struct ServerArgsOptions {\n+    constexpr ServerArgsOptions(bool gui_, bool printtoconsole_default_, bool server_default_)\n+        : gui{gui_}, printtoconsole_default{printtoconsole_default_}, server_default{server_default_}\n+    {\n+    }\n+\n+    const bool gui;\n+    const bool printtoconsole_default;\n+    const bool server_default;\n+};\n+\n /** Interrupt threads */\n void Interrupt(NodeContext& node);\n void Shutdown(NodeContext& node);"
      }
    ]
  },
  {
    "sha": "e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNzE5ODM1M2M3MmU3ZjZkY2ZhY2I0YmYxY2M0YTI4NGFmY2VlMGE4",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-04-18T14:19:44Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-04-18T14:19:44Z"
      },
      "message": "Use ServerArgsOptions struct\n\nThis change makes -help command print correct default values for some\noptions.",
      "tree": {
        "sha": "679a489c620de0c924e814c8137224761ccd92d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/679a489c620de0c924e814c8137224761ccd92d5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmB8QAAACgkQQQEIES5+\nqB8JWg/+M4rgxj9jcYkKQn8gD0HXK1/PJblbtWQQ+AE5An4qsCwCa1P703PM9Jxs\nThjzhy7jsN4T9CFKLMKCRbI5pbp24ci/rGdErWmLzWnpyo8pqQpWsdIDQ9FVe8AY\nN9paSz5IrphkgK6rgk2oTIX4O2K1gqRia7YqOhuAJUTWnKRdFhaERl2eGZzN3hFI\nuDiSZvDvDh6Bfl94A7h/fH1gcMshzW0mjnu7icwfeSrbNqZIROAiXH2hA66fc2mt\nd0CTo4DAucYsNETwYU3sFnXaC6y3Tx4oE8IkotPHNQnoNnXVgNIwMJ6kKhD4+5qR\nGmlfSu3h8LhzUrEG35rZJcE3OCtwOj2QumGKFAN/genp84+fULDLkhVG503VRVRb\nNBVm3FH5opinYODFFY1AWQ3rVimTBvdxo3jwuAhqgjPSOBkxnMmhXI5eYtrF1/Qb\n26atm23lukWr/MlT2Uso670U3RrX8tyVTVmc3EFGzot+kMfY1FPixuZfZljYpyM/\n16dVx/dOMZwAJnUhqbOpZB6sStswp/XbOujdEl3jVp/BQemrlEBe9/RGSSSn3N/O\nx7y/yNsfVKc16mRqsxzeH7NxFG3KljlRrzjQ9XbtEyRfxcen5l9KBveP67hyjJ+m\nOh8YNS3wNWuaM/GlkG8y76CDRteRlT76BiqHVW/6k9BeLXjrk3o=\n=gs1y\n-----END PGP SIGNATURE-----",
        "payload": "tree 679a489c620de0c924e814c8137224761ccd92d5\nparent d59d2806c29a132645ae54d37278392c87bd590a\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1618755584 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1618755584 +0300\n\nUse ServerArgsOptions struct\n\nThis change makes -help command print correct default values for some\noptions.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d59d2806c29a132645ae54d37278392c87bd590a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d59d2806c29a132645ae54d37278392c87bd590a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d59d2806c29a132645ae54d37278392c87bd590a"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 23,
      "deletions": 14
    },
    "files": [
      {
        "sha": "0f1ebebeb2ae8e335ae31c39ad718012d5d91b66",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8",
        "patch": "@@ -28,6 +28,7 @@\n \n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n+constexpr ServerArgsOptions SERVER_ARGS_OPTIONS{/*gui*/ false, /*printtoconsole_default*/ true, /*server_default*/ true};\n \n #if HAVE_DECL_FORK\n \n@@ -111,7 +112,7 @@ static bool AppInit(int argc, char* argv[])\n     util::ThreadSetInternalName(\"init\");\n \n     // If Qt is used, parameters/bitcoin.conf are parsed in qt/bitcoin.cpp's main()\n-    SetupServerArgs(node);\n+    SetupServerArgs(node, SERVER_ARGS_OPTIONS);\n     ArgsManager& args = *Assert(node.args);\n     std::string error;\n     if (!args.ParseParameters(argc, argv, error)) {\n@@ -169,8 +170,9 @@ static bool AppInit(int argc, char* argv[])\n             return false;\n         }\n \n-        // -server defaults to true for bitcoind but not for the GUI so do this here\n-        args.SoftSetBoolArg(\"-server\", true);\n+        args.SoftSetBoolArg(\"-printtoconsole\", SERVER_ARGS_OPTIONS.printtoconsole_default);\n+        args.SoftSetBoolArg(\"-server\", SERVER_ARGS_OPTIONS.server_default);\n+\n         // Set this early so that parameter interactions go to console\n         InitLogging(args);\n         InitParameterInteraction(args);"
      },
      {
        "sha": "6a2a0e1b981a14e96801e195a8374d12a496324c",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 5,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8",
        "patch": "@@ -357,7 +357,7 @@ static void OnRPCStopped()\n     LogPrint(BCLog::RPC, \"RPC stopped.\\n\");\n }\n \n-void SetupServerArgs(NodeContext& node)\n+void SetupServerArgs(NodeContext& node, ServerArgsOptions options)\n {\n     assert(!node.args);\n     node.args = &gArgs;\n@@ -542,7 +542,7 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-maxsigcachesize=<n>\", strprintf(\"Limit sum of signature cache and script execution cache sizes to <n> MiB (default: %u)\", DEFAULT_MAX_SIG_CACHE_SIZE), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-maxtipage=<n>\", strprintf(\"Maximum tip age in seconds to consider node in initial block download (default: %u)\", DEFAULT_MAX_TIP_AGE), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printpriority\", strprintf(\"Log transaction fee per kB when mining blocks (default: %u)\", DEFAULT_PRINTPRIORITY), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n-    argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-printtoconsole\", strprintf(\"Send trace/debug info to console (default: %u).%s To disable logging to file, set -nodebuglogfile\", options.printtoconsole_default, options.gui ? \"\" : \" Disabled when -daemon=1.\"), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-uacomment=<cmt>\", \"Append comment to the user agent string\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n \n@@ -578,11 +578,16 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-rpcwhitelist=<whitelist>\", \"Set a whitelist to filter incoming RPC calls for a specific user. The field <whitelist> comes in the format: <USERNAME>:<rpc 1>,<rpc 2>,...,<rpc n>. If multiple whitelists are set for a given user, they are set-intersected. See -rpcwhitelistdefault documentation for information on default whitelist behavior.\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpcwhitelistdefault\", \"Sets default behavior for rpc whitelisting. Unless rpcwhitelistdefault is set to 0, if any -rpcwhitelist is set, the rpc server acts as if all rpc users are subject to empty-unless-otherwise-specified whitelists. If rpcwhitelistdefault is set to 1 and no -rpcwhitelist is set, rpc server acts as if all rpc users are subject to empty whitelists.\", ArgsManager::ALLOW_BOOL, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpcworkqueue=<n>\", strprintf(\"Set the depth of the work queue to service RPC calls (default: %d)\", DEFAULT_HTTP_WORKQUEUE), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::RPC);\n-    argsman.AddArg(\"-server\", \"Accept command line and JSON-RPC commands\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n+    argsman.AddArg(\"-server\", strprintf(\"Accept command line and JSON-RPC commands (default: %u)\", options.server_default), ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n \n #if HAVE_DECL_FORK\n-    argsman.AddArg(\"-daemon\", strprintf(\"Run in the background as a daemon and accept commands (default: %d)\", DEFAULT_DAEMON), ArgsManager::ALLOW_BOOL, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-daemonwait\", strprintf(\"Wait for initialization to be finished before exiting. This implies -daemon (default: %d)\", DEFAULT_DAEMONWAIT), ArgsManager::ALLOW_BOOL, OptionsCategory::OPTIONS);\n+    if (!options.gui) {\n+        argsman.AddArg(\"-daemon\", strprintf(\"Run in the background as a daemon and accept commands (default: %d)\", DEFAULT_DAEMON), ArgsManager::ALLOW_BOOL, OptionsCategory::OPTIONS);\n+        argsman.AddArg(\"-daemonwait\", strprintf(\"Wait for initialization to be finished before exiting. This implies -daemon (default: %d)\", DEFAULT_DAEMONWAIT), ArgsManager::ALLOW_BOOL, OptionsCategory::OPTIONS);\n+    } else {\n+        hidden_args.emplace_back(\"-daemon\");\n+        hidden_args.emplace_back(\"-daemonwait\");\n+    }\n #else\n     hidden_args.emplace_back(\"-daemon\");\n     hidden_args.emplace_back(\"-daemonwait\");"
      },
      {
        "sha": "be3574e04d69a0ed2cfa06caa425e491fbf1669e",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8",
        "patch": "@@ -82,7 +82,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n /**\n  * Register all arguments with the ArgsManager\n  */\n-void SetupServerArgs(NodeContext& node);\n+void SetupServerArgs(NodeContext& node, ServerArgsOptions options);\n \n /** Returns licensing information (for -version) */\n std::string LicenseInfo();"
      },
      {
        "sha": "3c2100887cb0fd3c77cf797318e9411585b5483d",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8",
        "patch": "@@ -65,6 +65,8 @@ Q_IMPORT_PLUGIN(QMacStylePlugin);\n #endif\n #endif\n \n+constexpr ServerArgsOptions SERVER_ARGS_OPTIONS{/*gui*/ true, /*printtoconsole_default*/ false, /*server_default*/ false};\n+\n // Declare meta types used for QMetaObject::invokeMethod\n Q_DECLARE_METATYPE(bool*)\n Q_DECLARE_METATYPE(CAmount)\n@@ -309,9 +311,8 @@ void BitcoinApplication::startThread()\n \n void BitcoinApplication::parameterSetup()\n {\n-    // Default printtoconsole to false for the GUI. GUI programs should not\n-    // print to the console unnecessarily.\n-    gArgs.SoftSetBoolArg(\"-printtoconsole\", false);\n+    gArgs.SoftSetBoolArg(\"-printtoconsole\", SERVER_ARGS_OPTIONS.printtoconsole_default);\n+    gArgs.SoftSetBoolArg(\"-server\", SERVER_ARGS_OPTIONS.server_default);\n \n     InitLogging(gArgs);\n     InitParameterInteraction(gArgs);\n@@ -471,7 +472,7 @@ int GuiMain(int argc, char* argv[])\n \n     /// 2. Parse command-line options. We do this after qt in order to show an error if there are problems parsing these\n     // Command-line options take precedence:\n-    SetupServerArgs(node_context);\n+    SetupServerArgs(node_context, SERVER_ARGS_OPTIONS);\n     SetupUIArgs(gArgs);\n     std::string error;\n     if (!gArgs.ParseParameters(argc, argv, error)) {"
      },
      {
        "sha": "b9131a9d717c193ebc008dc5537958ee65371870",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8",
        "patch": "@@ -39,6 +39,7 @@\n \n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = nullptr;\n+constexpr ServerArgsOptions SERVER_ARGS_OPTIONS{/*gui*/ false, /*printtoconsole_default*/ true, /*server_default*/ true};\n \n FastRandomContext g_insecure_rand_ctx;\n /** Random context to get unique temp data dirs. Separate from g_insecure_rand_ctx, which can be seeded from a const env var */\n@@ -89,7 +90,7 @@ BasicTestingSetup::BasicTestingSetup(const std::string& chainName, const std::ve\n     gArgs.ForceSetArg(\"-datadir\", m_path_root.string());\n     ClearDatadirCache();\n     {\n-        SetupServerArgs(m_node);\n+        SetupServerArgs(m_node, SERVER_ARGS_OPTIONS);\n         std::string error;\n         const bool success{m_node.args->ParseParameters(arguments.size(), arguments.data(), error)};\n         assert(success);"
      }
    ]
  },
  {
    "sha": "ccc0388e18e1340387baa0bcdb8a812e48793721",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjY2MwMzg4ZTE4ZTEzNDAzODdiYWEwYmNkYjhhODEyZTQ4NzkzNzIx",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-04-18T16:30:45Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-04-18T17:26:30Z"
      },
      "message": "Use ServerArgsOptions::printtoconsole_default directly",
      "tree": {
        "sha": "2bbcf6771705fb5cd8757bf7836941236650c891",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2bbcf6771705fb5cd8757bf7836941236650c891"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ccc0388e18e1340387baa0bcdb8a812e48793721",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmB8a8YACgkQQQEIES5+\nqB9pBg/+OnGj5xHcitwsQqPUJ0NzNVhOziASG+euEq5aNi6893WajPZtc/m2WtX2\nnunIt1ZKUs3+KQus/LQ/LrXKFoRzUTb+VmoqmFBdA+yczWxKcYUjt7lnSGXFVRI8\nk7JVa9ftdBBtKe22qYQWT2rEO2b+1suipz6Unf84JpQSu2HCl19FnFoWDXA2YexM\nh+X7ero6mxcFIFi3jr5nR8ppJG60LLId1Uq1ROQ5VLEGxDnpCDkDUTuCLIOpYvcO\n1Kw39gAsuCeroYxvFGeSCgkMUFg7NWRDX+6utmvpRdiez4sGr3mXbJTYdtG+83wa\nB1MhrRvuYDbcZHaPCqmVy7m0zXgtvJbuSLD6omWJliQpWHxRVHOvisJVps57lZ1l\nFBOnpNHSr2Jsmetiew/9x1tURVsbwdDzsoG2BuvqRZU9haLKXmMatX2cL/x12xsd\ne7Hml0KBawnpfI3GwWpT3VcsCXxQYor1hYQCaET7qXVc0XxTnR1xkCFrYwEuL0VW\nrDMrLmQR2eL6E8cv42WG4pKTN10FEgWGvuQhdpYvrEDlK0Cl3fdqVYDhv44sKXrX\nzOPKV5KyjMSiEk7AmyezdD4CNz45UVK3DEgwYX1/MCm7O4vNey9hgvXuM7VIgz4L\n7HO5XWgg5fliDcb6dx3NFnzRTRXbxHcHm74A0jkgy0rr1W81OlU=\n=XQh1\n-----END PGP SIGNATURE-----",
        "payload": "tree 2bbcf6771705fb5cd8757bf7836941236650c891\nparent e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1618763445 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1618766790 +0300\n\nUse ServerArgsOptions::printtoconsole_default directly\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccc0388e18e1340387baa0bcdb8a812e48793721",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ccc0388e18e1340387baa0bcdb8a812e48793721",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccc0388e18e1340387baa0bcdb8a812e48793721/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e7198353c72e7f6dcfacb4bf1cc4a284afcee0a8"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 13,
      "deletions": 10
    },
    "files": [
      {
        "sha": "116a98e9b37da05c01445b81972038451906ebef",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccc0388e18e1340387baa0bcdb8a812e48793721/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccc0388e18e1340387baa0bcdb8a812e48793721/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=ccc0388e18e1340387baa0bcdb8a812e48793721",
        "patch": "@@ -170,11 +170,10 @@ static bool AppInit(int argc, char* argv[])\n             return false;\n         }\n \n-        args.SoftSetBoolArg(\"-printtoconsole\", SERVER_ARGS_OPTIONS.printtoconsole_default);\n         args.SoftSetBoolArg(\"-server\", SERVER_ARGS_OPTIONS.server_default);\n \n         // Set this early so that parameter interactions go to console\n-        InitLogging(args);\n+        InitLogging(args, SERVER_ARGS_OPTIONS);\n         InitParameterInteraction(args);\n         if (!AppInitBasicSetup(args)) {\n             // InitError will have been called with detailed error, which ends up on console"
      },
      {
        "sha": "554805496f5cbe8c67327af6c45bc0a9026f1d4a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccc0388e18e1340387baa0bcdb8a812e48793721/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccc0388e18e1340387baa0bcdb8a812e48793721/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ccc0388e18e1340387baa0bcdb8a812e48793721",
        "patch": "@@ -887,11 +887,15 @@ void InitParameterInteraction(ArgsManager& args)\n  * Note that this is called very early in the process lifetime, so you should be\n  * careful about what global state you rely on here.\n  */\n-void InitLogging(const ArgsManager& args)\n+void InitLogging(const ArgsManager& args, const ServerArgsOptions& options)\n {\n     LogInstance().m_print_to_file = !args.IsArgNegated(\"-debuglogfile\");\n     LogInstance().m_file_path = AbsPathForConfigVal(args.GetArg(\"-debuglogfile\", DEFAULT_DEBUGLOGFILE));\n-    LogInstance().m_print_to_console = args.GetBoolArg(\"-printtoconsole\", !args.GetBoolArg(\"-daemon\", false));\n+    if (args.GetBoolArg(\"-daemon\", DEFAULT_DAEMON) || args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+        LogInstance().m_print_to_console = false;\n+    } else {\n+        LogInstance().m_print_to_console = args.GetBoolArg(\"-printtoconsole\", options.printtoconsole_default);\n+    }\n     LogInstance().m_log_timestamps = args.GetBoolArg(\"-logtimestamps\", DEFAULT_LOGTIMESTAMPS);\n     LogInstance().m_log_time_micros = args.GetBoolArg(\"-logtimemicros\", DEFAULT_LOGTIMEMICROS);\n #ifdef HAVE_THREAD_LOCAL"
      },
      {
        "sha": "a849fc14ae3c3a9494de420268a55ff8f4532877",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccc0388e18e1340387baa0bcdb8a812e48793721/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccc0388e18e1340387baa0bcdb8a812e48793721/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=ccc0388e18e1340387baa0bcdb8a812e48793721",
        "patch": "@@ -41,7 +41,7 @@ struct ServerArgsOptions {\n void Interrupt(NodeContext& node);\n void Shutdown(NodeContext& node);\n //!Initialize the logging infrastructure\n-void InitLogging(const ArgsManager& args);\n+void InitLogging(const ArgsManager& args, const ServerArgsOptions& options);\n //!Parameter interaction: change current parameters depending on various rules\n void InitParameterInteraction(ArgsManager& args);\n "
      },
      {
        "sha": "fb6555433f897cac74dd1a5499077f6582d71990",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccc0388e18e1340387baa0bcdb8a812e48793721/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccc0388e18e1340387baa0bcdb8a812e48793721/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=ccc0388e18e1340387baa0bcdb8a812e48793721",
        "patch": "@@ -33,6 +33,7 @@ enum class SynchronizationState;\n struct CNodeStateStats;\n struct NodeContext;\n struct bilingual_str;\n+struct ServerArgsOptions;\n \n namespace interfaces {\n class Handler;\n@@ -56,7 +57,7 @@ class Node\n     virtual ~Node() {}\n \n     //! Init logging.\n-    virtual void initLogging() = 0;\n+    virtual void initLogging(const ServerArgsOptions& options) = 0;\n \n     //! Init parameter interaction.\n     virtual void initParameterInteraction() = 0;"
      },
      {
        "sha": "ff6ac763712445f35f7d584487f817a7467251cd",
        "filename": "src/node/interfaces.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccc0388e18e1340387baa0bcdb8a812e48793721/src/node/interfaces.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccc0388e18e1340387baa0bcdb8a812e48793721/src/node/interfaces.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/interfaces.cpp?ref=ccc0388e18e1340387baa0bcdb8a812e48793721",
        "patch": "@@ -66,7 +66,7 @@ class NodeImpl : public Node\n {\n public:\n     explicit NodeImpl(NodeContext* context) { setContext(context); }\n-    void initLogging() override { InitLogging(*Assert(m_context->args)); }\n+    void initLogging(const ServerArgsOptions& options) override { InitLogging(*Assert(m_context->args), options); }\n     void initParameterInteraction() override { InitParameterInteraction(*Assert(m_context->args)); }\n     bilingual_str getWarnings() override { return GetWarnings(true); }\n     uint32_t getLogCategories() override { return LogInstance().GetCategoryMask(); }"
      },
      {
        "sha": "6b0de9120696e69a4dce6edaadeb294e3b5679eb",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccc0388e18e1340387baa0bcdb8a812e48793721/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccc0388e18e1340387baa0bcdb8a812e48793721/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=ccc0388e18e1340387baa0bcdb8a812e48793721",
        "patch": "@@ -311,10 +311,9 @@ void BitcoinApplication::startThread()\n \n void BitcoinApplication::parameterSetup()\n {\n-    gArgs.SoftSetBoolArg(\"-printtoconsole\", SERVER_ARGS_OPTIONS.printtoconsole_default);\n     gArgs.SoftSetBoolArg(\"-server\", SERVER_ARGS_OPTIONS.server_default);\n \n-    InitLogging(gArgs);\n+    InitLogging(gArgs, SERVER_ARGS_OPTIONS);\n     InitParameterInteraction(gArgs);\n }\n "
      },
      {
        "sha": "ae5f6d2e8d3508fadbe08d42db2dbf1edeb77d03",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccc0388e18e1340387baa0bcdb8a812e48793721/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccc0388e18e1340387baa0bcdb8a812e48793721/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=ccc0388e18e1340387baa0bcdb8a812e48793721",
        "patch": "@@ -99,7 +99,7 @@ BasicTestingSetup::BasicTestingSetup(const std::string& chainName, const std::ve\n     SelectParams(chainName);\n     SeedInsecureRand();\n     if (G_TEST_LOG_FUN) LogInstance().PushBackCallback(G_TEST_LOG_FUN);\n-    InitLogging(*m_node.args);\n+    InitLogging(*m_node.args, SERVER_ARGS_OPTIONS);\n     AppInitParameterInteraction(*m_node.args);\n     LogInstance().StartLogging();\n     SHA256AutoDetect();"
      }
    ]
  }
]