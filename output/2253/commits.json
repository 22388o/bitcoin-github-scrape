[
  {
    "sha": "8c4e43130b7d88a2d7f4986130a89077c56cb741",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YzRlNDMxMzBiN2Q4OGEyZDdmNDk4NjEzMGE4OTA3N2M1NmNiNzQx",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2013-01-31T03:53:21Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2013-01-31T03:53:21Z"
      },
      "message": "Bugfix: Enable ConnectBestBlock to properly report back validation problems, and ensure orphan processing (when their parents are found) cannot be used to counter-DDoS the node providing the parent\n\nAlso fix a minor typo",
      "tree": {
        "sha": "e05a43d8c1824652f13ae5a01071d156019e0afb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e05a43d8c1824652f13ae5a01071d156019e0afb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c4e43130b7d88a2d7f4986130a89077c56cb741",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c4e43130b7d88a2d7f4986130a89077c56cb741",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8c4e43130b7d88a2d7f4986130a89077c56cb741",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c4e43130b7d88a2d7f4986130a89077c56cb741/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5b989722be0e090e63608399468a902b76cc13dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b989722be0e090e63608399468a902b76cc13dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5b989722be0e090e63608399468a902b76cc13dd"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 7,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2b102e5b9df4744ea73cb31fe7b5ad3eff99c6fa",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c4e43130b7d88a2d7f4986130a89077c56cb741/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c4e43130b7d88a2d7f4986130a89077c56cb741/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=8c4e43130b7d88a2d7f4986130a89077c56cb741",
        "patch": "@@ -1250,7 +1250,6 @@ bool ConnectBestBlock(CValidationState &state) {\n                 BOOST_FOREACH(CBlockIndex *pindexSwitch, vAttach) {\n                     if (fRequestShutdown)\n                         break;\n-                    CValidationState state;\n                     try {\n                         if (!SetBestChain(state, pindexSwitch))\n                             return false;\n@@ -1405,7 +1404,7 @@ bool CTransaction::CheckInputs(CValidationState &state, CCoinsViewCache &inputs,\n         }\n \n         if (nValueIn < GetValueOut())\n-            return state.DoS(100, error(\"ChecktInputs() : %s value in < value out\", GetHash().ToString().substr(0,10).c_str()));\n+            return state.DoS(100, error(\"CheckInputs() : %s value in < value out\", GetHash().ToString().substr(0,10).c_str()));\n \n         // Tally transaction fees\n         int64 nTxFee = nValueIn - GetValueOut();\n@@ -2259,7 +2258,9 @@ bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBl\n              ++mi)\n         {\n             CBlock* pblockOrphan = (*mi).second;\n-            if (pblockOrphan->AcceptBlock(state))\n+            // Use a dummy CValidationState so someone can't setup nodes to counter-DoS based on orphan resolution (that is, feeding people an invalid block based on LegitBlockX in order to get anyone relaying LegitBlockX banned)\n+            CValidationState stateDummy;\n+            if (pblockOrphan->AcceptBlock(stateDummy))\n                 vWorkQueue.push_back(pblockOrphan->GetHash());\n             mapOrphanBlocks.erase(pblockOrphan->GetHash());\n             delete pblockOrphan;\n@@ -3453,8 +3454,10 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n                     CDataStream(vMsg) >> tx;\n                     CInv inv(MSG_TX, tx.GetHash());\n                     bool fMissingInputs2 = false;\n+                    // Use a dummy CValidationState so someone can't setup nodes to counter-DoS based on orphan resolution (that is, feeding people an invalid transaction based on LegitTxX in order to get anyone relaying LegitTxX banned)\n+                    CValidationState stateDummy;\n \n-                    if (tx.AcceptToMemoryPool(state, true, true, &fMissingInputs2))\n+                    if (tx.AcceptToMemoryPool(stateDummy, true, true, &fMissingInputs2))\n                     {\n                         printf(\"   accepted orphan tx %s\\n\", inv.hash.ToString().substr(0,10).c_str());\n                         RelayTransaction(tx, inv.hash, vMsg);"
      }
    ]
  }
]