[
  {
    "sha": "facd7dd3d1f9d51e1133974ff69eeb48f5ae282b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWNkN2RkM2QxZjlkNTFlMTEzMzk3NGZmNjllZWI0OGY1YWUyODJi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-11T11:56:13Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-11T12:24:36Z"
      },
      "message": "wallet: Fix typo in comments; Simplify assert",
      "tree": {
        "sha": "8e73b4e97801363108dee58962700e07efa55bf4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e73b4e97801363108dee58962700e07efa55bf4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/facd7dd3d1f9d51e1133974ff69eeb48f5ae282b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgPxAwAq80N8To0Wo1IvTH4q0f7AmjFk67cHYPW6fZcMi3Uz3+WP457HVFaIjcV\nhe8dWYiwZlOHGmGA5EJpSTNpBhXUYxqp60/UL6LrmoGoHfi0j+jgxp2szjGZMIe5\nstPHmYRMGECM7N4pUnZG32WqcMp3JbJYkphGYnf8g+5Y2jd4dtzuCr6NjzId3BM9\nXKByggbXc/EkxIYYg/iI7/FhMlFceiTdITtXGb0jKyj9ZS1S79moMnDJPmast9nn\nv0GNEydKlvIFwENQOxtjRje5r/8tkUExI6DPhL+uugfTzj34nDWhasXGbRGZb82O\ntnk09FBdZwsf3kgdWNcNvetkICHtbHFrspLoOzNVeW+8qoj/Shlt6Kz2IOvGtOhj\n0iC/pLRls2I2LqybLVRaHvK4oFjCl/unOnulE2Wtj2z0sV/Z+e6P8f8X81zFAunY\nK4eTyKcd9wWx7exl6jXD8YIRhHr5VEEBTdeuz85cbA2BaP9PNPysNHsIHZt9Qp1e\nVIn3YLlL\n=t2lN\n-----END PGP SIGNATURE-----",
        "payload": "tree 8e73b4e97801363108dee58962700e07efa55bf4\nparent 5f96bce9b7f38c687817d58e8b54a5b7ebfe91b3\nauthor MarcoFalke <falke.marco@gmail.com> 1594468573 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1594470276 +0200\n\nwallet: Fix typo in comments; Simplify assert\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/facd7dd3d1f9d51e1133974ff69eeb48f5ae282b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/facd7dd3d1f9d51e1133974ff69eeb48f5ae282b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/facd7dd3d1f9d51e1133974ff69eeb48f5ae282b/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5f96bce9b7f38c687817d58e8b54a5b7ebfe91b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f96bce9b7f38c687817d58e8b54a5b7ebfe91b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f96bce9b7f38c687817d58e8b54a5b7ebfe91b3"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "724789bbf9f9cc08de0e92820b74468bc6213576",
        "filename": "src/test/data/script_tests.json",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facd7dd3d1f9d51e1133974ff69eeb48f5ae282b/src/test/data/script_tests.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facd7dd3d1f9d51e1133974ff69eeb48f5ae282b/src/test/data/script_tests.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_tests.json?ref=facd7dd3d1f9d51e1133974ff69eeb48f5ae282b",
        "patch": "@@ -678,7 +678,7 @@\n [\"0 0x02 0x0000 0\", \"CHECKMULTISIGVERIFY 1\", \"\", \"OK\"],\n \n [\"While not really correctly DER encoded, the empty signature is allowed by\"],\n-[\"STRICTENC to provide a compact way to provide a delibrately invalid signature.\"],\n+[\"STRICTENC to provide a compact way to provide a deliberately invalid signature.\"],\n [\"0\", \"0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a56d253e69256dac0 CHECKSIG NOT\", \"STRICTENC\", \"OK\"],\n [\"0 0\", \"1 0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a56d253e69256dac0 1 CHECKMULTISIG NOT\", \"STRICTENC\", \"OK\"],\n "
      },
      {
        "sha": "20132d57823ffc8a14078f91754cc2d2b1fa5e19",
        "filename": "src/test/descriptor_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facd7dd3d1f9d51e1133974ff69eeb48f5ae282b/src/test/descriptor_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facd7dd3d1f9d51e1133974ff69eeb48f5ae282b/src/test/descriptor_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/descriptor_tests.cpp?ref=facd7dd3d1f9d51e1133974ff69eeb48f5ae282b",
        "patch": "@@ -135,7 +135,7 @@ void DoCheck(const std::string& prv, const std::string& pub, int flags, const st\n             // When the descriptor is hardened, evaluate with access to the private keys inside.\n             const FlatSigningProvider& key_provider = (flags & HARDENED) ? keys_priv : keys_pub;\n \n-            // Evaluate the descriptor selected by `t` in poisition `i`.\n+            // Evaluate the descriptor selected by `t` in position `i`.\n             FlatSigningProvider script_provider, script_provider_cached;\n             std::vector<CScript> spks, spks_cached;\n             DescriptorCache desc_cache;"
      },
      {
        "sha": "9cc42ddc060b6e0d72ddd41f10084401a6590911",
        "filename": "src/wallet/bdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facd7dd3d1f9d51e1133974ff69eeb48f5ae282b/src/wallet/bdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facd7dd3d1f9d51e1133974ff69eeb48f5ae282b/src/wallet/bdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.h?ref=facd7dd3d1f9d51e1133974ff69eeb48f5ae282b",
        "patch": "@@ -90,7 +90,7 @@ class BerkeleyEnvironment\n /** Get BerkeleyEnvironment and database filename given a wallet path. */\n std::shared_ptr<BerkeleyEnvironment> GetWalletEnv(const fs::path& wallet_path, std::string& database_filename);\n \n-/** Return wheter a BDB wallet database is currently loaded. */\n+/** Return whether a BDB wallet database is currently loaded. */\n bool IsBDBWalletLoaded(const fs::path& wallet_path);\n \n /** An instance of this class represents one database."
      },
      {
        "sha": "3304d4ad0b31550d77e7125ad9baeafcf4039370",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facd7dd3d1f9d51e1133974ff69eeb48f5ae282b/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facd7dd3d1f9d51e1133974ff69eeb48f5ae282b/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=facd7dd3d1f9d51e1133974ff69eeb48f5ae282b",
        "patch": "@@ -3141,7 +3141,7 @@ static UniValue fundrawtransaction(const JSONRPCRequest& request)\n     CAmount fee;\n     int change_position;\n     CCoinControl coin_control;\n-    // Automatically select (additional) coins. Can be overriden by options.add_inputs.\n+    // Automatically select (additional) coins. Can be overridden by options.add_inputs.\n     coin_control.m_add_inputs = true;\n     FundTransaction(pwallet, tx, fee, change_position, request.params[1], coin_control);\n \n@@ -4075,7 +4075,7 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n     CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf);\n     CCoinControl coin_control;\n     // Automatically select coins, unless at least one is manually selected. Can\n-    // be overriden by options.add_inputs.\n+    // be overridden by options.add_inputs.\n     coin_control.m_add_inputs = rawTx.vin.size() == 0;\n     FundTransaction(pwallet, rawTx, fee, change_position, request.params[3], coin_control);\n "
      },
      {
        "sha": "8eec00993fe677559c50aa4a2ac4e95df9089c28",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/facd7dd3d1f9d51e1133974ff69eeb48f5ae282b/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/facd7dd3d1f9d51e1133974ff69eeb48f5ae282b/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=facd7dd3d1f9d51e1133974ff69eeb48f5ae282b",
        "patch": "@@ -1437,8 +1437,8 @@ bool CWallet::LoadWalletFlags(uint64_t flags)\n bool CWallet::AddWalletFlags(uint64_t flags)\n {\n     LOCK(cs_wallet);\n-    // We should never be writing unknown onon-tolerable wallet flags\n-    assert(!(((flags & KNOWN_WALLET_FLAGS) >> 32) ^ (flags >> 32)));\n+    // We should never be writing unknown non-tolerable wallet flags\n+    assert(((flags & KNOWN_WALLET_FLAGS) >> 32) == (flags >> 32));\n     if (!WalletBatch(*database).WriteWalletFlags(flags)) {\n         throw std::runtime_error(std::string(__func__) + \": writing wallet flags failed\");\n     }"
      }
    ]
  }
]