[
  {
    "sha": "aa250f0453029afbf3c903899a3770c61e389468",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYTI1MGYwNDUzMDI5YWZiZjNjOTAzODk5YTM3NzBjNjFlMzg5NDY4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-05-05T17:43:14Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-05-06T09:09:19Z"
      },
      "message": "Remove NumBlocksOfPeers\n\nGenerally useless information. Only updates on connect time, not after\nthat. Peers can easily lie and the median filter is not effective in\npreventing that.\n\nIn the past it was used for progress display in the GUI but\n`CheckPoints::guessVerificationProgress` provides a better way that is now used.\nIt was too easy to mislead it. Peers do lie about it in practice, see issue #4065.\n\nFrom the RPC, `getpeerinfo` gives the peer raw values, which are more\nuseful.",
      "tree": {
        "sha": "e0eee277ebf62a2e20dc78a97c8868750651e12f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e0eee277ebf62a2e20dc78a97c8868750651e12f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aa250f0453029afbf3c903899a3770c61e389468",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa250f0453029afbf3c903899a3770c61e389468",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aa250f0453029afbf3c903899a3770c61e389468",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aa250f0453029afbf3c903899a3770c61e389468/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d4ffe4e425b5a3f6fe4ff0ce7297608dfe6c7417",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4ffe4e425b5a3f6fe4ff0ce7297608dfe6c7417",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d4ffe4e425b5a3f6fe4ff0ce7297608dfe6c7417"
      }
    ],
    "stats": {
      "total": 94,
      "additions": 19,
      "deletions": 75
    },
    "files": [
      {
        "sha": "46183bf4319dbc0fa26abad777a345be3671c1b3",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa250f0453029afbf3c903899a3770c61e389468/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa250f0453029afbf3c903899a3770c61e389468/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=aa250f0453029afbf3c903899a3770c61e389468",
        "patch": "@@ -54,8 +54,6 @@ int64_t CTransaction::nMinTxFee = 10000;  // Override with -mintxfee\n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n int64_t CTransaction::nMinRelayTxFee = 1000;\n \n-static CMedianFilter<int> cPeerBlockCounts(8, 0); // Amount of blocks that other nodes claim to have\n-\n struct COrphanBlock {\n     uint256 hashBlock;\n     uint256 hashPrev;\n@@ -1303,12 +1301,6 @@ bool CheckProofOfWork(uint256 hash, unsigned int nBits)\n     return true;\n }\n \n-// Return maximum amount of blocks that other nodes claim to have\n-int GetNumBlocksOfPeers()\n-{\n-    return std::max(cPeerBlockCounts.median(), Checkpoints::GetTotalBlocksEstimate());\n-}\n-\n bool IsInitialBlockDownload()\n {\n     LOCK(cs_main);\n@@ -3484,9 +3476,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         LogPrintf(\"receive version message: %s: version %d, blocks=%d, us=%s, them=%s, peer=%s\\n\", pfrom->cleanSubVer, pfrom->nVersion, pfrom->nStartingHeight, addrMe.ToString(), addrFrom.ToString(), pfrom->addr.ToString());\n \n         AddTimeData(pfrom->addr, nTime);\n-\n-        LOCK(cs_main);\n-        cPeerBlockCounts.input(pfrom->nStartingHeight);\n     }\n \n "
      },
      {
        "sha": "e459772e8851eee3296244a80a6b268a6dee8db7",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa250f0453029afbf3c903899a3770c61e389468/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa250f0453029afbf3c903899a3770c61e389468/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=aa250f0453029afbf3c903899a3770c61e389468",
        "patch": "@@ -160,8 +160,6 @@ void ThreadScriptCheck();\n bool CheckProofOfWork(uint256 hash, unsigned int nBits);\n /** Calculate the minimum amount of work a received block needs, without knowing its direct parent */\n unsigned int ComputeMinWork(unsigned int nBase, int64_t nTime);\n-/** Get the number of active peers */\n-int GetNumBlocksOfPeers();\n /** Check whether we are doing an initial block download (synchronizing from disk or network) */\n bool IsInitialBlockDownload();\n /** Format a string that describes several potential problems detected by the core */"
      },
      {
        "sha": "e6190aec13c64827c2c482d31f3dc99561fc47f2",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 12,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa250f0453029afbf3c903899a3770c61e389468/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa250f0453029afbf3c903899a3770c61e389468/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=aa250f0453029afbf3c903899a3770c61e389468",
        "patch": "@@ -403,8 +403,8 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n         setNumConnections(clientModel->getNumConnections());\n         connect(clientModel, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n \n-        setNumBlocks(clientModel->getNumBlocks(), clientModel->getNumBlocksOfPeers());\n-        connect(clientModel, SIGNAL(numBlocksChanged(int,int)), this, SLOT(setNumBlocks(int,int)));\n+        setNumBlocks(clientModel->getNumBlocks());\n+        connect(clientModel, SIGNAL(numBlocksChanged(int)), this, SLOT(setNumBlocks(int)));\n \n         // Receive and report messages from client model\n         connect(clientModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n@@ -617,7 +617,7 @@ void BitcoinGUI::setNumConnections(int count)\n     labelConnectionsIcon->setToolTip(tr(\"%n active connection(s) to Bitcoin network\", \"\", count));\n }\n \n-void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n+void BitcoinGUI::setNumBlocks(int count)\n {\n     // Prevent orphan statusbar messages (e.g. hover Quit in main menu, wait until chain-sync starts -> garbelled text)\n     statusBar()->clearMessage();\n@@ -646,17 +646,10 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n     QDateTime currentDate = QDateTime::currentDateTime();\n     int secs = lastBlockDate.secsTo(currentDate);\n \n-    if(count < nTotalBlocks)\n-    {\n-        tooltip = tr(\"Processed %1 of %2 (estimated) blocks of transaction history.\").arg(count).arg(nTotalBlocks);\n-    }\n-    else\n-    {\n-        tooltip = tr(\"Processed %1 blocks of transaction history.\").arg(count);\n-    }\n+    tooltip = tr(\"Processed %1 blocks of transaction history.\").arg(count);\n \n     // Set icon state: spinning if catching up, tick otherwise\n-    if(secs < 90*60 && count >= nTotalBlocks)\n+    if(secs < 90*60)\n     {\n         tooltip = tr(\"Up to date\") + QString(\".<br>\") + tooltip;\n         labelBlocksIcon->setPixmap(QIcon(\":/icons/synced\").pixmap(STATUSBAR_ICONSIZE, STATUSBAR_ICONSIZE));"
      },
      {
        "sha": "b4675b95ac56e9d52a9fc92a49f77baaad07b405",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa250f0453029afbf3c903899a3770c61e389468/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa250f0453029afbf3c903899a3770c61e389468/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=aa250f0453029afbf3c903899a3770c61e389468",
        "patch": "@@ -130,7 +130,7 @@ public slots:\n     /** Set number of connections shown in the UI */\n     void setNumConnections(int count);\n     /** Set number of blocks shown in the UI */\n-    void setNumBlocks(int count, int nTotalBlocks);\n+    void setNumBlocks(int count);\n \n     /** Notify the user of an event from the core network or transaction handling code.\n        @param[in] title     the message box / notification title"
      },
      {
        "sha": "d1f68ebd22a58b5e411b7f0805dc0d93f324bcad",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 11,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa250f0453029afbf3c903899a3770c61e389468/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa250f0453029afbf3c903899a3770c61e389468/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=aa250f0453029afbf3c903899a3770c61e389468",
        "patch": "@@ -23,7 +23,7 @@ static const int64_t nClientStartupTime = GetTime();\n \n ClientModel::ClientModel(OptionsModel *optionsModel, QObject *parent) :\n     QObject(parent), optionsModel(optionsModel),\n-    cachedNumBlocks(0), cachedNumBlocksOfPeers(0),\n+    cachedNumBlocks(0),\n     cachedReindexing(0), cachedImporting(0),\n     numBlocksAtStartup(-1), pollTimer(0)\n {\n@@ -101,19 +101,16 @@ void ClientModel::updateTimer()\n     // Some quantities (such as number of blocks) change so fast that we don't want to be notified for each change.\n     // Periodically check and update with a timer.\n     int newNumBlocks = getNumBlocks();\n-    int newNumBlocksOfPeers = getNumBlocksOfPeers();\n \n     // check for changed number of blocks we have, number of blocks peers claim to have, reindexing state and importing state\n-    if (cachedNumBlocks != newNumBlocks || cachedNumBlocksOfPeers != newNumBlocksOfPeers ||\n+    if (cachedNumBlocks != newNumBlocks ||\n         cachedReindexing != fReindex || cachedImporting != fImporting)\n     {\n         cachedNumBlocks = newNumBlocks;\n-        cachedNumBlocksOfPeers = newNumBlocksOfPeers;\n         cachedReindexing = fReindex;\n         cachedImporting = fImporting;\n \n-        // ensure we return the maximum of newNumBlocksOfPeers and newNumBlocks to not create weird displays in the GUI\n-        emit numBlocksChanged(newNumBlocks, std::max(newNumBlocksOfPeers, newNumBlocks));\n+        emit numBlocksChanged(newNumBlocks);\n     }\n \n     emit bytesChanged(getTotalBytesRecv(), getTotalBytesSent());\n@@ -166,11 +163,6 @@ enum BlockSource ClientModel::getBlockSource() const\n     return BLOCK_SOURCE_NONE;\n }\n \n-int ClientModel::getNumBlocksOfPeers() const\n-{\n-    return GetNumBlocksOfPeers();\n-}\n-\n QString ClientModel::getStatusBarWarnings() const\n {\n     return QString::fromStdString(GetWarnings(\"statusbar\"));"
      },
      {
        "sha": "cab853d92db37a46e4a3778e03906887fe612eb1",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa250f0453029afbf3c903899a3770c61e389468/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa250f0453029afbf3c903899a3770c61e389468/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=aa250f0453029afbf3c903899a3770c61e389468",
        "patch": "@@ -60,8 +60,6 @@ class ClientModel : public QObject\n     bool inInitialBlockDownload() const;\n     //! Return true if core is importing blocks\n     enum BlockSource getBlockSource() const;\n-    //! Return conservative estimate of total number of blocks, or 0 if unknown\n-    int getNumBlocksOfPeers() const;\n     //! Return warnings to be displayed in status bar\n     QString getStatusBarWarnings() const;\n \n@@ -75,7 +73,6 @@ class ClientModel : public QObject\n     OptionsModel *optionsModel;\n \n     int cachedNumBlocks;\n-    int cachedNumBlocksOfPeers;\n     bool cachedReindexing;\n     bool cachedImporting;\n \n@@ -88,7 +85,7 @@ class ClientModel : public QObject\n \n signals:\n     void numConnectionsChanged(int count);\n-    void numBlocksChanged(int count, int countOfPeers);\n+    void numBlocksChanged(int count);\n     void alertsChanged(const QString &warnings);\n     void bytesChanged(quint64 totalBytesIn, quint64 totalBytesOut);\n "
      },
      {
        "sha": "fcb6bb60bb3481f56502182cf3324c58d625defb",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 5,
        "deletions": 28,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa250f0453029afbf3c903899a3770c61e389468/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa250f0453029afbf3c903899a3770c61e389468/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=aa250f0453029afbf3c903899a3770c61e389468",
        "patch": "@@ -254,36 +254,13 @@\n         </widget>\n        </item>\n        <item row=\"11\" column=\"0\">\n-        <widget class=\"QLabel\" name=\"label_4\">\n-         <property name=\"text\">\n-          <string>Estimated total blocks</string>\n-         </property>\n-        </widget>\n-       </item>\n-       <item row=\"11\" column=\"1\">\n-        <widget class=\"QLabel\" name=\"totalBlocks\">\n-         <property name=\"cursor\">\n-          <cursorShape>IBeamCursor</cursorShape>\n-         </property>\n-         <property name=\"text\">\n-          <string>N/A</string>\n-         </property>\n-         <property name=\"textFormat\">\n-          <enum>Qt::PlainText</enum>\n-         </property>\n-         <property name=\"textInteractionFlags\">\n-          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-         </property>\n-        </widget>\n-       </item>\n-       <item row=\"12\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_2\">\n          <property name=\"text\">\n           <string>Last block time</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"12\" column=\"1\">\n+       <item row=\"11\" column=\"1\">\n         <widget class=\"QLabel\" name=\"lastBlockTime\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -299,7 +276,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"13\" column=\"0\">\n+       <item row=\"12\" column=\"0\">\n         <spacer name=\"verticalSpacer_2\">\n          <property name=\"orientation\">\n           <enum>Qt::Vertical</enum>\n@@ -312,7 +289,7 @@\n          </property>\n         </spacer>\n        </item>\n-       <item row=\"14\" column=\"0\">\n+       <item row=\"13\" column=\"0\">\n         <widget class=\"QLabel\" name=\"labelDebugLogfile\">\n          <property name=\"font\">\n           <font>\n@@ -325,7 +302,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"15\" column=\"0\">\n+       <item row=\"14\" column=\"0\">\n         <widget class=\"QPushButton\" name=\"openDebugLogfileButton\">\n          <property name=\"toolTip\">\n           <string>Open the Bitcoin debug log file from the current data directory. This can take a few seconds for large log files.</string>\n@@ -338,7 +315,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"16\" column=\"0\">\n+       <item row=\"15\" column=\"0\">\n         <spacer name=\"verticalSpacer\">\n          <property name=\"orientation\">\n           <enum>Qt::Vertical</enum>"
      },
      {
        "sha": "0a46a722e4319ea9bb8287bb05bf94725e7d65aa",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa250f0453029afbf3c903899a3770c61e389468/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa250f0453029afbf3c903899a3770c61e389468/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=aa250f0453029afbf3c903899a3770c61e389468",
        "patch": "@@ -271,8 +271,8 @@ void RPCConsole::setClientModel(ClientModel *model)\n         setNumConnections(model->getNumConnections());\n         connect(model, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n \n-        setNumBlocks(model->getNumBlocks(), model->getNumBlocksOfPeers());\n-        connect(model, SIGNAL(numBlocksChanged(int,int)), this, SLOT(setNumBlocks(int,int)));\n+        setNumBlocks(model->getNumBlocks());\n+        connect(model, SIGNAL(numBlocksChanged(int)), this, SLOT(setNumBlocks(int)));\n \n         updateTrafficStats(model->getTotalBytesRecv(), model->getTotalBytesSent());\n         connect(model, SIGNAL(bytesChanged(quint64,quint64)), this, SLOT(updateTrafficStats(quint64, quint64)));\n@@ -366,11 +366,9 @@ void RPCConsole::setNumConnections(int count)\n     ui->numberOfConnections->setText(connections);\n }\n \n-void RPCConsole::setNumBlocks(int count, int countOfPeers)\n+void RPCConsole::setNumBlocks(int count)\n {\n     ui->numberOfBlocks->setText(QString::number(count));\n-    // If there is no current countOfPeers available display N/A instead of 0, which can't ever be true\n-    ui->totalBlocks->setText(countOfPeers == 0 ? tr(\"N/A\") : QString::number(countOfPeers));\n     if(clientModel)\n         ui->lastBlockTime->setText(clientModel->getLastBlockDate().toString());\n }"
      },
      {
        "sha": "091a6d294f39d711d5228142338ba0f0f3fc7ffc",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aa250f0453029afbf3c903899a3770c61e389468/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aa250f0453029afbf3c903899a3770c61e389468/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=aa250f0453029afbf3c903899a3770c61e389468",
        "patch": "@@ -52,7 +52,7 @@ public slots:\n     /** Set number of connections shown in the UI */\n     void setNumConnections(int count);\n     /** Set number of blocks shown in the UI */\n-    void setNumBlocks(int count, int countOfPeers);\n+    void setNumBlocks(int count);\n     /** Go forward or back in history */\n     void browseHistory(int offset);\n     /** Scroll console view to end */"
      }
    ]
  }
]