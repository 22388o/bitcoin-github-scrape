[
  {
    "sha": "fa320975411af4f0e41771d89958a77fd7a2284b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTMyMDk3NTQxMWFmNGYwZTQxNzcxZDg5OTU4YTc3ZmQ3YTIyODRi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-15T01:06:34Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-15T01:04:36Z"
      },
      "message": "test: Create cached blocks not in the future",
      "tree": {
        "sha": "d78b36af11da632ad19002f2157d309e7e720d7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d78b36af11da632ad19002f2157d309e7e720d7a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa320975411af4f0e41771d89958a77fd7a2284b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhZeAwAsPCUDo1S7dA92gm0zteWvDA9W841PjC7m4kVXZsSBJbaMQv6dGKvEEx0\n2jugCyzBdsvQrYC5jlbdrvcUIxZieW7XKrLIeLBofVplQSnhrmCpeQ0YL9vF8Iua\nFkUD3JymrXYMVplAo89qxVzjAMO1/zIR0ptDe4slxkbdF04P9sha0mOJ5YQS+9qd\nhiSnxFX9KODbVF/ze5TZYRctYSkM+QRly5K+pnx9IWUmml6c5UCBjrh/Dy5LomKg\nkJG+bXSkGAFSyUOpgoj5Mgrow1zOSdlvbc9FzZik8WUpNMP8GOhLOKPrfu7CE7cc\nClNOj0kHGFR10nmyQuUkc3BAwoSCa/16gXL5eheMxsRycy/dzCweMjqVXdeJWqy5\n+fsE/wvnvS1feuP7TooQJclQuOl+igGgWi0yon1QEA/F7tVtYFuLWpWmlWPMV1Wb\ncTMLR///ChKOul50oJAnDcf0XY+C4VRA/MfkKH7dG6hDyrJHfcur4z2MSaDMhtfJ\n/Hrj67SW\n=scTu\n-----END PGP SIGNATURE-----",
        "payload": "tree d78b36af11da632ad19002f2157d309e7e720d7a\nparent 4702cadca94520a36bfe979c85750563c30f7c85\nauthor MarcoFalke <falke.marco@gmail.com> 1586912794 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1586912676 -0400\n\ntest: Create cached blocks not in the future\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa320975411af4f0e41771d89958a77fd7a2284b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa320975411af4f0e41771d89958a77fd7a2284b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa320975411af4f0e41771d89958a77fd7a2284b/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4702cadca94520a36bfe979c85750563c30f7c85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4702cadca94520a36bfe979c85750563c30f7c85",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4702cadca94520a36bfe979c85750563c30f7c85"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 7,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d4cf5f8896ac374373558d4078240dba1e14405d",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa320975411af4f0e41771d89958a77fd7a2284b/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa320975411af4f0e41771d89958a77fd7a2284b/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=fa320975411af4f0e41771d89958a77fd7a2284b",
        "patch": "@@ -549,9 +549,13 @@ def _initialize_chain(self):\n                     cwd=self.options.tmpdir,\n                 ))\n             self.start_node(CACHE_NODE_ID)\n+            cache_node = self.nodes[CACHE_NODE_ID]\n \n             # Wait for RPC connections to be ready\n-            self.nodes[CACHE_NODE_ID].wait_for_rpc_connection()\n+            cache_node.wait_for_rpc_connection()\n+\n+            # Set a time in the past, so that blocks don't end up in the future\n+            cache_node.setmocktime(cache_node.getblockheader(cache_node.getbestblockhash())['time'])\n \n             # Create a 199-block-long chain; each of the 4 first nodes\n             # gets 25 mature blocks and 25 immature.\n@@ -560,12 +564,12 @@ def _initialize_chain(self):\n             # This is needed so that we are out of IBD when the test starts,\n             # see the tip age check in IsInitialBlockDownload().\n             for i in range(8):\n-                self.nodes[CACHE_NODE_ID].generatetoaddress(\n+                cache_node.generatetoaddress(\n                     nblocks=25 if i != 7 else 24,\n                     address=TestNode.PRIV_KEYS[i % 4].address,\n                 )\n \n-            assert_equal(self.nodes[CACHE_NODE_ID].getblockchaininfo()[\"blocks\"], 199)\n+            assert_equal(cache_node.getblockchaininfo()[\"blocks\"], 199)\n \n             # Shut it down, and clean up cache directories:\n             self.stop_nodes()"
      }
    ]
  }
]