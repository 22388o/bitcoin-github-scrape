[
  {
    "sha": "991419d54a90825d9d52e230f4a1fd30d2aca38c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTE0MTlkNTRhOTA4MjVkOWQ1MmUyMzBmNGExZmQzMGQyYWNhMzhj",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-07-10T16:26:40Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-07-17T00:03:00Z"
      },
      "message": "Replace unused end() and begin() in base_uint. (use first/last)\n\nWith ones that return unsigned int, and makes end() actually\nreturn the last value.",
      "tree": {
        "sha": "fdd83323879f2c945a30fa9c9643c2c8c958aebb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fdd83323879f2c945a30fa9c9643c2c8c958aebb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/991419d54a90825d9d52e230f4a1fd30d2aca38c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/991419d54a90825d9d52e230f4a1fd30d2aca38c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/991419d54a90825d9d52e230f4a1fd30d2aca38c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/991419d54a90825d9d52e230f4a1fd30d2aca38c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1c009d622ded6dd254d6be5161b4df875d492d12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c009d622ded6dd254d6be5161b4df875d492d12",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1c009d622ded6dd254d6be5161b4df875d492d12"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f7a91958d30dfc97c38f4284c7218f20f6c2ace5",
        "filename": "src/uint256.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/991419d54a90825d9d52e230f4a1fd30d2aca38c/src/uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/991419d54a90825d9d52e230f4a1fd30d2aca38c/src/uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.h?ref=991419d54a90825d9d52e230f4a1fd30d2aca38c",
        "patch": "@@ -334,14 +334,14 @@ class base_uint\n         return (GetHex());\n     }\n \n-    unsigned char* begin()\n+    unsigned int first() const\n     {\n-        return (unsigned char*)&pn[0];\n+        return pn[0];\n     }\n \n-    unsigned char* end()\n+    unsigned int last() const\n     {\n-        return (unsigned char*)&pn[WIDTH];\n+        return pn[WIDTH];\n     }\n \n     unsigned int size()"
      }
    ]
  },
  {
    "sha": "966ab27b08564ce83741744466710e996b059a71",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjZhYjI3YjA4NTY0Y2U4Mzc0MTc0NDQ2NjcxMGU5OTZiMDU5YTcx",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-07-10T16:37:30Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-07-17T00:03:00Z"
      },
      "message": "Add code to generate checkpoints_def.cpp (-saveblockcheckpointfile)",
      "tree": {
        "sha": "9967536ab2914b0c7a5221e92e5aac27c9e044a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9967536ab2914b0c7a5221e92e5aac27c9e044a3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/966ab27b08564ce83741744466710e996b059a71",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/966ab27b08564ce83741744466710e996b059a71",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/966ab27b08564ce83741744466710e996b059a71",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/966ab27b08564ce83741744466710e996b059a71/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "991419d54a90825d9d52e230f4a1fd30d2aca38c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/991419d54a90825d9d52e230f4a1fd30d2aca38c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/991419d54a90825d9d52e230f4a1fd30d2aca38c"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 25,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2cefa9bb9e32aa5eb5d470e8a2cd5d42c37a8004",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/966ab27b08564ce83741744466710e996b059a71/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/966ab27b08564ce83741744466710e996b059a71/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=966ab27b08564ce83741744466710e996b059a71",
        "patch": "@@ -9,6 +9,7 @@\n #include \"init.h\"\n #include \"util.h\"\n #include \"ui_interface.h\"\n+#include \"checkpoints.h\"\n #include <boost/filesystem.hpp>\n #include <boost/filesystem/fstream.hpp>\n #include <boost/filesystem/convenience.hpp>\n@@ -611,6 +612,30 @@ bool AppInit2()\n         return false;\n     }\n \n+    if (mapArgs.count(\"-saveblockcheckpointfile\"))\n+    {\n+        int nBlocksTo = GetArg(\"-saveblockcheckpointfileto\", Checkpoints::GetTotalBlocksEstimate());\n+        if (nBestHeight <= nBlocksTo)\n+            printf(\"Not enough blocks to save block checkpoint file.\\n\");\n+        else\n+        {\n+            FILE* file = fopen(mapArgs[\"-saveblockcheckpointfile\"].c_str(), \"wb\");\n+            if (!file)\n+                printf(\"Failed to open file to save block checkpoint file.\\n\");\n+            else\n+            {\n+                fputs(\"const unsigned int LSBCheckpoints[] = {\", file);\n+                for (CBlockIndex* pindex = pindexGenesisBlock; pindex->nHeight <= nBlocksTo; pindex = pindex->pnext)\n+                    if (fprintf(file, \"%u,\\n\", pindex->phashBlock->first()) < 1)\n+                    {\n+                        printf(\"Error writing block hash data to save block checkpoint file.\\n\");\n+                        break;\n+                    }\n+                fputs(\"};\", file);\n+            }\n+        }\n+    }\n+\n     // ********************************************************* Step 7: load wallet\n \n     uiInterface.InitMessage(_(\"Loading wallet...\"));"
      }
    ]
  },
  {
    "sha": "0c1e8360d63ab8b0e831017c8cde0cadf372ef73",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYzFlODM2MGQ2M2FiOGIwZTgzMTAxN2M4Y2RlMGNhZGYzNzJlZjcz",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-07-10T16:39:26Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-07-17T00:40:27Z"
      },
      "message": "Use checkpoints_def.cpp to verify checkpoints.",
      "tree": {
        "sha": "205687df5d329cb798462da516371b7f6b57b816",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/205687df5d329cb798462da516371b7f6b57b816"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c1e8360d63ab8b0e831017c8cde0cadf372ef73",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c1e8360d63ab8b0e831017c8cde0cadf372ef73",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0c1e8360d63ab8b0e831017c8cde0cadf372ef73",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c1e8360d63ab8b0e831017c8cde0cadf372ef73/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "966ab27b08564ce83741744466710e996b059a71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/966ab27b08564ce83741744466710e996b059a71",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/966ab27b08564ce83741744466710e996b059a71"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 16,
      "deletions": 1
    },
    "files": [
      {
        "sha": "57d25ed3cc7f2339832b6a3b2378216b21755139",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c1e8360d63ab8b0e831017c8cde0cadf372ef73/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c1e8360d63ab8b0e831017c8cde0cadf372ef73/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=0c1e8360d63ab8b0e831017c8cde0cadf372ef73",
        "patch": "@@ -12,6 +12,8 @@\n \n namespace Checkpoints\n {\n+    #include \"checkpoints_def.cpp\"\n+\n     typedef std::map<int, uint256> MapCheckpoints;\n \n     //\n@@ -39,10 +41,16 @@ namespace Checkpoints\n \n     bool CheckBlock(int nHeight, const uint256& hash)\n     {\n+        assert(nHeight >= 0);\n         MapCheckpoints& checkpoints = (fTestNet ? mapCheckpointsTestnet : mapCheckpoints);\n \n         MapCheckpoints::const_iterator i = checkpoints.find(nHeight);\n-        if (i == checkpoints.end()) return true;\n+        if (i == checkpoints.end())\n+        {\n+            if (!fTestNet && (unsigned int)nHeight < sizeof(LSBCheckpoints)/sizeof(int))\n+                return hash.first() == LSBCheckpoints[nHeight];\n+            return true;\n+        }\n         return hash == i->second;\n     }\n "
      },
      {
        "sha": "941f5d72bc39e105f84009221a5907179efa2aab",
        "filename": "src/checkpoints_def.cpp",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c1e8360d63ab8b0e831017c8cde0cadf372ef73/src/checkpoints_def.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c1e8360d63ab8b0e831017c8cde0cadf372ef73/src/checkpoints_def.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints_def.cpp?ref=0c1e8360d63ab8b0e831017c8cde0cadf372ef73",
        "patch": "@@ -0,0 +1,7 @@\n+#warning It is recommended you create a new checkpoints_def.cpp after downloading blocks using -saveblockcheckpointfile\n+/*\n+This is a placholder file that should be replaced by the output of bitcoind -saveblockcheckpointfileto\n+It will be filled with the least-significant 32 bits of block hashes in the best block chain. By checkpointing\n+the early, difficulty-1 blocks several potential denial-of-service attacks are prevented.\n+*/\n+const unsigned int LSBCheckpoints[] = {};"
      }
    ]
  },
  {
    "sha": "7768c550a8d47dc5cb0f3eea5c56b51c0b19d909",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NzY4YzU1MGE4ZDQ3ZGM1Y2IwZjNlZWE1YzU2YjUxYzBiMTlkOTA5",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-07-10T16:42:04Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-07-17T00:40:27Z"
      },
      "message": "Force gitian builders to regenerate checkpoints_def.cpp.\n\nNote that the updated checkpoints_def.cpp is not included in the\nsrc dir to avoid unnecessarily bloating the release tars.",
      "tree": {
        "sha": "7f4a70844ee51aa693b30016e7e9d06ce307e854",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f4a70844ee51aa693b30016e7e9d06ce307e854"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7768c550a8d47dc5cb0f3eea5c56b51c0b19d909",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7768c550a8d47dc5cb0f3eea5c56b51c0b19d909",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7768c550a8d47dc5cb0f3eea5c56b51c0b19d909",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7768c550a8d47dc5cb0f3eea5c56b51c0b19d909/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "0c1e8360d63ab8b0e831017c8cde0cadf372ef73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c1e8360d63ab8b0e831017c8cde0cadf372ef73",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0c1e8360d63ab8b0e831017c8cde0cadf372ef73"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b229b659bfb60aeb5dd661d973a79d815b4e966b",
        "filename": "contrib/gitian-descriptors/gitian-win32.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7768c550a8d47dc5cb0f3eea5c56b51c0b19d909/contrib/gitian-descriptors/gitian-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7768c550a8d47dc5cb0f3eea5c56b51c0b19d909/contrib/gitian-descriptors/gitian-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win32.yml?ref=7768c550a8d47dc5cb0f3eea5c56b51c0b19d909",
        "patch": "@@ -18,6 +18,7 @@ files:\n - \"qt-win32-4.7.4-gitian.zip\"\n - \"boost-win32-1.49.0-gitian2.zip\"\n - \"bitcoin-deps-0.0.4.zip\"\n+- \"checkpoints_def.cpp\"\n script: |\n   #\n   mkdir $HOME/qt\n@@ -51,6 +52,7 @@ script: |\n   export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n   export FAKETIME=$REFERENCE_DATETIME\n   export TZ=UTC\n+  cp ../checkpoints_def.cpp ./src/\n   $HOME/qt/src/bin/qmake -spec unsupported/win32-g++-cross MINIUPNPC_LIB_PATH=$HOME/build/miniupnpc MINIUPNPC_INCLUDE_PATH=$HOME/build/ BDB_LIB_PATH=$HOME/build/db-4.8.30.NC/build_unix BDB_INCLUDE_PATH=$HOME/build/db-4.8.30.NC/build_unix BOOST_LIB_PATH=$HOME/build/boost_1_47_0/stage/lib BOOST_INCLUDE_PATH=$HOME/build/boost_1_47_0 BOOST_LIB_SUFFIX=-mt-s BOOST_THREAD_LIB_SUFFIX=_win32-mt-s OPENSSL_LIB_PATH=$HOME/build/openssl-1.0.1b OPENSSL_INCLUDE_PATH=$HOME/build/openssl-1.0.1b/include QRENCODE_LIB_PATH=$HOME/build/qrencode-3.2.0/.libs QRENCODE_INCLUDE_PATH=$HOME/build/qrencode-3.2.0 USE_QRCODE=1 INCLUDEPATH=$HOME/build DEFINES=BOOST_THREAD_USE_LIB BITCOIN_NEED_QT_PLUGINS=1 QMAKE_LRELEASE=lrelease QMAKE_CXXFLAGS=-frandom-seed=bitcoin QMAKE_LFLAGS=-frandom-seed=bitcoin USE_BUILD_INFO=1\n   make $MAKEOPTS\n   cp release/bitcoin-qt.exe $OUTDIR/"
      },
      {
        "sha": "eeb39554d20179e29ee193e0f47312f9f840a9c8",
        "filename": "contrib/gitian-descriptors/gitian.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7768c550a8d47dc5cb0f3eea5c56b51c0b19d909/contrib/gitian-descriptors/gitian.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7768c550a8d47dc5cb0f3eea5c56b51c0b19d909/contrib/gitian-descriptors/gitian.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian.yml?ref=7768c550a8d47dc5cb0f3eea5c56b51c0b19d909",
        "patch": "@@ -25,6 +25,7 @@ remotes:\n files:\n - \"miniupnpc-1.6.tar.gz\"\n - \"qrencode-3.2.0.tar.bz2\"\n+- \"checkpoints_def.cpp\"\n script: |\n   INSTDIR=\"$HOME/install\"\n   export LIBRARY_PATH=\"$INSTDIR/lib\"\n@@ -45,6 +46,7 @@ script: |\n   git archive HEAD | tar -x -C $OUTDIR/src\n   cp $OUTDIR/src/doc/README $OUTDIR\n   cp $OUTDIR/src/COPYING $OUTDIR\n+  cp ../checkpoints_def.cpp ./src/\n   cd src\n   make -f makefile.unix STATIC=1 OPENSSL_INCLUDE_PATH=\"$INSTDIR/include\" OPENSSL_LIB_PATH=\"$INSTDIR/lib\" $MAKEOPTS bitcoind USE_UPNP=0 DEBUGFLAGS=\n   mkdir -p $OUTDIR/bin/$GBUILD_BITS"
      }
    ]
  },
  {
    "sha": "9fa85b81501d131273cc8da7a4775d109f775986",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZmE4NWI4MTUwMWQxMzEyNzNjYzhkYTdhNDc3NWQxMDlmNzc1OTg2",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-07-17T00:02:08Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-07-17T00:40:27Z"
      },
      "message": "Add manual checkpoints for non BIP30-compliant blocks.",
      "tree": {
        "sha": "b3d5c16a4454dce8d7fcf2b1270ddc26a6d6a109",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3d5c16a4454dce8d7fcf2b1270ddc26a6d6a109"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fa85b81501d131273cc8da7a4775d109f775986",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fa85b81501d131273cc8da7a4775d109f775986",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9fa85b81501d131273cc8da7a4775d109f775986",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fa85b81501d131273cc8da7a4775d109f775986/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "7768c550a8d47dc5cb0f3eea5c56b51c0b19d909",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7768c550a8d47dc5cb0f3eea5c56b51c0b19d909",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7768c550a8d47dc5cb0f3eea5c56b51c0b19d909"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "078a4ff93f25636de7cad2a1a7c6914a01f1728c",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fa85b81501d131273cc8da7a4775d109f775986/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fa85b81501d131273cc8da7a4775d109f775986/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=9fa85b81501d131273cc8da7a4775d109f775986",
        "patch": "@@ -28,6 +28,13 @@ namespace Checkpoints\n         ( 11111, uint256(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\"))\n         ( 33333, uint256(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\"))\n         ( 74000, uint256(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\"))\n+\n+        // The following 4 blocks are required as they are not BIP30-compliant\n+        ( 91722, uint256(\"0x00000000000271a2dc26e7667f8419f2e15416dc6955e5a6c6cdf3f2574dd08e\"))\n+        ( 91812, uint256(\"0x00000000000af0aed4792b1acee3d966af36cf5def14935db8de83d6f9306f2f\"))\n+        ( 91842, uint256(\"0x00000000000a4d0a398161ffc163c503763b1f4360639393e0e4c8e300e0caec\"))\n+        ( 91880, uint256(\"0x00000000000743f190a18c5577a3c2d2a1f610ae9601ac046a38084ccb7cd721\"))\n+\n         (105000, uint256(\"0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97\"))\n         (134444, uint256(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\"))\n         (168000, uint256(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\"))"
      }
    ]
  },
  {
    "sha": "b2667bc86ed7de7aed784ea19c9fcaebaf169179",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjY2N2JjODZlZDdkZTdhZWQ3ODRlYTE5YzlmY2FlYmFmMTY5MTc5",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-07-10T17:56:29Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-07-17T00:40:27Z"
      },
      "message": "Check BIP30 on all blocks that aren't checkpointed.",
      "tree": {
        "sha": "440195b33dd5bb38e9c399e9804db093763ed679",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/440195b33dd5bb38e9c399e9804db093763ed679"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2667bc86ed7de7aed784ea19c9fcaebaf169179",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2667bc86ed7de7aed784ea19c9fcaebaf169179",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b2667bc86ed7de7aed784ea19c9fcaebaf169179",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2667bc86ed7de7aed784ea19c9fcaebaf169179/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "9fa85b81501d131273cc8da7a4775d109f775986",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fa85b81501d131273cc8da7a4775d109f775986",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9fa85b81501d131273cc8da7a4775d109f775986"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 27,
      "deletions": 13
    },
    "files": [
      {
        "sha": "d4b378e60b9a19d550a290a4ac87f8e883d24dcb",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2667bc86ed7de7aed784ea19c9fcaebaf169179/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2667bc86ed7de7aed784ea19c9fcaebaf169179/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=b2667bc86ed7de7aed784ea19c9fcaebaf169179",
        "patch": "@@ -81,4 +81,18 @@ namespace Checkpoints\n         }\n         return NULL;\n     }\n+\n+    bool HaveCheckpoint(int nHeight)\n+    {\n+        assert(nHeight >= 0);\n+\n+        if (!fTestNet && (unsigned int)nHeight < sizeof(LSBCheckpoints)/sizeof(int))\n+            return true;\n+\n+        MapCheckpoints& checkpoints = (fTestNet ? mapCheckpointsTestnet : mapCheckpoints);\n+\n+        MapCheckpoints::const_iterator i = checkpoints.find(nHeight);\n+        if (i == checkpoints.end()) return false;\n+        return true;\n+    }\n }"
      },
      {
        "sha": "b8dab3a05f1a84e43eb1224bf501a2a5137db7ec",
        "filename": "src/checkpoints.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2667bc86ed7de7aed784ea19c9fcaebaf169179/src/checkpoints.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2667bc86ed7de7aed784ea19c9fcaebaf169179/src/checkpoints.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.h?ref=b2667bc86ed7de7aed784ea19c9fcaebaf169179",
        "patch": "@@ -22,6 +22,9 @@ namespace Checkpoints\n \n     // Returns last CBlockIndex* in mapBlockIndex that is a checkpoint\n     CBlockIndex* GetLastCheckpoint(const std::map<uint256, CBlockIndex*>& mapBlockIndex);\n+\n+    // Returns true if we have a checkpoint lock-in for the given height\n+    bool HaveCheckpoint(int nHeight);\n }\n \n #endif"
      },
      {
        "sha": "9f4307cdee0bf301ce9f09b571d637ad538671d8",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 13,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2667bc86ed7de7aed784ea19c9fcaebaf169179/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2667bc86ed7de7aed784ea19c9fcaebaf169179/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=b2667bc86ed7de7aed784ea19c9fcaebaf169179",
        "patch": "@@ -1322,18 +1322,6 @@ bool CBlock::ConnectBlock(CTxDB& txdb, CBlockIndex* pindex)\n     if (!CheckBlock())\n         return false;\n \n-    // Do not allow blocks that contain transactions which 'overwrite' older transactions,\n-    // unless those are already completely spent.\n-    // If such overwrites are allowed, coinbases and transactions depending upon those\n-    // can be duplicated to remove the ability to spend the first instance -- even after\n-    // being sent to another address.\n-    // See BIP30 and http://r6.ca/blog/20120206T005236Z.html for more information.\n-    // This logic is not necessary for memory pool transactions, as AcceptToMemoryPool\n-    // already refuses previously-known transaction id's entirely.\n-    // This rule applies to all blocks whose timestamp is after March 15, 2012, 0:00 UTC.\n-    int64 nBIP30SwitchTime = 1331769600;\n-    bool fEnforceBIP30 = (pindex->nTime > nBIP30SwitchTime);\n-\n     // BIP16 didn't become active until Apr 1 2012\n     int64 nBIP16SwitchTime = 1333238400;\n     bool fStrictPayToScriptHash = (pindex->nTime >= nBIP16SwitchTime);\n@@ -1348,7 +1336,16 @@ bool CBlock::ConnectBlock(CTxDB& txdb, CBlockIndex* pindex)\n     {\n         uint256 hashTx = tx.GetHash();\n \n-        if (fEnforceBIP30) {\n+        // Do not allow blocks that contain transactions which 'overwrite' older transactions,\n+        // unless those are already completely spent.\n+        // If such overwrites are allowed, coinbases and transactions depending upon those\n+        // can be duplicated to remove the ability to spend the first instance -- even after\n+        // being sent to another address.\n+        // See BIP30 and http://r6.ca/blog/20120206T005236Z.html for more information.\n+        // This logic is not necessary for memory pool transactions, as AcceptToMemoryPool\n+        // already refuses previously-known transaction id's entirely.\n+        // This rule applies to all blocks whose timestamp is after March 15, 2012, 0:00 UTC.\n+        if (!Checkpoints::HaveCheckpoint(pindex->nHeight)) {\n             CTxIndex txindexOld;\n             if (txdb.ReadTxIndex(hashTx, txindexOld)) {\n                 BOOST_FOREACH(CDiskTxPos &pos, txindexOld.vSpent)"
      }
    ]
  }
]