luke-jr,2012-06-08T22:10:09Z,Does this wait until the client is actually shutdown?\n,https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6214229,6214229,
Diapolo,2012-06-08T22:32:05Z,"@luke-jr The function is called, after we hide the main Window in preparation of a shutdown, which is the right place.\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6214532,6214532,
luke-jr,2012-06-08T22:40:28Z,"No, the current behaviour showing the icon until the client has exited completely is by design. See bug #908\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6214665,6214665,
Diapolo,2012-06-08T22:46:39Z,"Alright, then the call is miss-placed, but it IS needed to fix the icon still shown after shutdown issue. Will update to find a better place :), thanks for pointing that out.\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6214760,6214760,
Diapolo,2012-06-08T23:45:04Z,"@luke-jr\nOkay, I took a look and come to the conclusion as it's not possible to pretend, when trayIcon will be deleted, we have to call trayIcon->hide() as long as we know it is controllable.\n\nIn the present code from master branch this will not succeed and so the icon is displayed, even if the app is closed already. Which one is worse, a tray-icon when there is no app or a missing tray-icon, w",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6215373,6215373,
luke-jr,2012-06-08T23:50:49Z,Why can't you simply grab the pointer and hold onto it until shutdown completes?\n,https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6215424,6215424,
Diapolo,2012-06-09T00:03:53Z,"Seems possible, but I'm not sure if I can do this in a clean and sufficient way. I'm sure other devs would say don't touch the Shutdown() function for hiding a system tray-icon and I think so too. If you have an easy and working solution for both problems here, you're welcome ;).\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6215535,6215535,
luke-jr,2012-06-09T00:28:59Z,``` C++\n             Shutdown(NULL);\n+            window.hideTrayIcon();\n```\n,https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6215739,6215739,
Diapolo,2012-06-09T00:33:34Z,"Well Shutdown(NULL) calls exit(), so it won't return and cannot reach window.hideTrayIcon();\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6215782,6215782,
Diapolo,2012-06-09T13:47:24Z,@laanwj Any idea for this one ;)?\n,https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6219875,6219875,
laanwj,2012-06-10T07:28:05Z,"Yeah, good catch. Shutdown calls exit()... that kind of sucks. This means that execution flow never leaves the function, and thus the destructor is never called.\n\nLuke-jr is right, though, that hiding the icon _before_ the shutdown function also isn't desired behavior.\n\nThe reason that Shutdown calls exit is that, with bitcoind, any thread can call Shutdown(). No matter what thread calls it, i",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6226533,6226533,
Diapolo,2012-06-10T11:24:01Z,"@laanwj Sounds good, will test and update this pull to only do that change.\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6227644,6227644,
Diapolo,2012-06-10T11:46:16Z,"Updated and verified to work (on Windows). Tray icon is removed, but is visible until core is shutdown.\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6227750,6227750,
laanwj,2012-06-10T14:20:31Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6228642,6228642,
TheBlueMatt,2012-06-10T20:18:57Z,"NACK, bitcoin-qt never exits if you send it SIGTERM after this (though, to be fair, its not really any worse to how it used to SEGFAULT every once in a while, in any case, maybe we could fix that too)\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6231547,6231547,
Diapolo,2012-06-10T20:28:30Z,"SIGTERM is non Windows stuff, I need your help here :D.\n\nWhen receiving that signal it is handled via HandleSIGTERM(), which simply sets fRequestShutdown to true. I could only find ThreadMessageHandler2(), which seems to initiate a Shutdown(), right?\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6231617,6231617,
TheBlueMatt,2012-06-10T20:31:57Z,"Correct, after SIGTERM, we end up just calling Shutdown.  I suppose we really just need to replace our Shutdown calls with uiInterface.QueueShutdown() (have I mentioned how ugly that looks when we are building without GUI?).\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6231637,6231637,
Diapolo,2012-06-10T20:40:40Z,"Wouldn't it work if I just extend my pull to modify Shutdown() to be like this in the end:\n\n<pre>\n// ensure a clean exit for Bitcoin-Qt\n#ifndef QT_GUI\n        printf(""Bitcoin exited\n\n"");\n        exit(0);\n#else\n        uiInterface.QueueShutdown();\n#endif\n</pre>\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6231706,6231706,
laanwj,2012-06-10T20:42:26Z,Sounds like a good solution. That would also likely fix the current crashes\nwhen sending sigterm to the ui executable.\n,https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6231725,6231725,
laanwj,2012-06-10T20:45:37Z,Last comment was @bluematt.\n\nDo not call queueshutdown from Shutdown that will cause big trouble! The qt\nevent loop is long dead by that point and for non-ui you'd be calling\nshutdown recursively.\n,https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6231753,6231753,
Diapolo,2012-06-10T20:46:05Z,"I will update, but I need one of you (if you use Linux / Unix) to test and verify this.\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6231761,6231761,
TheBlueMatt,2012-06-10T20:47:20Z,"Personally, Id like to not have to see uiInterface.QueueShutdown everywhere, but be able to call Shutdown which calls uiInterface.QueueShutdown which can call FinishShutdown in its callback, or simply have Shutdown call FinishShutdown directly if we dont have GUI...but maybe Im the only one who doesnt like having to uiInterface in bitcoind...\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6231777,6231777,
Diapolo,2012-06-10T20:49:24Z,"@laanwj Damn, I was too quick ... and missunderstood your comment :-/.\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6231802,6231802,
Diapolo,2012-06-10T21:09:37Z,"@laanwj Well no, I don't get it ... calling `uiInterface.QueueShutdown();` triggers `QMetaObject::invokeMethod(QCoreApplication::instance(), ""quit"", Qt::QueuedConnection);`, which puts a quit() command in the main event loop, right? So why should the event loop be gone when we are in `Shutdown()`? I can't find the connection between the two.\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6231997,6231997,
Diapolo,2012-06-10T21:39:16Z,"@laanwj Don't bother with my last question, I had a discussion on IRC with BlueMatt and will come up with a new pull-request tomorrow and close this one.\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6232267,6232267,
laanwj,2012-06-11T05:27:26Z,"There is nothing wrong with the current sequence. QueueShutdown first winds down the Qt event loop, which, returning in the main function, properly calls Shutdown.\n\nYou cannot simply spawn Shutdown in a new thread when the UI is running, this results in crashes so it takes a safer way.\n\nI really don't care about ""seeing ui.QueueShutdown"" everywhere. That's confounding bikeshedding with a real ",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6235592,6235592,
Diapolo,2012-06-11T05:53:20Z,"See #1439, which I think is rather elegant.\n",https://github.com/bitcoin/bitcoin/pull/1417#issuecomment-6235824,6235824,
