[
  {
    "sha": "fae2c8bc54e6c0fe69a82bd1b232c52edd1acd34",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWUyYzhiYzU0ZTZjMGZlNjlhODJiZDFiMjMyYzUyZWRkMWFjZDM0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-28T18:36:36Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-28T18:52:29Z"
      },
      "message": "fuzz: Allow to pass min/max to ConsumeTime",
      "tree": {
        "sha": "560e05576fa56234f38ecf65a6c7b7f9bf25d77e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/560e05576fa56234f38ecf65a6c7b7f9bf25d77e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fae2c8bc54e6c0fe69a82bd1b232c52edd1acd34",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUha5wv8DvAVpbUhjY7/HD9Nk9y8qpqbmH1N/TxzDf4wx1JNKeCjQlX5SFcvPV0J\nigSS/3N1zAWKpQ4WiEiip/UPz/1do0a94VmeZo1rsMyiaDWd0hkZPJH+i1s5NFVH\nocggl/B2qS3fDmHD5vsgkG65nbqDwUrCd9OV4YXQ+800qLz/hzM+b8nXTv1uhvb0\nIxGDk9ENPwS9HVvjZ02VJFMH9UUdhRezmGazPtp+pmDkRFlCLNMblWKnmf+O1zRT\n3sL3xUYxOq+3jYOnqmtgQWiDFzx7sdCWdwfZb/6wAYk8hRDccfyyKecP40YvkzLS\nprFZH7BS8hghXbPi7JF5nbXCA+H6eiL6a0VAnyMK7wcHRpa5emgEgZ8653Wd1jUd\ng45N9je3xl2FtuvOoYL6sashvM2LfG2OVp51lFGjfFdux543/tmuDPlfvAGJL/XI\nPCUIWi09ub0pjmjtd30zYU15YEPqFQCfZyvrcNmM2ekVlpnqcif35FSWhwEoWNsw\n5qWMIyTV\n=TY44\n-----END PGP SIGNATURE-----",
        "payload": "tree 560e05576fa56234f38ecf65a6c7b7f9bf25d77e\nparent 549d20a31beaf71c722970af32d0076b70b5ffcb\nauthor MarcoFalke <falke.marco@gmail.com> 1619634996 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1619635949 +0200\n\nfuzz: Allow to pass min/max to ConsumeTime\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae2c8bc54e6c0fe69a82bd1b232c52edd1acd34",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fae2c8bc54e6c0fe69a82bd1b232c52edd1acd34",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae2c8bc54e6c0fe69a82bd1b232c52edd1acd34/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "549d20a31beaf71c722970af32d0076b70b5ffcb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/549d20a31beaf71c722970af32d0076b70b5ffcb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/549d20a31beaf71c722970af32d0076b70b5ffcb"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 10,
      "deletions": 8
    },
    "files": [
      {
        "sha": "6966c9b3ae4c44c8cb5b195fe33887a9a00a2de9",
        "filename": "src/test/fuzz/util.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae2c8bc54e6c0fe69a82bd1b232c52edd1acd34/src/test/fuzz/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae2c8bc54e6c0fe69a82bd1b232c52edd1acd34/src/test/fuzz/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.cpp?ref=fae2c8bc54e6c0fe69a82bd1b232c52edd1acd34",
        "patch": "@@ -5,6 +5,7 @@\n #include <test/fuzz/util.h>\n #include <test/util/script.h>\n #include <util/rbf.h>\n+#include <util/time.h>\n #include <version.h>\n \n FuzzedSock::FuzzedSock(FuzzedDataProvider& fuzzed_data_provider)\n@@ -216,6 +217,14 @@ void FillNode(FuzzedDataProvider& fuzzed_data_provider, CNode& node, bool init_v\n     }\n }\n \n+int64_t ConsumeTime(FuzzedDataProvider& fuzzed_data_provider, const std::optional<int64_t>& min, const std::optional<int64_t>& max) noexcept\n+{\n+    // Avoid t=0 (1970-01-01T00:00:00Z) since SetMockTime(0) disables mocktime.\n+    static const int64_t time_min = ParseISO8601DateTime(\"1970-01-01T00:00:01Z\");\n+    static const int64_t time_max = ParseISO8601DateTime(\"9999-12-31T23:59:59Z\");\n+    return fuzzed_data_provider.ConsumeIntegralInRange<int64_t>(min.value_or(time_min), max.value_or(time_max));\n+}\n+\n CMutableTransaction ConsumeTransaction(FuzzedDataProvider& fuzzed_data_provider, const std::optional<std::vector<uint256>>& prevout_txids, const int max_num_in, const int max_num_out) noexcept\n {\n     CMutableTransaction tx_mut;"
      },
      {
        "sha": "6dfb35a7d4497e232ea229b9d0a943a7a56f77a4",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae2c8bc54e6c0fe69a82bd1b232c52edd1acd34/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae2c8bc54e6c0fe69a82bd1b232c52edd1acd34/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=fae2c8bc54e6c0fe69a82bd1b232c52edd1acd34",
        "patch": "@@ -26,7 +26,6 @@\n #include <test/util/net.h>\n #include <txmempool.h>\n #include <uint256.h>\n-#include <util/time.h>\n #include <version.h>\n \n #include <algorithm>\n@@ -127,13 +126,7 @@ template <typename WeakEnumType, size_t size>\n     return fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(0, MAX_MONEY);\n }\n \n-[[nodiscard]] inline int64_t ConsumeTime(FuzzedDataProvider& fuzzed_data_provider) noexcept\n-{\n-    // Avoid t=0 (1970-01-01T00:00:00Z) since SetMockTime(0) is a no-op.\n-    static const int64_t time_min = ParseISO8601DateTime(\"1970-01-01T00:00:01Z\");\n-    static const int64_t time_max = ParseISO8601DateTime(\"9999-12-31T23:59:59Z\");\n-    return fuzzed_data_provider.ConsumeIntegralInRange<int64_t>(time_min, time_max);\n-}\n+[[nodiscard]] int64_t ConsumeTime(FuzzedDataProvider& fuzzed_data_provider, const std::optional<int64_t>& min = std::nullopt, const std::optional<int64_t>& max = std::nullopt) noexcept;\n \n [[nodiscard]] CMutableTransaction ConsumeTransaction(FuzzedDataProvider& fuzzed_data_provider, const std::optional<std::vector<uint256>>& prevout_txids, const int max_num_in = 10, const int max_num_out = 10) noexcept;\n "
      }
    ]
  },
  {
    "sha": "fab646b8ea293bb2b03707c6ef6790982625e492",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWI2NDZiOGVhMjkzYmIyYjAzNzA3YzZlZjY3OTA5ODI2MjVlNDky",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-28T18:48:10Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-28T18:53:50Z"
      },
      "message": "fuzz: Use correct variant of ConsumeRandomLengthString instead of hardcoding a maximum size\n\nThis is technically a breaking change.\n\nThis allows the fuzz engine to pick the right size,\nalso larger sizes, if needed.",
      "tree": {
        "sha": "ac66c60c646955dc15a25a5c88d822b92ec14e00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac66c60c646955dc15a25a5c88d822b92ec14e00"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fab646b8ea293bb2b03707c6ef6790982625e492",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi1Iwv/T+hDcIi4YpZSExKL6KYdrpG5AtiSAuJrJB5M1gV68vfFz24CeQdgxDHh\noeaGR1lcTSpp9a13PuKsfuITP/upBYXUJ7iuDNt+oiH4hPt7yfAw3PToAD0H6QBw\nxi+TCZ/spuRX3LvSRXZkieyVYXJPS2aTLHaKEGspCxLZJx85IRjrAVFxsUpbs82u\nqxAVZa5KpU5G7RrrILtpSq3PFo8FWWb9TygJmcuGvzyCIzbrmf4tYZM75CweXuTR\ntGWtayudsA5OKgLsXAw+Hj+wpaXN0UaPOVzdAXNI7Oz0hLu6Svf/sJSU/AReFE5O\nJozRHq12/Eox7TAGMEzDDSd7L48KxZL5tYYKf3mruydejj3X7Zw3YvMKBajBHxM2\n5rMWrnAl/g6OfMFe6od+GeWVetp3jNsqrzgX28iZZiDFSmn0//c1QPn3Ss6rJq7b\nnXEe8g9vRki0avUko7jFK5i00QL5OCTlWO3+XawFEy2ODCxhpJyUFYyiv7Z4pLVh\nmvYvH51f\n=Q+fr\n-----END PGP SIGNATURE-----",
        "payload": "tree ac66c60c646955dc15a25a5c88d822b92ec14e00\nparent fae2c8bc54e6c0fe69a82bd1b232c52edd1acd34\nauthor MarcoFalke <falke.marco@gmail.com> 1619635690 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1619636030 +0200\n\nfuzz: Use correct variant of ConsumeRandomLengthString instead of hardcoding a maximum size\n\nThis is technically a breaking change.\n\nThis allows the fuzz engine to pick the right size,\nalso larger sizes, if needed.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab646b8ea293bb2b03707c6ef6790982625e492",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fab646b8ea293bb2b03707c6ef6790982625e492",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab646b8ea293bb2b03707c6ef6790982625e492/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fae2c8bc54e6c0fe69a82bd1b232c52edd1acd34",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae2c8bc54e6c0fe69a82bd1b232c52edd1acd34",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fae2c8bc54e6c0fe69a82bd1b232c52edd1acd34"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 9,
      "deletions": 7
    },
    "files": [
      {
        "sha": "dc89f25e26dc8496993390c638d108142f423698",
        "filename": "src/test/fuzz/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab646b8ea293bb2b03707c6ef6790982625e492/src/test/fuzz/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab646b8ea293bb2b03707c6ef6790982625e492/src/test/fuzz/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.cpp?ref=fab646b8ea293bb2b03707c6ef6790982625e492",
        "patch": "@@ -276,7 +276,7 @@ CScriptWitness ConsumeScriptWitness(FuzzedDataProvider& fuzzed_data_provider, co\n     return ret;\n }\n \n-CScript ConsumeScript(FuzzedDataProvider& fuzzed_data_provider, const size_t max_length, const bool maybe_p2wsh) noexcept\n+CScript ConsumeScript(FuzzedDataProvider& fuzzed_data_provider, const std::optional<size_t>& max_length, const bool maybe_p2wsh) noexcept\n {\n     const std::vector<uint8_t> b = ConsumeRandomLengthByteVector(fuzzed_data_provider, max_length);\n     CScript r_script{b.begin(), b.end()};"
      },
      {
        "sha": "1a83f7a57a5fe6a383ab1183c7ccd80d4b62f6d6",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab646b8ea293bb2b03707c6ef6790982625e492/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab646b8ea293bb2b03707c6ef6790982625e492/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=fab646b8ea293bb2b03707c6ef6790982625e492",
        "patch": "@@ -57,18 +57,20 @@ auto& PickValue(FuzzedDataProvider& fuzzed_data_provider, Collection& col)\n     return *it;\n }\n \n-[[nodiscard]] inline std::vector<uint8_t> ConsumeRandomLengthByteVector(FuzzedDataProvider& fuzzed_data_provider, const size_t max_length = 4096) noexcept\n+[[nodiscard]] inline std::vector<uint8_t> ConsumeRandomLengthByteVector(FuzzedDataProvider& fuzzed_data_provider, const std::optional<size_t>& max_length = std::nullopt) noexcept\n {\n-    const std::string s = fuzzed_data_provider.ConsumeRandomLengthString(max_length);\n+    const std::string s = max_length ?\n+                              fuzzed_data_provider.ConsumeRandomLengthString(*max_length) :\n+                              fuzzed_data_provider.ConsumeRandomLengthString();\n     return {s.begin(), s.end()};\n }\n \n-[[nodiscard]] inline std::vector<bool> ConsumeRandomLengthBitVector(FuzzedDataProvider& fuzzed_data_provider, const size_t max_length = 4096) noexcept\n+[[nodiscard]] inline std::vector<bool> ConsumeRandomLengthBitVector(FuzzedDataProvider& fuzzed_data_provider, const std::optional<size_t>& max_length = std::nullopt) noexcept\n {\n     return BytesToBits(ConsumeRandomLengthByteVector(fuzzed_data_provider, max_length));\n }\n \n-[[nodiscard]] inline CDataStream ConsumeDataStream(FuzzedDataProvider& fuzzed_data_provider, const size_t max_length = 4096) noexcept\n+[[nodiscard]] inline CDataStream ConsumeDataStream(FuzzedDataProvider& fuzzed_data_provider, const std::optional<size_t>& max_length = std::nullopt) noexcept\n {\n     return CDataStream{ConsumeRandomLengthByteVector(fuzzed_data_provider, max_length), SER_NETWORK, INIT_PROTO_VERSION};\n }\n@@ -95,7 +97,7 @@ template <typename T>\n }\n \n template <typename T>\n-[[nodiscard]] inline std::optional<T> ConsumeDeserializable(FuzzedDataProvider& fuzzed_data_provider, const size_t max_length = 4096) noexcept\n+[[nodiscard]] inline std::optional<T> ConsumeDeserializable(FuzzedDataProvider& fuzzed_data_provider, const std::optional<size_t>& max_length = std::nullopt) noexcept\n {\n     const std::vector<uint8_t> buffer = ConsumeRandomLengthByteVector(fuzzed_data_provider, max_length);\n     CDataStream ds{buffer, SER_NETWORK, INIT_PROTO_VERSION};\n@@ -132,7 +134,7 @@ template <typename WeakEnumType, size_t size>\n \n [[nodiscard]] CScriptWitness ConsumeScriptWitness(FuzzedDataProvider& fuzzed_data_provider, const size_t max_stack_elem_size = 32) noexcept;\n \n-[[nodiscard]] CScript ConsumeScript(FuzzedDataProvider& fuzzed_data_provider, const size_t max_length = 4096, const bool maybe_p2wsh = false) noexcept;\n+[[nodiscard]] CScript ConsumeScript(FuzzedDataProvider& fuzzed_data_provider, const std::optional<size_t>& max_length = std::nullopt, const bool maybe_p2wsh = false) noexcept;\n \n [[nodiscard]] uint32_t ConsumeSequence(FuzzedDataProvider& fuzzed_data_provider) noexcept;\n "
      }
    ]
  },
  {
    "sha": "fa61ce5cf5c1d73d352173806571bcd7799ed2ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTYxY2U1Y2Y1YzFkNzNkMzUyMTczODA2NTcxYmNkNzc5OWVkMmVl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-28T18:53:18Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-28T18:54:07Z"
      },
      "message": "fuzz: Limit mocktime to MTP in tx_pool targets\n\nThis is needed for the next commit to generate blocks.\n\nAlso, apply the same mocking strategies to both targets.",
      "tree": {
        "sha": "36e2112502029b5041b73e1f082e0b4d8cc60b60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/36e2112502029b5041b73e1f082e0b4d8cc60b60"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa61ce5cf5c1d73d352173806571bcd7799ed2ee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUg2CQwArlH0mWRsnTBMyeLcDudemynp3AOScXdXkpzT76dOAyei63k/ZVCBbcK6\nKdZCxRrvHDtgdwxp9NI4kg35d4WKIntiXNny1qyo5K4KSqN092hiX2PaM0asyGMU\nvdflflQfg/6HuGuW1YrvB+T4dJYfKH4SWAuhNRJxRBbcf8LY4InXYuumzInTdnYU\n7k3hDeYei0Hrdw0ELpAGkZeL33Y62f10S/0FoO+LzCDlF5dGkaMph2+UCSKeEJUe\n2v6w3uPDBYz5WPFPmeAs3BbOOoUHqtfRnE36ZXsLMJKj+a+jf9RQQN2hHvMGSudw\nTbgM0KjC/1pYTpcdxi+h4BK1X54Of50X3AuXMcEKOXbf6qIhBsoVjitUUFvN97ju\nQdSq1NiyYcxwN4IhS3jylmC01P6ZOum26geQpjdq3A1xMLf5AD4rgjn6aWluoAn7\nrdPri3B0fVJxUlHlmpY0APSi2Q++kUf7plOoSUgYTG8GWDHDVSbwEmYEgZ8+u4QF\ndQ8FF/N0\n=Icn1\n-----END PGP SIGNATURE-----",
        "payload": "tree 36e2112502029b5041b73e1f082e0b4d8cc60b60\nparent fab646b8ea293bb2b03707c6ef6790982625e492\nauthor MarcoFalke <falke.marco@gmail.com> 1619635998 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1619636047 +0200\n\nfuzz: Limit mocktime to MTP in tx_pool targets\n\nThis is needed for the next commit to generate blocks.\n\nAlso, apply the same mocking strategies to both targets.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa61ce5cf5c1d73d352173806571bcd7799ed2ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa61ce5cf5c1d73d352173806571bcd7799ed2ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa61ce5cf5c1d73d352173806571bcd7799ed2ee/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fab646b8ea293bb2b03707c6ef6790982625e492",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab646b8ea293bb2b03707c6ef6790982625e492",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fab646b8ea293bb2b03707c6ef6790982625e492"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 33,
      "deletions": 3
    },
    "files": [
      {
        "sha": "a74734494fa64fb0c314fbb4b7609dfd8b5a56ad",
        "filename": "src/test/fuzz/tx_pool.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 3,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa61ce5cf5c1d73d352173806571bcd7799ed2ee/src/test/fuzz/tx_pool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa61ce5cf5c1d73d352173806571bcd7799ed2ee/src/test/fuzz/tx_pool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/tx_pool.cpp?ref=fa61ce5cf5c1d73d352173806571bcd7799ed2ee",
        "patch": "@@ -77,13 +77,21 @@ void SetMempoolConstraints(ArgsManager& args, FuzzedDataProvider& fuzzed_data_pr\n                      ToString(fuzzed_data_provider.ConsumeIntegralInRange<unsigned>(0, 999)));\n }\n \n+void MockTime(FuzzedDataProvider& fuzzed_data_provider, const CChainState& chainstate)\n+{\n+    const auto time = ConsumeTime(fuzzed_data_provider,\n+                                  chainstate.m_chain.Tip()->GetMedianTimePast() + 1,\n+                                  std::numeric_limits<decltype(chainstate.m_chain.Tip()->nTime)>::max());\n+    SetMockTime(time);\n+}\n+\n FUZZ_TARGET_INIT(tx_pool_standard, initialize_tx_pool)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const auto& node = g_setup->m_node;\n     auto& chainstate = node.chainman->ActiveChainstate();\n \n-    SetMockTime(ConsumeTime(fuzzed_data_provider));\n+    MockTime(fuzzed_data_provider, chainstate);\n     SetMempoolConstraints(*node.args, fuzzed_data_provider);\n \n     // All RBF-spendable outpoints\n@@ -163,7 +171,7 @@ FUZZ_TARGET_INIT(tx_pool_standard, initialize_tx_pool)\n         }();\n \n         if (fuzzed_data_provider.ConsumeBool()) {\n-            SetMockTime(ConsumeTime(fuzzed_data_provider));\n+            MockTime(fuzzed_data_provider, chainstate);\n         }\n         if (fuzzed_data_provider.ConsumeBool()) {\n             SetMempoolConstraints(*node.args, fuzzed_data_provider);\n@@ -254,6 +262,10 @@ FUZZ_TARGET_INIT(tx_pool, initialize_tx_pool)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const auto& node = g_setup->m_node;\n+    auto& chainstate = node.chainman->ActiveChainstate();\n+\n+    MockTime(fuzzed_data_provider, chainstate);\n+    SetMempoolConstraints(*node.args, fuzzed_data_provider);\n \n     std::vector<uint256> txids;\n     for (const auto& outpoint : g_outpoints_coinbase_init_mature) {\n@@ -265,11 +277,29 @@ FUZZ_TARGET_INIT(tx_pool, initialize_tx_pool)\n         txids.push_back(ConsumeUInt256(fuzzed_data_provider));\n     }\n \n-    CTxMemPool tx_pool{/* estimator */ nullptr, /* check_ratio */ 1};\n+    CTxMemPool tx_pool_{/* estimator */ nullptr, /* check_ratio */ 1};\n+    MockedTxPool& tx_pool = *static_cast<MockedTxPool*>(&tx_pool_);\n \n     while (fuzzed_data_provider.ConsumeBool()) {\n         const auto mut_tx = ConsumeTransaction(fuzzed_data_provider, txids);\n \n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            MockTime(fuzzed_data_provider, chainstate);\n+        }\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            SetMempoolConstraints(*node.args, fuzzed_data_provider);\n+        }\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            tx_pool.RollingFeeUpdate();\n+        }\n+        if (fuzzed_data_provider.ConsumeBool()) {\n+            const auto& txid = fuzzed_data_provider.ConsumeBool() ?\n+                                   mut_tx.GetHash() :\n+                                   PickValue(fuzzed_data_provider, txids);\n+            const auto delta = fuzzed_data_provider.ConsumeIntegralInRange<CAmount>(-50 * COIN, +50 * COIN);\n+            tx_pool.PrioritiseTransaction(txid, delta);\n+        }\n+\n         const auto tx = MakeTransactionRef(mut_tx);\n         const bool bypass_limits = fuzzed_data_provider.ConsumeBool();\n         ::fRequireStandard = fuzzed_data_provider.ConsumeBool();"
      }
    ]
  },
  {
    "sha": "fa03d0acd6bd8bb6d3d5227512f042ff537ad993",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTAzZDBhY2Q2YmQ4YmI2ZDNkNTIyNzUxMmYwNDJmZjUzN2FkOTkz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-28T19:04:14Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-05T18:12:00Z"
      },
      "message": "fuzz: Create a block template in tx_pool targets",
      "tree": {
        "sha": "510f40d65a231ac8ccc774178c0f4149bc00175d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/510f40d65a231ac8ccc774178c0f4149bc00175d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa03d0acd6bd8bb6d3d5227512f042ff537ad993",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhr8QwAngjQqoCdMOkoila2Wl9cDtLmhwL0S5/y+CDDJU0f2c65brQWC8oC5bzw\nhQNVRJAFPH5330o0e8smTAcxTlm6giT8lZTCL4Tvr0zJFw9ghR5LLhxpWqvZaTO3\n9lVkib04uynqokB45MdSZO2OdefK3a+/y11DixeDs7nYUZUDpa1Qs9dGz5cUf2kS\nF3BnbE8kiaDy1lw/kh0ytwC7pUqkSFvkEstGIFe4aNRzzz3XAo+L8OTFYvRTXBGi\na4mN7oxVpCnL2XIsqvV0/x1HVJrkgc0V6XVDqgEdbN0sMmSG0N141DDZOY9QxINk\navFAMsf6mwxfJe8KJJT6Sab7uiO2eYjCoHkWmmykuBfSyfmqAqo/Ccn907TOoM6l\n24yoMuzqff2C0vP77mSTtpaf5KEaSV1C6udr+Bfr+3yqspeuy0/W2xRhs8kcwNBk\nY4R9kZaZngDzXsNJGQibAGsbZ1XCNnuIZO6eSiI/nGUtX82XbLUO/6gIue5UQM2W\n6e261oRP\n=JU8H\n-----END PGP SIGNATURE-----",
        "payload": "tree 510f40d65a231ac8ccc774178c0f4149bc00175d\nparent fa61ce5cf5c1d73d352173806571bcd7799ed2ee\nauthor MarcoFalke <falke.marco@gmail.com> 1619636654 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1620238320 +0200\n\nfuzz: Create a block template in tx_pool targets\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa03d0acd6bd8bb6d3d5227512f042ff537ad993",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa03d0acd6bd8bb6d3d5227512f042ff537ad993",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa03d0acd6bd8bb6d3d5227512f042ff537ad993/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa61ce5cf5c1d73d352173806571bcd7799ed2ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa61ce5cf5c1d73d352173806571bcd7799ed2ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa61ce5cf5c1d73d352173806571bcd7799ed2ee"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 28,
      "deletions": 13
    },
    "files": [
      {
        "sha": "59229987ba46e7449a21fd2a0873061ace3f8a17",
        "filename": "src/test/fuzz/tx_pool.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 13,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa03d0acd6bd8bb6d3d5227512f042ff537ad993/src/test/fuzz/tx_pool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa03d0acd6bd8bb6d3d5227512f042ff537ad993/src/test/fuzz/tx_pool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/tx_pool.cpp?ref=fa03d0acd6bd8bb6d3d5227512f042ff537ad993",
        "patch": "@@ -3,6 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <consensus/validation.h>\n+#include <miner.h>\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n #include <test/fuzz/util.h>\n@@ -77,6 +78,29 @@ void SetMempoolConstraints(ArgsManager& args, FuzzedDataProvider& fuzzed_data_pr\n                      ToString(fuzzed_data_provider.ConsumeIntegralInRange<unsigned>(0, 999)));\n }\n \n+void Finish(FuzzedDataProvider& fuzzed_data_provider, MockedTxPool& tx_pool, CChainState& chainstate)\n+{\n+    WITH_LOCK(::cs_main, tx_pool.check(chainstate));\n+    {\n+        BlockAssembler::Options options;\n+        options.nBlockMaxWeight = fuzzed_data_provider.ConsumeIntegralInRange(0U, MAX_BLOCK_WEIGHT);\n+        options.blockMinFeeRate = CFeeRate{ConsumeMoney(fuzzed_data_provider)};\n+        auto assembler = BlockAssembler{chainstate, *static_cast<CTxMemPool*>(&tx_pool), ::Params(), options};\n+        auto block_template = assembler.CreateNewBlock(CScript{} << OP_TRUE);\n+        Assert(block_template->block.vtx.size() >= 1);\n+    }\n+    const auto info_all = tx_pool.infoAll();\n+    if (!info_all.empty()) {\n+        const auto& tx_to_remove = *PickValue(fuzzed_data_provider, info_all).tx;\n+        WITH_LOCK(tx_pool.cs, tx_pool.removeRecursive(tx_to_remove, /* dummy */ MemPoolRemovalReason::BLOCK));\n+        std::vector<uint256> all_txids;\n+        tx_pool.queryHashes(all_txids);\n+        assert(all_txids.size() < info_all.size());\n+        WITH_LOCK(::cs_main, tx_pool.check(chainstate));\n+    }\n+    SyncWithValidationInterfaceQueue();\n+}\n+\n void MockTime(FuzzedDataProvider& fuzzed_data_provider, const CChainState& chainstate)\n {\n     const auto time = ConsumeTime(fuzzed_data_provider,\n@@ -245,17 +269,7 @@ FUZZ_TARGET_INIT(tx_pool_standard, initialize_tx_pool)\n             }\n         }\n     }\n-    WITH_LOCK(::cs_main, tx_pool.check(chainstate));\n-    const auto info_all = tx_pool.infoAll();\n-    if (!info_all.empty()) {\n-        const auto& tx_to_remove = *PickValue(fuzzed_data_provider, info_all).tx;\n-        WITH_LOCK(tx_pool.cs, tx_pool.removeRecursive(tx_to_remove, /* dummy */ MemPoolRemovalReason::BLOCK));\n-        std::vector<uint256> all_txids;\n-        tx_pool.queryHashes(all_txids);\n-        assert(all_txids.size() < info_all.size());\n-        WITH_LOCK(::cs_main, tx_pool.check(chainstate));\n-    }\n-    SyncWithValidationInterfaceQueue();\n+    Finish(fuzzed_data_provider, tx_pool, chainstate);\n }\n \n FUZZ_TARGET_INIT(tx_pool, initialize_tx_pool)\n@@ -308,8 +322,7 @@ FUZZ_TARGET_INIT(tx_pool, initialize_tx_pool)\n         if (accepted) {\n             txids.push_back(tx->GetHash());\n         }\n-\n-        SyncWithValidationInterfaceQueue();\n     }\n+    Finish(fuzzed_data_provider, tx_pool, chainstate);\n }\n } // namespace"
      },
      {
        "sha": "6603897c2762e0045574925b4474d0e2880117a8",
        "filename": "test/sanitizer_suppressions/ubsan",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa03d0acd6bd8bb6d3d5227512f042ff537ad993/test/sanitizer_suppressions/ubsan",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa03d0acd6bd8bb6d3d5227512f042ff537ad993/test/sanitizer_suppressions/ubsan",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/sanitizer_suppressions/ubsan?ref=fa03d0acd6bd8bb6d3d5227512f042ff537ad993",
        "patch": "@@ -5,6 +5,8 @@\n # names can be used.\n # See https://github.com/google/sanitizers/issues/1364\n signed-integer-overflow:txmempool.cpp\n+# https://github.com/bitcoin/bitcoin/pull/21798#issuecomment-829180719\n+signed-integer-overflow:policy/feerate.cpp\n \n # -fsanitize=integer suppressions\n # ==============================="
      }
    ]
  }
]