[
  {
    "sha": "81ea66c30e2953dee24d5b127c28daa0d9452a28",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MWVhNjZjMzBlMjk1M2RlZTI0ZDViMTI3YzI4ZGFhMGQ5NDUyYTI4",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2019-09-27T11:31:44Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-10-26T13:55:30Z"
      },
      "message": "Drop signal CClientUIInterface::LoadWallet",
      "tree": {
        "sha": "0eb3bea23966c81ffc77a37081390b39c71d5a7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0eb3bea23966c81ffc77a37081390b39c71d5a7c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81ea66c30e2953dee24d5b127c28daa0d9452a28",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81ea66c30e2953dee24d5b127c28daa0d9452a28",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/81ea66c30e2953dee24d5b127c28daa0d9452a28",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81ea66c30e2953dee24d5b127c28daa0d9452a28/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "be50469217bd775c4305938634c32e5932f47841",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be50469217bd775c4305938634c32e5932f47841",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be50469217bd775c4305938634c32e5932f47841"
      }
    ],
    "stats": {
      "total": 67,
      "additions": 46,
      "deletions": 21
    },
    "files": [
      {
        "sha": "100f2d5dde91cb733052a25a8c9a35984e4c9c4c",
        "filename": "src/dummywallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/dummywallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/dummywallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dummywallet.cpp?ref=81ea66c30e2953dee24d5b127c28daa0d9452a28",
        "patch": "@@ -11,6 +11,8 @@ enum class WalletCreationStatus;\n \n namespace interfaces {\n class Chain;\n+class Handler;\n+class Wallet;\n }\n \n class DummyWalletInit : public WalletInitInterface {\n@@ -80,9 +82,13 @@ WalletCreationStatus CreateWallet(interfaces::Chain& chain, const SecureString&\n     throw std::logic_error(\"Wallet function called in non-wallet build.\");\n }\n \n-namespace interfaces {\n+using LoadWalletFn = std::function<void(std::unique_ptr<interfaces::Wallet> wallet)>;\n+std::unique_ptr<interfaces::Handler> HandleLoadWallet(LoadWalletFn load_wallet)\n+{\n+    throw std::logic_error(\"Wallet function called in non-wallet build.\");\n+}\n \n-class Wallet;\n+namespace interfaces {\n \n std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet)\n {"
      },
      {
        "sha": "9d54e64ec26b9666329cbf8e63db564f2f1ad150",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=81ea66c30e2953dee24d5b127c28daa0d9452a28",
        "patch": "@@ -342,7 +342,6 @@ class ChainImpl : public Chain\n     void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n     void initWarning(const std::string& message) override { InitWarning(message); }\n     void initError(const std::string& message) override { InitError(message); }\n-    void loadWallet(std::unique_ptr<Wallet> wallet) override { ::uiInterface.LoadWallet(wallet); }\n     void showProgress(const std::string& title, int progress, bool resume_possible) override\n     {\n         ::uiInterface.ShowProgress(title, progress, resume_possible);"
      },
      {
        "sha": "894a7c433ec58d92c8318914bd3f4e0e66a1e2e3",
        "filename": "src/interfaces/chain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/interfaces/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/interfaces/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.h?ref=81ea66c30e2953dee24d5b127c28daa0d9452a28",
        "patch": "@@ -43,7 +43,7 @@ class Wallet;\n //!   asynchronously\n //!   (https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-380101269).\n //!\n-//! * The initMessages() and loadWallet() methods which the wallet uses to send\n+//! * The initMessage() and showProgress() methods which the wallet uses to send\n //!   notifications to the GUI should go away when GUI and wallet can directly\n //!   communicate with each other without going through the node\n //!   (https://github.com/bitcoin/bitcoin/pull/15288#discussion_r253321096).\n@@ -213,9 +213,6 @@ class Chain\n     //! Send init error.\n     virtual void initError(const std::string& message) = 0;\n \n-    //! Send wallet load notification to the GUI.\n-    virtual void loadWallet(std::unique_ptr<Wallet> wallet) = 0;\n-\n     //! Send progress indicator.\n     virtual void showProgress(const std::string& title, int progress, bool resume_possible) = 0;\n "
      },
      {
        "sha": "4e235688fee69198fe08394389a29a8c232a84a4",
        "filename": "src/interfaces/handler.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/interfaces/handler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/interfaces/handler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/handler.cpp?ref=81ea66c30e2953dee24d5b127c28daa0d9452a28",
        "patch": "@@ -22,11 +22,25 @@ class HandlerImpl : public Handler\n     boost::signals2::scoped_connection m_connection;\n };\n \n+class CleanupHandler : public Handler\n+{\n+public:\n+    explicit CleanupHandler(std::function<void()> cleanup) : m_cleanup(std::move(cleanup)) {}\n+    ~CleanupHandler() override { if (!m_cleanup) return; m_cleanup(); m_cleanup = nullptr; }\n+    void disconnect() override { if (!m_cleanup) return; m_cleanup(); m_cleanup = nullptr; }\n+    std::function<void()> m_cleanup;\n+};\n+\n } // namespace\n \n std::unique_ptr<Handler> MakeHandler(boost::signals2::connection connection)\n {\n     return MakeUnique<HandlerImpl>(std::move(connection));\n }\n \n+std::unique_ptr<Handler> MakeHandler(std::function<void()> cleanup)\n+{\n+    return MakeUnique<CleanupHandler>(std::move(cleanup));\n+}\n+\n } // namespace interfaces"
      },
      {
        "sha": "46918bc22e79b07ec8ca4b9624087eb2cb76ef4e",
        "filename": "src/interfaces/handler.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/interfaces/handler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/interfaces/handler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/handler.h?ref=81ea66c30e2953dee24d5b127c28daa0d9452a28",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_INTERFACES_HANDLER_H\n #define BITCOIN_INTERFACES_HANDLER_H\n \n+#include <functional>\n #include <memory>\n \n namespace boost {\n@@ -30,6 +31,9 @@ class Handler\n //! Return handler wrapping a boost signal connection.\n std::unique_ptr<Handler> MakeHandler(boost::signals2::connection connection);\n \n+//! Return handler wrapping a cleanup function.\n+std::unique_ptr<Handler> MakeHandler(std::function<void()> cleanup);\n+\n } // namespace interfaces\n \n #endif // BITCOIN_INTERFACES_HANDLER_H"
      },
      {
        "sha": "2c24b02f2362d5227e625d4f7945e08278b9418b",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=81ea66c30e2953dee24d5b127c28daa0d9452a28",
        "patch": "@@ -42,11 +42,10 @@ std::vector<fs::path> ListWalletDir();\n std::vector<std::shared_ptr<CWallet>> GetWallets();\n std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const std::string& name, std::string& error, std::vector<std::string>& warnings);\n WalletCreationStatus CreateWallet(interfaces::Chain& chain, const SecureString& passphrase, uint64_t wallet_creation_flags, const std::string& name, std::string& error, std::vector<std::string>& warnings, std::shared_ptr<CWallet>& result);\n+std::unique_ptr<interfaces::Handler> HandleLoadWallet(interfaces::Node::LoadWalletFn load_wallet);\n \n namespace interfaces {\n \n-class Wallet;\n-\n namespace {\n \n class NodeImpl : public Node\n@@ -282,7 +281,7 @@ class NodeImpl : public Node\n     }\n     std::unique_ptr<Handler> handleLoadWallet(LoadWalletFn fn) override\n     {\n-        return MakeHandler(::uiInterface.LoadWallet_connect([fn](std::unique_ptr<Wallet>& wallet) { fn(std::move(wallet)); }));\n+        return HandleLoadWallet(std::move(fn));\n     }\n     std::unique_ptr<Handler> handleNotifyNumConnectionsChanged(NotifyNumConnectionsChangedFn fn) override\n     {"
      },
      {
        "sha": "3968464efc5e1779d239463a57b9323e557e6693",
        "filename": "src/ui_interface.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/ui_interface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/ui_interface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.cpp?ref=81ea66c30e2953dee24d5b127c28daa0d9452a28",
        "patch": "@@ -16,7 +16,6 @@ struct UISignals {\n     boost::signals2::signal<CClientUIInterface::NotifyNumConnectionsChangedSig> NotifyNumConnectionsChanged;\n     boost::signals2::signal<CClientUIInterface::NotifyNetworkActiveChangedSig> NotifyNetworkActiveChanged;\n     boost::signals2::signal<CClientUIInterface::NotifyAlertChangedSig> NotifyAlertChanged;\n-    boost::signals2::signal<CClientUIInterface::LoadWalletSig> LoadWallet;\n     boost::signals2::signal<CClientUIInterface::ShowProgressSig> ShowProgress;\n     boost::signals2::signal<CClientUIInterface::NotifyBlockTipSig> NotifyBlockTip;\n     boost::signals2::signal<CClientUIInterface::NotifyHeaderTipSig> NotifyHeaderTip;\n@@ -36,7 +35,6 @@ ADD_SIGNALS_IMPL_WRAPPER(InitMessage);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyNumConnectionsChanged);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyNetworkActiveChanged);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyAlertChanged);\n-ADD_SIGNALS_IMPL_WRAPPER(LoadWallet);\n ADD_SIGNALS_IMPL_WRAPPER(ShowProgress);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyBlockTip);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyHeaderTip);\n@@ -48,7 +46,6 @@ void CClientUIInterface::InitMessage(const std::string& message) { return g_ui_s\n void CClientUIInterface::NotifyNumConnectionsChanged(int newNumConnections) { return g_ui_signals.NotifyNumConnectionsChanged(newNumConnections); }\n void CClientUIInterface::NotifyNetworkActiveChanged(bool networkActive) { return g_ui_signals.NotifyNetworkActiveChanged(networkActive); }\n void CClientUIInterface::NotifyAlertChanged() { return g_ui_signals.NotifyAlertChanged(); }\n-void CClientUIInterface::LoadWallet(std::unique_ptr<interfaces::Wallet>& wallet) { return g_ui_signals.LoadWallet(wallet); }\n void CClientUIInterface::ShowProgress(const std::string& title, int nProgress, bool resume_possible) { return g_ui_signals.ShowProgress(title, nProgress, resume_possible); }\n void CClientUIInterface::NotifyBlockTip(bool b, const CBlockIndex* i) { return g_ui_signals.NotifyBlockTip(b, i); }\n void CClientUIInterface::NotifyHeaderTip(bool b, const CBlockIndex* i) { return g_ui_signals.NotifyHeaderTip(b, i); }"
      },
      {
        "sha": "f47b56c281d230d3364486be7dede9cf0fee05e4",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=81ea66c30e2953dee24d5b127c28daa0d9452a28",
        "patch": "@@ -17,10 +17,6 @@ class connection;\n }\n } // namespace boost\n \n-namespace interfaces {\n-class Wallet;\n-} // namespace interfaces\n-\n /** General change type (added, updated, removed). */\n enum ChangeType\n {\n@@ -105,9 +101,6 @@ class CClientUIInterface\n      */\n     ADD_SIGNALS_DECL_WRAPPER(NotifyAlertChanged, void, );\n \n-    /** A wallet has been loaded. */\n-    ADD_SIGNALS_DECL_WRAPPER(LoadWallet, void, std::unique_ptr<interfaces::Wallet>& wallet);\n-\n     /**\n      * Show progress e.g. for verifychain.\n      * resume_possible indicates shutting down now will result in the current progress action resuming upon restart."
      },
      {
        "sha": "e19ed95b9da7ab0df2dde0d69470fe365c21e09d",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 1,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=81ea66c30e2953dee24d5b127c28daa0d9452a28",
        "patch": "@@ -47,6 +47,7 @@ static const size_t OUTPUT_GROUP_MAX_ENTRIES = 10;\n \n static CCriticalSection cs_wallets;\n static std::vector<std::shared_ptr<CWallet>> vpwallets GUARDED_BY(cs_wallets);\n+static std::list<LoadWalletFn> g_load_wallet_fns GUARDED_BY(cs_wallets);\n \n bool AddWallet(const std::shared_ptr<CWallet>& wallet)\n {\n@@ -89,6 +90,13 @@ std::shared_ptr<CWallet> GetWallet(const std::string& name)\n     return nullptr;\n }\n \n+std::unique_ptr<interfaces::Handler> HandleLoadWallet(LoadWalletFn load_wallet)\n+{\n+    LOCK(cs_wallets);\n+    auto it = g_load_wallet_fns.emplace(g_load_wallet_fns.end(), std::move(load_wallet));\n+    return interfaces::MakeHandler([it] { LOCK(cs_wallets); g_load_wallet_fns.erase(it); });\n+}\n+\n static Mutex g_wallet_release_mutex;\n static std::condition_variable g_wallet_release_cv;\n static std::set<std::string> g_unloading_wallet_set;\n@@ -4562,7 +4570,12 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         }\n     }\n \n-    chain.loadWallet(interfaces::MakeWallet(walletInstance));\n+    {\n+        LOCK(cs_wallets);\n+        for (auto& load_wallet : g_load_wallet_fns) {\n+            load_wallet(interfaces::MakeWallet(walletInstance));\n+        }\n+    }\n \n     // Register with the validation interface. It's ok to do this after rescan since we're still holding locked_chain.\n     walletInstance->handleNotifications();"
      },
      {
        "sha": "954e74df05e3e18e9ab96f009d75b7ab7a887bc0",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/81ea66c30e2953dee24d5b127c28daa0d9452a28/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=81ea66c30e2953dee24d5b127c28daa0d9452a28",
        "patch": "@@ -35,6 +35,8 @@\n \n #include <boost/signals2/signal.hpp>\n \n+using LoadWalletFn = std::function<void(std::unique_ptr<interfaces::Wallet> wallet)>;\n+\n //! Explicitly unload and delete the wallet.\n //! Blocks the current thread after signaling the unload intent so that all\n //! wallet clients release the wallet.\n@@ -48,6 +50,7 @@ bool HasWallets();\n std::vector<std::shared_ptr<CWallet>> GetWallets();\n std::shared_ptr<CWallet> GetWallet(const std::string& name);\n std::shared_ptr<CWallet> LoadWallet(interfaces::Chain& chain, const WalletLocation& location, std::string& error, std::vector<std::string>& warnings);\n+std::unique_ptr<interfaces::Handler> HandleLoadWallet(LoadWalletFn load_wallet);\n \n enum class WalletCreationStatus {\n     SUCCESS,"
      }
    ]
  },
  {
    "sha": "6d6a7a8403ae923f189812edebdd95761de0e7f2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZDZhN2E4NDAzYWU5MjNmMTg5ODEyZWRlYmRkOTU3NjFkZTBlN2Yy",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-09-26T20:43:44Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-10-26T13:55:31Z"
      },
      "message": "gui: Fix duplicate wallet showing up\n\nThe slot BitcoinGUI::addWallet can be invoked twice for the same\nWalletModel due to a concurrent wallet being loaded after the first `connect()`:\n\n```cpp\n connect(wallet_controller, &WalletController::walletAdded, this, &BitcoinGUI::addWallet);\n connect(wallet_controller, &WalletController::walletRemoved, this, &BitcoinGUI::removeWallet);\n\n for (WalletModel* wallet_model : m_wallet_controller->getOpenWallets()) {\n     addWallet(wallet_model);\n```",
      "tree": {
        "sha": "0740bbb136767b7ca8896900bd13abcd4fb1e29c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0740bbb136767b7ca8896900bd13abcd4fb1e29c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d6a7a8403ae923f189812edebdd95761de0e7f2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d6a7a8403ae923f189812edebdd95761de0e7f2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6d6a7a8403ae923f189812edebdd95761de0e7f2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d6a7a8403ae923f189812edebdd95761de0e7f2/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "81ea66c30e2953dee24d5b127c28daa0d9452a28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/81ea66c30e2953dee24d5b127c28daa0d9452a28",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/81ea66c30e2953dee24d5b127c28daa0d9452a28"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 7,
      "deletions": 5
    },
    "files": [
      {
        "sha": "bbf1faa13cf990a851bd4dc9d35f6b0264d8bd16",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d6a7a8403ae923f189812edebdd95761de0e7f2/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d6a7a8403ae923f189812edebdd95761de0e7f2/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=6d6a7a8403ae923f189812edebdd95761de0e7f2",
        "patch": "@@ -632,10 +632,10 @@ void BitcoinGUI::setWalletController(WalletController* wallet_controller)\n void BitcoinGUI::addWallet(WalletModel* walletModel)\n {\n     if (!walletFrame) return;\n+    if (!walletFrame->addWallet(walletModel)) return;\n     const QString display_name = walletModel->getDisplayName();\n     setWalletActionsEnabled(true);\n     rpcConsole->addWallet(walletModel);\n-    walletFrame->addWallet(walletModel);\n     m_wallet_selector->addItem(display_name, QVariant::fromValue(walletModel));\n     if (m_wallet_selector->count() == 2) {\n         m_wallet_selector_label_action->setVisible(true);"
      },
      {
        "sha": "704a85ccc7a967b8baee157454292f116782f65d",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d6a7a8403ae923f189812edebdd95761de0e7f2/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d6a7a8403ae923f189812edebdd95761de0e7f2/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=6d6a7a8403ae923f189812edebdd95761de0e7f2",
        "patch": "@@ -39,11 +39,11 @@ void WalletFrame::setClientModel(ClientModel *_clientModel)\n     this->clientModel = _clientModel;\n }\n \n-void WalletFrame::addWallet(WalletModel *walletModel)\n+bool WalletFrame::addWallet(WalletModel *walletModel)\n {\n-    if (!gui || !clientModel || !walletModel) return;\n+    if (!gui || !clientModel || !walletModel) return false;\n \n-    if (mapWalletViews.count(walletModel) > 0) return;\n+    if (mapWalletViews.count(walletModel) > 0) return false;\n \n     WalletView *walletView = new WalletView(platformStyle, this);\n     walletView->setBitcoinGUI(gui);\n@@ -67,6 +67,8 @@ void WalletFrame::addWallet(WalletModel *walletModel)\n     });\n \n     connect(walletView, &WalletView::outOfSyncWarningClicked, this, &WalletFrame::outOfSyncWarningClicked);\n+\n+    return true;\n }\n \n void WalletFrame::setCurrentWallet(WalletModel* wallet_model)"
      },
      {
        "sha": "20fad08b0ef8e51bbcbddc4d74c208e987654ed2",
        "filename": "src/qt/walletframe.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d6a7a8403ae923f189812edebdd95761de0e7f2/src/qt/walletframe.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d6a7a8403ae923f189812edebdd95761de0e7f2/src/qt/walletframe.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.h?ref=6d6a7a8403ae923f189812edebdd95761de0e7f2",
        "patch": "@@ -36,7 +36,7 @@ class WalletFrame : public QFrame\n \n     void setClientModel(ClientModel *clientModel);\n \n-    void addWallet(WalletModel *walletModel);\n+    bool addWallet(WalletModel *walletModel);\n     void setCurrentWallet(WalletModel* wallet_model);\n     void removeWallet(WalletModel* wallet_model);\n     void removeAllWallets();"
      }
    ]
  }
]