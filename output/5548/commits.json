[
  {
    "sha": "59582c8b8d126a82a60529663c2f122df8ad7c2a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OTU4MmM4YjhkMTI2YTgyYTYwNTI5NjYzYzJmMTIyZGY4YWQ3YzJh",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2014-12-27T12:18:36Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2014-12-29T19:19:48Z"
      },
      "message": "[REST] add /rest/chaininfos",
      "tree": {
        "sha": "7c526efb7ec1fcc971bda4ddd3da14e6d73762d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c526efb7ec1fcc971bda4ddd3da14e6d73762d6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59582c8b8d126a82a60529663c2f122df8ad7c2a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59582c8b8d126a82a60529663c2f122df8ad7c2a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/59582c8b8d126a82a60529663c2f122df8ad7c2a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59582c8b8d126a82a60529663c2f122df8ad7c2a/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e5153095ea410dd07770c0327447856488bfd137",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5153095ea410dd07770c0327447856488bfd137",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5153095ea410dd07770c0327447856488bfd137"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 38,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a9d41cf367273d5ad126eda937fa864541f1eeee",
        "filename": "qa/rpc-tests/rest.py",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59582c8b8d126a82a60529663c2f122df8ad7c2a/qa/rpc-tests/rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59582c8b8d126a82a60529663c2f122df8ad7c2a/qa/rpc-tests/rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rest.py?ref=59582c8b8d126a82a60529663c2f122df8ad7c2a",
        "patch": "@@ -78,7 +78,7 @@ def run_test(self):\n \n         # check hex format response\n         hex_string = http_get_call(url.hostname, url.port, '/rest/tx/'+tx_hash+self.FORMAT_SEPARATOR+\"hex\", True)\n-        assert_equal(response.status, 200)\n+        assert_equal(hex_string.status, 200)\n         assert_greater_than(int(response.getheader('content-length')), 10)\n \n         # check block tx details\n@@ -106,5 +106,12 @@ def run_test(self):\n         for tx in txs:\n             assert_equal(tx in json_obj['tx'], True)\n \n+        #test rest bestblock\n+        bb_hash = self.nodes[0].getbestblockhash()\n+        \n+        json_string = http_get_call(url.hostname, url.port, '/rest/chaininfo.json')\n+        json_obj = json.loads(json_string)\n+        assert_equal(json_obj['bestblockhash'], bb_hash)\n+\n if __name__ == '__main__':\n     RESTTest ().main ()"
      },
      {
        "sha": "c9535c3b45445960bfb442c533a9aa92d4080d16",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 3,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59582c8b8d126a82a60529663c2f122df8ad7c2a/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59582c8b8d126a82a60529663c2f122df8ad7c2a/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=59582c8b8d126a82a60529663c2f122df8ad7c2a",
        "patch": "@@ -95,7 +95,7 @@ static bool rest_headers(AcceptedConnection* conn,\n                          bool fRun)\n {\n     vector<string> params;\n-    enum RetFormat rf = ParseDataFormat(params, strReq);\n+    const RetFormat rf = ParseDataFormat(params, strReq);\n     vector<string> path;\n     boost::split(path, params[0], boost::is_any_of(\"/\"));\n \n@@ -159,7 +159,7 @@ static bool rest_block(AcceptedConnection* conn,\n                        bool showTxDetails)\n {\n     vector<string> params;\n-    enum RetFormat rf = ParseDataFormat(params, strReq);\n+    const RetFormat rf = ParseDataFormat(params, strReq);\n \n     string hashStr = params[0];\n     uint256 hash;\n@@ -226,13 +226,39 @@ static bool rest_block_notxdetails(AcceptedConnection* conn,\n     return rest_block(conn, strReq, mapHeaders, fRun, false);\n }\n \n+static bool rest_chaininfo(AcceptedConnection* conn,\n+                                   const std::string& strReq,\n+                                   const std::map<std::string, std::string>& mapHeaders,\n+                                   bool fRun)\n+{\n+    vector<string> params;\n+    const RetFormat rf = ParseDataFormat(params, strReq);\n+    \n+    switch (rf) {\n+    case RF_JSON: {\n+        Array rpcParams;\n+        Value chainInfoObject = getblockchaininfo(rpcParams, false);\n+        \n+        string strJSON = write_string(chainInfoObject, false) + \"\\n\";\n+        conn->stream() << HTTPReply(HTTP_OK, strJSON, fRun) << std::flush;\n+        return true;\n+    }\n+    default: {\n+        throw RESTERR(HTTP_NOT_FOUND, \"output format not found (available: json)\");\n+    }\n+    }\n+    \n+    // not reached\n+    return true; // continue to process further HTTP reqs on this cxn\n+}\n+\n static bool rest_tx(AcceptedConnection* conn,\n                     const std::string& strReq,\n                     const std::map<std::string, std::string>& mapHeaders,\n                     bool fRun)\n {\n     vector<string> params;\n-    enum RetFormat rf = ParseDataFormat(params, strReq);\n+    const RetFormat rf = ParseDataFormat(params, strReq);\n \n     string hashStr = params[0];\n     uint256 hash;\n@@ -287,6 +313,7 @@ static const struct {\n       {\"/rest/tx/\", rest_tx},\n       {\"/rest/block/notxdetails/\", rest_block_notxdetails},\n       {\"/rest/block/\", rest_block_extended},\n+      {\"/rest/chaininfo\", rest_chaininfo},\n       {\"/rest/headers/\", rest_headers},\n };\n "
      }
    ]
  },
  {
    "sha": "2c0f901ea90e3efab5e15abeba011597cfdd92c1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYzBmOTAxZWE5MGUzZWZhYjVlMTVhYmViYTAxMTU5N2NmZGQ5MmMx",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2014-12-29T19:26:47Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2014-12-29T19:27:46Z"
      },
      "message": "[REST] rest/chaininfos add documentation",
      "tree": {
        "sha": "5767f9e0396eea38f8ff25ee7efda0af2a8860dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5767f9e0396eea38f8ff25ee7efda0af2a8860dc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c0f901ea90e3efab5e15abeba011597cfdd92c1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c0f901ea90e3efab5e15abeba011597cfdd92c1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2c0f901ea90e3efab5e15abeba011597cfdd92c1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c0f901ea90e3efab5e15abeba011597cfdd92c1/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "59582c8b8d126a82a60529663c2f122df8ad7c2a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59582c8b8d126a82a60529663c2f122df8ad7c2a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/59582c8b8d126a82a60529663c2f122df8ad7c2a"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 13,
      "deletions": 1
    },
    "files": [
      {
        "sha": "23154ee903ec54a40172bd6e95118cdc044db671",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c0f901ea90e3efab5e15abeba011597cfdd92c1/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c0f901ea90e3efab5e15abeba011597cfdd92c1/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=2c0f901ea90e3efab5e15abeba011597cfdd92c1",
        "patch": "@@ -10,6 +10,8 @@ Supported API\n Given a transaction hash,\n Returns a transaction, in binary, hex-encoded binary or JSON formats.\n \n+For full TX query capability, one must enable the transaction index via \"txindex=1\" command line / configuration option.\n+\n `GET /rest/block/BLOCK-HASH.{bin|hex|json}`\n `GET /rest/block/notxdetails/BLOCK-HASH.{bin|hex|json}`\n \n@@ -20,7 +22,17 @@ The HTTP request and response are both handled entirely in-memory, thus making m\n \n With the /notxdetails/ option JSON response will only contain the transaction hash instead of the complete transaction details. The option only affects the JSON response.\n \n-For full TX query capability, one must enable the transaction index via \"txindex=1\" command line / configuration option.\n+`GET /rest/chaininfo.json`\n+\n+Returns various state info regarding block chain processing.\n+Only supports JSON as output format.\n+* chain : (string) current network name as defined in BIP70 (main, test, regtest)\n+* blocks : (numeric) the current number of blocks processed in the server\n+* headers : (numeric) the current number of headers we have validated\n+* bestblockhash : (string) the hash of the currently best block\n+* difficulty : (numeric) the current difficulty\n+* verificationprogress : (numeric) estimate of verification progress [0..1]\n+* chainwork : (string) total amount of work in active chain, in hexadecimal\n \n Risks\n -------------"
      }
    ]
  }
]